export NAME="tecmake"
export STATUS=
export URL=http://webserver2.tecgraf.puc-rio.br/tecmake/
export BASENAME=tecmake
export DESCRIPTION="tecmake is essentially a general GNU makefile with a series of predefined targets and rules with the purpose of providing those in charge of developing libraries and applications the necessary tools so that versions for different platforms can be generated homogeneously. In other words, the tecmake user does not need to create a complete makefile nor be concerned with the current platform to create a library or application."
export CATEGORY=development
export TYPE=application
export VERSION=4
export VERSIONDATE=20150827
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYRIGHT
export LICENSETYPE=MIT
export DOWNLOADURL="http://webserver2.tecgraf.puc-rio.br/tecmake/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://webserver2.tecgraf.puc-rio.br/tecmake/download/tecmake.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/tecmake.tar.gz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION
cat > config.mak << EOF
EOF
wl-showstatus build &&
make -f tecmake.mak TEC_UNAME=mingw4$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo _64; fi) EXTRAINCS="-mconsole" NO_DEPEND=1 &&
    echo OK

#$COMSPEC /c "tecmake.bat mingw4$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo _64; fi)" &&
#    echo OK

  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
wl-showstatus configure &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#wl-showstatus configure &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



