export NAME="ugrep"
export STATUS=
export URL=https://github.com/Genivia/ugrep
export BASENAME=ugrep
export DESCRIPTION="ugrep file pattern searcher - a more powerful, ultra fast, user-friendly, compatible grep replacement. Includes a TUI, Google-like Boolean search with AND/OR/NOT, fuzzy search, hexdumps, searches (nested) archives (zip, 7z, tar, pax, cpio), compressed files (gz, Z, bz2, lzma, xz, lz4, zstd, brotli), pdfs, docs, and more"
export CATEGORY=dataprocessing
export TYPE=application
#export VERSION=7.3.0
#export VERSIONDATE=20250331
export VERSION=7.4.0
export VERSIONDATE=20250423
wl-showstatus --package-version
export DEPENDENCIES=pcre2,zlib,libbz2,xz,liblz4,zstd,brotli,bzip3
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/Genivia/ugrep/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/Genivia/ugrep/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix lzma/C/viizip.h (version >= 7.3.0)
patch -ulbf lzma/C/viizip.h << EOF
@@ -47,4 +47,6 @@
 /* POSIX read() and write() return type is ssize_t */
+#ifndef __MINGW32__
 typedef int ssize_t;
 #endif
+#endif

EOF
# fix src/ugrep.hpp (version >= 7.3.0)
patch -ulbf src/ugrep.hpp << EOF
@@ -99,3 +99,5 @@
 // POSIX read() and write() return type is ssize_t
+#ifndef __MINGW32__
 typedef int ssize_t;
+#endif

@@ -154,4 +156,14 @@
 {
+#ifdef __MINGW32__
+  if (ptr == NULL)
+    return EINVAL;
+  *ptr = NULL;
+  const char *env = getenv(name);
+  if (env != NULL && (*ptr = strdup(env)) == NULL)
+    return ENOMEM;
+  return 0;
+#else
   size_t len;
   return _dupenv_s(ptr, &len, name);
+#endif
 }
EOF
# fix missing WinMain
echo "int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) { return main(__argc, (const char**)__argv); }" >> src/ugrep-indexer.cpp
# fix src/ugrep.cpp (version >= 7.3.0)
patch -ulbf src/ugrep.cpp << EOF
@@ -4728,3 +4728,9 @@
 // ugrep main() for Windows to support wide string arguments and globbing
+#ifdef __MINGW32__
+int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
+#define argc __argc
+#define wargv __wargv
+#else
 int wmain(int argc, const wchar_t **wargv)
+#endif
 #else
EOF
wl-showstatus configure &&
 #wl-showstatus preconfigure &&
 #mkdir -p m4 &&
 ##libtoolize -f -i -c &&
 ##intltoolize -f -c &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 ## allow building shared libraries when using clang
 #if ${CC:-gcc} --version|grep -q "^clang" && ! ${CC:-gcc} --help|grep auto-import; then
 # sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" configure
 # #sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" $(find -name configure)
 #fi &&
 ## fix confusion between MSVC and clang
 #if ${CC:-gcc} --version|grep -q "^clang"; then
 # sed -i.bak2 -e "s/\b\(cl\)\(\*\)/\1.exe\2/g; s/\(ld_shlibs\)=no/\1yes/" configure
 #fi &&
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-pcre2=$MINGWPREFIX --with-zlib=$MINGWPREFIX --with-lz4=$MINGWPREFIX --with-zstd=$MINGWPREFIX --with-brotli=$MINGWPREFIX --with-bzip3=$MINGWPREFIX CFLAGS="-DOS_WIN" CXXFLAGS="-DOS_WIN" LDFLAGS="-Wl,--as-needed" LIBS="-lws2_32" &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
 #( make install-strip || ( make install && strip $INSTALLPREFIX/bin/*.{dll,exe} )) &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



