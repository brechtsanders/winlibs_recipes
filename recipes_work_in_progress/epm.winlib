export NAME="EPM"
export STATUS=
export URL=http://michaelrsweet.github.io/epm/
#export URL=https://github.com/michaelrsweet/epm
export BASENAME=epm
export DESCRIPTION="EPM is an open source UNIX software and file packaging program that generates distribution archives from a list of files. EPM provides a complete, cross-platform software distribution solution for applications. EPM generates both native and \"portable\" script-based distribution packages complete with installation and removal scripts and standard install/uninstall GUIs. The installers can be customized with product logos, \"readme\" files, and click-wrap licenses as desired."
export CATEGORY=
export TYPE=application
#export VERSION=4.3
#export VERSIONDATE=20170329
#export VERSION=4.4
#export VERSIONDATE=20171011
#export VERSION=4.5
#export VERSIONDATE=20200314
export VERSION=4.5.1
export VERSIONDATE=20201118
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/michaelrsweet/epm/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/michaelrsweet/epm/releases/download/release-$VERSION/epm-$VERSION-source.tar.bz2
#export DOWNLOADSOURCEURL=https://github.com/michaelrsweet/epm/releases/download/v$VERSION/epm-$VERSION-source.tar.gz
export DOWNLOADSOURCEURL=https://github.com/michaelrsweet/epm/releases/download/v$VERSION/epm-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xfj $TARBALLDIR/$BASENAME/epm-$VERSION-source.tar.bz2
#mkdir -p $BASENAME-$VERSION
#tar xfz $TARBALLDIR/$BASENAME/epm-$VERSION-source.tar.gz -C$BASENAME-$VERSION
tar xfz $TARBALLDIR/$BASENAME/epm-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix/sys
cat > winfix/pwd.h << EOF
typedef int uid_t;
EOF
cat > winfix/grp.h << EOF
typedef int gid_t;
EOF
cat > winfix/sys/utsname.h << EOF
EOF
touch winfix/sys/wait.h
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE* COPYRIGHT* configure* CMakeLists.txt Makefile GNUmakefile
wl-showstatus configure &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$(pwd)/winfix" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



