#export NAME="Geeqie"
#export STATUS=
#export URL=https://www.mankier.com/1/geeqie
#export BASENAME=geeqie
#export DESCRIPTION="GTK based multiformat image viewer"
#export CATEGORY=graphics
#export TYPE=application
##export VERSION=1.5
##export VERSIONDATE=20200829
##export VERSION=1.5.1
##export VERSIONDATE=20201103
##export VERSION=1.6
##export VERSIONDATE=20201103
##export VERSION=1.7.1
##export VERSIONDATE=20220117
##export VERSION=1.7.2
##export VERSIONDATE=20220125
#export VERSION=1.7.3
#export VERSIONDATE=20220412
#wl-showstatus --package-version
#export DEPENDENCIES=gettext,gtk3,libjpeg,libtiff,clutter,clutter-gtk,libchamplain,lua,mman-win32
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/BestImageViewer/geeqie/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/BestImageViewer/geeqie/releases/download/v$VERSION/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/BestImageViewer/geeqie/archive/refs/tags/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
##tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix missing files
#mkdir -p winfix
#cat > winfix/pwd.h << EOF
#EOF
#cat > winfix/grp.h << EOF
#EOF
## fix src/ui_fileops.c (version >= 1.5)
#patch -ulbf src/ui_fileops.c << EOF
#@@ -317,2 +317,5 @@
# {
#+#ifdef _WIN32
#+       return FALSE;
#+#else
#        gchar *sl;
#@@ -326,2 +329,3 @@
#        return ret;
#+#endif
# }
#@@ -351,2 +355,5 @@
# {
#+#ifdef _WIN32
#+       return FALSE;
#+#else
#        struct stat st;
#@@ -354,2 +361,3 @@
#        return (lstat_utf8(s, &st) && S_ISLNK(st.st_mode));
#+#endif
# }
#@@ -427,2 +435,5 @@
# {
#+#ifdef _WIN32
#+       return FALSE;
#+#else
#        gchar *sl;
#@@ -442,2 +453,3 @@
#        return ret;
#+#endif
# }
#@@ -452,3 +464,7 @@
#        sl = path_from_utf8(s);
#+#ifdef _WIN32
#+       ret = (mkdir(sl) == 0);
#+#else
#        ret = (mkdir(sl, mode) == 0);
#+#endif
#        g_free(sl);
#@@ -492,2 +508,5 @@
#                        {
#+#ifdef _WIN32
#+                       ret = FALSE;
#+#else
#                        ret = chown(tl, st.st_uid, st.st_gid);
#@@ -502,2 +521,3 @@
#                         }
#+#endif
#                        }
#@@ -553,2 +573,3 @@
#        * realpath() instead. */
#+#ifndef _WIN32
#        struct stat st;
#@@ -609,2 +630,3 @@
#        orig_copy:
#+#endif
#
#EOF
## fix src/ui_fileops.c (version >= 1.6)
#patch -ulbf src/ui_fileops.c << EOF
#@@ -346,3 +346,7 @@
#        sl = path_from_utf8(s);
#+#ifdef _WIN32
#+       ret = (stat(sl, st) == 0);
#+#else
#        ret = (lstat(sl, st) == 0);
#+#endif
#        g_free(sl);
#EOF
## fix src/ui_misc.c (version >= 1.5)
#patch -ulbf src/ui_misc.c << EOF
#@@ -38,3 +38,6 @@
#
#+#ifdef _WIN32
#+#else
# #include <langinfo.h>
#+#endif
#
#@@ -1049,2 +1052,3 @@
#
#+#ifndef _WIN32
#        date_format = nl_langinfo(D_FMT);
#@@ -1073,2 +1077,3 @@
#        else
#+#endif
#                {
#EOF
## fix missing strndup in src/ui_utildlg.c (version >= 1.5)
#mv src/ui_utildlg.c src/ui_utildlg.c.bak
#cat > src/ui_utildlg.c << EOF
##include <stdlib.h>
##include <string.h>
#char* strndup (const char *str, size_t maxlen)
#{
#  int l = strnlen(str, maxlen);
#  char* s = (char*)malloc(l + 1);
#  memcpy(s, str, l);
#  s[l] = 0;
#  return s;
#}
#EOF
#cat src/ui_utildlg.c.bak >> src/ui_utildlg.c
## fix src/pan-view/pan-util.c (version >= 1.5)
#patch -ulbf src/pan-view/pan-util.c << EOF
#@@ -21,2 +21,6 @@
#
#+#ifdef _WIN32
#+#define _POSIX_THREAD_SAFE_FUNCTIONS
#+#include <time.h>
#+#endif
# #include "pan-util.h"
#@@ -101,3 +105,5 @@
#                case PAN_DATE_LENGTH_MONTH:
#-#if __GLIBC_PREREQ(2, 27)
#+#ifdef _WIN32
#+                       format = "%B %Y";
#+#elif __GLIBC_PREREQ(2, 27)
#                        format = "%OB %Y";
#@@ -150,2 +156,5 @@
# {
#+#ifdef _WIN32
#+       return FALSE;
#+#else
#        gchar *sl;
#@@ -197,2 +206,3 @@
#        return ret;
#+#endif
# }
#@@ -201,4 +211,5 @@
# {
#-       struct stat st;
#        const gchar *n;
#+#ifndef _WIN32
#+       struct stat st;
#
#@@ -215,2 +226,3 @@
#        if (S_ISLNK(st.st_mode) && (ignore_symlinks || pan_is_link_loop(s))) return TRUE;
#+#endif
#
#EOF
## fix src/exif-common.c (version >= 1.7.1)
#patch -ulbf src/exif-common.c << EOF
#@@ -1161,5 +1161,11 @@
#
#+#ifdef S_ISUID
#        if (m & S_ISUID) mb |= 4;
#+#endif
#+#ifdef S_ISGID
#        if (m & S_ISGID) mb |= 2;
#+#endif
#+#ifdef S_ISVTX
#        if (m & S_ISVTX) mb |= 1;
#+#endif
#
#EOF
### fix missing po/Makefile.in.in
##sed -i.bak -e "s?\(po/Makefile\).in\b?\1?" configure.ac &&
##touch po/Makefile.in.in
## don't abort on warnings
#sed -i.bak -e "s/-Werror//" configure.ac
#wl-showstatus configure &&
# intltoolize -f -c &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-gtk3 --disable-doxygen-doc CFLAGS="-I$(pwd)/winfix -I$MINGWPREFIX/include/mman-win32" CXXFLAGS="-I$(pwd)/winfix -I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
# ## fix building DLLs
# #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Geeqie"
export STATUS=
export URL=https://www.mankier.com/1/geeqie
export BASENAME=geeqie
export DESCRIPTION="GTK based multiformat image viewer"
export CATEGORY=graphics
export TYPE=application
#export VERSION=2.0
#export VERSIONDATE=20220809
#export VERSION=2.0.1
#export VERSIONDATE=20220813
#export VERSION=2.1
#export VERSIONDATE=20230617
#export VERSION=2.2
#export VERSIONDATE=20240125
export VERSION=2.4
export VERSIONDATE=20240323
wl-showstatus --package-version
export DEPENDENCIES=gettext,gtk3,libjpeg,libtiff,clutter,clutter-gtk,libchamplain,lua,mman-win32
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/BestImageViewer/geeqie/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/BestImageViewer/geeqie/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix
cat > winfix/pwd.h << EOF
EOF
cat > winfix/grp.h << EOF
EOF
#mkdir -p winfix/sys
#echo "#include <winsock2.h>" > winfix/sys/socket.h
# fix src/exif-common.c (version >= 1.7.1)
patch -ulbf src/exif-common.c << EOF
@@ -1161,5 +1161,11 @@

+#ifdef S_ISUID
        if (m & S_ISUID) mb |= 4;
+#endif
+#ifdef S_ISGID
        if (m & S_ISGID) mb |= 2;
+#endif
+#ifdef S_ISVTX
        if (m & S_ISVTX) mb |= 1;
+#endif

EOF
# fix src/filedata.c (version >= 2.0)
patch -ulbf src/filedata.c << EOF
@@ -435,2 +435,3 @@

+#ifndef _WIN32
        user = getpwuid(st->st_uid);
@@ -455,2 +456,3 @@

+#endif
        fd->sym_link = get_symbolic_link(path_utf8);
@@ -515,3 +517,3 @@
                        struct tm time_str;
-                       uint year, month, day, hour, min, sec;
+                       unsigned int year, month, day, hour, min, sec;

@@ -553,3 +555,3 @@
                        struct tm time_str;
-                       uint year, month, day, hour, min, sec;
+                       unsigned int year, month, day, hour, min, sec;

@@ -1371,2 +1373,5 @@

+#ifdef _WIN32
+       stat_func = stat;
+#else
        if (follow_symlinks)
@@ -1375,2 +1380,3 @@
                stat_func = lstat;
+#endif

EOF
# fix src/image-load.c (version >= 2.0)
patch -ulbf src/image-load.c << EOF
@@ -1059,3 +1059,7 @@
                pathl = path_from_utf8(il->fd->path);
+#ifdef O_NONBLOCK
                load_fd = open(pathl, O_RDONLY | O_NONBLOCK);
+#else
+               load_fd = open(pathl, O_RDONLY);
+#endif
                g_free(pathl);
EOF
# fix src/image-load.c (version >= 2.0)
patch -ulbf src/image-load.c << EOF
@@ -1059,3 +1059,7 @@
                pathl = path_from_utf8(il->fd->path);
+#ifdef O_NONBLOCK
                load_fd = open(pathl, O_RDONLY | O_NONBLOCK);
+#else
+               load_fd = open(pathl, O_RDONLY);
+#endif
                g_free(pathl);
EOF
# fix missing uint in src/image_load_dds.c (version >= 2.0)
sed -i.bak -e "s/\buint\b/unsigned int/g" src/image_load_dds.c
# fix src/image_load_jpeg.c (version >= 2.0)
patch -ulbf src/image_load_jpeg.c << EOF
@@ -58,3 +58,5 @@
        struct jpeg_error_mgr pub;
+#ifndef _WIN32
        sigjmp_buf setjmp_buffer;
+#endif
         GError **error;
@@ -167,3 +169,5 @@

+#ifndef _WIN32
        siglongjmp (errmgr->setjmp_buffer, 1);
+#endif

@@ -314,2 +318,3 @@

+#ifndef _WIN32
        if (setjmp(jerr.setjmp_buffer))
@@ -323,2 +328,3 @@
                }
+#endif

EOF
# fix src/layout_util.c (version >= 2.0)
patch -ulbf src/layout_util.c << EOF
@@ -63,3 +63,5 @@

+#ifndef _WIN32
 #include <sys/wait.h>
+#endif
 #include <gdk/gdkkeysyms.h> /* for keyboard values */
EOF
# fix src/cache.h (version >= 2.0)
sed -i.bak -e "s/^typedef .* CacheData;/#include <windows.h>\n#define CacheData GEEQIE_CacheData\n&/" src/cache.h
# fix src/misc.c (version >= 2.0)
patch -ulbf src/misc.c << EOF
@@ -25,3 +25,7 @@
 #include <errno.h>
+#ifdef _WIN32
+#include <windows.h>
+#else
 #include <langinfo.h>
+#endif
 #include <locale.h>
@@ -292,21 +296,21 @@
                case 1:
-               abday = g_strdup(nl_langinfo(ABDAY_1));
+               abday = g_strdup("Sun");
                break;
                case 2:
-               abday = g_strdup(nl_langinfo(ABDAY_2));
+               abday = g_strdup("Mon");
                break;
                case 3:
-               abday = g_strdup(nl_langinfo(ABDAY_3));
+               abday = g_strdup("Tue");
                break;
                case 4:
-               abday = g_strdup(nl_langinfo(ABDAY_4));
+               abday = g_strdup("Wed");
                break;
                case 5:
-               abday = g_strdup(nl_langinfo(ABDAY_5));
+               abday = g_strdup("Thu");
                break;
                case 6:
-               abday = g_strdup(nl_langinfo(ABDAY_6));
+               abday = g_strdup("Fri");
                break;
                case 7:
-               abday = g_strdup(nl_langinfo(ABDAY_7));
+               abday = g_strdup("Sat");
                break;
@@ -381,3 +385,9 @@
 {
+#ifdef _WIN32
+   SYSTEM_INFO sysinfo;
+   GetSystemInfo(&sysinfo);
+   return sysinfo.dwNumberOfProcessors;
+#else
     return sysconf(_SC_NPROCESSORS_ONLN);
+#endif
 }
EOF
# fix src/remote.c (version >= 2.0)
patch -ulbf src/remote.c << EOF
@@ -42,4 +42,8 @@

+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <sys/socket.h>
 #include <sys/un.h>
+#endif
 #include <signal.h>
@@ -248,2 +252,6 @@
 {
+#ifdef _WIN32
+       log_printf("Unix sockets not supported on Windows while opening: %s\\n", path);
+       return NULL;
+#else
        RemoteConnection *rc;
@@ -288,2 +296,3 @@
        return rc;
+#endif
 }
@@ -301,2 +310,6 @@
 {
+#ifdef _WIN32
+       log_printf("Unix sockets not supported on Windows while opening: %s\\n", path);
+       return NULL;
+#else
        RemoteConnection *rc;
@@ -328,2 +341,3 @@
        return rc;
+#endif
 }
@@ -339,2 +353,6 @@
 {
+#ifdef _WIN32
+       log_printf("remote client disabled on Windows");
+       return FALSE;
+#else
        struct sigaction new_action, old_action;
@@ -422,2 +440,3 @@
        return ret;
+#endif
 }
EOF
# fix src/ui_fileops.c (version >= 2.0)
patch -ulbf src/ui_fileops.c << EOF
@@ -470,3 +470,7 @@
        sl = path_from_utf8(s);
+#ifdef _WIN32
+       ret = (mkdir(sl) == 0);
+#else
        ret = (mkdir(sl, mode) == 0);
+#endif
        g_free(sl);
EOF
# fix src/ui_misc.c (version >= 2.0)
patch -ulbf src/ui_misc.c << EOF
@@ -36,3 +36,5 @@

+#ifndef _WIN32
 #include <langinfo.h>
+#endif

@@ -1049,3 +1051,7 @@

+#ifdef _WIN32
+       date_format = "";
+#else
        date_format = nl_langinfo(D_FMT);
+#endif

EOF
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS
## fix location of Perl
#sed -i.bak -e "s?'perl'?'$(cygpath -w $PERLDIR/bin/perl.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix detection of Python
#sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix missing gio-unix
##sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dc_args="-I$(cygpath -m $PWD)/winfix -I$(cygpath -m $MINGWPREFIX/include/mman-win32) -D_POSIX_THREAD_SAFE_FUNCTIONS" -Dcpp_args="-I$(cygpath -m $PWD)/winfix -I$(cygpath -m $MINGWPREFIX/include/mman-win32) -D_POSIX_THREAD_SAFE_FUNCTIONS" -Dcpp_link_args="-Wl,--as-needed -lmman -liberty" . build_both &&
 ## fix slash/backslash path issue when calling Python from Ninja
 #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 ## fix Python path issues in meson_exe
 #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
 ## fix executing shell scripts
 #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib GETTEXTDATADIR=$MINGWPREFIX/share/gettext ninja -Cbuild_both install &&
    echo OK && find . -name '*.a'
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



