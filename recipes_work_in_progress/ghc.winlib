export NAME="Glasgow Haskell Compiler"
export STATUS=
export URL=http://www.haskell.org/ghc/
export BASENAME=ghc
export DESCRIPTION="GHC is a state-of-the-art, open source, compiler and interactive environment for the functional language Haskell."
export CATEGORY=development
export TYPE=application
#export VERSION=6.10.4
#export VERSIONDATE=20190902
#export VERSION=7.2.2
#export VERSIONDATE=20111130
#export VERSION=7.4.1
#export VERSIONDATE=20120303
#export VERSION=7.4.2
#export VERSIONDATE=20120610
#export VERSION=7.6.1
#export VERSIONDATE=20120907
#export VERSION=7.6.2
#export VERSIONDATE=20130130
#export VERSION=7.6.3
#export VERSIONDATE=20130531
####Can't work out target platform
#export VERSION=7.8.1
#export VERSIONDATE=20140408
#export VERSION=7.8.2
#export VERSIONDATE=20140412
#export VERSION=7.8.3
#export VERSIONDATE=20140711
#export VERSION=7.8.4
#export VERSIONDATE=20141223
#export VERSION=7.10.1
#export VERSIONDATE=20150327
#export VERSION=7.10.2
#export VERSIONDATE=20150722
#export VERSION=7.10.3
#export VERSIONDATE=20151203
#export VERSION=7.10.3a
#export VERSIONDATE=20151210
#export VERSION=7.10.3b
#export VERSIONDATE=20151222
#export VERSION=7.10.3
#export VERSIONDATE=20190516
#export VERSION=8.0.1
#export VERSIONDATE=20160513
#export VERSION=8.0.2
#export VERSIONDATE=20170106
#export VERSION=8.2.2
#export VERSIONDATE=20171122
#export VERSION=8.4.1
#export VERSIONDATE=20180309
#export VERSION=8.4.2
#export VERSIONDATE=20180421
#export VERSION=8.4.3
#export VERSIONDATE=20180530
#export VERSION=8.4.4
#export VERSIONDATE=20181016
#export VERSION=8.6.1
#export VERSIONDATE=20180923
#export VERSION=8.6.2
#export VERSIONDATE=20181104
#export VERSION=8.6.3
#export VERSIONDATE=20181209
#export VERSION=8.6.4
#export VERSIONDATE=20190311
#export VERSION=8.6.5
#export VERSIONDATE=20190519
#export VERSION=8.8.1
#export VERSIONDATE=20190824
#export VERSION=8.8.2
#export VERSIONDATE=20200119
#export VERSION=8.8.4
#export VERSIONDATE=20200726
#export VERSION=8.10.1
#export VERSIONDATE=20200322
####configure: error: GHC is required.
####To do: use binary from https://www.haskell.org/ghc/download_ghc_7_10_3#windows
####To do: use binary from https://www.haskell.org/ghc/download_ghc_8_4_2#windows
#export VERSION=8.10.2
#export VERSIONDATE=20201121
#export VERSION=8.10.3
#export VERSIONDATE=20201225
#export VERSION=8.10.4
#export VERSIONDATE=20210308
export VERSION=9.0.1
export VERSIONDATE=20210205
####configure: error: Cannot find matching ghc-pkg
wl-showstatus --package-version
export DEPENDENCIES=libffi,gmp
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=sphinx
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="http://www.haskell.org/ghc/download ghc- -src.tar.bz2"
export DOWNLOADURL="http://www.haskell.org/ghc/dist/ ghc- -src.tar.bz2"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
wl-wait4deps
#export DOWNLOADSOURCEURL=http://www.haskell.org/ghc/dist/$(echo $VERSION|sed -e "s/[a-z]*$//")/ghc-$VERSION-src.tar.bz2
#export DOWNLOADSOURCEURL=http://www.haskell.org/ghc/dist/$(echo $VERSION|sed -e "s/[a-z]*$//")/ghc-$VERSION-src.tar.xz
export DOWNLOADSOURCEURL="http://www.haskell.org/ghc/dist/$(echo $VERSION|sed -e "s/[a-z]*$//")/ghc-$VERSION-src.tar.xz https://downloads.haskell.org/~ghc/$VERSION/ghc-$VERSION-$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo x86_64; else echo i386; fi)-unknown-mingw32.tar.xz"
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#tar xfj $TARBALLDIR/$BASENAME/ghc-$VERSION-src.tar.bz2
tar xfJ $TARBALLDIR/$BASENAME/ghc-$VERSION-src.tar.xz
cd $BASENAME-$(echo $VERSION|sed -e "s/[a-z]*$//")
# unzip prebuilt binary if needed
mkdir -p prebuiltbinary
ghc --version &> /dev/null || tar xfJ $TARBALLDIR/$BASENAME/ghc-$VERSION-$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo x86_64; else echo i386; fi)-unknown-mingw32.tar.xz -Cprebuiltbinary --strip-components=1 --exclude=ghc-$VERSION/mingw
# fix configure
#patch -ulbf configure << EOF
#--- configure  2013-01-27 15:01:46 +0100
#+++ configure  2013-01-30 08:14:36 +0100
#@@ -3639,2 +3639,5 @@
#             echo "Target platform inferred as: $target"
#+        elif test "$build_os" = "mingw32"
#+        then
#+            target=mingw32
#         else
#EOF
# fix configure for MinGW
sed -i.bak -e "s/set_up_tarballs$/#&/; s?\(mingwbin=\).*?\1$(dirname $(which gcc))/?; s?\(mingw_bin_prefix=\).*?\1$(dirname $(which gcc))/?; s?\\\$topdir/../\(\${mingw_bin_prefix}\)?\1?g" configure
#sed -i.bak -e "s/set_up_tarballs$/#&/; s?\(mingwbin=\).*?\1$(dirname $(which gcc))/?; s?\(mingw_bin_prefix=\).*?\1$(dirname $(which gcc))/?; s?\\\$topdir/../\(\${mingw_bin_prefix}\)?\1?g; s?\(CC_STAGE0=\).*?\1$(which gcc.exe)?" configure
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-hc-boot &&
#PATH=$(pwd)/prebuiltbinary/bin:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-system-libffi --enable-distro-toolchain --disable-tarballs-autodownload CC_STAGE0=$(which gcc.exe) CC=$(which gcc.exe) &&
PATH=$(pwd)/prebuiltbinary/bin:$PERLDIR/bin:$PERLDIR/../c/bin:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-system-libffi --enable-distro-toolchain --disable-tarballs-autodownload CC_STAGE0=$(which gcc.exe) AR_STAGE0=$(which ar.exe) LD_STAGE0=$(which ld.exe) CC=$(which gcc.exe) &&
 wl-showstatus build &&
 make -j1 &&
 wl-showstatus build-install &&
 make -j1 install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$(echo $VERSION|sed -e "s/[a-z]*$//")



