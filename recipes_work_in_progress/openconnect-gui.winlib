export NAME="OpenConnect-gui"
export STATUS=
export URL=https://openconnect.github.io/openconnect-gui/
export BASENAME=openconnect-gui
export DESCRIPTION="OpenConnect is a VPN client, that utilizes TLS and DTLS for secure session establishment, and is compatible with the CISCO AnyConnect SSL VPN protocol. OpenConnect-gui is the graphical client of OpenConnect for the Microsoft Windows system (or any other system Qt and OpenConnect run at)."
export CATEGORY=security
export TYPE=application
export VERSION=1.5.3
export VERSIONDATE=20201216
wl-showstatus --package-version
export DEPENDENCIES=stoken
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/openconnect/openconnect-gui/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/openconnect/openconnect-gui/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix dependancy locations
sed -i.bak -e "s?\${CMAKE_BINARY_DIR}/external/lib/\([^ ]*\.a\)?$(cygpath -m $MINGWPREFIX/lib/)\1?g; s?\${CMAKE_BINARY_DIR}/external/lib/\([^ ]*\.dll\)?$(cygpath -m $MINGWPREFIX/bin/)\1?g; s?\${CMAKE_BINARY_DIR}/external/lib/\([^ ]*\.exe\)?$(cygpath -m $MINGWPREFIX/sbin/)\1?g" CMake/Includes/ProjectExternals_openconnect.cmake
# fix dependancy versions
sed -i.bak2 -e "s?libhogweed-[0-9]*\.dll?$(basename $(ls -1 $MINGWPREFIX/bin/libhogweed*.dll|sort -V|tail -n1))?g" CMake/Includes/ProjectExternals_openconnect.cmake
sed -i.bak3 -e "s?libnettle-[0-9]*\.dll?$(basename $(ls -1 $MINGWPREFIX/bin/libnettle*.dll|sort -V|tail -n1))?g" CMake/Includes/ProjectExternals_openconnect.cmake
mkdir -p build_win &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 #cp -u build_win/external/src/vpnc-scripts-master/*.js build_win/external/lib/ &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



