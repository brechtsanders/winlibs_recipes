export NAME="Intel(R) Implicit SPMD Program Compiler"
export STATUS=
export URL=https://ispc.github.io/
export BASENAME=ispc
export DESCRIPTION="An open-source compiler for high-performance SIMD programming on the CPU"
export CATEGORY=development
export TYPE=application
#export VERSION=1.14.1
#export VERSIONDATE=20201026
#export VERSION=1.15.0
#export VERSIONDATE=20201219
#export VERSION=1.16.0
#export VERSIONDATE=20210612
#export VERSION=1.16.1
#export VERSIONDATE=20210716
#export VERSION=1.17.0
#export VERSIONDATE=20220115
#export VERSION=1.18.0
#export VERSIONDATE=20220506
#export VERSION=1.18.1
#export VERSIONDATE=20221025
export VERSION=1.19.0
export VERSIONDATE=20230228
####builtins/builtins-c-cpu.cpp:81:10: fatal error: 'stdio.h' file not found
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/ispc/ispc/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/ispc/ispc/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix check_isa.cpp (version >= 1.14.1)
patch -ulbf check_isa.cpp << EOF
@@ -65,3 +65,3 @@
 static bool __os_has_avx_support() {
-#if defined(HOST_IS_WINDOWS)
+#if defined(HOST_IS_WINDOWS) && !defined(__MINGW32__)
     // Check if the OS will save the YMM registers
@@ -80,3 +80,3 @@
 static bool __os_has_avx512_support() {
-#if defined(HOST_IS_WINDOWS)
+#if defined(HOST_IS_WINDOWS) && !defined(__MINGW32__)
     // Check if the OS saves the XMM, YMM and ZMM registers, i.e. it supports AVX2 and AVX512.
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DX86_ENABLED:BOOL=ON -DISPC_NO_DUMPS:BOOL=OFF -DARM_ENABLED:BOOL=OFF -DISPC_INCLUDE_EXAMPLES:BOOL=OFF -DISPC_INCLUDE_TESTS:BOOL=OFF -DISPC_INCLUDE_BENCHMARKS:BOOL=OFF -DCMAKE_PREFIX_PATH:FILEPATH=$MINGWPREFIX/share/llvm -DPython3_EXECUTABLE:PATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_win &&
 #-DWASM_ENABLED:BOOL=OFF -DGENX_ENABLED:BOOL=OFF 
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####See also: https://github.com/ispc/ispc/issues/1413



