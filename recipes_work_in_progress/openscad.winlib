export NAME="OpenSCAD"
export STATUS=
export URL=http://www.openscad.org/
export BASENAME=openscad
export DESCRIPTION="OpenSCAD is a software for creating solid 3D CAD objects."
export CATEGORY=graphics
export TYPE=application
#export VERSION=2015.03-2
#export VERSIONDATE=20160127
#export VERSION=2015.03-3
#export VERSIONDATE=20180903
export VERSION=2021.01
export VERSIONDATE=20211206
wl-showstatus --package-version
export DEPENDANCIES=eigen,glew,fontconfig,freetype2,harfbuzz,libzip,glib2,gettext,qt,boost,cgal,lib3mf
export OPTIONALDEPENDANCIES=opencsg
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.openscad.org/downloads.html openscad- .src.tar.gz"
export DOWNLOADURL="https://files.openscad.org/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://files.openscad.org/openscad-$VERSION.src.tar.gz
export DOWNLOADSOURCEURL=https://files.openscad.org/openscad-$VERSION.src.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/openscad-$VERSION.src.tar.gz
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
#scripts/check-dependencies.sh
#
#source scripts/setenv-unibuild.sh
#scripts/uni-build-dependencies.sh
#
#source scripts/setenv-mingw-xbuild.sh $(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi)
#scripts/mingw-x-build-dependencies.sh $(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi)
#scripts/release-common.sh mingw$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi)
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
mkdir -p build_win &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



