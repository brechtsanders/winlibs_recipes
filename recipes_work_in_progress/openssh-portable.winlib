export NAME="Portable OpenSSH"
export STATUS=
#export URL=https://github.com/openssh/openssh-portable
export URL=https://github.com/PowerShell/openssh-portable
export BASENAME=openssh-portable
export DESCRIPTION="OpenSSH is a complete implementation of the SSH protocol (version 2) for secure remote login, command execution and file transfer. It includes a client ssh and server sshd, file transfer utilities scp and sftp as well as tools for key generation (ssh-keygen), run-time key storage (ssh-agent) and a number of supporting programs. This is a port of OpenBSD's OpenSSH to most Unix-like operating systems, including Linux, OS X and Cygwin. Portable OpenSSH polyfills OpenBSD APIs that are not available elsewhere, adds sshd sandboxing for more operating systems and includes support for OS-native authentication and auditing (e.g. using PAM)."
export CATEGORY=communication
export TYPE=application
#export VERSION=7.7.2.0
#export VERSIONDATE=20181201
#export VERSION=7.9.0.0
#export VERSIONDATE=20190112
#export VERSION=8.0.0.0
#export VERSIONDATE=20190624
#export VERSION=8.1.0.0
#export VERSIONDATE=20191218
#export VERSION=8.6.0.0
#export VERSIONDATE=20210527
#export VERSION=8.9.0.0
#export VERSIONDATE=20220317
#export VERSION=8.9.1.0
#export VERSIONDATE=20220323
#export VERSION=9.1.0.0
#export VERSIONDATE=20221214
#export VERSION=9.2.0.0
#export VERSIONDATE=20230222
#export VERSION=9.2.2.0
#export VERSIONDATE=20230418
export VERSION=9.4.0.0
export VERSIONDATE=20231011
####checking OpenSSL library version... configure: error: OpenSSL >= 1.1.0 is not yet supported (have "1010101f (OpenSSL 1.1.1a  20 Nov 2018)")
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENCE
export LICENSETYPE=BSD
#export DOWNLOADURL="https://github.com/openssh/openssh-portable/releases/"
#export DOWNLOADURL="https://github.com/PowerShell/openssh-portable/releases/"
export DOWNLOADURL="https://github.com/PowerShell/openssh-portable/tags/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/openssh/openssh-portable/archive/V_$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/PowerShell/openssh-portable/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/PowerShell/openssh-portable/archive/refs/tags/v$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/PowerShell/openssh-portable/archive/refs/tags/V$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/V_$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/V$VERSION.tar.gz
#cd $BASENAME-V_$VERSION
cd $BASENAME-$VERSION
mkdir -p winfix/sys winfix/netinet
echo "#include <winsock2.h>" > winfix/sys/socket.h
echo "#include <ws2tcpip.h>" >> winfix/sys/socket.h
#touch winfix/termios.h winfix/netinet/in.h
# don't override standard headers (version >= 8.1.0.0)
mv contrib/win32/win32compat/inc/stdio.h contrib/win32/win32compat/inc/stdio.h.bak
mv contrib/win32/win32compat/inc/sys/types.h contrib/win32/win32compat/inc/sys/types.h.bak
mv contrib/win32/win32compat/inc/fcntl.h contrib/win32/win32compat/inc/fcntl.h.bak
mv contrib/win32/win32compat/inc/time.h contrib/win32/win32compat/inc/time.h.bak
mv contrib/win32/win32compat/inc/ctype.h contrib/win32/win32compat/inc/ctype.h.bak
mv contrib/win32/win32compat/inc/stdlib.h contrib/win32/win32compat/inc/stdlib.h.bak
mv contrib/win32/win32compat/inc/string.h contrib/win32/win32compat/inc/string.h.bak
mv contrib/win32/win32compat/inc/sys/stat.h contrib/win32/win32compat/inc/sys/stat.h.bak
mv contrib/win32/win32compat/inc/sys/statvfs.h contrib/win32/win32compat/inc/sys/statvfs.h.bak
mv contrib/win32/win32compat/inc/dirent.h contrib/win32/win32compat/inc/dirent.h.bak
mv contrib/win32/win32compat/inc/unistd.h contrib/win32/win32compat/inc/unistd.h.bak
mv contrib/win32/win32compat/inc/sys/select.h contrib/win32/win32compat/inc/sys/select.h.bak
wl-showstatus configure &&
 mkdir -p m4 &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-openssl-header-check --without-shadow --without-pam --with-mantype=cat CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-zlib-version-check --without-openssl-header-check --without-pie --with-ldns --without-shadow --without-pam --without-bsd-auth --without-selinux --with-mantype=cat LDNSCONFIG=$(which ldns-config) CFLAGS="-DWINDOWS -I$(pwd)/contrib/win32/win32compat/inc -I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 #--without-openssl
 #CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman"
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK && ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



