export NAME="Ecere"
export STATUS=
export URL=http://www.ecere.com/
export BASENAME=ecere
export DESCRIPTION=""
export CATEGORY=
export TYPE=library
#export VERSION=0.44.08
#export VERSIONDATE=20140203
#export VERSION=0.44.11
#export VERSIONDATE=20150329
#export VERSION=0.44.12
#export VERSIONDATE=20151210
#export VERSION=0.44.13
#export VERSIONDATE=20151222
#export VERSION=0.44.14
#export VERSIONDATE=20160114
export VERSION=0.44.15
export VERSIONDATE=20160805
####/usr/bin/sh: ver: command not found
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="New BSD"
export DOWNLOADURL="https://github.com/ecere/ecere-sdk/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://github.com/ecere/ecere-sdk/tarball/$VERSION
#export DOWNLOADSOURCEURL=http://github.com/ecere/ecere-sdk/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/ecere/ecere-sdk/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/ecere-sdk-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/ecere-sdk-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd ecere-sdk-$VERSION
wl-showstatus build &&
 #mkdir -p obj/bootstrap.win32
 #$COMSPEC /c "mingw32-make" &&
 mingw32-make -j1 &&
    echo OK
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
wl-showstatus configure &&
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION(`gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/"`)" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt
#wl-showstatus configure
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ecere-sdk-$VERSION



