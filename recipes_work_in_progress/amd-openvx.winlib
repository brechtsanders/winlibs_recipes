export NAME="AMD OpenVX (AMDOVX)"
export STATUS=
export URL=http://gpuopen.com/compute-product/amd-openvx/
export BASENAME=amd-openvx
export DESCRIPTION="AMD OpenVX is a highly optimized open source implementation of the Khronos OpenVX(TM) computer vision specification. It is a library that allows for rapid prototyping as well as fast execution on a wide range of computer hardware, including small embedded x86 CPUs and large workstation discrete GPUs."
export CATEGORY=development
export TYPE=library
export VERSION=0.9-beta1
export VERSIONDATE=20160611
####openvx/ago/ago_haf_cpu_arithmetic.cpp:3091:19: error: request for member 'm128i_u32' in 'pixels2', which is of non-class type '__m128i {aka __vector(2) long long int}'
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYRIGHT.txt
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/GPUOpen-ProfessionalCompute-Libraries/amdovx-core/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/GPUOpen-ProfessionalCompute-Libraries/amdovx-core/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd amdovx-core-$VERSION
wl-showstatus configure &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 make install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf amdovx-core-$VERSION



