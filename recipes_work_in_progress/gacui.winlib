export NAME="GacUI"
export STATUS=
export URL=http://www.gaclib.net/
#export URL=https://github.com/vczh-libraries/GacUI/
#export URL=https://github.com/vczh-libraries/Release/
export BASENAME=gacui
export DESCRIPTION="GPU Accelerated C++ User Interface, with WYSIWYG developing tools, XML supports, built-in data binding and MVVM features."
export CATEGORY=framework
export TYPE=library
#export VERSION=0.10.0.0
#export VERSIONDATE=20190704
#export VERSION=0.11.0.0
#export VERSIONDATE=20191218
#export VERSION=0.12.0.0
#export VERSIONDATE=20201223
#export VERSION=0.13.0.0
#export VERSIONDATE=20210602
#export VERSION=0.13.1.0
#export VERSIONDATE=20210615
#export VERSION=0.13.2.0
#export VERSIONDATE=20210706
#export VERSION=0.13.3.1
#export VERSIONDATE=20210726
#export VERSION=0.14.0.0
#export VERSIONDATE=20211010
#export VERSION=1.0.1.0
#export VERSIONDATE=20211024
#export VERSION=1.0.3.0
#export VERSIONDATE=20211029
#export VERSION=1.0.4.0
#export VERSIONDATE=20211031
#export VERSION=1.0.5.0
#export VERSIONDATE=20211105
#export VERSION=1.0.6.0
#export VERSIONDATE=20211106
#export VERSION=1.1.0.0
#export VERSIONDATE=20211229
#export VERSION=1.1.1.0
#export VERSIONDATE=20220929
#export VERSION=1.1.2.0
#export VERSIONDATE=20221121
#export VERSION=1.1.3.0
#export VERSIONDATE=20221210
export VERSION=1.2.0.0
export VERSIONDATE=20230118
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE=
export DOWNLOADURL="https://github.com/vczh-libraries/Release/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/vczh-libraries/Release/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/Release-$VERSION
wl-showstatus build &&
 touch SUCCESS &&
 for F in Import/*.cpp; do
  echo CXX $F
  g++ -c -o $F.o $F || ( rm -f SUCCESS; false ) || break
 done &&
 ls -1 SUCCESS &> /dev/null &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



# fix undefined cmake_dependent_option
mv Import/CMakeLists.txt Import/CMakeLists.txt.bak &&
echo "include(CMakeDependentOption)" > Import/CMakeLists.txt &&
cat Import/CMakeLists.txt.bak >> Import/CMakeLists.txt

mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -SImport -Bbuild_test -LH && echo OK; rm -rf build_test

export BUILDDEPENDENCIES=cmake,ninja

mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -SImport -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
