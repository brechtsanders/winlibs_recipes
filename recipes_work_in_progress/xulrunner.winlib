export NAME="XULRunner"
export STATUS=
export URL=https://developer.mozilla.org/en/XULRunner
export BASENAME=xulrunner
export DESCRIPTION="XULRunner is a Mozilla runtime package that can be used to bootstrap XUL+XPCOM applications that are as rich as Firefox and Thunderbird. It will provide mechanisms for installing, upgrading, and uninstalling these applications. XULRunner will also provide libxul, a solution which allows the embedding of Mozilla technologies in other projects and products."
export CATEGORY=system
export TYPE=library
#export VERSION=3.6.28
#export VERSIONDATE=20120314
####checking for the alignment of void*... configure: error: No alignment found for void*
#export VERSION=8.0
#export VERSIONDATE=20111114
#export VERSION=8.0.1
#export VERSIONDATE=20111122
#export VERSION=10.0.2
#export VERSIONDATE=20120303
#export VERSION=11.0
#export VERSIONDATE=20120314
#export VERSION=12.0
#export VERSIONDATE=20120421
#export VERSION=13.0.1
#export VERSIONDATE=20120615
#export VERSION=13.0.2
#export VERSIONDATE=20120624
#export VERSION=14.0.1
#export VERSIONDATE=20120714
#export VERSION=15.0
#export VERSIONDATE=20120825
#export VERSION=15.0.1
#export VERSIONDATE=20120906
####checking for GLIB - version >= 1.2.0... no
####*** The glib-config script installed by GLIB could not be found
####*** If GLIB was installed in PREFIX, make sure PREFIX/bin is in
####*** your path, or set the GLIB_CONFIG environment variable to the
####*** full path to glib-config.
#export VERSION=16.0
#export VERSIONDATE=20121009
#export VERSION=16.0.1
#export VERSIONDATE=20121011
#export VERSION=16.0.2
#export VERSIONDATE=20121025
####checking for the size of void*... configure: error: No size found for void*
#export VERSION=17.0b5
#export VERSIONDATE=20121107
#export VERSION=17.0b6
#export VERSIONDATE=20121113
#export VERSION=17.0
#export VERSIONDATE=20121117
#export VERSION=17.0.1
#export VERSIONDATE=20121129
#export VERSION=18.0.1
#export VERSIONDATE=20130118
#export VERSION=18.0.2
#export VERSIONDATE=20130201
#export VERSION=19.0
#export VERSIONDATE=20130216
#export VERSION=19.0.1
#export VERSIONDATE=20130227
#export VERSION=19.0.2
#export VERSIONDATE=20130307
#export VERSION=20.0
#export VERSIONDATE=20130327
export VERSION=20.0.1
export VERSIONDATE=20130410
####checking for the size of void*... configure: error: No size found for void*
#export VERSION=21.0
#export VERSIONDATE=20130507
#export VERSIONDATE=20130618
#export VERSION=22.0
#export VERSIONDATE=20130618
#export VERSION=23.0
#export VERSIONDATE=20130731
#export VERSION=24.0
#export VERSIONDATE=20130911
#export VERSION=25.0
#export VERSIONDATE=20131022
#export VERSION=25.0.1
#export VERSIONDATE=20131113
####Python 2.7 or greater (but not Python 3) is required to build. You are running Python 2.6.
#export VERSION=26.0
#export VERSIONDATE=20131210
#export VERSION=27.0
#export VERSIONDATE=20140128
####config/baseconfig.mk:23: *** Only building with pymake or mozmake is supported..  Stop.
#export VERSION=27.0.1
#export VERSIONDATE=20140213
####configure:15107:1: warning: implicit declaration of function 'posix_fallocate' [-Wimplicit-function-declaration]
#export VERSION=28.0
#export VERSIONDATE=20140311
#export VERSION=29.0
#export VERSIONDATE=20140423
#export VERSION=29.0.1
#export VERSIONDATE=20140506
#export VERSION=30.0
#export VERSIONDATE=20140604
####../../config/baseconfig.mk:38: *** Make version too old. Only versions strictly greater than 4.0 are supported..  Stop.
#export VERSION=31.0
#export VERSIONDATE=20140715
####../../config/baseconfig.mk:32: *** MSYS make is not supported.  Stop.
#export VERSION=32.0
#export VERSIONDATE=20140826
####ImportError: No module named _implementation
#export VERSION=32.0.1
#export VERSIONDATE=20140911
#export VERSION=32.0.2
#export VERSIONDATE=20140918
#export VERSION=33.0.1
#export VERSIONDATE=20141022
#export VERSION=33.0.2
#export VERSIONDATE=20141027
#export VERSION=33.0.3
#export VERSIONDATE=20141106
#export VERSION=33.1
#export VERSIONDATE=20141030
#export VERSION=33.1.1
#export VERSIONDATE=20141114
#export VERSION=34.0
#export VERSIONDATE=20141125
#export VERSION=34.0.5
#export VERSIONDATE=20141127
#export VERSION=35.0
#export VERSIONDATE=20150106
#export VERSION=35.0.1
#export VERSIONDATE=20150124
####configure: error: can not find install-sh or install.sh in ./../../build/autoconf ./../.././../../build/autoconf
#export VERSION=36.0
#export VERSIONDATE=20150220
#export VERSION=36.0.1
#export VERSIONDATE=20150305
#export VERSION=36.0.3
#export VERSIONDATE=20150320
#export VERSION=36.0.4
#export VERSIONDATE=20150321
#export VERSION=37.0
#export VERSIONDATE=20150325
#export VERSION=37.0.1
#export VERSIONDATE=20150403
#export VERSION=37.0.2
#export VERSIONDATE=20150416
#export VERSION=38.0
#export VERSIONDATE=20150504
#export VERSION=38.0.1
#export VERSIONDATE=20150514
#export VERSION=38.0.5
#export VERSIONDATE=20150522
#export VERSION=38.0.6
#export VERSIONDATE=20150606
#export VERSION=39.0
#export VERSIONDATE=20150623
####ImportError: No module named _implementation
#export VERSION=39.0.3
#export VERSIONDATE=20150811
####configure: error: ECMAScript Internationalization API is not yet supported on this platform
#export VERSION=40.0
#export VERSIONDATE=20150811
####'onfig.guess' is not recognized as an internal or external command, operable program or batch file.
#export VERSION=40.0.1
#export VERSIONDATE=20150812
#export VERSION=40.0.2
#export VERSIONDATE=20150813
#export VERSION=40.0.3
#export VERSIONDATE=20150826
#export VERSION=41.0
#export VERSIONDATE=20150915
#export VERSION=41.0.1
#export VERSIONDATE=20150929
#export VERSION=41.0.2
#export VERSIONDATE=20151014
####configure: error: ECMAScript Internationalization API is not yet supported on this platform
wl-showstatus --package-version
export DEPENDENCIES=zip,zlib,pthreads
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=mozilla-release/LICENSE
export LICENSETYPE=
#export DOWNLOADURL="http://releases.mozilla.org/pub/mozilla.org/xulrunner/releases/"
export DOWNLOADURL="http://ftp.mozilla.org/pub/mozilla.org/xulrunner/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
wl-wait4deps
#export DOWNLOADSOURCEURL=http://releases.mozilla.org/pub/mozilla.org/xulrunner/releases/$VERSION/source/$BASENAME-$VERSION.source.tar.bz2
export DOWNLOADSOURCEURL=http://ftp.mozilla.org/pub/mozilla.org/xulrunner/releases/$VERSION/source/$BASENAME-$VERSION.source.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.mozilla.org/pub/mozilla.org/xulrunner/releases/$VERSION/source/$BASENAME-$VERSION.source.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
mkdir -p $BASENAME-$VERSION
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.source.tar.bz2 -C$BASENAME-$VERSION
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.source.tar.xz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/mozilla-*
# fix missing struct stat in js/src/config/mkdepend/include.c
mv js/src/config/mkdepend/include.c js/src/config/mkdepend/include.c.bak
echo "#include <sys/stat.h>" > js/src/config/mkdepend/include.c
sed -e "s/struct stat/struct _stat/g; s/\(stat *(\)/_\1/g; s/\(S_ISDIR\)/_\1/" js/src/config/mkdepend/include.c.bak >> js/src/config/mkdepend/include.c
# fix missing struct stat in js/src/config/mkdepend/main.c
mv js/src/config/mkdepend/main.c js/src/config/mkdepend/main.c.bak
#sed -e "s/struct stat/struct _stat/" js/src/config/mkdepend/main.c.bak > js/src/config/mkdepend/main.c
cat > js/src/config/mkdepend/main.c << EOF
//#include <_mingw.h>
#undef _NO_OLDNAMES
//#include <fcntl.h>
//#include <io.h>
//#define chmod(f,m)
//#define unlink _unlink
//#include <signal.h>
//#define signal(s,c)
//#include <stdio.h>
EOF
cat js/src/config/mkdepend/main.c.bak >> js/src/config/mkdepend/main.c
# fix invalid -mno-cygwin, dependancy on gio-unix and gtk+-unix-print, requirement to have GLIB_PREFIX in PATH and invalid include/glib.h
mv configure configure.bak
sed -e "s/-mno-cygwin//; s/gdk-x11/gdk-win32/; s/gtk+-unix-print-/gtk+-win32-/g; s/\(error: [A-Z]*_PREFIX must be in your .*;\) exit 1;/\1/; s?include/\(glib.h\)?\1?; s?include/\(libIDL/IDL.h\)?\1?; s?{.*error: Cannot find.*GLIB_PREFIX_DIR/lib/glib-1\.2\.lib.*; exit 1; }?GLIB_LIBS=\$MINGWPREFIX/lib/libglib-2.0.dll.a?; s?{.*error: Cannot find.*LIBIDL_PREFIX_DIR/lib/libidl-0\.6\.lib.*; exit 1; }?LIBIDL_LIBS=\$MINGWPREFIX/lib/libIDL-2.dll.a?" configure.bak > configure
# fix invalid -mno-cygwin in js/src/configure
mv js/src/configure js/src/configure.bak
sed -e "s/-mno-cygwin//" js/src/configure.bak > js/src/configure
touch atlbase.h
mkdir -p dist
# fix js/src/jsapi.cpp
patch -ulbf js/src/jsapi.cpp << EOF
--- js/src/jsapi.cpp  2012-10-06 01:02:12 +0200
+++ js/src/jsapi.cpp  2012-10-09 23:04:02 +0200
@@ -5110,4 +5110,4 @@

-    struct stat st;
-    int ok = fstat(fileno(fp), &st);
+    struct _stat st;
+    int ok = _fstat(_fileno(fp), &st);
     if (ok != 0)
EOF
# fix js/src/jscrashreport.cpp
patch -ulbf js/src/jscrashreport.cpp << EOF
--- js/src/jscrashreport.cpp  2012-10-06 01:02:12 +0200
+++ js/src/jscrashreport.cpp  2012-10-09 23:13:42 +0200
@@ -48,3 +48,7 @@
     /* Get the register state. */
-#if defined(_MSC_VER) && JS_BITS_PER_WORD == 32
+#if defined(__MINGW32__)
+    regs->ip = 0;
+    regs->sp = 0;
+    regs->bp = 0;
+#elif defined(_MSC_VER) && JS_BITS_PER_WORD == 32
     /* ASM version for win2k that doesn't support RtlCaptureContext */
EOF
# fix js/src/shell/js.cpp
patch -ulbf js/src/shell/js.cpp << EOF
--- js/src/shell/js.cpp  2012-10-06 01:02:14 +0200
+++ js/src/shell/js.cpp  2012-10-09 23:17:00 +0200
@@ -407,3 +407,3 @@

-    if (!forceTTY && !isatty(fileno(file)))
+    if (!forceTTY && !_isatty(_fileno(file)))
     {
@@ -685,3 +685,3 @@
     if (!found)
-        names = strdup("");
+        names = _strdup("");
     if (!names) {
@@ -4406,3 +4406,3 @@
         }
-        rv = putenv(waste);
+        rv = _putenv(waste);
 #ifdef XP_WIN
EOF
# fix config/nsinstall.c (incomplete)
patch -ulbf config/nsinstall.c << EOF
--- config/nsinstall.c  2012-10-06 01:02:10 +0200
+++ config/nsinstall.c  2012-10-10 21:45:08 +0200
@@ -15,4 +15,6 @@
 #include <limits.h>
+#ifndef __MINGW32__
 #include <grp.h>
 #include <pwd.h>
+#endif
 #include <stdio.h>
@@ -52,2 +54,36 @@

+#ifdef __MINGW32__
+#define fchmod(f,p) 0
+#define fchown(tofd,uid,gid) 0
+#define lstat(path, sb) stat((path), (sb))
+#define chown(toname,uid,gid) 0
+#define lchown(toname,uid,gid) 0
+#define S_ISLNK(m) 0
+#define readlink(rpath,buf,path_max) -1
+#define symlink(name1,name2) -1
+#include <sys/utime.h>
+#include <getopt.h>
+#include <errno.h>
+typedef int uid_t;
+typedef int gid_t;
+struct passwd {
+ int pw_uid;
+ //char *pw_name;
+ //char *pw_dir;
+ //char *pw_shell;
+};
+struct group {
+ int gr_gid;
+ //char *gr_name;
+ //char **gr_mem;
+};
+#define getpwnam(username) NULL
+#define getgrnam(groupname) NULL
+#define fail(s,p) fprintf(stderr,s,p)
+static char* program;
+#define xmalloc malloc
+#define xfree free
+#define xchdir chdir
+#endif
+
 #ifdef NEED_FCHMOD_PROTO
@@ -90,4 +126,8 @@
     }
-
+
+#ifdef __MINGW32__
+    res = mkdir(path);
+#else
     res = mkdir(path, mode);
+#endif
     if ((res != 0) && (errno == EEXIST))
@@ -378,3 +418,7 @@
            }
+#ifdef __MINGW32__
+           if (!exists && mkdir(toname) < 0)
+#else
            if (!exists && mkdir(toname, mode) < 0)
+#endif
                fail("cannot make directory %s", toname);
EOF
# fix missing _abs64 in ion/RangeAnalysis.h (version >= 19.0b1)
patch -ulbf js/src/ion/RangeAnalysis.h << EOF
--- js/src/ion/RangeAnalysis.h  2013-01-08 22:55:40 +0100
+++ js/src/ion/RangeAnalysis.h  2013-01-09 08:04:28 +0100
@@ -100,3 +100,3 @@
     static int64_t abs64(int64_t x) {
-#ifdef WTF_OS_WINDOWS
+#if defined(WTF_OS_WINDOWS) && !defined(__MINGW32__)
         return _abs64(x);
EOF

# fix js/src/Makefile.in for invalid compilation of nsinstall.exe (version >= 20.0.1)
patch -ulbf js/src/Makefile.in << EOF
--- js/src/Makefile.in  2013-04-10 04:57:36.000000000 +0200
+++ js/src/Makefile.in  2015-01-09 14:27:12.270839400 +0100
@@ -574,2 +574,3 @@

+ifneq (WINNT,\$(HOST_OS_ARCH))
 ifneq (,\$(CROSS_COMPILE)\$(filter-out WINNT OS2,\$(OS_ARCH)))
@@ -584,2 +585,3 @@
 endif
+endif

EOF

# fix missing allocator functions (version >= 20.0.1)
cp -f js/src/yarr/OSAllocatorWin.cpp js/src/yarr/OSAllocatorPosix.cpp
# fix missing determinePageSize (version >= 20.0.1)
cp -f assembler/jit/ExecutableAllocatorWin.cpp assembler/jit/ExecutableAllocatorPosix.cpp

## fix missing initSeed
#mv js/src/assembler/jit/ExecutableAllocator.h js/src/assembler/jit/ExecutableAllocator.h.bak
#sed -e "s/^\( *\)\(initSeed();\)/\1ExecutableAllocator::\2/g" js/src/assembler/jit/ExecutableAllocator.h.bak > js/src/assembler/jit/ExecutableAllocator.h

cd js/src

# build nsinstall.exe
make -j1 -Cconfig HOST_CC="CXX=${CXX:-g++} -fpermissive" &&
#make -j1 -Cconfig HOST_CC="CXX=${CXX:-g++} -fpermissive" HOST_OS_ARCH=
    echo OK
####config/mkdepend/main.c:135:1: error: expected unqualified-id before 'catch'

cat > config/pwd.h << EOF
typedef int uid_t;
EOF
cat > config/grp.h << EOF
typedef int gid_t;
EOF
${CXX:-g++} -Iconfig -o config/nsinstall.exe config/nsinstall.c

wl-showstatus configure &&
## don't use -fno-keep-inline-dllexport compiler option (GCC 4.4.0)
#mv configure configure.bak
#sed -e "s/-fno-keep-inline-dllexport//" configure.bak > configure
#CC=gcc CPP="gcc -E" CXX=${CXX:-g++} CXXCPP="${CXX:-g++} -E" LD=ld MAKE=make PYTHON=$PY2DIR/python.exe GLIB_PREFIX=$MINGWPREFIX/include/glib-2.0 LIBIDL_PREFIX=$MINGWPREFIX/include/libIDL-2.0 PATH=$PATH:$MINGWPREFIX/include/glib-2.0/bin MOZ_TOOLS=$MINGWPREFIX ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-strip --enable-install-strip --enable-optimize="-O3 -D_NO_OLDNAMES -DNO_OLDNAMES -D__GNUG__" --enable-application=xulrunner --with-windows-version=502 --disable-installer --disable-accessibility --disable-angle --disable-javaxpcom &&
#CC=gcc CPP="gcc -E" CXX=${CXX:-g++} CXXCPP="${CXX:-g++} -E" LD=ld MAKE=make PYTHON=$PY2DIR/python.exe GLIB_PREFIX=$MINGWPREFIX/include/glib-2.0 LIBIDL_PREFIX=$MINGWPREFIX/include/libIDL-2.0 PATH=$PATH:$MINGWPREFIX/include/glib-2.0/bin MOZ_TOOLS=$MINGWPREFIX ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-strip --enable-install-strip --enable-optimize="-O3 -D_NO_OLDNAMES -DNO_OLDNAMES -D__GNUG__" --enable-application=xulrunner --with-windows-version=601 --disable-installer --disable-accessibility --disable-angle --disable-javaxpcom &&
CC=gcc CPP="gcc -E" CXX=${CXX:-g++} CXXCPP="${CXX:-g++} -E" LD=ld MAKE=make PYTHON=$PY2DIR/python.exe GLIB_PREFIX=$MINGWPREFIX/include/glib-2.0 LIBIDL_PREFIX=$MINGWPREFIX/include/libIDL-2.0 PATH=$PATH:$MINGWPREFIX/include/glib-2.0/bin MOZ_TOOLS=$MINGWPREFIX ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-strip --enable-install-strip --enable-optimize="-O3" --enable-application=xulrunner --with-windows-version=601 --disable-installer --disable-accessibility --disable-angle --disable-javaxpcom &&
#CC=gcc CPP="gcc -E" CXX=${CXX:-g++} CXXCPP="${CXX:-g++} -E" LD=ld MAKE=make PYTHON=$PY2DIR/python.exe GLIB_PREFIX=$MINGWPREFIX/include/glib-2.0 LIBIDL_PREFIX=$MINGWPREFIX/include/libIDL-2.0 PATH=$PATH:$MINGWPREFIX/include/glib-2.0/bin MOZ_TOOLS=$MINGWPREFIX ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-strip --enable-install-strip --enable-optimize="-O3" --enable-application=xulrunner --with-windows-version=601 --disable-installer --disable-accessibility --disable-angle --disable-javaxpcom --with-system-icu &&
#CC=gcc CPP="gcc -E" CXX=${CXX:-g++} CXXCPP="${CXX:-g++} -E" LD=ld MAKE=mingw32-make PYTHON=$PY2DIR/python.exe GLIB_PREFIX=$MINGWPREFIX/include/glib-2.0 LIBIDL_PREFIX=$MINGWPREFIX/include/libIDL-2.0 PATH=$PATH:$MINGWPREFIX/include/glib-2.0/bin MOZ_TOOLS=$MINGWPREFIX ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-strip --enable-install-strip --enable-optimize="-O3" --enable-application=xulrunner --with-windows-version=601 --disable-installer --disable-accessibility --disable-angle --disable-javaxpcom &&
#CC=gcc CPP="gcc -E" CXX=${CXX:-g++} CXXCPP="${CXX:-g++} -E" LD=ld MAKE=mingw32-make PYTHON=$PY2DIR/python.exe GLIB_PREFIX=$MINGWPREFIX/include/glib-2.0 LIBIDL_PREFIX=$MINGWPREFIX/include/libIDL-2.0 PATH=$PATH:$PERLDIR/bin:$PERLDIR/../c/bin:$MINGWPREFIX/include/glib-2.0/bin MOZ_TOOLS=$MINGWPREFIX ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-strip --enable-install-strip --enable-optimize="-O3" --enable-application=xulrunner --with-windows-version=601 --disable-installer --disable-accessibility --disable-angle --disable-javaxpcom &&
#CC=gcc CPP="gcc -E" CXX=${CXX:-g++} CXXCPP="${CXX:-g++} -E" LD=ld MAKE=mingw32-make PYTHON=$PY2DIR/python.exe GLIB_PREFIX=$MINGWPREFIX/include/glib-2.0 LIBIDL_PREFIX=$MINGWPREFIX/include/libIDL-2.0 PATH=$PATH:$PERLDIR/bin:$PERLDIR/../c/bin:$MINGWPREFIX/include/glib-2.0/bin MOZ_TOOLS=$MINGWPREFIX ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-strip --enable-install-strip --enable-optimize="-O3" --enable-application=xulrunner --with-windows-version=603 --disable-installer --disable-accessibility --disable-angle --disable-javaxpcom &&
 wl-showstatus build &&
 ## fix missing off_t (version >= 17.0b5)
 #mv config/autoconf.mk config/autoconf.mk.bak &&
 #sed -e "s/-D_*NO_OLDNAMES//g" config/autoconf.mk.bak > config/autoconf.mk &&
 # fix missing getpagesize/mincore (version >= 20.0.1)
 echo "#undef XP_UNIX" >> js-confdefs.h &&
 make -j1 -Cconfig HOST_CC="${CXX:-g++} -fpermissive" &&
 #mingw32-make -j1 -Cconfig HOST_CC="${CXX:-g++} -fpermissive" &&
 wl-showstatus build-install &&
 ( make install || make -j1 all install ) &&
 #( mingw32-make install || mingw32-make -j1 all install ) &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 cp -ru dist/include/* $INSTALLPREFIX/include/js/ &&
 cp -f config/nsinstall.py $INSTALLPREFIX/bin/ &&
 cd ../../.. && wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####To do: build DLL
####*** Warning: linker path does not have real file for library -lfl.
#mkdir -p mybuild &&
#cd mybuild &&
#CC=gcc CPP="gcc -E" CXX=${CXX:-g++} CXXCPP="g++ -E" LD=ld MAKE=mingw32-make PYTHON=$PY2DIR/python.exe GLIB_PREFIX=$MINGWPREFIX/include/glib-2.0 LIBIDL_PREFIX=$MINGWPREFIX/include/libIDL-2.0 PATH=$PATH:$PERLDIR/bin:$PERLDIR/../c/bin:$MINGWPREFIX/include/glib-2.0/bin MOZ_TOOLS=$MINGWPREFIX ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-strip --enable-install-strip --enable-optimize="-O3" --enable-application=xulrunner --with-windows-version=603 --disable-installer --disable-accessibility --disable-angle --disable-javaxpcom --disable-gstreamer &&
#    echo OK



