export NAME="Quick Charts"
export STATUS=
export URL=https://api.kde.org/frameworks/kquickcharts/html/index.html
export BASENAME=libkf6quickcharts
export DESCRIPTION="A QtQuick module providing high-performance charts. (KDE Frameworks 6 (KDF6) Tier 1 framework)"
export CATEGORY=framework
export TYPE=library
#export VERSION=24.02.0
#export VERSIONDATE=20240228
#export VERSION=24.02.1
#export VERSIONDATE=20240321
#export VERSION=24.05.0
#export VERSIONDATE=20240523
#export VERSION=24.05.1
#export VERSIONDATE=20240601
#export VERSION=24.05.2
#export VERSIONDATE=20240704
#export VERSION=24.07.80
#export VERSIONDATE=20240726
export VERSION=24.07.90
export VERSIONDATE=20240810
wl-showstatus --package-version
export DEPENDENCIES=qt6
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,extra-cmake-modules,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://kde.org/announcements/ kde-frameworks- .php"
#export DOWNLOADURL="https://download.kde.org/stable/frameworks/ kquickcharts-"
#export DOWNLOADURL="https://github.com/KDE/kqtquickcharts/releases"
export DOWNLOADURL="https://github.com/KDE/kqtquickcharts/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/KDE/kqtquickcharts/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd kqtquickcharts-$VERSION
#wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf kqtquickcharts-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf kqtquickcharts-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf kqtquickcharts-$VERSION
####TO DO: build static library (or is this not possible because this is a dynamic plugin?)




