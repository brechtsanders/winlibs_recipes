export NAME="GDL"
export STATUS=
export URL=http://gnudatalanguage.sourceforge.net/
export BASENAME=libgdl
export DESCRIPTION="A free IDL (Interactive Data Language) compatible incremental compiler (i. e. runs IDL programs). IDL is a registered trademark of ITT Visual Information Solutions."
export CATEGORY=development
export TYPE=library
#export VERSION=0.8.10
#export VERSIONDATE=20120531
#export VERSION=0.9
#export VERSIONDATE=20100914
#export VERSION=0.9.1
#export VERSIONDATE=20110330
####Makefile:161: *** multiple target patterns.  Stop.
export VERSION=0.9.2
export VERSIONDATE=20111215
####src/basic_fun.cpp:5594:20: error: aggregate 'lib::get_kbrd(EnvT*)::termios orig' has incomplete type and cannot be defined
####src/basic_fun.cpp:5594:26: error: aggregate 'lib::get_kbrd(EnvT*)::termios get' has incomplete type and cannot be defined
####src/basic_fun.cpp:5598:30: error: 'tcgetattr' was not declared in this scope
export DEPENDENCIES=plplot
#export VERSION=0.9.3
#export VERSIONDATE=20121228
#export VERSION=0.9.4
#export VERSIONDATE=20130929
#export VERSION=0.9.5
#export VERSIONDATE=20131007
#export VERSION=0.9.6
#export VERSIONDATE=20160104
####src/basic_fun.cpp:5740:20: error: aggregate 'lib::get_kbrd(EnvT*)::termios orig' has incomplete type and cannot be defined
#export VERSION=0.9.6v2
#export VERSIONDATE=20160107
####src/syscfg.h:351:21: warning: '_matherr' redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]
#export VERSION=0.9.7v1
#export VERSIONDATE=20170107
#export VERSION=0.9.7v2
#export VERSIONDATE=20170111
#export VERSION=0.9.7
#export VERSIONDATE=20170121
#export VERSION=0.9.8
#export VERSIONDATE=20180326
####/include/rpc/xdr.h:98:16: error: typedef 'bool_t' is initialized (use decltype instead)
wl-showstatus --package-version
#export DEPENDENCIES=plplot,portablexdr,netcdf,eigen,pslib
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL2
#export DOWNLOADURL="http://sourceforge.net/projects/gnudatalanguage/files/ gdl-"
export DOWNLOADURL="http://sourceforge.net/projects/gnudatalanguage/files/gdl/ gdl-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/gnudatalanguage/gdl/$VERSION/gdl-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/gnudatalanguage/gdl/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/")/gdl-$VERSION.tgz
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/gnudatalanguage/gdl/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/")/gdl-$VERSION.tgz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/gdl-$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/gdl-$VERSION.tgz
cd gdl-$VERSION
#cd gdl-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/")
# fix src/antlr/CharScanner.hpp (version >= 0.8.10)
mv src/antlr/CharScanner.hpp src/antlr/CharScanner.hpp.bak
cat > src/antlr/CharScanner.hpp << EOF
#include <stdio.h>
#include <string.h>
#define strcasecmp stricmp
EOF
cat src/antlr/CharScanner.hpp.bak >> src/antlr/CharScanner.hpp
# fix missing exit() (version >= 0.8.10)
echo "#include <stdlib.h>" >> src/antlr/config.hpp
# fix missing sys/times.h
mkdir -p sys
echo "#include <time.h>" >> sys/times.h
## fix missing bool_t in src/basegdl.hpp (version >= 0.9.5)
#mv src/basegdl.hpp src/basegdl.hpp.bak
#cat > src/basegdl.hpp << EOF
##include <rpc/types.h>
#EOF
#cat src/basegdl.hpp.bak >> src/basegdl.hpp
## fix missing TCHAR in src/basic_fun.cpp (version >= 0.9.5)
#mv src/basic_fun.cpp src/basic_fun.cpp.bak
#cat > src/basic_fun.cpp << EOF
##include <windows.h>
#EOF
#cat src/basic_fun.cpp.bak >> src/basic_fun.cpp
## libgomp.spec is missing in MinGW 4.4.3
#ls $MINGWDIR/lib/gcc/mingw32/`gcc -dumpversion`/libgomp.spec
#echo '*link_gomp: -lgomp %{static: -lpthread }' > libgomp.spec
# fix missing files
mkdir -p sys netinet arpa
touch sys/socket.h netinet/in.h netdb.h arpa/inet.h sys/utsname.h
touch termios.h ####to do: need a proper termios.h
wl-showstatus configure &&
wxConfig="`which wx-config` --wxcfg=gcc_lib/mswu" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-openmp=yes --without-x --with-Magick=no --with-netcdf=no --with-hdf=no --with-hdf5=no --with-python=no --with-wxWidgets=$WXWIN CXXFLAGS="-D_MSC_VER" &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
#wx-config --libs --wxcfg=$WXWIN/lib/gcc_lib/mswu
#    cmake.exe . -LH; rm CMakeCache.txt
#fix for using portablexdr
#mv CMakeLists.txt CMakeLists.txt.bak
#sed -e "s/xdr/portablexdr/I" CMakeLists.txt.bak > CMakeLists.txt

# fix undefined bool_t in src/basegdl.hpp (version >= 0.9.7v1)
patch -ulbf src/basegdl.hpp << EOF
--- src/basegdl.hpp  2017-01-06 15:19:43.000000000 +0100
+++ src/basegdl.hpp  2017-01-07 09:21:18.894976800 +0100
@@ -24,2 +24,3 @@
 #if defined(__CYGWIN__) || defined(_WIN32)
+#  include <rpc/types.h>
 #  include <rpc/xdr.h>
EOF
# fix missing in WCHAR src/basic_fun.cpp (version >= 0.9.7v1)
mv src/basic_fun.cpp src/basic_fun.cpp.bak &&
echo "#include <windows.h>" > src/basic_fun.cpp &&
cat src/basic_fun.cpp.bak >> src/basic_fun.cpp

##wl-showstatus configure &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_FOUND:STRING=YES -DXDR_INCLUDE_DIR:STRING=$MINGWPREFIX/include/rpc -DXDR_LIBRARIES:STRING=-lportablexdr . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DXDR_INCLUDE_DIR=$MINGWPREFIX/include -DWXWIDGETSDIR:PATH=$MINGWPREFIX/wx/lib/gcc_lib -DwxWidgets_wxrc_EXECUTABLE:FILEPATH=$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DXDR_INCLUDE_DIR=$MINGWPREFIX/include -DwxWidgets_ROOT_DIR:PATH=$MINGWPREFIX/wx -DwxWidgets_LIB_DIR:PATH=$MINGWPREFIX/wx/lib/gcc_dll -DwxWidgets_CONFIGURATION:PATH=msw -DwxWidgets_wxrc_EXECUTABLE:FILEPATH=$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DWXWIDGETSDIR:PATH=$MINGWPREFIX/wx/lib/gcc_dll -DwxWidgets_FOUND:BOOL=TRUE -DwxWidgets_INCLUDE_DIRS:FILEPATH=$MINGWPREFIX/wx/include -DwxWidgets_LIBRARIES:FILEPATH=$MINGWPREFIX/wx/lib -DwxWidgets_wxrc_EXECUTABLE:FILEPATH=$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DwxWidgets_CONFIG_EXECUTABLE:PATH="`which wx-config` --wxcfg=gcc_lib/mswu" -DwxWidgets_CONFIG_EXECUTABLE:FILEPATH=$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DwxWidgets_CONFIG_EXECUTABLE:PATH="`which wx-config`" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -SWXWIDGETSDIR:PATH="$MINGWPREFIX/wx" . &&
#WXCFG=gcc_dll/mswu cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DwxWidgets_CONFIG_EXECUTABLE:PATH="`which wx-config`" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -SWXWIDGETSDIR:PATH="$MINGWPREFIX/wx" -DWXWIDGETSDIR:PATH=$MINGWPREFIX/wx -DwxWidgets_ROOT_DIR:PATH=$MINGWPREFIX/wx -DwxWidgets_LIB_DIR:PATH=$MINGWPREFIX/wx/lib/gcc_dll -DwxWidgets_CONFIGURATION:PATH=msw . &&
#WXCFG=gcc_dll/mswu cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DwxWidgets_CONFIG_EXECUTABLE:PATH="`which wx-config`" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DwxWidgets_CONFIG_EXECUTABLE:PATH="`which wx-config`" -DwxWidgets_SELECT_OPTIONS:STRING="--wxcfg=gcc_dll/mswu" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" . &&
## create dummy wx-config which supports --version and uses UNIX-style paths (must be a shell script because CMake invokes it with sh)
#cat > wx-config.sh << EOF
##!/bin/sh
#if [ "\$1" == "--version" ]; then
# shift
# wx-config.exe --release \$* | grep -v "wx-config Error:" | sed -e "s/^\\([0-9]*\\.[0-9]*\\)\$/\\1.0/"
#else
# wx-config.exe --debug=no --unicode=yes --static=no --compiler=gcc \$* | grep -v "wx-config Error:" | sed -e "s?\\([A-Z]\\):\\\\\\\\?/\\1/?g; s?\\\\\\\\?/?g"
# #wx-config.exe --wxcfg=gcc_dll/mswu \$* | grep -v "wx-config Error:" | sed -e "s?\\([A-Z]\\):\\\\\\\\?/\\1/?g; s?\\\\\\\\?/?g"
#fi
#EOF
#wl-showstatus configure &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DwxWidgets_CONFIG_EXECUTABLE:PATH="`pwd`/wx-config.sh" -DwxWidgets_SELECT_OPTIONS:STRING="--wxcfg=gcc_dll/mswu" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" . &&
##cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DwxWidgets_CONFIG_EXECUTABLE:PATH="`pwd`/wx-config.sh" -DwxWidgets_SELECT_OPTIONS:STRING="--wxcfg=gcc_dll/mswu" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DHDF:BOOL=OFF -DPYTHON=OFF -DX11=OFF -DWXWIDGETSDIR=$WXWIN -DHDF5=OFF -DEIGEN3=OFF -DPSLIB=OFF . &&
#cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DXDR_LIBRARY=-lportablexdr -DwxWidgets_CONFIG_EXECUTABLE:PATH="`pwd`/wx-config.sh" -DwxWidgets_SELECT_OPTIONS:STRING="--wxcfg=gcc_dll/mswu" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DHDF:BOOL=OFF -DPYTHON:BOOL=OFF -DX11:BOOL=OFF -DWXWIDGETS:BOOL=OFF -DHDF5:BOOL=OFF -DEIGEN3:BOOL=OFF -DPSLIB:BOOL=OFF . &&
# wl-showstatus build-install &&
# ( make -j1 install/strip || make install ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf gdl-$VERSION



