export NAME="MPICH2"
export STATUS=
export URL=https://www.mpich.org/
export BASENAME=mpich
export DESCRIPTION="MPICH2 is a portable implementation of MPI, a standard for message-passing for distrubuted memory applications used in parallel computing. It provides an MPI implementation that efficiently supports different computation and communication platform including commodity clusters, high-speed networks and proprietry high-end computing systems."
export CATEGORY=development
export TYPE=library
export VERSION=1.4.1
export VERSIONDATE=20210621
#export VERSION=1.5
#export VERSIONDATE=20210621
####configure: error: The Fortran compiler x86_64-w64-mingw32-gfortran will not compile files that call the same routine with arguments of different types.
wl-showstatus --package-version
export DEPENDENCIES=libdl,mman-win32,sys_wait_h
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
#export LICENSEFILE=LICENSE
export LICENSETYPE=
export DOWNLOADURL="https://www.mpich.org/static/downloads/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://www.mpich.org/static/downloads/$VERSION/mpich2-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/mpich2-$VERSION.tar.gz
cd mpich2-$VERSION
mkdir -p winfix/sys winfix/netinet
echo "#include <winsock2.h>" > winfix/sys/socket.h
touch winfix/netinet/in.h winfix/netinet/tcp.h winfix/netinet/tcp.h
wl-showstatus configure &&
 # mkdir -p m4 &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-dynamiclibs --enable-sharedlibs=gcc --with-thread-package=posix --enable-timer-type=clock_gettime --disable-error-checking --enable-g=none --disable-coverage CFLAGS="-I$(pwd)/winfix -DHAVE_WINDOWS_H -DHAVE_GETHOSTNAME -I$MINGWPREFIX/include/libdl-win32 -I$MINGWPREFIX/include/mman-win32 -I$MINGWPREFIX/win32ports/include" LDFLAGS="-Wl,--as-needed" LIBS="-lws2_32 -ldl -lmman" &&
 #--enable-sharedlibs=cygwin-gcc 
 #--with-thread-package=win 
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf mpich2-$VERSION



#export NAME="MPICH"
#export STATUS=
#export URL=http://www.mpich.org/
#export BASENAME=mpich
#export DESCRIPTION="MPICH is a high performance and widely portable implementation of the Message Passing Interface (MPI) standard."
#export CATEGORY=system
#export TYPE=library
##export VERSION=3.1.2
##export VERSIONDATE=20140803
##export VERSION=3.1.3
##export VERSIONDATE=20140803
##export VERSION=3.1.4
##export VERSIONDATE=20140803
##export VERSION=3.2
##export VERSIONDATE=20151112
#export VERSION=3.2.1
#export VERSIONDATE=20171111
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#####configure: error: Cannot build simple PMI with support for an IP port because of missing functions
##export VERSION=3.3a1
##export VERSIONDATE=20160831
##export VERSION=3.3a2
##export VERSIONDATE=20161114
##export VERSION=3.3a3
##export VERSIONDATE=20171222
##export VERSION=3.3b1
##export VERSIONDATE=20180206
##export VERSION=3.3b2
##export VERSIONDATE=20180411
##export VERSION=3.3b3
##export VERSIONDATE=20180630
##export VERSION=3.3rc1
##export VERSIONDATE=20181110
##export VERSION=3.3
##export VERSIONDATE=20181122
##export VERSION=3.3.1
##export VERSIONDATE=20190608
##export VERSION=3.3.2
##export VERSIONDATE=20191114
##export VERSION=3.4a2
##export VERSIONDATE=20191220
##export VERSION=3.4a3
##export VERSIONDATE=20200707
##export VERSION=3.4b1
##export VERSIONDATE=20201006
##export VERSION=3.4
##export VERSIONDATE=20210106
##export VERSION=3.4.1
##export VERSIONDATE=20210127
##export VERSION=3.4.2
##export VERSIONDATE=20210529
##export VERSION=4.0a1
##export VERSIONDATE=20210227
##export VERSION=4.0a2
##export VERSIONDATE=20210612
##export VERSION=4.0b1
##export VERSIONDATE=20211116
##export VERSION=4.0rc3
##export VERSIONDATE=20220113
##export VERSION=4.0.1
##export VERSIONDATE=20220224
##export VERSION=4.0.2
##export VERSIONDATE=20220409
##export VERSION=4.0.3
##export VERSIONDATE=20221109
##export VERSION=4.1a1
##export VERSIONDATE=20220507
##export VERSION=4.1b1
##export VERSIONDATE=20220507
##export VERSION=4.1.1
##export VERSIONDATE=20230307
##export VERSION=4.1.2
##export VERSIONDATE=20230609
#####FORCE_SSE42=ON but unable to compile with SSE4.2 enabled
#####configure: error: cannot support shared memory:  need either sysv shared memory functions or mmap in order to support shared memory
#wl-showstatus --package-version
##export DEPENDENCIES=mman-win32,mpl
###libfabric
##export OPTIONALDEPENDENCIES=
###export OPTIONALDEPENDENCIES=openpa
##export BUILDDEPENDENCIES=
##export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYRIGHT
#export LICENSETYPE=BSD-like
#export DOWNLOADURL="http://www.mpich.org/downloads/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.mpich.org/static/downloads/$VERSION/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
#  ./configure --help
#  head COPYING* LICENSE*
#  ls -l COPYING* LICENSE*
### fix configure.ac for possibly missing AM_PROG_AR
##patch -ulbf configure.ac << EOF
##--- configure.ac  2014-08-04 09:44:32.000000000 +0200
##+++ configure.ac  2014-08-04 09:44:36.000000000 +0200
##@@ -628 +628 @@
##-AM_PROG_AR
##+m4_ifdef([AM_PROG_AR], [AM_PROG_AR])
##EOF
##wl-showstatus configure &&
##mkdir -p m4 &&
##autoreconf -f -i -I$(pwd)/m4 -I$MINGWPREFIX/share/aclocal &&
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
##fi
## fix Unable to determine the size of MPI_BSEND_OVERHEAD in configure
#patch -ulbf configure << EOF
#@@ -44080 +44080,2 @@
#-    as_fn_error \$? "Unable to determine the size of MPI_BSEND_OVERHEAD" "\$LINENO" 5
#+    ac_cv_sizeof_MPIR_Bsend_data_t=128
#+    #as_fn_warning \$? "Unable to determine the size of MPI_BSEND_OVERHEAD" "\$LINENO" 5
#@@ -45381 +45382 @@
#-for ac_lib in '' socket; do
#+for ac_lib in '' ws2_32 socket; do
#@@ -45437 +45438 @@
#-for ac_lib in '' nsl; do
#+for ac_lib in '' ws2_32 nsl; do
#@@ -45470 +45471 @@
#-    for ac_func in socket setsockopt gethostbyname
#+    for ac_func in ws2_32 socket setsockopt gethostbyname
#@@ -45988 +45989 @@
#-for ac_lib in '' socket; do
#+for ac_lib in '' ws2_32 socket; do
#@@ -46044 +46045 @@
#-for ac_lib in '' nsl; do
#+for ac_lib in '' ws2_32 nsl; do
#@@ -46077 +46078 @@
#-    for ac_func in socket setsockopt gethostbyname
#+    for ac_func in ws2_32 socket setsockopt gethostbyname
#@@ -46393 +46394 @@
#-for ac_lib in '' socket; do
#+for ac_lib in '' ws2_32 socket; do
#@@ -50199 +50200 @@
#-for ac_lib in '' socket; do
#+for ac_lib in '' ws2_32 socket; do
#@@ -50255 +50256 @@
#-for ac_lib in '' nsl; do
#+for ac_lib in '' ws2_32 nsl; do
#EOF
## allow building libfabric
#sed -i.bak -e "s/as_fn_error\(.*libfabric only builds on \)/echo\1/" modules/libfabric/configure
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-thread-package=win &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-thread-package=posix --disable-fortran &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-thread-package=posix --disable-fortran CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-thread-package=posix --enable-cxx --disable-fortran --with-mpl-prefix=embedded --enable-error-checking=runtime --enable-error-messages=all --enable-tag-error-bits --enable-fast=all CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed" LIBS="-lmman -lws2_32" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-thread-package=posix --enable-cxx --disable-fortran --with-device=ch4:ofi --with-mpl-prefix=embedded --enable-error-checking=runtime --enable-error-messages=all --enable-tag-error-bits --enable-fast=all CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman -lws2_32" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-thread-package=posix --enable-cxx --disable-fortran --with-device=ch4:ucx --with-mpl-prefix=embedded --enable-error-checking=runtime --enable-error-messages=all --enable-tag-error-bits --enable-fast=all CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman -lws2_32" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-thread-package=posix --enable-cxx --disable-fortran --with-mpl-prefix=$MINGWPREFIX --enable-error-checking=runtime --enable-error-messages=all --enable-tag-error-bits --enable-fast=all CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman -lws2_32" &&
# wl-showstatus build &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#    make install-pkgconfigDATA
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



