export NAME="SoLoud"
export STATUS=
#export URL=http://sol.gfxile.net/soloud/
export URL=http://soloud-audio.com/
export BASENAME=soloud
export DESCRIPTION="SoLoud is an easy to use, free, portable c/c++ audio engine for games."
export CATEGORY=
export TYPE=library
#export VERSION=20160109
#export VERSIONDATE=20180331
####demos/welcome/main.cpp:41:10: fatal error: termios.h: No such file or directory
export VERSION=20181119
export VERSIONDATE=20181120
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=genie,cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE="Public Domain"
#export DOWNLOADURL="http://sol.gfxile.net/soloud/downloads.html"
export DOWNLOADURL="https://github.com/jarikomppa/soloud/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://sol.gfxile.net/soloud/soloud_$VERSION.zip
#export DOWNLOADSOURCEURL=https://github.com/jarikomppa/soloud/archive/RELEASE_$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#unzip -oq $TARBALLDIR/$BASENAME/soloud_$VERSION.zip -d $BASENAME-$VERSION
#cd $BASENAME-$VERSION
unzip -oq $TARBALLDIR/$BASENAME/soloud_$VERSION.zip
cd $BASENAME$VERSION
# fix src/audiosource/wav/stb_vorbis.c
sed -i.bak -e "s/^static \(__forceinline\)/\1/" src/audiosource/wav/stb_vorbis.c
# fix missing termios.h in demos/welcome/main.cpp (version >= 20181119)
sed -i.bak -e "s/_MSC_VER/_WIN32/" demos/welcome/main.cpp
wl-showstatus configure &&
 cd build &&
 genie --cc=gcc --os=windows --platform=x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) cmake &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
 echo "-Wl,--as-needed -lwinmm" >> cmake/simplest/CMakeFiles/simplest_x64.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lwinmm" >> cmake/welcome/CMakeFiles/welcome_x64.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lwinmm" >> cmake/null/CMakeFiles/null_x64.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lwinmm" >> cmake/enumerate/CMakeFiles/enumerate_x64.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lwinmm" >> cmake/c_test/CMakeFiles/c_test_x64.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lwinmm" >> cmake/c_test/CMakeFiles/c_test_x64.dir/linklibs.rsp &&
 cd .. &&
 wl-showstatus build &&
 make -Cbuild/cmake &&
 wl-showstatus build-install &&
 make -Cbuild/cmake install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME$VERSION



