export NAME="Deno"
export STATUS=
export URL=https://deno.land/
export BASENAME=deno
export DESCRIPTION="A modern runtime for JavaScript and TypeScript."
export CATEGORY=development
export TYPE=application
#export VERSION=1.24.3
#export VERSIONDATE=20220823
#export VERSION=1.25.0
#export VERSIONDATE=20220825
#export VERSION=1.25.1
#export VERSIONDATE=20220902
#export VERSION=1.25.2
#export VERSIONDATE=20220909
#export VERSION=1.25.3
#export VERSIONDATE=20220916
#export VERSION=1.25.4
#export VERSIONDATE=20220923
#export VERSION=1.26.0
#export VERSIONDATE=20220929
#export VERSION=1.26.1
#export VERSIONDATE=20221007
#export VERSION=1.26.2
#export VERSIONDATE=20221018
#export VERSION=1.27.0
#export VERSIONDATE=20221028
#export VERSION=1.27.1
#export VERSIONDATE=20221104
#export VERSION=1.27.2
#export VERSIONDATE=20221109
#export VERSION=1.28.0
#export VERSIONDATE=20221114
#export VERSION=1.28.1
#export VERSIONDATE=20221117
#export VERSION=1.28.2
#export VERSIONDATE=20221125
#export VERSION=1.28.3
#export VERSIONDATE=20221201
#export VERSION=1.29.0
#export VERSIONDATE=20221215
#export VERSION=1.29.1
#export VERSIONDATE=20221216
#export VERSION=1.29.2
#export VERSIONDATE=20230106
#export VERSION=1.29.3
#export VERSIONDATE=20230114
#export VERSION=1.29.4
#export VERSIONDATE=20230117
#export VERSION=1.30.0
#export VERSIONDATE=20230126
#export VERSION=1.30.1
#export VERSIONDATE=20230203
#export VERSION=1.30.2
#export VERSIONDATE=20230204
#export VERSION=1.30.3
#export VERSIONDATE=20230207
#export VERSION=1.31.0
#export VERSIONDATE=20230224
#export VERSION=1.31.1
#export VERSIONDATE=20230225
#export VERSION=1.31.2
#export VERSIONDATE=20230310
#export VERSION=1.31.3
#export VERSIONDATE=20230316
#export VERSION=1.32.0
#export VERSIONDATE=20230323
#export VERSION=1.32.1
#export VERSIONDATE=20230324
#export VERSION=1.32.2
#export VERSIONDATE=20230401
#export VERSION=1.32.3
#export VERSIONDATE=20230402
#export VERSION=1.32.4
#export VERSIONDATE=20230413
#export VERSION=1.32.5
#export VERSIONDATE=20230419
#export VERSION=1.33.0
#export VERSIONDATE=20230428
#export VERSION=1.33.1
#export VERSIONDATE=20230429
#export VERSION=1.33.2
#export VERSIONDATE=20230505
#export VERSION=1.33.3
#export VERSIONDATE=20230512
#export VERSION=1.33.4
#export VERSIONDATE=20230519
#export VERSION=1.34.0
#export VERSIONDATE=20230525
#export VERSION=1.34.1
#export VERSIONDATE=20230530
#export VERSION=1.34.2
#export VERSIONDATE=20230609
#export VERSION=1.34.3
#export VERSIONDATE=20230616
#export VERSION=1.35.0
#export VERSIONDATE=20230705
#export VERSION=1.35.1
#export VERSIONDATE=20230713
#export VERSION=1.35.2
#export VERSIONDATE=20230720
#export VERSION=1.35.3
#export VERSIONDATE=20230727
#export VERSION=1.36.0
#export VERSIONDATE=20230804
#export VERSION=1.36.1
#export VERSIONDATE=20230810
#export VERSION=1.36.2
#export VERSIONDATE=20230822
#export VERSION=1.36.3
#export VERSIONDATE=20230825
#export VERSION=1.36.4
#export VERSIONDATE=20230902
#export VERSION=1.37.0
#export VERSIONDATE=20230920
#export VERSION=1.37.1
#export VERSIONDATE=20230927
#export VERSION=1.37.2
#export VERSIONDATE=20231013
#export VERSION=1.38.0
#export VERSIONDATE=20231102
#export VERSION=1.38.1
#export VERSIONDATE=20231110
#export VERSION=1.38.2
#export VERSIONDATE=20231117
#export VERSION=1.38.3
#export VERSIONDATE=20231124
#export VERSION=1.38.4
#export VERSIONDATE=20231201
#export VERSION=1.38.5
#export VERSIONDATE=20231206
#export VERSION=1.39.0
#export VERSIONDATE=20231214
#export VERSION=1.39.1
#export VERSIONDATE=20231222
#export VERSION=1.39.2
#export VERSIONDATE=20240105
#export VERSION=1.39.3
#export VERSIONDATE=20240113
#export VERSION=1.39.4
#export VERSIONDATE=20240114
#export VERSION=1.40.0
#export VERSIONDATE=20240125
#export VERSION=1.40.1
#export VERSIONDATE=20240126
#export VERSION=1.40.2
#export VERSIONDATE=20240127
#export VERSION=1.40.3
#export VERSIONDATE=20240201
#export VERSION=1.40.4
#export VERSIONDATE=20240209
#export VERSION=1.40.5
#export VERSIONDATE=20240215
#export VERSION=1.41.0
#export VERSIONDATE=20240222
#export VERSION=1.41.1
#export VERSIONDATE=20240301
#export VERSION=1.41.2
#export VERSIONDATE=20240308
#export VERSION=1.41.3
#export VERSIONDATE=20240315
#export VERSION=1.42.0
#export VERSIONDATE=20240328
#export VERSION=1.42.1
#export VERSIONDATE=20240401
#export VERSION=1.42.2
#export VERSIONDATE=20240411
#export VERSION=1.42.3
#export VERSIONDATE=20240412
#export VERSION=1.42.4
#export VERSIONDATE=20240416
#export VERSION=1.43.0
#export VERSIONDATE=20240501
#export VERSION=1.43.1
#export VERSIONDATE=20240502
#export VERSION=1.43.2
#export VERSIONDATE=20240509
#export VERSION=1.43.3
#export VERSIONDATE=20240511
#export VERSION=1.43.4
#export VERSIONDATE=20240517
#export VERSION=1.43.5
#export VERSIONDATE=20240518
#export VERSION=1.43.6
#export VERSIONDATE=20240522
#export VERSION=1.44.0
#export VERSIONDATE=20240530
#export VERSION=1.44.1
#export VERSIONDATE=20240606
#export VERSION=1.44.2
#export VERSIONDATE=20240613
#export VERSION=1.44.3
#export VERSIONDATE=20240619
#export VERSION=1.44.4
#export VERSIONDATE=20240620
#export VERSION=1.45.0
#export VERSIONDATE=20240711
#export VERSION=1.45.2
#export VERSIONDATE=20240713
#export VERSION=1.45.3
#export VERSIONDATE=20240723
#export VERSION=1.45.4
#export VERSIONDATE=20240727
#export VERSION=1.45.5
#export VERSIONDATE=20240801
#export VERSION=1.46.0
#export VERSIONDATE=20240822
#export VERSION=1.46.2
#export VERSIONDATE=20240823
#export VERSION=1.46.3
#export VERSIONDATE=20240905
#export VERSION=2.0.0
#export VERSIONDATE=20241009
#export VERSION=2.0.1
#export VERSIONDATE=20241017
#export VERSION=2.0.2
#export VERSIONDATE=20241018
#export VERSION=2.0.3
#export VERSIONDATE=20241025
#export VERSION=2.0.4
#export VERSIONDATE=20241030
#export VERSION=2.0.5
#export VERSIONDATE=20241106
#export VERSION=2.0.6
#export VERSIONDATE=20241110
#export VERSION=2.1.0
#export VERSIONDATE=20241121
#export VERSION=2.1.1
#export VERSIONDATE=20241122
#export VERSION=2.1.2
#export VERSIONDATE=20241129
#export VERSION=2.1.3
#export VERSIONDATE=20241206
#export VERSION=2.1.4
#export VERSIONDATE=20241211
#export VERSION=2.1.5
#export VERSIONDATE=20250110
#export VERSION=2.1.6
#export VERSIONDATE=20250117
#export VERSION=2.1.7
#export VERSIONDATE=20250122
#export VERSION=2.1.9
#export VERSIONDATE=20250131
#export VERSION=2.1.10
#export VERSIONDATE=20250213
export VERSION=2.2.0
export VERSIONDATE=20250219
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/denoland/deno/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/denoland/deno/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION

  ./configure --help 2> /dev/null
  cat meson_options.txt 2> /dev/null
  head COPYING* LICENSE* LICENCE* COPYRIGHT*
  ls -ld COPYING* LICENSE* LICENCE* COPYRIGHT* configure* m4 CMakeLists.txt cmake Makefile GNUmakefile setup.py scons SConscript SConstruct meson.build meson_options.txt *.pro *.proj *.sln BUILD.gn .gn build 2> /dev/null

wl-showstatus build &&
 make &&
 #make CC=${CC:-gcc} &&
    echo OK

#GCCFLAG_ASNEEDED=$(echo "int main () { return 0; }"|gcc -xc - -Wl,--as-needed &>/dev/null && echo "-Wl,--as-needed")
#GCCFLAG_ASNEEDED=$(if gcc --help -v 2>/dev/null | grep -q " --as-needed"; then echo "-Wl,--as-needed"; fi)

wl-showstatus configure &&
 #wl-showstatus preconfigure &&
 #mkdir -p m4 &&
 ##intltoolize -f -c &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA

#grep -wi add_library $(find -name CMakeLists.txt -or -name '*.cmake')
#mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -S. -Bbuild_test -LH && echo OK; rm -rf build_test

#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DCMAKE_SYSTEM_NAME=Windows 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# #wl-showstatus build &&
# #make -Cbuild_win &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
#    echo OK

#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# #wl-showstatus build &&
# #ninja -Cbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK

#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# ## fix missing link libraries
# #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK

#-DCMAKE_BUILD_TYPE:STRING=MinSizeRel

#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS
## fix missing gio-unix
#sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -D documentation=true . build_static &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -D documentation=true . build_shared &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## add linker flag
# #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed/" build_shared/build.ninja &&
# ## add linker flag
# #sed -i.bak -e "s/^\s*LINK_ARGS\s*=.*\"-ladvapi32\"/& \"-Wl,--as-needed\"/" build_shared/build.ninja &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -C build_static install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -C build_static install/strip &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -C build_shared install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -C build_shared install/strip &&
#    echo OK && find . -name '*.a'

#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS -Dcpp_link_args=$LDFLAGS
## fix location of Perl
#sed -i.bak -e "s?'perl'?'$(cygpath -w $PERLDIR/bin/perl.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix detection of Python
#sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix missing gio-unix
##sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
#mkdir -p build_both &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Ddocumentation=true . build_both &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## fix Python path issues in meson_exe
# #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
# ## fix executing shell scripts
# #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install/strip &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
# #PATH=$PERLDIR/../c/bin:$PERLDIR/bin:$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'

#wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/python/Lib/site-packages &&
# PYTHONPATH=$INSTALLPREFIX/python/Lib/site-packages:$MINGWPREFIX/python/Lib/site-packages $PYDIR/python setup.py install --prefix=$(cygpath.exe -w $INSTALLPREFIX/python) &&
#    echo OK

#export DEPENDENCIES=qt
#wl-showstatus configure &&
# $MINGWPREFIX/qt/bin/qmake -makefile *.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# wl-showstatus build &&
# mingw32-make &&
#    echo OK

#export DEPENDENCIES=qt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# $MINGWPREFIX/qt/bin/qmake -makefile ../*.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ CONFIG+=staticlib &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# $MINGWPREFIX/qt/bin/qmake -makefile ../*.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# cd .. &&
# wl-showstatus build &&
# mingw32-make -Cbuild_static &&
# wl-showstatus build &&
# mingw32-make -Cbuild_shared &&
#    echo OK

#mkdir -p $INSTALLPREFIX/python/Lib/site-packages
#wl-showstatus build-install &&
# PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$PYDIR/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages $PYDIR/python.exe setup.py install --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
# ## delete any __pycache__ folder(s)
# #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
#    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



