#export NAME="INDI"
#export STATUS=
#export URL=http://www.indilib.org/
#export BASENAME=libindi
#export DESCRIPTION="INDI Library for Astronomical Instrumentation Control."
#export CATEGORY=hardware
#export TYPE=library
##export VERSION=0.9.9
##export VERSIONDATE=20141209
##export VERSION=1.0.0
##export VERSIONDATE=20150215
#####libs/indicom.c:265:3: error: unknown type name 'fd_set'
##export VERSION=1.1.0
##export VERSIONDATE=20150906
#####string sub-command REGEX, mode REPLACE needs at least 6 arguments total to command.
##export VERSION=1.2.0
##export VERSIONDATE=20160202
##export VERSION=1.4.0
##export VERSIONDATE=20170227
##export VERSION=1.4.1
##export VERSIONDATE=20170227
#export VERSION=1.6.2
#export VERSIONDATE=20180208
#wl-showstatus --package-version
#export DEPENDANCIES=libusb,libnova,cfitsio,pthreads,gsl
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake
#export LICENSEFILE=LICENSE
#export LICENSETYPE=LGPL
#export DOWNLOADURL="http://sourceforge.net/projects/indi/files/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/indi/$BASENAME\_$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME\_$VERSION.tar.gz
#cd $BASENAME-$VERSION || cd $BASENAME\_$VERSION || cd libindi
## fix CMakeLists.txt
#####install Library TARGETS given no DESTINATION!
#mv CMakeLists.txt CMakeLists.txt.bak
#sed -e "s/\(LIBRARY DESTINATION \${LIB_DESTINATION}\))/\1 ARCHIVE DESTINATION \${BIN_INSTALL_DIR})/" CMakeLists.txt.bak > CMakeLists.txt
#mv libs/indibase/alignment/CMakeLists.txt libs/indibase/alignment/CMakeLists.txt.bak
#sed -e "s/\(LIBRARY DESTINATION \${[A-Z_]*}\))/\1 ARCHIVE DESTINATION \${BIN_INSTALL_DIR})/" libs/indibase/alignment/CMakeLists.txt.bak > libs/indibase/alignment/CMakeLists.txt
#wl-showstatus configure
# #rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DM_LIB:FILEPATH="" . -LH && echo OK
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DM_LIB:FILEPATH=" " . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION $BASENAME\_$VERSION



export NAME="INDI"
export STATUS=
export URL=http://www.indilib.org/
export BASENAME=libindi
export DESCRIPTION="INDI Library for Astronomical Instrumentation Control."
export CATEGORY=hardware
export TYPE=library
export VERSION=1.9.8
export VERSIONDATE=20221018
wl-showstatus --package-version
export DEPENDANCIES=libusb,libnova,cfitsio,pthreads,gsl,boost
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/indilib/indi/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/indilib/indi/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd indi-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DINDI_BUILD_WEBSOCKET:BOOL=ON -DINDI_BUILD_CLIENT:BOOL=ON -DINDI_BUILD_SERVER:BOOL=ON -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DINDI_BUILD_WEBSOCKET:BOOL=ON -DINDI_BUILD_CLIENT:BOOL=ON -DINDI_BUILD_SERVER:BOOL=ON -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 #wl-showstatus build &&
 #ninja -Cbuild_static &&
 #wl-showstatus build &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 #ninja -Cbuild_static library/install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf indi-$VERSION



