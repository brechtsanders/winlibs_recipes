#export NAME="Qt port of WebKit"
#export STATUS=
#export URL=https://github.com/qtwebkit/qtwebkit
##export URL=https://code.qt.io/cgit/qt/qtwebkit.git
#export BASENAME=qtwebkit
#export DESCRIPTION="WebKit is an open source web browser engine. WebKit's HTML and JavaScript code began as a branch of the KHTML and KJS libraries from KDE. As part of KDE framework KHTML was based on Qt but during their porting efforts Apple's engineers made WebKit toolkit independent. QtWebKit is a project aiming at porting this fabulous engine back to Qt."
#export CATEGORY=framework
#export TYPE=library
#export VERSION=5.212.0-alpha4
#export VERSIONDATE=20200526
#wl-showstatus --package-version
#export DEPENDENCIES=qt
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=
#export LICENSETYPE=
#export DOWNLOADURL="https://github.com/qtwebkit/qtwebkit/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/qtwebkit/qtwebkit/releases/download/qtwebkit-$VERSION/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
##mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -DPORT:STRING=WinCairo -S. -Bbuild_test -LH && echo OK; rm -rf build_test
##mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -DPORT:STRING=Qt -S. -Bbuild_test -LH && echo OK; rm -rf build_test
##export BUILDDEPENDENCIES=cmake
##export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_win &&
# wl-showstatus configure &&
# #PKG_CONFIG=$(which pkg-config.exe) PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPORT:STRING=WinCairo -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
# PKG_CONFIG=$(which pkg-config.exe) PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED_CORE:BOOL=ON -DPORT:STRING=Qt -DENABLE_QT_GESTURE_EVENTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
# #wl-showstatus build &&
# #make -Cbuild_win &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Qt port of WebKit"
export STATUS=
export URL=https://github.com/qtwebkit/qtwebkit
#export URL=https://code.qt.io/cgit/qt/qtwebkit.git
export BASENAME=qtwebkit
export DESCRIPTION="WebKit is an open source web browser engine. WebKit's HTML and JavaScript code began as a branch of the KHTML and KJS libraries from KDE. As part of KDE framework KHTML was based on Qt but during their porting efforts Apple's engineers made WebKit toolkit independent. QtWebKit is a project aiming at porting this fabulous engine back to Qt."
export CATEGORY=framework
export TYPE=library
export VERSION=5.5.1
export VERSIONDATE=20211009
wl-showstatus --package-version
export DEPENDENCIES=qt,icu
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,winflexbison,ruby
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
#export DOWNLOADURL="https://github.com/qt/qtwebkit/releases"
export DOWNLOADURL="https://github.com/qt/qtwebkit/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/qt/qtwebkit/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix Source/WTF/wtf/text/StringBuilder.h (version >= 5.5.1)
patch -ulbf Source/WTF/wtf/text/StringBuilder.h << EOF
@@ -51,2 +51,3 @@
     ALWAYS_INLINE void append(const char* characters, unsigned length) { append(reinterpret_cast<const LChar*>(characters), length); }
+    ALWAYS_INLINE void append(const wchar_t* characters) { append(reinterpret_cast<const UChar*>(characters), wcslen(characters)); }

EOF
# fix Source/WebCore/platform/graphics/SegmentedFontData.cpp (version >= 5.5.1)
patch -ulbf Source/WebCore/platform/graphics/SegmentedFontData.cpp << EOF
@@ -63,3 +63,3 @@
     for (int i = 0; i < length; ) {
-        U16_NEXT(characters, i, length, c)
+        U16_NEXT(characters, i, length, c);
         if (!containsCharacter(c))
EOF
# fix Source/WTF/wtf/text/WTFString.h (version >= 5.5.1)
patch -ulbf Source/WTF/wtf/text/WTFString.h << EOF
@@ -104,2 +104,4 @@
     WTF_EXPORT_STRING_API String(const UChar* characters, unsigned length);
+    String(const wchar_t* characters, unsigned length) : String(reinterpret_cast<const UChar*>(characters), length) { }
+    String(const wchar_t* characters) : String(reinterpret_cast<const UChar*>(characters), wcslen(characters)) { }

EOF

#wl-showstatus configure &&
# PKG_CONFIG= PATH=$PYDIR:$PATH $MINGWPREFIX/qt/bin/qmake -makefile WebKit.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# wl-showstatus build &&
# mingw32-make &&
#    echo OK

#wl-showstatus configure &&
# cd Tools &&
# PKG_CONFIG= PATH=$PYDIR:$PATH $MINGWPREFIX/qt/bin/qmake -makefile Tools.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# wl-showstatus build &&
# mingw32-make &&
# cd .. &&
#    echo OK

#PKG_CONFIG= PATH=$MINGWPREFIX/qt/bin:$MINGWPREFIX/share/winflexbison:$PYDIR:$PATH:$PERLDIR/bin QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ $PERLDIR/bin/perl.exe Tools/Scripts/build-webkit --prefix=$INSTALLPREFIX --release --qt --only-webkit --no-webkit1 --makeargs="CXXFLAGS=-fpermissive" --qmakearg="QMAKE_CXXFLAGS+=-fpermissive" --cmakeargs="-DCMAKE_CXX_FLAGS:STRING=-fpermissive" &&
PKG_CONFIG= PATH=$MINGWPREFIX/qt/bin:$MINGWPREFIX/share/winflexbison:$PYDIR:$PATH:$PERLDIR/bin QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ $PERLDIR/bin/perl.exe Tools/Scripts/build-webkit --prefix=$INSTALLPREFIX --release --qt --only-webkit --no-webkit1 --qmakearg="QMAKE_CXXFLAGS+=-fpermissive" &&
    echo OK

#grep -wi add_library $(find -name CMakeLists.txt -or -name '*.cmake')
#mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -SSource -Bbuild_test -LH && echo OK; rm -rf build_test
#mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -STools -Bbuild_test -LH && echo OK; rm -rf build_test

mkdir -p build_tools_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -STools -Bbuild_tools_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_tools_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_tools_win install/strip &&
    echo OK


# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



