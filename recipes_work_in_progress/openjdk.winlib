export NAME="OpenJDK"
export STATUS=
export URL=https://openjdk.org/projects/jdk/
export BASENAME=openjdk
export DESCRIPTION="The goal of this long-running Project is to produce a series of open-source reference implementations of the Java SE Platform, as specified by JSRs in the Java Community Process."
export CATEGORY=development
export TYPE=application
#export VERSION=20-16
#export VERSIONDATE=20220928
#export VERSION=21-15
#export VERSIONDATE=20230323
export VERSION=21-16
export VERSIONDATE=20230401
####configure: error: Could not find required tool for ZIPEXE
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
#export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="https://github.com/openjdk/jdk/tags jdk-"
export DOWNLOADURL="https://openjdk.org/projects/jdk/"
#export DOWNLOADURL="https://jdk.java.net/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/openjdk/jdk/archive/refs/tags/jdk-$(echo $VERSION|tr - +).tar.gz
#export DOWNLOADSOURCEURL=https://download.java.net/openjdk/jdk20/ri/openjdk-20+36_src.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/jdk-$(echo $VERSION|tr - +).tar.gz
cd jdk-jdk-$VERSION
# prepare bootstrap version
wl-download -v -d $TARBALLDIR/$BASENAME https://download.java.net/java/GA/jdk19/877d6127e982470ba2a7faa31cc93d04/36/GPL/openjdk-19_windows-x64_bin.zip
unzip -oq $TARBALLDIR/$BASENAME/openjdk-19_windows-x64_bin.zip -dbootstrap
BOOTSTRAPDIR=$PWD/bootstrap/jdk-19
# fix build/.configure-support/generated-configure.sh (version >= 20-16)
sed -i.bak -e "s/\(VALID_TOOLCHAINS_windows=\"\)\(microsoft\)/\1gcc clang \2/; s/as_fn_error\(.*\)\(Could not find a proper .*VC\|Could not find \$DLL_NAME\)/echo\1\2/" build/.configure-support/generated-configure.sh
#sed -i.bak -e "s/\$as_echo\(.*Toolchain type .* is not valid on this platform\)/echo\1/" build/.configure-support/generated-configure.sh
# fix  make/scripts/fixpath.sh (version >= 20-16)
sed -i.bak -e "s?winpath=\"\${winpath//'/'/'\\\\'}\"?winpath=\$winpath #&?" make/scripts/fixpath.sh
wl-showstatus configure &&
 #wl-showstatus preconfigure &&
 #mkdir -p m4 &&
 ##intltoolize -f -c &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 TEMP=$(cygpath -m $TEMP) TMP=$(cygpath -m $TMP) ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --openjdk-target=$RUNPLATFORM --with-toolchain-type=$(if ${CC:-gcc} --version|grep -q clang; then echo "clang"; else echo "gcc"; fi) --with-libjpeg=system --with-giflib=system --with-libpng=system --with-zlib=system --with-lcms=system --with-harfbuzz=system --without-x --with-boot-jdk=$BOOTSTRAPDIR &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build &&
 MAKEFLAGS= TEMP=$(cygpath -m $TEMP) TMP=$(cygpath -m $TMP) make JOBS=$NUMBER_OF_PROCESSORS &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf jdk-jdk-$VERSION



