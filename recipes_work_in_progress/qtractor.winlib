export NAME="Qtractor"
export STATUS=
export URL=https://www.qtractor.org/
export BASENAME=qtractor
export DESCRIPTION="Qtractor is an Audio/MIDI multi-track sequencer application written in C++ with the Qt framework."
export CATEGORY=audio
export TYPE=application
export VERSION=1.5.3
export VERSIONDATE=20250209
wl-showstatus --package-version
export DEPENDENCIES=qt6,libdl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
export DOWNLOADURL="https://sourceforge.net/projects/qtractor/files/qtractor/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://download.sourceforge.net/qtractor/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p src/win32
touch src/win32/qtractor.rc
mkdir -p build_win/src
echo ""|${CXX:-g++} -xc++ -c - -o build_win/src/qtractor.res.obj
# don't abort if ALSA libraries are missing in CMakeLists.txt (version >= 1.5.3)
patch -ulbf CMakeLists.txt << EOF
@@ -335,3 +335,3 @@
 # Check for ALSA libraries.
-pkg_check_modules (ALSA REQUIRED IMPORTED_TARGET alsa)
+pkg_check_modules (ALSA IMPORTED_TARGET alsa)
 if (ALSA_FOUND)
@@ -343,3 +343,2 @@
 else ()
-  message (FATAL_ERROR "*** ALSA library not found.")
   set (CONFIG_LIBASOUND 0)
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCONFIG_QT6:BOOL=ON -DQT_DIR:PATH=$MINGWPREFIX/qt6/lib/cmake/Qt6 -DQt6LinguistTools_DIR:PATH=$MINGWPREFIX/qt6/lib/cmake/Qt6LinguistTools -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



