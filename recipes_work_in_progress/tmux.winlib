export NAME="tmux"
export STATUS=
#export URL=http://tmux.sourceforge.net/
export URL=https://tmux.github.io/
export BASENAME=tmux
export DESCRIPTION="terminal multiplexer"
export CATEGORY=system
export TYPE=application
#export VERSION=1.9a
#export VERSIONDATE=20140821
#export VERSION=2.0
#export VERSIONDATE=20150507
#export VERSION=2.3
#export VERSIONDATE=20170313
#export VERSION=2.4
#export VERSIONDATE=20170420
####configure: error: "CMSG_DATA not found"
#export VERSION=2.5
#export VERSIONDATE=20170529
#export VERSION=2.6
#export VERSIONDATE=20171005
#export VERSION=2.7
#export VERSIONDATE=20180414
#export VERSION=2.8
#export VERSIONDATE=20181018
#export VERSION=2.9
#export VERSIONDATE=20190425
#export VERSION=2.9a
#export VERSIONDATE=20190501
#export VERSION=3.0
#export VERSIONDATE=20191126
#export VERSION=3.0a
#export VERSIONDATE=20191201
#export VERSION=3.1
#export VERSIONDATE=20200425
####tmux.h:25:21: fatal error: sys/uio.h: No such file or directory
#export VERSION=3.1a
#export VERSIONDATE=20200430
#export VERSION=3.1b
#export VERSIONDATE=20200504
#export VERSION=3.1c
#export VERSIONDATE=20201031
#export VERSION=3.2
#export VERSIONDATE=20210413
#export VERSION=3.2a
#export VERSIONDATE=20210413
export VERSION=3.3
export VERSIONDATE=20220601
####configure: error: "CMSG_DATA not found"
wl-showstatus --package-version
export DEPENDANCIES=libevent
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/tmux/files/tmux/"
export DOWNLOADURL="https://github.com/tmux/tmux/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/tmux/tmux/tmux-$(echo $VERSION|sed -e "s/[a-z]*$//")/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/tmux/tmux/releases/download/$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
# fix configure
mv configure configure.bak &&
sed -e "s?sys/socket\.h?wincrypt.h?" configure.bak > configure
wl-showstatus configure &&
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt
#wl-showstatus configure
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



