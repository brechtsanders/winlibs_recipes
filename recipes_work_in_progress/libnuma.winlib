export NAME="libnuma"
export STATUS=
#export URL=http://oss.sgi.com/projects/libnuma/
export URL=https://github.com/numactl/numactl
export BASENAME=libnuma
export DESCRIPTION="The libnuma library provides convenient ways for you to add NUMA memory policies into your own program. The numactl program allows you to run your application program on specific cpu's and memory nodes. It does this by supplying a NUMA memory policy to the operating system before running your program. "
export CATEGORY=system
export TYPE=library,application
#export VERSION=2.0.9
#export VERSIONDATE=20140803
#export VERSION=2.0.11
#export VERSIONDATE=20170612
#export VERSION=2.0.12
#export VERSIONDATE=20180616
#export VERSION=2.0.13
#export VERSIONDATE=20190830
#export VERSION=2.0.14
#export VERSIONDATE=20200918
export VERSION=2.0.15
export VERSIONDATE=20220908
#export VERSION=2.0.16
#export VERSIONDATE=20221004
####libnuma.c:926:52: error: 'MREMAP_MAYMOVE' undeclared (first use in this function)
#export VERSION=2.0.17
#export VERSIONDATE=20240117
#export VERSION=2.0.18
#export VERSIONDATE=20240207
#export VERSION=2.0.19
#export VERSIONDATE=20241025
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=README
#export LICENSETYPE=GPL
export LICENSEFILE=LICENSE.LGPL2.1
export LICENSETYPE=LGPL
#export DOWNLOADURL="ftp://oss.sgi.com/www/projects/libnuma/download numactl-"
export DOWNLOADURL="https://github.com/numactl/numactl/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=ftp://oss.sgi.com/www/projects/libnuma/download/numactl-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/numactl/numactl/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/numactl-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/numactl-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd numactl-$VERSION
# fix libnuma.c (version >= 2.0.17)
patch -ulbf libnuma.c << EOF
@@ -950,2 +950,5 @@
        char *mem;
+#ifndef MREMAP_MAYMOVE
+#define MREMAP_MAYMOVE 0
+#endif
        mem = mremap(old_addr, old_size, new_size, MREMAP_MAYMOVE);
EOF

#wl-showstatus build &&
# make CC=${CC:-gcc} PREFIX=$INSTALLPREFIX &&
#    echo OK

wl-showstatus configure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt
#wl-showstatus configure
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf numactl-$VERSION



