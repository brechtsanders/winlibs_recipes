export NAME="libisofs"
export STATUS=
export URL=http://libburnia-project.org/
export BASENAME=libisofs
export DESCRIPTION=""
export CATEGORY=multimedia
export TYPE=library
#export VERSION=1.3.6
#export VERSIONDATE=20140524
#export VERSION=1.3.8
#export VERSIONDATE=20140628
#export VERSION=1.4.0
#export VERSIONDATE=20150518
#export VERSION=1.4.2
#export VERSIONDATE=20151129
#export VERSION=1.4.4
#export VERSIONDATE=20160703
#export VERSION=1.4.6
#export VERSIONDATE=20160917
#export VERSION=1.4.8
#export VERSIONDATE=20170914
#export VERSION=1.5.0
#export VERSIONDATE=20180926
####libisofs/libisofs.h:1965:56: error: unknown type name 'uid_t'
export VERSION=1.5.2
export VERSIONDATE=20191028
####libisofs/tree.c:33:10: fatal error: fnmatch.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://libburnia-project.org/wiki/Releases"
export DOWNLOADURL="https://dev.lovelyhq.com/libburnia/web/wiki/Releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://files.libburnia-project.org/releases/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$(echo $VERSION|sed -e "s/\.pl[0-9]*$//")
# fix missing uid_t/gid_t libisofs/libisofs.h
mv libisofs/libisofs.h libisofs/libisofs.h.bak
cat > libisofs/libisofs.h << EOF
#if !defined(LIBISO_LIBISOFS_H_) && defined(_WIN32)
typedef unsigned int uid_t;
typedef unsigned int gid_t;
#endif
EOF
cat libisofs/libisofs.h.bak >> libisofs/libisofs.h
# fix missing S_IFLNK/S_IFSOCK in libisofs/builder.c
patch -ulbf libisofs/builder.c << EOF
@@ -179,2 +179,3 @@
         break;
+#ifdef S_IFLNK
     case S_IFLNK:
@@ -198,3 +199,6 @@
         break;
+#endif
+#ifdef S_IFSOCK
     case S_IFSOCK:
+#endif
     case S_IFBLK:
EOF
# fix missing S_ISLNK in libisofs/node.c
patch -ulbf libisofs/node.c << EOF
@@ -1532,4 +1532,7 @@
 int iso_node_new_symlink(char *name, char *dest, IsoSymlink **link)
 {
+#ifdef _WIN32
+    return ISO_NULL_POINTER;
+#else
     IsoSymlink *new;
     int ret;
@@ -1563,4 +1566,5 @@
     *link = new;
     return ISO_SUCCESS;
+#endif
 }

@@ -1574,5 +1578,9 @@
         return ISO_NULL_POINTER;
     }
-    if (S_ISLNK(mode) || S_ISREG(mode) || S_ISDIR(mode)) {
+    if (
+#ifdef S_ISLNK
+        S_ISLNK(mode) ||
+#endif
+        S_ISREG(mode) || S_ISDIR(mode)) {
         return ISO_WRONG_ARG_VALUE;
     }
EOF
# fix missing S_IFSOCK in libisofs/tree.c (version >= 1.5.2)
patch -ulbf libisofs/tree.c << EOF
@@ -799,4 +799,6 @@
             return image->ignore_special & 0x04 ? 1 : 0;
+#ifdef S_IFSOCK
         case S_IFSOCK:
             return image->ignore_special & 0x02 ? 1 : 0;
+#endif
         case S_IFIFO:
EOF
# fix libisofs/fs_image.c (version >= 1.5.2)
patch -ulbf libisofs/fs_image.c << EOF
@@ -33,3 +33,6 @@
 #include <locale.h>
+#ifdef _WIN32
+#else
 #include <langinfo.h>
+#endif
 #include <limits.h>
@@ -535,2 +538,3 @@

+#ifdef S_ISLNK
     if (S_ISLNK(data->info.st_mode)) {
@@ -539,2 +543,3 @@
     }
+#endif
     *info = data->info;
@@ -1073,2 +1078,3 @@

+#ifdef S_ISLNK
     if (!S_ISLNK(data->info.st_mode)) {
@@ -1076,2 +1082,3 @@
     }
+#endif

@@ -1116,2 +1123,3 @@
     /* free destination if it is a link */
+#ifdef S_ISLNK
     if (S_ISLNK(data->info.st_mode)) {
@@ -1119,2 +1127,3 @@
     }
+#endif
     iso_filesystem_unref(data->fs);
@@ -2040,6 +2049,9 @@
     atts.st_dev = fsdata->id;
+#ifndef _WIN32
     atts.st_blksize = BLOCK_SIZE;
     atts.st_blocks = DIV_UP(atts.st_size, BLOCK_SIZE);
+#endif

     /* TODO #00014 : more sanity checks to ensure dir record info is valid */
+#ifdef S_ISLNK
     if (S_ISLNK(atts.st_mode) && (linkdest == NULL)) {
@@ -2050,2 +2062,3 @@
     }
+#endif

@@ -2108,5 +2121,8 @@

+#ifdef S_ISLNK
     if (S_ISLNK(atts.st_mode)) {
         ifsdata->data.content = linkdest;
-    } else if (linkdest != NULL) {
+    } else
+#endif
+    if (linkdest != NULL) {
         ret = iso_rr_msg_submit(fsdata, 19, ISO_WRONG_RR_WARN, 0,
@@ -3351,2 +3367,3 @@
         break;
+#ifdef S_IFLNK
     case S_IFLNK:
@@ -3375,3 +3392,6 @@
         break;
+#endif
+#ifdef S_IFSOCK
     case S_IFSOCK:
+#endif
     case S_IFBLK:
@@ -3502,4 +3522,6 @@
     atts.st_dev = fsdata->id;
+#ifndef _WIN32
     atts.st_blksize = BLOCK_SIZE;
     atts.st_blocks = DIV_UP(atts.st_size, BLOCK_SIZE);
+#endif

EOF
wl-showstatus configure &&
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION(`gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/"`)" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -liconv" &&
 LIBISOFS_ASSUME_ICONV=yes ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -liconv" &&
 #LIBISOFS_ASSUME_ICONV=yes ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/fnmatch" LDFLAGS="-Wl,--as-needed -liconv -lfnmatch" &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt
#wl-showstatus configure
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$(echo $VERSION|sed -e "s/\.pl[0-9]*$//")



