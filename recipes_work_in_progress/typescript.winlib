export NAME="TypeScript"
export STATUS=
export URL=https://www.typescriptlang.org/
#export URL=https://github.com/Microsoft/TypeScript
export BASENAME=typescript
export DESCRIPTION="TypeScript is a superset of JavaScript that compiles to clean JavaScript output."
export CATEGORY=development
export TYPE=application
#export VERSION=3.9.3
#export VERSIONDATE=20200604
#export VERSION=3.9.5
#export VERSIONDATE=20200605
#export VERSION=3.9.6
#export VERSIONDATE=20200707
#export VERSION=3.9.7
#export VERSIONDATE=20200717
#export VERSION=3.9.8
#export VERSIONDATE=20210210
#export VERSION=3.9.9
#export VERSIONDATE=20210211
#export VERSION=3.9.10
#export VERSIONDATE=20210617
#export VERSION=4.0.2
#export VERSIONDATE=20200821
#export VERSION=4.0.3
#export VERSIONDATE=20200919
#export VERSION=4.0.5
#export VERSIONDATE=20201027
#export VERSION=4.0.7
#export VERSIONDATE=20210211
#export VERSION=4.0.8
#export VERSIONDATE=20210617
#export VERSION=4.1.2
#export VERSIONDATE=20201120
#export VERSION=4.1.3
#export VERSIONDATE=20201216
#export VERSION=4.1.4
#export VERSIONDATE=20210210
#export VERSION=4.1.5
#export VERSIONDATE=20210211
#export VERSION=4.1.6
#export VERSIONDATE=20210617
#export VERSION=4.2.2
#export VERSIONDATE=20210226
#export VERSION=4.2.3
#export VERSIONDATE=20210306
#export VERSION=4.2.4
#export VERSIONDATE=20210410
#export VERSION=4.3.2
#export VERSIONDATE=20210527
#export VERSION=4.3.3
#export VERSIONDATE=20210617
#export VERSION=4.3.4
#export VERSIONDATE=20210618
#export VERSION=4.3.5
#export VERSIONDATE=20210701
#export VERSION=4.4.2
#export VERSIONDATE=20210827
#export VERSION=4.4.3
#export VERSIONDATE=20210911
#export VERSION=4.4.4
#export VERSIONDATE=20211013
#export VERSION=4.5.2
#export VERSIONDATE=20211118
#export VERSION=4.5.3
#export VERSIONDATE=20211211
#export VERSION=4.5.4
#export VERSIONDATE=20211214
#export VERSION=4.5.5
#export VERSIONDATE=20220121
#export VERSION=4.6.2
#export VERSIONDATE=20220301
#export VERSION=4.6.3
#export VERSIONDATE=20220325
#export VERSION=4.6.4
#export VERSIONDATE=20220429
#export VERSION=4.7.2
#export VERSIONDATE=20220525
#export VERSION=4.7.3
#export VERSIONDATE=20220604
#export VERSION=4.7.4
#export VERSIONDATE=20220618
#export VERSION=4.8.2
#export VERSIONDATE=20220826
#export VERSION=4.8.3
#export VERSIONDATE=20220909
#export VERSION=4.8.4
#export VERSIONDATE=20220928
#export VERSION=4.9.3
#export VERSIONDATE=20221118
#export VERSION=4.9.4
#export VERSIONDATE=20221208
#export VERSION=4.9.5
#export VERSIONDATE=20230201
#export VERSION=5.0.2
#export VERSIONDATE=20230317
#export VERSION=5.0.3
#export VERSIONDATE=20230406
#export VERSION=5.0.4
#export VERSIONDATE=20230408
export VERSION=5.1.3
export VERSIONDATE=20230602
wl-showstatus --package-version
export DEPENDENCIES=nodejs
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/microsoft/TypeScript/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/microsoft/TypeScript/releases/download/v$VERSION/$BASENAME-$VERSION.tgz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tgz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION
  ./configure --help 2> /dev/null
  cat meson_options.txt 2> /dev/null
  head COPYING* LICENSE* COPYRIGHT*
  ls -ld COPYING* LICENSE* COPYRIGHT* configure* m4 CMakeLists.txt cmake Makefile GNUmakefile setup.py scons SConscript SConstruct meson.build meson_options.txt *.pro build 2> /dev/null

wl-showstatus configure &&
 # mkdir -p m4 &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA

#mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -S. -Bbuild_test -LH && echo OK; rm -rf build_test
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# #wl-showstatus build &&
# #make -Cbuild_win &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
#    echo OK

#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# #wl-showstatus build &&
# #make -Cbuild_static &&
# #wl-showstatus build &&
# #make -Cbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
#    echo OK

#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK

#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS
## fix missing gio-unix
#sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -D documentation=true . build_static &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -D documentation=true . build_shared &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_static install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_static install/strip &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_shared install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_shared install/strip &&
#    echo OK && find . -name '*.a'

#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS
## fix missing gio-unix
#sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#mkdir -p build_both &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -D documentation=true . build_both &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## fix Python path issues in meson_exe
# #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_both install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_both install/strip &&
#    echo OK && find . -name '*.a'

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



