export NAME="Partclone"
export STATUS=
export URL=https://partclone.org/
#export URL=https://sourceforge.net/projects/partclone/
#export URL=https://github.com/Thomas-Tsai/partclone
export BASENAME=partclone
export DESCRIPTION="Partclone is a project like the well-known backup utility \"Partition Image\" a.k.a partimage. Partclone provide utilities to back up used blocks and design for higher compatibility of the file system using supported library like e2fslibs."
export CATEGORY=backup
export TYPE=application
#export VERSION=0.3.17
#export VERSIONDATE=20201216
#export VERSION=0.3.18
#export VERSIONDATE=20210927
#export VERSION=0.3.19
#export VERSIONDATE=20220318
#export VERSION=0.3.20
#export VERSIONDATE=20220428
#export VERSION=0.3.21
#export VERSIONDATE=20230107
#export VERSION=0.3.22
#export VERSIONDATE=20230110
#export VERSION=0.3.23
#export VERSIONDATE=20230127
#export VERSION=0.3.24
#export VERSIONDATE=20230720
#export VERSION=0.3.25
#export VERSIONDATE=20230807
#export VERSION=0.3.26
#export VERSIONDATE=20230925
#export VERSION=0.3.27
#export VERSIONDATE=20231005
export VERSION=0.3.28
export VERSIONDATE=20240612
####src/info.c:15:10: fatal error: features.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://sourceforge.net/projects/partclone/files/source/"
export DOWNLOADURL="https://github.com/Thomas-Tsai/partclone/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/partclone/source/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/Thomas-Tsai/partclone/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus configure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



