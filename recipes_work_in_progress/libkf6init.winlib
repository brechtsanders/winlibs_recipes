export NAME="KInit"
export STATUS=
export URL=https://api.kde.org/frameworks/kinit/html/index.html
export BASENAME=libkf6init
export DESCRIPTION="Process launcher to speed up launching KDE applications (KDE Frameworks 6 (KDF6) Tier 3 framework)"
export CATEGORY=framework
export TYPE=library
export VERSION=6.0.0
export VERSIONDATE=20240317
wl-showstatus --package-version
export DEPENDENCIES=qt6,libkf6service,libkf6jobwidgets,libkf6solid,libkf6coreaddons,libkf6auth,libkf6codecs,libkf6kio,libkf6i18n,libkf6windowsystem,libkf6crash,libkf6config,gettext
export OPTIONALDEPENDENCIES=libkf6doctools
#export OPTIONALDEPENDENCIES=libkf6doctools,libx11,xcb
export BUILDDEPENDENCIES=cmake,extra-cmake-modules
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.LGPL-2
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://kde.org/announcements/ kde-frameworks- .php"
export DOWNLOADURL="https://download.kde.org/stable/frameworks/ kinit-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://download.kde.org/stable/frameworks/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/kinit-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/kinit-$VERSION.tar.xz
cd kinit-$VERSION
## avoid libx11 and xcb
#sed -i.bak -e "s/NOT APPLE/& AND NOT MINGW/; s/\(set(HAVE_\)\(X11\|XCB\) .*)/\1\2 FALSE)/" CMakeLists.txt
## fix KF5InitMacros.cmake (version >= 5.81.0)
#patch -ulbf KF5InitMacros.cmake << EOF
#@@ -32,3 +32,3 @@
#         # Having the static library ensures that target_link_libraries(myexe kdeinit_foo) also works on Windows and not just on UNIX
#-        add_library(kdeinit_\${_target_NAME} STATIC \${_SRCS})
#+        add_library(kdeinit_\${_target_NAME} \${_SRCS})
#     else()
#EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf knewstuff-$VERSION



