export NAME="MinGW-w64 (targetting Windows on ARM)"
export STATUS=
#export URL=http://mingw-w64.sourceforge.net/
export URL=http://mingw-w64.org/
export BASENAME=arm64win-mingw-w64
export DESCRIPTION="The project's goal is to deliver runtime, headers, and libs for developing 64 bit (x64), as well as 32 bit (x86), windows applications using gcc-4.4 or newer versions."
export CATEGORY=development
export TYPE=application
export VERSION=9.0.0
export VERSIONDATE=20211003
#export VERSION=10.0.0
#export VERSIONDATE=20220404
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=arm64win-binutils
export LICENSEFILE=COPYING
export LICENSETYPE="Zope Public License (ZPL) with exceptions"
export DOWNLOADURL="http://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/ mingw-w64-v"
#export DOWNLOADURL="https://github.com/mirror/mingw-w64/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/mingw-w64/mingw-w64/mingw-w64-release/mingw-w64-v$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://github.com/mirror/mingw-w64/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/mingw-w64 $DOWNLOADSOURCEURL
wl-wait4deps
mkdir -p $BASENAME-$VERSION
tar xfj $TARBALLDIR/mingw-w64/mingw-w64-v$VERSION.tar.bz2 -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/mingw-w64-v$VERSION
## fix gas/output-file.c (version >= 2.37)
#patch -ulbf gas/output-file.c << EOF
#@@ -26,2 +26,5 @@
# #endif
#+#ifndef TARGET_FORMAT
#+#define TARGET_FORMAT "pe-coff"
#+#endif
#
#EOF
wl-showstatus configure &&
 #PATH=$MINGWPREFIX/share/arm64win-binutils/bin:$PATH ./configure --prefix=$INSTALLPREFIX/share/arm64win-mingw-w64 --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-default-msvcrt=ucrt --with-libraries=all --with-tools=all --enable-sdk=all --enable-secure-api --enable-wildcard --disable-lib32 --disable-lib64 --disable-libarm32 --enable-libarm64 CFLAGS="-fcommon $(gcc --help -v 2>/dev/null|grep -q " -Wexpansion-to-defined" && echo "-Wno-expansion-to-defined")" LDFLAGS="-Wl,-no-undefined" &&
 PATH=$MINGWPREFIX/share/arm64win-binutils/bin:$PATH ./configure --prefix=$INSTALLPREFIX/share/arm64win-mingw-w64 --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=arm-w64-pe --with-default-msvcrt=ucrt --with-libraries=all --with-tools=all --enable-sdk=all --enable-secure-api --enable-wildcard --disable-lib32 --disable-lib64 --enable-libarm32 --disable-libarm64 CFLAGS="-fcommon $(gcc --help -v 2>/dev/null|grep -q " -Wexpansion-to-defined" && echo "-Wno-expansion-to-defined")" LDFLAGS="-Wl,-no-undefined" &&
 #PATH=$MINGWPREFIX/share/arm64win-binutils/bin:$PATH ./configure --prefix=$INSTALLPREFIX/share/arm64win-mingw-w64 --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=arm64-w64-pe --with-default-msvcrt=ucrt --with-libraries=all --with-tools=all --enable-sdk=all --enable-secure-api --enable-wildcard --disable-lib32 --disable-lib64 --disable-libarm32 --enable-libarm64 CFLAGS="-fcommon $(gcc --help -v 2>/dev/null|grep -q " -Wexpansion-to-defined" && echo "-Wno-expansion-to-defined")" LDFLAGS="-Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX/share/arm64win-mingw-w64 --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=armv7-w64-mingw32 --with-default-msvcrt=ucrt --with-libraries=all --with-tools=all --enable-sdk=all --enable-secure-api --enable-wildcard --disable-lib32 --disable-lib64 --enable-libarm32 --disable-libarm64 CFLAGS="-fcommon $(gcc --help -v 2>/dev/null|grep -q " -Wexpansion-to-defined" && echo "-Wno-expansion-to-defined")" LDFLAGS="-Wl,-no-undefined" CC="$MINGWPREFIX/share/llvm/bin/clang.exe -target armv7-w64-mingw32" &&
 #./configure --prefix=$INSTALLPREFIX/share/arm64win-mingw-w64 --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=arm64-w64-pe --with-default-msvcrt=ucrt --with-libraries=all --with-tools=all --enable-sdk=all --enable-secure-api --enable-wildcard --disable-lib32 --disable-lib64 --disable-libarm32 --enable-libarm64 CFLAGS="-fcommon $(gcc --help -v 2>/dev/null|grep -q " -Wexpansion-to-defined" && echo "-Wno-expansion-to-defined")" LDFLAGS="-Wl,-no-undefined" CC="$MINGWPREFIX/share/llvm/bin/clang.exe -target arm64-w64-pe" &&
 #./configure --prefix=$INSTALLPREFIX/share/arm64win-mingw-w64 --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=aarch64-w64-mingw32 --with-default-msvcrt=ucrt --with-libraries=all --with-tools=all --enable-sdk=all --enable-secure-api --enable-wildcard --disable-lib32 --disable-lib64 --disable-libarm32 --enable-libarm64 CFLAGS="-fcommon $(gcc --help -v 2>/dev/null|grep -q " -Wexpansion-to-defined" && echo "-Wno-expansion-to-defined")" LDFLAGS="-Wl,-no-undefined" TARGET_CC="$MINGWPREFIX/share/llvm/bin/clang.exe -target aarch64-w64-mingw32" TARGET_CXX="$MINGWPREFIX/share/llvm/bin/clang++.exe -target aarch64-w64-mingw32" TARGET_AR="$MINGWPREFIX/share/llvm/bin/llvm-as.exe" TARGET_AR="$MINGWPREFIX/share/llvm/bin/llvm-ar.exe --rsp-quoting=windows" TARGET_RANLIB="$MINGWPREFIX/share/llvm/bin/llvm-ranlib.exe" TARGET_DLLTOOL="$MINGWPREFIX/share/llvm/bin/llvm-dlltool.exe -m arm64" &&
 #if [ ! -f mingw-w64-libraries/winstorecompat/Makefile ]; then
 #wl-showstatus configure &&
 # mkdir -p build_winstorecompat &&
 # cd build_winstorecompat &&
 # ../mingw-w64-libraries/winstorecompat/configure --prefix=$INSTALLPREFIX/share/arm64win-mingw-w64 --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 # cd ..
 #fi &&
 wl-showstatus build-install &&
 #make install-strip &&
 #( make install-strip || make install-strip CPPFLAGSARM32= ) &&
 #PATH=$MINGWPREFIX/share/arm64win-binutils/bin:$MINGWPREFIX/share/arm64win-binutils/arm-w64-pe/bin:$PATH make CPPFLAGSARM32= DLLTOOL=$MINGWPREFIX/share/arm64win-binutils/bin/arm-dlltool.exe &&
 PATH=$MINGWPREFIX/share/arm64win-binutils/bin:$MINGWPREFIX/share/arm64win-binutils/arm-w64-pe/bin:$PATH make CPPFLAGSARM32= &&
 #PATH=$MINGWPREFIX/share/arm64win-binutils/bin:$MINGWPREFIX/share/arm64win-binutils/arm-w64-pe/bin:$MINGWPREFIX/share/llvm/bin:$PATH make DLLTOOL=$MINGWPREFIX/share/arm32win-binutils/bin/arm-dlltool.exe &&
 #PATH=$MINGWPREFIX/share/arm64win-binutils/bin:$MINGWPREFIX/share/arm64win-binutils/arm-w64-pe/bin:$MINGWPREFIX/share/llvm/bin:$PATH make DLLTOOL=$MINGWPREFIX/share/llvm/bin/llvm-dlltool.exe &&
 #if [ ! -f mingw-w64-libraries/winstorecompat/Makefile ]; then
 # wl-showstatus build-install &&
 # #make -Cbuild_winstorecompat install-strip
 # make -Cbuild_winstorecompat install-strip || true
 #fi &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && rm -rf mingw-w64-v$VERSION



