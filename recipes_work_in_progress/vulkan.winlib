export NAME="Vulkan"
export STATUS=
#export URL=https://www.khronos.org/vulkan/
export URL=https://www.khronos.org/registry/vulkan/
export BASENAME=vulkan
export DESCRIPTION="Vulkan loader and validation layers"
export CATEGORY=graphics,hardware
export TYPE=library
#export VERSION=1.0.42.2
#export VERSIONDATE=20170401
#export VERSION=1.0.46.0
#export VERSIONDATE=20170412
#export VERSION=1.0.51.0
#export VERSIONDATE=20170616
#export VERSION=1.0.54.0
#export VERSIONDATE=20170721
#export VERSION=1.0.57.0
#export VERSIONDATE=20170815
#export VERSION=1.0.61.0
#export VERSIONDATE=20170919
#export VERSION=1.0.61.1
#export VERSIONDATE=20170921
#export VERSION=1.0.65.1
#export VERSIONDATE=20171219
#export VERSION=1.0.65.2
#export VERSIONDATE=20180109
#export VERSION=1.0.68.0
#export VERSIONDATE=20180210
#export VERSION=1.1.70.0
#export VERSIONDATE=20180307
export VERSION=1.1.73.0
export VERSIONDATE=20180424
####Could NOT find PythonInterp: Found unsuitable version "2.7.12", but required is at least "3"
wl-showstatus --package-version
export DEPENDENCIES=spirv-headers,spirv-tools,glslang
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=Apache
#export DOWNLOADURL="https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers/releases sdk-"
export DOWNLOADURL="https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers/tags sdk-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers/archive/sdk-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers/archive/refs/tags/sdk-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/sdk-$VERSION.tar.gz $TARBALLDIR/$BASENAME/Vulkan-LoaderAndValidationLayers-sdk-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/Vulkan-LoaderAndValidationLayers-sdk-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/sdk-$VERSION.tar.gz
cd Vulkan-LoaderAndValidationLayers-sdk-$VERSION
# fix CMakeLists.txt (version >= 1.1.73.0)
patch -ulbf CMakeLists.txt << EOF
@@ -351,3 +351,2 @@
     COMMAND \${PYTHON_CMD} \${SCRIPTS_DIR}/external_revision_generator.py --git_dir \${source_dir} -s \${symbol_name} -o \${output}
-    DEPENDS \${SCRIPTS_DIR}/external_revision_generator.py \${source_dir}/.git/HEAD \${source_dir}/.git/index
     )
EOF
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_GMOCK:BOOL=OFF -DBUILD_GTEST:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DEMOS:BOOL=OFF -DGLSLANG_SPIRV_INCLUDE_DIR:PATH=$MINGWPREFIX/include/spirv -DSPIRV_TOOLS_OPT_BINARY_ROOT:PATH=$MINGWPREFIX/bin -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe . &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_GMOCK:BOOL=OFF -DBUILD_GTEST:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DEMOS:BOOL=OFF -DGLSLANG_SPIRV_INCLUDE_DIR:PATH=$MINGWPREFIX/include/spirv -DSPIRV_TOOLS_OPT_BINARY_ROOT:PATH=$MINGWPREFIX/bin -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe . &&
# wl-showstatus build &&
# make &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_GMOCK:BOOL=OFF -DBUILD_GTEST:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DEMOS:BOOL=OFF -DGLSLANG_SPIRV_INCLUDE_DIR:PATH=$MINGWPREFIX/include/spirv -DSPIRV_TOOLS_OPT_BINARY_ROOT:PATH=$MINGWPREFIX/bin -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_GMOCK:BOOL=OFF -DEXTERNAL_SOURCE_ROOT:PATH=$MINGWPREFIX -DCUSTOM_GLSLANG_BIN_ROOT:BOOL=ON -DGLSLANG_BINARY_ROOT:PATH=$MINGWPREFIX/bin -DCUSTOM_SPIRV_TOOLS_BIN_ROOT:BOOL=ON -DSPIRV_TOOLS_BINARY_ROOT:STRING=$MINGWPREFIX/bin -DGLSLANG_SPIRV_INCLUDE_DIR:PATH=$MINGWPREFIX/include/spirv -DSPIRV_TOOLS_OPT_BINARY_ROOT:PATH=$MINGWPREFIX/bin -DBUILD_GTEST:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DEMOS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #-DBUILD_SHARED_LIBS:BOOL=ON 
 wl-showstatus build &&
 ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf Vulkan-LoaderAndValidationLayers-sdk-$VERSION
####TO DO: build shared DLL(s) (requires shared glslang)



