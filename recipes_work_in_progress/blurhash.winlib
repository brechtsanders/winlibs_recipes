#export NAME="blurhash"
#export STATUS=
#export URL=https://github.com/woltapp/blurhash
#export BASENAME=blurhash
#export DESCRIPTION="A very compact representation of a placeholder for an image"
#export CATEGORY=
#export TYPE=library
#export VERSION=master
#export VERSIONDATE=20240801
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=License.md
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/woltapp/blurhash/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/woltapp/blurhash/archive/refs/heads/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
#wl-showstatus build &&
# make -CC CC=${CC:-gcc} &&
# strip C/*.exe &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/bin &&
# cp -f C/*.exe $INSTALLPREFIX/bin/ &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="blurhash"
export STATUS=
export URL=https://github.com/Nheko-Reborn/blurhash
export BASENAME=blurhash
export DESCRIPTION="C++ blurhash encoder/decoder"
export CATEGORY=
export TYPE=library
export VERSION=0.2.0
export VERSIONDATE=20240801
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSL
export DOWNLOADURL="https://github.com/Nheko-Reborn/blurhash/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/Nheko-Reborn/blurhash/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_both &&
 wl-showstatus configure &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dexamples=false -Dbenchmarks=false -Dtests=false . build_both &&
 wl-showstatus build-install &&
 ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



