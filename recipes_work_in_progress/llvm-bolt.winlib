export NAME="LLVM BOLT"
export STATUS=
export URL=https://llvm.org/
export BASENAME=llvm-bolt
export DESCRIPTION="The LLVM Compiler Infrastructure - BOLT"
export CATEGORY=development
export TYPE=application
#export VERSION=17.0.1
#export VERSIONDATE=20230919
#export VERSION=17.0.2
#export VERSIONDATE=20231013
#export VERSION=17.0.3
#export VERSIONDATE=20231021
export VERSION=18.1.1
export VERSIONDATE=20240313
wl-showstatus --package-version
export DEPENDENCIES=llvm-core
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,llvm-cmake
export OPTIONALBUILDDEPENDENCIES=doxygen
export LICENSEFILE=LICENSE.TXT
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/llvm/llvm-project/releases/ bolt-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/llvm/llvm-project/releases/download/llvmorg-$(echo $VERSION|sed -e "s/rc/-&/")/bolt-$VERSION.src.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/bolt-$VERSION.src.tar.xz
cd bolt-$VERSION.src
# fix CMakeLists.txt (version >= 17.0.1)
patch -ulbf CMakeLists.txt << EOF
@@ -1 +1,2 @@
+cmake_minimum_required(VERSION 3.20.0)
 include(ExternalProject)
@@ -27,4 +28,4 @@
 foreach (tgt \${BOLT_TARGETS_TO_BUILD})
-  if (NOT tgt IN_LIST LLVM_TARGETS_TO_BUILD)
-    message(FATAL_ERROR "BOLT target '\${tgt}' is not in LLVM_TARGETS_TO_BUILD")
+  if (NOT tgt IN_LIST BOLT_TARGETS_TO_BUILD_all)
+    message(FATAL_ERROR "BOLT target '\${tgt}' is not in BOLT_TARGETS_TO_BUILD_all")
   endif()
EOF
#include(CrossCompile)
# fix CMakeLists.txt (version >= 17.0.1)
#sed -i.bak -e "s?\(set(LLVM_COMMON_CMAKE_UTILS \)\${CMAKE_CURRENT_SOURCE_DIR}/../cmake?\1$(cygpath -m $MINGWPREFIX/share/llvm-split/share/cmake)?" CMakeLists.txt
#sed -i.bak -e "s?\(set(LLVM_COMMON_CMAKE_UTILS \)\${CMAKE_CURRENT_SOURCE_DIR}/../cmake?\1$(cygpath -m $MINGWPREFIX/share/llvm-split/lib/cmake/llvm)?" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/llvm-split -DCMAKE_BUILD_TYPE:STRING=MinSizeRel \
  -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/share/llvm-split/lib/cmake/llvm \
  -DBOLT_TARGETS_TO_BUILD:STRING="X86;AArch64" \
  -DBOLT_CLANG_EXE:FILEPATH=$MINGWPREFIX/share/llvm-split/bin/clang.exe \
  -DBOLT_LLD_EXE:FILEPATH=$MINGWPREFIX/share/llvm-split/bin/lld.exe \
  -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf bolt-$VERSION.src



