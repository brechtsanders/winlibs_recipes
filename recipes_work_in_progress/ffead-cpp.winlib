export NAME="ffead-cpp"
export STATUS=
export URL=https://github.com/sumeetchhetri/ffead-cpp
export BASENAME=ffead-cpp
export DESCRIPTION="Framework for Enterprise Application Development, c++ framework, c++ web framework, c++ application framework, c++ rest framework, c++ soap framework, c++ web sites,c++ web applications, c++ driven web development - c++"
export CATEGORY=communication
export TYPE=library
#export VERSION=2.1
#export VERSIONDATE=20171026
#export VERSION=2.2
#export VERSIONDATE=20180224
####src/modules/server-util/SelEpolKqEvPrt.h:88:44: error: operator '&&' has no right operand
#export VERSION=2.3
#export VERSIONDATE=20190810
#export VERSION=3.0
#export VERSIONDATE=20200506
#export VERSION=4.0
#export VERSIONDATE=20200706
#export VERSION=5.1
#export VERSIONDATE=20201017
#export VERSION=5.2
#export VERSIONDATE=20201202
#export VERSION=5.3
#export VERSIONDATE=20210417
export VERSION=6.0
export VERSIONDATE=20231023
wl-showstatus --package-version
export DEPENDENCIES=pthreads,pcre,openssl,libuuid,libcuckoo,libdl
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://github.com/sumeetchhetri/ffead-cpp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/sumeetchhetri/ffead-cpp/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/sumeetchhetri/ffead-cpp/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/modules/server-util/SocketInterface.h (version >= 2.1)
patch -ulbf src/modules/server-util/SocketInterface.h << EOF
@@ -15 +15 @@
-#if defined(IS_SENDFILE)
+#if defined(IS_SENDFILE) && IS_SENDFILE
@@ -68 +68 @@
-#if defined(IS_SENDFILE)
+#if defined(IS_SENDFILE) && IS_SENDFILE
EOF
# fix src/modules/common/Compatibility.h (version >= 2.2)
patch -ulbf src/modules/common/Compatibility.h << EOF
@@ -28,3 +28,5 @@
 #define USE_MINGW_SELECT 1
+#ifndef _WINDOWS_
 #define _WINDOWS_ 1
+#endif
 #define SQL_WCHART_CONVERT 1
@@ -34,3 +36,3 @@
 #include <winsock2.h>
-#include <Mswsock.h>
+//#include <Mswsock.h>

@@ -73,2 +75,3 @@
 #define S_ISSOCK(x) 0
+#ifndef S_IRGRP
 #define S_IRGRP 0
@@ -79,2 +82,3 @@
 #define S_IXOTH 0
+#endif

EOF
# fix preprocessor compare issues with undefined macros in src/modules/server-util/SelEpolKqEvPrt.h (version >= 2.1)
mv src/modules/server-util/SelEpolKqEvPrt.h src/modules/server-util/SelEpolKqEvPrt.h.bak &&
sed -e "s/^\(#.*if \)\([^ ]*\)\( *== *[^ ]*\)/\1defined(\2) \&\& \2/; s/#undef\( *[^ ]*\)/#define\1 0/" src/modules/server-util/SelEpolKqEvPrt.h.bak > src/modules/server-util/SelEpolKqEvPrt.h
# fix missing gmtime_r() in src/modules/http/HttpResponse.cpp (version >= 5.1)
mv src/modules/http/HttpResponse.cpp src/modules/http/HttpResponse.cpp.bak &&
echo "" > src/modules/http/HttpResponse.cpp &&
cat src/modules/http/HttpResponse.cpp.bak >> src/modules/http/HttpResponse.cpp
# fix src/modules/common/StringUtil.h (version >= 6.0)
mv src/modules/common/StringUtil.h src/modules/common/StringUtil.h.bak &&
echo "#include <cstdint>" > src/modules/common/StringUtil.h &&
cat src/modules/common/StringUtil.h.bak >> src/modules/common/StringUtil.h
#wl-showstatus configure &&
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build &&
# make &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK
## fix CMakeLists.txt (version >= 3.0)
#patch -ulbf CMakeLists.txt << EOF
#@@ -116,3 +116,3 @@
# if(NOT HAVE_UUIDLIB)
#-       message(FATAL_ERROR "uuid library not found")
#+#      message(FATAL_ERROR "uuid library not found")
# endif()
#EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 #C_INCLUDE_PATH=$MINGWPREFIX/include/portable-uuid:$MINGWPREFIX/include/libdl-win32${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/include/portable-uuid:$MINGWPREFIX/include/libdl-win32${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/portable-uuid -I$MINGWPREFIX/include/libdl-win32" -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/portable-uuid -I$MINGWPREFIX/include/libdl-win32" -S. -Bbuild_win &&
 C_INCLUDE_PATH=$MINGWPREFIX/include/portable-uuid:$MINGWPREFIX/include/libdl-win32${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/include/portable-uuid:$MINGWPREFIX/include/libdl-win32${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
 wl-showstatus build-install &&
 C_INCLUDE_PATH=$MINGWPREFIX/include/portable-uuid:$MINGWPREFIX/include/libdl-win32${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/include/portable-uuid:$MINGWPREFIX/include/libdl-win32${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



