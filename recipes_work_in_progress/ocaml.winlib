export NAME="Objective Caml"
export STATUS=
#export URL=http://caml.inria.fr/
export URL=https://www.ocaml.org/
export BASENAME=ocaml
export DESCRIPTION="Caml is a general-purpose programming language, designed with program safety and reliability in mind. It is very expressive, yet easy to learn and use. Caml supports functional, imperative, and object-oriented programming styles."
export CATEGORY=development
export TYPE=application
#export VERSION=3.11.0
#export VERSIONDATE=20110601
#export VERSION=3.12.0
#export VERSIONDATE=20110601
#export VERSION=3.12.1
#export VERSIONDATE=20110713
#export VERSION=4.00.0
#export VERSIONDATE=20120726
#export VERSION=4.00.1
#export VERSIONDATE=20121005
#export VERSION=4.01.0
#export VERSIONDATE=20130912
#export VERSION=4.02.0
#export VERSIONDATE=20140828
#export VERSION=4.02.1
#export VERSIONDATE=20141014
#export VERSION=4.02.3
#export VERSIONDATE=20150728
#export VERSION=4.03.0
#export VERSIONDATE=20160524
#export VERSION=4.04.2
#export VERSIONDATE=20160626
#export VERSION=4.05.0
#export VERSIONDATE=20171002
#export VERSION=4.06.0
#export VERSIONDATE=20171104
#export VERSION=4.07.0
#export VERSIONDATE=20200114
#export VERSION=4.10.0
#export VERSIONDATE=20200518
#export VERSION=4.10.1
#export VERSIONDATE=20200820
#export VERSION=4.10.2
#export VERSIONDATE=20201209
#export VERSION=4.11.0
#export VERSIONDATE=20200819
#export VERSION=4.11.1
#export VERSIONDATE=20200901
#export VERSION=4.11.2
#export VERSIONDATE=20210224
#export VERSION=4.12.0
#export VERSIONDATE=20210224
#export VERSION=4.12.1
#export VERSIONDATE=20210924
#export VERSION=4.13.0
#export VERSIONDATE=20210924
export VERSION=4.13.1
export VERSIONDATE=20211001
####** Fatal error: Cannot find file "libws2_32"
wl-showstatus --package-version
export DEPENDANCIES=flexdll
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="http://caml.inria.fr/download.en.html"
#export DOWNLOADURL="https://www.ocaml.org/releases/"
export DOWNLOADURL="https://github.com/ocaml/ocaml/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://caml.inria.fr/pub/distrib/$BASENAME-`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/"`/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://caml.inria.fr/pub/distrib/$BASENAME-`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/"`/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://github.com/ocaml/ocaml/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# get a working flexlink
if ! which flexlink.exe &> /dev/null; then
 #wl-download -v -d $TARBALLDIR/$BASENAME http://alain.frisch.fr/flexdll/flexdll-bin-0.30.zip
 #unzip -oq $TARBALLDIR/$BASENAME/flexdll-bin-0.30.zip -d flexdll
 wl-download -v -d $TARBALLDIR/$BASENAME http://alain.frisch.fr/flexdll/flexdll-bin-0.35.zip
 unzip -oq $TARBALLDIR/$BASENAME/flexdll-bin-0.35.zip -d flexdll
fi
wl-showstatus configure &&
#./configure --prefix $INSTALLPREFIX --host $RUNPLATFORM &&
# make install &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
cp config/m-nt.h config/m.h
cp config/s-nt.h config/s.h
echo "#define HAS_DIRENT" >> config/s.h
echo "#undef __CYGWIN32__" >> config/s.h
cp config/Makefile.mingw config/Makefile
if ( echo $RUNPLATFORM | grep -qv x86_64 ); then
 FLEXOPT="-chain mingw"
else
 FLEXOPT="-chain mingw64"
fi
# fix missing i686-w64-mingw32-gcc
#cat > flexdll/i686-w64-mingw32-gcc << EOF
##!/bin/sh
#gcc \$*
#EOF
#cat > flexdll/i686-w64-mingw32-gcc.bat << EOF
#@ECHO OFF
#gcc %*
#EOF
#cp -f `which gcc` flexdll/i686-w64-mingw32-gcc.exe
#cp -f `which gcc` i686-w64-mingw32-gcc.exe
PATH=$(pwd)/flexdll:$PATH FLEXLINKFLAGS="-nocygpath -L$MINGWPREFIX/lib -L/lib" make -f Makefile.nt -j1 world PREFIX=$INSTALLPREFIX TOOLPREF= FLEXLINK="$(pwd)/flexdll/flexlink.exe $FLEXOPT -stack 16777216" &&
 make install PREFIX=$MINGWPREFIX &&
    echo OK
####'i686-w64-mingw32-gcc' is not recognized as an internal or external command, operable program or batch file.
####** Fatal error: hd
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



####cd byterun && ../flexdll/flexlink.exe -chain ld -stack 16777216 -exe -o ocamlrun.exe prims.o -L/mingw/lib -lws2_32 -lkernel32 -lmingwex -lmsvcrt -lmoldnamed -L/mingw/lib/gcc/mingw32/4.7.0 -lgcc -l libcamlrun.a
####cd byterun && ../flexdll/flexlink.exe -chain ld -stack 16777216 -exe -o ocamlrun.exe prims.o -L/mingw/lib -lws2_32 -lkernel32 -lmingwex -lmsvcrt -lmoldnamed -L$(gcc -print-file-name=libgcc.a|sed -e "s/[^\/]*$//") -lgcc libcamlrun.a
####cd byterun && ../flexdll/flexlink.exe -chain ld -stack 16777216 -exe -o ocamlrun.exe prims.o -L/mingw/lib -lws2_32 -lmingwex -lkernel32 -lmsvcrt -lmoldname -L$(gcc -print-file-name=libgcc.a|sed -e "s/[^\/]*$//") -lgcc libcamlrun.a
####cd byterun && ../flexdll/flexlink.exe -chain ld -stack 16777216 -exe -o ocamlrun.exe prims.o -L/mingw/lib -lws2_32 -lmingwex -lkernel32 -lcrtdll -lmsvcr100 -lmoldname100 -L$(gcc -print-file-name=libgcc.a|sed -e "s/[^\/]*$//") -lgcc libcamlrun.a




## fix runtime/win32.c (version >= 4.10.0)
#patch -ulbf runtime/win32.c << EOF
#@@ -51,4 +51,8 @@
# #ifdef SUPPORT_DYNAMIC_LINKING
#+#ifdef __MINGW32__
#+#include <dlfcn.h>
#+#else
# #include <flexdll.h>
# #endif
#+#endif
#
#@@ -229,5 +233,10 @@
#   void *handle;
#+#ifdef __MINGW32__
#+  int flags = (global ? RTLD_GLOBAL : 0);
#+  handle = flexdll_wdlopen(libname, flags);
#+#else
#   int flags = (global ? FLEXDLL_RTLD_GLOBAL : 0);
#   if (!for_execution) flags |= FLEXDLL_RTLD_NOEXEC;
#-  handle = flexdll_wdlopen(libname, flags);
#+  handle = dlopen(libname, flags);	/////TO DO: convert from wide string
#+#endif
#   if ((handle != NULL) && ((caml_verb_gc & 0x100) != 0)) {
#@@ -241,3 +250,7 @@
# {
#+#ifdef __MINGW32__
#+  flexdll_dlclose(handle);
#+#else
#   flexdll_dlclose(handle);
#+#endif
# }
#@@ -246,3 +259,7 @@
# {
#+#ifdef __MINGW32__
#+  return flexdll_dlsym(handle, name);
#+#else
#   return flexdll_dlsym(handle, name);
#+#endif
# }
#@@ -251,3 +268,7 @@
# {
#+#ifdef __MINGW32__
#+  return dlsym(flexdll_dlopen(NULL,0), name);
#+#else
#   return flexdll_dlsym(flexdll_dlopen(NULL,0), name);
#+#endif
# }
#@@ -256,3 +277,7 @@
# {
#+#ifdef __MINGW32__
#+  return dlerror();
#+#else
#   return flexdll_dlerror();
#+#endif
# }
#EOF
wl-showstatus configure &&
 # mkdir -p m4 &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-unix-lib LDFLAGS="-Wl,--as-needed -ldl" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-flexdll --disable-unix-lib LDFLAGS="-Wl,--as-needed -ldl" &&
 sed -i.bak -e "s/\(flexlink\.exe\) support/\1/" Makefile &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build &&
 FLEXLINKFLAGS="-L$(dirname $(find $MINGWDIR -name 'libws2_32.a')) -L$(dirname $(find $MINGWDIR -name 'libgcc.a'))" PATH=$(pwd)/flexdll:$PATH make &&
 wl-showstatus build-install &&
 make install && 
    echo OK

# make flexdll



