export NAME="MIT Kerberos for Windows"
export STATUS=
export URL=http://web.mit.edu/kerberos/dist/#kfw-3.2
export BASENAME=kfw
export DESCRIPTION="MIT Kerberos for Windows (KfW) is an integrated Kerberos release for Microsoft Windows operating systems. It includes the Kerberos v4 library, Kerberos v5 library version 1.6.3, Kerberos v5 GSS API library, Kerberos 524 library, KClient API library, Leash API library, Network Identity Manager, the kinit, klist, kdestroy, krb524init, ms2mit, aklog command-line credentials managers, and an in-memory credentials cache."
export CATEGORY=security
export TYPE=library
#export VERSION=3.2.2
#export VERSIONDATE=20140813
#export VERSION=4.0.1
#export VERSIONDATE=20150122
export VERSION=4.1
export VERSIONDATE=20160704
####configure: error: cannot find res_nsearch or res_search
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="http://web.mit.edu/kerberos/dist/ kfw- -src.zip"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://web.mit.edu/kerberos/dist/kfw/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/")/kfw-$VERSION/kfw-$(echo $VERSION|tr . -)-src.zip
export DOWNLOADSOURCEURL=http://web.mit.edu/kerberos/dist/kfw/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/")/kfw-$VERSION-src.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#unzip -oq $TARBALLDIR/$BASENAME/kfw-$(echo $VERSION|tr . -)-src.zip
#cd kfw-$(echo $VERSION|tr . -)-final/src
unzip -oq $TARBALLDIR/$BASENAME/kfw-$VERSION-src.zip
cd kfw-$VERSION/src

wl-showstatus preconfigure &&
 mkdir -p m4 &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 # avoid detection of missing res_search
 sed -i.bak -e "s/as_fn_error\(.*cannot find res_nsearch or res_search\)/echo\1/" configure &&
 # allow building shared libraries
 sed -i.bak2 -e "s/as_fn_error\(.*Shared libraries are not yet supported on this platform\)/echo\1/" configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-rpath --with-ldap &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK

cd athena/auth/krb5/src
autoreconf -f -i -I $PWD -I $MINGWPREFIX/share/aclocal &&
    echo OK

  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
wl-showstatus configure &&
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt
#wl-showstatus configure
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf kfw-$(echo $VERSION|tr . -)-final



