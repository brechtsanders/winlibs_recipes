#export NAME="ZNC"
#export STATUS=
#export URL=http://znc.in/
#export BASENAME=znc
#export DESCRIPTION="Portable, open source IRC bouncer written in C++. It can be extended using modules written either in C++ or in Perl and Tcl."
#export CATEGORY=communication
#export TYPE=application
##export VERSION=1.6.2
##export VERSIONDATE=20160127
##export VERSION=1.6.3
##export VERSIONDATE=20160406
##export VERSION=1.6.4
##export VERSIONDATE=20161211
##export VERSION=1.6.5
##export VERSIONDATE=20170313
##export VERSION=1.6.6
##export VERSIONDATE=20180306
##export VERSION=1.7.0
##export VERSIONDATE=20180502
##export VERSION=1.7.1
##export VERSIONDATE=20180718
##export VERSION=1.7.2
##export VERSIONDATE=20190128
##export VERSION=1.7.3
##export VERSIONDATE=20190401
##export VERSION=1.7.4
##export VERSIONDATE=20190622
##export VERSION=1.7.5
##export VERSIONDATE=20190928
##export VERSION=1.8.0
##export VERSIONDATE=20200502
##export VERSION=1.8.1
##export VERSIONDATE=20200607
#export VERSION=1.8.2
#export VERSIONDATE=20200908
#####include/znc/Csocket.h:154:18: fatal error: poll.h: No such file or directory
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=Apache
#export DOWNLOADURL="http://znc.in/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://znc.in/releases/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
#  ./configure --help
#  head COPYING* LICENSE*
#  ls -l COPYING* LICENSE*
#wl-showstatus configure &&
##./autogen.sh &&
##    echo OK
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
##fi
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-perl --disable-python &&
# echo "#undef CSOCK_USE_POLL" >> include/znc/zncconfig.h &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install &&
#    echo OK &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig &&
#    make install-pkgconfigDATA
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="ZNC"
export STATUS=
export URL=http://znc.in/
export BASENAME=znc
export DESCRIPTION="Portable, open source IRC bouncer written in C++. It can be extended using modules written either in C++ or in Perl and Tcl."
export CATEGORY=communication
export TYPE=application
export VERSION=1.9.0
export VERSIONDATE=20240222
wl-showstatus --package-version
export DEPENDENCIES=gettext,libargon2,boost,zlib,libargon2,cyrus-sasl,openssl,icu
export OPTIONALBUILDDEPENDENCIES=cctz
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="http://znc.in/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://znc.in/releases/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DWANT_ZLIB:BOOL=ON -DWANT_ARGON:BOOL=ON -DWANT_CYRUS:BOOL=ON -DWANT_I18N:BOOL=ON -DWANT_ICU:BOOL=ON -DWANT_IPV6:BOOL=ON -DWANT_OPENSSL:BOOL=ON -DWANT_SWIG:BOOL=ON -DWANT_PYTHON:BOOL=OFF -DWANT_PERL:BOOL=OFF -DWANT_TCL:BOOL=OFF -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON  -DWANT_ZLIB:BOOL=ON -DWANT_ARGON:BOOL=ON -DWANT_CYRUS:BOOL=ON -DWANT_I18N:BOOL=ON -DWANT_ICU:BOOL=ON -DWANT_IPV6:BOOL=ON -DWANT_OPENSSL:BOOL=ON -DWANT_SWIG:BOOL=ON -DWANT_PYTHON:BOOL=OFF -DWANT_PERL:BOOL=OFF -DWANT_TCL:BOOL=OFF -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 #wl-showstatus build &&
 #cmake.exe --build build_static &&
 #ninja -Cbuild_static &&
 #wl-showstatus build &&
 #cmake.exe --build build_shared &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 #cmake.exe --install build_static --strip &&
 #cmake.exe --build build_static --target "install/strip" &&
 #cmake.exe --build build_static --target "library/install/strip" &&
 ninja -Cbuild_static install/strip &&
 #ninja -Cbuild_static library/install/strip &&
 wl-showstatus build-install &&
 #cmake.exe --install build_shared --strip &&
 #cmake.exe --build build_shared --target "install/strip" &&
 ninja -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
