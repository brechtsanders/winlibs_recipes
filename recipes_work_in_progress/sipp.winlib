export NAME="SIPp"
export STATUS=
export URL=http://sipp.sourceforge.net/
export BASENAME=sipp
export DESCRIPTION="SIPp is a free Open Source test tool / traffic generator for the SIP protocol."
export CATEGORY=audio
export TYPE=application
#export VERSION=3.5.1
#export VERSIONDATE=20170331
#export VERSION=3.5.2
#export VERSIONDATE=20180714
export VERSION=3.6.0
export VERSIONDATE=20190619
#export VERSION=3.6.1
#export VERSIONDATE=20200917
#export VERSION=3.7.0
#export VERSIONDATE=20230403
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/SIPp/sipp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/SIPp/sipp/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix/sys winfix/netinet winfix/arpa
echo "#include <winsock2.h>" > winfix/sys/socket.h
echo "#include <wspiapi.h>" >> winfix/sys/socket.h
touch winfix/netinet/in.h winfix/netinet/tcp.h winfix/arpa/inet.h winfix/netdb.h winfix/sys/poll.h winfix/sys/wait.h winfix/sys/resource.h
# fix redefinition of ERROR in include/defines.h
mv include/defines.h include/defines.h.bak &&
echo "#undef ERROR" > include/defines.h &&
cat include/defines.h.bak >> include/defines.h
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$(pwd)/winfix" CXXFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 wl-showstatus build &&
 ( make || make -j1 ) &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export DEPENDENCIES=sys_wait_h
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
## fix missing files
#mkdir -p winfix/sys winfix/netinet winfix/arpa
#echo "#include <winsock2.h>" > winfix/sys/socket.h
#echo "#include <wspiapi.h>" >> winfix/sys/socket.h
#touch winfix/netinet/in.h winfix/netinet/tcp.h winfix/arpa/inet.h winfix/netdb.h winfix/sys/poll.h winfix/sys/wait.h winfix/sys/resource.h winfix/poll.h
## fix missing version.h
#echo "#include \"../version.h\"" > src/version.h
## fix CMakeLists.txt (version >= 3.6.1)
#patch -ulbf CMakeLists.txt << EOF
#@@ -18,3 +18,3 @@
#   \${PROJECT_BINARY_DIR}
#-  "/usr/local/include")
#+  "$(pwd)/winfix")
#
#@@ -92,20 +92,3 @@
# # add version
#-find_package(Git)
#-file(WRITE \${PROJECT_SOURCE_DIR}/include/version.cmake
#-"execute_process(
#-     COMMAND \${GIT_EXECUTABLE} describe --tags --always --first-parent
#-     WORKING_DIRECTORY \${PROJECT_SOURCE_DIR}
#-     OUTPUT_VARIABLE VERSION
#-     OUTPUT_STRIP_TRAILING_WHITESPACE
#- )
#- configure_file(\\\${SRC} \\\${DST} @ONLY)
#-")
#-add_custom_target(
#-    version
#-    if test -d .git \\; then
#-        \${CMAKE_COMMAND} -D SRC=\${PROJECT_SOURCE_DIR}/include/version.h.in
#-          -D DST=\${PROJECT_BINARY_DIR}/version.h
#-          -P \${PROJECT_SOURCE_DIR}/include/version.cmake \\;
#-    fi
#-)
#+set(VERSION "$VERSION")
# add_dependencies(sipp version)
#EOF
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC:BOOL=ON -DUSE_GSL:BOOL=ON -DUSE_SCTP:BOOL=OFF -DUSE_SSL:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$(pwd)/winfix -I$MINGWPREFIX/include/ncurses -I$MINGWPREFIX/win32ports/include" -DCMAKE_CXX_FLAGS:STRING="-I$(cygpath -w $(pwd)/winfix) -I$(cygpath -w $MINGWPREFIX/include/ncurses) -I$(cygpath -w $MINGWPREFIX/win32ports/include)" -S. -Bbuild_win &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK
