export NAME="FBX"
export STATUS=
export URL=https://github.com/jskorepa/fbx
export BASENAME=fbx
export DESCRIPTION="C++ Library for reading and writing FBX files"
export CATEGORY=fileformat
export TYPE=library
export VERSION=master
export VERSIONDATE=20210616
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/jskorepa/fbx/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/jskorepa/fbx/archive/refs/heads/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/fbxproperty.cpp (version >= master)
patch -ulbf src/fbxproperty.cpp << EOF
@@ -102,4 +102,4 @@

-            uint64_t destLen = uncompressedLength;
-            uint64_t srcLen = compressedLength;
+            uLongf destLen = uncompressedLength;
+            uLongf srcLen = compressedLength;
             uncompress2(decompressedBuffer, &destLen, compressedBuffer, &srcLen);
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -Ssrc -Bbuild_win &&
 wl-showstatus build &&
 ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



