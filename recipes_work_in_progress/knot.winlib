export NAME="Knot"
export STATUS=
export URL=https://www.knot-dns.cz/
#export URL=https://github.com/CZ-NIC/knot
export BASENAME=knot
export DESCRIPTION="High-performance authoritative-only DNS server"
export CATEGORY=network
export TYPE=application
#export VERSION=2.4.5
#export VERSIONDATE=20170623
#export VERSION=2.5.1
#export VERSIONDATE=20170616
#export VERSION=2.5.2
#export VERSIONDATE=20170623
#export VERSION=2.5.3
#export VERSIONDATE=20170715
#export VERSION=2.5.4
#export VERSIONDATE=20170831
#export VERSION=2.5.5
#export VERSIONDATE=20170929
#export VERSION=2.5.6
#export VERSIONDATE=20171102
#export VERSION=2.5.7
#export VERSIONDATE=20180102
#export VERSION=2.6.0
#export VERSIONDATE=20170929
#export DEPENDANCIES=gnutls,liburcu,wineditline,lmdb,libidn2,protobuf-c
#export VERSION=2.6.1
#export VERSIONDATE=20171102
#export VERSION=2.6.2
#export VERSIONDATE=20171123
#export VERSION=2.6.3
#export VERSIONDATE=20171125
#export VERSION=2.6.4
#export VERSIONDATE=20180102
#export VERSION=2.6.5
#export VERSIONDATE=20180213
#export VERSION=2.6.6
#export VERSIONDATE=20180411
#export VERSION=2.6.7
#export VERSIONDATE=20180517
#export VERSION=2.6.8
#export VERSIONDATE=20180710
#export VERSION=2.6.9
#export VERSIONDATE=20180815
#export VERSION=2.7.0
#export VERSIONDATE=20180804
#export VERSION=2.7.1
#export VERSIONDATE=20180815
#export VERSION=2.7.2
#export VERSIONDATE=20180828
#export VERSION=2.7.3
#export VERSIONDATE=20181012
#export VERSION=2.7.4
#export VERSIONDATE=20181113
#export VERSION=2.7.5
#export VERSIONDATE=20190107
#export VERSION=2.7.6
#export VERSIONDATE=20190123
#export VERSION=2.7.7
#export VERSIONDATE=20190415
#export VERSION=2.7.8
#export VERSIONDATE=20190716
#export VERSION=2.8.0
#export VERSIONDATE=20190306
#export VERSION=2.8.1
#export VERSIONDATE=20190412
#export VERSION=2.8.2
#export VERSIONDATE=20190605
#export VERSION=2.8.3
#export VERSIONDATE=20190716
#export VERSION=2.8.4
#export VERSIONDATE=20190924
#export VERSION=2.8.5
#export VERSIONDATE=20200101
#export VERSION=2.9.0
#export VERSIONDATE=20191010
#export VERSION=2.9.1
#export VERSIONDATE=20191112
#export VERSION=2.9.2
#export VERSIONDATE=20191212
#export VERSION=2.9.3
#export VERSIONDATE=20200303
#export VERSION=2.9.4
#export VERSIONDATE=20200505
#export VERSION=2.9.5
#export VERSIONDATE=20200525
#export VERSION=2.9.6
#export VERSIONDATE=20200831
#export VERSION=2.9.7
#export VERSIONDATE=20201009
#export VERSION=2.9.8
#export VERSIONDATE=20201215
#export VERSION=2.9.9
#export VERSIONDATE=20210401
#export VERSION=3.0.0
#export VERSIONDATE=20200909
#export VERSION=3.0.1
#export VERSIONDATE=20201010
#export VERSION=3.0.2
#export VERSIONDATE=20201111
#export VERSION=3.0.3
#export VERSIONDATE=20201215
#export VERSION=3.0.4
#export VERSIONDATE=20210121
#export VERSION=3.0.5
#export VERSIONDATE=20210325
#export VERSION=3.0.6
#export VERSIONDATE=20210512
#export VERSION=3.0.7
#export VERSIONDATE=20210616
#export VERSION=3.0.8
#export VERSIONDATE=20210716
#export VERSION=3.0.9
#export VERSIONDATE=20210910
#export VERSION=3.1.0
#export VERSIONDATE=20210802
#export VERSION=3.1.1
#export VERSIONDATE=20210810
#export VERSION=3.1.2
#export VERSIONDATE=20210908
#export VERSION=3.1.3
#export VERSIONDATE=20211019
#export VERSION=3.1.5
#export VERSIONDATE=20220122
#export VERSION=3.1.6
#export VERSIONDATE=20220209
export VERSION=3.1.7
export VERSIONDATE=20220330
####src/contrib/sockaddr.h:34:33: error: invalid application of 'sizeof' to incomplete type 'struct sockaddr_un'
wl-showstatus --package-version
export DEPENDANCIES=gnutls,liburcu,wineditline,lmdb,libidn2,protobuf-c
export OPTIONALDEPENDANCIES=fstrm
export BUILDDEPENDANCIES=mman-win32
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/CZ-NIC/knot/releases"
export DOWNLOADURL="https://github.com/CZ-NIC/knot/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/CZ-NIC/knot/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/CZ-NIC/knot/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p winfix/sys winfix/arpa winfix/netinet
echo "#include <winsock2.h>" > winfix/sys/socket.h
echo "#include <ws2tcpip.h>" > winfix/netinet/in.h
echo "#include <ws2tcpip.h>" > winfix/arpa/inet.h
touch winfix/sys/uio.h winfix/sys/un.h winfix/netdb.h
# fix missing inet_pton/realpath/madvise in src/zscanner/scanner.c
mv src/zscanner/scanner.c src/zscanner/scanner.c.bak
cat > src/zscanner/scanner.c << EOF
#undef _WIN32_WINNT
#define _WIN32_WINNT 0x0600
#include <ws2tcpip.h>
#define inet_pton InetPtonA
#define realpath(N,R) _fullpath((R),(N),_MAX_PATH)
#ifndef MADV_SEQUENTIAL
#define MADV_SEQUENTIAL 0
#define madvise(start,size,type) NULL
#endif
EOF
cat src/zscanner/scanner.c.bak >> src/zscanner/scanner.c
# fix missing strndup
for F in $(grep -lw strndup $(find -name '*.c')); do
mv $F $F.bak2
cat > $F << EOF
#include <malloc.h>
#include <string.h>
static inline char* strndup (const char* s, size_t n)
{
  char* result;
  size_t len = strlen(s);
  if (len > n)
    len = n;
  result = (char*)malloc(len + 1);
  if (!result)
    return 0;
  result[len] = 0;
  return (char*)memcpy(result, s, len);
}
EOF
cat $F.bak2 >> $F
done
# fix mkdir in src/dnssec/shared/fs.c
mv src/dnssec/shared/fs.c src/dnssec/shared/fs.c.bak &&
sed -e "s/\b\(mkdir([^,)]*\),[^,)]*/\1/g" src/dnssec/shared/fs.c.bak > src/dnssec/shared/fs.c
# fix missing realpath in src/dnssec/shared/path.c
mv src/dnssec/shared/path.c src/dnssec/shared/path.c.bak
cat > src/dnssec/shared/path.c << EOF
#define realpath(N,R) _fullpath((R),(N),_MAX_PATH)
EOF
cat src/dnssec/shared/path.c.bak >> src/dnssec/shared/path.c
# fix src/libknot/control/control.c
patch -ulbf src/libknot/control/control.c << EOF
@@ -17,3 +17,9 @@
 #include <assert.h>
+#ifdef _WIN32
+#undef _WIN32_WINNT
+#define _WIN32_WINNT 0x0600
+#include <winsock2.h>
+#else
 #include <poll.h>
+#endif
 #include <stdbool.h>
@@ -253,4 +259,9 @@
        // Control interface.
+#ifdef _WIN32
+       WSAPOLLFD pfd = { .fd = ctx->listen_sock, .events = POLLIN };
+       int ret = WSAPoll(&pfd, 1, -1);
+#else
        struct pollfd pfd = { .fd = ctx->listen_sock, .events = POLLIN };
        int ret = poll(&pfd, 1, -1);
+#endif
        if (ret <= 0) {
EOF
# fix missing realpath in src/dnssec/lib/keystore/pkcs8_dir.c (version >= 2.6.0)
mv src/dnssec/lib/keystore/pkcs8_dir.c src/dnssec/lib/keystore/pkcs8_dir.c.bak &&
echo "#define realpath(N,R) _fullpath((R),(N),_MAX_PATH)" > src/dnssec/lib/keystore/pkcs8_dir.c &&
cat src/dnssec/lib/keystore/pkcs8_dir.c.bak >> src/dnssec/lib/keystore/pkcs8_dir.c
# fix src/libknot/endian.h
####See also: https://gist.github.com/panzi/6856583
####See also: http://lists-archives.com/git/809742-htonll-ntohll.html
cat >> src/libknot/endian.h << EOF
#if defined(_WIN32) && !defined(htobe64)
#include <winsock2.h>
#define be16toh(x) ntohs(x)
#define be32toh(x) ntohl(x)
//#define be64toh(x) ntohll(x)
#define be64toh(x) _byteswap_uint64(x)
#define htobe16(x) htons(x)
#define htobe32(x) htonl(x)
//#define htobe64(x) htonll(x)
#define htobe64(x) _byteswap_uint64(x)
#define le16toh(x) (x)
#define le32toh(x) (x)
#define le64toh(x) (x)
#define htole16(x) (x)
#define htole32(x) (x)
#define htole64(x) (x)
#endif
EOF
# fix missing strndup/realpath in src/libdnssec/keystore/pkcs8_dir.c (version >= 2.7.3)
mv src/libdnssec/keystore/pkcs8_dir.c src/libdnssec/keystore/pkcs8_dir.c.bak
cat > src/libdnssec/keystore/pkcs8_dir.c << EOF
#include <malloc.h>
#include <string.h>
char* strndup (const char *str, size_t maxlen)
{
  int l = strnlen(str, maxlen);
  char* s = (char*)malloc(l + 1);
  memcpy(s, str, l);
  s[l] = 0;
  return s;
}
#define realpath(N,R) _fullpath((R),(N),_MAX_PATH)
EOF
# fix mkdir in libdnssec/shared/fs.c (version >= 2.7.3)
sed -i.bak -e "s/\(mkdir\s*([^,]*\),[^,)]*/\1/" src/libdnssec/shared/fs.c
cat src/libdnssec/keystore/pkcs8_dir.c.bak >> src/libdnssec/keystore/pkcs8_dir.c
# fix missing realpath in src/libdnssec/keystore/pkcs8.c (version >= 2.9.2)
mv src/libdnssec/keystore/pkcs8.c src/libdnssec/keystore/pkcs8.c.bak &&
echo "#define realpath(N,R) _fullpath((R),(N),_MAX_PATH)" > src/libdnssec/keystore/pkcs8.c &&
cat src/libdnssec/keystore/pkcs8.c.bak >> src/libdnssec/keystore/pkcs8.c
# fix missing EHOSTDOWN in src/libknot/errcode.h (version >= 3.0.4)
mv src/libknot/errcode.h src/libknot/errcode.h.bak
cat > src/libknot/errcode.h << EOF
#include <winsock2.h>
#ifndef EHOSTDOWN
#define EHOSTDOWN WSAEHOSTDOWN
#endif
EOF
cat src/libknot/errcode.h.bak >> src/libknot/errcode.h
# fix missing localtime_r (version >= 3.0.4)
for F in $(grep -lw localtime_r $(find -name '*.c')); do
mv $F $F.bak3
cat > $F << EOF
#ifndef _POSIX_THREAD_SAFE_FUNCTIONS
#define _POSIX_THREAD_SAFE_FUNCTIONS
#endif
EOF
cat $F.bak3 >> $F
done
wl-showstatus configure &&
autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$(pwd)/winfix -I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman -lws2_32" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



