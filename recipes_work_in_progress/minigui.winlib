export NAME="MiniGUI"
export STATUS=
export URL=http://www.minigui.com/
export BASENAME=minigui
export DESCRIPTION="A modern and mature cross-platform window system for embedded systems and smart IoT devices."
export CATEGORY=gui
export TYPE=library
#export VERSION=5.0.11
#export VERSIONDATE=20230320
#export VERSION=5.0.12
#export VERSIONDATE=20240122
#export VERSION=5.0.15
#export VERSIONDATE=20250513
export VERSION=5.0.16
export VERSIONDATE=20250529
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/VincentWei/MiniGUI/tags"
export DOWNLOADURL="https://minigui.fmsoft.cn/download libminigui-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/VincentWei/MiniGUI/archive/refs/tags/ver-$(echo $VERSION|tr . -).tar.gz
export DOWNLOADSOURCEURL=https://minigui.fmsoft.cn/downloads/$VERSION/libminigui-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/ver-$(echo $VERSION|tr . -).tar.gz
#cd MiniGUI-ver-$(echo $VERSION|tr . -)
tar xz --force-local -f $TARBALLDIR/$BASENAME/libminigui-$VERSION.tar.gz
cd libminigui-$VERSION
# fix include/common.h (version >= 5.0.15)
patch -ulbf include/common.h << EOF
@@ -400,2 +400,6 @@

+#ifdef __MINGW32__
+#include <windows.h>
+typedef PVOID GHANDLE;
+#else
 /**
@@ -1009,2 +1013,3 @@
 typedef SIZE* PSIZE;
+#endif

EOF
wl-showstatus configure &&
 #wl-showstatus preconfigure &&
 #mkdir -p m4 &&
 ##libtoolize -f -i -c &&
 ##intltoolize -f -c &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 ## allow building shared libraries when using clang
 #if ${CC:-gcc} --version|grep -q "^clang" && ! ${CC:-gcc} --help|grep auto-import; then
 # sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" configure
 # #sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" $(find -name configure)
 #fi &&
 ## fix confusion between MSVC and clang
 #if ${CC:-gcc} --version|grep -q "^clang"; then
 # sed -i.bak2 -e "s/\b\(cl\)\(\*\)/\1.exe\2/g; s/\(ld_shlibs\)=no/\1yes/" configure
 #fi &&
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-osname=win32 &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
 #( make install-strip || ( make install && strip $INSTALLPREFIX/bin/*.{dll,exe} )) &&
    echo OK


mkdir src/misc
cp src/kernel/listenfd.c src/misc/
touch src/font/freetype.h
touch src/font/freetype.c
touch src/font/gunicode.h
touch src/font/gunichartables.h
touch src/font/charset-bidi.c
mkdir -p build_win &&
 wl-showstatus configure &&
 touch build_win/_dummy_for_license_picture.c &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -Dwith_ft2includes:PATH=$MINGWPREFIX/include/freetype2 -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf MiniGUI-ver-$(echo $VERSION|tr . -)
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libminigui-$VERSION



