export NAME="FreeCAD"
export STATUS=
export URL=https://freecadweb.org/
#export URL=https://github.com/FreeCAD/FreeCAD/
export BASENAME=freecad
export DESCRIPTION="a free and opensource multiplatform 3D parametric modeler"
export CATEGORY=3d
export TYPE=application
#export VERSION=0.18.4
#export VERSIONDATE=20200517
#export VERSION=0.18.5
#export VERSIONDATE=20201126
#export VERSION=0.18.6
#export VERSIONDATE=20210227
#export VERSION=0.19
#export VERSIONDATE=20210226
#export VERSION=0.19.1
#export VERSIONDATE=20210313
####By not providing "FindQt5WebEngineWidgets.cmake" in CMAKE_MODULE_PATH this project has asked CMake to find a package configuration file provided by "Qt5WebEngineWidgets", but CMake did not find one.
#export VERSION=0.19.2
#export VERSIONDATE=20210423
#export VERSION=0.19.3
#export VERSIONDATE=20211205
#export VERSION=0.19.4
#export VERSIONDATE=20220301
#export VERSION=0.20
#export VERSIONDATE=20220614
#export VERSION=0.20.1
#export VERSIONDATE=20220809
#export VERSION=0.20.2
#export VERSIONDATE=20221205
#export VERSION=0.21.0
#export VERSIONDATE=20230803
export VERSION=0.21.1
export VERSIONDATE=20230901
####Could not find a package configuration file provided by "boost_python"
wl-showstatus --package-version
#export DEPENDENCIES=qt4,boost,freetype2,libmed,coin
export DEPENDENCIES=qt,boost,freetype2,libmed,coin,xerces,opencascade,vtk
export OPTIONALDEPENDENCIES=pcl
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/FreeCAD/FreeCAD/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/FreeCAD/FreeCAD/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd FreeCAD-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt4/bin QTDIR=$MINGWPREFIX/qt4 QMAKESPEC=$MINGWPREFIX/qt4/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DHDF5_DIR:PATH=$MINGWPREFIX/cmake/hdf5 -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_QT5:BOOL=ON -DBUILD_WEB:BOOL=OFF -DCOIN3D_LIBRARY_RELEASE:FILEPATH=$MINGWPREFIX/lib/libCoin.a -DHDF5_DIR:PATH=$MINGWPREFIX/cmake/hdf5 -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_QT5:BOOL=ON -DBUILD_WEB:BOOL=OFF -DCOIN3D_LIBRARY_RELEASE:FILEPATH=$MINGWPREFIX/lib/libCoin.a -DHDF5_DIR:PATH=$MINGWPREFIX/cmake/hdf5 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #-DBUILD_DYNAMIC_LINK_PYTHON:BOOL=OFF 
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf FreeCAD-$VERSION



