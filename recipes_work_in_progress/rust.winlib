export NAME="Rust"
export STATUS=
export URL=https://www.rust-lang.org/
export BASENAME=rust
export DESCRIPTION="Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety."
export CATEGORY=development
export TYPE=application
#export VERSION=1.8.0
#export VERSIONDATE=20160509
#export VERSION=1.9.0
#export VERSIONDATE=20160528
#export VERSION=1.10.0
#export VERSIONDATE=20160708
#export VERSION=1.16.0
#export VERSIONDATE=20170419
#export VERSION=1.17.0
#export VERSIONDATE=20170428
#export VERSION=1.18.0
#export VERSIONDATE=20170609
#export VERSION=1.19.0
#export VERSIONDATE=20170721
#export VERSION=1.20.0
#export VERSIONDATE=20170901
#export VERSION=1.21.0
#export VERSIONDATE=20171013
####src/bootstrap/bootstrap.py", line 135, in run    ret = subprocess.Popen(args)
#export VERSION=1.22.1
#export VERSIONDATE=20171123
#export VERSION=1.23.0
#export VERSIONDATE=20180105
#export VERSION=1.24.0
#export VERSIONDATE=20180216
#export VERSION=1.24.1
#export VERSIONDATE=20180302
#export VERSION=1.25.0
#export VERSIONDATE=20180330
#export VERSION=1.26.0
#export VERSIONDATE=20180511
#export VERSION=1.26.1
#export VERSIONDATE=20180530
####error: failed to run `rustc` to learn about target-specific information
#export VERSION=1.26.2
#export VERSIONDATE=20180606
#export VERSION=1.27.0
#export VERSIONDATE=20180622
#export VERSION=1.27.1
#export VERSIONDATE=20180711
#export VERSION=1.27.2
#export VERSIONDATE=20180721
#export VERSION=1.28.0
#export VERSIONDATE=20180803
#export VERSION=1.29.0
#export VERSIONDATE=20180914
#export VERSION=1.29.1
#export VERSIONDATE=20180926
####thread 'rustc' panicked at 'librustc\session\filesearch.rs:155: failed to get realpath: Incorrect function. (os error 1)', librustc\session\mod.rs:1180:26
#export VERSION=1.29.2
#export VERSIONDATE=20181013
#export VERSION=1.30.0
#export VERSIONDATE=20181026
#export VERSION=1.30.1
#export VERSIONDATE=20181109
#export VERSION=1.31.0
#export VERSIONDATE=20181207
#export VERSION=1.31.1
#export VERSIONDATE=20181221
#export VERSION=1.32.0
#export VERSIONDATE=20190118
#export VERSION=1.33.0
#export VERSIONDATE=20190301
#export VERSION=1.34.0
#export VERSIONDATE=20190412
#export VERSION=1.34.1
#export VERSIONDATE=20190426
#export VERSION=1.34.2
#export VERSIONDATE=20190514
#export VERSION=1.35.0
#export VERSIONDATE=20190524
#export VERSION=1.36.0
#export VERSIONDATE=20190704
#export VERSION=1.37.0
#export VERSIONDATE=20190815
#export VERSION=1.38.0
#export VERSIONDATE=20190927
#export VERSION=1.39.0
#export VERSIONDATE=20191107
#export VERSION=1.40.0
#export VERSIONDATE=20191219
#export VERSION=1.41.0
#export VERSIONDATE=20200131
#export VERSION=1.41.1
#export VERSIONDATE=20200227
#export VERSION=1.42.0
#export VERSIONDATE=20200312
#export VERSION=1.43.0
#export VERSIONDATE=20200424
#export VERSION=1.43.1
#export VERSIONDATE=20200508
#export VERSION=1.44.0
#export VERSIONDATE=20200605
#export VERSION=1.44.1
#export VERSIONDATE=20200618
#export VERSION=1.45.0
#export VERSIONDATE=20200716
#export VERSION=1.45.1
#export VERSIONDATE=20200731
#export VERSION=1.45.2
#export VERSIONDATE=20200804
#export VERSION=1.46.0
#export VERSIONDATE=20200828
#export VERSION=1.47.0
#export VERSIONDATE=20201009
#export VERSION=1.48.0
#export VERSIONDATE=20201120
####thread 'main' panicked at 'cannot load the default codegen backend twice', librustc_driver\lib.rs:274:5
#export VERSION=1.49.0
#export VERSIONDATE=20210101
#export VERSION=1.50.0
#export VERSIONDATE=20210212
#export VERSION=1.51.0
#export VERSIONDATE=20210326
#export VERSION=1.52.0
#export VERSIONDATE=20210507
#export VERSION=1.52.1
#export VERSIONDATE=20210511
#export VERSION=1.53.0
#export VERSIONDATE=20210618
#export VERSION=1.54.0
#export VERSIONDATE=20210730
#export VERSION=1.55.0
#export VERSIONDATE=20210910
#export VERSION=1.56.0
#export VERSIONDATE=20211022
#export VERSION=1.56.1
#export VERSIONDATE=20211102
#export VERSION=1.57.0
#export VERSIONDATE=20211203
#export VERSION=1.58.0
#export VERSIONDATE=20220114
#export VERSION=1.58.1
#export VERSIONDATE=20220121
#export VERSION=1.59.0
#export VERSIONDATE=20220225
#export VERSION=1.60.0
#export VERSIONDATE=20220408
#export VERSION=1.61.0
#export VERSIONDATE=20220520
#export VERSION=1.62.0
#export VERSIONDATE=20220701
#export VERSION=1.62.1
#export VERSIONDATE=20220720
#export VERSION=1.63.0
#export VERSIONDATE=20220812
#export VERSION=1.64.0
#export VERSIONDATE=20220923
#export VERSION=1.65.0
#export VERSIONDATE=20221104
#export VERSION=1.66.0
#export VERSIONDATE=20221216
#export VERSION=1.66.1
#export VERSIONDATE=20230112
#export VERSION=1.67.0
#export VERSIONDATE=20230127
#export VERSION=1.67.1
#export VERSIONDATE=20230210
#export VERSION=1.68.0
#export VERSIONDATE=20230310
#export VERSION=1.68.1
#export VERSIONDATE=20230325
#export VERSION=1.68.2
#export VERSIONDATE=20230329
#export VERSION=1.69.0
#export VERSIONDATE=20230421
#export VERSION=1.70.0
#export VERSIONDATE=20230602
#export VERSION=1.71.0
#export VERSIONDATE=20230714
#export VERSION=1.71.1
#export VERSIONDATE=20230921
#export VERSION=1.72.0
#export VERSIONDATE=20230825
#export VERSION=1.72.1
#export VERSIONDATE=20230920
#export VERSION=1.73.0
#export VERSIONDATE=20231006
#export VERSION=1.74.0
#export VERSIONDATE=20231116
#export VERSION=1.74.1
#export VERSIONDATE=20231219
#export VERSION=1.75.0
#export VERSIONDATE=20231229
#export VERSION=1.76.0
#export VERSIONDATE=20240209
#export VERSION=1.77.0
#export VERSIONDATE=20240321
#export VERSION=1.77.1
#export VERSIONDATE=20240330
#export VERSION=1.77.2
#export VERSIONDATE=20240410
#export VERSION=1.78.0
#export VERSIONDATE=20240502
#export VERSION=1.79.0
#export VERSIONDATE=20240614
#export VERSION=1.80.0
#export VERSIONDATE=20240726
#export VERSION=1.80.1
#export VERSIONDATE=20240905
#export VERSION=1.81.0
#export VERSIONDATE=20240906
#export VERSION=1.82.0
#export VERSIONDATE=20241018
#export VERSION=1.83.0
#export VERSIONDATE=20241129
export VERSION=1.84.0
export VERSIONDATE=20250110
####Exception: no cargo executable found at prebuilt/bin/cargo
wl-showstatus --package-version
export DEPENDENCIES=libiconv
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,libcurl
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE-MIT
export LICENSETYPE="Apache/MIT"
#export DOWNLOADURL="https://www.rust-lang.org/downloads.html rustc- -src.tar.gz"
#export DOWNLOADURL="https://github.com/rust-lang/rust/releases"
export DOWNLOADURL="https://forge.rust-lang.org/infra/other-installation-methods.html rustc- -src.tar.gz"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/rust-lang/rust/archive/refs/tags/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://static.rust-lang.org/dist/rustc-$VERSION-src.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd rustc-$VERSION
#cd rust-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/rustc-$VERSION-src.tar.gz
cd rustc-$VERSION-src
## download prebuilt version
#mkdir -p prebuilt/download
#wl-download -v -d prebuilt/download $(sed -ne "s?^\s*\"\(.*\-$(echo $RUNPLATFORM |sed -e "s/-.*$//")-pc-windows-gnu\.tar\.xz\)\".*\$?$(sed -ne "s/^\s*\"dist_server\": \"\(.*\)\".*$/\1/p" src/stage0.json)/\1?p" src/stage0.json)
#for F in prebuilt/download/*.tar.xz; do
# tar xfJ $F -Cprebuilt --strip-components=2
#done
# download prebuilt version
mkdir -p prebuilt/download
wl-download -v -d $TARBALLDIR/$BASENAME https://static.rust-lang.org/dist/rust-$VERSION-$(echo $RUNPLATFORM |sed -e "s/-.*$//")-pc-windows-gnu.tar.xz
tar xfJ $TARBALLDIR/$BASENAME/rust-$VERSION-$(echo $RUNPLATFORM |sed -e "s/-.*$//")-pc-windows-gnu.tar.xz -Cprebuilt --strip-components=2
mv prebuilt/bin/cargo.exe prebuilt/bin/cargo
## fix .exe issue
#mkdir prebuilt/bin/stripexe
#mv prebuilt/bin/*.exe prebuilt/bin/stripexe/
#for F in prebuilt/bin/stripexe/*.exe; do
# cp -u $F prebuilt/bin/$(basename $F|sed -e "s/\.exe$//")
#done
#mv -f prebuilt/bin/stripexe/* prebuilt/bin/
#rmdir prebuilt/bin/stripexe
# fix already defined IN in src/llvm/utils/TableGen/CodeEmitterGen.cpp
sed -i.bak -e "s/\bIN\b/it_&/g" src/llvm/utils/TableGen/CodeEmitterGen.cpp
## fix src/bootstrap/bootstrap.py
#patch -ulbf src/bootstrap/bootstrap.py << EOF
#@@ -163,2 +163,5 @@
# def default_build_triple():
#+    ostype = 'pc-windows-gnu'
#+    cputype = 'x86_64'
#+    return 'x86_64-w64-mingw32'
#     """Build triple as in LLVM"""
#EOF
# fix src/bootstrap/configure.py (version >= 1.69.0)
patch -ulbf src/bootstrap/configure.py << EOF
@@ -300,2 +300,8 @@

+def exe_suffix():
+    """Return a suffix for executables"""
+    if sys.platform == 'win32':
+        return '.exe'
+    return ''
+
 for key in known_args:
@@ -331,14 +337,14 @@
         for path in os.environ['PATH'].split(os.pathsep):
-            if os.path.exists(path + '/rustc'):
-                set('build.rustc', path + '/rustc')
+            if os.path.exists(path + '/rustc' + exe_suffix()):
+                set('build.rustc', path + '/rustc' + exe_suffix())
                 break
         for path in os.environ['PATH'].split(os.pathsep):
-            if os.path.exists(path + '/cargo'):
-                set('build.cargo', path + '/cargo')
+            if os.path.exists(path + '/cargo' + exe_suffix()):
+                set('build.cargo', path + '/cargo' + exe_suffix())
                 break
     elif option.name == 'local-rust-root':
-        set('build.rustc', value + '/bin/rustc')
-        set('build.cargo', value + '/bin/cargo')
+        set('build.rustc', value + '/bin/rustc' + exe_suffix())
+        set('build.cargo', value + '/bin/cargo' + exe_suffix())
     elif option.name == 'llvm-root':
-        set('target.{}.llvm-config'.format(build()), value + '/bin/llvm-config')
+        set('target.{}.llvm-config'.format(build()), value + '/bin/llvm-config' + exe_suffix())
     elif option.name == 'llvm-config':
EOF
sed -i.bak "s/^exec python\b/&.exe/" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --python=$PYDIR/python.exe &&
 #./configure --prefix=$INSTALLPREFIX --python=$PYDIR/python.exe --disable-clang &&
 #PATH=$PYDIR:$PATH ./configure --prefix=$INSTALLPREFIX --python=$PYDIR/python.exe &&
 #$PYDIR/python.exe src/bootstrap/configure.py --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --enable-optimize --enable-local-rust --disable-docs &&
 #$PYDIR/python.exe src/bootstrap/configure.py --prefix=$INSTALLPREFIX --disable-debug --enable-optimize --enable-local-rust --disable-docs &&
 #$PYDIR/python.exe src/bootstrap/configure.py --prefix=$INSTALLPREFIX --disable-debug --enable-optimize --enable-full-bootstrap --disable-docs &&
 #$PYDIR/python.exe src/bootstrap/configure.py --prefix=$INSTALLPREFIX --enable-use-libcxx --enable-parallel-compiler --disable-debug --enable-optimize --disable-docs --python=$PYDIR/python.exe &&
 #$PYDIR/python.exe src/bootstrap/configure.py --prefix=$INSTALLPREFIX --enable-use-libcxx --disable-debug --disable-docs --python=$PYDIR/python.exe &&
 #$PYDIR/python.exe src/bootstrap/configure.py --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=$TARGETPLATFORM --disable-debug --disable-llvm-assertions --disable-docs --python=$PYDIR/python.exe &&
 #MSYS2_ARG_CONV_EXCL="--prefix;--sysconfdir;--localstatedir" GIT_DIR=/dev/null $PYDIR/python.exe src/bootstrap/configure.py --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=$TARGETPLATFORM --sysconfdir=$INSTALLPREFIX/etc --localstatedir=$INSTALLPREFIX/var/lib --enable-ninja --disable-debug --disable-llvm-assertions --disable-docs --enable-local-rust --local-rust-root=$PWD/prebuilt --python=$PYDIR/python.exe &&
 #PATH=$PYDIR:$PATH \
 MSYS2_ARG_CONV_EXCL="--prefix;--sysconfdir;--localstatedir" GIT_DIR=/dev/null $PYDIR/python.exe src/bootstrap/configure.py --prefix=$INSTALLPREFIX --build=$(echo $BUILDPLATFORM |sed -e "s/-.*$//")-pc-windows-gnu --host=$(echo $RUNPLATFORM |sed -e "s/-.*$//")-pc-windows-gnu --target=$(echo $TARGETPLATFORM |sed -e "s/-.*$//")-pc-windows-gnu --sysconfdir=$INSTALLPREFIX/etc --localstatedir=$INSTALLPREFIX/var/lib --enable-ninja --disable-debug --disable-llvm-assertions --disable-docs --enable-local-rust --local-rust-root=$PWD/prebuilt --python=$PYDIR/python.exe &&
 #--enable-extended 
 #--enable-use-libcxx 
 ## avoid colon in .d files
 #sed -i.bak -e "s?\b\([A-Z]\):\\\\?/\1/?g" $(find build/bootstrap -name '*.d') &&
 #wl-showstatus build &&
 # use PATH=$PATH:$ORIGINAL_PATH to be able to find PowerShell.exe (version >= 1.22.1)
 PATH=$PATH:$ORIGINAL_PATH make &&
 wl-showstatus build-install &&
 make install &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf rustc-$VERSION
####$PYDIR/python.exe x.py --help



DEP_NGHTTP_ROOT=$INSTALLPREFIX DEP_OPENSSL_ROOT=$INSTALLPREFIX DEP_Z_ROOT=$INSTALLPREFIX $PYDIR/python.exe x.py --help




#### See also: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html
git clone https://github.com/rust-lang/rust.git
cd rust
$PYDIR/python.exe src/bootstrap/configure.py --prefix=$INSTALLPREFIX --disable-debug --enable-optimize --disable-docs
sed -i.bak -e "s?^\(prefix\s*=\s*'\)'?\1$INSTALLPREFIX'?" config.toml
$PYDIR/python.exe x.py --help



#### See also: https://gitflic.ru/project/vault/rust
#### Note: does not support building on RAM-drive
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd rust-$VERSION
#cp config.example.toml config.toml
#wl-showstatus build &&
# $PYDIR/python.exe x.py &&
# $PYDIR/python.exe x.py build &&
#    echo OK
wl-showstatus configure &&
 $PYDIR/python.exe x.py setup user &&
 for F in $(find build/*/stage0 -name '*.exe'); do
  cp -f $F $(echo $F|sed -e "s/\.exe$/.TMP/")
  mv -f $(echo $F|sed -e "s/\.exe$/.TMP/") $(echo $F|sed -e "s/\.exe$//")
 done &&
 wl-showstatus build &&
 $PYDIR/python.exe x.py dist &&
 $PYDIR/python.exe x.py build &&
    echo OK


#Usage: x.py <subcommand> [options] [<paths>...]
#
#Subcommands:
#    build, b    Compile either the compiler or libraries
#    check, c    Compile either the compiler or libraries, using cargo check
#    clippy      Run clippy (uses rustup/cargo-installed clippy binary)
#    fix         Run cargo fix
#    fmt         Run rustfmt
#    test, t     Build and run some test suites
#    bench       Build and run some benchmarks
#    doc, d      Build documentation
#    clean       Clean out build directories
#    dist        Build distribution artifacts
#    install     Install distribution artifacts
#    run, r      Run tools contained in this repository
#    setup       Create a config.toml (making it easier to use `x.py` itself)
#    suggest     Suggest a subset of tests to run, based on modified files
#
#To learn more about a subcommand, run `./x.py <subcommand> -h`
