export NAME="xcbuild"
export STATUS=
export URL=https://github.com/facebookarchive/xcbuild
export BASENAME=xcbuild
export DESCRIPTION="xcbuild is an Xcode-compatible build tool with the goal of providing faster builds, better documentation of the build process and running on multiple platforms (macOS, Linux, and Windows)"
export CATEGORY=
export TYPE=library
export VERSION=0.1.1
export VERSIONDATE=20210607
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/facebookarchive/xcbuild/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/facebookarchive/xcbuild/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix Libraries/libcar/Sources/Rendition.cpp (version >= 0.1.1)
patch -ulbf Libraries/libcar/Sources/Rendition.cpp << EOF
@@ -512,3 +512,3 @@
     memset(static_cast<void *>(&header), 0, sizeof(struct car_rendition_value));
-    strncpy(header.magic, "ISTC", 4);
+    memcpy(header.magic, "ISTC", 4);
     header.version = 1;
@@ -658,3 +658,3 @@
         struct car_rendition_data_header_raw raw_header;
-        strncpy(raw_header.magic, "DWAR", 4);
+        memcpy(raw_header.magic, "DWAR", 4);
         raw_header.length = compressed_data_length;
EOF
# fix missing gmtime_r in Libraries/plist/Sources/UnixTime.cpp (version >= 0.1.1)
mv Libraries/plist/Sources/UnixTime.cpp Libraries/plist/Sources/UnixTime.cpp.bak &&
echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > Libraries/plist/Sources/UnixTime.cpp &&
cat Libraries/plist/Sources/UnixTime.cpp.bak >> Libraries/plist/Sources/UnixTime.cpp
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



