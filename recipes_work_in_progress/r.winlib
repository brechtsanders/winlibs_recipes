export NAME="R"
export STATUS=
export URL=http://www.r-project.org/
export BASENAME=r
export DESCRIPTION="R is a free software environment for statistical computing and graphics."
export CATEGORY=development
export TYPE=application
#export VERSION=3.1.2
#export VERSIONDATE=20150228
#export VERSION=3.1.3
#export VERSIONDATE=20150310
#export VERSION=3.2.0
#export VERSIONDATE=20150416
#export VERSION=3.2.1
#export VERSIONDATE=20150618
#export VERSION=3.2.2
#export VERSIONDATE=20150814
#export VERSION=3.2.3
#export VERSIONDATE=20151210
####src/gnuwin32/../main/libmain.a(platform.o):platform.c:(.text+0x841e): undefined reference to `u_getVersion_55'
#export VERSION=3.2.4
#export VERSIONDATE=20160406
#export VERSION=3.2.5
#export VERSIONDATE=20160415
####src/main/platform.c:(.text+0x844e): undefined reference to `u_getVersion_57'
#export VERSION=3.3.0
#export VERSIONDATE=20160503
#export VERSION=3.3.1
#export VERSIONDATE=20160621
####checking for BSD networking... configure: error: BSD networking functions are required
####src/gnuwin32/e_pow.S:110: Error: invalid instruction suffix for `pop'
#export VERSION=3.3.2
#export VERSIONDATE=20161101
####src/gnuwin32/platform.c:3304:22: error: unknown type name 'UVersionInfo'
#export VERSION=3.3.3
#export VERSIONDATE=20170306
#export VERSION=3.4.0
#export VERSIONDATE=20170421
#export VERSION=3.4.1
#export VERSIONDATE=20170630
#export VERSION=3.4.2
#export VERSIONDATE=20170929
#export VERSION=3.4.3
#export VERSIONDATE=20171130
#export VERSION=3.4.4
#export VERSIONDATE=20180115
#export VERSION=3.5.0
#export VERSIONDATE=20180423
####src/gnuwin32/e_pow.S:110: Error: invalid instruction suffix for `pop'
#export VERSION=3.5.1
#export VERSIONDATE=20180702
#export VERSION=3.5.2
#export VERSIONDATE=20181220
#export VERSION=3.5.3
#export VERSIONDATE=20190311
#export VERSION=3.6.0
#export VERSIONDATE=20190427
#export VERSION=3.6.1
#export VERSIONDATE=20190706
#export VERSION=3.6.2
#export VERSIONDATE=20191212
#export VERSION=3.6.3
#export VERSIONDATE=20200229
#export VERSION=4.0.0
#export VERSIONDATE=20200424
#export VERSION=4.0.1
#export VERSIONDATE=20200606
#export VERSION=4.0.2
#export VERSIONDATE=20200622
#export VERSION=4.0.3
#export VERSIONDATE=20201010
#export VERSION=4.0.4
#export VERSIONDATE=20210215
#export VERSION=4.0.5
#export VERSIONDATE=20210331
#export VERSION=4.1.0
#export VERSIONDATE=20210518
#export VERSION=4.1.1
#export VERSIONDATE=20210810
#export VERSION=4.1.2
#export VERSIONDATE=20211101
#export VERSION=4.1.3
#export VERSIONDATE=20220310
export VERSION=4.2.0
export VERSIONDATE=20220422
####Error in library.dynam("tools", "tools", .Library) :  DLL 'tools' not found: maybe not installed for this architecture?
wl-showstatus --package-version
#export DEPENDANCIES=readline,cairo,libpng,libjpeg,libtiff,zlib,libbz2,pcre,tre,xz,libdl,lapack
export DEPENDANCIES=readline,cairo,libpng,libjpeg,libtiff,zlib,libbz2,pcre,tre,xz,libdl,openblas,libcurl
export OPTIONALDEPENDANCIES=icu
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://cran.r-project.org/ R-"
export DOWNLOADURL="http://cran.r-project.org/src/base/ R-"
#export DOWNLOADURL="https://cloud.r-project.org/src/base/ R-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://cran.r-project.org/src/base/R-$(echo $VERSION|sed -e "s/^\([0-9]*\)\..*$/\1/")/R-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/R-$VERSION.tar.gz
cd R-$VERSION
#echo "void u_getVersion_55(UVersionInfo versionArray) { u_getVersion(versionArray); }" >> 
#cat >> src/main/platform.c << EOF
#void u_getVersion_55(UVersionInfo versionArray) { u_getVersion(versionArray); }
#EOF
#cat >> src/main/util.c << EOF
#void ucol_close_55(UCollator *coll) { ucol_close(coll); }
#void ucol_setAttribute_55(UCollator *coll, UColAttribute attr, UColAttributeValue value, UErrorCode *status) { ucol_setAttribute(coll, attr, value, status); }
#void uloc_setDefault_55(const char* localeID, UErrorCode* status) { uloc_setDefault(localeID, status); }
#UCollator* ucol_open_55(const char *loc, UErrorCode *status) { return ucol_open(loc, status); }
#void ucol_setStrength(UCollator *coll, UCollationStrength strength) { ucol_setStrength(coll, strength); }
#const char* ucol_getLocaleByType(const UCollator *coll, ULocDataLocaleType type, UErrorCode *status) { return ucol_getLocaleByType(coll, type, status); }
#void uiter_setUTF8(UCharIterator *iter, const char *s, int32_t length) { uiter_setUTF8(iter, s, length); }
#UCollationResult ucol_strcollIter(const UCollator *coll, UCharIterator *sIter, UCharIterator *tIter, UErrorCode *status) { return ucol_strcollIter(coll, sIter, tIter, status); }
#EOF
# workaround for missing rl_library_version (not exported by shared readline)
sed -i.bak -e "s/(rl_library_version)/(\"\")/" src/main/platform.c
# fix src/extra/trio/compat.c (version >= 4.1.2)
patch -ulbf src/extra/trio/compat.c << EOF
@@ -16,2 +16,3 @@

+#if 0
 int printf(const char *format, ...)
@@ -92 +93,2 @@
 }
+#endif
EOF
# fix redefinition of _FILE_ID_INFO/FILE_ID_INFO/PFILE_ID_INFO in src/gnuwin32/extra.c (version >= 4.1.2)
patch -ulbf src/gnuwin32/extra.c << EOF
@@ -490,3 +490,3 @@

-#if WIN32_WINNT < 0x602 || !defined(__MINGW32__)
+#if WIN32_WINNT < 0x602 && !defined(__MINGW32__)
 /* Available in Windows Server 2012, but also in MinGW from Windows 8.  */
EOF
## fix loading location of DLLs in src/library/base/R/library.R (version >= 4.1.2)
#patch -ulbf src/library/base/R/library.R << EOF
#@@ -592,2 +592,5 @@
#         if(file.exists(file)) break else file <- ""
#+        DLLpath <- file.path(pkg, "libs", "x64")
#+        file <- file.path(DLLpath, chname1)
#+        if(file.exists(file)) break else file <- ""
#     }
#EOF
# fix for Windows
cp src/scripts/Makefile.win src/scripts/Makefile.in &&
echo "install: all" >> src/scripts/Makefile.in &&
echo "install-strip: all" >> src/scripts/Makefile.in &&
sed -i.bak -e "s/unix//" src/Makefile.in
#sed -i.bak -e "s/unix/gnuwin32/" src/Makefile.in
# avoid error about BSD networking functions in configure (version >= 3.3.0)
sed -i.bak -e "s/as_fn_error\(.*BSD networking functions are required\)/\$as_echo\1/" configure
# fix issue with BZ2_bzlibVersion while detecting -lbz2 (version >= 3.3.2)
sed -i.bak2 -e "s?char BZ2_bzlibVersion ();?#include <bzlib.h>?" configure
wl-showstatus configure &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-lapack --with-readline --with-system-zlib --with-system-bzlib --with-system-pcre --with-system-tre --with-system-xz --with-ICU --without-x &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-lapack --with-readline --with-system-zlib --with-system-bzlib --with-system-pcre --with-system-tre --with-system-xz --without-ICU --without-x &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-lapack --with-readline --with-system-zlib --with-system-pcre --with-system-tre --with-system-xz --without-ICU --without-x &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-lapack --with-readline --with-system-xz --without-ICU --without-x &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-lapack --with-readline --with-system-xz --without-ICU --without-x PKG_CONFIG=$(which pkg-config.exe) &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-lapack --with-readline --with-system-xz --without-ICU --without-x PKG_CONFIG=$(which pkg-config.exe) CFLAGS="-I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -ldl" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-blas --with-lapack --with-readline --with-system-tre --with-ICU --without-x PKG_CONFIG=$(which pkg-config.exe) r_arch=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "x64"; else echo "i386"; fi) LIBnn=lib CFLAGS="-I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -ldl" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-blas --with-lapack --with-readline --with-system-tre --with-ICU --without-x PKG_CONFIG=$(which pkg-config.exe) r_arch=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "x64"; else echo "i386"; fi) LIBnn=lib CFLAGS="-I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -ldl -licuuc -licuin" &&
 # fix undefined reference to xerbla_
 sed -i.bak -e "s/#\( xerbla\.o\)/\1/" src/extra/blas/Makefile &&
 # fix missing set_rl_word_breaks
 echo "#undef HAVE_RL_COMPLETION_MATCHES" >> src/include/config.h &&
 # fix missing clock_gettime
 echo "#undef HAVE_CLOCK_GETTIME" >> src/include/config.h &&
 # fix missing definition of R_CRT
 grep -A5 "if defined(_UCRT)" src/gnuwin32/fixed/h/config.h >> src/include/config.h &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build &&
 #make -j1 -Csrc/gnuwin32 WIN=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) EXTRA_LIBS="-Wl,--as-needed -lwininet -lws2_32 -lcurl -licuin" LIBEXTRAS="-Wl,--as-needed -lpcre2-8 -lz -lbz2 -llzma -lreadline" BINPREF=$(dirname $(which ${CC:-gcc}))/ &&
 #PATH=$(pwd)/bin/x64:$(pwd)/library/tools/libs/x64:$(pwd)/modules/x64:$PATH make -j1 -Csrc/gnuwin32 WIN=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) CC="${CC:-gcc} -I$MINGWPREFIX/include/libdl-win32" EXTRA_LIBS="-Wl,--as-needed -lwininet -lws2_32 -lcurl -licuin" LIBEXTRAS="-Wl,--as-needed -lpcre2-8 -lz -lbz2 -llzma -lreadline" BINPREF=$(dirname $(which ${CC:-gcc}))/ &&
 #( make -Csrc/gnuwin32 WIN=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) CC="${CC:-gcc} -I$MINGWPREFIX/include/libdl-win32" EXTRA_LIBS="-Wl,--as-needed -lwininet -lws2_32 -lcurl -licuin" LIBEXTRAS="-Wl,--as-needed -lpcre2-8 -lz -lbz2 -llzma -lreadline" BINPREF=$(dirname $(which ${CC:-gcc}))/ || (
 # #cp -rf modules/$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "x64"; else echo "i386"; fi)/* modules/ &&
 # #cp -rf library/tools/libs/$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "x64"; else echo "i386"; fi)/* library/tools/libs/ &&
 # for D in $(find -name "x64" -or -name "i386"); do
 #  cp -rf $D/*  $D/../
 # done &&
 # make -Csrc/gnuwin32 WIN=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) CC="${CC:-gcc} -I$MINGWPREFIX/include/libdl-win32" EXTRA_LIBS="-Wl,--as-needed -lwininet -lws2_32 -lcurl -licuin" LIBEXTRAS="-Wl,--as-needed -lpcre2-8 -lz -lbz2 -llzma -lreadline" BINPREF=$(dirname $(which ${CC:-gcc}))/
 #)) &&
 make -Csrc/gnuwin32 WIN=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) CC="${CC:-gcc} -I$MINGWPREFIX/include/libdl-win32" EXTRA_LIBS="-Wl,--as-needed -lwininet -lws2_32 -lcurl -licuin" LIBEXTRAS="-Wl,--as-needed -lpcre2-8 -lz -lbz2 -llzma -lreadline -licuin -licuuc" BINPREF=$(dirname $(which ${CC:-gcc}))/ &&
 #make -Csrc/modules WIN=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) CC="${CC:-gcc} -I$MINGWPREFIX/include/libdl-win32" SHLIB_EXT=.dll SHLIB_LINK="gcc -shared -s -mwindows -Wl,--out-implib,\$@.a" internet_la_LIBADD="-Wl,--as-needed -lcurl -lintl -lws2_32 -lwininet $PWD/src/gnuwin32/R.dll $PWD/src/library/utils/src/utils.dll $PWD/src/extra/graphapp/Rgraphapp.dll"  EXTRA_LIBS="-Wl,--as-needed -lwininet -lws2_32 -lcurl -licuin" LIBEXTRAS="-Wl,--as-needed -lpcre2-8 -lz -lbz2 -llzma -lreadline" BINPREF=$(dirname $(which ${CC:-gcc}))/ &&
 wl-showstatus build-install &&
 make -j1 install DESTDIR=$(cygpath -m $INSTALLPREFIX) R_HOME=$PWD R_binary=$PWD/bin/R.exe SHLIB_EXT=.dll top_builddir=$PWD top_srcdir=$PWD CC="${CC:-gcc} -I$PWD/src/gnuwin32/fixed/h -I$PWD/src/include -I$PWD/src/gnuwin32/front-ends" HELP2MAN="$PERLDIR/bin/perl.exe $(which help2man) --no-discard-stderr" TEXI2ANY="$PERLDIR/bin/perl.exe $(which texi2any)" FC=$(which gfortran.exe) &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf R-$VERSION



