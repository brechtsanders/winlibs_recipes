export NAME="JSC.js"
export STATUS=
export URL=https://mbbill.github.io/JSC.js/
#export URL=https://github.com/mbbill/JSC.js
export BASENAME=jsc
export DESCRIPTION="JSC.js is a JavaScript engine that can run on top of your browser's JavaScript engine. It's based on the JavaScript engine (JavaScriptCore) of WebKit and compiled to wasm with emscripten."
export CATEGORY=development
export TYPE=library
export VERSION=master
export VERSIONDATE=20231216
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=gn
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
export DOWNLOADURL="https://github.com/mbbill/JSC.js/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/mbbill/JSC.js/archive/refs/heads/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd JSC.js-$VERSION
# fix build/toolchain/BUILD.gn (version >= master)
#cat >> build/toolchain/BUILD.gn << EOF
## MinGW-w64 GCC toolchain
#clang_toolchain("gcc") {
#    cc = "${CC:-gcc}"
#    cxx = "${CXX:-g++}"
#    asm = "${CC:-gcc}" # this is just a placeholder
#    ar = "${AR:-ar}"
#    ld = "${CXX:-g++}"
#    obj_extension = ".o"
#    executable_extension = ".exe"
#}
#EOF
patch -ulbf build/toolchain/BUILD.gn << EOF
@@ -9,9 +9,9 @@
 clang_toolchain("emcc") {
-    cc = "emcc\${emcc_ext}"
-    cxx = "em++\${emcc_ext}"
-    asm = "emcc\${emcc_ext}" # this is just a placeholder
-    ar = "emar\${emcc_ext}"
-    ld = "em++\${emcc_ext}"
-    obj_extension = ".bc"
-    executable_extension = ".js"
+    cc = "${CC:-gcc}"
+    cxx = "${CXX:-g++}"
+    asm = "${CC:-gcc}" # this is just a placeholder
+    ar = "${AR:-ar}"
+    ld = "${CXX:-g++}"
+    obj_extension = ".o"
+    executable_extension = ".exe"
 }
EOF
wl-showstatus configure &&
 PATH=$PYDIR:$PATH gn gen build_win &&
 #--args='host_toolchain=clang' 
 wl-showstatus build &&
 ninja -Cbuild_win &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf JSC.js-$VERSION



