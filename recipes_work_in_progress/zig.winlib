export NAME="Zig"
export STATUS=
export URL=https://ziglang.org/
export BASENAME=zig
export DESCRIPTION="Zig is a general-purpose programming language designed for robustness, optimality, and maintainability."
export CATEGORY=development
export TYPE=application
#export VERSION=0.5.0
#export VERSIONDATE=20191025
####CMake Error at cmake/Findllvm.cmake:32 (message): expected LLVM 9.x but found 8.0.1
####meson.build:26:0: ERROR: Include dir /usr/local/include/libznp does not exist.
#export VERSION=0.6.0
#export VERSIONDATE=20200414
#export VERSION=0.7.0
#export VERSIONDATE=20201109
#export VERSION=0.7.1
#export VERSIONDATE=20201214
#export VERSION=0.8.0
#export VERSIONDATE=20210605
#export VERSION=0.8.1
#export VERSIONDATE=20210907
#export VERSION=0.9.0
#export VERSIONDATE=20211221
#export VERSION=0.9.1
#export VERSIONDATE=20220215
export VERSION=0.10.0
export VERSIONDATE=20221101
wl-showstatus --package-version
export DEPENDANCIES=llvm-project
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/ziglang/zig/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/ziglang/zig/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing FILE_NAME_INFO in src/stage1/os.cpp (version >= 0.8.0)
mv src/stage1/os.cpp src/stage1/os.cpp.bak
cat >> src/stage1/os.cpp << EOF
#if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600
#undef _WIN32_WINNT
#define _WIN32_WINNT 0x0600
#endif
EOF
cat src/stage1/os.cpp >> src/stage1/os.cpp.bak
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PATH=$MINGWPREFIX/share/llvm/bin:$PATH cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DZIG_STATIC:BOOL=ON -DZIG_STATIC_LLVM:BOOL=OFF -DLLVM_CONFIG_EXE:FILEPATH=$MINGWPREFIX/share/llvm/bin/llvm-config.exe -S. -Bbuild_static &&
 wl-showstatus configure &&
 PATH=$MINGWPREFIX/share/llvm/bin:$PATH cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DZIG_STATIC:BOOL=OFF -DZIG_STATIC_LLVM:BOOL=OFF -DLLVM_CONFIG_EXE:FILEPATH=$MINGWPREFIX/share/llvm/bin/llvm-config.exe -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



