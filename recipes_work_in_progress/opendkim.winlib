export NAME="OpenDKIM"
export STATUS=
export URL=http://opendkim.org/
export BASENAME=opendkim
export DESCRIPTION="OpenDKIM is a community effort to develop and maintain a C library for producing DKIM-aware applications and an open source milter for providing DKIM service."
export CATEGORY=security
export TYPE=library
export VERSION=2.10.3
export VERSIONDATE=20160911
####configure: error: need workable resolver library
wl-showstatus --package-version
export DEPENDENCIES=rrdtool,lua,gnutls,libevent,tre,openldap,lmdb,libjansson,libldns,opendbx
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://sourceforge.net/projects/opendkim/files/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opendkim/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing u_char/u_int/u_long in libopendkim/dkim.h
mv libopendkim/dkim.h libopendkim/dkim.h.bak
cat > libopendkim/dkim.h << EOF
#ifndef u_char
#define u_char unsigned char
#endif
#ifndef u_int
#define u_int unsigned int
#endif
#ifndef u_long
#define u_long unsigned long
#endif
EOF
cat libopendkim/dkim.h.bak >> libopendkim/dkim.h
# fix missing u_char/u_int/u_long in libopendkim/base64.c
mv libopendkim/base64.c libopendkim/base64.c.bak
cat > libopendkim/base64.c << EOF
#ifndef u_char
#define u_char unsigned char
#endif
#ifndef u_int
#define u_int unsigned int
#endif
#ifndef u_long
#define u_long unsigned long
#endif
EOF
cat libopendkim/base64.c.bak >> libopendkim/base64.c
# fix missing includes in libopendkim/dkim-atps.c
mv libopendkim/dkim-atps.c libopendkim/dkim-atps.c.bak &&
sed -e "s/^\(#include <\)\(netinet\/in\.h\|arpa\/nameser\.h\|resolv\.h\|netdb\.h\)\(>\)/\/\/\1\2\3/" libopendkim/dkim-atps.c.bak > libopendkim/dkim-atps.c
# fix missing includes in libopendkim/dkim-dns.c
mv libopendkim/dkim-dns.c libopendkim/dkim-dns.c.bak &&
sed -e "s/^\(#include <\)\(netinet\/in\.h\|arpa\/nameser\.h\|resolv\.h\|netdb\.h\)\(>\)/\/\/\1\2\3/" libopendkim/dkim-dns.c.bak > libopendkim/dkim-dns.c
# fix configure
cp configure configure.bak &&
sed -e "s/as_fn_error\(.*need workable resolver library\)/\$as_echo\1/" configure.bak > configure
wl-showstatus configure &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gnutls --with-ldns --disable-filter &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



