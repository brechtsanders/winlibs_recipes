export NAME="RadioStream"
export STATUS=
export URL=https://github.com/khrynczenko/RadioStream
export BASENAME=radiostream
export DESCRIPTION="Simple, fast and light-weight internet radio player for Windows and Linux"
export CATEGORY=audio
export TYPE=application
#export VERSION=0.2.1
#export VERSIONDATE=20220529
export VERSION=0.2.2
export VERSIONDATE=20221109
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/khrynczenko/RadioStream/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/khrynczenko/RadioStream/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix building for MinGW
patch -ulbf cmake/SetupDependencies.cmake << EOF
@@ -92,3 +92,3 @@

-if(WIN32)
+if(MSVC)
     set(BASS_LIB_DIR \${bass_SOURCE_DIR}/c)
@@ -99,3 +99,3 @@
     set(SSL_LIB_FILE \$ENV{OPENSSL_ROOT_DIR}/lib/libssl.lib)
-elseif(UNIX)
+elseif(UNIX OR MINGW)
     set(BASS_LIB_DIR \${bass_SOURCE_DIR})
EOF
sed -i.bak -e "s/WIN32/MSVC/" deps/poco-src/cmake/PocoMacros.cmake

#mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -S. -Bbuild_test -LH && echo OK; rm -rf build_test

#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DCMAKE_SYSTEM_NAME=Windows 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -S. -Bbuild_win &&
 wl-showstatus build &&
 ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



