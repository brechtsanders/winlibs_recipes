export NAME="Varnish HTTP Cache"
export STATUS=
export URL=https://varnish-cache.org/
export BASENAME=varnish
export DESCRIPTION="Varnish Cache is a web application accelerator also known as a caching HTTP reverse proxy. You install it in front of any server that speaks HTTP and configure it to cache the contents. Varnish Cache is really, really fast. It typically speeds up delivery with a factor of 300 - 1000x, depending on your architecture."
export CATEGORY=communication
export TYPE=application
#export VERSION=6.0.8
#export VERSIONDATE=20210713
#export VERSION=6.0.9
#export VERSIONDATE=20211124
#export VERSION=6.0.10
#export VERSIONDATE=20220125
#export VERSION=6.0.11
#export VERSIONDATE=20221108
#export VERSION=6.0.12
#export VERSIONDATE=20231114
#export VERSION=6.0.13
#export VERSIONDATE=20240319
#export VERSION=6.4.0
#export VERSIONDATE=20200502
#export VERSION=6.5.0
#export VERSIONDATE=20200916
#export VERSION=6.5.1
#export VERSIONDATE=20200929
#export VERSION=6.5.2
#export VERSIONDATE=20210713
#export VERSION=6.6.0
#export VERSIONDATE=20210315
#export VERSION=6.6.1
#export VERSIONDATE=20210713
#export VERSION=6.6.2
#export VERSIONDATE=20220125
#export VERSION=7.0.0
#export VERSIONDATE=20210915
#export VERSION=7.0.1
#export VERSIONDATE=20211123
#export VERSION=7.0.2
#export VERSIONDATE=20220125
#export VERSION=7.0.3
#export VERSIONDATE=20220809
#export VERSION=7.1.0
#export VERSIONDATE=20220315
#export VERSION=7.1.1
#export VERSIONDATE=20220809
#export VERSION=7.1.2
#export VERSIONDATE=20221108
#export VERSION=7.2.0
#export VERSIONDATE=20220915
#export VERSION=7.2.1
#export VERSIONDATE=20221108
#export VERSION=7.3.0
#export VERSIONDATE=20230316
#export VERSION=7.3.1
#export VERSIONDATE=20231114
#export VERSION=7.4.0
#export VERSIONDATE=20230916
#export VERSION=7.4.1
#export VERSIONDATE=20230920
#export VERSION=7.4.2
#export VERSIONDATE=20231114
#export VERSION=7.4.3
#export VERSIONDATE=20240319
export VERSION=7.5.0
export VERSIONDATE=20240319
####configure: error: fnmatch.h is required
wl-showstatus --package-version
export DEPENDENCIES=ncurses,readline,pcre
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://varnish-cache.org/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://varnish-cache.org/_downloads/$BASENAME-$VERSION.tgz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tgz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix winfix/sys
cat > winfix/fnmatch.h << EOF
#include <shlwapi.h>
#define FNM_NOMATCH 1
#define fnmatch(p,s,f) (PathMatchSpec(s,p) ? 0 : FNM_NOMATCH)
EOF
echo "#include <winsock2.h>" > winfix/sys/socket.h
touch winfix/netdb.h
# don't abort on missing fnmatch.h
sed -i.bak -e "s/as_fn_error\(.*fnmatch(3) is required\)/echo\1/; s/as_fn_error\(.*Could not find backtrace() support\)/echo\1/" configure
wl-showstatus configure &&
 # mkdir -p m4 &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 #PATH=$MINGWPREFIX/python/Scripts:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared --enable-pcre-jit --with-ncurses --with-ncursesw &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared --enable-pcre-jit --with-ncurses --with-ncursesw --with-sphinx-build=$MINGWPREFIX/python/Scripts/sphinx-build.exe --with-rst2man=$MINGWPREFIX/python/Scripts/rst2man.py --with-rst2html=$MINGWPREFIX/python/Scripts/rst2html.py PYTHON=$PYDIR/python.exe CFLAGS="-I$(pwd)/winfix" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared --enable-pcre-jit --with-ncurses --with-ncursesw --with-sphinx-build=$MINGWPREFIX/python/Scripts/sphinx-build.exe --with-rst2man=$MINGWPREFIX/python/Scripts/rst2man.py --with-rst2html=$MINGWPREFIX/python/Scripts/rst2html.py PYTHON=$PYDIR/python.exe CFLAGS="-I$(pwd)/winfix -I$MINGWPREFIX/include/fnmatch" LDFLAGS="-Wl,--as-needed -lfnmatch" &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK && ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



