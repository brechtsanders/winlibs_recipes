export NAME="PackageKit"
export STATUS=
export URL=http://www.packagekit.org/
export BASENAME=packagekit
export DESCRIPTION="PackageKit is a system designed to make installing and updating software on your computer easier. The primary design goal is to unify all the software graphical tools used in different distributions, and use some of the latest technology like PolicyKit to make the process suck less."
export CATEGORY=
export TYPE=library
#export VERSION=0.6.14
#export VERSIONDATE=20110601
#export VERSION=0.6.16
#export VERSIONDATE=20110713
#export VERSION=0.6.17
#export VERSIONDATE=20110801
#export VERSION=0.6.18
#export VERSIONDATE=20110905
#export VERSION=0.6.19
#export VERSIONDATE=20111004
#export VERSION=0.6.20
#export VERSIONDATE=20111107
#export VERSION=0.6.21
#export VERSIONDATE=20111205
#export VERSION=0.6.22
#export VERSIONDATE=20120412
####lib/packagekit-glib2/pk-console-shared.c:24:21: error: termios.h: No such file or directory
#export VERSION=0.7.0
#export VERSIONDATE=20110906
#export VERSION=0.7.1
#export VERSIONDATE=20111111
#export VERSION=0.7.2
#export VERSIONDATE=20120118
#export VERSION=0.7.3
#export VERSIONDATE=20120301
#export VERSION=0.7.4
#export VERSIONDATE=20120412
#export VERSION=0.7.5
#export VERSIONDATE=20120626
#export VERSION=0.8.1
#export VERSIONDATE=20120626
#export VERSION=0.8.2
#export VERSIONDATE=20120716
#export VERSION=0.8.3
#export VERSIONDATE=20120806
#export VERSION=0.8.4
#export VERSIONDATE=20121001
#export VERSION=0.8.5
#export VERSIONDATE=20121029
#export VERSION=0.8.6
#export VERSIONDATE=20121126
#export VERSION=0.8.7
#export VERSIONDATE=20130118
#export VERSION=0.8.8
#export VERSIONDATE=20130508
####checking whether /E/Prog/Python26-32/python.exe version >= 2.7... configure: error: too old
#export VERSION=0.8.9
#export VERSIONDATE=20130520
#export VERSION=0.8.10
#export VERSIONDATE=20130726
#export VERSION=0.8.11
#export VERSIONDATE=20130903
#export VERSION=0.8.12
#export VERSIONDATE=20131018
####lib/packagekit-glib2/pk-console-shared.c:24:21: fatal error: termios.h: No such file or directory
#export VERSION=0.8.13
#export VERSIONDATE=20131122
#export VERSION=0.8.14
#export VERSIONDATE=20131202
#export VERSION=0.8.15
#export VERSIONDATE=20131218
#export VERSION=0.8.16
#export VERSIONDATE=20140120
#export VERSION=1.1.6
#export VERSIONDATE=20170906
#export VERSION=1.1.7
#export VERSIONDATE=20170911
#export VERSION=1.1.8
#export VERSIONDATE=20180220
#export VERSION=1.1.9
#export VERSIONDATE=20180306
#export VERSION=1.1.10
#export VERSIONDATE=20180424
#export VERSION=1.1.11
#export VERSIONDATE=20180925
#export VERSION=1.1.12
#export VERSIONDATE=20181128
#export VERSION=1.1.13
#export VERSIONDATE=20200108
#export VERSION=1.2.0
#export VERSIONDATE=20200504
#export VERSION=1.2.1
#export VERSIONDATE=20200907
#export VERSION=1.2.2
#export VERSIONDATE=20201102
#export VERSION=1.2.3
#export VERSIONDATE=20210322
####No package 'libsystemd-journal' found
#export VERSION=1.2.4
#export VERSIONDATE=20210730
#export VERSION=1.2.5
#export VERSIONDATE=20220217
#export VERSION=1.2.6
#export VERSIONDATE=20221202
#export VERSION=1.2.7
#export VERSIONDATE=20230827
#export VERSION=1.2.8
#export VERSIONDATE=20231109
#export VERSION=1.3.0
#export VERSIONDATE=20240617
export VERSION=1.3.1
export VERSIONDATE=20250423
####lib/packagekit-glib2/pk-console-shared.c:25:10: fatal error: termios.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.packagekit.org/releases/ PackageKit-"
#export DOWNLOADURL="http://www.packagekit.org/releases/ PackageKit-"
export DOWNLOADURL="https://www.freedesktop.org/software/PackageKit/releases/ PackageKit-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.packagekit.org/releases/PackageKit-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://www.packagekit.org/releases/PackageKit-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://www.freedesktop.org/software/PackageKit/releases/PackageKit-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/PackageKit-$VERSION.tar.bz2
xz -d -c $TARBALLDIR/$BASENAME/PackageKit-$VERSION.tar.xz | tar x --force-local -f -
cd PackageKit-$VERSION
# fix missing glib-unix.h
for F in $(grep -l glib-unix.h $(find -name '*.c')); do
 mv $F $F.bak &&
 sed -e "s/glib-unix\.h/glib.h/" $F.bak > $F
done
# fix missing termios.h in lib/packagekit-glib2/pk-console-shared.c
patch -ulbf lib/packagekit-glib2/pk-console-shared.c << EOF
@@ -23,3 +23,5 @@

+#ifndef WIN32
 #include <termios.h>
+#endif
 #include <unistd.h>
@@ -81,2 +83,3 @@
        GString *str = NULL;
+#ifndef WIN32
        struct termios ts, ots;
@@ -89,2 +92,5 @@
        }
+#else
+       tty_name = "CON:";
+#endif

@@ -101,2 +107,3 @@

+#ifndef WIN32
        /* taken from polkitagenttextlistener.c */
@@ -106,2 +113,3 @@
        tcsetattr (fileno (tty), TCSAFLUSH, &ts);
+#endif

@@ -122,3 +130,5 @@
        }
+#ifndef WIN32
        tcsetattr (fileno (tty), TCSAFLUSH, &ots);
+#endif
        putc ('\n', tty);
EOF
# fix missing realpath and LC_MESSAGES in lib/packagekit-glib2/pk-client.c
mv lib/packagekit-glib2/pk-client.c lib/packagekit-glib2/pk-client.c.bak
echo "#include <libintl.h>" > lib/packagekit-glib2/pk-client.c
echo "#define realpath(N,R) _fullpath((R),(N),_MAX_PATH)" >> lib/packagekit-glib2/pk-client.c
cat lib/packagekit-glib2/pk-client.c.bak >> lib/packagekit-glib2/pk-client.c
# fix lib/packagekit-glib2/pk-client-helper.c
patch -ulbf lib/packagekit-glib2/pk-client-helper.c << EOF
@@ -51,5 +51,7 @@
 #include <glib-object.h>
 #include <gio/gio.h>
+#ifndef _WIN32
 #include <gio/gunixsocketaddress.h>
+#endif

 #include <packagekit-glib2/pk-client-helper.h>
@@ -100,4 +102,7 @@
 pk_client_helper_stop (PkClientHelper *client_helper, GError **error)
 {
+#ifdef _WIN32
+       return FALSE;
+#else
        PkClientHelperPrivate *priv = client_helper->priv;
        gboolean ret = FALSE;
@@ -152,4 +157,5 @@
 out:
        return ret;
+#endif
 }

@@ -422,4 +428,7 @@
                        GError **error)
 {
+#ifdef _WIN32
+       return FALSE;
+#else
        guint i;
        gboolean ret = FALSE;
@@ -503,4 +512,5 @@
                                     (GIOFunc) pk_client_helper_accept_connection_cb, client_helper, NULL);
        return TRUE;
+#endif
 }

EOF
# fix missing sys/utsname.h in lib/packagekit-glib2/pk-common.c
patch -ulbf lib/packagekit-glib2/pk-common.c << EOF
@@ -33,5 +33,7 @@

 #include <string.h>
+#ifndef _WIN32
 #include <sys/utsname.h>
+#endif

 #include <glib.h>
@@ -215,4 +217,9 @@
 pk_get_distro_id_machine_type (void)
 {
+#if defined(_WIN64)
+       return g_strdup ("x86_64");
+#elif define(_WIN32)
+       return g_strdup ("x86");
+#else
        gint retval;
        struct utsname buf;
@@ -222,4 +229,5 @@
                return g_strdup ("unknown");
        return g_strdup (buf.machine);
+#endif
 }

EOF
# fix lib/packagekit-glib2/pk-spawn-polkit-agent.c
patch -ulbf lib/packagekit-glib2/pk-spawn-polkit-agent.c << EOF
@@ -33,6 +33,8 @@
 #include <errno.h>
 #include <inttypes.h>
+#ifndef _WIN32
 #include <sys/poll.h>
 #include <sys/wait.h>
+#endif
 #include <glib.h>

@@ -48,4 +50,7 @@
 static int
 fork_agent (pid_t *pid, const char *path, ...) {
+#ifdef _WIN32
+       return -1;
+#else
        pid_t parent_pid, n_agent_pid;
        int fd;
@@ -130,4 +135,5 @@
        execv (path, l);
        _exit (EXIT_FAILURE);
+#endif
 }

@@ -161,4 +167,7 @@
 static int
 fd_wait_for_event (int fd, int event, uint64_t t) {
+#ifdef _WIN32
+       return -1;
+#else
        struct pollfd pollfd;
        int r;
@@ -176,8 +185,12 @@

        return pollfd.revents;
+#endif
 }

 static int
 wait_for_terminate (pid_t pid) {
+#ifdef _WIN32
+       return -1;
+#else
         int status;
        g_assert (pid >= 1);
@@ -191,8 +204,12 @@
                return 0;
        }
+#endif
 }

 int
 pk_polkit_agent_open (void) {
+#ifdef _WIN32
+       return -1;
+#else
        int r;
        int pipe_fd[2];
@@ -229,8 +246,12 @@

        return r;
+#endif
 }

 void
 pk_polkit_agent_close (void) {
+#ifdef _WIN32
+       return -1;
+#else

        if (agent_pid <= 0)
@@ -242,3 +263,4 @@
        wait_for_terminate (agent_pid);
        agent_pid = 0;
+#endif
 }

EOF
# fix missing symlink in lib/packagekit-glib2/pk-offline-private.c
mv lib/packagekit-glib2/pk-offline-private.c lib/packagekit-glib2/pk-offline-private.c.bak &&
sed -e "s/symlink *(.*);/-1;\/\/&/" lib/packagekit-glib2/pk-offline-private.c.bak > lib/packagekit-glib2/pk-offline-private.c
# make dummy lib/packagekit-glib2/pk-socket-example.c
mv lib/packagekit-glib2/pk-socket-example.c lib/packagekit-glib2/pk-socket-example.c.bak &&
echo "int main() { return 0; }" > lib/packagekit-glib2/pk-socket-example.c
# fix missing sys/wait.h
mkdir -p winfix/sys
touch winfix/sys/wait.h
# fix problem detecting GNU gettext tools on 64-bit
if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 mv configure configure.bak
 sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
fi
#####You must have XML::Parser installed to run /bin/intltool-merge
##$PERLDIR/bin/perl.exe $PERLDIR/bin/cpan install XML::Parser
# fix dependancy on gio-unix
mv configure configure.bak
sed -e "s/gio-unix/gio-windows/g" configure.bak > configure
wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin:$PERLDIR/../c/bin PERL="$PERLDIR/bin/perl.exe" PYTHON=$PYDIR/python.exe INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-systemd --disable-bash-completion --enable-introspection=no --with-security-framework=dummy --with-default-backend=dummy QTCORE_CFLAGS="-I$MINGWPREFIX/qt/include" QTCORE_LIBS="-L$MINGWPREFIX/qt/lib" QTDBUS_CFLAGS="-I$MINGWPREFIX/qt/include" QTDBUS_LIBS="-L$MINGWPREFIX/qt/lib" QTSQL_CFLAGS="-I$MINGWPREFIX/qt/include" QTSQL_LIBS="-L$MINGWPREFIX/qt/lib" QTXML_CFLAGS="-I$MINGWPREFIX/qt/include" QTXML_LIBS="-L$MINGWPREFIX/qt/lib" QTGUI_CFLAGS="-I$MINGWPREFIX/qt/include" QTGUI_LIBS="-L$MINGWPREFIX/qt/lib" CFLAGS="-I$(pwd)/winfix" CXXFLAGS="-I$(pwd)/winfix" &&
 PATH=$MINGWPREFIX/qt/bin:$PERLDIR/../c/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ PERL="$PERLDIR/bin/perl.exe" PYTHON=$PYDIR/python.exe INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-systemd --disable-bash-completion --enable-introspection=no --with-security-framework=dummy --with-default-backend=dummy QTCORE_CFLAGS="-I$MINGWPREFIX/qt/include" QTCORE_LIBS="-L$MINGWPREFIX/qt/lib" QTDBUS_CFLAGS="-I$MINGWPREFIX/qt/include" QTDBUS_LIBS="-L$MINGWPREFIX/qt/lib" QTSQL_CFLAGS="-I$MINGWPREFIX/qt/include" QTSQL_LIBS="-L$MINGWPREFIX/qt/lib" QTXML_CFLAGS="-I$MINGWPREFIX/qt/include" QTXML_LIBS="-L$MINGWPREFIX/qt/lib" QTGUI_CFLAGS="-I$MINGWPREFIX/qt/include" QTGUI_LIBS="-L$MINGWPREFIX/qt/lib" CFLAGS="-I$(pwd)/winfix" CXXFLAGS="-I$(pwd)/winfix" &&
 wl-showstatus build-install &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 make install-strip &&
 #make install-strip INTLTOOL_MERGE="$PERLDIR/bin/perl.exe -I$PERLDIR/vendor/lib $MINGWPREFIX/bin/intltool-merge" &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf PackageKit-$VERSION



#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS
## fix missing gio-unix
#sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#mkdir -p build_both &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dsystemd=false -Dbash_completion=false -Doffline_update=false -Dgobject_introspection=false -Dpython_backend=false -Dman_pages=false -Dgtk_doc=false -Ddaemon_tests=false . build_both &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## fix Python path issues in meson_exe
# #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_both install &&
#    echo OK && find . -name '*.a'
