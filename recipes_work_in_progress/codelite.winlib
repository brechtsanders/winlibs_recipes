export NAME="CodeLite"
export STATUS=
export URL=http://codelite.org/
export BASENAME=codelite
export DESCRIPTION="an Open Source, cross platform IDE for C/C++"
export CATEGORY=development
export TYPE=application
#export VERSION=5.3
#export VERSIONDATE=20131112
#export VERSION=5.4
#export VERSIONDATE=20140114
#export VERSION=6.0
#export VERSIONDATE=20140603
#export VERSION=6.0.1
#export VERSIONDATE=20140625
#export VERSION=7.0
#export VERSIONDATE=20150329
#export VERSION=8.0
#export VERSIONDATE=20150509
#export VERSION=8.0-1
#export VERSIONDATE=20150510
#export VERSION=8.1
#export VERSIONDATE=20150801
#export VERSION=9.0
#export VERSIONDATE=20151011
#export VERSION=9.1
#export VERSIONDATE=20160131
#export VERSION=9.2
#export VERSIONDATE=20160711
#export VERSION=10.0
#export VERSIONDATE=20170103
#export VERSION=11.0
#export VERSIONDATE=20171010
#export VERSION=12.0
#export VERSIONDATE=20180227
#export VERSION=12.0.10
#export VERSIONDATE=20181114
#export VERSION=13.0
#export VERSIONDATE=20190523
#export VERSION=14.0
#export VERSIONDATE=20200226
#export VERSION=14.0.2
#export VERSIONDATE=20200720
#export VERSION=15.0
#export VERSIONDATE=20210105
#export VERSION=15.0.1
#export VERSIONDATE=20210305
#export VERSION=15.0.2
#export VERSIONDATE=20210413
#export VERSION=15.0.3
#export VERSIONDATE=20210502
#export VERSION=15.0.4
#export VERSIONDATE=20210616
#export VERSION=15.0.5
#export VERSIONDATE=20210707
#export VERSION=15.0.6
#export VERSIONDATE=20210802
export VERSION=16.0.0
export VERSIONDATE=20220428
####/custombuilt/bin/wx-config: /custombuilt/bin/wx-config: cannot execute binary file
wl-showstatus --package-version
export DEPENDENCIES=wxwidgets
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=wx-config-win,cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://sourceforge.net/projects/codelite/files/Releases/ codelite- -gtk.src.tar.gz"
export DOWNLOADURL="https://github.com/eranif/codelite/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/codelite/Releases/codelite-$VERSION/codelite-$VERSION-gtk.src.tar.gz
#export DOWNLOADSOURCEURL=https://codeload.github.com/eranif/codelite/tar.gz/$VERSION
export DOWNLOADSOURCEURL=https://github.com/eranif/codelite/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSIONtar.gz $TARBALLDIR/$BASENAME/codelite-6.0.tar.gz
#mv -f $TARBALLDIR/$BASENAME/$VERSION $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#mv -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/codelite-$VERSION-gtk.src.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/codelite-6.0.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
## create dummy wx-config which supports --version and uses UNIX-style paths (must be a shell script because CMake invokes it with sh)
#cat > wx-config.sh << EOF
##!/bin/sh
#wx-config.exe --compiler=gcc \$* | grep -v "wx-config Error:" | sed -e "s?\\([A-Z]\\):\\\\\\\\?/\\1/?g; s?\\\\\\\\?/?g"
##wx-config.exe --debug=no --unicode=yes --static=no --compiler=gcc \$* | grep -v "wx-config Error:" | sed -e "s?\\([A-Z]\\):\\\\\\\\?/\\1/?g; s?\\\\\\\\?/?g"
##wx-config.exe --wxcfg=gcc_dll/mswu \$* | grep -v "wx-config Error:" | sed -e "s?\\([A-Z]\\):\\\\\\\\?/\\1/?g; s?\\\\\\\\?/?g"
#EOF
sed -i.bak -e "s/sh \(\${WX_TOOL}\)/\1/" CMakeLists.txt
## fix CMakeLists.txt (version >= 14.0.2)
#patch -ulbf CMakeLists.txt << EOF
#@@ -134,3 +134,3 @@
# if (UNIX OR MINGW)
#-    execute_process(COMMAND which \${CL_WX_CONFIG} OUTPUT_VARIABLE WX_TOOL OUTPUT_STRIP_TRAILING_WHITESPACE)
#+    set(WX_TOOL "$(which wx-config.exe)")
#     if (NOT WX_TOOL)
#@@ -140,3 +140,3 @@
#     else()
#-        execute_process(COMMAND sh \${WX_TOOL} --version OUTPUT_VARIABLE WX_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
#+        execute_process(COMMAND "\${WX_TOOL} --version" OUTPUT_VARIABLE WX_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
#         string(SUBSTRING "\${WX_VERSION}" "0" "1" wxMAJOR_VERSION)
#@@ -150,3 +150,3 @@
#         if (MINGW)
#-          execute_process(COMMAND sh \${WX_TOOL} --debug=no --rescomp OUTPUT_VARIABLE WX_RC_FLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
#+          execute_process(COMMAND "\${WX_TOOL} --debug=no --rescomp" OUTPUT_VARIABLE WX_RC_FLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
#           string(REGEX REPLACE "windres" "" WX_RC_FLAGS \${WX_RC_FLAGS})
#@@ -160,3 +160,3 @@
#         # Is the wx we are using built on gtk2 or 3?
#-        execute_process(COMMAND \${WX_TOOL} --selected_config OUTPUT_VARIABLE WX_GTK_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
#+        execute_process(COMMAND "\${WX_TOOL} --selected_config" OUTPUT_VARIABLE WX_GTK_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
#         string(SUBSTRING "\${WX_GTK_VERSION}" "3" "1" GTK_VERSION)
#EOF
#-DWITH_WXC=1
# fix cmake/Modules/UtilsHelper.cmake (version >= 15.0.5)
patch -ulbf cmake/Modules/UtilsHelper.cmake << EOF
@@ -57,3 +57,3 @@
                     OUTPUT_VARIABLE _OS_NAME OUTPUT_STRIP_TRAILING_WHITESPACE)
-    message(FATAL_ERROR "\${_OS_NAME}")
+    #message(FATAL_ERROR "\${_OS_NAME}")
 endif()
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DPREFIX:PATH=$INSTALLPREFIX -DWITH_PCH=0 -DMAKE_DEB=0 -DCLANG_INCLUDE:STRING=" " -DwxWidgets_CONFIG_EXECUTABLE:FILEPATH="`pwd`/wx-config.sh" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DwxWidgets_USE_DEBUG:BOOL=OFF -DwxWidgets_USE_STATIC:BOOL=OFF -DwxWidgets_USE_UNICODE:BOOL=ON -DLIBSSH_LIB:PATH="-L$MINGWPREFIX/lib -llibssh" -S. -Bbuild_win &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DPREFIX:PATH=$INSTALLPREFIX -DENABLE_CLANG=0 -DWITH_PCH=0 -DMAKE_DEB=0 -DwxWidgets_CONFIG_EXECUTABLE:FILEPATH="$(pwd)/wx-config.sh" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DwxWidgets_USE_DEBUG:BOOL=OFF -DwxWidgets_USE_STATIC:BOOL=OFF -DwxWidgets_USE_UNICODE:BOOL=ON -DLIBSSH_LIB:PATH="-L$MINGWPREFIX/lib -llibssh" -S. -Bbuild_win &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DPREFIX:PATH=$INSTALLPREFIX -DENABLE_CLANG=0 -DWITH_PCH=0 -DMAKE_DEB=0 -DCL_WX_CONFIG:FILEPATH="$(pwd)/wx-config.sh" -DwxWidgets_CONFIG_EXECUTABLE:FILEPATH="$(pwd)/wx-config.sh" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DwxWidgets_USE_DEBUG:BOOL=OFF -DwxWidgets_USE_STATIC:BOOL=OFF -DwxWidgets_USE_UNICODE:BOOL=ON -DLIBSSH_LIB:PATH="-L$MINGWPREFIX/lib -llibssh" -S. -Bbuild_win &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DPREFIX:PATH=$INSTALLPREFIX -DENABLE_CLANG=0 -DWITH_PCH=0 -DMAKE_DEB=0 -DWX_TOOL:FILEPATH="$(pwd)/wx-config.sh" -DCL_WX_CONFIG:FILEPATH="$(pwd)/wx-config.sh" -DwxWidgets_CONFIG_EXECUTABLE:FILEPATH="$(pwd)/wx-config.sh" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DwxWidgets_USE_DEBUG:BOOL=OFF -DwxWidgets_USE_STATIC:BOOL=OFF -DwxWidgets_USE_UNICODE:BOOL=ON -DLIBSSH_LIB:PATH="-L$MINGWPREFIX/lib -llibssh" -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DPREFIX:PATH=$INSTALLPREFIX -DENABLE_CLANG=0 -DWITH_PCH=0 -DMAKE_DEB=0 -DWITH_WXPATH=$MINGWPREFIX/wx -DCL_WX_CONFIG:FILEPATH="/bin/sh $(pwd)/wx-config.sh" -DWX_TOOL:FILEPATH="/bin/sh $(pwd)/wx-config.sh" -DwxWidgets_CONFIG_EXECUTABLE:FILEPATH="/bin/sh $(pwd)/wx-config.sh" -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DwxWidgets_USE_DEBUG:BOOL=OFF -DwxWidgets_USE_STATIC:BOOL=OFF -DwxWidgets_USE_UNICODE:BOOL=ON -DLIBSSH_LIB:PATH="-L$MINGWPREFIX/lib -llibssh" -S. -Bbuild_win &&

 cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DCL_PREFIX:PATH=$INSTALLPREFIX -DENABLE_CLANG=0 -DWITH_PCH=0 -DMAKE_DEB=0 -DWITH_WXPATH=$MINGWPREFIX/wx -DWITH_WX_CONFIG:FILEPATH=wx-config.exe -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DwxWidgets_USE_DEBUG:BOOL=OFF -DwxWidgets_USE_STATIC:BOOL=OFF -DwxWidgets_USE_UNICODE:BOOL=ON -DLIBSSH_LIB:PATH="-L$MINGWPREFIX/lib -llibssh" -S. -Bbuild_win &&
 #WXCFG=gcc_dll/mswu cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DCL_PREFIX:PATH=$INSTALLPREFIX -DENABLE_CLANG=0 -DWITH_PCH=0 -DMAKE_DEB=0 -DWITH_WXPATH=$MINGWPREFIX/wx -DWITH_WX_CONFIG:FILEPATH=wx-config.exe -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DwxWidgets_USE_DEBUG:BOOL=OFF -DwxWidgets_USE_STATIC:BOOL=OFF -DwxWidgets_USE_UNICODE:BOOL=ON -DLIBSSH_LIB:PATH="-L$MINGWPREFIX/lib -llibssh" -S. -Bbuild_win &&

 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DPREFIX:PATH=$INSTALLPREFIX -DENABLE_CLANG=0 -DWITH_PCH=0 -DMAKE_DEB=0 -DWITH_WXPATH=$MINGWPREFIX/wx -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DwxWidgets_CONFIG_EXECUTABLE:FILEPATH="$(pwd)/wx-config.sh" -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DPREFIX:PATH=$INSTALLPREFIX -DCL_PREFIX:PATH=$INSTALLPREFIX -DENABLE_CLANG=0 -DWITH_PCH=0 -DMAKE_DEB=0 -DWITH_WXPATH=$MINGWPREFIX/wx -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DwxWidgets_CONFIG_EXECUTABLE:FILEPATH="$(which wx-config.exe)" -DCL_WX_CONFIG:FILEPATH="$(which wx-config.exe)" -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DPREFIX:PATH=$INSTALLPREFIX -DCL_PREFIX:PATH=$INSTALLPREFIX -DENABLE_CLANG=0 -DWITH_PCH=0 -DMAKE_DEB=0 -DWITH_WXPATH=$MINGWPREFIX/wx -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DCL_WX_CONFIG:FILEPATH="wx-config.exe" -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DIRECTORY:PATH=$(pwd)/build -DPREFIX:PATH=$INSTALLPREFIX -DCL_PREFIX:PATH=$INSTALLPREFIX -DENABLE_CLANG=0 -DWITH_PCH=0 -DMAKE_DEB=0 -DWITH_WXPATH=$MINGWPREFIX/wx -DwxWidgets_wxrc_EXECUTABLE:FILEPATH="$MINGWPREFIX/wx/bin/gcc_msw/wxrc.exe" -DDWITH_WX_CONFIG:FILEPATH="$(cygpath -m $(which /d/Prog/winlibs64-9.2.0/custombuilt/bin/wx-config.exe))" -S. -Bbuild_win &&
 #  -DwxWidgets_USE_DEBUG:BOOL=OFF -DwxWidgets_USE_STATIC:BOOL=OFF -DwxWidgets_USE_UNICODE:BOOL=ON -DLIBSSH_LIB:PATH="-L$MINGWPREFIX/lib -llibssh" . &&
 #-DCL_PREFIX
 
 #PATH=$(dirname $(pwd)):$PATH cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DWITH_WX_CONFIG:FILEPATH=wx-config.sh -DwxWidgets_INCLUDE_DIRS:PATH=$MINGWPREFIX/wx/include -DwxWidgets_LIBRARIES:PATH=$MINGWPREFIX/wx/lib -S. -Bbuild_win

 wl-showstatus build-install &&
 for F in build_win/sdk/*/CMakeFiles/*.dir/flags.make; do
  sed -i.orig -e "s/-mthreads;-Wno-ctor-dtor-privacy;-pipe;-fmessage-length=0//" $F
 done &&
 ( make -Cbuild_win install/strip || -Cbuild_win make install ) &&
    echo OK
#-Wl,--as-needed -lshlwapi
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



