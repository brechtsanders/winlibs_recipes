export NAME="LLVM test suite"
export STATUS=
export URL=https://llvm.org/docs/TestSuiteGuide.html
export BASENAME=llvm-test-suite
export DESCRIPTION="The lld project aims to to be the built-in linker for clang/llvm."
export CATEGORY=development
export TYPE=application
export VERSION=11.0.0
export VERSIONDATE=20201012
#export VERSION=12.0.0
#export VERSIONDATE=20210419
wl-showstatus --package-version
export DEPENDENCIES=llvm
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.TXT
export LICENSETYPE=
export DOWNLOADURL="https://github.com/llvm/llvm-project/releases test-suite- .src.tar.xz"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/llvm/llvm-project/releases/download/llvmorg-$VERSION/test-suite-$VERSION.src.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJh $TARBALLDIR/$BASENAME/test-suite-$VERSION.src.tar.xz
cd test-suite-$VERSION.src
mkdir -p build &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/llvm -DCMAKE_BUILD_TYPE:STRING=Release -DLLVM_ENABLE_EH:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "ON"; else echo "OFF"; fi) -DLLVM_ENABLE_RTTI:BOOL=ON -DLLVM_DIR:PATH=$MINGWPREFIX/share/llvm/lib/cmake/llvm -DLLVM_CONFIG_PATH:FILEPATH=$MINGWPREFIX/share/llvm/bin/llvm-config.exe -DPYTHON_EXECUTABLE:PATH=$PYDIR/python.exe -DPACKAGE_VERSION=$VERSION -DLLD_BUILD_TOOLS:BOOL=ON -S. -Bbuild &&
 wl-showstatus build-install &&
 ninja -Cbuild install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf test-suite-$VERSION.src
####Superseded by llvm-project all-in-one build



