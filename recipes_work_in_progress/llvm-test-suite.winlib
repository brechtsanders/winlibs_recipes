#export NAME="LLVM test suite"
#export STATUS=
#export URL=https://llvm.org/docs/TestSuiteGuide.html
#export BASENAME=llvm-test-suite
#export DESCRIPTION="The lld project aims to to be the built-in linker for clang/llvm."
#export CATEGORY=development
#export TYPE=application
#export VERSION=11.0.0
#export VERSIONDATE=20201012
##export VERSION=12.0.0
##export VERSIONDATE=20210419
#wl-showstatus --package-version
#export DEPENDENCIES=llvm
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.TXT
#export LICENSETYPE=
#export DOWNLOADURL="https://github.com/llvm/llvm-project/releases test-suite- .src.tar.xz"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/llvm/llvm-project/releases/download/llvmorg-$VERSION/test-suite-$VERSION.src.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xJh --force-local -f $TARBALLDIR/$BASENAME/test-suite-$VERSION.src.tar.xz
#cd test-suite-$VERSION.src
#mkdir -p build &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/llvm -DCMAKE_BUILD_TYPE:STRING=Release -DLLVM_ENABLE_EH:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "ON"; else echo "OFF"; fi) -DLLVM_ENABLE_RTTI:BOOL=ON -DLLVM_DIR:PATH=$MINGWPREFIX/share/llvm/lib/cmake/llvm -DLLVM_CONFIG_PATH:FILEPATH=$MINGWPREFIX/share/llvm/bin/llvm-config.exe -DPYTHON_EXECUTABLE:PATH=$PYDIR/python.exe -DPACKAGE_VERSION=$VERSION -DLLD_BUILD_TOOLS:BOOL=ON -S. -Bbuild &&
# wl-showstatus build-install &&
# ninja -Cbuild install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf test-suite-$VERSION.src
#####Superseded by llvm-project all-in-one build



export NAME="LLVM test-suite"
export STATUS=
export URL=https://llvm.org/
export BASENAME=llvm-test-suite
export DESCRIPTION="The LLVM Compiler Infrastructure - test-suite"
export CATEGORY=development
export TYPE=application
#export VERSION=15.0.0
#export VERSIONDATE=20230220
#export VERSION=16.0.0
#export VERSIONDATE=20230318
#export VERSION=16.0.6
#export VERSIONDATE=20230725
#export VERSION=17.0.1
#export VERSIONDATE=20230919
#export VERSION=17.0.2
#export VERSIONDATE=20231013
export VERSION=17.0.3
export VERSIONDATE=20231021
wl-showstatus --package-version
export DEPENDENCIES=llvm-core,llvm-libunwind,zlib,zstd,libxml2,libffi,libcurl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=doxygen
export LICENSEFILE=LICENSE.TXT
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/llvm/llvm-project/releases/ test-suite-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/llvm/llvm-project/releases/download/llvmorg-$(echo $VERSION|sed -e "s/rc/-&/")/test-suite-$VERSION.src.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/test-suite-$VERSION.src.tar.xz
cd test-suite-$VERSION.src
## fix CMakeLists.txt (version >= 16.0.0rc2)
#sed -i.bak -e "s?\(set(LLVM_COMMON_CMAKE_UTILS \)\${CMAKE_CURRENT_SOURCE_DIR}/../cmake?\1$(cygpath -m $MINGWPREFIX/share/llvm-split/share/cmake)?" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 PATH=$MINGWPREFIX/share/llvm-split/bin:$PATH \
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/llvm-split -DCMAKE_BUILD_TYPE:STRING=MinSizeRel \
  -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/share/llvm-split/share/cmake/Modules \
  -DLLVM_DIR:PATH=$MINGWPREFIX/share/llvm-split/lib/cmake/llvm \
  -DLLVM_MAIN_SRC_DIR:PATH=$MINGWPREFIX/share/llvm-split/include \
  -DCMAKE_SYSTEM_NAME:STRING=Windows \
  -DBUILD_SHARED_LIBS:BOOL=ON \
  -DPython_EXECUTABLE:FILEPATH=$MINGWPREFIX/share/python/bin/python.exe \
  -S. -Bbuild_win &&
 # -DHAVE_STEADY_CLOCK=0 \
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf test-suite-$VERSION.src



