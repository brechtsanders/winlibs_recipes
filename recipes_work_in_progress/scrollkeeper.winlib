export NAME="scrollkeeper"
export STATUS=
export URL=http://scrollkeeper.sourceforge.net/
export BASENAME=scrollkeeper
export DESCRIPTION="ScrollKeeper is a cataloging system for documentation on open systems. It manages documentation metadata (as specified by the Open Source Metadata Framework(OMF)) and provides a simple API to allow help browsers to find, sort, and search the document catalog. It will also be able to communicate with catalog servers on the Net to search for documents which are not on the local system."
export CATEGORY=documentation
export TYPE=application
export VERSION=0.3.14
export VERSIONDATE=
####buildtools/separate.c:220: undefined reference to `_check_ptr'
wl-showstatus --package-version
#export DEPENDANCIES=docbook,gettext,libiconv,libxml2,libxslt,plibc
export DEPENDANCIES=docbook,gettext,libiconv,libxml2,libxslt
export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=pexports
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/scrollkeeper/files/"
export DOWNLOADURL="http://sourceforge.net/projects/scrollkeeper/files/scrollkeeper/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/scrollkeeper/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p sys
touch sys/ioctl.h
touch pwd.h
echo "#include <winsock2.h>" > sys/socket.h
# fix libuuid/gen_uuid.c
patch -ulbf libuuid/gen_uuid.c << EOF
--- libuuid/gen_uuid.c  2003-06-27 15:03:46 +0200
+++ libuuid/gen_uuid.c  2012-08-08 09:58:06 +0200
@@ -48,2 +48,3 @@

+#ifndef _WIN32
        if (fd == -2) {
@@ -54,2 +55,4 @@
        }
+       srand(time(NULL));
+#endif
        /* Crank the random number generator a few times */
EOF
# fix libuuid/uuid.h
patch -ulbf libuuid/uuid.h << EOF
--- libuuid/uuid.h  2001-05-15 19:28:28 +0200
+++ libuuid/uuid.h  2012-08-08 09:58:58 +0200
@@ -15,2 +15,5 @@

+#if defined(_WIN32) && defined(uuid_t)
+#undef uuid_t
+#endif
 typedef unsigned char uuid_t[16];
EOF
# fix libs/database.c
patch -ulbf libs/database.c << EOF
--- libs/database.c  2002-06-02 08:03:10 +0200
+++ libs/database.c  2012-08-08 10:11:00 +0200
@@ -27,4 +27,8 @@
 #include <dirent.h>
 #include <scrollkeeper.h>
+#ifdef _WIN32
+#define lstat stat
+#define strtok_r(_s,_sep,_lasts) (*(_lasts)=strtok((_s),(_sep)))
+#endif

 #define PATHLEN                256
@@ -37,5 +41,9 @@
 static int sk_mkdir(char *path, mode_t options, char outputprefs)
 {
+#ifndef _WIN32
     if (mkdir(path, options) != 0) {
+#else
+    if (mkdir(path) != 0) {
+#endif
         sk_message(outputprefs, SKOUT_DEFAULT, SKOUT_QUIET, "",
                   _("Could not create directory %s : %s\n"),path,strerror(errno));
@@ -105,6 +113,10 @@
     dir = opendir(scrollkeeper_dir);
     if (dir == NULL) {
+#ifndef _WIN32
        if (sk_mkdir_with_parents(scrollkeeper_dir, S_IRUSR|S_IWUSR|S_IRGRP|
                             S_IROTH|S_IXUSR|S_IXGRP|S_IXOTH, outputprefs) != 0) {
+#else
+       if (sk_mkdir_with_parents(scrollkeeper_dir, 0, outputprefs) != 0) {
+#endif
             return 1;
         }
@@ -143,10 +155,16 @@
         lstat(source_path, &buf);

+#ifndef _WIN32
         if (S_ISDIR(buf.st_mode)) /* copy the directory */
+#endif
        {
            char source_file[PATHLEN], target_file[PATHLEN];

            snprintf(dirname, PATHLEN, "%s/%s", scrollkeeper_dir, dir_ent->d_name);
+#ifndef _WIN32
            mkdir(dirname, S_IRUSR|S_IWUSR|S_IRGRP|S_IROTH|S_IXUSR|S_IXGRP|S_IXOTH);
+#else
+           mkdir(dirname);
+#endif

            snprintf(source_file, PATHLEN, "%s/scrollkeeper_cl.xml", source_path);
@@ -158,4 +176,5 @@
            copy_file(source_file, target_file);
        }
+#ifndef _WIN32
        else /* link the directory */
        {
@@ -172,4 +191,5 @@
            symlink(target_path, source_path);
        }
+#endif
     }

@@ -180,8 +200,16 @@

     snprintf(dirname, PATHLEN, "%s/TOC", scrollkeeper_dir);
+#ifndef _WIN32
     mkdir(dirname, S_IRUSR|S_IWUSR|S_IRGRP|S_IROTH|S_IXUSR|S_IXGRP|S_IXOTH);
+#else
+    mkdir(dirname);
+#endif

     snprintf(dirname, PATHLEN, "%s/index", scrollkeeper_dir);
+#ifndef _WIN32
     mkdir(dirname, S_IRUSR|S_IWUSR|S_IRGRP|S_IROTH|S_IXUSR|S_IXGRP|S_IXOTH);
+#else
+    mkdir(dirname);
+#endif
     return 0;
 }
EOF
# fix missing LC_MESSAGES in libs/i18n.c
mv libs/i18n.c libs/i18n.c.bak
echo "#include <libintl.h>" > libs/i18n.c
cat libs/i18n.c.bak >> libs/i18n.c
# fix buildtools/separate.c
patch -ulbf buildtools/separate.c << EOF
--- buildtools/separate.c  2002-06-20 05:39:52 +0200
+++ buildtools/separate.c  2012-08-08 10:31:56 +0200
@@ -105,4 +105,8 @@
                        sprintf(name, "%s/%s", output_dir, locale);
+#ifndef _WIN32
                        if (mkdir(name, S_IRUSR|S_IWUSR|S_IRGRP|S_IROTH|
                                        S_IXUSR|S_IXGRP|S_IXOTH) != 0) {
+#else
+                       if (mkdir(name) != 0) {
+#endif
                                if (errno != EEXIST) {
EOF
## fix missing mkstemp in libs/extract.c
#mv libs/extract.c libs/extract.c.bak
#echo "#include <plibc.h>" > libs/extract.c
#cat libs/extract.c.bak >> libs/extract.c
# fix missing strtok_r in libs/install.c
mv libs/install.c libs/install.c.bak
echo "#define strtok_r(_s,_sep,_lasts) (*(_lasts) = strtok((_s), (_sep)))" > libs/install.c
cat libs/install.c.bak >> libs/install.c
# fix cl/src/get-cl.c
patch -ulbf cl/src/get-cl.c << EOF
--- cl/src/get-cl.c  2003-12-06 02:58:42 +0100
+++ cl/src/get-cl.c  2012-08-08 15:17:36 +0200
@@ -37,3 +37,5 @@
 #include <utime.h>
+#ifndef __MINGW32__
 #include <pwd.h>
+#endif

@@ -55,3 +57,7 @@

+#ifndef __MINGW32__
        if (mkdir (dirname, 0700) != 0) {
+#else
+       if (mkdir (dirname) != 0) {
+#endif
                int e = errno;
@@ -66,3 +72,3 @@

-#ifndef __CYGWIN__
+#if !defined(__CYGWIN__) && !defined(__MINGW32__)
                        if (statbuf.st_uid != getuid ()) {
@@ -107,3 +113,5 @@
        time_t prev;
+#ifndef __MINGW32__
        struct passwd *pw;
+#endif

@@ -114,2 +122,3 @@
         * functionality. */
+#ifndef __MINGW32__
        setpwent ();
@@ -120,3 +129,5 @@
        }
-       else {
+       else
+#endif
+       {
                sk_message (outputprefs, SKOUT_DEFAULT, SKOUT_QUIET, "scrollkeeper-get-cl", _("Unable to determine username."));
@@ -170,4 +181,9 @@

+#ifndef __MINGW32__
        fd = open(filename, O_RDWR | O_CREAT | O_EXCL | O_TRUNC | O_NONBLOCK,
                  S_IRWXU | S_IRGRP | S_IROTH);
+#else
+       fd = open(filename, O_RDWR | O_CREAT | O_EXCL | O_TRUNC,
+                 S_IRWXU);
+#endif

EOF
# fix missing mkstemp in libs/extract.c
mv libs/extract.c libs/extract.c.bak
cat > libs/extract.c << EOF
#include <fcntl.h> 
#define MY_mkstemp(p) _open(_mktemp(p), _O_CREAT | _O_SHORT_LIVED | _O_EXCL) 
EOF
sed -e "s/mkstemp/MY_&/g" libs/extract.c.bak >> libs/extract.c
## fix empty def files
#cp -f $MINGWPREFIX/lib/zlib.def extract/src/.libs/zlib1.dll-def || pexports -o $MINGWPREFIX/bin/zlib1.dll > extract/src/.libs/zlib1.dll-def
#cp -f $MINGWPREFIX/lib/zlib.def libs/.libs/zlib1.dll-def || pexports -o $MINGWPREFIX/bin/zlib1.dll > libs/.libs/zlib1.dll-def
#pexports -o $MINGWPREFIX/bin/pthreadGC2.dll > libs/.libs/pthreadGC2.dll-def
#cp -f $MINGWPREFIX/lib/zlib.def buildtools/.libs/zlib1.dll-def || pexports -o $MINGWPREFIX/bin/zlib1.dll > buildtools/.libs/zlib1.dll-def
## reconfigure
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal -I $MINGWDIR/share/aclocal
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
# fix problem detecting GNU gettext tools on 64-bit
if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 mv configure configure.bak
 sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
fi
# fix configure for detection of more recent DocBook versions
cp configure configure.bak2
#sed "s/\(for vers in 4.2 4.1.2\)\(; do\)/\1 4.3 5.0\2/; s/\(DTD DocBook XML \)V/\1/" configure.bak2 > configure
sed 's/\(for vers in 4.2 4.1.2\)\(; do\)/\1 4.3 4.5 5.0\2/; s?xmlcatalog \(\$XML_CATALOG\) "\(-//OASIS//DTD DocBook XML V\$vers//EN\)"?grep "\\\2" \1?' configure.bak2 > configure
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-rpath &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-rpath --without-partial-db-dir --with-xml-catalog=$MINGWPREFIX/etc/xml/catalog &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-rpath --without-partial-db-dir --with-xml-catalog=$MINGWPREFIX/etc/xml/catalog.xml &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-xml-catalog=$MINGWPREFIX/etc/xml/catalog.xml LDFLAGS="-Wl,--as-needed -lintl -lplibc -Wl,-no-undefined" &&
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-xml-catalog=$MINGWPREFIX/etc/xml/catalog.xml LIBS="-Wl,--as-needed -lplibc -lintl -Wl,-no-undefined" &&
INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-xml-catalog=$MINGWPREFIX/etc/xml/catalog.xml LIBS="-Wl,--as-needed -lintl -Wl,-no-undefined" &&
 wl-showstatus build-install &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 # don't set DLL entry point to _DllMainCRTStartup@12
 mv libtool libtool.bak2 &&
 sed -e "s/-Wl,-e,_DllMainCRTStartup@12/-mdll/" libtool.bak2 > libtool &&
 # fix .def file generation ban DLL location
 mv libtool libtool.bak3 &&
 sed -e "s/\\\$dir\/\\\$soroot/\\\$(echo \\\$dir|sed -e 's?\/lib\\\$?\/bin?')\/\\\$soroot/" libtool.bak3 > libtool &&
 make -j1 all install-strip &&
 ## fix scrollkeeper-config to use real path (warning: won't work properly when not called via absolute path)
 #mv $INSTALLPREFIX/bin/scrollkeeper-config $INSTALLPREFIX/bin/scrollkeeper-config.bak &&
 #sed -e "s?$INSTALLPREFIX?\$(echo -n \$0|sed \"s/\\\\/[^\\\\/]*\\\\/[^\\\\/]*\$//\")?" $INSTALLPREFIX/bin/scrollkeeper-config.bak > $INSTALLPREFIX/bin/scrollkeeper-config &&
 #rm $INSTALLPREFIX/bin/scrollkeeper-config.bak &&
 # fix scrollkeeper-config to use correct path
 mv $INSTALLPREFIX/bin/scrollkeeper-config $INSTALLPREFIX/bin/scrollkeeper-config.bak &&
 sed -e "s?$INSTALLPREFIX?\$MINGWPREFIX?" $INSTALLPREFIX/bin/scrollkeeper-config.bak > $INSTALLPREFIX/bin/scrollkeeper-config &&
 rm $INSTALLPREFIX/bin/scrollkeeper-config.bak &&
    echo OK
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



#ls -l libs/.libs/*-def buildtools/.libs/*-def extract/src/.libs/*-def
#rm libs/.libs/*-def

# fix undefined references to _libintl_printf
mv libs/error.c libs/error.c.bak
cat > libs/error.c << EOF
#include <libintl.h>
#undef printf
EOF
cat libs/error.c.bak >> libs/error.c
mv libs/update-url.c libs/update-url.c.bak
cat > libs/update-url.c << EOF
#include <libintl.h>
#undef printf
EOF
cat libs/update-url.c.bak >> libs/update-url.c
mv libs/extract.c libs/extract.c.bak
cat > libs/extract.c << EOF
#include <libintl.h>
#undef printf
EOF
cat libs/extract.c.bak >> libs/extract.c
