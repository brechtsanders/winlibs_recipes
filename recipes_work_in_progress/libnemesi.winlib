export NAME="libnemesi"
export STATUS=
#export URL=http://freecode.com/projects/libnemesi
#export URL=http://cgit.lscube.org/cgit.cgi/libnemesi/
export URL=https://github.com/lscube/libnemesi
export BASENAME=libnemesi
export DESCRIPTION="Libnemesi lets you add multimedia streaming playback in your applications in a quick and straightforward way. This software is fully compliant with IETF's standards for real-time streaming of multimedia contents over the Internet. libnemesi implements RTSP (RFC2326) and RTP/RTCP (RFC3550). It supports the RTP profile for audio and video conferences with minimal control (RFC3551)."
export CATEGORY=audio
export TYPE=library
#export VERSION=0.6.4-rc2
####No package 'libnetembryo' found
export VERSION=0.6.9
export VERSIONDATE=20130421
####Requested 'libnetembryo = 0.0.9' but version of libnetembryo is 0.1.1
wl-showstatus --package-version
export DEPENDENCIES=netembryo
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://live.polito.it/files/downloads/libnemesi/"
#export DOWNLOADURL="http://www.lscube.org/files/downloads/libnemesi/"
export DOWNLOADURL="https://github.com/lscube/libnemesi/releases"
#export DOWNLOADURL="http://pkgs.fedoraproject.org/repo/pkgs/libnemesi/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.sunet.se/pub/Linux/distributions/sourcemage/grimoire/fallback/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
  wl-showstatus configure &&
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION(`gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/"`)" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# fix invalid -Wl,-z,defs
mv configure configure.bak &&
sed -e "s/-fPIC -Wl,-z,defs//" configure.bak > configure &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



