export NAME="toml2json"
export STATUS=
export URL=https://github.com/takayoshiotake/toml2json
export BASENAME=toml2json
export DESCRIPTION="C++ toml v0.5.0 parser and json writer"
export CATEGORY=fileformat
export TYPE=application
export VERSION=master
export VERSIONDATE=20240913
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
export DOWNLOADURL="https://github.com/takayoshiotake/toml2json/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/takayoshiotake/toml2json/archive/refs/heads/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix undefined int64_t in toml2json/MJToml.hpp
mv toml2json/MJToml.hpp toml2json/MJToml.hpp.bak && 
echo "#include <cstdint>" > toml2json/MJToml.hpp &&
cat toml2json/MJToml.hpp.bak >> toml2json/MJToml.hpp
wl-showstatus build &&
 touch SUCCESS &&
 for F in toml2json/*.cpp; do
  echo CXX $F
  ${CXX:-g++} -c -o $F.o $F -Itoml2json -O3 || ( rm SUCCESS; false ) || break
 done &&
 rm SUCCESS &&
 ${CXX:-g++} -s -o toml2json.exe toml2json/*.o &&
 # test (currently fails)
 toml2json.exe testdata/example.toml &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin &&
 cp -f *.exe $INSTALLPREFIX/bin/ &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



