export NAME="libc++ C++ Standard Library"
export STATUS=
export URL=https://libcxx.llvm.org/
export BASENAME=libcxx
export DESCRIPTION="libc++ is an implementation of the C++ standard library, targeting C++11, C++14 and above."
export CATEGORY=development
export TYPE=application
#export VERSION=9.0.0
#export VERSIONDATE=20190930
#export VERSION=9.0.1
#export VERSIONDATE=20200224
#export VERSION=10.0.0
#export VERSIONDATE=20200326
#export VERSION=10.0.1
#export VERSIONDATE=20200804
export VERSION=11.0.0
export VERSIONDATE=20201012
####libc++ now requires being built in a monorepo layout with libcxxabi available
#export VERSION=12.0.0
#export VERSIONDATE=20210419
wl-showstatus --package-version
export DEPENDENCIES=llvm
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.TXT
export LICENSETYPE=Apache/MIT/UIUC
#export DOWNLOADURL="http://llvm.org/releases/download.html libcxx- .src.tar.xz"
export DOWNLOADURL="https://github.com/llvm/llvm-project/releases libcxx- .src.tar.xz"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://llvm.org/releases/$VERSION/$BASENAME-$VERSION.src.tar.xz
export DOWNLOADSOURCEURL=https://github.com/llvm/llvm-project/releases/download/llvmorg-$VERSION/$BASENAME-$VERSION.src.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xJh --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.src.tar.xz
cd $BASENAME-$VERSION.src
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/llvm -DCMAKE_BUILD_TYPE:STRING=Release -DLIBCXX_ENABLE_SHARED:BOOL=ON -DLIBCXX_ENABLE_STATIC:BOOL=ON -DLIBCXX_BUILD_32_BITS:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "OFF"; else echo "ON"; fi) -DLIBCXX_ENABLE_RTTI:BOOL=ON -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY:BOOL=OFF -DLLVM_CONFIG_PATH:FILEPATH=$MINGWPREFIX/share/llvm/bin/llvm-config.exe -DLIBCXX_HAS_PTHREAD_API:BOOL=ON -DLIBCXX_HAS_WIN32_THREAD_API:BOOL=OFF -DLIBCXX_INCLUDE_DOCS:BOOL=OFF -DLIBCXX_INCLUDE_BENCHMARKS:BOOL=OFF -DLIBCXX_INCLUDE_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:PATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #-DLIBCXX_GCC_TOOLCHAIN:STRING=
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION.src
####Superseded by llvm-project all-in-one build



