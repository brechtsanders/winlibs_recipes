export NAME="HPCC Systems"
export STATUS=
export URL=https://hpccsystems.com/
export BASENAME=hpcc
export DESCRIPTION="HPCC Systems (High Performance Computing Cluster) is an open source, massive parallel-processing computing platform for big data processing and analytics."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=8.6.16-1
#export VERSIONDATE=20220420
#export VERSION=8.6.40-1
#export VERSIONDATE=20240821
#export VERSION=9.6.44-1
#export VERSIONDATE=20240904
#export VERSION=9.6.46-1
#export VERSIONDATE=20240911
#export VERSION=9.6.48-1
#export VERSIONDATE=20240919
#export VERSION=9.6.50-1
#export VERSIONDATE=20240925
#export VERSION=9.6.52-1
#export VERSIONDATE=20241002
#export VERSION=9.6.54-1
#export VERSIONDATE=20241009
#export VERSION=9.6.56-1
#export VERSIONDATE=20241016
#export VERSION=9.6.58-1
#export VERSIONDATE=20241023
#export VERSION=9.6.60-1
#export VERSIONDATE=20241030
#export VERSION=9.6.62-1
#export VERSIONDATE=20241106
#export VERSION=9.6.66-1
#export VERSIONDATE=20241120
#export VERSION=9.6.70-1
#export VERSIONDATE=20241206
#export VERSION=9.6.72-1
#export VERSIONDATE=20241206
#export VERSION=9.6.74-1
#export VERSIONDATE=20250115
#export VERSION=9.6.78-1
#export VERSIONDATE=20250129
#export VERSION=9.6.80-1
#export VERSIONDATE=20250205
#export VERSION=9.6.82-1
#export VERSIONDATE=20250212
#export VERSION=9.6.84-1
#export VERSIONDATE=20250220
#export VERSION=9.6.88-1
#export VERSIONDATE=20250305
#export VERSION=9.6.90-1
#export VERSIONDATE=20250312
#export VERSION=9.6.92-1
#export VERSIONDATE=20250320
#export VERSION=9.6.96-1
#export VERSIONDATE=20250409
#export VERSION=9.6.100-1
#export VERSIONDATE=20250423
#export VERSION=9.6.102-1
#export VERSIONDATE=20250430
#export VERSION=9.6.104-1
#export VERSIONDATE=20250510
#export VERSION=9.6.106-1
#export VERSIONDATE=20250515
#export VERSION=9.6.108-1
#export VERSIONDATE=20250521
#export VERSION=9.6.112-1
#export VERSIONDATE=20250604
#export VERSION=9.6.114-1
#export VERSIONDATE=20250611
#export VERSION=9.6.118-1
#export VERSIONDATE=20250625
#export VERSION=9.6.122-1
#export VERSIONDATE=20250709
#export VERSION=9.6.120-1
#export VERSIONDATE=20250702
#export VERSION=9.6.124-1
#export VERSIONDATE=20250716
#export VERSION=9.8.6-1
#export VERSIONDATE=20240726
#export VERSION=9.8.8-1
#export VERSIONDATE=20240731
#export VERSION=9.8.10-1
#export VERSIONDATE=20240807
#export VERSION=9.8.14-1
#export VERSIONDATE=20240821
#export VERSION=9.8.16-1
#export VERSIONDATE=20240828
#export VERSION=9.8.18-1
#export VERSIONDATE=20240904
#export VERSION=9.8.20-1
#export VERSIONDATE=20240911
#export VERSION=9.8.22-1
#export VERSIONDATE=20240919
#export VERSION=9.8.24-1
#export VERSIONDATE=20240925
#export VERSION=9.8.26-1
#export VERSIONDATE=20241002
#export VERSION=9.8.28-1
#export VERSIONDATE=20241009
#export VERSION=9.8.30-1
#export VERSIONDATE=20241016
#export VERSION=9.8.32-1
#export VERSIONDATE=20241023
#export VERSION=9.8.34-1
#export VERSIONDATE=20241030
#export VERSION=9.8.36-1
#export VERSIONDATE=20241106
#export VERSION=9.8.38-1
#export VERSIONDATE=20241114
#export VERSION=9.8.38-2
#export VERSIONDATE=20241001
#export VERSION=9.8.40-1
#export VERSIONDATE=20241120
#export VERSION=9.8.42-1
#export VERSIONDATE=20241127
#export VERSION=9.8.44-1
#export VERSIONDATE=20241206
#export VERSION=9.8.46-1
#export VERSIONDATE=20241221
#export VERSION=9.8.48-1
#export VERSIONDATE=20250115
#export VERSION=9.8.52-1
#export VERSIONDATE=20250122
#export VERSION=9.8.54-1
#export VERSIONDATE=20250129
#export VERSION=9.8.56-1
#export VERSIONDATE=20250205
#export VERSION=9.8.58-1
#export VERSIONDATE=20250212
#export VERSION=9.8.60-1
#export VERSIONDATE=20250220
#export VERSION=9.8.64-1
#export VERSIONDATE=20250305
#export VERSION=9.8.66-1
#export VERSIONDATE=20250312
#export VERSION=9.8.68-1
#export VERSIONDATE=20250320
#export VERSION=9.8.72-1
#export VERSIONDATE=20250409
#export VERSION=9.8.76-1
#export VERSIONDATE=20250423
#export VERSION=9.8.78-1
#export VERSIONDATE=20250430
#export VERSION=9.8.80-1
#export VERSIONDATE=20250510
#export VERSION=9.8.82-1
#export VERSIONDATE=20250515
#export VERSION=9.8.84-1
#export VERSIONDATE=20250521
#export VERSION=9.8.88-1
#export VERSIONDATE=20250604
#export VERSION=9.8.90-1
#export VERSIONDATE=20250611
#export VERSION=9.8.94-1
#export VERSIONDATE=20250625
#export VERSION=9.8.96-1
#export VERSIONDATE=20250702
#export VERSION=9.8.98-1
#export VERSIONDATE=20250709
#export VERSION=9.8.100-1
#export VERSIONDATE=20250716
#export VERSION=9.8.102-1
#export VERSIONDATE=20250723
#export VERSION=9.8.104-1
#export VERSIONDATE=20250730
#export VERSION=9.8.106-1
#export VERSIONDATE=20250806
#export VERSION=9.8.108-1
#export VERSIONDATE=20250813
#export VERSION=9.10.0-1
#export VERSIONDATE=20250130
#export VERSION=9.10.2-1
#export VERSIONDATE=20250205
#export VERSION=9.10.4-1
#export VERSIONDATE=20250212
#export VERSION=9.10.6-1
#export VERSIONDATE=20250220
#export VERSION=9.10.8-1
#export VERSIONDATE=20250226
#export VERSION=9.10.10-1
#export VERSIONDATE=20250305
#export VERSION=9.10.12-1
#export VERSIONDATE=20250312
#export VERSION=9.10.14-1
#export VERSIONDATE=20250319
#export VERSION=9.10.14-2
#export VERSIONDATE=20250320
#export VERSION=9.10.16-1
#export VERSIONDATE=20250327
#export VERSION=9.10.18-1
#export VERSIONDATE=20250409
#export VERSION=9.10.20-1
#export VERSIONDATE=20250416
#export VERSION=9.10.22-1
#export VERSIONDATE=20250423
#export VERSION=9.10.24-1
#export VERSIONDATE=20250430
#export VERSION=9.10.26-1
#export VERSIONDATE=20250510
#export VERSION=9.10.28-1
#export VERSIONDATE=20250515
#export VERSION=9.10.30-1
#export VERSIONDATE=20250521
#export VERSION=9.10.32-1
#export VERSIONDATE=20250529
#export VERSION=9.10.32-2
#export VERSIONDATE=20250531
#export VERSION=9.10.32-3
#export VERSIONDATE=20250602
#export VERSION=9.10.34-1
#export VERSIONDATE=20250604
#export VERSION=9.10.36-1
#export VERSIONDATE=20250611
#export VERSION=9.10.40-1
#export VERSIONDATE=20250625
#export VERSION=9.10.42-1
#export VERSIONDATE=20250702
#export VERSION=9.10.44-1
#export VERSIONDATE=20250709
#export VERSION=9.10.46-1
#export VERSIONDATE=20250716
#export VERSION=9.10.48-1
#export VERSIONDATE=20250723
#export VERSION=9.10.50-1
#export VERSIONDATE=20250730
#export VERSION=9.10.52-1
#export VERSIONDATE=20250806
#export VERSION=9.10.54-1
#export VERSIONDATE=20250813
#export VERSION=9.12.0-1
#export VERSIONDATE=20250510
#export VERSION=9.12.2-1
#export VERSIONDATE=20250515
#export VERSION=9.12.4-1
#export VERSIONDATE=20250521
#export VERSION=9.12.6-2
#export VERSIONDATE=20250531
#export VERSION=9.12.6-3
#export VERSIONDATE=20250602
#export VERSION=9.12.8-1
#export VERSIONDATE=20250604
#export VERSION=9.12.10-1
#export VERSIONDATE=20250611
#export VERSION=9.12.12-1
#export VERSIONDATE=20250618
#export VERSION=9.12.12-2
#export VERSIONDATE=20250620
#export VERSION=9.12.14-1
#export VERSIONDATE=20250625
#export VERSION=9.12.16-1
#export VERSIONDATE=20250702
#export VERSION=9.12.18-1
#export VERSIONDATE=20250709
#export VERSION=9.12.20-1
#export VERSIONDATE=20250716
#export VERSION=9.12.22-1
#export VERSIONDATE=20250723
#export VERSION=9.12.24-1
#export VERSIONDATE=20250730
#export VERSION=9.12.26-1
#export VERSIONDATE=20250806
#export VERSION=9.12.28-1
#export VERSIONDATE=20250813
#export VERSION=9.14.0-1
#export VERSIONDATE=20250709
#export VERSION=9.14.2-1
#export VERSIONDATE=20250716
#export VERSION=9.14.4-1
#export VERSIONDATE=20250723
#export VERSION=9.14.6-1
#export VERSIONDATE=20250730
#export VERSION=9.14.8-1
#export VERSIONDATE=20250806
export VERSION=9.14.10-1
export VERSIONDATE=20250813
wl-showstatus --package-version
export DEPENDENCIES=
#aws-sdk-cpp
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=Apache
#export DOWNLOADURL="https://hpccsystems.com/download/archive"
export DOWNLOADURL="https://github.com/hpcc-systems/HPCC-Platform/tags community_"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=
export DOWNLOADSOURCEURL=https://github.com/hpcc-systems/HPCC-Platform/archive/refs/tags/community_$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/community_$VERSION.tar.gz
cd HPCC-Platform-community_$VERSION
# fix cmake_modules/FindOPENLDAP.cmake (version >= 8.6.16-1)
patch -ulbf cmake_modules/FindOPENLDAP.cmake << EOF
@@ -67,3 +67,3 @@
   include(FindPackageHandleStandardArgs)
-  find_package_handle_standard_args(OpenLDAP DEFAULT_MSG
+  find_package_handle_standard_args(OPENLDAP DEFAULT_MSG
     OPENLDAP_LIBRARIES
EOF
# fix missing file
touch system/yaml/libyaml/CMakeLists.txt

#grep -wi add_library $(find -name CMakeLists.txt -or -name '*.cmake')
mkdir -p build_test && cmake.exe -GNinja -DUSE_AWS:BOOL=OFF -DUSE_AZURE:BOOL=OFF -DWSSQL_SERVICE:BOOL=OFF -DSUPPRESS_V8EMBED:BOOL=ON -DUSE_OPENLDAP:BOOL=OFF -DUSE_GIT:BOOL=OFF -DUSE_CBLAS:BOOL=OFF -DUSE_JAVA:BOOL=OFF -DLOGGING_SERVICE:BOOL=OFF -DUSE_NATIVE_LIBRARIES:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_MAKE_PROGRAM:FILEPATH=$(which ninja.exe) -DCMAKE_C_COMPILER:STRING=${CC:-gcc} -DCMAKE_CXX_COMPILER:STRING=${CXX:-g++} -S. -Bbuild_test -LH && echo OK; rm -rf build_test

#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DCMAKE_SYSTEM_NAME=Windows 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# #wl-showstatus build &&
# #make -Cbuild_win &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
#    echo OK

#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_NATIVE_LIBRARIES:BOOL=ON -DUSE_AWS:BOOL=OFF -DUSE_AZURE:BOOL=OFF -DUSE_OPENLDAP:BOOL=OFF -DUSE_GIT:BOOL=OFF -DUSE_CBLAS:BOOL=OFF -DUSE_JAVA:BOOL=OFF -DLOGGING_SERVICE:BOOL=OFF -DUSE_NATIVE_LIBRARIES:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DUSE_PYTHON2:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -S. -Bbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK

#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# ## fix missing link libraries
# #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK

#-DCMAKE_BUILD_TYPE:STRING=MinSizeRel

#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS
## fix missing gio-unix
#sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -D documentation=true . build_static &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -D documentation=true . build_shared &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## add linker flag
# #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed/" build_shared/build.ninja &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -C build_static install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -C build_static install/strip &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -C build_shared install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -C build_shared install/strip &&
#    echo OK && find . -name '*.a'

#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS
## fix location of Perl
#sed -i.bak -e "s?'perl'?'$(cygpath -w $PERLDIR/bin/perl.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix detection of Python
#sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix missing gio-unix
##sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
#mkdir -p build_both &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Ddocumentation=true . build_both &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## fix Python path issues in meson_exe
# #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
# ## fix executing shell scripts
# #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install/strip &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
# #PATH=$PERLDIR/../c/bin:$PERLDIR/bin:$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'

#wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/python/Lib/site-packages &&
# PYTHONPATH=$INSTALLPREFIX/python/Lib/site-packages:$MINGWPREFIX/python/Lib/site-packages $PYDIR/python setup.py install --prefix=$(cygpath.exe -w $INSTALLPREFIX/python) &&
#    echo OK

#export DEPENDENCIES=qt
#wl-showstatus configure &&
# $MINGWPREFIX/qt/bin/qmake -makefile *.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# wl-showstatus build &&
# mingw32-make &&
#    echo OK

#export DEPENDENCIES=qt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# $MINGWPREFIX/qt/bin/qmake -makefile ../*.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ CONFIG+=staticlib &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# $MINGWPREFIX/qt/bin/qmake -makefile ../*.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# cd .. &&
# wl-showstatus build &&
# mingw32-make -Cbuild_static &&
# wl-showstatus build &&
# mingw32-make -Cbuild_shared &&
#    echo OK

#mkdir -p $INSTALLPREFIX/python/Lib/site-packages
#wl-showstatus build-install &&
# PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$PYDIR/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages $PYDIR/python.exe setup.py install --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
# ## delete any __pycache__ folder(s)
# #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
#    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf HPCC-Platform-community_$VERSION



