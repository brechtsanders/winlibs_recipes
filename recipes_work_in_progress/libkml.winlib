#export NAME="libkml"
#export STATUS=
#export URL=https://code.google.com/p/libkml/
#export BASENAME=libkml
#export DESCRIPTION="This is libkml, Google's library for use with applications that want to parse, generate and operate on KML. It is an implementation of the OGC KML 2.2 standard."
#export CATEGORY=dataprocessing
#export TYPE=library
#export VERSION=1.2.0
#export VERSIONDATE=20140803
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
##export DOWNLOADURL="https://code.google.com/p/libkml/downloads/list"
#export DOWNLOADURL="https://code.google.com/archive/p/libkml/downloads"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://libkml.googlecode.com/files/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
#cp -f src/kml/base/file_win32.cc src/kml/base/file_posix.cc
#wl-showstatus configure &&
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
##fi
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CXXFLAGS="-DGTEST_OS_WINDOWS" &&
# wl-showstatus build &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
##    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="libkml"
export STATUS=
#export URL=https://code.google.com/p/libkml/
export URL=https://github.com/libkml/libkml
export BASENAME=libkml
export DESCRIPTION="This is libkml, Google's library for use with applications that want to parse, generate and operate on KML. It is an implementation of the OGC KML 2.2 standard."
export CATEGORY=dataprocessing
export TYPE=library
export VERSION=1.3.0
export VERSIONDATE=20170509
####src/kml/base/file_win32.cc:37:19: fatal error: xstring: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://github.com/libkml/libkml/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/libkml/libkml/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
cp -f src/kml/base/file_win32.cc src/kml/base/file_posix.cc
wl-showstatus configure &&
cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DWITH_JAVA:BOOL=OFF -DWITH_PYTHON:BOOL=OFF -DWITH_SWIG:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DINSTALL_EXAMPLES:BOOL=OFF . &&
 wl-showstatus build &&
 make install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



