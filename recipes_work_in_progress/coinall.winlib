export NAME="CoinAll"
export STATUS=
export URL=http://www.coin-or.org/
export BASENAME=coinall
export DESCRIPTION="The Computational Infrastructure for Operations Research (COIN-OR**, or simply COIN)  project is an initiative to spur the development of open-source software for the operations research community."
export CATEGORY=maths
export TYPE=library
export VERSION=1.7.5
export VERSIONDATE=20151214
####DyLP/src/DylpStdLib/dylib_bnfrdr.c:394:23: error: implicit declaration of function 'dywarn'; did you mean 'warn'? [-Wimplicit-function-declaration]
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://www.coin-or.org/download/source/CoinAll/ CoinAll-"
export DOWNLOADURL="https://www.coin-or.org/download/source/CoinAll/ CoinBinary-CoinAll-"
#export DOWNLOADURL="https://dl.bintray.com/coin-or/download/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.coin-or.org/download/source/CoinAll/CoinAll-$VERSION.tgz
export DOWNLOADSOURCEURL=https://www.coin-or.org/download/source/CoinAll/CoinBinary-CoinAll-$VERSION.tgz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/CoinAll-$VERSION.tgz
tar xfz $TARBALLDIR/$BASENAME/CoinBinary-CoinAll-$VERSION.tgz
#cd CoinAll-$VERSION
cd CoinBinary-CoinAll-$VERSION
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
wl-showstatus configure &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 make install-strip PKG_CONFIG=$(which pkg-config.exe) &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#wl-showstatus configure &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf CoinAll-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf CoinBinary-CoinAll-$VERSION



