export NAME="openFrameworks"
export STATUS=
export URL=http://openframeworks.cc/
#export URL=https://github.com/openframeworks/openFrameworks/
export BASENAME=openframeworks
export DESCRIPTION="openFrameworks is an open source C++ toolkit designed to assist the creative process by providing a simple and intuitive framework for experimentation."
export CATEGORY=development
export TYPE=application
#export VERSION=0.9.3
#export VERSIONDATE=20160826
#export VERSION=0.9.4
#export VERSIONDATE=20161015
####/include/c++/thread:88:36: note:   'std::thread::native_handle_type {aka ptw32_handle_t}' is not derived from 'const std::pair<_T1, _T2>'
#export VERSION=0.9.5
#export VERSIONDATE=20161022
#export VERSION=0.9.6
#export VERSIONDATE=20161025
#export VERSION=0.9.7
#export VERSIONDATE=20161101
#export VERSION=0.9.8
#export VERSIONDATE=20161123
####g++.exe: error: unrecognized command line option '-std=gnu++14'
#export VERSION=0.10.0
#export VERSIONDATE=20180507
#export VERSION=0.10.1
#export VERSIONDATE=20181014
#export VERSION=0.11.0
#export VERSIONDATE=20191201
#export VERSION=0.11.1
#export VERSIONDATE=20210303
export VERSION=0.11.2
export VERSIONDATE=20210325
####libs/openFrameworks/utils/ofConstants.h:263:10: fatal error: tesselator.h: No such file or directory
wl-showstatus --package-version
export DEPENDANCIES=boost,cairo,libcurl,freeglut,freeimage,freetype2,glew,glfw,json,libpng,openssl,pixman,poco,rtaudio,libtess2,uriparser,libutf8proc,videoinput,zlib,opencv,assimp,libxml2,libsvgtiny
#ippicv
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE=MIT
#export DOWNLOADURL="http://openframeworks.cc/download/"
#export DOWNLOADURL="https://github.com/openframeworks/openFrameworks/releases"
export DOWNLOADURL="https://github.com/openframeworks/openFrameworks/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/openframeworks/openFrameworks/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/openframeworks/openFrameworks/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd openFrameworks-$VERSION
# fix pkg-config problem
sed -i.bak -e "s/pkg-config$/&.exe/" libs/openFrameworksCompiled/project/msys2/config.msys2.default.mk
wl-showstatus build
#MSYSTEM=MINGW32 scripts/msys2/compileOF.sh &&
#    echo OK
 make -Clibs/openFrameworksCompiled/project Release PLATFORM_PKG_CONFIG="$(which pkg-config.exe)" CXX="${CXX:-g++} -std=c++11" AR=ar &&
 #CC="g++" SHAREDCORE=1
 ls -l libs/openFrameworksCompiled/lib/msys2 &&
    echo OK

  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE* COPYRIGHT* configure* CMakeLists.txt Makefile
wl-showstatus configure &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDANCIES=cmake
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf openFrameworks-$VERSION



