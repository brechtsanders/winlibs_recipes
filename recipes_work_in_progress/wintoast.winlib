#export NAME="WinToast"
#export STATUS=
#export URL=https://github.com/mohabouje/WinToast
#export BASENAME=wintoast
#export DESCRIPTION="WinToast is a lightly library written in C++ which brings a complete integration of the modern toast notifications of Windows 8 & Windows 10."
#export CATEGORY=gui
#export TYPE=library
##export VERSION=1.2.0
##export VERSIONDATE=20191111
#export VERSION=1.3.0
#export VERSIONDATE=20230409
#####src/wintoastlib.h:7:10: fatal error: wrl/implements.h: No such file or directory
#wl-showstatus --package-version
#export DEPENDENCIES=wil
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.txt
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/mohabouje/WinToast/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/mohabouje/WinToast/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
#wl-showstatus build &&
# ${CXX:-g++} -c -o wintoastlib.o src/wintoastlib.cpp -Iinclude -Isrc &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="WinToast"
export STATUS=
export URL=https://github.com/mohabouje/WinToast
export BASENAME=wintoast
export DESCRIPTION="WinToast is a lightly library written in C++ which brings a complete integration of the modern toast notifications of Windows 8 & Windows 10."
export CATEGORY=gui
export TYPE=library
export VERSION=1.3.1
export VERSIONDATE=20250312
####include/wintoastlib.h:31:10: fatal error: wrl/implements.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=wil
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/mohabouje/WinToast/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/mohabouje/WinToast/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd WinToast-$VERSION
# also allow building shared library
sed -i.bak -e "s/\(add_library([^ ]* \)STATIC/\1/" CMakeLists.txt#export BUILDDEPENDENCIES=cmake,ninja
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DWINTOASTLIB_BUILD_EXAMPLES:BOOL=OFF -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DWINTOASTLIB_BUILD_EXAMPLES:BOOL=OFF -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 wl-showstatus build-static &&
 ninja -Cbuild_static &&
 wl-showstatus build-shared &&
 ninja -Cbuild_shared &&
 wl-showstatus build-install-static &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install-shared &&
 ninja -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf WinToast-$VERSION
