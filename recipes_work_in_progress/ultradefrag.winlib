export NAME="ultradefrag"
export STATUS=
export URL=http://ultradefrag.sourceforge.net/
export BASENAME=ultradefrag
export DESCRIPTION="UltraDefrag is a powerful Open Source Defragmentation tool for the Windows Platform. It can defragment any system files including registry hives and paging file. Also one of the main goals of UltraDefrag is doing the job as fast and reliable as possible."
export CATEGORY=system
export TYPE=application
#export VERSION=6.0.2
#export VERSIONDATE=20140321
#export VERSION=6.0.3
#export VERSIONDATE=20141019
#export VERSION=6.0.4
#export VERSIONDATE=20141025
#export VERSION=6.1.0
#export VERSIONDATE=20150419
#export VERSION=6.1.1
#export VERSIONDATE=20151120
#export VERSION=6.1.2
#export VERSIONDATE=20160609
#export VERSION=7.0.0
#export VERSIONDATE=20151224
#export VERSION=7.0.1
#export VERSIONDATE=20160406
#export VERSION=7.0.2
#export VERSIONDATE=20161217
#export VERSION=7.1.0
#export VERSIONDATE=20180929
#export VERSION=7.1.1
#export VERSIONDATE=20181012
#export VERSION=7.1.2
#export VERSIONDATE=20190701
#export VERSION=7.1.3
#export VERSIONDATE=20190815
export VERSION=7.1.4
export VERSIONDATE=20200301
####lua: ..\..\tools\mkmod.lua:219: invalid escape sequence near '"    \$'
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.TXT
export LICENSETYPE=GPL
export DOWNLOADURL="http://sourceforge.net/projects/ultradefrag/files/stable-release/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/ultradefrag/stable-release/$VERSION/$BASENAME-$VERSION.src.7z
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/ultradefrag/stable-release/$VERSION/$BASENAME-$VERSION.src.7z
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#"C:\Program Files\7-Zip\7z.exe" x $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.src.7z
"C:\Program Files\7-Zip\7z.exe" x $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.src.7z -o$BASENAME-$VERSION
cd $BASENAME-$VERSION/src
# fix invalid escape sequence in tools/mkmod.lua
sed -i.bak -e "s/\\\\@/@/g" tools/mkmod.lua
sed -i.bak2 -e "s/\\\\\([@%]\)/\1/g" tools/mkmod.lua
wl-showstatus build &&
#$COMSPEC /c "dll\zenwinx\mingw_patch.cmd"
#echo "build.cmd --use-mingw --portable --no-ia64 --no-x86" | $COMSPEC &&
$COMSPEC //C "build.cmd --use-mingw --portable --no-ia64 --no-x86" &&
#echo "build.cmd --portable --use-mingw --dev --pdf --trans" | $COMSPEC &&
#$COMSPEC //C "build.cmd --use-mingw --portable --use-mingw --dev --pdf --trans" &&
#--no-amd64 
    echo OK

  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
wl-showstatus configure &&
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION(`gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/"`)" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt
#wl-showstatus configure
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



