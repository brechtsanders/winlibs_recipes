export NAME="SpiderMonkey"
export STATUS=
#export URL=https://developer.mozilla.org/en/SpiderMonkey
#export URL=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey
export URL=https://spidermonkey.dev/
export BASENAME=spidermonkey
export DESCRIPTION="SpiderMonkey is Gecko's JavaScript engine written in C. It is used in various Mozilla products, including Firefox, and is available under MPL/GPL/LGPL tri-license."
export CATEGORY=development
export TYPE=library
export VERSION=1.7.0
export VERSIONDATE=20101216
#export VERSION=1.8.0-rc1
#export VERSIONDATE=20101215
#export VERSION=1.8.6
#export VERSIONDATE=20160710
#export VERSION=38.2.1.rc0
#export VERSIONDATE=20160529
#export VERSION=45.0.2
#export VERSIONDATE=20170117
####No TimeStamp implementation on this platform.  Build will not succeed
####config/baseconfig.mk:28: *** MSYS make is not supported.  Stop.
wl-showstatus --package-version
export DEPENDENCIES=nspr
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE="MPL/GPL/LGPL"
#export DOWNLOADURL="http://ftp.mozilla.org/pub/mozilla.org/js/ js-"
#export DOWNLOADURL="https://ftp.mozilla.org/pub/spidermonkey/releases/ js-"
#export DOWNLOADURL="https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey mozjs-"
export DOWNLOADURL="http://ftp.mozilla.org/pub/spidermonkey/releases/ mozjs-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.mozilla.org/pub/mozilla.org/js/js-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://people.mozilla.org/~sstangl/mozjs-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://people.mozilla.org/~sfink/mozjs-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://ftp.mozilla.org/pub/spidermonkey/releases/$VERSION/mozjs-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.mozilla.org/pub/spidermonkey/releases/$VERSION/mozjs-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/js-$VERSION.tar.gz
mv js $BASENAME-$VERSION
cd $BASENAME-$VERSION/src
#tar xfj $TARBALLDIR/$BASENAME/mozjs-$VERSION.tar.bz2
#cd mozjs-38.0.0
#cd mozjs-$VERSION
# remove VC++ fix from Makefile.ref
patch -ulbf Makefile.ref << EOF
--- Makefile.ref  2006-07-26 21:16:48 +0200
+++ Makefile.ref  2010-12-16 09:03:56 +0100
@@ -92,11 +92,2 @@

-# Prevent floating point errors caused by VC++ optimizations
-ifeq (\$(OS_ARCH),WINNT)
-_MSC_VER = \$(shell \$(CC) 2>&1 | sed -n 's/.*Compiler Version \\([0-9]*\\)\\.\\([0-9]*\\).*/\\1\\2/p')
-ifeq (,\$(filter-out 1200 1300 1310,\$(_MSC_VER)))
-CFLAGS += -Op
-else
-CFLAGS += -fp:precise
-endif
-endif # WINNT
EOF
# create config file if missing
ls config/`uname -s|sed -e "s/MINGW32_NT-/WINNT/"`.mk > /dev/null &> /dev/null || cp config/WINNT5.2.mk config/`uname -s|sed -e "s/MINGW32_NT-/WINNT/"`.mk
wl-showstatus build &&
make -f Makefile.ref CC=${CC:-gcc} CPP=${CC:-gcc} JS_THREADSAFE=1 BUILD_OPT=1 JS_DIST=$MINGWPREFIX WIN_CFLAGS= WIN_IDG_CFLAGS= WIN_DEBUG_CFLAGS= WIN_OPT_CFLAGS="-O3" &&
 wl-showstatus build-install &&
    echo OK

# fix js/src/configure (version >= 45.0.2)
patch -ulbf js/src/configure << EOF
--- js/src/configure  2016-04-14 19:58:48.000000000 +0200
+++ js/src/configure  2017-01-19 21:26:20.715454300 +0100
@@ -1119,4 +1119,4 @@
     if test -z "\$CXX"; then CXX=cl; fi
-    if test -z "\$CPP"; then CPP="\$CC -E -nologo"; fi
-    if test -z "\$CXXCPP"; then CXXCPP="\$CXX -TP -E -nologo"; ac_cv_prog_CXXCPP="\$CXXCPP"; fi
+    if test -z "\$CPP"; then CPP="\$CC -E"; fi
+    if test -z "\$CXXCPP"; then CXXCPP="\$CXX -TP -E"; ac_cv_prog_CXXCPP="\$CXXCPP"; fi
     if test -z "\$LD"; then LD=link; fi
@@ -4257,3 +4257,3 @@
 EOF
-                      ac_cv_winsdk_maxver=\`\$CPP conftest.h 2>/dev/null | tail -n1\`
+                      ac_cv_winsdk_maxver=\${MOZ_WINSDK_TARGETVER}
                       rm -f conftest.h
EOF
patch -ulbf python/mozbuild/mozbuild/base.py << EOF
--- python/mozbuild/mozbuild/base.py  2016-04-14 19:55:21.000000000 +0200
+++ python/mozbuild/mozbuild/base.py  2017-01-19 21:53:05.021710100 +0100
@@ -217,4 +217,3 @@
         if self._topobjdir is None:
-            self._topobjdir = MozbuildObject.resolve_mozconfig_topobjdir(
-                self.topsrcdir, self.mozconfig, default='obj-@CONFIG_GUESS@')
+            self._topobjdir = '$(pwd)'
EOF
patch -ulbf python/mozbuild/mozbuild/frontend/reader.py << EOF
--- python/mozbuild/mozbuild/frontend/reader.py  2016-04-14 19:55:21.000000000 +0200
+++ python/mozbuild/mozbuild/frontend/reader.py  2017-01-19 21:59:43.310061700 +0100
@@ -1061,3 +1061,3 @@
         except BuildReaderError as bre:
-            raise bre
+            return

EOF
patch -ulbf config/baseconfig.mk << EOF
--- config/baseconfig.mk  2016-04-14 19:55:19.000000000 +0200
+++ config/baseconfig.mk  2017-01-19 22:06:30.830259600 +0100
@@ -26,5 +26,2 @@

-ifeq (a,\$(firstword a\$(subst /, ,\$(abspath .))))
-\$(error MSYS make is not supported)
-endif
 # 4.0- happens to be greater than 4.0, lower than the mozmake version,
EOF
mkdir -p js/src/build
cd js/src/build
wl-showstatus configure &&
PYTHON=$PYDIR/python.exe PATH=$PYDIR:$PATH CC=${CC:-gcc} CXX="${CXX:-g++} -std=c++0x" ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-release --without-x --with-system-nspr --with-system-zlib=$MINGWPREFIX --enable-system-ffi --with-system-icu --enable-readline --enable-strip --enable-install-strip &&
#CXX="${CXX:-g++} -std=c++11"
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 ( make install/strip || make install ) &&
    echo OK
####js.c:1683: warning: passing argument 3 of 'JS_ValueToInt32' from incompatible pointer type
####jsapi.h:384: note: expected 'int32 *' but argument is of type 'intN *'
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && rm -rf $BASENAME-$VERSION



# fix detection of highest Windows version supported
sed -i.bak -e "s/\(MOZ_WINSDK_MAXVER=\)\${ac_cv_winsdk_maxver}/\1$(echo -e '#include <stdio.h>\n#include <winsdkver.h>\nint main () { printf("0x%04X", WINVER_MAXVER); return 0; }' | gcc -x c -mconsole -o winsdkmaxver.exe - && ./winsdkmaxver.exe && rm -f winsdkmaxver.exe)/" js/src/configure
# fix detection of MinGW
sed -i.bak2 -e "s/#if defined(_MSC_VER)$/& \&\& \!defined(__MINGW32__)/" js/src/configure
mkdir -p build_win &&
 wl-showstatus configure &&
 cd build_win &&
 PATH=$PY2DIR:$PATH CC=${CC:-$(which gcc.exe)} CFLAGS="-std=c11" CXX=${CXX:-$(which g++.exe)} CXXFLAGS="-std=c++11" ../js/src/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-release --enable-strip --with-system-zlib --enable-system-ffi --disable-nspr-build --with-system-nspr --with-system-icu --with-intl-api --enable-readline --disable-rust --without-x --with-pthreads --disable-compile-environment --disable-tests &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
 
 
 js/src/configure
 cd js/src
  mkdir obj
  cd obj
  ../configure



####See also: https://github.com/ptomato/mozjs
####See also: http://ftp.mozilla.org/pub/spidermonkey/releases/README.txt
####See also: https://searchfox.org/mozilla-central/source/js/src
####See also: https://treeherder.mozilla.org/


#export VERSION=78.12.0
#export VERSIONDATE=20210611
export DOWNLOADSOURCEURL=https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/dsyHI9AWTOKKI9eQegoTLQ/runs/0/artifacts/public/build/mozjs-78.12.0.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfj $TARBALLDIR/$BASENAME/mozjs-$VERSION.tar.bz2
cd mozjs-$VERSION
mkdir -p build_win
TOPSRCDIR=$(pwd) $PYDIR/python.exe configure.py
--enable-project=js

sed -i.bak -e "s/python3/python/" js/src/configure

cd js/src
mkdir obj
cd obj
PATH=$PYDIR:$PATH ../configure
make