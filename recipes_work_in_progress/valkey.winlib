export NAME="valkey"
export STATUS=
export URL=https://github.com/valkey-io/valkey
export BASENAME=valkey
export DESCRIPTION="A flexible distributed key-value datastore that supports both caching and beyond caching workloads. This project was forked from the open source Redis project right before the transition to their new source available licenses."
export CATEGORY=database
export TYPE=application
#export VERSION=8.0.1
#export VERSIONDATE=20241027
#export VERSION=8.0.2
#export VERSIONDATE=20250108
#export VERSION=8.0.4
#export VERSIONDATE=20250708
#export VERSION=8.1.0
#export VERSIONDATE=20250401
#export VERSION=8.1.1
#export VERSIONDATE=20250424
#export VERSION=8.1.2
#export VERSIONDATE=20250612
export VERSION=8.1.3
export VERSIONDATE=20250708
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/valkey-io/valkey/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/valkey-io/valkey/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/fmacros.h (version >= 8.1.2)
patch -ulbf src/fmacros.h << EOF
@@ -71,3 +71,3 @@
  * will error on stdlib definitions in files as well*/
-#if (__GNUC__ && __GNUC__ >= 4) && !defined __APPLE__
+#if (__GNUC__ && __GNUC__ >= 4) && !defined __APPLE__ && !defined __MINGW32__
 int sprintf(char *str, const char *format, ...)
EOF
# fix src/ae.c (version >= 8.1.2)
patch -ulbf src/ae.c << EOF
@@ -41,3 +41,5 @@
 #include <stdlib.h>
+#ifndef __MINGW32__
 #include <poll.h>
+#endif
 #include <string.h>
EOF
# fix missing python3
sed -i.bak -e "s/^\(#\!.*python\)3/\1/" $(grep -l "^#\!.*python3" $(find -name '*.py'))
wl-showstatus build &&
 PATH=$PYDIR:$PATH make CC=${CC:-gcc} AR=${AR:-ar} &&
 #make CC=${CC:-gcc} CXX=${CXX:-g++} LD=${LD:-ld} AR=${AR:-ar} &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



