export NAME="Squid"
export STATUS=
export URL=http://www.squid-cache.org/
export BASENAME=squid
export DESCRIPTION="Squid is a caching proxy for the Web supporting HTTP, HTTPS, FTP, and more. It reduces bandwidth and improves response times by caching and reusing frequently-requested web pages. Squid has extensive access controls and makes a great server accelerator."
export CATEGORY=
export TYPE=library
#export VERSION=3.1.14
#export VERSION=3.2.2
#export VERSIONDATE=20121008
#export VERSION=3.2.11
#export VERSIONDATE=20130508
#export VERSION=3.3.4
#export VERSIONDATE=20130508
####lib/smblib/smblib.c:140: undefined reference to `_getgid'
#export VERSION=3.4.0.1
#export VERSIONDATE=20130729
#export VERSION=3.5.0.1
#export VERSIONDATE=20141028
#export VERSION=3.5.2
#export VERSIONDATE=20150314
#export VERSION=3.5.27
#export VERSIONDATE=20180119
#export VERSION=4.0.1
#export VERSIONDATE=20151014
#export VERSION=4.0.2
#export VERSIONDATE=20151101
#export VERSION=4.0.3
#export VERSIONDATE=20151129
#export VERSION=4.0.7
#export VERSIONDATE=20160406
#export VERSION=4.0.8
#export VERSIONDATE=20160407
#export VERSION=4.0.9
#export VERSIONDATE=20160421
#export VERSION=4.0.10
#export VERSIONDATE=20160507
#export VERSION=4.0.11
#export VERSIONDATE=20160610
#export VERSION=4.0.12
#export VERSIONDATE=20160702
#export VERSION=4.0.13
#export VERSIONDATE=20160806
#export VERSION=4.0.14
#export VERSIONDATE=20160909
#export VERSION=4.0.15
#export VERSIONDATE=20161010
#export VERSION=4.0.16
#export VERSIONDATE=20161031
#export VERSION=4.0.17
#export VERSIONDATE=20161217
#export VERSION=4.0.18
#export VERSIONDATE=20170207
#export VERSION=4.0.19
#export VERSIONDATE=20170403
#export VERSION=4.0.20
#export VERSIONDATE=20170602
#export VERSION=4.0.21
#export VERSIONDATE=20170702
#export VERSION=4.0.22
#export VERSIONDATE=20171208
#export VERSION=4.0.24
#export VERSIONDATE=20180307
#export VERSION=4.0.25
#export VERSIONDATE=20180612
#export VERSION=4.6
#export VERSIONDATE=20190219
#export VERSION=4.8
#export VERSIONDATE=20190710
#export VERSION=4.9
#export VERSIONDATE=20191107
#export VERSION=4.10
#export VERSIONDATE=20200120
#export VERSION=4.11
#export VERSIONDATE=20200420
#export VERSION=4.12
#export VERSIONDATE=20200610
#export VERSION=4.13
#export VERSIONDATE=20210203
#export VERSION=4.14
#export VERSIONDATE=20210208
#export VERSION=5.0.1
#export VERSIONDATE=20200120
#export VERSION=5.0.2
#export VERSIONDATE=20200420
#export VERSION=5.0.3
#export VERSIONDATE=20200610
#export VERSION=5.0.4
#export VERSIONDATE=20200823
#export VERSION=5.0.5
#export VERSIONDATE=20210208
#export VERSION=5.0.6
#export VERSIONDATE=20210511
#export VERSION=5.0.7
#export VERSIONDATE=20210706
#export VERSION=5.1
#export VERSIONDATE=20210731
#export VERSION=5.2
#export VERSIONDATE=20211004
#export VERSION=5.3
#export VERSIONDATE=20211208
####helpers/basic_auth/LDAP/basic_ldap_auth.cc:278:49: error: invalid conversion from 'const char*' to 'PCHAR {aka char*}' [-fpermissive]
#export VERSION=5.4.1
#export VERSIONDATE=20220212
#export VERSION=5.5
#export VERSIONDATE=20220413
#export VERSION=5.7
#export VERSIONDATE=20220907
#export VERSION=6.0.1
#export VERSIONDATE=20230228
#export VERSION=6.0.2
#export VERSIONDATE=20230501
#export VERSION=6.0.3
#export VERSIONDATE=20230607
#export VERSION=6.4
#export VERSIONDATE=20231102
#export VERSION=6.5
#export VERSIONDATE=20231129
#export VERSION=6.6
#export VERSIONDATE=20231207
export VERSION=6.7
export VERSIONDATE=20240205
####/include/lmserver.h:29:33: error: 'SERVICE_STATUS_HANDLE' was not declared in this scope
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://www.squid-cache.org/Versions/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.squid-cache.org/Versions/v`echo $VERSION|sed -e "s/^\([0-9]*\)\.[0-9]*\..*$/\1/"`/`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/"`/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://www.squid-cache.org/Versions/v$(echo $VERSION|sed -e "s/^\([0-9]*\)\.[0-9]*\..*$/\1/")/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://www.squid-cache.org/Versions/v$(echo $VERSION|sed -e "s/^\([0-9]*\)\.[0-9]*\..*$/\1/")/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://www.squid-cache.org/Versions/v$(echo $VERSION|sed -e "s/^\([0-9]*\)\.[0-9]*\..*$/\1/")/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=http://www.squid-cache.org/Versions/v$(echo $VERSION|sed -e "s/^\([0-9]*\)\.[0-9]*.*$/\1/")/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix compat/os/mswin.h
patch -ulbf compat/os/mswin.h << EOF
--- compat/os/mswin.h  2012-10-06 05:08:36 +0200
+++ compat/os/mswin.h  2012-10-08 12:02:40 +0200
@@ -37,2 +37,5 @@
 #if _SQUID_WINDOWS_
+#ifdef __MINGW32__
+#include <unistd.h>
+#endif

@@ -163,3 +166,3 @@

-#if !_SQUID_CYGWIN_
+#if !_SQUID_CYGWIN_ && !defined(__MINGW32__)
 typedef int uid_t;
@@ -349,3 +352,5 @@

+#ifndef __MINGW32__
 #define strerror(e) WIN32_strerror(e)
+#endif
 #define HAVE_STRERROR 1
EOF
# fix compat/mswin.cc
patch -ulbf compat/mswin.cc << EOF
--- compat/mswin.cc  2012-10-06 05:08:36 +0200
+++ compat/mswin.cc  2012-10-08 13:30:36 +0200
@@ -387,5 +387,5 @@
 WIN32_maperror(unsigned long WIN32_oserrno)
 {
-    int i;
+    size_t i;

     _doserrno = WIN32_oserrno;
EOF
# fix lib/smblib/smblib-priv.h
patch -ulbf lib/smblib/smblib-priv.h << EOF
--- lib/smblib/smblib-priv.h  2012-10-06 05:08:36 +0200
+++ lib/smblib/smblib-priv.h  2012-10-09 14:48:58 +0200
@@ -137,2 +137,6 @@

+#ifdef __MINGW32__
+#include <windows.h>
+typedef WORD UWORD;
+#else
 typedef unsigned short WORD;
@@ -142,2 +146,3 @@
 typedef unsigned char UCHAR;
+#endif

EOF
# fix compat/shm.h
patch -ulbf compat/shm.h << EOF
--- compat/shm.h  2012-10-06 05:08:36 +0200
+++ compat/shm.h  2012-10-08 12:07:30 +0200
@@ -25,2 +25,5 @@
 #endif
+#ifdef __MINGW32__
+#define ENOTSUP 45
+#endif

EOF
# fix lib/sspwin32.c
patch -ulbf lib/sspwin32.c << EOF
--- lib/sspwin32.c  2012-10-06 05:08:36 +0200
+++ lib/sspwin32.c  2012-10-08 21:16:54 +0200
@@ -38,3 +38,3 @@

-#include "libntlmauth/ntlmauth.h"
+#include "ntlmauth/ntlmauth.h"
 #include "sspwin32.h"
@@ -522,5 +522,5 @@
         challenge = (ntlm_challenge *) fResult;
-        Use_Unicode = NEGOTIATE_UNICODE & challenge->flags;
-        NTLM_LocalCall = NEGOTIATE_THIS_IS_LOCAL_CALL & challenge->flags;
-        encoded = base64_encode_bin((char *) fResult, cbOut);
+        Use_Unicode = NTLM_NEGOTIATE_UNICODE & challenge->flags;
+        NTLM_LocalCall = NTLM_NEGOTIATE_THIS_IS_LOCAL_CALL & challenge->flags;
+        encoded = (const char*)base64_encode_bin((char *) fResult, cbOut);
     }
@@ -585,3 +585,3 @@
     if (pServerBuf != NULL && cbOut > 0)
-        encoded = base64_encode_bin((char *) pServerBuf, cbOut);
+        encoded = (const char*)base64_encode_bin((char *) pServerBuf, cbOut);
     return encoded;
@@ -613,3 +613,3 @@
     if (pServerBuf != NULL && cbOut > 0)
-        encoded = base64_encode_bin((char *) pServerBuf, cbOut);
+        encoded = (const char*)base64_encode_bin((char *) pServerBuf, cbOut);
     return encoded;
EOF
# fix missing files
mkdir -p src/sys src/netinet src/arpa
touch src/sys/ipc.h src/sys/msg.h src/sys/shm.h src/netinet/in.h src/sys/signal.h src/netinet/tcp.h src/arpa/inet.h
echo "#include <winsock2.h>" > src/sys/socket.h
echo "#include <winsock2.h>" > src/netdb.h
cat > src/sys/uio.h << EOF
#include <winsock2.h>
struct iovec {
 caddr_t iov_base;
 int iov_len;
};
EOF
# create dummy syslog.h
cat > src/syslog.h << EOF
#define LOG_ERR     3    //error conditions
#define LOG_WARNING 4    //warning conditions
#define LOG_INFO    6    //informational
#define LOG_USER     (1<<3)    //random user-level messages
#define LOG_AUTH     (4<<3)    //security/authorization messages
#define LOG_PID    0x01    //log the pid with each message
static void openlog (const char *ident, int option, int facility) {}
static void syslog (int priority, const char *format, ...) {}
static void closelog (void) {}
EOF
# fix obsolete lm.h in helpers/basic_auth/SSPI/valid.h
sed -i.bak -e "s/lm\.h/lmaccess.h/" helpers/basic_auth/SSPI/valid.h
#sed -i.bak -e "s/\(#include <\)lm\.h\(>\)/\1lmaccess.h\2/" $(grep -l "#include <lm\.h>" $(find -name '*.h' -or -name '*.cc'))
# fix missing inet_pton in compat/os/mswindows.h (version >= 4.0.17)
mv compat/os/mswindows.h compat/os/mswindows.h.bak
cat > compat/os/mswindows.h << EOF
#undef _WIN32_WINNT
#define _WIN32_WINNT 0x0600
#include <ws2tcpip.h>
#undef HAVE_DECL_INETPTONA
#define HAVE_DECL_INETPTONA 1
EOF
cat compat/os/mswindows.h.bak >> compat/os/mswindows.h
# fix redefinition of ACL in src/SquidConfig.h (version >= 4.6)
mv src/SquidConfig.h src/SquidConfig.h.bak
cat > src/SquidConfig.h << EOF
#include <windows.h>
#ifndef ACL
#define ACL squidACL
#endif
EOF
cat src/SquidConfig.h.bak >> src/SquidConfig.h
# fix redefinition of ACL in src/acl/forward.h (version >= 4.6)
mv src/acl/forward.h src/acl/forward.h.bak
cat > src/acl/forward.h << EOF
#include <windows.h>
#ifndef ACL
#define ACL squidACL
#endif
EOF
cat src/acl/forward.h.bak >> src/acl/forward.h
# fix already defined near in src/errorpage.h (version >= 4.6)
sed -i.bak -e "s/\bnear\b/&by/" src/errorpage.h
# fix missing PWKSTA_INFO_100 in ofstd/libsrc/ofstd.cc (version >= 5.0.4)
####error lm.h is deprecated, please use levmar.h instead!
echo "#include <levmar.h>" | gcc -E -xc - &> /dev/null && sed -i.bak -e "s/#include <lm\.h>/#include <levmar.h>\n#include <lmerr.h>\n#include <lmaccess.h>\n#include <lmapibuf.h>\n#include <lmwksta.h>\n#include <winsvc.h>\n#include <lmserver.h>/" $(grep -l "#include <lm\.h>" $(find -name '*.h' -or -name '*.cc'))
#for F in $(grep -l "#include <levmar\.h>" $(find -name '*.h' -or -name '*.cc')); do mv $F.bak $F; done
# fix undefined error_t in libltdl/libltdl/lt__argz_.h (version >= 6.0.1)
patch -ulbf libltdl/libltdl/lt__argz_.h << EOF
@@ -37,2 +37,5 @@
 #include <errno.h>
+#ifdef _WIN32
+typedef int error_t;
+#endif
 #include <sys/types.h>
EOF
# fix missing Config in src/comm/ModSelectWin32.cc (version >= 6.4)
mv src/comm/ModSelectWin32.cc src/comm/ModSelectWin32.cc.bak &&
echo "#include \"SquidConfig.h\"" > src/comm/ModSelectWin32.cc &&
cat src/comm/ModSelectWin32.cc.bak >> src/comm/ModSelectWin32.cc
# fix missing uint32_t/assert in src/base/Lock.h (version >= 6.4)
mv src/base/Lock.h src/base/Lock.h.bak &&
echo "#include <stdint.h>" > src/base/Lock.h &&
echo "#include <assert.h>" >> src/base/Lock.h &&
cat src/base/Lock.h.bak >> src/base/Lock.h
# fix missing xassert in src/debug/Stream.h (version >= 6.4)
mv src/debug/Stream.h src/debug/Stream.h.bak &&
echo "#include \"compat/assert.h\"" > src/debug/Stream.h &&
cat src/debug/Stream.h.bak >> src/debug/Stream.h
# fix missing SQUIDCEXTERN in include/hash.h (version >= 6.4)
mv include/hash.h include/hash.h.bak &&
echo "#include \"squid.h\"" > include/hash.h &&
cat include/hash.h.bak >> include/hash.h
# remove -Wall/-Werror compiler options to continue building on compiler warnings
sed -i.bak -e "s/-Wall//; s/-Werror//" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32-service --disable-unlinkd &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32-service --disable-unlinkd --disable-wccp --disable-wccpv2 --enable-default-hostsfile=none &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32-service --disable-unlinkd --disable-wccp --disable-wccpv2 --enable-default-hostsfile=none CXXFLAGS="-fpermissive" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-build-info="Windows (MinGW-w64)" --enable-win32-service --disable-unlinkd --disable-wccp --disable-wccpv2 --enable-default-hostsfile=none CXXFLAGS="-fpermissive" &&
 echo "#undef HAVE_SYSLOG_H" >> include/autoconf.h &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
#### See also: https://wiki.squid-cache.org/KnowledgeBase/Windows#compiling



