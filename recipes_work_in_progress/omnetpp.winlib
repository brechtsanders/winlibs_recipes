export NAME="OMNeT++"
export STATUS=
export URL=https://omnetpp.org/
export BASENAME=omnetpp
export DESCRIPTION="OMNeT++ is an extensible, modular, component-based C++ simulation library and framework, primarily for building network simulators"
export CATEGORY=
export TYPE=library
#export VERSION=5.6.2
#export VERSIONDATE=20201012
export VERSION=5.7
export VERSIONDATE=20211005
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=
export LICENSETYPE=
export DOWNLOADURL="https://github.com/omnetpp/omnetpp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/omnetpp/omnetpp/archive/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd omnetpp-omnetpp-$VERSION
# prepare configuration
cat > configure.user << EOF
CC=${CC:-gcc}
CXX=${CXX:-g++}
PREFER_CLANG=no
MODE=release
CFLAGS_RELEASE="-O3 -DNDEBUG=1"
LDFLAGS=""
WITH_QTENV=yes
PREFER_QTENV=yes
WITH_OSG=no
WITH_OSGEARTH=no
WITH_NETBUILDER=yes
WITH_PARSIM=yes
PREFER_SQLITE_RESULT_FILES=no
WITH_SYSTEMC=no
SHARED_LIBS=yes
EOF
# don't use dlopen
sed -i.bak -e "s/\(HAVE_DLOPEN=\)1/\10/" configure
wl-showstatus configure &&
# mkdir -p m4 &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-x &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build &&
 PATH=$(pwd)/bin:$PATH make AR="ar cr" &&
 #PATH=$INSTALLPREFIX/bin:$PATH make AR="ar cr" OMNETPP_BIN_DIR=$INSTALLPREFIX/bin OMNETPP_INCL_DIR=$INSTALLPREFIX/include OMNETPP_LIB_DIR=$INSTALLPREFIX/lib OMNETPP_DOC_DIR=$INSTALLPREFIX/doc &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/lib $INSTALLPREFIX/include $INSTALLPREFIX/doc &&
 cp -rf bin/* $INSTALLPREFIX/bin/ &&
 cp -rf lib/* $INSTALLPREFIX/lib/ &&
 cp -rf include/* $INSTALLPREFIX/include/ &&
 cp -rf doc/* $INSTALLPREFIX/doc/ &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf omnetpp-omnetpp-$VERSION



