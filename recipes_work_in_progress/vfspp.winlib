export NAME="vfspp"
export STATUS=
export URL=https://github.com/yevgeniy-logachev/vfspp
export BASENAME=vfspp
export DESCRIPTION="vfspp - C++ Virtual File System that allow to manipulate with files from memory, zip archives or native filesystems like it is just native filesystem. It is useful for game developers to use resources in native filesystem during development and then pack their to the archive in distribution build."
export CATEGORY=system
export TYPE=library
export VERSION=master
export VERSIONDATE=20200427
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/yevgeniy-logachev/vfspp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/yevgeniy-logachev/vfspp/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix CMakeLists.txt (version >= master)
patch -ulbf CMakeLists.txt << EOF
@@ -33,3 +33,3 @@

-if(UNIX)
+if(UNIX OR MINGW)
     set(ZLIB_NAME z)
@@ -38,3 +38,3 @@
 endif()
-set(ZLIB_DIR \${CMAKE_SOURCE_DIR}/external/zlib)
+set(ZLIB_DIR $MINGWPREFIX)

@@ -65,3 +65,3 @@

-set(MINIZIP_DIR \${ZLIB_DIR}/contrib/minizip)
+set(MINIZIP_DIR $MINGWPREFIX/include/minizip)

@@ -82,3 +82,3 @@

-if(WIN32)
+if(MSVC)
     set(MINIZIP_HDRS \${MINIZIP_HDRS} \${MINIZIP_DIR}/iowin32.h)
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPLATFORM:STRING=Windows -S. -Bbuild_win &&
 #wl-showstatus build &&
 #make -Cbuild_win &&
 wl-showstatus build-install &&
 make -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



