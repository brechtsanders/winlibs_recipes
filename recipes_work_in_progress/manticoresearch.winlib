export NAME="Manticore Search"
export STATUS=
export URL=https://manticoresearch.com/
export BASENAME=manticoresearch
export DESCRIPTION="Lightweight SQL-first database designed for search applications that suits both big and small data collections"
export CATEGORY=database
export TYPE=application
#export VERSION=3.6.0
#export VERSIONDATE=20210826
#export VERSION=4.0.2
#export VERSIONDATE=20210921
#export VERSION=4.2.0
#export VERSIONDATE=20211223
#export VERSION=5.0.0
#export VERSIONDATE=20220519
#export VERSION=5.0.2
#export VERSIONDATE=20220531
export VERSION=6.0.0
export VERSIONDATE=20230208
wl-showstatus --package-version
export DEPENDENCIES=boost,openssl,libiconv,expat,re2,icu,snowball,fastpfor,columnar,mariadb-client
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/manticoresoftware/manticoresearch/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/manticoresoftware/manticoresearch/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/sphinxstd.h (version >= 5.0.0)
patch -ulbf src/sphinxstd.h << EOF
@@ -129,2 +129,3 @@

+#ifndef __MINGW32__
 #define strcasecmp                     strcmpi
@@ -134,2 +135,3 @@
 #define strtoull                       _strtoui64
+#endif

@@ -4839,3 +4841,3 @@

-#if _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
 #define DISABLE_CONST_COND_CHECK \\
EOF
# fix invalid compiler flags
sed -i.bak -e "s/-wd[0-9]\{4,4\}//g" $(grep -l "\-wd[0-9]\{4,4\}" $(find -name CMakeLists.txt))

#mkdir -p build_test && cmake.exe -GNinja -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DDISABLE_TESTING:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_test -LH && echo OK; rm -rf build_test

#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# #wl-showstatus build &&
# #make -Cbuild_win &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
#    echo OK

#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DWITH_EXPAT:BOOL=OFF -DWITH_ODBC:BOOL=OFF -DWITH_ICU:BOOL=OFF -DWITH_ICU_FORCE_STATIC:BOOL=OFF -DWITH_RE2:BOOL=ON -DWITH_RE2_FORCE_STATIC:BOOL=OFF -DWITH_STEMMER:BOOL=OFF -DWITH_STEMMER_FORCE_STATIC:BOOL=OFF -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DDISABLE_TESTING:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK

#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DMYSQL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/mariadb -DMYSQL_LIBRARY:STRING="-lmariadb" -DDISABLE_TESTING:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 #-DDISTR=windows
 #-DWITH_STEMMER:BOOL=OFF 
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DMYSQL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/mariadb -DMYSQL_LIBRARY:STRING="-lmariadb" -DDISABLE_TESTING:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 #wl-showstatus build &&
 #ninja -Cbuild_static &&
 #wl-showstatus build &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



