export NAME="AWS SDK for C++"
export STATUS=
export URL=https://github.com/aws/aws-sdk-cpp
export BASENAME=aws-sdk-cpp
export DESCRIPTION="The AWS SDK for C++ provides a modern C++ (version C++ 11 or later) interface for Amazon Web Services (AWS). It is meant to be performant and fully functioning with low- and high-level SDKs, while minimizing dependencies and providing platform portability (Windows, OSX, Linux, and mobile)."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.10.26
#export VERSIONDATE=20221209
#export VERSION=1.10.28
#export VERSIONDATE=20221213
#export VERSION=1.10.29
#export VERSIONDATE=20221214
#export VERSION=1.10.30
#export VERSIONDATE=20221215
#export VERSION=1.10.31
#export VERSIONDATE=20221216
#export VERSION=1.10.34
#export VERSIONDATE=20221220
#export VERSION=1.10.35
#export VERSIONDATE=20221221
#export VERSION=1.10.36
#export VERSIONDATE=20221222
#export VERSION=1.10.37
#export VERSIONDATE=20221223
#export VERSION=1.10.38
#export VERSIONDATE=20221224
#export VERSION=1.10.39
#export VERSIONDATE=20221228
#export VERSION=1.10.40
#export VERSIONDATE=20221229
#export VERSION=1.10.41
#export VERSIONDATE=20221230
#export VERSION=1.10.42
#export VERSIONDATE=20221231
#export VERSION=1.10.43
#export VERSIONDATE=20230104
#export VERSION=1.10.45
#export VERSIONDATE=20230105
#export VERSION=1.10.46
#export VERSIONDATE=20230106
#export VERSION=1.10.47
#export VERSIONDATE=20230107
#export VERSION=1.10.48
#export VERSIONDATE=20230110
#export VERSION=1.10.49
#export VERSIONDATE=20230111
#export VERSION=1.10.50
#export VERSIONDATE=20230112
#export VERSION=1.10.51
#export VERSIONDATE=20230113
#export VERSION=1.10.52
#export VERSIONDATE=20230114
#export VERSION=1.10.53
#export VERSIONDATE=20230118
#export VERSION=1.10.54
#export VERSIONDATE=20230119
#export VERSION=1.10.55
#export VERSIONDATE=20230120
#export VERSION=1.10.56
#export VERSIONDATE=20230121
#export VERSION=1.10.57
#export VERSIONDATE=20230124
#export VERSION=1.11.1
#export VERSIONDATE=20230125
#export VERSION=1.11.2
#export VERSIONDATE=20230126
#export VERSION=1.11.3
#export VERSIONDATE=20230127
#export VERSION=1.11.4
#export VERSIONDATE=20230128
#export VERSION=1.11.5
#export VERSIONDATE=20230131
#export VERSION=1.11.6
#export VERSIONDATE=20230201
#export VERSION=1.11.8
#export VERSIONDATE=20230202
#export VERSION=1.11.9
#export VERSIONDATE=20230203
#export VERSION=1.11.0
#export VERSIONDATE=20230204
export VERSION=1.11.11
export VERSIONDATE=20230207
wl-showstatus --package-version
export DEPENDENCIES=aws-c-common,aws-c-sdkutils,aws-crt-cpp,openssl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/aws/aws-sdk-cpp/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/aws/aws-sdk-cpp/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION

touch crt/aws-crt-cpp/CMakeLists.txt
  
#grep -wi add_library $(find -name CMakeLists.txt -or -name '*.cmake')
#mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_test -LH && echo OK; rm -rf build_test

#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-std=c++11" -S. -Bbuild_static &&
 #-DUSE_OPENSSL:BOOL=ON 
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-std=c++11" -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 #wl-showstatus build &&
 #ninja -Cbuild_static &&
 #wl-showstatus build &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 #ninja -Cbuild_static library/install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



