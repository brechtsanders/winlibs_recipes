export NAME="GGI (General Graphics Interface)"
export STATUS=
#export URL=http://www.ggi-project.org/
#export URL=http://ibiblio.org/ggicore/packages/
export URL=http://ibiblio.org/ggicore/packages/libggi.html
export BASENAME=ggi
export DESCRIPTION="GGI stands for General Graphics Interface, and it is a project that aims to develop a reliable, stable and fast graphics system that works everywhere. We want to allow any program using GGI to run on any platform, requiring at most a recompile."
export CATEGORY=graphics
export TYPE=library
export VERSION=2.2.2
export VERSIONDATE=20120412
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/ggi/files/bundle/ ggi- -bundle.src.tar.bz2"
export DOWNLOADURL="http://sourceforge.net/projects/ggi/files/bundle/ GGI-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/ggi/bundle/GGI-$VERSION/ggi-$VERSION-bundle.src.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfj $TARBALLDIR/$BASENAME/ggi-$VERSION-bundle.src.tar.bz2
cd ggi-$VERSION-bundle
# fix missing fd_set
for F in libgii-*/include/ggi/internal/gii.h; do
mv $F $F.bak &&
echo "#include <winsock2.h>" > $F &&
cat $F.bak >> $F
done
sed -i.bak -e "s/\(#if defined(__WIN32__)\) \&\& defined(_MSC_VER)/\1/" build_libgii/include/ggi/system.h
wl-showstatus configure &&
 mkdir -p build_libgii
 cd build_libgii &&
 $(ls -1d ../libgii-*)/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM -disable-linux-mouse --disable-linux-kbd --disable-linux-joy --disable-linux-evdev --disable-x --without-x &&
 #--enable-pcjoy
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 cd .. &&
 wl-showstatus build-install &&
 make -Cbuild_libgii install-strip &&
    echo OK
wl-showstatus configure &&
 mkdir -p build_libggi
 cd build_libggi &&
 $(ls -1d ../libggi-*)/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x --without-x &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 cd .. &&
 wl-showstatus build-install &&
 make -Cbuild_libggi install-strip &&
    echo OK
wl-showstatus configure &&
 mkdir -p build_libggimisc
 cd build_libggimisc &&
 $(ls -1d ../libggimisc-*)/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x --without-x &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 cd .. &&
 wl-showstatus build-install &&
 make -Cbuild_libggimisc install-strip &&
    echo OK
wl-showstatus configure &&
 mkdir -p build_libggiwmh
 cd build_libggiwmh &&
 $(ls -1d ../libggiwmh-*)/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x --without-x &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 cd .. &&
 wl-showstatus build-install &&
 make -Cbuild_libggiwmh install-strip &&
    echo OK

  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
  
cd libgii-*

cd libggi-*
####configure: error: Either wrong include path is used or LibGII is not properly installed on the system. You need LibGII for building LibGGI. Please compile LibGII first.

wl-showstatus configure &&
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm CMakeCache.txt &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX . &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf ggi-$VERSION-bundle



####See also: https://sourceforge.net/projects/ggivnc/
