export NAME="Neovim"
export STATUS=
export URL=https://github.com/neovim/neovim
export BASENAME=neovim
export DESCRIPTION="Neovim is a project that seeks to aggressively refactor Vim"
export CATEGORY=office
export TYPE=application
#export VERSION=0.4.4
#export VERSIONDATE=20200818
#export VERSION=0.5.0
#export VERSIONDATE=20210703
#export VERSION=0.5.1
#export VERSIONDATE=20210927
#export VERSION=0.6.0
#export VERSIONDATE=20211201
#export VERSION=0.6.1
#export VERSIONDATE=20220101
#export VERSION=0.7.0
#export VERSIONDATE=20220415
#export VERSION=0.7.2
#export VERSIONDATE=20220627
#export VERSION=0.8.0
#export VERSIONDATE=20221001
#export VERSION=0.8.1
#export VERSIONDATE=20221114
#export VERSION=0.8.2
#export VERSIONDATE=20221230
#export VERSION=0.8.3
#export VERSIONDATE=20230202
#export VERSION=0.9.0
#export VERSIONDATE=20230407
#export VERSION=0.9.1
#export VERSIONDATE=20230529
#export VERSION=0.9.2
#export VERSIONDATE=20230907
#export VERSION=0.9.4
#export VERSIONDATE=20231010
#export VERSION=0.9.5
#export VERSIONDATE=20231230
#export VERSION=0.10.0
#export VERSIONDATE=20240516
#export VERSION=0.10.1
#export VERSIONDATE=20240724
#export VERSION=0.10.2
#export VERSIONDATE=20241003
export VERSION=0.10.3
export VERSIONDATE=20241222
wl-showstatus --package-version
export DEPENDENCIES=libiconv,gettext,msgpack-c,luv,tree-sitter,libtermkey,libvterm,lpeg,libdl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/neovim/neovim/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/neovim/neovim/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/nvim/CMakeLists.txt (version >= 0.10.0)
patch -ulbf src/nvim/CMakeLists.txt << EOF
@@ -728,3 +728,3 @@
 add_custom_target(nvim_runtime_deps)
-if(WIN32)
+if(MSVC)
   # Copy DLLs and third-party tools to bin/ and install them along with nvim
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPREFER_LUA:BOOL=OFF -DLUA_INCLUDE_DIR:PATH=$(${PKG_CONFIG:-pkg-config} --cflags-only-I luajit | sed -e "s/^\s*-I//") -S. -Bbuild_win &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -llua/" build_win/build.ninja &&
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed $(${PKG_CONFIG:-pkg-config} --libs-only-l luajit)/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



