export NAME="build2"
export STATUS=
export URL=https://build2.org/
export BASENAME=build2
export DESCRIPTION="build2 is an open source (MIT), cross-platform build toolchain that aims to approximate Rust Cargo's convenience for developing and packaging C/C++ projects while providing more depth and flexibility, especially in the build system. build2 is a hierarchy of tools consisting of a general-purpose build system, package manager (for package consumption), and project manager (for project development). It is primarily aimed at C/C++ projects as well as mixed-language projects involving one of these languages (see bash and rust modules, for example)."
export CATEGORY=
export TYPE=library
#export VERSION=0.13.0
#export VERSIONDATE=20201226
#export VERSION=0.14.0
#export VERSIONDATE=20211019
#export VERSION=0.15.0
#export VERSIONDATE=20220729
#export VERSION=0.16.0
#export VERSIONDATE=20230704
export VERSION=0.17.0
export VERSIONDATE=20240618
####terminate called after throwing an instance of 'butl::invalid_basic_path<char>'  what():  invalid filesystem path
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://download.build2.org/ build2-toolchain-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://download.build2.org/$VERSION/build2-toolchain-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/build2-toolchain-$VERSION.tar.xz
cd build2-toolchain-$VERSION
# fix missing unique_ptr in libbutl/libbutl/process.cxx
mv libbutl/libbutl/process.cxx libbutl/libbutl/process.cxx.bak &&
echo "#include <memory>" > libbutl/libbutl/process.cxx &&
cat libbutl/libbutl/process.cxx.bak >> libbutl/libbutl/process.cxx
# fix build2/libbuild2/cc/gcc.cxx (version >= 0.14.0)
patch -ulbf build2/libbuild2/cc/gcc.cxx << EOF
@@ -3,2 +3,3 @@

+#include <sys/stat.h>
 #include <libbuild2/scope.hxx>
@@ -336,6 +337,11 @@
       {
-        dir_path d (l, b, (e != string::npos ? e - b : e));
+        struct stat fileinfo;
+        string entry (l, b, (e != string::npos ? e - b : e));
+        // Skip this entry if it is not an existing directory
+        if (stat(entry.c_str(), &fileinfo) == 0 && S_ISDIR(fileinfo.st_mode)) {
+          dir_path d (entry);

-        if (find (r.begin (), r.end (), d.normalize ()) == r.end ())
-          r.emplace_back (move (d));
+          if (find (r.begin (), r.end (), d.normalize ()) == r.end ())
+            r.emplace_back (move (d));
+        }

EOF
# fix undeclared unique_ptr in libbutl/libbutl/process.cxx (version >= 0.14.0)
mv libbutl/libbutl/process.cxx libbutl/libbutl/process.cxx.bak &&
echo "#include <memory>" > libbutl/libbutl/process.cxx &&
cat libbutl/libbutl/process.cxx.bak >> libbutl/libbutl/process.cxx
# fix missing linker flags
sed -i.bak -e "s/-lpthread/& -Wl,--as-needed -limagehlp/" build2/bootstrap.sh
wl-showstatus build &&
 make -Cbuild2 -f bootstrap.gmake CXX=${CXX:-g++} &&
 build2/build2/b-boot.exe config.cxx=g++ config.bin.lib=shared config.install.root=$INSTALLPREFIX configure &&
 build2/build2/b-boot.exe config.cxx=g++ config.bin.lib=shared config.install.root=$INSTALLPREFIX dist &&
    echo OK

 mkdir -p build_win &&
 cd build_win &&
 ../build2/build2/b-boot.exe config.cxx=g++ config.bin.lib=shared config.install.root=$INSTALLPREFIX config.install.data_root=root/stage config.bin.suffix=-stage configure &&
    echo OK
    
 cd build2 &&
 build2/b-boot.exe config.cxx=g++ config.bin.lib=shared config.install.root=$INSTALLPREFIX configure &&
 
wl-showstatus build &&
 ./build.sh --install-dir $INSTALLPREFIX ${CXX:-g++} -- -Wl,--as-needed -limagehlp &&
    echo OK

#$COMSPEC //C "build-mingw.bat --local --make --install-dir $(cygpath -m $INSTALLPREFIX) $(cygpath -m $(dirname $(dirname $(which gcc))))"
$COMSPEC //C "build-mingw.bat --local --make $(cygpath -w $(which gcc.exe))"
 #./build.sh --install-dir $INSTALLPREFIX g++ &&
 ##./build.sh --install-dir $INSTALLPREFIX g++ --make mingw32-make -j 8 &&
 ##imagehlp
 #   echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf build2-toolchain-$VERSION



