export NAME="NEKTAR++"
export STATUS=
export URL=https://www.nektar.info/
export BASENAME=nektar
export DESCRIPTION="Nektar++ is a tensor product based finite element package designed to allow one to construct efficient classical low polynomial order h-type solvers (where h is the size of the finite element) as well as higher p-order piecewise polynomial order solvers."
export CATEGORY=math,science
export TYPE=library
#export VERSION=3.0.1
#export VERSIONDATE=20200925
#export VERSION=4.4.0
#export VERSIONDATE=20181102
#export VERSION=4.4.1
#export VERSIONDATE=20181105
#export VERSION=5.0.0
#export VERSIONDATE=20191120
#export VERSION=5.0.1
#export VERSIONDATE=20200816
#export VERSION=5.0.2
#export VERSIONDATE=20210421
#export VERSION=5.0.3
#export VERSIONDATE=20210818
#export VERSION=5.1.0
#export VERSIONDATE=20211124
export VERSION=5.2.0
export VERSIONDATE=20220823
wl-showstatus --package-version
#export DEPENDANCIES=boost,openblas,lapack,loki
export DEPENDANCIES=boost,openblas,openblas,loki
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=MIT
#export DOWNLOADURL="https://www.nektar.info/downloads/ nektar- -tar-gz/"
export DOWNLOADURL="https://gitlab.nektar.info/nektar/nektar/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.nektar.info/downloads/file/nektar-$(echo $VERSION|tr . -)-tar-gz/
export DOWNLOADSOURCEURL=https://gitlab.nektar.info/nektar/nektar/-/archive/v$VERSION/nektar-v$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://www.nektar.info/downloads/file/nektar-source-tar-xz-3/
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/index.html $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#mv $TARBALLDIR/$BASENAME/index.html $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfj $TARBALLDIR/$BASENAME/nektar-v$VERSION.tar.bz2
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd nektar++-$VERSION
cd nektar-v$VERSION
# fix cmake/ThirdPartyFFTW.cmake (version >= 4.4.1)
patch -ulbf cmake/ThirdPartyFFTW.cmake << EOF
@@ -63,5 +62,0 @@
-    GET_FILENAME_COMPONENT(X \${CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES} ABSOLUTE)
-    GET_FILENAME_COMPONENT(Y \${FFTW_INCLUDE_DIR} ABSOLUTE)
-    IF (NOT Y MATCHES ".*\${X}.*")
-        INCLUDE_DIRECTORIES(SYSTEM \${FFTW_INCLUDE_DIR})
-    ENDIF()
EOF
wl-showstatus configure &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNEKTAR_USE_WIN32_LAPACK:BOOL=OFF -DNEKTAR_USE_ARPACK:BOOL=ON -DNEKTAR_USE_BLAS_LAPACK:BOOL=ON -DNEKTAR_USE_OPENBLAS:BOOL=ON -DNEKTAR_USE_FFTW:BOOL=ON -DNEKTAR_USE_HDF5:BOOL=OFF -DTHIRDPARTY_BUILD_LOKI:BOOL=OFF -DNEKTAR_BUILD_DEMOS:BOOL=ON -DNEKTAR_BUILD_UNIT_TESTS:BOOL=OFF -DNEKTAR_BUILD_TESTS:BOOL=OFF -DNEKTAR_TEST_ALL:BOOL=OFF . &&
 wl-showstatus build-install &&
 make install/strip &&
    echo OK

#export BUILDDEPENDANCIES=cmake
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
#    echo OK

#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -D documentation=true . build_static &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -D documentation=true . build_shared &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_static install/strip &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_shared install/strip &&
#    echo OK && find . -name '*.a'

# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf nektar++-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf nektar-v$VERSION



