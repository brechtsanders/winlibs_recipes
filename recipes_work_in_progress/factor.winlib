export NAME="Factor"
export STATUS=
export URL=http://factorcode.org/
export BASENAME=factor
export DESCRIPTION="The Factor programming language combines powerful language features with a full-featured library. The implementation is fully compiled for performance, while still supporting interactive development. Factor applications are portable between all common platforms. Factor can deploy stand-alone applications on all platforms."
export CATEGORY=
export TYPE=library
#export VERSION=0.95
#export VERSIONDATE=20130313
#export VERSION=0.96
#export VERSIONDATE=20130421
#export VERSION=0.97
#export VERSIONDATE=20141103
#export VERSION=0.98
#export VERSIONDATE=20180731
export VERSION=0.99
export VERSIONDATE=20230825
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=license.txt
export LICENSETYPE=BSD
export DOWNLOADURL="http://downloads.factorcode.org/releases/ factor-src-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.factorcode.org/releases/$VERSION/factor-src-$VERSION.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
mkdir -p $BASENAME-$VERSION
unzip -oq $TARBALLDIR/$BASENAME/factor-src-$VERSION.zip -d $BASENAME-$VERSION
cd $BASENAME-$VERSION/factor

# remove -mno-cygwin compiler option
mv vm/Config.windows vm/Config.windows.bak &&
sed -e "s/-mno-cygwin//" vm/Config.windows.bak > vm/Config.windows

## fix missing files
#echo "#include <windows.h>" > vm/os-windows.32.hpp 
#echo "#include <windows.h>" > vm/mvm-windows.hpp

make -fGNUmakefile

build-support/factor.sh report

git clone git://factorcode.org/git/factor.git
cd factor
build-support/factor.sh update

  wl-showstatus configure &&
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION(`gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/"`)" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && rm -rf $BASENAME-$VERSION



