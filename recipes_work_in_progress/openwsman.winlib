export NAME="OpenWSMAN"
export STATUS=
export URL=https://openwsman.github.io/
#export URL=https://sourceforge.net/projects/openwsman/
#export URL=https://github.com/Openwsman/openwsman
export BASENAME=openwsman
export DESCRIPTION="OpenWSMAN is an open source implementation of WS-Management; enabling the in-band management of Linux/uni*/Windows platforms. Openwsman supports the generic WS-Management protocol as well as specific protocol extensions for the Common Information Model (CIM)"
export CATEGORY=system
export TYPE=library
#export VERSION=2.6.3
#export VERSIONDATE=20160803
#export VERSION=2.6.4
#export VERSIONDATE=20171107
#export VERSION=2.6.5
#export VERSIONDATE=20171129
#export VERSION=2.6.8
#export VERSIONDATE=20181012
#export VERSION=2.6.9
#export VERSIONDATE=20181122
#export VERSION=2.6.10
#export VERSIONDATE=20190917
#export VERSION=2.6.11
#export VERSIONDATE=20190917
#export VERSION=2.6.13
#export VERSIONDATE=20210408
#export VERSION=2.7.0
#export VERSIONDATE=20200525
#export VERSION=2.7.1
#export VERSIONDATE=20210408
#export VERSION=2.7.2
#export VERSIONDATE=20221229
export VERSION=2.8.0
export VERSIONDATE=20241207
wl-showstatus --package-version
export DEPENDENCIES=openssl,libxml2,libcurl,swig,libgcrypt,pthreads,sblim-sfcc
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/Openwsman/openwsman/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/Openwsman/openwsman/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE* COPYRIGHT* configure* CMakeLists.txt
wl-showstatus configure &&
 mkdir -p m4 &&
 touch README &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION

#wl-showstatus configure &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_LIBCIM:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_CUNIT_TESTS:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DDISABLE_PLUGINS:BOOL=OFF -DDISABLE_SERVER:BOOL=OFF -DENABLE_EVENTING_SUPPORT:BOOL=ON -DENABLE_IPV6:BOOL=OFF -DUSE_PAM:BOOL=OFF -DBUILD_CSHARP:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DBUILD_PERL:BOOL=OFF -DBUILD_PYTHON:BOOL=OFF -DBUILD_RUBY:BOOL=OFF -DBUILD_RUBY_GEM:BOOL=OFF -DBUILD_SWIG_PLUGIN:BOOL=ON . -LH &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_IPV6:BOOL=OFF -DDISABLE_SERVER:BOOL=OFF -DUSE_PAM:BOOL=OFF -DBUILD_CSHARP:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DBUILD_PERL:BOOL=OFF -DBUILD_PYTHON:BOOL=OFF -DBUILD_RUBY:BOOL=OFF -DBUILD_RUBY_GEM:BOOL=OFF -DBUILD_CUNIT_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



