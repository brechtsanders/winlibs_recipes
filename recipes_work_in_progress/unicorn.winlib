export NAME="Unicorn"
export STATUS=
export URL=https://github.com/unicorn-engine/unicorn
export BASENAME=unicorn
export DESCRIPTION="Unicorn CPU emulator framework (ARM, AArch64, M68K, Mips, Sparc, X86)"
export CATEGORY=virtualization
export TYPE=library
#export VERSION=1.0.3
#export VERSIONDATE=20210808
#export VERSION=2.0.0
#export VERSIONDATE=20220708
#export VERSION=2.0.1
#export VERSIONDATE=20221102
#export VERSION=2.0.1.post1
#export VERSIONDATE=20221123
export VERSION=2.1.0
export VERSIONDATE=20240922
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
#export LICENSEFILE=LICENSE
export LICENSETYPE=
export DOWNLOADURL="https://github.com/unicorn-engine/unicorn/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/unicorn-engine/unicorn/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix CMakeLists.txt (version >= 1.0.3)
##sed -i.bak -e "s/\(if (\)\(\${UC_RET}\)/\1\"\2\"/" CMakeLists.txt
#patch -ulbf CMakeLists.txt << EOF
#@@ -90,2 +90,4 @@
#     endif()
#+elseif(MINGW)
#+    set(UNICORN_TARGET_ARCH "i386")
# else()
#EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DUNICORN_BUILD_SAMPLES:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$(pwd)/msvc/unicorn" -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DUNICORN_BUILD_SAMPLES:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$(pwd)/msvc/unicorn" -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



