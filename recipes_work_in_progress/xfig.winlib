export NAME="xfig"
export STATUS=
export URL=http://www.xfig.org/
#export URL=http://mcj.sourceforge.net/
#export URL=https://sourceforge.net/projects/mcj/
export BASENAME=xfig
export DESCRIPTION="Xfig is a free and open source vector graphics editor which runs under the X Window System on most UNIX-compatible platforms."
export CATEGORY=graphics
export TYPE=library
#export VERSION=3.2.5c
#export VERSIONDATE=20160301
#export VERSION=3.2.7a
#export VERSIONDATE=20200412
#export VERSION=3.2.7b
#export VERSIONDATE=20200412
#export VERSION=3.2.8
#export VERSIONDATE=20201221
#export VERSION=3.2.8a
#export VERSIONDATE=20210328
#export VERSION=3.2.8b
#export VERSIONDATE=20210823
export VERSION=3.2.9
export VERSIONDATE=20230824
wl-showstatus --package-version
export DEPENDENCIES=libjpeg,libpng,libxpm,libxaw,libx11,freetype2
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=sys_wait_h
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=freeware
#export DOWNLOADURL="http://www.xfig.org/art17.html"
#export DOWNLOADURL="https://sourceforge.net/projects/mcj/files/mcj-source/ xfig. .full.tar.gz"
#export DOWNLOADURL="https://sourceforge.net/projects/mcj/files/ xfig-full- .tar.gz"
export DOWNLOADURL="https://sourceforge.net/projects/mcj/files/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/mcj/mcj-source/xfig.$VERSION.full.tar.gz
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/mcj/xfig-full-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/mcj/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/xfig.$VERSION.full.tar.gz
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/xfig-full-$VERSION.tar.xz
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd xfig.$VERSION
cd $BASENAME-$VERSION
# fix missing caddr_t and already defined RECT in src/resources.h (version >= 3.2.8)
mv src/resources.h src/resources.h.bak &&
cat > src/resources.h << EOF
#define caddr_t void*
#include <windows.h>
#define RECT XFIG_RECT
EOF
cat src/resources.h.bak >> src/resources.h
# fix src/fig.h (version >= 3.2.8)
patch -ulbf src/fig.h << EOF
@@ -44,3 +44,5 @@
 #include <stdlib.h> /* info autoconf: On Darwin, stdio.h is a prerequisite. */
+#ifndef _WIN32
 #include <pwd.h>
+#endif
 #include <signal.h>
EOF
# fix src/d_text.c (version >= 3.2.8)
patch -ulbf src/d_text.c << EOF
@@ -46,3 +46,5 @@

+#ifndef _WIN32
 #include <sys/wait.h>  /* waitpid() */
+#endif
 #include <limits.h>
EOF
# fix redefinition of min() in src/e_update.c (version >= 3.2.8a)
patch -ulbf src/e_update.c << EOF
@@ -62,3 +62,5 @@

+#ifndef min
 #define min(a,b) ((a)<(b)) ? (a) : (b)
+#endif
 #define up_part(lv,rv,mask) \\
EOF
wl-showstatus configure
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-x --without-xaw3d &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-i18n --without-x --without-xaw3d CFLAGS="-I$MINGWPREFIX/win32ports/include -I$MINGWPREFIX/include/freetype2" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#wl-showstatus configure &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf xfig.$VERSION



