export NAME="Kerberos V5"
export STATUS=
export URL=http://web.mit.edu/kerberos/
export BASENAME=krb5
export DESCRIPTION="Kerberos is a network authentication protocol. It is designed to provide strong authentication for client/server applications by using secret-key cryptography."
export CATEGORY=security
export TYPE=library
#export VERSION=1.6.3
#export VERSION=1.7.2
#export VERSIONDATE=20110525
####configure: error: cannot find res_nsearch or res_search
#export VERSION=1.8
#export VERSIONDATE=20100303
#export VERSION=1.8.1
#export VERSIONDATE=20100410
#export VERSION=1.8.2
#export VERSIONDATE=20100611
#export VERSION=1.8.3
#export VERSIONDATE=20100805
####configure: error: Shared libraries are not yet supported on this platform
#export VERSION=1.8.4
#export VERSIONDATE=20110525
#export VERSION=1.8.5
#export VERSIONDATE=20111105
#export VERSION=1.8.6
#export VERSIONDATE=20120207
#export VERSION=1.9
#export VERSIONDATE=20101223
#export VERSION=1.9.1
#export VERSIONDATE=20110506
#export VERSION=1.9.2
#export VERSIONDATE=20111103
#export VERSION=1.9.3
#export VERSIONDATE=20120207
#export VERSION=1.9.4
#export VERSIONDATE=20120622
#export VERSION=1.9.5
#export VERSIONDATE=20130427
#export VERSION=1.10
#export VERSIONDATE=20120128
#export VERSION=1.10.1
#export VERSIONDATE=20120309
#export VERSION=1.10.2
#export VERSIONDATE=20120601
#export VERSION=1.10.3
#export VERSIONDATE=20120809
#export VERSION=1.10.4
#export VERSIONDATE=20130302
#export VERSION=1.10.5
#export VERSIONDATE=20130419
#export VERSION=1.10.6
#export VERSIONDATE=20130607
#export VERSION=1.10.7
#export VERSIONDATE=20131107
#export VERSION=1.11
#export VERSIONDATE=20121218
#export VERSION=1.11.1
#export VERSIONDATE=20130222
#export VERSION=1.11.2
#export VERSIONDATE=20130413
#export VERSION=1.11.3
#export VERSIONDATE=20130604
#export VERSION=1.11.4
#export VERSIONDATE=20131107
#export VERSION=1.11.5
#export VERSIONDATE=20140123
#export VERSION=1.11.6
#export VERSIONDATE=20150226
#export VERSION=1.12
#export VERSIONDATE=20131211
#export VERSION=1.12.1
#export VERSIONDATE=20140116
#export VERSION=1.12.2
#export VERSIONDATE=20140813
#export VERSION=1.12.3
#export VERSIONDATE=20150221
#export VERSION=1.12.4
#export VERSIONDATE=20150602
#export VERSION=1.13
#export VERSIONDATE=20141016
#export VERSION=1.13.1
#export VERSIONDATE=20150213
#export VERSION=1.13.2
#export VERSIONDATE=20150512
#export VERSION=1.13.4
#export VERSIONDATE=20160308
#export VERSION=1.13.5
#export VERSIONDATE=20160420
#export VERSION=1.13.6
#export VERSIONDATE=20160728
#export VERSION=1.13.7
#export VERSIONDATE=20160917
#export VERSION=1.14
#export VERSIONDATE=20160106
#export VERSION=1.14.1
#export VERSIONDATE=20160301
#export VERSION=1.14.2
#export VERSIONDATE=20160420
#export VERSION=1.14.3
#export VERSIONDATE=20160725
#export VERSION=1.14.4
#export VERSIONDATE=20160915
#export VERSION=1.14.5
#export VERSIONDATE=20170306
#export VERSION=1.14.6
#export VERSIONDATE=20170926
#export VERSION=1.15
#export VERSIONDATE=20161205
#export VERSION=1.15.1
#export VERSIONDATE=20170306
#export VERSION=1.15.2
#export VERSIONDATE=20170926
#export VERSION=1.15.3
#export VERSIONDATE=20180504
#export VERSION=1.15.4
#export VERSIONDATE=20181102
#export VERSION=1.15.5
#export VERSIONDATE=20190108
#export VERSION=1.16
#export VERSIONDATE=20171206
#export VERSION=1.16.1
#export VERSIONDATE=20180504
#export VERSION=1.16.2
#export VERSIONDATE=20181102
#export VERSION=1.16.3
#export VERSIONDATE=20190108
#export VERSION=1.16.4
#export VERSIONDATE=20191212
#export VERSION=1.17
#export VERSIONDATE=20190109
#export VERSION=1.17.1
#export VERSIONDATE=20191212
#export VERSION=1.17.2
#export VERSIONDATE=20201118
#export VERSION=1.18
#export VERSIONDATE=20200213
#export VERSION=1.18.1
#export VERSIONDATE=20200414
#export VERSION=1.18.2
#export VERSIONDATE=20200523
#export VERSION=1.18.3
#export VERSIONDATE=20201118
#export VERSION=1.18.4
#export VERSIONDATE=20210725
#export VERSION=1.18.5
#export VERSIONDATE=20220315
#export VERSION=1.19
#export VERSIONDATE=20210202
#export VERSION=1.19.1
#export VERSIONDATE=20210219
#export VERSION=1.19.2
#export VERSIONDATE=20210725
#export VERSION=1.19.3
#export VERSIONDATE=20220315
#export VERSION=1.19.4
#export VERSIONDATE=20221116
#export VERSION=1.20
#export VERSIONDATE=20220527
export VERSION=1.20.1
export VERSIONDATE=20221116
####configure: error: cannot find res_nsearch or res_search
wl-showstatus --package-version
export DEPENDENCIES=openssl,libverto,mman-win32,libdl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=MIT
#export DOWNLOADURL="http://web.mit.edu/kerberos/dist/ krb5- -signed.tar"
export DOWNLOADURL="http://web.mit.edu/kerberos/dist/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://web.mit.edu/kerberos/dist/kfw/2.6/kfw-2.6.5/kfw-2-6-5-sdk.zip
#export DOWNLOADSOURCEURL=http://web.mit.edu/kerberos/dist/kfw/2.6/kfw-2.6.5/kfw-2-6-5.zip
#export DOWNLOADSOURCEURL=http://web.mit.edu/kerberos/dist/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION-signed.tar
export DOWNLOADSOURCEURL=http://web.mit.edu/kerberos/dist/krb5/$(echo $VERSION|sed "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/krb5-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xf $TARBALLDIR/$BASENAME/$BASENAME-$VERSION-signed.tar $BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#rm $BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION/src
# fix redefinition of dirent
patch -ulbf util/support/plugins.c << EOF
--- util/support/plugins.c  2010-04-23 03:30:48 +0200
+++ util/support/plugins.c  2010-12-23 10:41:36 +0100
@@ -84,3 +84,3 @@

-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
 struct dirent {
EOF
# fix support for shared libraries
patch -ulbf config/shlib.conf << EOF
--- config/shlib.conf  2010-04-16 23:45:22 +0200
+++ config/shlib.conf  2010-12-23 09:16:26 +0100
@@ -414,7 +414,7 @@

-*-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu)
+*-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | *mingw*)
        PICFLAGS=-fPIC
-       SHLIBVEXT='.so.\$(LIBMAJOR).\$(LIBMINOR)'
-       SHLIBSEXT='.so.\$(LIBMAJOR)'
-       SHLIBEXT=.so
+       SHLIBVEXT='.\$(LIBMAJOR).\$(LIBMINOR).dll'
+       SHLIBSEXT='.\$(LIBMAJOR).dll'
+       SHLIBEXT=.dll
        # Linux ld doesn't default to stuffing the SONAME field...
@@ -425,3 +425,3 @@
        SHLIB_EXPORT_FILE_DEP=binutils.versions
-       RPATH_FLAG='-Wl,--enable-new-dtags -Wl,-rpath -Wl,'
+       RPATH_FLAG='-Wl,-rpath -Wl,'
        # For cases where we do have dependencies on other libraries
EOF
# fix redefinition of ssize_t in include/win-mac.h
patch -ulbf include/win-mac.h << EOF
--- include/win-mac.h  2010-12-03 01:05:44 +0100
+++ include/win-mac.h  2010-12-23 10:51:48 +0100
@@ -89,2 +89,3 @@
 #endif
+#ifndef __MINGW32__
 #ifdef _WIN64
@@ -94,2 +95,3 @@
 #endif
+#endif
 #define SSIZE_T_DEFINED
EOF
# fix missing files
mkdir -p win32fix/sys win32fix/netinet
touch win32fix/keyutils.h win32fix/sys/wait.h win32fix/termios.h
echo "#include <winsock2.h>" > win32fix/netinet/in.h
# fix util/support/threads.c
mv util/support/threads.c util/support/threads.c.bak
echo "#include <windows.h>" > util/support/threads.c
cat util/support/threads.c.bak >> util/support/threads.c
# fix missing u_int in util/support/mkstemp.c
mv util/support/mkstemp.c util/support/mkstemp.c.bak
echo "typedef unsigned int u_int;" > util/support/mkstemp.c
cat util/support/mkstemp.c.bak >> util/support/mkstemp.c
## fix redefinitions in include/win-mac.h
#mv include/win-mac.h include/win-mac.h.bak
#cat > include/win-mac.h << EOF
##define _WIN32_WINNT 0x0500
##include <windows.h>
#EOF
# fix missing GetGuiResources in util/et/com_err.c
mv util/et/com_err.c util/et/com_err.c.bak
echo "#define _WIN32_WINNT 0x0500" > util/et/com_err.c
cat util/et/com_err.c.bak >> util/et/com_err.c
# avoid missing symbols error in util/export-check.pl
mv util/export-check.pl util/export-check.pl.bak
sed -e "s/^\( *exit(1);\)/#\1/" util/export-check.pl.bak > util/export-check.pl
# fix redefinition of BOOL in
mv util/ss/ss_internal.h util/ss/ss_internal.h.bak
sed -e "s/\(typedef char BOOL;\)/\/\/\1/" util/ss/ss_internal.h.bak > util/ss/ss_internal.h
# fix missing uint32_t in util/support/gmt_mktime.c (version >= 1.16)
mv util/support/gmt_mktime.c util/support/gmt_mktime.c.bak &&
echo "#include <stdint.h>" > util/support/gmt_mktime.c &&
cat util/support/gmt_mktime.c.bak >> util/support/gmt_mktime.c
# fix util/support/dir_filenames.c (version >= 1.17.1)
patch -ulbf util/support/dir_filenames.c << EOF
@@ -32,2 +32,3 @@

+#include <windows.h>
 #include "k5-platform.h"
@@ -89,3 +90,3 @@
     do {
-        if (add_filename(&fnames, &n_fnames, &ffd.cFileName) != 0) {
+        if (add_filename(&fnames, &n_fnames, (const char *)&ffd.cFileName) != 0) {
             k5_free_filenames(fnames);
EOF
# fix missing SecureZeroMemory in include/k5-platform.h (version >= 1.17.1)
patch -ulbf include/k5-platform.h << EOF
@@ -1014,3 +1014,7 @@
 #ifdef _WIN32
+#ifdef __MINGW32__
+# define zap(ptr, len) memset(ptr, 0, len)
+#else
 # define zap(ptr, len) SecureZeroMemory(ptr, len)
+#endif
 #elif defined(__STDC_LIB_EXT1__)
EOF
# avoid signals in util/ss/listen.c (version >= 1.17.1)
patch -ulbf util/ss/listen.c << EOF
@@ -72,2 +72,3 @@
     ss_data *old_info = current_info;
+#ifndef __MINGW32__
 #ifdef POSIX_SIGNALS
@@ -80,2 +81,3 @@
 #endif
+#endif

@@ -84,2 +86,3 @@

+#ifndef __MINGW32__
 #ifdef POSIX_SIGNALS
@@ -93,2 +96,3 @@
 #endif
+#endif

@@ -96,2 +100,3 @@

+#ifndef __MINGW32__
 #ifdef POSIX_SIGNALS
@@ -104,2 +109,3 @@
 #endif
+#endif

@@ -107,2 +113,3 @@

+#ifndef __MINGW32__
 #ifdef POSIX_SIGNALS
@@ -112,3 +119,5 @@
 #endif
+#endif
     while(!info->abort) {
+#ifndef __MINGW32__
 #ifdef POSIX_SIGNALS
@@ -125,2 +134,3 @@
 #endif
+#endif

@@ -133,2 +143,3 @@

+#ifndef __MINGW32__
 #ifdef POSIX_SIGNALS
@@ -138,2 +149,3 @@
 #endif
+#endif

@@ -158,2 +170,3 @@
 egress:
+#ifndef __MINGW32__
 #ifdef POSIX_SIGNALS
@@ -163,2 +176,3 @@
 #endif
+#endif
     memcpy(listen_jmpb, old_jmpb, sizeof(jmp_buf));
EOF
# fix missing getuid/geteuid/getgid/getegid in util/support/secure_getenv.c (version >= 1.18)
patch -ulbf util/support/secure_getenv.c << EOF
@@ -82,3 +82,3 @@
     }
-#else
+#elif !defined(_WIN32)
     if (getuid() != geteuid())
@@ -95,3 +95,3 @@
     }
-#else
+#elif !defined(_WIN32)
     if (!elevated_privilege && getgid() != getegid())
EOF
# fix missing SIGCONT in util/ss/listen.c (version >= 1.18.2)
patch -ulbf util/ss/listen.c << EOF
@@ -119,3 +119,3 @@
             csig = osig;
-#else
+#elif defined(SIGCONT)
         old_sig_cont = sig_cont;
@@ -135,3 +135,3 @@
         sigaction(SIGCONT, &csig, (struct sigaction *)0);
-#else
+#elif defined(SIGCONT)
         (void) signal(SIGCONT, sig_cont);
EOF
# fix lib/krb5/os/read_pwd.c (version >= 1.18.3)
patch -ulbf lib/krb5/os/read_pwd.c << EOF
@@ -85,6 +85,6 @@
 typedef struct {
-    char *pwd_prompt;
-    char *pwd_prompt2;
+    const char *pwd_prompt;
+    const char *pwd_prompt2;
     char *pwd_return_pwd;
-    int  *pwd_size_return;
+    unsigned int  *pwd_size_return;
 } pwd_params;
@@ -120,3 +120,3 @@
                       char                * password,
-                      int                 * pwsize)
+                      unsigned int        * pwsize)
 {
@@ -201,4 +201,9 @@

+#ifdef _WIN32
+static long long CALLBACK
+read_pwd_proc(HWND hdlg, unsigned int msg, unsigned long long wParam, long long lParam)
+#else
 static int CALLBACK
 read_pwd_proc(HWND hdlg, UINT msg, WPARAM wParam, LPARAM lParam)
+#endif
 {
@@ -245,3 +250,3 @@
     char *return_pwd;
-    int *size_return;
+    unsigned int *size_return;
 {
EOF
# fix lib/krb5/rcache/rc_dfl.c (version >= 1.18.3)
patch -ulbf lib/krb5/rcache/rc_dfl.c << EOF
@@ -69,3 +69,3 @@

-    *fd_out = open(O_CREAT | O_RDWR | O_BINARY, 0600);
+    *fd_out = open(fname, O_CREAT | O_RDWR | O_BINARY, 0600);
     ret = (*fd_out < 0) ? errno : 0;
EOF
# fix lib/krb5/krb5_libinit.c (version >= 1.18.3)
patch -ulbf lib/krb5/krb5_libinit.c << EOF
@@ -4,3 +4,3 @@

-#if defined(_WIN32) || defined(USE_CCAPI)
+#if (defined(_WIN32) && !defined(__MINGW32__)) || defined(USE_CCAPI)
 #include "stdcc.h"
EOF
# fix already defined interface in lib/krb5/krb/plugin.c (version >= 1.18.2)
sed -i.bak -e "s/\binterface\b/iface/g" lib/krb5/krb/plugin.c
# avoid detection of missing res_search
sed -i.bak -e "s/as_fn_error\(.*cannot find res_nsearch or res_search\)/echo\1/" configure
wl-showstatus configure &&
 make -f Makefile.in prep-windows &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --disable-shared CFLAGS="-I`pwd`/win32fix" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared CFLAGS="-I`pwd`/win32fix" LDFLAGS="-Wl,--export-all -Wl,--as-needed -lws2_32 -lpthread" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared --with-readline --with-system-verto CFLAGS="-DWIN32 -I$(pwd)/win32fix" LDFLAGS="-Wl,--as-needed -lws2_32 -lpthread" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared --with-readline --with-system-verto CFLAGS="-DWIN32 -I$(pwd)/win32fix -I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lws2_32 -lgdi32 -ldnsapi -lpthread -lregex -lmman" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared --with-readline --with-system-verto CFLAGS="-DWIN32 -I$(pwd)/win32fix -I$MINGWPREFIX/include/mman-win32 -I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -lws2_32 -lgdi32 -ldnsapi -lpthread -lregex -lmman -ldl" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --disable-shared --with-readline --with-system-verto CFLAGS="-DWIN32 -I$(pwd)/win32fix -I$MINGWPREFIX/include/mman-win32 -I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -lws2_32 -lgdi32 -ldnsapi -lpthread -lregex -lmman -ldl" &&
 echo "#undef HAVE_CHMOD" >> include/autoconf.h &&
 #echo "#undef HAVE_MKSTEMP" >> include/autoconf.h &&
 echo "#undef HAVE_NETINET_IN_H" >> include/autoconf.h &&
 echo "#undef POSIX_SIGTYPE" >> include/autoconf.h &&
 echo "#undef USE_SIGPROCMASK" >> include/autoconf.h &&
 wl-showstatus build &&
 make lib/krb5_32.def &&
 echo krb5_make_fulladdr >> lib/krb5_32.def &&
 #make WARN_CFLAGS= &&
 ( make WARN_CFLAGS= || make -j1 WARN_CFLAGS= || ( cp -u util/et/libcom_err.3.0.dll lib/ && make WARN_CFLAGS= )) &&
 wl-showstatus build-install &&
 make install &&
    echo OK
####configure: error: cannot find res_nsearch or res_search
####configure: WARNING: shared libraries not supported on this architecture
####configure: error: must enable one of shared or static libraries
####nm: libkrb5support.0.1.dll: No symbols
####make -j1 LDFLAGS="-Wl,--export-all -Wl,--as-needed -lpthread -luser32"
#to do: maybe just get the Windows binaries and SDK
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && rm -rf $BASENAME-$VERSION
####TO DO: properly fix missing SecureZeroMemory (-lkernel32 ?)
####TO DO: see src/windows/README
####make prep-windows



cd $BASENAME-$VERSION/src

# fix windows/kfwlogon/kfwlogon.h (version >= 1.19.3)
patch -ulbf windows/kfwlogon/kfwlogon.h << EOF
@@ -49,3 +49,3 @@

-typedef int errcode_t;
+typedef long errcode_t;

EOF

cp -u include/krb5/krb5.hin include/krb5/krb5.h
echo "#define HAVE_VSNPRINTF" >> include/autoconf.h

${CC:-gcc} -c -o windows/lib/loadfuncs.o windows/lib/loadfuncs.c -Iwindows/include &&
ar cru libkrb5libwin.a windows/lib/loadfuncs.o &&
( echo "EXPORTS" && nm -f posix --defined-only -p libkrb5libwin.a | sed -n -e "s/^_*\([^ ]*\) T .*$/\1/p" ) > libkrb5libwin.def &&
${CC:-gcc} -shared -s -mwindows -def libkrb5libwin.def -o krb5libwin.dll libkrb5libwin.a -Wl,--out-implib,libkrb5libwin.dll.a &&

${CC:-gcc} -c -o windows/kfwlogon/kfwcommon.o windows/kfwlogon/kfwcommon.c -Iwindows/include -Iinclude -Iutil/et
${CC:-gcc} -c -o windows/kfwlogon/kfwcpcc.o windows/kfwlogon/kfwcpcc.c -Iwindows/include -Iinclude -Iutil/et
${CC:-gcc} -c -o windows/kfwlogon/kfwlogon.o windows/kfwlogon/kfwlogon.c -Iwindows/include -Iinclude -Iutil/et

${CC:-gcc} -c -o windows/ms2mit/mit2ms.o windows/ms2mit/mit2ms.c -Iinclude &&
${CC:-gcc} -s -o windows/ms2mit/mit2ms.exe windows/ms2mit/mit2ms.o &&
${CC:-gcc} -c -o windows/ms2mit/ms2mit.o windows/ms2mit/ms2mit.c -Iinclude &&
${CC:-gcc} -s -o windows/ms2mit/ms2mit.exe windows/ms2mit/ms2mit.o &&
    echo OK
