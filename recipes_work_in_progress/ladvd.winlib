export NAME="ladvd"
export STATUS=
export URL=http://code.google.com/p/ladvd/
export BASENAME=ladvd
export DESCRIPTION="ladvd sends LLDP (Link Layer Discovery Protocol) advertisements on all available interfaces. This makes connected hosts visible on managed switches. By default it will run as a privilege-separated daemon. Additional protocols can be enabled. Optionally a list of interfaces which ladvd should utilize can be supplied."
export CATEGORY=communications
export TYPE=library
#export VERSION=1.0.4
#export VERSIONDATE=20130615
#export VERSION=1.1.0
#export VERSIONDATE=20150416
#export VERSION=1.1.1
#export VERSIONDATE=20170610
export VERSION=1.1.2
export VERSIONDATE=20180313
####configure: error: Unsupported operating system
####checking for uname... no
####configure: error: required function missing
wl-showstatus --package-version
#export DEPENDANCIES=winpcap,libevent
export DEPENDANCIES=libpcap,libevent
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=
export LICENSETYPE=
#export DOWNLOADURL="http://code.google.com/p/ladvd/downloads/list"
export DOWNLOADURL="https://github.com/sspans/ladvd/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ladvd.googlecode.com/files/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/sspans/ladvd/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p winfix/sys winfix/arpa
echo "#include <winsock2.h>" > winfix/sys/socket.h
touch winfix/arpa/inet.h winfix/sys/utsname.h winfix/sys/ioctl.h winfix/sys/sysctl.h winfix/sys/uio.h winfix/sys/un.h
cat > winfix/pwd.h << EOF
EOF
cat > winfix/grp.h << EOF
EOF
cat > winfix/syslog.h << EOF
EOF
wl-showstatus configure &&
autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
(
# fix configure
patch -ulbf configure << EOF
--- configure  2012-02-18 16:39:22 +0100
+++ configure  2013-06-15 09:37:06 +0200
@@ -15112,3 +15112,3 @@
     *)
-       as_fn_error "Unsupported operating system" "\$LINENO" 5
+       as_echo "Unsupported operating system" "\$LINENO" 5
        ;;
@@ -16739,3 +16739,3 @@
 else
-  as_fn_error "required header missing" "\$LINENO" 5
+  as_echo "required header missing" "\$LINENO" 5
 fi
@@ -17097,3 +17097,3 @@
 else
-  as_fn_error "required header missing" "\$LINENO" 5
+  as_echo "required header missing" "\$LINENO" 5
 fi
@@ -17419,4 +17419,3 @@

-for ac_func in asprintf memcpy memset snprintf strdup strerror uname \\
-               socketpair vsyslog
+for ac_func in asprintf memcpy memset snprintf strdup strerror
 do :
EOF
) &&
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I`pwd`/winfix -I$MINGWPREFIX/include/pcap" &&
 wl-showstatus build-install &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 make install-strip &&
    echo OK && ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



