export NAME="libcrafter"
export STATUS=
export URL=https://code.google.com/p/libcrafter/
export BASENAME=libcrafter
export DESCRIPTION="Libcrafter is a high level library for C++ designed to make easier the creation and decoding of network packets. It is able to craft or decode packets of most common network protocols, send them on the wire, capture them and match requests and replies. It enables the creation of networking tools in a few lines with an interface very similar to Scapy. A packet is described as layers that you stack one upon the other. Fields of each layer have useful default values that you can overload."
export CATEGORY=
export TYPE=library
#export VERSION=0.3
#export VERSIONDATE=20140811
export VERSION=1.0
export VERSIONDATE=20200716
wl-showstatus --package-version
#export DEPENDANCIES=winpcap
export DEPENDANCIES=libpcap
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="https://code.google.com/p/libcrafter/downloads/list crafter-"
#export DOWNLOADURL="https://github.com/pellegre/libcrafter/releases crafter-"
export DOWNLOADURL="https://github.com/pellegre/libcrafter/releases version-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://libcrafter.googlecode.com/files/crafter-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/pellegre/libcrafter/archive/version-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/crafter-$VERSION.tar.gz
#cd crafter-$VERSION
tar xfz $TARBALLDIR/$BASENAME/version-$VERSION.tar.gz
cd libcrafter-version-$VERSION/libcrafter
mkdir -p winfix/arpa winfix/netinet winfix/sys winfix/linux winfix/net
touch winfix/arpa/inet.h winfix/arpa/nameser.h winfix/arpa/nameser_compat.h winfix/netinet/in.h winfix/sys/socket.h winfix/netdb.h winfix/resolv.h winfix/features.h winfix/linux/if_packet.h winfix/linux/if_ether.h winfix/sys/ioctl.h winfix/net/if.h
# fix configure for winpcap
patch -ulbf configure << EOF
--- configure  2014-06-27 22:40:32.000000000 +0200
+++ configure  2014-08-11 18:27:44.000000000 +0200
@@ -15184,5 +15184,5 @@
        PCAPLIB="-L\$withval -lpcap"
-     elif test -f \$withval/include/pcap.h -a \
-              -f \$withval/include/net/bpf.h -a \
-              -f \$withval/lib/libpcap.a; then
+     elif test -f \$withval/include/pcap/pcap.h -a \
+              -f \$withval/include/pcap/bpf.h -a \
+              -f \$withval/lib/libpcap.dll.a; then
        owd=`pwd`
EOF
wl-showstatus configure &&
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 mkdir -p m4 &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lws2_32" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-libpcap=$MINGWPREFIX CFLAGS="-I$MINGWPREFIX/include/pcap -I$(pwd)/winfix" CXXFLAGS="-I$MINGWPREFIX/include/pcap -I$(pwd)/winfix" &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf libcrafter-version-1.0-$VERSION



