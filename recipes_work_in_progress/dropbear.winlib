export NAME="Dropbear SSH"
export STATUS=
export URL=https://matt.ucc.asn.au/dropbear/dropbear.html
export BASENAME=dropbear
export DESCRIPTION="Dropbear is a relatively small SSH server and client."
export CATEGORY=security
export TYPE=application
#export VERSION=2014.66
#export VERSIONDATE=20141203
#export VERSION=2015.67
#export VERSIONDATE=20150128
####checking for socklen_t equivalent... configure: error: Cannot find a type to use in place of socklen_t
#export VERSION=2015.68
#export VERSIONDATE=20150811
#export VERSION=2015.69
#export VERSIONDATE=20151128
#export VERSION=2015.70
#export VERSIONDATE=20151128
#export VERSION=2015.71
#export VERSIONDATE=20151203
#export VERSION=2016.72
#export VERSIONDATE=20160310
#export VERSION=2016.73
#export VERSIONDATE=20160319
#export VERSION=2016.74
#export VERSIONDATE=20160722
#export VERSION=2016.75
#export VERSIONDATE=20170519
####fake-rfc2553.h:71:8: error: redefinition of 'struct in6_addr'
#export VERSION=2017.75
#export VERSIONDATE=20170519
####compat.c:165:10: warning: implicit declaration of function 'fork' [-Wimplicit-function-declaration]
#export VERSION=2018.76
#export VERSIONDATE=20180228
#export VERSION=2019.77
#export VERSIONDATE=20190324
#export VERSION=2019.78
#export VERSIONDATE=20190328
#export VERSION=2020.79
#export VERSIONDATE=20200616
#export VERSION=2020.80
#export VERSIONDATE=20200627
export VERSION=2020.81
export VERSIONDATE=20201030
####checking for socklen_t equivalent... configure: error: Cannot find a type to use in place of socklen_t
wl-showstatus --package-version
export DEPENDANCIES=zlib
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT-Style
export DOWNLOADURL="https://matt.ucc.asn.au/dropbear/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://matt.ucc.asn.au/dropbear/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
mkdir -p winfix/sys winfix/arpa winfix/netinet
echo "#include <winsock2.h>" > winfix/sys/socket.h
#echo "#define _WIN32_WINNT 0x0501" >> winfix/sys/socket.h
echo "#include <ws2tcpip.h>" >> winfix/sys/socket.h
touch winfix/sys/ioctl.h
touch winfix/sys/un.h
touch winfix/sys/wait.h
touch winfix/sys/resource.h
touch winfix/pwd.h
touch winfix/grp.h
touch winfix/termios.h
touch winfix/syslog.h
touch winfix/netdb.h
touch winfix/arpa/inet.h
touch winfix/netinet/ip.h
wl-showstatus configure &&
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-openpty --disable-syslog --disable-shadow CFLAGS="-I$(pwd)/winfix" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-openpty --disable-syslog --disable-shadow --disable-bundled-libtom CFLAGS="-I$(pwd)/winfix" &&
 echo "#define HAVE_STRUCT_IN6_ADDR 1" >> config.h &&
 echo "#define HAVE_STRUCT_SOCKADDR_IN6 1" >> config.h &&
 echo "#define HAVE_GAI_STRERROR 1" >> config.h &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt
#wl-showstatus configure
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



