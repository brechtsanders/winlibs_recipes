export NAME="Liblinphone"
export STATUS=
export URL=http://linphone.org/
export BASENAME=liblinphone
export DESCRIPTION="Liblinphone is a high-level SIP library integrating all calling and instant messaging features into an unified easy-to-use API. It is the cross-platform VoIP library on which the Linphone application is based on, and that anyone can use to add audio and video calls or instant messaging capabilities to an application."
export CATEGORY=communication
export TYPE=library
#export VERSION=5.2.25
#export VERSIONDATE=20230222
#export VERSION=5.2.27
#export VERSIONDATE=20230227
#export VERSION=5.2.28
#export VERSIONDATE=20230227
#export VERSION=5.2.29
#export VERSIONDATE=20230303
#export VERSION=5.2.30
#export VERSIONDATE=20230308
#export VERSION=5.2.32
#export VERSIONDATE=20230311
#export VERSION=5.2.37
#export VERSIONDATE=20230318
#export VERSION=5.2.39
#export VERSIONDATE=20230323
#export VERSION=5.2.40
#export VERSIONDATE=20230324
#export VERSION=5.2.41
#export VERSIONDATE=20230327
#export VERSION=5.2.42
#export VERSIONDATE=20230328
#export VERSION=5.2.45
#export VERSIONDATE=20230330
#export VERSION=5.2.46
#export VERSIONDATE=20230331
#export VERSION=5.2.47
#export VERSIONDATE=20230404
#export VERSION=5.2.49
#export VERSIONDATE=20230406
#export VERSION=5.2.50
#export VERSIONDATE=20230407
#export VERSION=5.2.51
#export VERSIONDATE=20230414
#export VERSION=5.2.52
#export VERSIONDATE=20230426
#export VERSION=5.2.53
#export VERSIONDATE=20230428
#export VERSION=5.2.54
#export VERSIONDATE=20230503
#export VERSION=5.2.57
#export VERSIONDATE=20230506
#export VERSION=5.2.58
#export VERSIONDATE=20230510
#export VERSION=5.2.59
#export VERSIONDATE=20230511
#export VERSION=5.2.61
#export VERSIONDATE=20230517
#export VERSION=5.2.62
#export VERSIONDATE=20230523
#export VERSION=5.2.64
#export VERSIONDATE=20230525
#export VERSION=5.2.65
#export VERSIONDATE=20230530
export VERSION=5.2.66
export VERSIONDATE=20230531
wl-showstatus --package-version
export DEPENDENCIES=bctoolbox,libortp,libbzrtp,belr,belcard,mediastreamer2,lime,pystache,zlib,libjpeg-turbo,libxml2,xerces,sqlite3,soci
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=AGPL
export DOWNLOADURL="https://github.com/BelledonneCommunications/liblinphone/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/BelledonneCommunications/liblinphone/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION

#grep -wi add_library $(find -name CMakeLists.txt -or -name '*.cmake')
#mkdir -p build_test && PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} cmake.exe -G"MSYS Makefiles" -DENABLE_UPDATE_CHECK:BOOL=OFF -DENABLE_DAEMON:BOOL=OFF -DENABLE_FLEXIAPI:BOOL=OFF -DENABLE_LDAP:BOOL=OFF -DTURBOJPEG_INCLUDE_DIRS:PATH=$MINGWPREFIX/share/libjpeg-turbo/include -DTURBOJPEG_LIBRARIES:PATH="-lturbojpeg" -DENABLE_TUTORIALS:BOOL=OFF -DENABLE_DOC:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_test -LH && echo OK; rm -rf build_test

#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# #wl-showstatus build &&
# #cmake.exe --build build_win &&
# #ninja -Cbuild_win &&
# wl-showstatus build-install &&
# #cmake.exe --install build_win --strip &&
# #cmake.exe --build build_win --target "install/strip" &&
# ninja -Cbuild_win install/strip &&
#    echo OK

#export BUILDDEPENDENCIES=cmake,ninja
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_SHARED:BOOL=OFF -DENABLE_UPDATE_CHECK:BOOL=OFF -DENABLE_DAEMON:BOOL=OFF -DENABLE_FLEXIAPI:BOOL=OFF -DENABLE_LDAP:BOOL=OFF -DTURBOJPEG_INCLUDE_DIRS:PATH=$MINGWPREFIX/share/libjpeg-turbo/include -DTURBOJPEG_LIBRARIES:PATH="-lturbojpeg" -DENABLE_TUTORIALS:BOOL=OFF -DENABLE_DOC:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_SHARED:BOOL=OFF -DENABLE_UPDATE_CHECK:BOOL=OFF -DENABLE_DAEMON:BOOL=OFF -DENABLE_FLEXIAPI:BOOL=OFF -DENABLE_LDAP:BOOL=OFF -DTURBOJPEG_INCLUDE_DIRS:PATH=$MINGWPREFIX/share/libjpeg-turbo/include -DTURBOJPEG_LIBRARIES:PATH="-lturbojpeg" -DENABLE_TUTORIALS:BOOL=OFF -DENABLE_DOC:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 #wl-showstatus build &&
 #cmake.exe --build build_static &&
 #ninja -Cbuild_static &&
 #wl-showstatus build &&
 #cmake.exe --build build_shared &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 #cmake.exe --install build_static --strip &&
 #cmake.exe --build build_static --target "install/strip" &&
 #cmake.exe --build build_static --target "library/install/strip" &&
 PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_static install/strip &&
 #ninja -Cbuild_static library/install/strip &&
 wl-showstatus build-install &&
 #cmake.exe --install build_shared --strip &&
 #cmake.exe --build build_shared --target "install/strip" &&
 PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_shared install/strip &&
    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



