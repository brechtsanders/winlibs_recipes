export NAME="KF5"
export STATUS=
export URL=https://kde.org/products/frameworks/
export BASENAME=kf5-plasma-desktop
export DESCRIPTION="The KDE Frameworks, currently version 5 or KF5, is a collection of 80 libraries that are built on top of the Qt application framework and provides everything from utility classes to asynchronous and network-transparent I/O to additional data model and widgets to desktop-centric integration. If Qt itself doesn't provide a certain functionality or feature, chances are, there's a KDE Framework for that."
export CATEGORY=framework
export TYPE=library
#export VERSION=5.17.2
#export VERSIONDATE=20191103
#export VERSION=5.17.3
#export VERSIONDATE=20191112
#export VERSION=5.17.4
#export VERSIONDATE=20191203
#export VERSION=5.17.5
#export VERSIONDATE=20200108
#export VERSION=5.18.0
#export VERSIONDATE=20200207
#export VERSION=5.18.2
#export VERSIONDATE=20200226
#export VERSION=5.18.3
#export VERSIONDATE=20200311
#export VERSION=5.18.4
#export VERSIONDATE=20200401
#export VERSION=5.18.5
#export VERSIONDATE=20200506
#export VERSION=5.18.6
#export VERSIONDATE=20200929
#export VERSION=5.19.1
#export VERSIONDATE=20200617
#export VERSION=5.19.2
#export VERSIONDATE=20200624
#export VERSION=5.19.3
#export VERSIONDATE=20200707
#export VERSION=5.19.4
#export VERSIONDATE=20200729
#export VERSION=5.19.5
#export VERSIONDATE=20200901
#export VERSION=5.20.1
#export VERSIONDATE=20201020
#export VERSION=5.20.3
#export VERSIONDATE=20201111
export VERSION=5.20.4
export VERSIONDATE=20201204
wl-showstatus --package-version
export DEPENDENCIES=qt,libkf5plasma-framework,libkf5i18n,libkf5newstuff,libkf5notifications,libkf5notifyconfig,libkf5wallet,libkf5runner,libkf5globalaccel,libkf5declarative,libkf5dbusaddons,libkf5activities,libkf5activities-stats,libkf5config,libkf5kdelibs4support,libkf5doctools,gettext
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,extra-cmake-modules
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
export LICENSEFILE=COPYING.LIB
#export LICENSEFILE=COPYING.LGPL-2
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://kde.org/announcements/ plasma- .php"
export DOWNLOADURL="https://download.kde.org/stable/plasma/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://download.kde.org/stable/plasma/$VERSION/plasma-desktop-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/plasma-desktop-$VERSION.tar.xz
cd plasma-desktop-$VERSION
# fix missing Qt5X11Extras
patch -ulbf CMakeLists.txt << EOF
@@ -30 +29,0 @@
-    X11Extras
EOF
patch -ulbf applets/kimpanel/backend/ibus/CMakeLists.txt << EOF
@@ -5 +5 @@
-if(IBUS_FOUND AND GLIB2_FOUND AND GIO_FOUND AND GOBJECT_FOUND)
+if(IBUS_FOUND AND GLIB2_FOUND AND GIO_FOUND AND GOBJECT_FOUND AND NOT MINGW)
EOF

#mkdir -p build_test && cd build_test && cmake.exe -G"MSYS Makefiles" .. -LH && echo OK; cd ..; rm -rf build_test
#rm -rf CMakeCache.txt CMakeFiles; PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#
mkdir -p build_win &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=TRUE -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK

#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf plasma-desktop-$VERSION



