export NAME="signon"
export STATUS=
#export URL=http://code.google.com/p/accounts-sso/
#export URL=https://01.org/gsso/
export URL=https://gitlab.com/accounts-sso
export BASENAME=signon
export DESCRIPTION="Accounts and SSO (Single Sign-On) framework for Linux and POSIX based platforms. API to perform the authentication."
export CATEGORY=
export TYPE=library
#export VERSION=8.49
#export VERSIONDATE=20130330
#export VERSION=8.50
#export VERSIONDATE=20130410
#export VERSION=8.51
#export VERSIONDATE=20130427
#export VERSION=8.52
#export VERSIONDATE=20130606
#export VERSION=8.53
#export VERSIONDATE=20130822
#export VERSION=8.54
#export VERSIONDATE=20130906
#export VERSION=8.55
#export VERSIONDATE=20131031
export VERSION=8.56
export VERSIONDATE=20140213
####lib/signond/SignOn/abstract-access-control-manager.h:34:24: fatal error: QDBusMessage: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=qt
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://code.google.com/p/accounts-sso/downloads/list"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://accounts-sso.googlecode.com/files/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# avoid chmod in lib/signond/SignOn/misc.cpp
patch -ulbf lib/signond/SignOn/misc.cpp << EOF
--- lib/signond/SignOn/misc.cpp  2014-02-13 15:49:02 +0100
+++ lib/signond/SignOn/misc.cpp  2014-02-14 21:06:58 +0100
@@ -42,12 +42,14 @@
     if (stat(userHomePath, &fileInfo) != 0)
         return false;

+#ifndef __MINGW32__
     QByteArray filePathArray = filePath.toLocal8Bit();
     const char *filePathStr = filePathArray.constData();
     if (chown(filePathStr, fileInfo.st_uid , fileInfo.st_gid) != 0) {
         BLAME() << "chown of" << filePathStr << "failed, errno:" << errno;
         return false;
     }
+#endif

     return true;
 }
EOF
wl-showstatus configure &&
QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ $MINGWPREFIX/qt/bin/qmake PREFIX=$INSTALLPREFIX CONFIG+=cryptsetup &&
 wl-showstatus build-install &&
 QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ make -j1 &&
 #QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ make release -j1 &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



