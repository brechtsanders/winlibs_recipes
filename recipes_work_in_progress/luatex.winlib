export NAME="LuaTeX"
export STATUS=
export URL=https://www.luatex.org/
export BASENAME=luatex
export DESCRIPTION="LuaTeX is an extended version of pdfTeX using Lua as an embedded scripting language. The LuaTeX project's main objective is to provide an open and configurable variant of TeX while at the same time offering downward compatibility."
export CATEGORY=fileformat
export TYPE=library
export VERSION=1.24.0
export VERSIONDATE=20251005
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://gitlab.lisn.upsaclay.fr/texlive/luatex/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION

./build-shared.sh --build=$BUILDPLATFORM --host=$RUNPLATFORM --shared -parallel --jit &&
    echo OK

  ./configure --help 2> /dev/null
  cat meson_options.txt 2> /dev/null
  head COPYING* LICENSE* LICENCE* COPYRIGHT*
  ls -ld COPYING* LICENSE* LICENCE* COPYRIGHT* configure* m4 CMakeLists.txt cmake xmake.lua Makefile GNUmakefile setup.py scons SConscript SConstruct meson.build meson_options.txt meson.options.txt *.pro *.proj *.sln BUILD.gn .gn build 2> /dev/null

wl-showstatus build &&
 make &&
 #make CC=${CC:-gcc} CXX=${CXX:-g++} LD=${LD:-ld} AR=${AR:-ar} &&
    echo OK

#GCCFLAG_ASNEEDED=$(echo "int main () { return 0; }"|gcc -xc - -Wl,--as-needed &>/dev/null && echo "-Wl,--as-needed")
#GCCFLAG_ASNEEDED=$(if gcc --help -v 2>/dev/null | grep -q " --as-needed"; then echo "-Wl,--as-needed"; fi)

wl-showstatus configure &&
 #wl-showstatus preconfigure &&
 #mkdir -p m4 &&
 ##libtoolize -f -i -c &&
 ##intltoolize -f -c &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 ## allow building shared libraries when using clang
 #if ${CC:-gcc} --version|grep -q "^clang" && ! ${CC:-gcc} --help|grep auto-import; then
 # sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" configure
 # #sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" $(find -name configure)
 #fi &&
 ## fix confusion between MSVC and clang
 #if ${CC:-gcc} --version|grep -q "^clang"; then
 # sed -i.bak2 -e "s/\b\(cl\)\(\*\)/\1.exe\2/g; s/\(ld_shlibs\)=no/\1yes/" configure
 #fi &&
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 source/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM -enable-static --enable-shared \
    --enable-cxx-runtime-hack \
    --enable-silent-rules \
    --disable-all-pkgs \
    --enable-largefile \
    --disable-xetex \
    --disable-ptex \
    --disable-ipc \
    --disable-native-texlive-build \
    --disable-dump-share \
    --disable-web-progs \
    --enable-coremp \
    --enable-web2c  \
    --enable-luatex --enable-luajittex --with-system-luajit --enable-luahbtex --enable-luajithbtex \
    --with-system-cairo \
    --with-system-pixman \
    --without-system-ptexenc \
    --without-system-kpathsea \
    --without-system-xpdf \
    --with-system-freetype \
    --with-system-freetype2 \
    --with-system-gd  \
    --with-system-libpng \
    --with-system-potrace \
    --with-system-pplib \
    --with-system-poppler \
    --with-system-gmp \
    --with-system-mpfi \
    --with-system-mpfr \
    --with-system-teckit \
    --with-system-zlib \
    --with-system-t1lib \
    --with-system-icu \
    --with-system-harfbuzz \
    --with-system-graphite \
    --with-system-zziplib \
    --with-mf-x-toolkit --without-x \
 &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
 #( make install-strip || ( make install && strip $INSTALLPREFIX/bin/*.{dll,exe} )) &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



