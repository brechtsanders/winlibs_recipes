export NAME="Bacula"
export STATUS=
export URL=https://www.bacula.org/
export BASENAME=bacula
export DESCRIPTION="Bacula is a set of computer programs that permits the system administrator to manage backup, recovery, and verification of computer data across a network of computers of different kinds. Bacula can also run entirely upon a single computer and can backup to various types of media, including tape and disk."
export CATEGORY=system
export TYPE=library
#export VERSION=11.0.6
#export VERSIONDATE=20220420
#export VERSION=13.0.0
#export VERSIONDATE=20220705
#export VERSION=13.0.1
#export VERSIONDATE=20220806
#export VERSION=13.0.2
#export VERSIONDATE=20230220
#export VERSION=13.0.3
#export VERSIONDATE=20230503
#export VERSION=13.0.4
#export VERSIONDATE=20240213
#export VERSION=15.0.2
#export VERSIONDATE=20240322
export VERSION=15.0.3
export VERSIONDATE=20250329
####configure: cannot find needed function.
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=AGPL
export DOWNLOADURL="https://sourceforge.net/projects/bacula/files/bacula/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/bacula/bacula/$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing fchdir in src/findlib/savecwd.c (version >= 13.0.0)
patch -ulbf src/findlib/savecwd.c << EOF
@@ -83,3 +83,7 @@
    if (m_fd >= 0) {
+#ifdef _WIN32
+      if (1) {
+#else
       if (fchdir(m_fd) != 0) {
+#endif
          berrno be;
EOF
# fix missing Dmsg in src/findlib/namedpipe.c (version >= 13.0.0)
patch -ulbf src/findlib/namedpipe.c << EOF
@@ -44,2 +44,4 @@
 # define Dmsg(level, ...) printf(__VA_ARGS__ )
+#else
+# define Dmsg(level, ...)
 #endif
EOF
# fix redefinition of strcasecmp in src/win32/compat/compat.h (version >= 13.0.0)
patch -ulbf src/win32/compat/compat.h << EOF
@@ -179,3 +179,5 @@

+#ifndef strcasecmp
 int strcasecmp(const char*, const char *);
+#endif
 int gettimeofday(struct timeval *, struct timezone *);
EOF
# don't abort because of missing fork in configure (version >= 11.0.6)
patch -ulbf configure << EOF
@@ -28892,3 +28892,3 @@
 else
-  echo 'configure: cannot find needed function.'; exit 1
+  echo 'configure: cannot find needed function.'

EOF
wl-showstatus configure &&
 #mkdir -p m4 &&
 ##intltoolize -f -c &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-client-only --without-x --without-systemd CFLAGS="-DHAVE_WIN32 -DHAVE_MINGW -D_POSIX_THREAD_SAFE_FUNCTIONS -I$PWD/src/win32/compat" CXXFLAGS="-DHAVE_WIN32 -DHAVE_MINGW -D_POSIX_THREAD_SAFE_FUNCTIONS -I$PWD/src/win32/compat" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-sqlite3=$MINGWPREFIX --with-postgresql=$MINGWPREFIX --without-x --without-systemd CFLAGS="-DHAVE_WIN32 -DHAVE_MINGW -D_POSIX_THREAD_SAFE_FUNCTIONS -I$PWD/src/win32/compat" CXXFLAGS="-DHAVE_WIN32 -DHAVE_MINGW -D_POSIX_THREAD_SAFE_FUNCTIONS -I$PWD/src/win32/compat" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 #--with-mysql=$MINGWPREFIX/include/mariadb 
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: bacula-gui



