export NAME="Chunk I/O"
export STATUS=
export URL=https://github.com/fluent/chunkio
export BASENAME=chunkio
export DESCRIPTION="Chunk I/O is a library to manage chunks of data in the file system and load in memory upon demand."
export CATEGORY=dataprocessing
export TYPE=library
export VERSION=1.1.6
export VERSIONDATE=20230522
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/fluent/chunkio/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/fluent/chunkio/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix CMakeLists.txt (version >= 1.1.6)
patch -ulbf CMakeLists.txt << EOF
@@ -73,2 +73,5 @@
   int main() {
+#ifdef _WIN32
+#error getpagesize() not available on Windows
+#endif
      getpagesize();
EOF
# fix include/chunkio/chunkio_compat.h (version >= 1.1.6)
patch -ulbf include/chunkio/chunkio_compat.h << EOF
@@ -44,3 +44,5 @@
 typedef SSIZE_T ssize_t;
+#ifndef __MINGW32__
 typedef unsigned mode_t;
+#endif

EOF
# fix for MinGW/MinGW-w64
sed -i.bak -e "s/_MSC_VER/_WIN32/" src/cio_utils.c tools/cio.c
## also allow building shared library
#sed -i.bak -e "s/^\(\s*\)\(add_library *(\)\([^ ]*\) *STATIC\(.*\)$/\1\2\3 STATIC\4\n\1\2\3_shared SHARED\4\n\1set_target_properties(\3_shared PROPERTIES OUTPUT_NAME \3)/" deps/crc32/CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCIO_LIB_STATIC:BOOL=ON -DCIO_LIB_SHARED:BOOL=ON -DCIO_TESTS:BOOL=OFF -S. -Bbuild_win &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lshlwapi -Ldeps\/crc32 -lcio-crc32/" build_win/build.ninja &&
 wl-showstatus build &&
 ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



