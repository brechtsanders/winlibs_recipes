export NAME="CCID"
export STATUS=
#export URL=http://pcsclite.alioth.debian.org/ccid.html
export URL=https://ccid.apdu.fr/
export BASENAME=ccid
export DESCRIPTION="This package provides the source code for a generic USB CCID (Chip/Smart Card Interface Devices) driver and ICCD (Integrated Circuit(s) Card Devices)."
export CATEGORY=security,hardware
export TYPE=library
#export VERSION=1.4.18
#export VERSIONDATE=20141108
#export VERSION=1.4.19
#export VERSIONDATE=20150513
#export VERSION=1.4.20
#export VERSIONDATE=20150811
#export VERSION=1.4.21
#export VERSIONDATE=20151023
#export VERSION=1.4.22
#export VERSIONDATE=20160110
#export VERSION=1.4.23
#export VERSIONDATE=20160420
#export VERSION=1.4.24
#export VERSIONDATE=20160523
#export VERSION=1.4.25
#export VERSIONDATE=20160930
#export VERSION=1.4.26
#export VERSIONDATE=20170108
#export VERSION=1.4.27
#export VERSIONDATE=20170522
#export VERSION=1.4.28
#export VERSIONDATE=20171011
#export VERSION=1.4.29
#export VERSIONDATE=20180221
#export VERSION=1.4.30
#export VERSIONDATE=20200309
#export VERSION=1.4.31
#export VERSIONDATE=20200309
#export VERSION=1.4.32
#export VERSIONDATE=20200422
#export VERSION=1.4.33
#export VERSIONDATE=20200626
#export VERSION=1.4.34
#export VERSIONDATE=20210124
#export VERSION=1.4.35
#export VERSIONDATE=20210726
#export VERSION=1.4.36
#export VERSIONDATE=20210830
#export VERSION=1.5.0
#export VERSIONDATE=20220127
#export VERSION=1.5.1
#export VERSIONDATE=20221114
#export VERSION=1.5.2
#export VERSIONDATE=20230201
#export VERSION=1.5.3
#export VERSIONDATE=20231026
#export VERSION=1.5.4
#export VERSIONDATE=20231030
#export VERSION=1.5.5
#export VERSIONDATE=20240105
export VERSION=1.6.0
export VERSIONDATE=20240602
####checking for termios.h... no
####configure: error: some header files not found
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://alioth.debian.org/frs/?group_id=30105"
export DOWNLOADURL="https://ccid.apdu.fr/files/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4111/ccid-1.4.18.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4132/ccid-1.4.19.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4140/ccid-1.4.20.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4148/ccid-1.4.21.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4162/ccid-1.4.22.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4169/ccid-1.4.23.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4171/ccid-1.4.24.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4187/ccid-1.4.25.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4205/ccid-1.4.26.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4218/ccid-1.4.27.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4230/ccid-1.4.28.tar.bz2
#export DOWNLOADSOURCEURL=https://ccid.apdu.fr/files/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://ccid.apdu.fr/files/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
wl-showstatus configure &&
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt
#wl-showstatus configure
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#./autogen.sh &&
#    echo OK



#export BUILDDEPENDENCIES=meson,ninja
#rm -f meson.options
#mkdir -p build_both &&
# wl-showstatus configure &&
# PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both . build_both &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## fix Python path issues in meson_exe
# #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
# ## fix executing shell scripts
# #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib \
# #PATH=$PYDIR:$PATH PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} \
# #ninja -Cbuild_both install/strip &&
# ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'
