export NAME="LCUI"
export STATUS=
export URL=https://github.com/lc-soft/LCUI/
export BASENAME=lcui
export DESCRIPTION="A small C library for building user interfaces with C, XML and CSS."
export CATEGORY=development
export TYPE=library
export VERSION=2.2.0
export VERSIONDATE=20210901
wl-showstatus --package-version
export DEPENDENCIES=libjpeg,libpng
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=libiconv
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/lc-soft/LCUI/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/lc-soft/LCUI/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd LCUI-$VERSION
# fix missing src/platform/resource.h
echo '#include "../../build/windows/LCUI/resource.h"' > src/platform/resource.h
# convert source files from UTF16 to UTF8
for F in build/windows/LCUI/resource.h build/windows/LCUI/LCUI.rc; do
 if file -i $F|grep -q "charset=utf-16le"; then
  mv $F $F.bak &&
  iconv -f utf-16le -t utf-8 $F.bak > $F
 fi
done
# fix include/LCUI/platform.h (version >= 2.2.0)
patch -ulbf include/LCUI/platform.h << EOF
@@ -57,3 +57,3 @@
                #define LCUI_APP_H <LCUI/platform/windows/uwp.h>
-       #else
+       #endif
                #define LCUI_EVENTS_H <LCUI/platform/windows/windows_events.h>
@@ -62,3 +62,2 @@
                #define LCUI_DISPLAY_H <LCUI/platform/windows/windows_display.h>-       #endif
 #else
EOF
# fix src/platform/windows/windows_events.c (version >= 2.2.0)
patch -ulbf src/platform/windows/windows_events.c << EOF
@@ -140,3 +140,3 @@
 {
-       WNDCLASSW wndclass;
+       WNDCLASS wndclass;
        ASSIGN(app, LCUI_AppDriver);
@@ -154,8 +154,8 @@
        wndclass.hIcon = LoadIcon(win.dll_instance,
-                                 MAKEINTRESOURCE(IDI_LCUI_ICON));
-       if (!RegisterClassW(&wndclass)) {
+                                 MAKEINTRESOURCE(IDC_ICON));
+       if (!RegisterClass(&wndclass)) {
                wchar_t str[256];
-               swprintf(str, 255, __FUNCTIONW__
-                        L": error code: %d\\n", GetLastError());
-               MessageBoxW(NULL, str, win.class_name, MB_ICONERROR);
+               swprintf(str, 255, "%s: error code: %d\\n",
+                        __FUNCTION__, GetLastError());
+               MessageBox(NULL, str, win.class_name, MB_ICONERROR);
                return NULL;
EOF
wl-showstatus configure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-pthread &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf LCUI-$VERSION



