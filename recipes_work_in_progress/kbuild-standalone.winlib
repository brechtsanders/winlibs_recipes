export NAME="kbuild-standalone"
export STATUS=
export URL=https://github.com/WangNan0/kbuild-standalone
export BASENAME=kbuild-standalone
export DESCRIPTION="Standalone kconfig and kbuild"
export CATEGORY=development
export TYPE=application
export VERSION=6.2
export VERSIONDATE=20231105
wl-showstatus --package-version
export DEPENDENCIES=mman-win32,ncurses
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/WangNan0/kbuild-standalone/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/WangNan0/kbuild-standalone/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix number of arguments to mkdir() in kconfig/confdata.c
sed -i.bak -e "s/\(mkdir(tmp\), *[0-9]*/\1/" kconfig/confdata.c
# fix missing err.h in unifdef/unifdef.c
#sed -i.bak -e "s?#include <err\.h>?//&?" unifdef/unifdef.c
# fix unifdef/unifdef.c (version >= 6.2)
patch -ulbf unifdef/unifdef.c << EOF
@@ -49,3 +49,12 @@
 #include <ctype.h>
+#ifdef _WIN32
+#define err(n, ...) fprintf(stderr, __VA_ARGS__)
+#define errx(n, ...) fprintf(stderr, __VA_ARGS__)
+#define warn(...) fprintf(stderr, __VA_ARGS__)
+#define warnx(...) fprintf(stderr, __VA_ARGS__)
+#define vwarnx(...) vfprintf(stderr, __VA_ARGS__)
+#define fchmod(...)
+#else
 #include <err.h>
+#endif
 #include <errno.h>
EOF
# fix missing strndup in kconfig/util.c
mv kconfig/util.c kconfig/util.c.bak
cat > kconfig/util.c << EOF
#include <stdlib.h>
#include <string.h>
char* strndup (const char *str, size_t maxlen)
{
  int l = strnlen(str, maxlen);
  char* s = (char*)malloc(l + 1);
  memcpy(s, str, l);
  s[l] = 0;
  return s;
}
EOF
cat kconfig/util.c.bak >> kconfig/util.c
## avoid ln
#sed -i.bak -e "s/ln -fsn \(.*;\)/cp -rf \1true;/" kbuild/Makefile.output
wl-showstatus preconfigure &&
 mkdir -p m4 &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 wl-showstatus configure &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 ## allow building shared libraries when using clang
 #if ${CC:-gcc} --version|grep -q "^clang" && ! ${CC:-gcc} --help|grep auto-import; then
 # sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" configure
 # #sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" $(find -name configure)
 #fi &&
 ## fix confusion between MSVC and clang
 #if ${CC:-gcc} --version|grep -q "^clang"; then
 # sed -i.bak2 -e "s/\b\(cl\)\(\*\)/\1.exe\2/g; s/\(ld_shlibs\)=no/\1yes/" configure
 #fi &&
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/ncurses -I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 wl-showstatus build &&
 PKG_CONFIG_PATH=$PWD${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} make -i HOSTCFLAGS="-I$MINGWPREFIX/include/ncurses -I$MINGWPREFIX/include/mman-win32" KBUILD_HOSTLDFLAGS="-Wl,--as-needed" KBUILD_HOSTLDLIBS="-lmman -lpcreposix -lncurses -lmenu -lpanel" &&
 wl-showstatus build-install &&
 PKG_CONFIG_PATH=$PWD${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} make install-strip &&
 #( make install-strip || ( make install && strip $INSTALLPREFIX/bin/*.{dll,exe} )) &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



