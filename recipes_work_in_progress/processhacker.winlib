#export NAME="processhacker"
#export STATUS=
#export URL=https://processhacker.sourceforge.io/
##export URL=https://github.com/processhacker/processhacker
#export BASENAME=processhacker
#export DESCRIPTION="A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware."
#export CATEGORY=
#export TYPE=library
#export VERSION=2.39
#export VERSIONDATE=20210611
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmakeconverter,cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
##export LICENSEFILE=COPYRIGHT.txt
#export LICENSEFILE=LICENSE.txt
#export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/processhacker/processhacker/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/processhacker/processhacker/archive/refs/tags/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
#mkdir -p build_win &&
# wl-showstatus configure &&
# PATH=$PYDIR:$PATH PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$PYDIR/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $MINGWPREFIX/python/Scripts/cmake-converter-script.py -s ProcessHacker.sln &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# wl-showstatus build &&
# ninja -Cbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK



export NAME="systeminformer"
export STATUS=
export URL=https://systeminformer.sourceforge.io/
export BASENAME=systeminformer
export DESCRIPTION="A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware."
export CATEGORY=
export TYPE=library
export VERSION=3.2.25011.2103
export VERSIONDATE=20250515
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmakeconverter,cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYRIGHT.txt
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/winsiderss/systeminformer/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/winsiderss/systeminformer/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix invalid dummy command
sed -i.bak -e "s/\(set(DUMMY \"\)cd\.\(\"\)/\1true\2/" CMake/Utils.cmake plugins/CMake/Utils.cmake
mkdir -p build_win &&
 wl-showstatus configure &&
 PATH=$PYDIR:$PATH PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$PYDIR/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $MINGWPREFIX/python/Scripts/cmake-converter-script.py -s SystemInformer.sln &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CONFIGURATION_TYPES:STRING="Release" -S. -Bbuild_win &&
 wl-showstatus build &&
 ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



