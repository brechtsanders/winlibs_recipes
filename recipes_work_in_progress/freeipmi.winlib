#export NAME="freeipmi"
#export STATUS=
#export URL=http://www.gnu.org/software/freeipmi/
#export BASENAME=freeipmi
#export DESCRIPTION="GNU FreeIPMI - Intelligent Platform Management System: FreeIPMI provides in-band and out-of-band IPMI software based on the IPMI v1.5/2.0 specification. The software has been written with a number of useful features for large HPC or cluster environments."
#export CATEGORY=communication
#export TYPE=library
#export VERSION=0.6.4
##export VERSION=0.6.9
##export VERSION=0.7.4
##export VERSION=0.7.5
##export VERSION=0.7.6
#####configure: error: getpwuid_r cannot be found
##export VERSION=0.7.7
##export VERSION=0.7.8
##export VERSION=0.7.9
##export VERSION=0.7.10
##export VERSION=0.7.11
##export VERSION=0.7.12
#####configure: error: gcrypt.h not found
##export VERSION=0.7.13
##export VERSION=0.7.14
##export VERSION=0.7.15
##export VERSION=0.7.16
##export VERSION=0.8.1
##export VERSION=0.8.3
##export VERSION=0.8.4
##export VERSIONDATE=20100307
##export VERSION=0.8.5
##export VERSIONDATE=20100430
##export VERSION=0.8.6
##export VERSIONDATE=20100525
##export VERSION=0.8.7
##export VERSIONDATE=20100617
##export VERSION=0.8.8
##export VERSIONDATE=20100722
##export VERSION=0.8.9
##export VERSIONDATE=20100823
##export VERSION=0.8.10
##export VERSIONDATE=20100929
#####libfreeipmi/src/driver/ipmi-openipmi-driver.c:536: error: expected expression before 'struct'
##export VERSION=0.8.12
##export VERSIONDATE=20110220
##export VERSION=1.0.2
##export VERSIONDATE=20110223
##export VERSION=1.0.3
##export VERSIONDATE=20110330
##export VERSION=1.0.4
##export VERSIONDATE=20110422
##export VERSION=1.0.5
##export VERSIONDATE=20110701
##export VERSION=1.0.6
##export VERSIONDATE=20110902
##export VERSION=1.0.7
##export VERSIONDATE=20110929
##export VERSION=1.0.8
##export VERSIONDATE=20111027
#####configure: error: getpwuid_r cannot be found
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDENCIES=argp-standalone
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL2
##export DOWNLOADURL="http://ftp.zresearch.com/pub/freeipmi/"
#export DOWNLOADURL="http://download.gluster.com/pub/freeipmi/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://ftp.zresearch.com/pub/freeipmi/$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://download.gluster.com/pub/freeipmi/$VERSION/$BASENAME-$VERSION.tar.gz
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix missing files
#mkdir win32fix win32fix/sys win32fix/netinet win32fix/arpa win32fix/net
#cat > win32fix/sys/socket.h << EOF
##include <winsock2.h>
##include <ws2tcpip.h>
#EOF
#echo "#include <winsock2.h>" > win32fix/netinet/in.h
#touch win32fix/arpa/inet.h
#touch win32fix/netdb.h
##echo "#define ELOOP WSAELOOP" >> win32fix/sys/mman.h
#touch win32fix/sys/mman.h
#touch win32fix/sys/select.h
#touch win32fix/sys/ioctl.h
#touch win32fix/arpa/inet.h
#touch win32fix/net/if.h
## fix for missing pwd.h
#cat > win32fix/pwd.h << EOF
#typedef int uid_t;
##define geteuid() 0
##define getpwuid_r() 0
#struct passwd {
#  char *pw_dir;
#  char *pw_name;
#};
#EOF
## create dummy syslog.h
#cat > win32fix/syslog.h << EOF
##define LOG_ERR 3
##define LOG_DEBUG 7
#static void syslog (int priority, const char *format, ...) {}
#EOF
## fix redefinition of h_errno
#mv libfreeipmi/src/api/ipmi-api.c libfreeipmi/src/api/ipmi-api.c.bak
#sed -e "s/h_errno/herrno/g" libfreeipmi/src/api/ipmi-api.c.bak > libfreeipmi/src/api/ipmi-api.c
## fix problem with missing struct hostent
#mv common/src/freeipmi-portability.h common/src/freeipmi-portability.h.bak
#echo "#include <winsock2.h>" > common/src/freeipmi-portability.h
#cat common/src/freeipmi-portability.h.bak >> common/src/freeipmi-portability.h
## fix redefinition of _write
#mv libfreeipmi/src/debug/ipmi-debug-common.c libfreeipmi/src/debug/ipmi-debug-common.c.bak
#sed -e "s/_write/_bwrite/" libfreeipmi/src/debug/ipmi-debug-common.c.bak > libfreeipmi/src/debug/ipmi-debug-common.c
## fix missing definition of ELOOP
#mv libfreeipmi/src/sdr-cache/ipmi-sdr-cache-create.c libfreeipmi/src/sdr-cache/ipmi-sdr-cache-create.c.bak
#echo "#define ELOOP WSAELOOP" > libfreeipmi/src/sdr-cache/ipmi-sdr-cache-create.c
#cat libfreeipmi/src/sdr-cache/ipmi-sdr-cache-create.c.bak >> libfreeipmi/src/sdr-cache/ipmi-sdr-cache-create.c
#mv libfreeipmi/src/sdr-cache/ipmi-sdr-cache-delete.c libfreeipmi/src/sdr-cache/ipmi-sdr-cache-delete.c.bak
#cat > libfreeipmi/src/sdr-cache/ipmi-sdr-cache-delete.c << EOF
##include <winsock2.h>
##define ELOOP WSAELOOP
#EOF
#cat libfreeipmi/src/sdr-cache/ipmi-sdr-cache-delete.c.bak >> libfreeipmi/src/sdr-cache/ipmi-sdr-cache-delete.c
#mv libfreeipmi/src/sdr-cache/ipmi-sdr-cache-read.c libfreeipmi/src/sdr-cache/ipmi-sdr-cache-read.c.bak
#cat > libfreeipmi/src/sdr-cache/ipmi-sdr-cache-read.c << EOF
##include <winsock2.h>
##define ELOOP WSAELOOP
##define PROT_READ 0x1
##define MAP_PRIVATE 0x2
#EOF
#cat libfreeipmi/src/sdr-cache/ipmi-sdr-cache-read.c.bak >> libfreeipmi/src/sdr-cache/ipmi-sdr-cache-read.c
## fix missing definition of EMSGSIZE
#mv libfreeipmi/src/interface/ipmi-kcs-interface.c libfreeipmi/src/interface/ipmi-kcs-interface.c.bak
#cat > libfreeipmi/src/interface/ipmi-kcs-interface.c << EOF
#//#define EMSGSIZE 122
##include <winsock2.h>
##define EMSGSIZE WSAEMSGSIZE
#EOF
#cat libfreeipmi/src/interface/ipmi-kcs-interface.c.bak >> libfreeipmi/src/interface/ipmi-kcs-interface.c
#mv libfreeipmi/src/interface/ipmi-lan-interface.c libfreeipmi/src/interface/ipmi-lan-interface.c.bak
#cat > libfreeipmi/src/interface/ipmi-lan-interface.c << EOF
#//#define EMSGSIZE 122
##include <winsock2.h>
##define EMSGSIZE WSAEMSGSIZE
#EOF
#cat libfreeipmi/src/interface/ipmi-lan-interface.c.bak >> libfreeipmi/src/interface/ipmi-lan-interface.c
#mv libfreeipmi/src/interface/rmcp-interface.c libfreeipmi/src/interface/rmcp-interface.c.bak
#cat > libfreeipmi/src/interface/rmcp-interface.c << EOF
#//#define EMSGSIZE 122
##include <winsock2.h>
##define EMSGSIZE WSAEMSGSIZE
#EOF
#cat libfreeipmi/src/interface/rmcp-interface.c.bak >> libfreeipmi/src/interface/rmcp-interface.c
#mv libfreeipmi/src/util/ipmi-rmcpplus-util.c libfreeipmi/src/util/ipmi-rmcpplus-util.c.bak
#cat > libfreeipmi/src/util/ipmi-rmcpplus-util.c << EOF
#//#define EMSGSIZE 122
##include <winsock2.h>
##define EMSGSIZE WSAEMSGSIZE
#EOF
#cat libfreeipmi/src/util/ipmi-rmcpplus-util.c.bak >> libfreeipmi/src/util/ipmi-rmcpplus-util.c
## fix redefinition of _snprintf
#mv libfreeipmi/src/util/ipmi-sensor-and-event-code-tables-util.c libfreeipmi/src/util/ipmi-sensor-and-event-code-tables-util.c.bak
#sed -e "s/_snprintf/_mysnprintf/" libfreeipmi/src/util/ipmi-sensor-and-event-code-tables-util.c.bak > libfreeipmi/src/util/ipmi-sensor-and-event-code-tables-util.c
## fix for missing semaphores
#touch win32fix/sys/ipc.h
#touch win32fix/sys/sem.h
#mv libfreeipmi/src/driver/ipmi-semaphores.c libfreeipmi/src/driver/ipmi-semaphores.c.bak
#cat > libfreeipmi/src/driver/ipmi-semaphores.c << EOF
##include <windows.h>
##include "ipmi-semaphores.h"
#int ipmi_mutex_init (void)
#{
#  SECURITY_ATTRIBUTES secattr = {sizeof(SECURITY_ATTRIBUTES), NULL, FALSE};
#  HANDLE mutex = CreateMutex(&secattr, FALSE, NULL);
#  return (mutex != NULL ? (int)mutex : -1);
#}
#int ipmi_mutex_lock (int semid)
#{
#  WaitForSingleObject((HANDLE)semid, INFINITE);
#  return 0;
#}
#int ipmi_mutex_lock_interruptible (int semid)
#{
#  return ipmi_mutex_lock(semid);
#}
#int ipmi_mutex_unlock (int semid)
#{
#  ReleaseMutex((HANDLE)semid);
#}
#EOF
## fix missing definition of ETIMEDOUT
#mv libfreeipmi/src/driver/ipmi-kcs-driver.c libfreeipmi/src/driver/ipmi-kcs-driver.c.bak
#cat > libfreeipmi/src/driver/ipmi-kcs-driver.c << EOF
##include <winsock2.h>
##define ETIMEDOUT WSAETIMEDOUT
#EOF
#cat libfreeipmi/src/driver/ipmi-kcs-driver.c.bak >> libfreeipmi/src/driver/ipmi-kcs-driver.c
#mv libfreeipmi/src/driver/ipmi-openipmi-driver.c libfreeipmi/src/driver/ipmi-openipmi-driver.c.bak
#cat > libfreeipmi/src/driver/ipmi-openipmi-driver.c << EOF
##include <winsock2.h>
##define ETIMEDOUT WSAETIMEDOUT
#EOF
## (version < version 0.7.13)
#cat libfreeipmi/src/driver/ipmi-openipmi-driver.c.bak >> libfreeipmi/src/driver/ipmi-openipmi-driver.c
#mv libfreeipmi/src/driver/ipmi-ssif-driver.c libfreeipmi/src/driver/ipmi-ssif-driver.c.bak
#cat > libfreeipmi/src/driver/ipmi-ssif-driver.c << EOF
##include <winsock2.h>
##define ETIMEDOUT WSAETIMEDOUT
#EOF
#cat libfreeipmi/src/driver/ipmi-ssif-driver.c.bak >> libfreeipmi/src/driver/ipmi-ssif-driver.c
#mv libfreeipmi/src/driver/ipmi-sunbmc-driver.c libfreeipmi/src/driver/ipmi-sunbmc-driver.c.bak
#cat > libfreeipmi/src/driver/ipmi-sunbmc-driver.c << EOF
##include <winsock2.h>
##define ETIMEDOUT WSAETIMEDOUT
#EOF
#cat libfreeipmi/src/driver/ipmi-sunbmc-driver.c.bak >> libfreeipmi/src/driver/ipmi-sunbmc-driver.c
## fix missing EMSGSIZE (version >= 0.7.8)
#mv libfreeipmi/src/interface/ipmi-ipmb-interface.c libfreeipmi/src/interface/ipmi-ipmb-interface.c.bak
#echo "#define EMSGSIZE 122" > libfreeipmi/src/interface/ipmi-ipmb-interface.c
#cat libfreeipmi/src/interface/ipmi-ipmb-interface.c.bak >> libfreeipmi/src/interface/ipmi-ipmb-interface.c
#mv libfreeipmi/src/interface/ipmi-kcs-interface.c libfreeipmi/src/interface/ipmi-kcs-interface.c.bak
#echo "#define EMSGSIZE 122" > libfreeipmi/src/interface/ipmi-kcs-interface.c
#cat libfreeipmi/src/interface/ipmi-kcs-interface.c.bak >> libfreeipmi/src/interface/ipmi-kcs-interface.c
#mv libfreeipmi/src/interface/ipmi-lan-interface.c libfreeipmi/src/interface/ipmi-lan-interface.c.bak
#echo "#define EMSGSIZE 122" > libfreeipmi/src/interface/ipmi-lan-interface.c
#cat libfreeipmi/src/interface/ipmi-lan-interface.c.bak >> libfreeipmi/src/interface/ipmi-lan-interface.c
#mv libfreeipmi/src/interface/rmcp-interface.c libfreeipmi/src/interface/rmcp-interface.c.bak
#echo "#define EMSGSIZE 122" > libfreeipmi/src/interface/rmcp-interface.c
#cat libfreeipmi/src/interface/rmcp-interface.c.bak >> libfreeipmi/src/interface/rmcp-interface.c
## remove unsupported mmap stuff
#patch -ulbf libfreeipmi/src/locate/ipmi-locate-acpi-spmi.c << EOF
#--- libfreeipmi/src/locate/ipmi-locate-acpi-spmi.c  Wed Jul 30 16:02:23 2008
#+++ libfreeipmi/src/locate/ipmi-locate-acpi-spmi.c  Wed Jul 30 16:03:54 2008
#@@ -685,2 +685,3 @@
# {
#+#ifndef _WIN32
#   uint64_t startaddress;
#@@ -721,2 +722,3 @@
#   close (mem_fd);
#+#endif
#   return (-1);
#EOF
#patch -ulbf libfreeipmi/src/locate/ipmi-locate-smbios.c << EOF
#--- libfreeipmi/src/locate/ipmi-locate-smbios.c  Fri Mar 28 01:15:04 2008
#+++ libfreeipmi/src/locate/ipmi-locate-smbios.c  Wed Jul 30 16:08:18 2008
#@@ -280,2 +280,3 @@
# {
#+#ifndef _WIN32
#   uint32_t startaddress;
#@@ -300,2 +301,3 @@
#   close (mem_fd);
#+#endif
#   return NULL;   
#EOF
## remove invalid assignment to h_errno
#mv common/src/freeipmi-portability.c common/src/freeipmi-portability.c.bak
#sed -e "s?\(h_errno = \)?//\1?g" common/src/freeipmi-portability.c.bak > common/src/freeipmi-portability.c
#mv common/src/portability/freeipmi-portability.c common/src/portability/freeipmi-portability.c.bak
#sed -e "s?\(h_errno = \)?//\1?g" common/src/portability/freeipmi-portability.c.bak > common/src/portability/freeipmi-portability.c
## remove some unsupported fcntl stuff (version 0.7.13 -> common/src/miscutil/fd.c)
##patch -ulbf common/src/fd.c << EOF
#patch -ulbf common/src/miscutil/fd.c << EOF
#--- common/src/fd.c  Wed Sep  5 22:13:23 2007
#+++ common/src/fd.c  Wed Jul 30 16:34:41 2008
#@@ -1 +1,7 @@
#+#define F_SETLKW 0
#+#define F_SETLK  1
#+#define F_RDLCK  2
#+#define F_WRLCK  3
#+#define F_UNLCK  4
#+#define F_GETLK  7
# /*****************************************************************************
#@@ -203,2 +209,3 @@
# {
#+#ifndef _WIN32
#     assert (fd >= 0);
#@@ -208,2 +215,5 @@
#     return (0);
#+#else
#+    return (-1);
#+#endif
# }
#@@ -214,2 +224,3 @@
# {
#+#ifndef _WIN32
#     int fval;
#@@ -223,2 +234,5 @@
#     return (0);
#+#else
#+    return (-1);
#+#endif
# }
#@@ -233,2 +247,3 @@
# {
#+#ifndef _WIN32
#     struct flock lock;
#@@ -243,2 +258,5 @@
#     return (fcntl (fd, cmd, &lock));
#+#else
#+    return (-1);
#+#endif
# }
#@@ -249,2 +267,3 @@
# {
#+#ifndef _WIN32
#     struct flock lock;
#@@ -263,2 +282,5 @@
#     return (lock.l_pid);
#+#else
#+    return (-1);
#+#endif
# }
#EOF
## fix missing resource stuff
#patch -ulbf common/src/tool-common.c << EOF
#--- common/src/tool-common.c  Fri Apr  4 19:18:30 2008
#+++ common/src/tool-common.c  Wed Jul 30 16:39:38 2008
#@@ -33,3 +33,5 @@
# #include <sys/types.h>
#+#ifndef _WIN32
# #include <sys/resource.h>
#+#endif
# #include <errno.h>
#@@ -47,2 +49,3 @@
# {
#+#ifndef _WIN32
#   uid_t uid = getuid ();
#@@ -50,2 +53,3 @@
#     return 1;
#+#endif
#   return 0;
#@@ -59,3 +63,3 @@
#    */
#-#ifdef NDEBUG
#+#if defined(NDEBUG) && !defined(_WIN32)
#   struct rlimit resource_limit;
#EOF
## fix mkdir having only a single parameter
#mv common/src/tool-sdr-cache-common.c common/src/tool-sdr-cache-common.c.bak
#sed -e 's/\(mkdir *([^),]*\),[^),]*)/\1)/' common/src/tool-sdr-cache-common.c.bak > common/src/tool-sdr-cache-common.c
## fix unsupported interface lookup
#patch -ulbf common/src/ipmi-ping.c << EOF
#--- common/src/ipmi-ping.c.bak  Thu Apr 17 20:06:27 2008
#+++ common/src/ipmi-ping.c      Wed Jul 30 16:56:54 2008
#@@ -94,3 +94,5 @@
# /* gethostbyname */
#+#ifndef _WIN32
# extern int h_errno;
#+#endif
# 
#@@ -276,3 +278,3 @@
# static int 
#-_sleep(unsigned int len) 
#+_mysleep(unsigned int len) 
# {
#@@ -338,2 +340,3 @@
#         {
#+#ifndef _WIN32
#           struct ifreq ifr;
#@@ -349,2 +352,5 @@
#                  sizeof(_srcaddr.sin_addr.s_addr));
#+#else
#+          ipmi_ping_err_exit("using interface name is not supported");
#+#endif
#         }
#@@ -409,3 +415,3 @@
#         {
#-          if (_sleep((last_send + _interval - now)) < 0)
#+          if (_mysleep((last_send + _interval - now)) < 0)
#             continue;
#EOF
## fix redefinition of stdout and stderr
#patch -ulbf common/src/pstdout.c << EOF
#--- common/src/pstdout.c  Fri Mar 28 01:14:32 2008
#+++ common/src/pstdout.c  Wed Jul 30 17:03:00 2008
#@@ -85,4 +85,4 @@
#   char *hostname; 
#-  cbuf_t stdout;
#-  cbuf_t stderr;
#+  cbuf_t cstdout;
#+  cbuf_t cstderr;
#   char *buffer_stdout;
#@@ -498,4 +498,4 @@
#   assert(pstate->magic == PSTDOUT_STATE_MAGIC);
#-  assert(pstate->stdout);
#-  assert(pstate->stderr);
#+  assert(pstate->cstdout);
#+  assert(pstate->cstderr);
#   assert(stream);
#@@ -507,3 +507,3 @@
#     {
#-      whichcbuf = pstate->stdout;
#+      whichcbuf = pstate->cstdout;
#       whichdefaultmask = PSTDOUT_OUTPUT_STDOUT_DEFAULT;
#@@ -517,3 +517,3 @@
#     {
#-      whichcbuf = pstate->stderr;
#+      whichcbuf = pstate->cstderr;
#       whichdefaultmask = PSTDOUT_OUTPUT_STDERR_DEFAULT;
#@@ -803,3 +803,3 @@
# 
#-  if (!(pstate->stdout = cbuf_create(PSTDOUT_STATE_CBUF_MIN, PSTDOUT_STATE_CBUF_MAX)))
#+  if (!(pstate->cstdout = cbuf_create(PSTDOUT_STATE_CBUF_MIN, PSTDOUT_STATE_CBUF_MAX)))
#     {
#@@ -810,3 +810,3 @@
#     }
#-  if (!(pstate->stderr = cbuf_create(PSTDOUT_STATE_CBUF_MIN, PSTDOUT_STATE_CBUF_MAX)))
#+  if (!(pstate->cstderr = cbuf_create(PSTDOUT_STATE_CBUF_MIN, PSTDOUT_STATE_CBUF_MAX)))
#     {
#@@ -846,4 +846,4 @@
#   assert(pstate->magic == PSTDOUT_STATE_MAGIC);
#-  assert(pstate->stdout);
#-  assert(pstate->stderr);
#+  assert(pstate->cstdout);
#+  assert(pstate->cstderr);
#   assert(stream);
#@@ -949,4 +949,4 @@
#   assert(pstate->magic == PSTDOUT_STATE_MAGIC);
#-  assert(pstate->stdout);
#-  assert(pstate->stderr);
#+  assert(pstate->cstdout);
#+  assert(pstate->cstderr);
# 
#@@ -964,6 +964,6 @@
#    */
#-  if (!cbuf_is_empty(pstate->stdout))
#+  if (!cbuf_is_empty(pstate->cstdout))
#     _pstdout_print_wrapper(pstate, 1, stdout, "\n");
#   
#-  if (!cbuf_is_empty(pstate->stderr))
#+  if (!cbuf_is_empty(pstate->cstderr))
#     _pstdout_print_wrapper(pstate, 1, stderr, "\n");
#@@ -1015,6 +1015,6 @@
# 
#-  if (pstate->stdout)
#-    cbuf_destroy(pstate->stdout);
#-  if (pstate->stderr)
#-    cbuf_destroy(pstate->stderr);
#+  if (pstate->cstdout)
#+    cbuf_destroy(pstate->cstdout);
#+  if (pstate->cstderr)
#+    cbuf_destroy(pstate->cstderr);
#EOF
## workaround for h_errno being defined as WSAGetLastError (version >= 0.7.6)
#patch -ulbf libfreeipmi/src/api/ipmi-api.c << EOF
#--- libfreeipmi/src/api/ipmi-api.c  Thu Nov 27 05:29:08 2008
#+++ libfreeipmi/src/api/ipmi-api.c  Sun Mar  8 19:01:45 2009
#@@ -93,2 +93,3 @@
# #define GETHOSTBYNAME_AUX_BUFLEN     1024
#+#undef h_errno
# extern int h_errno;
#EOF
## fix missing getpwuid_r
#patch -ulbf configure << EOF
#--- configure  Sat Apr 11 00:10:19 2009
#+++ configure  Sat Apr 11 14:40:41 2009
#@@ -24497,3 +24497,3 @@
# echo "\$as_me: error: getpwuid_r cannot be found" >&2;}
#-   { (exit 1); exit 1; }; }
#+   }
# fi
#EOF
## fix
#mv libfreeipmi/src/api/ipmi-lan-session-common.c libfreeipmi/src/api/ipmi-lan-session-common.c.bak
#cat > libfreeipmi/src/api/ipmi-lan-session-common.c << EOF
##include <ws2tcpip.h>
##include "timeval.h"
##define timeradd timeval_add
##define timersub timeval_sub
#EOF
#cat libfreeipmi/src/api/ipmi-lan-session-common.c.bak >> libfreeipmi/src/api/ipmi-lan-session-common.c
## create dummy syslog.h
#cat > common/src/syslog.h << EOF
##define LOG_ERR 3
##define LOG_DEBUG 7
#static void syslog (int priority, const char *format, ...) {}
#EOF
### fix missing ECONNRESET and ECONNREFUSED (version >= 0.8.5)
##cat >> common/src/portability/freeipmi-portability.h << EOF
###define ECONNRESET WSAECONNRESET
###define ECONNREFUSED WSAECONNREFUSED
##EOF
## fix missing ECONNRESET and ECONNREFUSED (version >= 0.8.6)
#mv libfreeipmi/src/api/ipmi-lan-session-common.c libfreeipmi/src/api/ipmi-lan-session-common.c.bak
#cat > libfreeipmi/src/api/ipmi-lan-session-common.c << EOF
##include <winsock2.h>
##define ECONNRESET WSAECONNRESET
##define ECONNREFUSED WSAECONNREFUSED
#EOF
#cat libfreeipmi/src/api/ipmi-lan-session-common.c.bak >> libfreeipmi/src/api/ipmi-lan-session-common.c
## fix missing ECONNRESET and ECONNREFUSED (version >= 0.8.6)
#mv libfreeipmi/src/api/ipmi-api-util.c libfreeipmi/src/api/ipmi-api-util.c.bak
#cat > libfreeipmi/src/api/ipmi-api-util.c << EOF
##include <winsock2.h>
##define ECONNRESET WSAECONNRESET
##define ECONNREFUSED WSAECONNREFUSED
#EOF
#cat libfreeipmi/src/api/ipmi-api-util.c.bak >> libfreeipmi/src/api/ipmi-api-util.c
## to do: remove ioctl from libfreeipmi/src/driver/ipmi-openipmi-driver.c
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-init-scripts --disable-logrotate-config --disable-logdir --disable-ipmisdrcachedir CFLAGS="-I`pwd`/win32fix -Dsocklen_t=int" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-init-scripts --disable-logrotate-config --disable-logdir --disable-ipmisdrcachedir CFLAGS="-I`pwd`/win32fix" &&
# make -C libfreeipmi install-strip &&
#    echo OK
#cd .. #### ../makeDevPak.sh && cd .. && rm -rf $BASENAME-$VERSION



export NAME="freeipmi"
export STATUS=
export URL=http://www.gnu.org/software/freeipmi/
export BASENAME=freeipmi
export DESCRIPTION="FreeIPMI provides in-band and out-of-band IPMI software based on the IPMI v1.5/2.0 specification. The IPMI specification defines a set of interfaces for platform management and is implemented by a number vendors for system management. The features of IPMI that most users will be interested in are sensor monitoring, system event monitoring, power control, and serial-over-LAN (SOL). The FreeIPMI tools and libraries listed below should provide users with the ability to access and utilize these and many other features. A number of useful features for large HPC or cluster environments have also been implemented into FreeIPMI."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.1.7
#export VERSIONDATE=20120810
#export VERSION=1.2.1
#export VERSIONDATE=20120824
#export VERSION=1.2.2
#export VERSIONDATE=20121003
#export VERSION=1.2.3
#export VERSIONDATE=20121115
####configure: error: getpwuid_r cannot be compiled
#export VERSION=1.2.4
#export VERSIONDATE=20130111
####libfreeipmi/driver/ipmi-semaphores.c:36:8: error: variable 'mutex_lock_buf_interruptible' has initializer but incomplete type
#export VERSION=1.2.5
#export VERSIONDATE=20130228
#export VERSION=1.2.6
#export VERSIONDATE=20130430
#export VERSION=1.2.7
#export VERSIONDATE=20130517
#export VERSION=1.2.8
#export VERSIONDATE=20130622
#export VERSION=1.2.9
#export VERSIONDATE=20130718
#export VERSION=1.3.1
#export VERSIONDATE=20130823
#export VERSION=1.3.2
#export VERSIONDATE=20130911
####common/pingtool/ping-tool-common.c:362:24: error: storage size of 'ifr' isn't known
####common/pingtool/ping-tool-common.c:365:55: error: 'IFNAMSIZ' undeclared (first use in this function)
#export VERSION=1.3.3
#export VERSIONDATE=20131030
export VERSION=1.3.4
export VERSIONDATE=20131213
#export VERSION=1.4.1
#export VERSIONDATE=20140304
#export VERSION=1.4.2
#export VERSIONDATE=20140507
#export VERSION=1.4.3
#export VERSIONDATE=20140508
#export VERSION=1.4.4
#export VERSIONDATE=20140628
#export VERSION=1.4.5
#export VERSIONDATE=20140729
#export VERSION=1.4.6
#export VERSIONDATE=20141030
#export VERSION=1.4.7
#export VERSIONDATE=20141211
#export VERSION=1.4.8
#export VERSIONDATE=20150108
#export VERSION=1.4.9
#export VERSIONDATE=20150602
####libfreeipmi/driver/ipmi-semaphores.c:36:8: error: variable 'mutex_lock_buf_interruptible' has initializer but incomplete type
#export VERSION=1.4.10
#export VERSIONDATE=20151021
#export VERSION=1.4.11
#export VERSIONDATE=20151101
#export VERSION=1.5.1
#export VERSIONDATE=20151201
#export VERSION=1.5.2
#export VERSIONDATE=20160524
#export VERSION=1.5.3
#export VERSIONDATE=20160802
#export VERSION=1.5.4
#export VERSIONDATE=20161001
#export VERSION=1.5.5
#export VERSIONDATE=20161103
#export VERSION=1.5.6
#export VERSIONDATE=20170706
#export VERSION=1.5.7
#export VERSIONDATE=20170817
#export VERSION=1.6.1
#export VERSIONDATE=20180203
#export VERSION=1.6.2
#export VERSIONDATE=20180504
#export VERSION=1.6.3
#export VERSIONDATE=20190125
#export VERSION=1.6.4
#export VERSIONDATE=20190822
#export VERSION=1.6.5
#export VERSIONDATE=20200522
#export VERSION=1.6.6
#export VERSIONDATE=20200805
#export VERSION=1.6.7
#export VERSIONDATE=20210214
####common/pingtool/ping-tool-common.c:366:24: error: storage size of 'ifr' isn't known           struct ifreq ifr;
####libfreeipmi/driver/ipmi-semaphores.c:36:57: error: 'IPC_NOWAIT' undeclared here (not in a function)
#export VERSION=1.6.8
#export VERSIONDATE=20210520
#export VERSION=1.6.9
#export VERSIONDATE=20220120
#export VERSION=1.6.10
#export VERSIONDATE=20220901
####configure: error: getpwuid_r cannot be found
export VERSIONDATE=
wl-showstatus --package-version
export DEPENDENCIES=argp-standalone
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPLv3
export DOWNLOADURL="http://ftp.gnu.org/gnu/freeipmi/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnu.org/gnu/freeipmi/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix for missing files
mkdir -p win32fix/sys win32fix/netinet win32fix/arpa win32fix/net
echo "#include <winsock2.h>" > win32fix/netinet/in.h
touch win32fix/arpa/inet.h win32fix/netdb.h win32fix/sys/select.h win32fix/sys/ipc.h win32fix/sys/sem.h win32fix/sys/ioctl.h win32fix/net/if.h
# fix for missing pwd.h
cat > win32fix/pwd.h << EOF
typedef int uid_t;
#define geteuid() 0
//#define getpwuid_r() 0
#define getpwuid_r(uid,pwd,buf,buflen,result) 0
struct passwd {
  char *pw_dir;
  char *pw_name;
};
EOF
cat > win32fix/sys/socket.h << EOF
#ifndef STUB_SOCKET_H_INCLUDED
#define STUB_SOCKET_H_INCLUDED
#include <winsock2.h>
typedef int socklen_t;
#undef h_errno
#define ECONNRESET WSAECONNRESET
#define ECONNABORTED WSAECONNABORTED
#define ECONNREFUSED WSAECONNREFUSED
#endif
EOF
cat > win32fix/syslog.h << EOF
#define LOG_ERR     3
//#define LOG_WARNING 4
//#define LOG_INFO    6
#define LOG_DEBUG   7
//#define LOG_USER    (1<<3)
//#define LOG_AUTH    (4<<3)
//#define LOG_PID     0x01
//static void openlog (const char *ident, int option, int facility) {}
static void syslog (int priority, const char *format, ...) {}
//static void closelog (void) {}
EOF
cat > win32fix/netdb.h << EOF
#define F_SETLKW 0
#define F_SETLK  1
#define F_RDLCK  2
#define F_WRLCK  3
#define F_UNLCK  4
EOF
# fix common/miscutil/fd.c
mv common/miscutil/fd.c common/miscutil/fd.c.bak
cat > common/miscutil/fd.c << EOF
#define F_SETLKW 0
#define F_SETLK  1
#define F_RDLCK  2
#define F_WRLCK  3
#define F_UNLCK  4
EOF
cat common/miscutil/fd.c.bak >> common/miscutil/fd.c
patch -ulbf common/miscutil/fd.c << EOF
--- common/miscutil/fd.c  2008-08-12 20:14:46 +0200
+++ common/miscutil/fd.c  2013-01-11 10:26:52 +0100
@@ -46,2 +46,10 @@
 #include "fd.h"
+#ifdef __WIN32__
+#include <windows.h>
+#define F_SETLKW 0
+#define F_SETLK  1
+#define F_RDLCK  2
+#define F_WRLCK  3
+#define F_UNLCK  4
+#endif

@@ -205,3 +213,7 @@

+#ifdef __WIN32__
+    if (!SetHandleInformation((HANDLE)_get_osfhandle(fd), HANDLE_FLAG_INHERIT, 0))
+#else
     if (fcntl (fd, F_SETFD, FD_CLOEXEC) < 0)
+#endif
         return (-1);
@@ -218,2 +230,7 @@

+#ifdef __WIN32__
+    unsigned long flags = 1;
+    if (ioctlsocket(fd, FIONBIO, &flags) != 0)
+        return (-1);
+#else
     if ((fval = fcntl (fd, F_GETFL, 0)) < 0)
@@ -222,2 +239,3 @@
         return (-1);
+#endif
     return (0);
@@ -233,2 +251,16 @@
 {
+#ifdef __WIN32__
+/*
+    if (!LockFileEx((HANDLE)_get_osfhandle(fd),
+    DWORD  dwFlags,    // functional behavior modification flags
+    DWORD  dwReserved, // reserved, must be set to zero
+    DWORD  nNumberOfBytesToLockLow,    // low-order 32 bits of length to lock
+    DWORD  nNumberOfBytesToLockHigh,   // high-order 32 bits of length to lock
+    LPOVERLAPPED  lpOverlapped         // addr. of structure with lock region start offset
+    ))
+        return -1;
+    return 0;
+*/
+    return -1;
+#else
     struct flock lock;
@@ -243,2 +275,3 @@
     return (fcntl (fd, cmd, &lock));
+#endif
 }
@@ -249,2 +282,5 @@
 {
+#ifdef __WIN32__
+    return -1;
+#else
     struct flock lock;
@@ -263,2 +299,3 @@
     return (lock.l_pid);
+#endif
 }
EOF
# fix missing ECONNRESET/ECONNREFUSED in libfreeipmi/api/ipmi-api-util.c
mv libfreeipmi/api/ipmi-api-util.c libfreeipmi/api/ipmi-api-util.c.bak
echo "#include <sys/socket.h>" > libfreeipmi/api/ipmi-api-util.c
cat libfreeipmi/api/ipmi-api-util.c.bak >> libfreeipmi/api/ipmi-api-util.c
# libfreeipmi/debug/ipmi-debug-common.c
mv libfreeipmi/debug/ipmi-debug-common.c libfreeipmi/debug/ipmi-debug-common.c.bak
sed -e "s/^static \(int\)/\1/" libfreeipmi/debug/ipmi-debug-common.c.bak > libfreeipmi/debug/ipmi-debug-common.c
# fix redefinition of _sleep in common/pingtool/ping-tool-common.c (version >= 1.2.8)
mv common/pingtool/ping-tool-common.c common/pingtool/ping-tool-common.c.bak
sed -e "s/\(_sleep\)/custom\1/" common/pingtool/ping-tool-common.c.bak > common/pingtool/ping-tool-common.c
# workaround for h_errno being defined as WSAGetLastError in libfreeipmi/api/ipmi-api.c (version >= 1.3.1)
patch -ulbf libfreeipmi/api/ipmi-api.c << EOF
--- libfreeipmi/api/ipmi-api.c  2013-10-29 23:17:42 +0100
+++ libfreeipmi/api/ipmi-api.c  2013-10-30 09:36:52 +0100
@@ -94,2 +94,3 @@
 #define GETHOSTBYNAME_AUX_BUFLEN             1024
+#undef h_errno
 extern int h_errno;
EOF
# fix missing definition of ETIMEDOUT (version >= 1.3.1)
mv libfreeipmi/driver/ipmi-kcs-driver.c libfreeipmi/driver/ipmi-kcs-driver.c.bak
cat > libfreeipmi/driver/ipmi-kcs-driver.c << EOF
#include <winsock2.h>
#define ETIMEDOUT WSAETIMEDOUT
EOF
cat libfreeipmi/driver/ipmi-kcs-driver.c.bak >> libfreeipmi/driver/ipmi-kcs-driver.c
mv libfreeipmi/driver/ipmi-openipmi-driver.c libfreeipmi/driver/ipmi-openipmi-driver.c.bak
cat > libfreeipmi/driver/ipmi-openipmi-driver.c << EOF
#include <winsock2.h>
#define ETIMEDOUT WSAETIMEDOUT
EOF
# fix problem with missing struct hostent in common/portability/freeipmi-portability.h (version >= 1.3.1)
mv common/portability/freeipmi-portability.h common/portability/freeipmi-portability.h.bak
echo "#include <winsock2.h>" > common/portability/freeipmi-portability.h
cat common/portability/freeipmi-portability.h.bak >> common/portability/freeipmi-portability.h
# fix configure
mv configure configure.bak
sed -e "s?^\(char\|return\)\( getpwuid_r ();\)?//\1\2?" configure.bak > configure
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-init-scripts --disable-logrotate-config --disable-logdir --disable-ipmisdrcachedir --with-dont-check-for-root --without-random-device CFLAGS="-I`pwd`/win32fix" &&
 wl-showstatus build-install &&
 (( make && make install-strip ) || make -C libfreeipmi install-strip ) &&
    echo OK
#cd .. #### ../makeDevPak.sh && cd .. && rm -rf $BASENAME-$VERSION



