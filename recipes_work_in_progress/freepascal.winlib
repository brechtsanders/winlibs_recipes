export NAME="Free Pascal"
export STATUS=
export URL=http://freepascal.org/
export BASENAME=freepascal
export DESCRIPTION="Open source compiler for Pascal and Object Pascal"
export CATEGORY=development
export TYPE=application
#export VERSION=3.0.2
#export VERSIONDATE=20170325
#export VERSION=3.0.4
#export VERSIONDATE=20171128
#export VERSION=3.2.0
#export VERSIONDATE=20200619
#export VERSION=3.2.2
#export VERSIONDATE=20210603
export VERSION=3.2.3
export VERSIONDATE=20221119
####Makefile:136: *** Compiler /R/winlibs64-9.2.0/fpc-3.2.0/precompiled/app/bin/i386-win32/ppc386.exe not found.  Stop.
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=innoextract
export LICENSEFILE=
export LICENSETYPE=GPL
#export DOWNLOADURL="https://sourceforge.net/projects/freepascal/files/Source/ fpc- .source.tar.gz"
export DOWNLOADURL="https://gitlab.com/freepascal.org/fpc/source/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL="https://downloads.sourceforge.net/project/freepascal/Source/$VERSION/fpc-$VERSION.source.tar.gz https://downloads.sourceforge.net/project/freepascal/Win32/$VERSION/fpc-$VERSION.i386-win32$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo ".cross.x86_64-win64"; fi).exe"
export DOWNLOADSOURCEURL="https://gitlab.com/freepascal.org/fpc/source/-/archive/$VERSION/source-$VERSION.tar.bz2 https://downloads.sourceforge.net/project/freepascal/Win32/3.2.2/fpc-3.2.2.i386-win32$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo ".cross.x86_64-win64"; fi).exe"
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/fpc-$VERSION.source.tar.gz
#cd fpc-$VERSION
mkdir -p $BASENAME-$VERSION
tar xfj $TARBALLDIR/$BASENAME/source-$VERSION.tar.bz2 -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/source-$VERSION
# extract precompiled version
#innoextract -e -s -d precompiled $TARBALLDIR/$BASENAME/fpc-$VERSION.i386-win32$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo ".cross.x86_64-win64"; fi).exe
innoextract -e -s -d precompiled $TARBALLDIR/$BASENAME/fpc-3.2.2.i386-win32$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo ".cross.x86_64-win64"; fi).exe
wl-showstatus build &&
 if ( echo $RUNPLATFORM | grep -q x86_64 ); then 
  ## fix path issues when using mingw32-make
  #sed -i.bak -e "s/\$(error You need the GNU utils package to use this Makefile)/#&\nPWD=pwd -W/" $(grep -l "\$(error You need the GNU utils package to use this Makefile)" $(find -name Makefile))
  #make -Crtl/win64 FPC=$PWD/precompiled/app/bin/i386-win32/ppcrossx64.exe FULL_TARGET=x86_64-win64 CPU_TARGET=x86_64 OS_TARGET=win64 &&
  #make all FPC="$PWD/precompiled/app/bin/i386-win32/ppcrossx64.exe -I$PWD/rtl/x86_64 -Idummy" FULL_TARGET=x86_64-win64 CPU_TARGET=x86_64 OS_TARGET=win64 OVERRIDEVERSIONCHECK=1
  PATH=$PWD/precompiled/app/bin/i386-win32:$PATH mingw32-make all FPC=ppcrossx64.exe COMPILER_INCLUDEDIR=$(cygpath -w $PWD/rtl/x86_64) OVERRIDEVERSIONCHECK=1 FULL_TARGET=x86_64-win64 CPU_TARGET=x86_64 OS_TARGET=win64 OS_TARGET_DEFAULT=win64 FPC_COMPILERINFO="$VERSION x86_64 x86_64 win64 win64" PWD="$(cygpath -w cygpath.exe) -wa ."
  #BASEDIR=$PWD/compiler 
 else
  #make -Crtl/win32 FPC=$PWD/precompiled/app/bin/i386-win32/ppc386.exe FULL_TARGET=i386-win32 CPU_TARGET=i386 OS_TARGET=win32 &&
  #make all FPC=$PWD/precompiled/app/bin/i386-win32/ppc386.exe FULL_TARGET=i386-win32 CPU_TARGET=i386 OS_TARGET=win32 OVERRIDEVERSIONCHECK=1
  PATH=$PWD/precompiled/app/bin/i386-win32:$PATH mingw32-make all FPC=ppc386.exe OVERRIDEVERSIONCHECK=1 FULL_TARGET=i386-win32 CPU_TARGET=i386 OS_TARGET=win32 OS_TARGET_DEFAULT=win32
 fi &&
 #CPU_TARGET=x86_64 OS_TARGET=win64 
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf fpc-$VERSION



