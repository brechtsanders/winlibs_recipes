export NAME="Gerbera"
export STATUS=
export URL=https://gerbera.io/
export BASENAME=gerbera
export DESCRIPTION="A free media server. Stream your media to devices on your home network."
export CATEGORY=multimedia
export TYPE=library
#export VERSION=1.9.0
#export VERSIONDATE=20210806
#export VERSION=1.9.1
#export VERSIONDATE=20210827
#export VERSION=1.9.2
#export VERSIONDATE=20211001
#export VERSION=1.10.0
#export VERSIONDATE=20220225
#export VERSION=1.11.0
#export VERSIONDATE=20220504
####Gerbera requires libupnp with IPv6 support.
export VERSION=1.12.0
export VERSIONDATE=20221104
####/include/fmt/core.h:1751:17: error: static assertion failed: Formatting of non-void pointers is disallowed.
wl-showstatus --package-version
export DEPENDANCIES=libcurl,libupnp,libexif,file,libmatroska,taglib,libuuid,fmt,spdlog
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=LICENSE.md
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/gerbera/gerbera/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/gerbera/gerbera/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix/sys winfix/netinet
echo "#include <winsock2.h>" > winfix/sys/socket.h
echo "#include <winsock2.h>" > winfix/netinet/in.h &&
echo "#include <stdint.h>" >> winfix/netinet/in.h &&
echo "typedef uint16_t in_port_t;" >> winfix/netinet/in.h
touch winfix/sys/select.h
# fix CMakeLists.txt (version >= 1.9.0)
sed -i.bak -e "s/FATAL_ERROR\(.*Gerbera requires libupnp with IPv6 support\)/WARNING\1/" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DWITH_NPUPNP:BOOL=OFF -DWITH_MYSQL:BOOL=OFF -DWITH_JS:BOOL=OFF -DWITH_INOTIFY:BOOL=OFF -DWITH_SYSTEMD:BOOL=OFF -DSPDLOG_FMT_EXTERNAL=ON -DSPDLOG_BUILD_SHARED=OFF -DWITH_TESTS:BOOL=OFF -Dlibuuid_INCLUDE_DIRS:STRING="$MINGWPREFIX/include/portable-uuid" -Dlibuuid_LIBRARIES:STRING="-lportable-uuid" -DSOCKET_LIBRARY:STRING="-lws2_32" -DCMAKE_CXX_FLAGS:STRING="-fpermissive -I$(pwd)/winfix" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
 #-Dfmt_DIR:PATH= -Dspdlog_DIR:PATH= 
 wl-showstatus build-install &&
 make -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



