export NAME="TermOx"
export STATUS=
export URL=https://github.com/a-n-t-h-o-n-y/TermOx
export BASENAME=termox
export DESCRIPTION="C++17 Terminal User Interface(TUI) Library."
export CATEGORY=gui
export TYPE=library
export VERSION=1.1.1
export VERSIONDATE=20230506
wl-showstatus --package-version
export DEPENDENCIES=signals-light,escape
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/a-n-t-h-o-n-y/TermOx/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/a-n-t-h-o-n-y/TermOx/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd TermOx-$VERSION
# use existing Catch2/signals-light/Escape libraries
mkdir -p external/Catch2
echo "add_library(Catch2::Catch2 SHARED IMPORTED)" > external/Catch2/CMakeLists.txt
touch external/signals-light/CMakeLists.txt
touch external/Escape/CMakeLists.txt
echo "add_library(Catch2::Catch2 SHARED IMPORTED)" >> tests/CMakeLists.txt
# also allow building shared library
sed -i.bak -e "s/\(add_library([^ ]*\) STATIC/\1/" src/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DTERMOX_BUILD_DEMOS:BOOL=OFF -DTERMOX_BUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DTERMOX_BUILD_DEMOS:BOOL=OFF -DTERMOX_BUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 #wl-showstatus build &&
 #cmake.exe --build build_static &&
 #ninja -Cbuild_static &&
 #wl-showstatus build &&
 #cmake.exe --build build_shared &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 #cmake.exe --install build_static --strip &&
 #cmake.exe --build build_static --target "install/strip" &&
 #cmake.exe --build build_static --target "library/install/strip" &&
 ninja -Cbuild_static install/strip &&
 #ninja -Cbuild_static library/install/strip &&
 wl-showstatus build-install &&
 #cmake.exe --install build_shared --strip &&
 #cmake.exe --build build_shared --target "install/strip" &&
 ninja -Cbuild_shared install/strip &&
    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf TermOx-$VERSION



