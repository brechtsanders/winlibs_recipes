export NAME="gnome-user-share"
export STATUS=
export URL=http://www.gnome.org/projects/gnome-user-share
export BASENAME=gnome-user-share
export DESCRIPTION=""
export CATEGORY=
export TYPE=library
#export VERSION=2.30.2
#export VERSIONDATE=20101222
#export VERSION=3.0.0
#export VERSIONDATE=20110404
#export VERSION=3.0.1
#export VERSIONDATE=20111017
#export VERSION=3.0.2
#export VERSIONDATE=20120322
#export VERSION=3.0.3
#export VERSIONDATE=20120825
#export VERSION=3.0.4
#export VERSIONDATE=20120927
#export VERSION=3.7.4
#export VERSIONDATE=20130116
#export VERSION=3.8.0
#export VERSIONDATE=20130325
#export VERSION=3.8.3
#export VERSIONDATE=20130716
#export VERSION=3.10.0
#export VERSIONDATE=20130924
#export VERSION=3.10.1
#export VERSIONDATE=20131112
#export VERSION=3.10.2
#export VERSIONDATE=20140318
#export VERSION=3.13.1
#export VERSIONDATE=20140625
#export VERSION=3.13.2
#export VERSIONDATE=20140626
#export VERSION=3.14.0
#export VERSIONDATE=20140923
#export VERSION=3.14.1
#export VERSIONDATE=20141122
#export VERSION=3.14.2
#export VERSIONDATE=20141218
####No package 'gdk-x11-2.0' found
####No package 'libcanberra-gtk' found
####No package 'gnome-bluetooth-1.0' found
#export VERSION=3.18.0
#export VERSIONDATE=20150922
#export VERSION=3.18.2
#export VERSIONDATE=20160901
#export VERSION=3.18.3
#export VERSIONDATE=20160920
#export VERSION=3.20.0
#export VERSIONDATE=20160321
#export VERSION=3.28.0
#export VERSIONDATE=20180411
#export VERSION=3.32.0
#export VERSIONDATE=20190307
#export VERSION=3.32.0.1
#export VERSIONDATE=20190312
#export VERSION=3.33.1
#export VERSIONDATE=20190417
export VERSION=3.34.0
export VERSIONDATE=20190906
#export VERSION=43.0
#export VERSIONDATE=20220916
#export VERSION=47.0
#export VERSIONDATE=20240915
#export VERSION=47.2
#export VERSIONDATE=20241124
#export VERSION=48.0
#export VERSIONDATE=20250316
#export VERSION=48.1
#export VERSIONDATE=20250630
####No package 'libnautilus-extension' found
wl-showstatus --package-version
export DEPENDENCIES=glib2,gtk3,gconf,dbus,dbus-glib,libnotify,libcanberra,gnome-bluetooth
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gnome-user-share/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://download.gnome.org/sources/gnome-user-share/$(echo $VERSION|sed 's/^\([0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
 PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



#export BUILDDEPENDENCIES=meson,ninja
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS -Dcpp_link_args=$LDFLAGS
## fix location of Perl
#sed -i.bak -e "s?'perl'?'$(cygpath -w $PERLDIR/bin/perl.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix detection of Python
#sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix missing gio-unix
##sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
#mkdir -p build_both &&
# wl-showstatus configure &&
# PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Ddocumentation=true . build_both &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## fix Python path issues in meson_exe
# #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
# ## fix executing shell scripts
# #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib \
# #PATH=$PYDIR:$PATH PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} \
# #ninja -Cbuild_both install/strip &&
# ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'
