export NAME="LibSourcey"
export STATUS=
export URL=http://sourcey.com/libsourcey/
export BASENAME=libsourcey
export DESCRIPTION="LibSourcey is a collection of open source cross platform C++11 modules and classes which provide developers with a flexible high performance arsenal for the rapid development of real-time messaging and live media streaming applications."
export CATEGORY=multimedia
export TYPE=library
#export VERSION=master
#export VERSIONDATE=20151223
#export VERSION=1.1.3
#export VERSIONDATE=20180323
export VERSION=1.1.4
export VERSIONDATE=20180325
wl-showstatus --package-version
export DEPENDANCIES=libuv
#export OPTIONALDEPENDANCIES=zlib,libav,opencv,openssl,lame,libogg,libvorbis,libopus,libtheora,libvpx,libx265,xz
export OPTIONALDEPENDANCIES=zlib,ffmpeg3,opencv,openssl,lame,libogg,libvorbis,libopus,libtheora,libvpx,libx265,xz
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=LICENSE.md
export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/sourcey/libsourcey/releases"
export DOWNLOADURL="https://github.com/sourcey/libsourcey/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/sourcey/libsourcey/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/sourcey/libsourcey/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/archo/src/zipfile.cpp
mv src/archo/src/zipfile.cpp src/archo/src/zipfile.cpp.bak &&
sed -e "s/\#if !WIN32/\#ifndef _WIN32/" src/archo/src/zipfile.cpp.bak > src/archo/src/zipfile.cpp
# fix cmake/FindLibUV.cmake
patch -ulbf cmake/FindLibUV.cmake << EOF
--- cmake/FindLibUV.cmake  2015-12-07 12:42:20.000000000 +0100
+++ cmake/FindLibUV.cmake  2015-12-23 11:56:53.439040800 +0100
@@ -125,2 +125,4 @@
     #endif()
+  elseif(\${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
+    set(LibUV_DEPENDENCIES "$(pkg-config --libs libuv)")
   else()
EOF
#wl-showstatus configure &&
#mkdir -p build-static &&
#cd build-static &&
#-DWITH_WXWIDGETS:BOOL=ON -DwxWidgets_LIBRARIES:PATH=$MINGWPREFIX/wx/lib/gcc_dll -DwxWidgets_INCLUDE_DIRS:PATH=$MINGWPREFIX/wx/include/wx
#cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_CONFIGURATION_TYPES:STRING=Release -DBUILD_DEPENDENCIES:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild-static install/strip &&
#    echo OK

#-DWITH_WXWIDGETS:BOOL=ON -DwxWidgets_LIBRARIES:PATH=$MINGWPREFIX/wx/lib/gcc_dll -DwxWidgets_INCLUDE_DIRS:PATH=$MINGWPREFIX/wx/include/wx 
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cd build_static &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DEPENDENCIES:BOOL=OFF .. &&
 C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DEPENDENCIES:BOOL=OFF .. &&
 cd .. &&
 wl-showstatus configure &&
 cd build_shared &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DEPENDENCIES:BOOL=OFF .. &&
 C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DEPENDENCIES:BOOL=OFF .. &&
 echo "-Wl,--as-needed -lstrmiids" >> av/CMakeFiles/av.dir/linklibs.rsp &&
 cd .. &&
 wl-showstatus build-install &&
 make -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 make -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



