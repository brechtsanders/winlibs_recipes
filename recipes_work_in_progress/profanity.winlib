export NAME="Profanity"
export STATUS=
export URL=https://profanity-im.github.io/
export BASENAME=profanity
export DESCRIPTION="A console based XMPP client"
export CATEGORY=communication
export TYPE=application
#export VERSION=0.9.5
#export VERSIONDATE=20200916
#export VERSION=0.10.0
#export VERSIONDATE=20210109
#export VERSION=0.11.0
#export VERSIONDATE=20210715
#export VERSION=0.11.1
#export VERSIONDATE=20210929
#export VERSION=0.12.0
#export VERSIONDATE=20220330
#export VERSION=0.12.1
#export VERSIONDATE=20220408
export VERSION=0.13.0
export VERSIONDATE=20220913
wl-showstatus --package-version
export DEPENDANCIES=libstrophe,ncurses,readline,sqlite3,libcurl,libdl
export OPTIONALDEPENDANCIES=libomemo,libsignal-protocol-c,stabber
export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=GPL
#export DOWNLOADURL="https://profanity-im.github.io/"
export DOWNLOADURL="https://github.com/profanity-im/profanity/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/profanity-im/profanity/releases/download/$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix/sys
echo "#include <winsock2.h>" > winfix/sys/socket.h
touch winfix/sys/select.h
# fix src/log.c (version >= 0.11.1)
patch -ulbf src/log.c << EOF
@@ -45,2 +45,5 @@
 #include <unistd.h>
+#ifdef _WIN32
+#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
+#endif

@@ -800,2 +803,5 @@

+#ifndef F_GETFL
+    rc = -1;
+#else
     rc = fcntl(fd, F_GETFL);
@@ -803,2 +809,3 @@
         rc = fcntl(fd, F_SETFL, rc | O_NONBLOCK);
+#endif

EOF
# fix src/common.c (version >= 0.11.1)
patch -ulbf src/common.c << EOF
@@ -78,3 +78,7 @@
     if (stat(name, &sb) != 0) {
+#ifdef _WIN32
+        if (errno != ENOENT || mkdir(name) != 0) {
+#else
         if (errno != ENOENT || mkdir(name, S_IRWXU) != 0) {
+#endif
             return FALSE;
EOF
# fix src/profanity.c (version >= 0.11.1)
patch -ulbf src/profanity.c << EOF
@@ -165,6 +165,12 @@
     // ignore SIGPIPE
+#ifdef SIGPIPE
     signal(SIGPIPE, SIG_IGN);
+#endif
     signal(SIGINT, SIG_IGN);
+#ifdef SIGTSTP
     signal(SIGTSTP, SIG_IGN);
+#endif
+#ifdef SIGWINCH
     signal(SIGWINCH, ui_sigwinch_handler);
+#endif
     if (pthread_mutex_init(&lock, NULL) != 0) {
EOF
# fix src/ui/core.c (version >= 0.11.1)
patch -ulbf src/ui/core.c << EOF
@@ -44,3 +44,5 @@
 #include <assert.h>
+#ifndef _WIN32
 #include <sys/ioctl.h>
+#endif
 #include <unistd.h>
@@ -146,6 +148,10 @@
     if (perform_resize) {
+#ifdef SIGWINCH
         signal(SIGWINCH, SIG_IGN);
+#endif
         ui_resize();
         perform_resize = FALSE;
+#ifdef SIGWINCH
         signal(SIGWINCH, ui_sigwinch_handler);
+#endif
     }
@@ -195,2 +201,3 @@
 {
+#ifdef TIOCGWINSZ
     struct winsize w;
@@ -206,2 +213,3 @@
     inp_win_resize();
+#endif
     ProfWin* window = wins_get_current();
EOF
# fix src/command/cmd_funcs.c (version >= 0.11.1)
patch -ulbf src/command/cmd_funcs.c << EOF
@@ -51,3 +51,7 @@
 #include <unistd.h>
+#ifdef _WIN32
+#define nl_langinfo(codeset) "UTF-8"
+#else
 #include <langinfo.h>
+#endif
 #include <ctype.h>
@@ -57,3 +61,5 @@
 #include <unistd.h>
+#ifndef _WIN32
 #include <sys/wait.h>
+#endif
 #include <readline/readline.h>
@@ -9497,2 +9503,6 @@
     // Fork / exec
+#ifdef _WIN32
+    cons_show_error("fork() not suported on Windows");
+    return TRUE;
+#else
     pid_t pid = fork();
@@ -9533,2 +9543,3 @@
     }
+#endif
     return TRUE;
EOF
# fix missing getline in src/config/scripts.c (version >= 0.11.1)
mv src/config/scripts.c src/config/scripts.c.bak
cat > src/config/scripts.c << EOF
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define GETLINE_BUFLEN 128
static ssize_t getline(char** lineptr, size_t* n, FILE* stream)
{
  char* bufptr;
  char* p;
  ssize_t size;
  int c;
  if (!lineptr || !n || !stream)
    return -1;
  bufptr = *lineptr;
  size = *n;
  c = fgetc(stream);
  if (c == EOF)
    return -1;
  if (!bufptr) {
    if ((bufptr = (char*)malloc(GETLINE_BUFLEN)) == NULL)
      return -1;
    size = GETLINE_BUFLEN;
  }
  p = bufptr;
  while (c != EOF) {
    if ((p - bufptr) > (size - 1)) {
      size = size + GETLINE_BUFLEN;
      if ((bufptr = (char*)realloc(bufptr, size)) == NULL)
        return -1;
    }
    *p++ = c;
    if (c == '\n') {
      break;
    }
    c = fgetc(stream);
  }
  *p++ = 0;
  *lineptr = bufptr;
  *n = size;
  return p - bufptr - 1;
}
EOF
cat src/config/scripts.c.bak >> src/config/scripts.c
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-python-plugins CFLAGS="-I$(pwd)/winfix -I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -lws2_32 -ldl" &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 #wl-showstatus build &&
 #make &&
 echo "#include <pthread.h>" >> src/config.h &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



