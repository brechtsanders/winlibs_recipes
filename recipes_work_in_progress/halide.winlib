export NAME="Halide"
export STATUS=
export URL=https://halide-lang.org/
#export URL=https://github.com/halide/Halide
export BASENAME=halide
export DESCRIPTION="Halide is a programming language designed to make it easier to write high-performance image and array processing code on modern machines."
export CATEGORY=development
export TYPE=application
#export VERSION=13.0.4
#export VERSIONDATE=20220203
#export VERSION=14.0.0
#export VERSIONDATE=20220408
####llvm-ar.exe: error: src\libHalide.a: Function not implemented
#export VERSION=15.0.0
#export VERSIONDATE=20230307
#export VERSION=15.0.1
#export VERSIONDATE=20230408
#export VERSION=16.0.0
#export VERSIONDATE=20230624
#export VERSION=17.0.0
#export VERSIONDATE=20240202
#export VERSION=17.0.1
#export VERSIONDATE=20240221
export VERSION=17.0.2
export VERSIONDATE=20240626
wl-showstatus --package-version
export DEPENDENCIES=zlib,libjpeg,libpng,libxml2,mman-win32
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,llvm-project
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/halide/Halide/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/halide/Halide/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd Halide-$VERSION
# fix missing GetCurrentThreadStackLimits in src/Util.cpp
mv src/Util.cpp src/Util.cpp.bak
cat > src/Util.cpp << EOF
#if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0602
#undef _WIN32_WINNT
#define _WIN32_WINNT 0x0602
#endif
EOF
cat src/Util.cpp.bak >> src/Util.cpp
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PATH=$MINGWPREFIX/share/llvm/bin:$PATH cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DHalide_SHARED_LLVM:BOOL=OFF -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DFLATBUFFERS_USE_FETCHCONTENT:BOOL=OFF -DWITH_PYTHON_BINDINGS:BOOL=OFF -DWITH_TUTORIALS:BOOL=OFF -DWITH_DOCS:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DLLVM_DIR:PATH=$MINGWPREFIX/share/llvm -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -S. -Bbuild_static &&
 wl-showstatus configure &&
 PATH=$MINGWPREFIX/share/llvm/bin:$PATH cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DHalide_SHARED_LLVM:BOOL=ON -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DFLATBUFFERS_USE_FETCHCONTENT:BOOL=OFF -DWITH_PYTHON_BINDINGS:BOOL=OFF -DWITH_TUTORIALS:BOOL=OFF -DWITH_DOCS:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DLLVM_DIR:PATH=$MINGWPREFIX/share/llvm -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -S. -Bbuild_shared &&
 #sed -i.bak -e "s/ -lLLVM / /" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf Halide-$VERSION



