export NAME="reSIProcate"
export STATUS=
export URL=http://www.resiprocate.org/
export BASENAME=resiprocate
export DESCRIPTION="The reSIProcate components, particularly the SIP stack, are in use in both commercial and open-source products. The project is dedicated to maintaining a complete, correct, and commercially usable implementation of SIP and a few related protocols."
export CATEGORY=audio,communication
export TYPE=library
#export VERSION=1.2.3
#export VERSION=1.3.1
#export VERSION=1.4.1
#export VERSION=1.5
#export VERSION=1.6
#export VERSION=1.7
#export VERSIONDATE=20110518
#export VERSION=1.8.1
#export VERSIONDATE=20120524
#export VERSION=1.8.2
#export VERSIONDATE=20120526
#export VERSION=1.8.3
#export VERSIONDATE=20120623
#export VERSION=1.8.4
#export VERSIONDATE=20120705
#export VERSION=1.8.5
#export VERSIONDATE=20120810
#export VERSION=1.8.6
#export VERSIONDATE=20130110
#export VERSION=1.8.7
#export VERSIONDATE=20130406
#export VERSION=1.8.8
#export VERSIONDATE=20130508
#export VERSION=1.8.9
#export VERSIONDATE=20130621
#export VERSION=1.8.10
#export VERSIONDATE=20130622
#export VERSION=1.8.11
#export VERSIONDATE=20130718
#export VERSION=1.8.12
#export VERSIONDATE=20130806
#export VERSION=1.8.13
#export VERSIONDATE=20130911
#export VERSION=1.8.14
#export VERSIONDATE=20130929
####rutil/dns/AresDns.cxx:198:18: error: invalid use of incomplete type 'struct ares_channeldata'
#export VERSION=1.9.0
#export VERSIONDATE=20140211
#export VERSION=1.9.1
#export VERSIONDATE=20140221
####rutil/resipfaststreams.hxx:268:19: error: '_CVTBUFSIZE' was not declared in this scope
#export VERSION=1.9.2
#export VERSIONDATE=20140311
####rutil/dns/AresDns.cxx:202:18: error: invalid use of incomplete type 'struct ares_channeldata'
####rutil/dns/AresDns.cxx:670:33: error: 'C_IN' was not declared in this scope
#export VERSION=1.9.5
#export VERSIONDATE=20140329
#export VERSION=1.9.6
#export VERSIONDATE=20140411
#export VERSION=1.9.7
#export VERSIONDATE=20140601
#export VERSION=1.9.8
#export VERSIONDATE=20141209
#export VERSION=1.9.9
#export VERSIONDATE=20150530
#export VERSION=1.9.11
#export VERSIONDATE=20150918
#export VERSION=1.10.0
#export VERSIONDATE=20151002
####rutil/dns/AresDns.cxx:202:18: error: invalid use of incomplete type 'struct ares_channeldata'
#export VERSION=1.10.1
#export VERSIONDATE=20151101
#export VERSION=1.10.2
#export VERSIONDATE=20160517
#export VERSION=1.12.0
#export VERSIONDATE=20200510
####dns/ares/ares.h:129:8: error: forward declaration of 'struct ares_channeldata'
export VERSION=1.13.1
export VERSIONDATE=20250117
#export VERSION=1.13.2
#export VERSIONDATE=20250515
####Could NOT find Netxx (missing: NETXX_LIBRARY NETXX_INCLUDE_DIR)
wl-showstatus --package-version
export DEPENDENCIES=pthreads,boost,openssl,c-ares,netxx
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=tfm/LICENSE
export LICENSETYPE=
#export DOWNLOADURL="http://www.resiprocate.org/files/pub/reSIProcate/releases/"
export DOWNLOADURL="https://github.com/resiprocate/resiprocate/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.resiprocate.org/files/pub/reSIProcate/releases/resiprocate-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://ftp.ec-m.fr/pub/OpenBSD/distfiles/resiprocate-1.12.0.tar.gz
#export DOWNLOADSOURCEURL=https://mirror.exonetric.net/pub/OpenBSD/distfiles/resiprocate-1.12.0.tar.gz
export DOWNLOADSOURCEURL=https://github.com/resiprocate/resiprocate/archive/refs/tags/resiprocate-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/resiprocate-$VERSION.tar.gz
#cd resiprocate-$VERSION
cd resiprocate-resiprocate-$VERSION
## create contrib/ares-build.MinGW.i686
#cp -rfp contrib/ares contrib/ares-build.MinGW.i686
## patch missing reference to IP_ADAPTER_ADDRESSES
#patch -ulbf contrib/ares/ares_init.c << EOF
#--- contrib/ares-build.MinGW.i686/ares_init.c   Fri Apr  4 22:36:50 2008
#+++ contrib/ares-build.MinGW.i686/ares_init.c   Fri Apr  4 22:53:43 2008
#@@ -930,3 +930,3 @@
# {
#-#ifdef WIN32
#+#if (_WIN32_WINNT >= 0x0501)
#   DWORD (WINAPI * GetAdaptersAddressesProc)(ULONG, DWORD, VOID *, IP_ADAPTER_ADDRESSES *, ULONG *);
#EOF
## fix missing _CVTBUFSIZE in rutil/resipfaststreams.hxx
#patch -ulbf rutil/resipfaststreams.hxx << EOF
#--- rutil/resipfaststreams.hxx  Fri Jun 19 22:27:20 2009
#+++ rutil/resipfaststreams.hxx  Sun Jun 21 21:21:38 2009
#@@ -12,2 +12,3 @@
# #include <stdio.h> //for snprintf
#+#include <stdlib.h>
# 
#@@ -85,4 +86,4 @@
# #define GCVT(f,sigdigits,buffer,bufferlen) SNPRINTF_1(buffer,bufferlen,bufferlen,"%f",f)
#-#define _CVTBUFSIZE 309+40
# #endif
#+#define _CVTBUFSIZE 309+40
#EOF
# fix error: extra qualification 'resip::WinCompat::' in rutil/WinCompat.hxx
mv rutil/WinCompat.hxx rutil/WinCompat.hxx.bak
sed -e "s/WinCompat:://" rutil/WinCompat.hxx.bak > rutil/WinCompat.hxx
##fix error: 'EOF' was not declared in this scope
#mv rutil/SysLogBuf.cxx rutil/SysLogBuf.cxx.bak
#echo "#include <stdio.h>" > rutil/SysLogBuf.cxx
#cat rutil/SysLogBuf.cxx.bak >> rutil/SysLogBuf.cxx
## fix rutil/dns/AresDns.hxx (version <= 1.8.5)
#mv rutil/dns/AresDns.hxx rutil/dns/AresDns.hxx.bak
#cat > rutil/dns/AresDns.hxx << EOF
##include "contrib/ares/ares.h"
#EOF
#cat rutil/dns/AresDns.hxx.bak >> rutil/dns/AresDns.hxx
# fix rutil/dns/AresDns.hxx (version <= 1.9.5)
mv rutil/dns/AresDns.hxx rutil/dns/AresDns.hxx.bak
cat > rutil/dns/AresDns.hxx << EOF
#include "dns/ares/ares.h"
EOF
cat rutil/dns/AresDns.hxx.bak >> rutil/dns/AresDns.hxx
# fix rutil/Time.hxx
patch -ulbf rutil/Time.hxx << EOF
--- rutil/Time.hxx  2012-05-25 18:26:08 +0200
+++ rutil/Time.hxx  2012-05-26 10:07:42 +0200
@@ -169 +169 @@
-                  static _declspec(align(128)) volatile UInt64 mBaseTime;
+                  static __declspec(align(128)) volatile UInt64 mBaseTime;
EOF
## fix rutil/Log.cxx for 64-bit (version <= 1.8.5)
#patch -ulbf rutil/Log.cxx << EOF
#--- rutil/Log.cxx  2012-05-25 18:26:06 +0200
#+++ rutil/Log.cxx  2012-05-26 10:12:30 +0200
#@@ -34,3 +34,3 @@
# #ifdef WIN32
#-int Log::mPid=0;
#+HANDLE Log::mPid=0;
# #else
#@@ -152,3 +152,3 @@
# #ifdef WIN32
#-   mPid = (int)GetCurrentProcess();
#+   mPid = GetCurrentProcess();
# #else
#EOF
# fix rutil/Log.cxx (version >= 1.8.6)
patch -ulbf rutil/Log.cxx << EOF
--- rutil/Log.cxx  2013-01-09 20:10:26 +0100
+++ rutil/Log.cxx  2013-01-10 08:13:06 +0100
@@ -152,3 +152,3 @@
 #ifdef WIN32
-   mPid = (int)GetCurrentProcess();
+   mPid = (int)GetCurrentProcessId();
 #else
EOF
## fix missing INT_MAX in rutil/Data.hxx (version >= 1.8.6)
#mv rutil/Data.hxx rutil/Data.hxx.bak
#echo "#include <limits.h>" > rutil/Data.hxx
#cat rutil/Data.hxx.bak >> rutil/Data.hxx
## fix missing C_IN in rutil/Data.hxx (version >= 1.9.5)
#mv rutil/Data.hxx rutil/Data.hxx.bak
#cat > rutil/Data.hxx << EOF
##include <winsock2.h>
##ifndef C_IN
## define C_IN 1
##endif
#EOF
#cat rutil/Data.hxx.bak >> rutil/Data.hxx
# fix missing definition of PIP_ADAPTER_ADDRESSES in rutil/WinCompat.hxx (version >= 1.8.6)
mv rutil/WinCompat.hxx rutil/WinCompat.hxx.bak
echo "#define _WIN32_WINNT 0x0501" > rutil/WinCompat.hxx
cat rutil/WinCompat.hxx.bak >> rutil/WinCompat.hxx
# fix for missing getaddrinfo/freeaddrinfo in rutil/DnsUtil.cxx (version >= 1.8.6)
mv rutil/DnsUtil.cxx rutil/DnsUtil.cxx.bak
cat > rutil/DnsUtil.cxx << EOF
#if _WIN32_WINNT < 0x0501
#define _WIN32_WINNT 0x0501
#endif
#include <ws2tcpip.h>
EOF
cat rutil/DnsUtil.cxx.bak >> rutil/DnsUtil.cxx
## fix contrib/ares/ares_init.c (version >= 1.8.6)
#patch -ulbf contrib/ares/ares_init.c << EOF
#--- rutil/dns/ares/ares_init.c  2013-01-09 20:10:26 +0100
#+++ rutil/dns/ares/ares_init.c  2013-01-12 10:31:34 +0100
#@@ -15,2 +15,3 @@
#
#+#define _WIN32_WINNT 0x0501
# #ifdef HAVE_CONFIG_H
#@@ -44,2 +45,3 @@
# #include <Windns.h>
#+#undef NOERROR
# #endif
#@@ -501,3 +503,3 @@
#
#-         (void*)GetNetworkParams = GetProcAddress(hLib, TEXT("GetNetworkParams"));
#+         GetNetworkParams = GetProcAddress(hLib, TEXT("GetNetworkParams"));
#          if(!GetNetworkParams)
#@@ -968,3 +970,3 @@
#
#-  (void*)GetAdaptersAddressesProc = GetProcAddress(hLib, TEXT("GetAdaptersAddresses"));
#+  GetAdaptersAddressesProc = GetProcAddress(hLib, TEXT("GetAdaptersAddresses"));
#   if(!GetAdaptersAddressesProc)
#EOF
# fix rutil/dns/ares/ares_init.c (version >= 1.9.5)
patch -ulbf rutil/dns/ares/ares_init.c << EOF
--- rutil/dns/ares/ares_init.c  2014-03-26 15:41:22 +0100
+++ rutil/dns/ares/ares_init.c  2014-03-29 09:19:56 +0100
@@ -530,3 +530,3 @@

-   (void*)GetAdaptersAddressesProc = GetProcAddress(hLib, TEXT("GetAdaptersAddresses"));
+   GetAdaptersAddressesProc = (void*)GetProcAddress(hLib, TEXT("GetAdaptersAddresses"));
    if(!GetAdaptersAddressesProc)
@@ -726,3 +726,3 @@

-   (void*)GetNetworkParamsProc = GetProcAddress(hLib, TEXT("GetNetworkParams"));
+   GetNetworkParamsProc = (void*)GetProcAddress(hLib, TEXT("GetNetworkParams"));
    if(!GetNetworkParamsProc)
EOF
## fix missing wspiapi.h (version >= 1.8.6)
#touch wspiapi.h
# fix missing getaddrinfo/freeaddrinfo in resip/stack/TransportSelector.cxx (version >= 1.8.6)
mv resip/stack/TransportSelector.cxx resip/stack/TransportSelector.cxx.bak
cat > resip/stack/TransportSelector.cxx << EOF
#define _WIN32_WINNT 0x0501
#include <ws2tcpip.h>
EOF
cat resip/stack/TransportSelector.cxx.bak >> resip/stack/TransportSelector.cxx
# fix missing getaddrinfo and freeaddrinfo in repro/RegSyncClient.cxx (version >= 1.8.6)
mv repro/RegSyncClient.cxx repro/RegSyncClient.cxx.bak
cat > repro/RegSyncClient.cxx << EOF
#define _WIN32_WINNT 0x0501
#include <ws2tcpip.h>
EOF
cat repro/RegSyncClient.cxx.bak >> repro/RegSyncClient.cxx
# include WinCompat.cxx in rutil (version >= 1.8.6)
sed -i.bak -e "s/^\(am__librutil_la_SOURCES_DIST *= *\)/\1WinCompat.cxx /" rutil/Makefile.in
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --ares-prefix=$INSTALLPREFIX --non-interactive --with-toolchain=gnu --with-compile-type=opt --enable-shared-libs --disable-distcc --disable-ccache --disable-dtls --disable-ssl --disable-sigcomp --disable-popt --disable-curl --disable-google-malloc --disable-google-cpuperf --disable-ipv6 --disable-resip-fixed-point --disable-pedantic-stack
 #./configure --prefix=$INSTALLPREFIX ---ares-prefix=$INSTALLPREFIX --with-toolchain=msgnu --non-interactive --with-compile-type=opt --enable-shared-libs --disable-distcc --disable-ccache --disable-dtls --disable-ssl --disable-popt --disable-curl --disable-google-malloc --disable-google-cpuperf --disable-ipv6 --disable-resip-fixed-point --disable-pedantic-stack
 #./configure --prefix=$INSTALLPREFIX --with-toolchain=gnu --non-interactive --with-resolver=resip-ares --with-compile-type=opt --enable-shared-libs --disable-distcc --disable-ccache --disable-dtls --disable-ssl --disable-popt --disable-curl --disable-google-malloc --disable-google-cpuperf --disable-ipv6 --disable-resip-fixed-point --disable-pedantic-stack
 #./configure --prefix=$INSTALLPREFIX --with-toolchain=gnu --non-interactive --with-resolver=c-ares --with-compile-type=opt --enable-shared-libs --disable-distcc --disable-ccache --disable-dtls --disable-ssl --disable-popt --disable-curl --disable-google-malloc --disable-google-cpuperf --disable-ipv6 --disable-resip-fixed-point --disable-pedantic-stack &&
 #./configure --prefix=$INSTALLPREFIX --with-c-ares LDFLAGS="-Wl,--as-needed -lws2_32 -lregex -lwinmm -Wl,-no-undefined" &&
 ./configure --prefix=$INSTALLPREFIX --without-c-ares --enable-ipv6 --enable-dtls CXXFLAGS="-fpermissive" LDFLAGS="-Wl,--as-needed -lws2_32 -lregex -lwinmm -Wl,-no-undefined" &&
 #--without-c-ares
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf resiprocate-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf resiprocate-resiprocate-$VERSION


##include <stdlib.h>
#
#####../build/../contrib/ares/ares_private.h:138: error: `socket_function_ptr' does not name a type
#
##cp 'C:\Program Files\Microsoft Platform SDK\Include\wspiapi.h' .
#mv resip/stack/TransportSelector.cxx resip/stack/TransportSelector.cxx.bak
#sed -e "s?\(#include <wspiapi.h>\)?//\1?" resip/stack/TransportSelector.cxx.bak > resip/stack/TransportSelector.cxx
#
## workaround for uname -r returning more than just numbers and dots
#mv build/Makefile.all build/Makefile.all.bak
#sed -e "s/^\(OSVER *:= *\).*$/\\11.0.0/" build/Makefile.all.bak > build/Makefile.all
#
#make -C resip/stack
#
##wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION
#cd ..
  



# fix CMakeLists.txt (version >= 1.13.1)
patch -ulbf CMakeLists.txt << EOF
@@ -44,2 +44,3 @@
 include(ExternalProject)
+find_package(PkgConfig)

@@ -231,3 +232,3 @@
 function(do_fail_win32)
-   message(FATAL_ERROR "please complete Win32 support for \${ARGV0} in CMakeLists.txt")
+   message(WARNING "please complete Win32 support for \${ARGV0} in CMakeLists.txt")
 endfunction()
EOF
# fix contrib/srtp/CMakeLists.txt (version >= 1.13.1)
patch -ulbf contrib/srtp/CMakeLists.txt << EOF
@@ -194,2 +194,3 @@
   enable_testing()
+endif()

@@ -209,2 +210,4 @@
 set_target_properties(srtp_driver PROPERTIES FOLDER contrib/libsrtp2)
-set_target_properties(test_srtp PROPERTIES FOLDER contrib/libsrtp2)
\\ No newline at end of file
+if(TEST_APPS)
+set_target_properties(test_srtp PROPERTIES FOLDER contrib/libsrtp2)
+endif()
EOF
mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -DBUILD_SHARED_LIBS:BOOL=ON -DWITH_SSL:BOOL=ON -DWITH_C_ARES:BOOL=ON -DUSE_NETSNMP:BOOL=ON -DUSE_NUGET:BOOL=OFF -DUSE_CONTRIB:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_test -LH && echo OK; rm -rf build_test

