export NAME="Cupt"
export STATUS=
export URL=https://wiki.debian.org/Cupt
#export URL=https://github.com/jackyf/cupt
export BASENAME=cupt
export DESCRIPTION="flexible package manager - Cupt is a partial re-implementation of APT suite from scratch."
export CATEGORY=
export TYPE=library
export VERSION=2.10.3
export VERSIONDATE=20201117
####missing Boost.Xpressive library
wl-showstatus --package-version
export DEPENDENCIES=boost,gettext
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,doxygen,txt2tags
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
#export DOWNLOADURL="https://github.com/jackyf/cupt/releases/"
export DOWNLOADURL="https://github.com/jackyf/cupt/tags/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/jackyf/cupt/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/jackyf/cupt/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix search locations and detections
sed -i.bak -e "s?/usr/?$(cygpath -m $MINGWPREFIX)/?; s/\(message(\)FATAL_ERROR\(.*need Boost of version\)/\1WARNING\2/" cpp/CMakeLists.txt
sed -i.bak -e "s?/usr/bin/doxygen?$(cygpath -m $MINGWPREFIX)/bin/doxygen.exe?; s?/usr/bin/txt2tags?$(cygpath -m $MINGWPREFIX)/python/Scripts/txt2tags-script.py?" doc/CMakeLists.txt
sed -i.bak -e "s/message(FATAL_ERROR.*Unable to detect Cupt version.*/set(CUPT_VERSION \"$VERSION\")/" cpp/version.cmake
# fix missing sys/wait.h
sed -i.bak -e "s?^#include <sys/wait\.h>?//&?" cpp/lib/src/download/manager.cpp cpp/lib/src/internal/common.hpp
# fix missing strerror_r
sed -i.bak -e "s/strerror_r/strerror_s/g" cpp/lib/include/cupt/format2.hpp cpp/lib/src/common.cpp
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



