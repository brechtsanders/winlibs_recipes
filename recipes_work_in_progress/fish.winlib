export NAME="fishshell"
export STATUS=
export URL=http://fishshell.com/
export BASENAME=fish
export DESCRIPTION="fish is a smart and user-friendly command line shell for Linux, macOS, and the rest of the family."
export CATEGORY=system
export TYPE=application
#export VERSION=3.0.2
#export VERSIONDATE=20191220
#export VERSION=3.1.0
#export VERSIONDATE=20200213
#export VERSION=3.1.1
#export VERSIONDATE=20200428
#export VERSION=3.1.2
#export VERSIONDATE=20200429
#export VERSION=3.2.0
#export VERSIONDATE=20210301
#export VERSION=3.2.1
#export VERSIONDATE=20210318
#export VERSION=3.2.2
#export VERSIONDATE=20210408
#export VERSION=3.3.0
#export VERSIONDATE=20210629
#export VERSION=3.3.1
#export VERSIONDATE=20210707
#export VERSION=3.4.0
#export VERSIONDATE=20220312
#export VERSION=3.4.1
#export VERSIONDATE=20220326
#export VERSION=3.5.0
#export VERSIONDATE=20220616
#export VERSION=3.5.1
#export VERSIONDATE=20220721
#export VERSION=3.6.0
#export VERSIONDATE=20230108
#export VERSION=3.6.1
#export VERSIONDATE=20230325
#export VERSION=3.6.3
#export VERSIONDATE=20231205
export VERSION=3.6.4
export VERSIONDATE=20231206
wl-showstatus --package-version
export DEPENDENCIES=gettext,pcre2,ncurses,getopt
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/fish-shell/fish-shell/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/fish-shell/fish-shell/releases/download/$VERSION/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/fish-shell/fish-shell/releases/download/$VERSION/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
## fix missing files
#mkdir -p winfix/sys
#touch winfix/sys/resource.h
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-included-pcre2 CFLAGS="-I$(pwd)/winfix -I$MINGWPREFIX/include/ncurses" &&
# ## fix building DLLs
# #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPCRE2_BUILD_PCRE2GREP:BOOL=OFF PCRE2_BUILD_PCRE2_16:BOOL=OFF -DPCRE2_BUILD_PCRE2_8:BOOL=ON -DBUILD_DOCS:BOOL=OFF -S. -Bbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



