export NAME="GSview"
export STATUS=
#export URL=http://pages.cs.wisc.edu/~ghost/gsview/
export URL=http://www.ghostgum.com.au/software/gsview.htm
export BASENAME=gsview
export DESCRIPTION="GSview is a graphical interface for Ghostscript. Ghostscript is an interpreter for the PostScript page description language used by laser printers. For documents following the Adobe PostScript Document Structuring Conventions, GSview allows selected pages to be viewed or printed. GSview requires Ghostscript. GSview is available for Windows, OS/2 and Linux."
export CATEGORY=graphics
export TYPE=application
export VERSION=5.0
export VERSIONDATE=20170303
wl-showstatus --package-version
export DEPENDENCIES=gnu-ghostscript
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENCE
export LICENSETYPE="Aladdin Free Public Licence"
export DOWNLOADURL="http://pages.cs.wisc.edu/~ghost/gsview/download/"
export DOWNLOADURL="http://www.ghostgum.com.au/software/gsview.htm"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://pages.cs.wisc.edu/~ghost/gsview/download/gsv$(echo $VERSION|sed -e "s/\.//g")src.zip
export DOWNLOADSOURCEURL=http://www.ghostgum.com.au/download/gsv$(echo $VERSION|sed -e "s/\.//g")src.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
unzip -oq $TARBALLDIR/$BASENAME/gsv$(echo $VERSION|sed -e "s/\.//g")src.zip
cd $BASENAME-$VERSION
mv srcwin/wincom.mak srcwin/wincom.mak.bak &&
grep -v "^!" srcwin/wincom.mak.bak > srcwin/wincom.mak
mv srcwin/cygwin.mak srcwin/cygwin.mak.bak &&
sed -e "s/-mno-cygwin//" srcwin/cygwin.mak.bak > srcwin/cygwin.mak

wl-showstatus build &&
 #make -j1 -Csrc -fcommon.mak EXE=.exe OBJ=.o CO=-c CC=${CC:-gcc} CCAUX="gcc -o"
 #make -Csrc -fcommon.mak echogsv.exe gvdoc.exe doc2ipf.exe doc2html.exe doc2rtf.exe doc2hhp.exe codepage.exe EXE=.exe OBJ=.o CO=-c OD= CC=${CC:-gcc} CCAUX="gcc -o" COMP="gcc -D_Windows -D__WIN32__" &&
 make -Csrc -fcommon.mak echogsv.exe gvdoc.exe doc2ipf.exe doc2html.exe doc2rtf.exe doc2hhp.exe codepage.exe EXE=.exe OBJ=.o CO=-c OD= CC=${CC:-gcc} CCAUX="gcc -o" COMP="gcc -D_Windows -D__WIN32__" OBJDIR="$(pwd)/obj" BINDIR="$(pwd)/bin" &&
 #make -Csrcwin -fcygwin.mak SRC="$(pwd)/src/" SRCWIN="$(pwd)/srcwin/" &&
 make -j1 -fsrcwin/cygwin.mak SRC="$(pwd)/src/" SRCWIN="$(pwd)/srcwin/" &&
    echo OK

  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE* COPYRIGHT* configure* CMakeLists.txt Makefile
wl-showstatus configure &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



