export NAME="baobab"
export STATUS=
#export URL=http://library.gnome.org/users/baobab/
export URL=http://www.marzocca.net/linux/baobab/
export BASENAME=baobab
export DESCRIPTION="Disk Usage Analyzer is a graphical, menu-driven viewer that you can use to view and monitor your disk usage and folder structure."
export CATEGORY=system
export TYPE=application
#export VERSION=2.32.0
#export VERSIONDATE=20111219
#export VERSION=3.2.1
#export VERSIONDATE=20111219
#export VERSION=3.3.1
#export VERSIONDATE=20111219
#export VERSION=3.3.2
#export VERSIONDATE=20120303
#export VERSION=3.3.3
#export VERSIONDATE=20120309
#export VERSION=3.3.4
#export VERSIONDATE=20120320
#export VERSION=3.4.0
#export VERSIONDATE=20120327
#export VERSION=3.4.1
#export VERSIONDATE=20120409
#export VERSION=3.5.3
#export VERSIONDATE=20120624
#export VERSION=3.5.4
#export VERSIONDATE=20120802
####configure: error: Vala 0.17.1.15 not found.
#export VERSION=3.5.5
#export VERSIONDATE=20120806
#export VERSION=3.5.91
#export VERSIONDATE=20120904
#export VERSION=3.5.92
#export VERSIONDATE=20120918
####Requested 'gtk+-3.0 >= 3.5.9' but version of GTK+ is 3.4.3
#export VERSION=3.6.0
#export VERSIONDATE=20120925
#export VERSION=3.6.1
#export VERSIONDATE=20121016
#export VERSION=3.6.2
#export VERSIONDATE=20121017
#export VERSION=3.6.3
#export VERSIONDATE=20121115
#export VERSION=3.6.4
#export VERSIONDATE=20130112
#export VERSION=3.7.4
#export VERSIONDATE=20130114
####No package 'libgtop-2.0' found
#export DEPENDANCIES=libgtop
#export VERSION=3.8.0
#export VERSIONDATE=20130326
#export VERSION=3.8.1
#export VERSIONDATE=20130416
#export VERSION=3.8.2
#export VERSIONDATE=20130514
#export VERSION=3.9.1
#export VERSIONDATE=20130709
#export VERSION=3.9.2
#export VERSIONDATE=20130726
#export VERSION=3.9.3
#export VERSIONDATE=20130803
#export VERSION=3.10
#export VERSIONDATE=20130924
#export VERSION=3.10.1
#export VERSIONDATE=20131014
#export VERSION=3.11.1
#export VERSIONDATE=20140204
#export VERSION=3.12.0
#export VERSIONDATE=20140325
#export VERSION=3.12.1
#export VERSIONDATE=20140418
#export VERSION=3.13.1
#export VERSIONDATE=20140528
#export VERSION=3.13.2
#export VERSIONDATE=20140724
#export VERSION=3.14.0
#export VERSIONDATE=20140923
#export VERSION=3.14.1
#export VERSIONDATE=20141014
#export VERSION=3.16.0
#export VERSIONDATE=20150324
#export VERSION=3.16.1
#export VERSIONDATE=20150414
#export VERSION=3.18.0
#export VERSIONDATE=20150924
#export VERSION=3.18.1
#export VERSIONDATE=20151009
#export VERSION=3.20.0
#export VERSIONDATE=20160320
#export VERSION=3.20.1
#export VERSIONDATE=20160411
#export VERSION=3.22.0
#export VERSIONDATE=20160919
#export VERSION=3.22.1
#export VERSIONDATE=20161108
#export VERSION=3.24.0
#export VERSIONDATE=20170321
####checking for gobject-introspection... configure: error: gobject-introspection-1.0 is not installed
#export DEPENDANCIES=libgtop,gobject-introspection
#export VERSION=3.26.0
#export VERSIONDATE=20170911
#export VERSION=3.26.1
#export VERSIONDATE=20171003
#export VERSION=3.27.1
#export VERSIONDATE=20171017
#export VERSION=3.27.2
#export VERSIONDATE=20171212
#export VERSION=3.28.0
#export VERSIONDATE=20180312
#export VERSION=3.30.0
#export VERSIONDATE=20180903
#export VERSION=3.31.1
#export VERSIONDATE=20181113
#export VERSION=3.32.0
#export VERSIONDATE=20190312
#export VERSION=3.34.0
#export VERSIONDATE=20190910
export VERSION=3.34.1
export VERSIONDATE=20200629
#export VERSION=3.35.1
#export VERSIONDATE=20200620
#export VERSION=3.35.2
#export VERSIONDATE=20200703
#export VERSION=3.38.0
#export VERSIONDATE=20200913
####msgfmt.exe: cannot locate ITS rules for org.gnome.baobab.appdata.xml.in
#export VERSION=40.0
#export VERSIONDATE=20210321
#export VERSION=41.0
#export VERSIONDATE=20210922
####src/baobab-scanner.vala:451.26-451.47: error: The type name `UnixMountEntry' could not be found
wl-showstatus --package-version
export DEPENDANCIES=libgtop
export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=itstool
export BUILDDEPENDANCIES=meson,ninja,itstool
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://library.gnome.org/users/baobab/"
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/baobab/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/baobab/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/baobab/$(echo $VERSION|sed -e "s/^\([0-9]*\)\..*$/\1/")/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# skip Unix stuff in src/baobab-scanner.c
patch -ulbf src/baobab-scanner.c << EOF
@@ -33,3 +33,5 @@
 #include <math.h>
+#ifndef _WIN32
 #include <gio/gunixmounts.h>
+#endif

@@ -1231,2 +1233,5 @@
 BaobabScanner* baobab_scanner_construct (GType object_type, GFile* directory, BaobabScanFlags flags) {
+#ifdef _WIN32
+       return NULL;
+#else
        BaobabScanner * self = NULL;
@@ -1310,2 +1315,3 @@
        return self;
+#endif
 }
EOF
# fix src/baobab-scanner.vala (version >= 3.34.1)
patch -ulbf src/baobab-scanner.vala << EOF
@@ -449,7 +449,2 @@

-            if (ScanFlags.EXCLUDE_MOUNTS in flags) {
-                foreach (unowned UnixMountEntry mount in UnixMountEntry.get (null)) {
-                    excluded_locations.add (File.new_for_path (mount.get_mount_path ()));
-                }
-            }

EOF
#wl-showstatus configure &&
# INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# wl-showstatus build-install &&
# GETTEXTDATADIR=$MINGWPREFIX/share/gettext make install-strip baobab_LDFLAGS= ITSTOOL="$PYDIR/python.exe $(which itstool)" &&
#    echo OK



#export BUILDDEPENDANCIES=meson,ninja
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS
## fix location of Perl
#sed -i.bak -e "s?'perl'?'$(cygpath -w $PERLDIR/bin/perl.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix detection of Python
#sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix missing gio-unix
sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both . build_both &&
 ## fix slash/backslash path issue when calling Python from Ninja
 #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 ## fix Python path issues in meson_exe
 #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
 ## fix executing shell scripts
 #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
    echo OK && find . -name '*.a'
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



