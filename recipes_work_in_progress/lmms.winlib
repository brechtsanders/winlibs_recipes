export NAME="LMMS"
export STATUS=
export URL=https://lmms.io/
export BASENAME=lmms
export DESCRIPTION="LMMS is a free cross-platform alternative to commercial programs like FL Studio(R), which allow you to produce music with your computer. This includes the creation of melodies and beats, the synthesis and mixing of sounds, and arranging of samples. You can have fun with your MIDI-keyboard and much more; all in a user-friendly and modern interface."
export CATEGORY=audio
export TYPE=application
export VERSION=1.2.2
export VERSIONDATE=20240108
wl-showstatus --package-version
export DEPENDENCIES=qt,libsndfile,sdl,portaudio,ladspa,libogg,libvorbis,fftw,fltk,fluidsynth,libsamplerate
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=doxygen
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/LMMS/lmms/releases lmms_"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/LMMS/lmms/releases/download/v$VERSION/lmms_$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
tar xJ --force-local -f $TARBALLDIR/$BASENAME/lmms_$VERSION.tar.xz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/lmms
# fix error: too few arguments to function 'void rpmalloc_thread_finalize(int)' in src/core/MemoryManager.cpp (version >= 1.2.2)
patch -ulbf src/core/MemoryManager.cpp << EOF
@@ -55,3 +55,3 @@
        if (--thread_guard_depth == 0) {
-               rpmalloc_thread_finalize();
+               rpmalloc_thread_finalize(1);
        }
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DWANT_QT5:BOOL=ON -DWANT_WINMM:BOOL=ON -S. -Bbuild_win &&
 wl-showstatus build-install &&
 make -Cbuild_win install/strip &&
    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#mkdir -p build_win &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DWANT_QT5:BOOL=ON -DWANT_WINMM:BOOL=ON -S. -Bbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



