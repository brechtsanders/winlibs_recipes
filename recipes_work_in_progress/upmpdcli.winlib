export NAME="upmpdcli"
export STATUS=
export URL=http://www.lesbonscomptes.com/upmpdcli/
export BASENAME=upmpdcli
export DESCRIPTION="upmpdcli is a UPnP Media Renderer front-end for MPD, the Music Player Daemon. It supports UPnP gapless track transitions and the OpenHome ohMedia services (including a Radio service to listen to Internet streams). With a complementary application, it also supports a Linn Songcast Receiver and Sender."
export CATEGORY=audio
export TYPE=library
#export VERSION=1.1.3
#export VERSIONDATE=20160606
#export VERSION=1.1.4
#export VERSIONDATE=20160810
#export VERSION=1.2.0
#export VERSIONDATE=20160910
#export VERSION=1.2.2
#export VERSIONDATE=20160911
#export VERSION=1.2.4
#export VERSIONDATE=20161003
#export VERSION=1.2.5
#export VERSIONDATE=20161004
#export VERSION=1.2.7
#export VERSIONDATE=20161010
#export VERSION=1.2.8
#export VERSIONDATE=20161010
#export VERSION=1.2.9
#export VERSIONDATE=20161014
#export VERSION=1.2.10
#export VERSIONDATE=20161120
#export VERSION=1.2.11
#export VERSIONDATE=20161226
#export VERSION=1.2.12
#export VERSIONDATE=20170103
#export VERSION=1.2.13
#export VERSIONDATE=20170214
#export VERSION=1.2.14
#export VERSIONDATE=20170519
#export VERSION=1.2.15
#export VERSIONDATE=20170622
#export VERSION=1.2.16
#export VERSIONDATE=20180406
#export VERSION=1.3.0
#export VERSIONDATE=20180902
#export VERSION=1.3.1
#export VERSIONDATE=20180907
#export VERSION=1.3.2
#export VERSIONDATE=20180915
#export VERSION=1.3.3
#export VERSIONDATE=20180920
#export VERSION=1.3.4
#export VERSIONDATE=20181001
#export VERSION=1.3.5
#export VERSIONDATE=20181006
#export VERSION=1.3.6
#export VERSIONDATE=20181008
#export VERSION=1.3.7
#export VERSIONDATE=20181212
#export VERSION=1.3.8
#export VERSIONDATE=20181213
#export VERSION=1.4.0
#export VERSIONDATE=20190117
#export VERSION=1.4.1
#export VERSIONDATE=20190214
#export VERSION=1.4.2
#export VERSIONDATE=20190328
#export VERSION=1.4.6
#export VERSIONDATE=20200207
#export VERSION=1.4.7
#export VERSIONDATE=20200226
#export VERSION=1.4.8
#export VERSIONDATE=20200425
#export VERSION=1.4.9
#export VERSIONDATE=20200426
#export VERSION=1.4.10
#export VERSIONDATE=20200517
#export VERSION=1.4.11
#export VERSIONDATE=20200611
#export VERSION=1.4.12
#export VERSIONDATE=20200612
#export VERSION=1.4.13
#export VERSIONDATE=20200831
#export VERSION=1.4.14
#export VERSIONDATE=20200902
#export VERSION=1.5.0
#export VERSIONDATE=20201115
#export VERSION=1.5.1
#export VERSIONDATE=20201123
#export VERSION=1.5.2
#export VERSIONDATE=20201124
#export VERSION=1.5.3
#export VERSIONDATE=20201201
#export VERSION=1.5.4
#export VERSIONDATE=20201206
#export VERSION=1.5.5
#export VERSIONDATE=20201208
#export VERSION=1.5.6
#export VERSIONDATE=20201225
#export VERSION=1.5.7
#export VERSIONDATE=20201231
#export VERSION=1.5.8
#export VERSIONDATE=20210111
#export VERSION=1.5.9
#export VERSIONDATE=20210224
#export VERSION=1.5.10
#export VERSIONDATE=20210302
#export VERSION=1.5.11
#export VERSIONDATE=20210313
#export VERSION=1.5.12
#export VERSIONDATE=20210422
#export VERSION=1.5.13
#export VERSIONDATE=20211013
#export VERSION=1.5.14
#export VERSIONDATE=20220401
#export VERSION=1.5.15
#export VERSIONDATE=20220414
#export VERSION=1.5.16
#export VERSIONDATE=20220423
#export VERSION=1.5.17
#export VERSIONDATE=20220522
#export VERSION=1.5.18
#export VERSIONDATE=20220614
#export VERSION=1.5.19
#export VERSIONDATE=20220628
#export VERSION=1.5.20
#export VERSIONDATE=20220831
#export VERSION=1.6.0
#export VERSIONDATE=20221009
#export VERSION=1.6.1
#export VERSIONDATE=20221022
#export VERSION=1.6.2
#export VERSIONDATE=20221207
#export VERSION=1.6.3
#export VERSIONDATE=20221220
#export VERSION=1.7.0
#export VERSIONDATE=20221228
#export VERSION=1.7.1
#export VERSIONDATE=20230115
#export VERSION=1.7.2
#export VERSIONDATE=20230213
#export VERSION=1.7.5
#export VERSIONDATE=20230320
#export VERSION=1.7.6
#export VERSIONDATE=20230320
#export VERSION=1.7.7
#export VERSIONDATE=20230322
#export VERSION=1.7.8
#export VERSIONDATE=20230419
#export VERSION=1.7.9
#export VERSIONDATE=20230420
#export VERSION=1.8.0
#export VERSIONDATE=20230524
#export VERSION=1.8.1
#export VERSIONDATE=20230626
#export VERSION=1.8.2
#export VERSIONDATE=20230918
#export VERSION=1.8.3
#export VERSIONDATE=20230918
#export VERSION=1.8.4
#export VERSIONDATE=20231030
#export VERSION=1.8.5
#export VERSIONDATE=20231124
#export VERSION=1.8.6
#export VERSIONDATE=20231123
#export VERSION=1.8.7
#export VERSIONDATE=20240109
#export VERSION=1.8.8
#export VERSIONDATE=20240213
#export VERSION=1.8.9
#export VERSIONDATE=20240306
#export VERSION=1.8.10
#export VERSIONDATE=20240422
#export VERSION=1.8.11
#export VERSIONDATE=20240518
export VERSION=1.8.12
export VERSIONDATE=20240531
####<command-line>:0:9: error: expected unqualified-id before string constant
####src/ohservice.hxx:35:54: error: no matching function for call to 'UPnPProvider::UpnpService::UpnpService(const string&, const string&, UpMpd*&)'
wl-showstatus --package-version
export DEPENDENCIES=libupnp,libupnpp,libmpdclient
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://www.lesbonscomptes.com/upmpdcli/downloads/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://www.lesbonscomptes.com/upmpdcli/downloads/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing uid_t/gid_t in src/upmpdutils.hxx
mv src/upmpdutils.hxx src/upmpdutils.hxx.bak
cat > src/upmpdutils.hxx << EOF
#ifdef _WIN32
typedef int uid_t;
typedef int gid_t;
#endif
EOF
cat src/upmpdutils.hxx.bak >> src/upmpdutils.hxx
# fix missing files
mkdir -p winfix/sys
touch winfix/safeunistd.h
touch winfix/sys/wait.h
#echo "#include <ws2_32.h>" > winfix/sys/socket.h
wl-showstatus configure &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CXXFLAGS="-I$(pwd)/winfix" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK && ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export BUILDDEPENDENCIES=meson,ninja
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS -Dcpp_link_args=$LDFLAGS
## fix location of Perl
#sed -i.bak -e "s?'perl'?'$(cygpath -w $PERLDIR/bin/perl.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix detection of Python
#sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix missing gio-unix
##sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
#mkdir -p build_both &&
# wl-showstatus configure &&
# PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dconfgui=false -Dscctl=false . build_both &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## fix Python path issues in meson_exe
# #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
# ## fix executing shell scripts
# #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib \
# #PATH=$PYDIR:$PATH PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} \
# #ninja -Cbuild_both install/strip &&
# ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'
