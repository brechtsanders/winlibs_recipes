export NAME="satyr"
export STATUS=
export URL=https://github.com/abrt/satyr
export BASENAME=satyr
export DESCRIPTION="Satyr is a library that can be used to create and process microreports. Microreports consist of structured data suitable to be analyzed in a fully automated manner, though they do not necessarily contain sufficient information to fix the underlying problem. The reports are designed not to contain any potentially sensitive data to eliminate the need for review before submission. Included is a tool that can create microreports and perform some basic operations on them."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=0.21
#export VERSIONDATE=20161124
#export VERSION=0.22
#export VERSIONDATE=20161202
#export VERSION=0.23
#export VERSIONDATE=20170315
#export VERSION=0.24
#export VERSIONDATE=20171102
#export VERSION=0.25
#export VERSIONDATE=20180118
#export VERSION=0.26
#export VERSIONDATE=20180417
#export VERSION=0.27
#export VERSIONDATE=20181008
#export VERSION=0.28
#export VERSIONDATE=20190621
#export VERSION=0.29
#export VERSIONDATE=20191011
#export VERSION=0.30
#export VERSIONDATE=20200203
#export VERSION=0.31
#export VERSIONDATE=20200818
#export VERSION=0.32
#export VERSIONDATE=20201124
#export VERSION=0.35
#export VERSIONDATE=20201201
#export VERSION=0.36
#export VERSIONDATE=20210112
#export VERSION=0.37
#export VERSIONDATE=20210303
#export VERSION=0.38
#export VERSIONDATE=20210616
#export VERSION=0.39
#export VERSIONDATE=20211217
export VERSION=0.40
export VERSIONDATE=20221101
####lib/internal_unwind.h:25:30: fatal error: elfutils/libdwfl.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=rpm
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/abrt/satyr/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/abrt/satyr/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/abrt/satyr/releases/download/$VERSION/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION

  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE* COPYRIGHT* configure* CMakeLists.txt Makefile

echo -n "$VERSION" > satyr-version
wl-showstatus configure &&
 autoreconf -f -i -I $MINGWPREFIX/share/aclocal
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-python3 &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



