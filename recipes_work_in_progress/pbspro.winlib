#export NAME="PBS Professional"
#export STATUS=
#export URL=http://www.pbspro.org/
#export BASENAME=pbspro
#export DESCRIPTION="PBS Professional software optimizes job scheduling and workload management in high-performance computing (HPC) environments – clusters, clouds, and supercomputers – improving system efficiency and people’s productivity. Built by HPC people for HPC people, PBS Pro(TM) is fast, scalable, secure, and resilient, and supports all modern infrastructure, middleware, and applications."
#export CATEGORY=cluster
#export TYPE=library
##export VERSION=18.1.2
##export VERSIONDATE=20180630
#####checking for alloca.h... no
#####configure: error: Required header file is missing.
##export VERSION=18.1.3
##export VERSIONDATE=20181027
##export VERSION=18.1.4
##export VERSIONDATE=20190327
#####checking for arpa/inet.h... no
#####configure: error: Required header file is missing.
##export VERSION=19.1.1
##export VERSIONDATE=20190129
##export VERSION=19.1.2
##export VERSIONDATE=20190621
#####checking for execinfo.h... no
#####configure: error: Required header file is missing.
#export VERSION=19.1.3
#export VERSIONDATE=20191009
#####checking for PBS database directory... configure: error: Database headers not found.
#wl-showstatus --package-version
#export DEPENDANCIES=libcrypt
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE="GNU Affero General Public License"
#export DOWNLOADURL="https://github.com/PBSPro/pbspro/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/PBSPro/pbspro/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/PBSPro/pbspro/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd pbspro-$VERSION
## fix missing files
#mkdir -p winfix winfix/arpa winfix/asm
#echo "#include <malloc.h>" > winfix/alloca.h
#touch winfix/arpa/inet.h winfix/asm/types.h
#wl-showstatus configure &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# # fix missing execinfo.h
# sed -i.bak -e "s/as_fn_error\(.*Required header file is missing\)/echo\1/" configure &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-syslog --without-x --with-python=$PYDIR CFLAGS="-I$(pwd)/winfix" &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#    make install-pkgconfigDATA
#
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf pbspro-$VERSION



export NAME="PBS Professional"
export STATUS=
export URL=http://www.pbspro.org/
export BASENAME=pbspro
export DESCRIPTION="PBS Professional software optimizes job scheduling and workload management in high-performance computing (HPC) environments – clusters, clouds, and supercomputers – improving system efficiency and people’s productivity. Built by HPC people for HPC people, PBS Pro(TM) is fast, scalable, secure, and resilient, and supports all modern infrastructure, middleware, and applications."
export CATEGORY=cluster
export TYPE=library
#export VERSION=20.0.0
#export VERSIONDATE=20200615
export VERSION=20.0.1
export VERSIONDATE=20200731
####checking for PBS database directory... configure: error: Database headers not found.
wl-showstatus --package-version
export DEPENDANCIES=zlib,libcrypt
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE="GNU Affero General Public License"
export DOWNLOADURL="https://github.com/openpbs/openpbs/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/openpbs/openpbs/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd openpbs-$VERSION
# fix missing files
mkdir -p winfix winfix/arpa winfix/asm
echo "#include <malloc.h>" > winfix/alloca.h
touch winfix/arpa/inet.h winfix/asm/types.h
wl-showstatus configure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 # fix missing execinfo.h
 sed -i.bak -e "s/as_fn_error\(.*Required header file is missing\)/echo\1/" configure &&
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-syslog --without-x --with-python=$PYDIR CFLAGS="-I$(pwd)/winfix" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA

## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf openpbs-$VERSION



