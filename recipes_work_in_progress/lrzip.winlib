export NAME="lrzip"
export STATUS=
#export URL=http://ck.kolivas.org/apps/lrzip/
export URL=https://github.com/ckolivas/lrzip
export BASENAME=lrzip
export DESCRIPTION="Long Range ZIP or LZMA RZIP"
export CATEGORY=compression
export TYPE=library
#export VERSION=0.631
#export VERSIONDATE=20171013
#export VERSION=0.640
#export VERSIONDATE=20210216
#export VERSION=0.641
#export VERSIONDATE=20210306
#export VERSION=0.650
#export VERSIONDATE=20220227
export VERSION=0.651
export VERSIONDATE=20220309
####configure: error: pod2man is needed to generate manual from POD
wl-showstatus --package-version
export DEPENDANCIES=mman-win32
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
#export BUILDDEPENDANCIES=podlators
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://ck.kolivas.org/apps/lrzip/"
#export DOWNLOADURL="https://github.com/ckolivas/lrzip/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ck.kolivas.org/apps/lrzip/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ck.kolivas.org/apps/lrzip/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/ckolivas/lrzip/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
mv lzma/C/_windows.h lzma/C/_windows.h.bak
mv lzma/C/windows.h lzma/C/windows.h.bak
# avoid making man
cat > man/Makefile.in << EOF
all:
install:
install-strip:
clean:
EOF
# fix configure
mv configure configure.bak &&
sed -e "s/as_fn_error\(.*pod2man is needed to generate manual\)/echo\1/; s/test \"x\$ac_cv_lib_bz2_BZ2_bzBuffToBuffCompress\" = xyes/true/" configure.bak > configure
wl-showstatus configure &&
 # mkdir -p m4 &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-asm --disable-doc &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-asm CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



