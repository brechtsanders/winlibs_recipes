export NAME="ODB"
export STATUS=
export URL=http://www.codesynthesis.com/products/odb/
export BASENAME=odb
export DESCRIPTION="ODB is an open-source, cross-platform, and cross-database object-relational mapping (ORM) system for C++. It allows you to persist C++ objects to a relational database without having to deal with tables, columns, or SQL and without manually writing any mapping code."
export CATEGORY=db
export TYPE=library
#export VERSION=2.4.0
#export VERSIONDATE=20170615
export VERSION=2.5.0-b.21
export VERSIONDATE=20220321
####configure: error: GCC plugin headers not found; consider installing GCC plugin development package
wl-showstatus --package-version
export DEPENDENCIES=libcutl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.codesynthesis.com/products/odb/download.xhtml"
#export DOWNLOADURL="https://git.codesynthesis.com/cgit/odb/libodb/ ?h="
export DOWNLOADURL="https://cppget.org/odb?q=odb"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.codesynthesis.com/download/odb/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://pkg.cppget.org/1/beta/odb/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix odb/gcc-fwd.hxx (version = 2.4.0)
#patch -ulbf odb/gcc-fwd.hxx << EOF
#@@ -18,4 +18,2 @@
#
#-extern "C"
#-{
# // The hwint.h header uses gcc_checking_assert macro from system.h. But
#@@ -31,2 +29,5 @@
#
#+#include <cinttypes>
#+#include <cstdio>
#+#include <utility>
# #include <coretypes.h>
#@@ -35,3 +36,2 @@
# typedef source_location location_t;   // <input.h>
#-}
#
#EOF
wl-showstatus configure &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM -enable-static --enable-shared CXXFLAGS="-I$(cygpath $(gcc -print-search-dirs|sed -ne "s/^install: //p")/plugin/include) -fpermissive" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



