export NAME="ring-daemon (includes LibRing)"
export STATUS=
#export URL=https://ring.cx/
#export URL=https://jami.net/
export URL=https://review.jami.net/admin/repos/ring-daemon
#export URL=https://github.com/savoirfairelinux/ring-daemon
export BASENAME=ring-daemon
export DESCRIPTION="Ring Daemon is the core of Jami. It does not interact with users but it is involved in every command."
export CATEGORY=communication
export TYPE=library
export VERSION=4.0.0
export VERSIONDATE=20191102
####src/security/certstore.h:60:110: error: 'dht::crypto::Certificate::NameType' has not been declared
wl-showstatus --package-version
#export DEPENDANCIES=pcre,pjsip,pulseaudio,jack,portaudio,dbus,libgsm,libspeex,libspeexdsp,ilbc,libopus,boost,libupnp,libnatpmp,restbed,opendht,cryptopp,libargon2,ffmpeg3,cppunit
export DEPENDANCIES=pcre,pjsip,pulseaudio,jack,portaudio,dbus,libgsm,libspeex,libspeexdsp,ilbc,libopus,boost,libupnp,libnatpmp,restbed,opendht,cryptopp-pem,libargon2,ffmpeg3,cppunit
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://review.jami.net/admin/repos/ring-daemon,tags"
#export DOWNLOADURL="https://github.com/savoirfairelinux/ring-daemon/releases"
export DOWNLOADURL="https://github.com/savoirfairelinux/ring-daemon/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/savoirfairelinux/ring-daemon/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/savoirfairelinux/ring-daemon/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing initialize for pjsip_tpselector in src/sip/sipvoiplink.h
patch -ulbf src/sip/sipvoiplink.h << EOF
@@ -162 +162 @@
-            pjsip_tpselector tp = {PJSIP_TPSELECTOR_TRANSPORT, {transport}};
+            pjsip_tpselector tp = {PJSIP_TPSELECTOR_TRANSPORT, 0, {transport}};
EOF
# fix redefinition of _WIN32_WINNT in src/ip_utils.h
patch -ulbf src/ip_utils.h << EOF
@@ -34,3 +34,6 @@
 #ifdef _WIN32
+    #if !defined(_WIN32_WINNT) || (_WIN32_WINNT < 0x0A00)
+    #undef _WIN32_WINNT
     #define _WIN32_WINNT 0x0A00
+    #endif
     #include <ws2tcpip.h>
EOF
wl-showstatus configure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-static --without-upnp --without-natpmp --without-nodejs CFLAGS="-I$MINGWPREFIX/ffmpeg3/include" CXXFLAGS="-I$MINGWPREFIX/ffmpeg3/include" LDFLAGS="-L$MINGWPREFIX/ffmpeg3/lib" PKG_CONFIG_PATH="$MINGWPREFIX/ffmpeg3/lib/pkgconfig:${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}" &&
#C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include:$C_INCLUDE_PATH CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include:$CPLUS_INCLUDE_PATH PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-static --without-nodejs &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



