export NAME="VKD3D-Proton"
export STATUS=
export URL=https://github.com/HansKristian-Work/vkd3d-proton
export BASENAME=vkd3d-proton
export DESCRIPTION="VKD3D-Proton is a fork of VKD3D, which aims to implement the full Direct3D 12 API on top of Vulkan. The project serves as the development effort for Direct3D 12 support in Proton."
export CATEGORY=graphics,development
export TYPE=library
#export VERSION=2.6
#export VERSIONDATE=20220414
#export VERSION=2.7
#export VERSIONDATE=20221028
#export VERSION=2.8
#export VERSIONDATE=20221216
#export VERSION=2.9
#export VERSIONDATE=20230520
#export VERSION=2.10
#export VERSIONDATE=20230912
#export VERSION=2.11
#export VERSIONDATE=20231125
#export VERSION=2.11.1
#export VERSIONDATE=20231216
#export VERSION=2.12
#export VERSIONDATE=20240316
export VERSION=2.13
export VERSIONDATE=20240622
####meson.build:71:0: ERROR: Include dir ./subprojects/Vulkan-Headers/include does not exist.
wl-showstatus --package-version
export DEPENDENCIES=spirv-headers,vulkan-headers,dxil-spirv
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/HansKristian-Work/vkd3d-proton/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/HansKristian-Work/vkd3d-proton/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p subprojects/Vulkan-Headers/include subprojects/SPIRV-Headers/include
touch subprojects/Vulkan-Headers/include/meson.build subprojects/SPIRV-Headers/include/meson.build subprojects/dxil-spirv/meson.build
# avoid MSCV flags
sed -i.bak -e "s/'\/wd[0-9]*',/#&/" meson.build
# fix external includes (version >= 2.12)
sed -i.bak2 -e "s?\./khronos/Vulkan-Headers/include?$(cygpath -m $MINGWPREFIX/include/vulkan)?g; s?\./khronos/SPIRV-Headers/include?$(cygpath -m $MINGWPREFIX/include/spirv)?g" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Denable_trace=false -Denable_tests=false . build_both &&
 ## fix slash/backslash path issue when calling Python from Ninja
 #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 ## fix Python path issues in meson_exe
 #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
 ## fix executing shell scripts
 #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
    echo OK && find . -name '*.a'
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



