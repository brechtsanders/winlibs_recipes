export NAME="XBMC"
export STATUS=
#export URL=http://xbmc.org/
export URL=https://kodi.tv/
export BASENAME=xbmc
export DESCRIPTION="XBMC is an award-winning free and open source (GPL) software media player and entertainment hub for digital media."
export CATEGORY=audio,video
export TYPE=application
#export VERSION=11.0
#export VERSIONDATE=20130112
####The following required libraries are either missing, or are missing development headers:
####libavcodec libavformat libavutil libflac libvorbis libogg libid3tag libexif libjpeg libsqlite3
#export VERSION=12.0
#export VERSIONDATE=20130129
####checking for main in -lgpg-error... no
####configure: error: Could not find a required library. Please see the README for your platform.
####To do: build mysql manually first
#export VERSION=12.1
#export VERSIONDATE=20130321
#export VERSION=12.2
#export VERSIONDATE=20130503
#export VERSION=12.3
#export VERSIONDATE=20131225
#export VERSION=13.1
#export VERSIONDATE=20140607
#export VERSION=13.2
#export VERSIONDATE=20140818
####checking for clock_gettime in -lrt... no
####configure: error: Could not find a required library. Please see the README for your platform.
#export VERSION=17.0-Krypton
#export VERSIONDATE=20170313
#export VERSION=17.3-Krypton
#export VERSIONDATE=20171004
export VERSION=19.4-Matrix
export VERSIONDATE=20220619
####configure: error: Unable to determine soname of libcurl library
wl-showstatus --package-version
#export DEPENDANCIES=glew,mysql,libass,libmad,libjpeg,libsamplerate,libogg,libvorbis,libmodplug,libcurl,flac,openssl,libgcrypt,libgpg-error
export DEPENDANCIES=glew,mariadb-client,libass,libmad,libjpeg,libsamplerate,libogg,libvorbis,libmodplug,libcurl,flac,openssl,libgcrypt,libgpg-error
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=LICENSE.GPL
export LICENSETYPE=GPL
#export DOWNLOADURL="http://mirrors.xbmc.org/releases/source/"
export DOWNLOADURL="https://github.com/xbmc/xbmc/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://mirrors.xbmc.org/releases/source/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://mirrors.xbmc.org/releases/source/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/xbmc/xbmc/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION*
#cd xbmc-xbmc-*
cd $BASENAME-$VERSION
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
SWIG_LIB=$MINGWPREFIX/share/swig/`swig -version|sed -n -e "s/^.*Version \([0-9.]*.*\)$/\1/p"` ./bootstrap
## fix configure (version <= 13.1)
#patch -ulbf configure << EOF
#--- configure  2012-03-24 20:06:48 +0100
#+++ configure  2013-01-29 21:38:56 +0100
#@@ -15982,4 +15982,12 @@
# # host detection and setup
# case \$host in
#+  *86-pc-mingw*)
#+     ARCH="i686-windows"
#+     ARCH_DEFINES="-DTARGET_POSIX -DTARGET_WINDOWS -D_LINUX32"
#+     ;;
#+  *64-pc-mingw*)
#+     ARCH="x86_64-windows"
#+     ARCH_DEFINES="-DTARGET_POSIX -DTARGET_WINDOWS -D_LINUX32"
#+     ;;
#   i*86*-android-linux-gnu*)
#      target_platform=target_android
#EOF
## fix configure (version >= 13.2)
#patch -ulbf configure << EOF
#--- configure  2014-08-18 21:00:24 +0200
#+++ configure  2014-08-18 21:36:30 +0200
#@@ -18914,4 +18914,10 @@
#      build_shared_lib=yes
#      ;;
#+  *86-pc-mingw*)
#+     ARCH="i686-windows"
#+     ;;
#+  *64-pc-mingw*)
#+     ARCH="x86_64-windows"
#+     ;;
#   *)
#      as_fn_error \$? "unsupported host (\$host)" "\$LINENO" 5
#@@ -19007,4 +19013,12 @@
#
#      ;;
#+  *86-pc-mingw*)
#+     ARCH="i686-windows"
#+     ARCH_DEFINES="-DTARGET_POSIX -DTARGET_WINDOWS -D_LINUX32"
#+     ;;
#+  *64-pc-mingw*)
#+     ARCH="x86_64-windows"
#+     ARCH_DEFINES="-DTARGET_POSIX -DTARGET_WINDOWS -D_LINUX32"
#+     ;;
#   *)
#      as_fn_error \$? "unsupported host (\$host)" "\$LINENO" 5
#EOF
# fix configure (version >= 17.0)
patch -ulbf configure << EOF
--- configure  2017-03-13 20:16:30.037772200 +0100
+++ configure  2017-03-13 20:21:17.969751600 +0100
@@ -19839,4 +19839,12 @@
      USE_STATIC_FFMPEG=1
      ;;
+  *86-pc-mingw*)
+     ARCH="i686-windows"
+     ARCH_DEFINES="-DTARGET_POSIX -DTARGET_WINDOWS -D_LINUX"
+     ;;
+  *64-pc-mingw*)
+     ARCH="x86_64-windows"
+     ARCH_DEFINES="-DTARGET_POSIX -DTARGET_WINDOWS -D_LINUX"
+     ;;
   *)
      as_fn_error \$? "unsupported host (\$host)" "\$LINENO" 5
@@ -19931,4 +19939,7 @@

      ;;
+  *-pc-mingw*)
+     NATIVE_ARCH_DEFINES="-DTARGET_POSIX -DTARGET_WINDOWS -D_LINUX"
+     ;;
   *)
      as_fn_error \$? "unsupported native build platform: \$build" "\$LINENO" 5
@@ -19986,4 +19997,7 @@

      ;;
+  *-pc-mingw*)
+     ARCH_DEFINES="-DTARGET_POSIX -DTARGET_WINDOWS -D_LINUX"
+     ;;
   *)
      as_fn_error \$? "unsupported build target: \$host" "\$LINENO" 5
EOF

# fix for using -lopengl32 -lglu32 instead of -lGL -lGLU
mv configure configure.bak &&
#sed -e "s/-lGLU /-lglu32 /g; s/-lGL /-lopengl32 /g; s/-lGLEW /-lglew32 /g; s/\"-l\(resolv\|rt\) /\"/" configure.bak > configure
sed -e "s/-lGLU /-lglu32 /g; s/-lGL /-lopengl32 /g; s/-lGLEW /-lglew32 /g; s/\"-l\(resolv\|rt\) /\"/; s/\.so\b/.dll/g" configure.bak > configure

#INTLTOOL_PERL="$PERLDIR/bin/perl.exe"
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib"
#PYTHON=$PYDIR/python.exe
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH}
wl-showstatus configure &&
autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --disable-x11 PYTHON_LDFLAGS="-lpython26" PYTHON_EXTRA_LDFLAGS=" " &&
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --disable-x11 PYTHON_VERSION="2.6" PYTHON_LDFLAGS="-lpython26" PYTHON_EXTRA_LDFLAGS="-s" &&
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --disable-x11 PYTHON_VERSION="26" PYTHON_EXTRA_LDFLAGS="-L$PYDIR/libs -Wl,--as-needed" PYTHON_EXTRA_LIBS="-lpython26" &&
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --disable-mysql --disable-libbluray --disable-x11 PYTHON_VERSION="26" PYTHON_EXTRA_LDFLAGS="-L$PYDIR/libs -Wl,--as-needed" PYTHON_EXTRA_LIBS="-lpython26" &&
PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --disable-mysql --disable-libbluray --disable-x11 PYTHON_VERSION=$(ls -1 $PYDIR/libs/libpython[0-9][0-9].a|sed -e "s/^.*python\([0-9]\)\([0-9]*\).*$/\1\2/") PYTHON_EXTRA_LDFLAGS="-L$PYDIR/libs -Wl,--as-needed" PYTHON_EXTRA_LIBS=$(ls -1 $PYDIR/libs/libpython[0-9][0-9].a|sed -e "s/^.*\(python[0-9]\)\([0-9]*\).*$/-l\1\2/") &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm CMakeCache.txt &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX . &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION*
#      echo $host grep -q mingw && CURL_SONAME=$MINGWPREFIX/lib/$(grep dlname $MINGWPREFIX/lib/libcurl.la|sed -e 's/^.*=\(.*\)$/\1/')



mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -S. -Bbuild_test -LH && echo OK; rm -rf build_test
