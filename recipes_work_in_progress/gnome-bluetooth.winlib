export NAME="gnome-bluetooth"
export STATUS=
export URL=http://www.gnome.org/projects/gnome-bluetooth
export BASENAME=gnome-bluetooth
export DESCRIPTION=""
export CATEGORY=
export TYPE=library
#export VERSION=2.32.0
#export VERSIONDATE=20101008
#export VERSION=3.0.0
#export VERSIONDATE=20110404
#export VERSION=3.0.1
#export VERSIONDATE=20110528
#export VERSION=3.1.3
#export VERSIONDATE=20110711
#export VERSION=3.1.4
#export VERSIONDATE=20110817
#export VERSION=3.2.0
#export VERSIONDATE=20110926
#export VERSION=3.2.1
#export VERSIONDATE=20111017
#export VERSION=3.2.2
#export VERSIONDATE=20120207
#export VERSION=3.3.2
#export VERSIONDATE=20111121
#export VERSION=3.3.3
#export VERSIONDATE=20120117
#export VERSION=3.3.4
#export VERSIONDATE=20120119
#export VERSION=3.3.92
#export VERSIONDATE=20120321
#export VERSION=3.4.0
#export VERSIONDATE=20120327
#export VERSION=3.4.1
#export VERSIONDATE=20120613
####lib/plugins/geoclue.c:49: undefined reference to `bluetooth_client_new'
####lib/plugins/geoclue.c:50: undefined reference to `bluetooth_client_get_device_model'
#export VERSION=3.4.2
#export VERSIONDATE=20120704
#export VERSION=3.5.4
#export VERSIONDATE=20120718
#export VERSION=3.5.5
#export VERSIONDATE=20120809
#export VERSION=3.5.92
#export VERSIONDATE=20120918
####lib/rfkill.h:25:25: fatal error: linux/types.h: No such file or directory
#export VERSION=3.6.0
#export VERSIONDATE=20120927
#export VERSION=3.6.1
#export VERSIONDATE=20121116
#export VERSION=3.7.4
#export VERSIONDATE=20130116
####lib/plugins/geoclue.c:49: undefined reference to `bluetooth_client_new'
####lib/plugins/geoclue.c:50: undefined reference to `bluetooth_client_get_device_model'
#export VERSION=3.8.0
#export VERSIONDATE=20130326
#export VERSION=3.8.1
#export VERSIONDATE=20130603
#export VERSION=3.8.2.1
#export VERSIONDATE=20131008
#export VERSION=3.9.3
#export VERSIONDATE=20130619
#export VERSION=3.10.0
#export VERSIONDATE=20130923
#export VERSION=3.11.3
#export VERSIONDATE=20131217
####lib/rfkill.h:22:25: fatal error: linux/types.h: No such file or directory
#export VERSION=3.12.0
#export VERSIONDATE=20140324
#export VERSION=3.14.0
#export VERSIONDATE=20140923
#export VERSION=3.14.1
#export VERSIONDATE=20150419
#export VERSION=3.15.4
#export VERSIONDATE=20150119
#export VERSION=3.16.0
#export VERSIONDATE=20150324
#export VERSION=3.16.1
#export VERSIONDATE=20150419
#export VERSION=3.18.0
#export VERSIONDATE=20150922
#export VERSION=3.18.1
#export VERSIONDATE=20151111
#export VERSION=3.18.2
#export VERSIONDATE=20160121
#export VERSION=3.18.3
#export VERSIONDATE=20160321
#export VERSION=3.20.0
#export VERSIONDATE=20160627
#export VERSION=3.20.1
#export VERSIONDATE=20170214
#export VERSION=3.26.0
#export VERSIONDATE=20170912
#export VERSION=3.26.1
#export VERSIONDATE=20170916
#export VERSION=3.28.0
#export VERSIONDATE=20180313
#export VERSION=3.28.1
#export VERSIONDATE=20180719
#export VERSION=3.28.2
#export VERSIONDATE=20180802
#export VERSION=3.31.1
#export VERSIONDATE=20190207
#export VERSION=3.32.0
#export VERSIONDATE=20190312
#export VERSION=3.32.1
#export VERSIONDATE=20190327
#export VERSION=3.34.0
#export VERSIONDATE=20190906
#export VERSION=3.34.1
#export VERSIONDATE=20200309
#export VERSION=3.34.2
#export VERSIONDATE=20200923
#export VERSION=3.34.3
#export VERSIONDATE=20201001
#export VERSION=3.34.4
#export VERSIONDATE=20210323
#export VERSION=3.34.5
#export VERSIONDATE=20210324
####No package 'libudev' found
#export VERSION=42.0
#export VERSIONDATE=20220319
#export VERSION=42.1
#export VERSIONDATE=20220610
#export VERSION=42.2
#export VERSIONDATE=20220707
#export VERSION=42.3
#export VERSIONDATE=20220824
#export VERSION=42.4
#export VERSIONDATE=20220906
#export VERSION=42.5
#export VERSIONDATE=20221213
#export VERSION=42.6
#export VERSIONDATE=20230815
#export VERSION=42.7
#export VERSIONDATE=20231116
#export VERSION=42.8
#export VERSIONDATE=20240205
export VERSION=46.0
export VERSIONDATE=20240318
####meson.build:101:0: ERROR: Dependency "gsound" not found, tried pkgconfig and cmake
wl-showstatus --package-version
export DEPENDENCIES=glib2,gtk3,dbus-glib,gnome-control-center,gnome-doc-utils,libiconv,gsound,upower
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="GPL/LGPL"
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gnome-bluetooth/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://download.gnome.org/sources/gnome-bluetooth/$(echo $VERSION|sed 's/^\([0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
### fix problem detecting GNU gettext tools on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## sed -i.bak -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure
##fi
## fix dependancy on gio-unix
#mv configure configure.bak
#sed -e "s/gio-unix/gio-windows/g" configure.bak > configure
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-no-undefined -Wl,-no-undefined" &&
#PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-Wl,-no-undefined" &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
# fix detection of Python
sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build tests/meson.build
# fix missing gio-unix
sed -i.bak2 -e "s/gio-unix-/gio-windows-/" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dicon_update=true -Dintrospection=false -Dgtk_doc=false . build_both &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dintrospection=false -Dgtk_doc=false . build_both &&
 ## fix slash/backslash path issue when calling Python from Ninja
 #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 ## fix Python path issues in meson_exe
 #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
 ## fix executing shell scripts
 #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
    echo OK && find . -name '*.a'
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



