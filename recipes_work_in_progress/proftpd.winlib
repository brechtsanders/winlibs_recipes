export NAME="ProFTPD"
export STATUS=
export URL=http://www.proftpd.org/
export BASENAME=proftpd
export DESCRIPTION="Highly configurable GPL-licensed FTP server software"
export CATEGORY=
export TYPE=library
#export VERSION=1.3.5a
#export VERSIONDATE=20150821
#export VERSION=1.3.5c
#export VERSIONDATE=20170115
#export VERSION=1.3.5d
#export VERSIONDATE=20170116
#export VERSION=1.3.5e
#export VERSIONDATE=20170410
#export VERSION=1.3.6
#export VERSIONDATE=20191020
####make: *** No rule to make target 'proftpd', needed by 'install-proftpd'.  Stop.
####lib/glibc-glob.c:336:21: fatal error: fnmatch.h: No such file or directory
#export VERSION=1.3.6
#export VERSIONDATE=20170410
#export VERSION=1.3.6a
#export VERSIONDATE=20191013
#export VERSION=1.3.6b
#export VERSIONDATE=20191020
#export VERSION=1.3.6c
#export VERSIONDATE=20200219
#export VERSION=1.3.6d
#export VERSIONDATE=20200531
#export VERSION=1.3.6e
#export VERSIONDATE=20200721
#export VERSION=1.3.7
#export VERSIONDATE=20200721
#export VERSION=1.3.7b
#export VERSIONDATE=20210614
#export VERSION=1.3.7c
#export VERSIONDATE=20210830
#export VERSION=1.3.7d
#export VERSIONDATE=20220424
#export VERSION=1.3.7e
#export VERSIONDATE=20220724
#export VERSION=1.3.7f
#export VERSIONDATE=20221205
#export VERSION=1.3.8
#export VERSIONDATE=20221205
#export VERSION=1.3.8a
#export VERSIONDATE=20231009
export VERSION=1.3.8b
export VERSIONDATE=20231220
####lib/glibc-glob.c:336:21: fatal error: fnmatch.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=
#export DEPENDENCIES=fnmatch-win32
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/proftpd/proftpd/releases"
export DOWNLOADURL="ftp://ftp.proftpd.org/distrib/source/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/proftpd/proftpd/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=ftp://ftp.proftpd.org/distrib/source/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
mkdir -p winfix
cat > winfix/pwd.h << EOF
EOF
cat > winfix/grp.h << EOF
EOF
# avoid -rdynamic in configure
mv configure configure.bak &&
sed -e "s/-rdynamic//" configure.bak > configure
wl-showstatus configure &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$(pwd)/winfix" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$(pwd)/winfix -I$MINGWPREFIX/include/fnmatch" LDFLAGS="-Wl,--as-needed -lfnmatch" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 # fix missing u_int8_t
 echo "#include <stdint.h>" >> config.h &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 make install &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#wl-showstatus configure &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



