export NAME="sccache - Shared Compilation Cache"
export STATUS=
export URL=https://github.com/mozilla/sccache
export BASENAME=sccache
export DESCRIPTION="sccache is a ccache-like compiler caching tool. It is used as a compiler wrapper and avoids compilation when possible, storing cached results either on local disk or in one of several cloud storage backends. sccache includes support for caching the compilation of C/C++ code, Rust, as well as NVIDIA's CUDA using nvcc."
export CATEGORY=development
export TYPE=application
#export VERSION=0.2.13
#export VERSIONDATE=20201003
#export VERSION=0.2.14
#export VERSIONDATE=20201222
#export VERSION=0.2.15
#export VERSIONDATE=20210113
#export VERSION=0.3.0
#export VERSIONDATE=20220505
#export VERSION=0.3.1
#export VERSIONDATE=20221113
#export VERSION=0.3.2
#export VERSIONDATE=20221207
#export VERSION=0.3.3
#export VERSIONDATE=20221209
export VERSION=0.4.0
export VERSIONDATE=20230321
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/mozilla/sccache/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/mozilla/sccache/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/mozilla/sccache/archive/v$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/mozilla/sccache/archive/refs/tags/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/mozilla/sccache/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus build &&
 make &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####Written in Rust



