export NAME="GCG"
export STATUS=
export URL=https://gcg.or.rwth-aachen.de/
export BASENAME=gcg
export DESCRIPTION="GCG is a generic branch-cut-and-price solver for mixed integer programs. It is based on the branch-and-cut-and-price framework SCIP and is also part of the SCIP Optimization Suite."
export CATEGORY=math
export TYPE=library
#export VERSION=3.0.0
#export VERSIONDATE=20210910
#export VERSION=3.0.5
#export VERSIONDATE=20211220
export VERSION=3.5.0
export VERSIONDATE=20220203
wl-showstatus --package-version
export DEPENDENCIES=scip
export OPTIONALDEPENDENCIES=bliss,hmetis,cliquer,scipoptsuite,gmp,gsl
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://gcg.or.rwth-aachen.de/"
export DOWNLOADURL="https://gcg.or.rwth-aachen.de/files/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://gcg.or.rwth-aachen.de/files/$BASENAME-$VERSION.tgz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tgz
#cd $BASENAME-$VERSION
cd gcg-v$(echo $VERSION|sed -e "s/\.//g")
## fix missing realpath in src/class_miscvisualization.cpp (version = 3.0.5)
#mv src/class_miscvisualization.cpp src/class_miscvisualization.cpp.bak &&
#echo "#include <stdlib.h>" > src/class_miscvisualization.cpp &&
#echo "#define realpath(N,R) _fullpath((R),(N),_MAX_PATH)" >> src/class_miscvisualization.cpp &&
#cat src/class_miscvisualization.cpp.bak >> src/class_miscvisualization.cpp
# fix missing realpath in src/miscvisualization.cpp (version >= 3.5.0)
mv src/miscvisualization.cpp src/miscvisualization.cpp.bak &&
echo "#include <stdlib.h>" > src/miscvisualization.cpp &&
echo "#define realpath(N,R) _fullpath((R),(N),_MAX_PATH)" >> src/miscvisualization.cpp &&
cat src/miscvisualization.cpp.bak >> src/miscvisualization.cpp
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSHARED:BOOL=OFF -DOPENMP:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DSHARED:BOOL=ON -DOPENMP:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_win/build.ninja &&
 #wl-showstatus build &&
 #ninja -Cbuild_static &&
 #wl-showstatus build &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gcg-v$(echo $VERSION|sed -e "s/\.//g")



