#export NAME="jellyfish"
#export STATUS=
#export URL=https://www.cbcb.umd.edu/software/jellyfish/index.shtml
#export BASENAME=jellyfish
#export DESCRIPTION="JELLYFISH is a tool for fast, memory-efficient counting of k-mers in DNA. A k-mer is a substring of length k, and counting the occurrences of all such substrings is a central step in many analyses of DNA sequence. JELLYFISH can count k-mers using an order of magnitude less memory and an order of magnitude faster than other k-mer counting packages by using an efficient encoding of a hash table and by exploiting the \"compare-and-swap\" CPU instruction to increase parallelism."
#export CATEGORY=dataprocessing
#export TYPE=library
#export VERSION=1.1.11
#export VERSIONDATE=20251022
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=GPL
#export DOWNLOADURL="https://www.cbcb.umd.edu/software/jellyfish/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://www.cbcb.umd.edu/software/jellyfish/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix already defined _errno in jellyfish/err.hpp (version >= 1.1.11)
#sed -i.bak -e "s/_errno/_errornumber/g" jellyfish/err.hpp
## fix undefined posix_memalign in jellyfish/misc.hpp (version >= 1.1.11)
#patch -ulbf jellyfish/misc.hpp << EOF
#@@ -106,3 +106,7 @@
#   Tptr<T> ptr;
#+#ifdef _WIN32
#+  if((ptr.v = _aligned_malloc(sizeof(T) * nmemb, alignment)) == NULL)
#+#else
#   if(posix_memalign(&ptr.v, alignment, sizeof(T) * nmemb) < 0)
#+#endif
#     throw std::bad_alloc();
#EOF
#wl-showstatus configure &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-sse &&
# ## fix building DLLs
# #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# ## fix detection of shared libraries
# #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
# #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
# #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
# #( make install-strip || ( make install && strip $INSTALLPREFIX/bin/*.{dll,exe} )) &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Jellyfish"
export STATUS=
export URL=https://github.com/gmarcais/Jellyfish
export BASENAME=jellyfish
export DESCRIPTION="A fast multi-threaded k-mer counter"
export CATEGORY=dataprocessing
export TYPE=library
export VERSION=2.3.1
export VERSIONDATE=20251022
wl-showstatus --package-version
export DEPENDENCIES=mman-win32,htslib
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=BSD/GPL
#export LICENSEFILE=LICENSE-GPL-3.0
#export LICENSETYPE=GPL
export LICENSEFILE=LICENSE-BSD-3-Clause
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/gmarcais/Jellyfish/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/gmarcais/Jellyfish/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix lib/rectangular_binary_matrix.cc (version >= 2.3.1)
patch -ulbf lib/rectangular_binary_matrix.cc << EOF
@@ -29,2 +29,7 @@
 }
+#elif defined(_WIN32)
+inline int __mem_align(void** memptr, size_t alignment, size_t size) {
+  *memptr = _aligned_malloc(size, alignment);
+  return memptr == NULL;
+}
 #else
EOF
wl-showstatus configure &&
 #wl-showstatus preconfigure &&
 #mkdir -p m4 &&
 ##libtoolize -f -i -c &&
 ##intltoolize -f -c &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 ## allow building shared libraries when using clang
 #if ${CC:-gcc} --version|grep -q "^clang" && ! ${CC:-gcc} --help|grep auto-import; then
 # sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" configure
 # #sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" $(find -name configure)
 #fi &&
 ## fix confusion between MSVC and clang
 #if ${CC:-gcc} --version|grep -q "^clang"; then
 # sed -i.bak2 -e "s/\b\(cl\)\(\*\)/\1.exe\2/g; s/\(ld_shlibs\)=no/\1yes/" configure
 #fi &&
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-sse --enable-htslib CXXFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
 #( make install-strip || ( make install && strip $INSTALLPREFIX/bin/*.{dll,exe} )) &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



