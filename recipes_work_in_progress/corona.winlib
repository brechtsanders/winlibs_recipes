export NAME="The Corona 2D game engine"
export STATUS=
export URL=https://coronalabs.com/
#export URL=https://solar2d.com/
export BASENAME=corona
export DESCRIPTION="Corona is a cross-platform framework ideal for rapidly creating apps and games for mobile devices and desktop systems."
#export DESCRIPTION="Solar2D is a Lua based game engine with focus on ease of iterations and usage."
export CATEGORY=development,framework
export TYPE=library
#export VERSION=master
#export VERSIONDATE=20190617
#export VERSION=4005
#export VERSIONDATE=20200418
#export VERSION=3590
#export VERSIONDATE=20200502
#export VERSION=3591
#export VERSIONDATE=20200514
#export VERSION=3595
#export VERSIONDATE=20200521
#export VERSION=3596
#export VERSIONDATE=20200527
#export VERSION=3597
#export VERSIONDATE=20200529
#export VERSION=3598
#export VERSIONDATE=20200602
#export VERSION=3599
#export VERSIONDATE=20200614
#export VERSION=3600
#export VERSIONDATE=20200616
#export VERSION=3638
#export VERSIONDATE=20210218
#export VERSION=3643
#export VERSIONDATE=20210423
#export VERSION=3644
#export VERSIONDATE=20210425
#export VERSION=3645
#export VERSIONDATE=20210429
#export VERSION=3646
#export VERSIONDATE=20210522
#export VERSION=3647
#export VERSIONDATE=20210622
#export VERSION=3648
#export VERSIONDATE=20210626
#export VERSION=3649
#export VERSIONDATE=20210719
#export VERSION=3650
#export VERSIONDATE=20210814
#export VERSION=3654
#export VERSIONDATE=20210908
#export VERSION=3655
#export VERSIONDATE=20210919
#export VERSION=3656
#export VERSIONDATE=20210922
#export VERSION=3658
#export VERSIONDATE=20211010
#export VERSION=3660
#export VERSIONDATE=20211027
#export VERSION=3661
#export VERSIONDATE=20211117
#export VERSION=3662
#export VERSIONDATE=20211218
#export VERSION=3663
#export VERSIONDATE=20211222
#export VERSION=3664
#export VERSIONDATE=20220116
#export VERSION=3665
#export VERSIONDATE=20220224
#export VERSION=3666
#export VERSIONDATE=20220324
#export VERSION=3667
#export VERSIONDATE=20220420
#export VERSION=3668
#export VERSIONDATE=20220423
#export VERSION=3669
#export VERSIONDATE=20220426
#export VERSION=3674
#export VERSIONDATE=20220620
#export VERSION=3675
#export VERSIONDATE=20220720
#export VERSION=3676
#export VERSIONDATE=20220729
#export VERSION=3677
#export VERSIONDATE=20220803
#export VERSION=3679
#export VERSIONDATE=20220922
#export VERSION=3680
#export VERSIONDATE=20220923
#export VERSION=3681
#export VERSIONDATE=20221008
#export VERSION=3682
#export VERSIONDATE=20221015
#export VERSION=3683
#export VERSIONDATE=20221106
#export VERSION=3685
#export VERSIONDATE=20221221
export VERSION=3686
export VERSIONDATE=20230208
#export VERSION=4007
#export VERSIONDATE=20200620
wl-showstatus --package-version
export DEPENDENCIES=lua
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.GPL
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/coronalabs/corona/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/coronalabs/corona/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
  ./configure --help 2> /dev/null
  cat meson_options.txt 2> /dev/null
  head COPYING* LICENSE* COPYRIGHT*
  ls -ld COPYING* LICENSE* COPYRIGHT* configure* m4 CMakeLists.txt cmake Makefile GNUmakefile setup.py scons SConscript SConstruct meson.build meson_options.txt *.pro build 2> /dev/null

wl-showstatus configure &&
 # mkdir -p m4 &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA

#mkdir -p build_test; cmake.exe -G"MSYS Makefiles" -S. -Bbuild_test -LH && echo OK; rm -rf build_test
#rm -rf CMakeCache.txt CMakeFiles; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK

#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
#    echo OK

#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -D documentation=true . build_static &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -D documentation=true . build_shared &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_static install/strip &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_shared install/strip &&
#    echo OK && find . -name '*.a'



## fix CMakeLists.txt (version >= 3675)
#patch -ulbf CMakeLists.txt << EOF
#@@ -40,3 +40,3 @@
# else()
#-       message(FATAL_ERROR "CMakeList.txt is not ported to current OS: \${CMAKE_HOST_SYSTEM_NAME}")
#+       message(WARNING "CMakeList.txt is not ported to current OS: \${CMAKE_HOST_SYSTEM_NAME}")
# endif()
#EOF
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# wl-showstatus build &&
# ninja -Cbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK



# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



