export NAME="omniORB"
export STATUS=
export URL=https://sourceforge.net/projects/omniorb/
export BASENAME=omniorb
export DESCRIPTION="omniORB is a CORBA object request broker for C++ and Python. It is very fast, robust, and standards-compliant."
export CATEGORY=dataprocessing
export TYPE=library
export VERSION=4.2.4
export VERSIONDATE=20200712
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
export DOWNLOADURL="https://sourceforge.net/projects/omniorb/files/omniORB/ omniORB-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/omniorb/omniORB/omniORB-$VERSION/omniORB-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfj $TARBALLDIR/$BASENAME/omniORB-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix missing size_t in include/omniORB4/CORBA_sysdep.h
mv include/omniORB4/CORBA_sysdep.h include/omniORB4/CORBA_sysdep.h.bak &&
echo "#include <stddef.h>" > include/omniORB4/CORBA_sysdep.h &&
cat include/omniORB4/CORBA_sysdep.h.bak >> include/omniORB4/CORBA_sysdep.h
# fix missing Python library files
mkdir -p pylibs &&
pexports $PYDIR/python[0-9][0-9].dll > pylibs/python.def &&
(( grep -q Py_InitModule4_64 pylibs/python.def && echo "Py_InitModule4 = Py_InitModule4_64" >> pylibs/python.def ) || true ) &&
dlltool -D $PYDIR/python[0-9][0-9].dll -d pylibs/python.def -l pylibs/libpython.dll.a
# fix order of linker flags
sed -i.bak -e "s/\( \$(CXXLINKOPTIONS)\)\( -shared[^\\]*\)/\2\1 /" $(find src -name dir.mk) &&
# fix mk/beforeauto.mk (version >= 4.2.4)
patch -ulbf mk/beforeauto.mk << EOF
@@ -1160,6 +1160,5 @@
 ###################
-ifdef Cygwin
+ifdef Win32Platform
 MKDIRHIER = mkdir -p
 CXXLINKOPTIONS += -Wl,--enable-auto-import
-IMPORT_CPPFLAGS += -D__cygwin__
 SHAREDLIB_CPPFLAGS =
@@ -1212,6 +1211,2 @@

-SharedLibraryFullNameTemplate   = cyg\$\$1\$\$2.\$(SHAREDLIB_SUFFIX).\$\$3.\$\$4
-SharedLibrarySoNameTemplate     = cyg\$\$1\$\$2.\$(SHAREDLIB_SUFFIX).\$\$3
-SharedLibraryLibNameTemplate    = cyg\$\$1\$\$2.\$(SHAREDLIB_SUFFIX)
-SharedLibraryImplibNameTemplate  = lib\$\$1\$\$2.dll.a

EOF
# fix src/tool/omniidl/cxx/idlsysdep.h (version >= 4.2.4)
patch -ulbf src/tool/omniidl/cxx/idlsysdep.h << EOF
@@ -35,3 +35,3 @@
 // As usual, Windows manages to be different...
-#ifdef __WIN32__
+#if defined(__WIN32__) && !defined(__MINGW32__)
 // declspec is a define in windef.h under MINGW
EOF
wl-showstatus configure &&
 # mkdir -p m4 &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-openssl PYTHON=$PYDIR/python.exe LDFLAGS="-Wl,--as-needed -L$(pwd)/pylibs -lpython" &&
 #--disable-ipv6
 #--disable-alloca
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make -Csrc/tool/omkdepend Win32Platform=1 LIBS="-ladvapi32" &&
 cp -f src/tool/omkdepend/omkdepend.exe bin/ &&
 make -Csrc/tool/omniidl/cxx/cccp Win32Platform=1 &&
 make install Win32Platform=1 MinGW32Build=1 PYVERSION= omnicpp=$(pwd)/src/tool/omniidl/cxx/cccp/omnicpp.exe &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



