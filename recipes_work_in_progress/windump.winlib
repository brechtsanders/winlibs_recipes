export NAME="WinDump"
export STATUS=
export URL=https://www.winpcap.org/windump/
export BASENAME=windump
export DESCRIPTION="WinDump is the Windows version of tcpdump, the command line network analyzer for UNIX. WinDump is fully compatible with tcpdump and can be used to watch, diagnose and save to disk network traffic according to various complex rules."
export CATEGORY=network
export TYPE=application
export VERSION=3.9.5
export VERSIONDATE=20160228
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://www.winpcap.org/windump/install/ WDumpSrc_"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://www.winpcap.org/windump/install/bin/windump_$(echo $VERSION|tr . _)/WDumpSrc_$(echo $VERSION|tr . _).zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
unzip -oq $TARBALLDIR/$BASENAME/WDumpSrc_$(echo $VERSION|tr . _).zip $BASENAME-$VERSION/*
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix/net
touch winfix/net/netdb.h
#echo "#include <pcap/namedb.h>" > winfix/pcap-namedb.h
wl-showstatus configure &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$(pwd)/winfix -I$MINGWPREFIX/include/pcap" &&
 # fix definitions of u_int16_t/u_int32_t/u_int64_t/u_int8_t in config.h
 mv config.h config.h.bak &&
 sed -e "s/^\(#define u_int\)\([0-9]*_t\).*$/\1\2 uint\2/" config.h.bak > config.h &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 make install &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#wl-showstatus configure &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



