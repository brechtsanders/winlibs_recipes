export NAME="PDAL"
export STATUS=
export URL=https://pdal.io/
export BASENAME=pdal
export DESCRIPTION="PDAL is Point Data Abstraction Library. It is a C/C++ open source library and applications for translating and processing point cloud data. It is not limited to LiDAR data, although the focus and impetus for many of the tools in the library have their origins in LiDAR."
export CATEGORY=math
export TYPE=library
#export VERSION=1.7.2
#export VERSIONDATE=20180914
#export VERSION=1.8.0
#export VERSIONDATE=20181106
#export VERSION=1.9.0
#export VERSIONDATE=20190412
#export VERSION=1.9.1
#export VERSIONDATE=20190510
#export VERSION=2.0.0
#export VERSIONDATE=20190823
#export VERSION=2.0.1
#export VERSIONDATE=20190823
#export VERSION=2.1.0
#export VERSIONDATE=20200321
####/pdal/util/FileUtils.cpp:120:49: error: no matching function for call to 'std::basic_ifstream<char>::basic_ifstream(std::__cxx11::wstring, std::ios_base::openmode&)'
#export VERSION=2.2.0
#export VERSIONDATE=20200909
export VERSION=2.3.0
export VERSIONDATE=20210528
####vendor/kazhdan/SparseMatrix.inl:310:34: error: 'omp' was not declared in this scope
wl-showstatus --package-version
export DEPENDANCIES=zstd,libxml2,openssl,laszip,gdal,libgeotiff,zlib,xz,libcurl,postgresql
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=BSD
#export DOWNLOADURL="https://pdal.io/download.html PDAL- -src.tar.gz"
export DOWNLOADURL="https://github.com/PDAL/PDAL/releases/ PDAL- -src.tar.gz"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://download.osgeo.org/pdal/PDAL-$VERSION-src.tar.gz
export DOWNLOADSOURCEURL=https://github.com/PDAL/PDAL/releases/download/$VERSION/PDAL-$VERSION-src.tar.gz
export DOWNLOADSOURCEURL=https://github.com/PDAL/PDAL/releases/download/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/PDAL-$VERSION-src.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/PDAL-$VERSION-src.tar.gz
cd PDAL-$VERSION-src
# fix missing ntohll/htonll in pdal/util/portable_endian.hpp
sed -i.bak -e "s/\bntohll\b/_byteswap_uint64/; s/\bhtonll\b/_byteswap_uint64/" pdal/util/portable_endian.hpp
# compile with -D_USE_MATH_DEFINES to fix missing M_PI
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_PLUGIN_SQLITE:BOOL=ON -DBUILD_PLUGIN_SQLITE:BOOL=ON -DBUILD_PLUGIN_SQLITE:BOOL=ON -DWITH_LASZIP:BOOL=ON -DWITH_ZLIB:BOOL=ON -DWITH_ZSTD:BOOL=ON -DWITH_LZMA:BOOL=ON -DWITH_TESTS:BOOL=OFF -DBUILD_PLUGIN_SQLITE:BOOL=OFF -DGDAL_LIBRARY:STRING="-lgdal" -DCMAKE_CXX_FLAGS:STRING="-D_USE_MATH_DEFINES" -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_PLUGIN_SQLITE:BOOL=ON -DBUILD_PLUGIN_SQLITE:BOOL=ON -DBUILD_PLUGIN_SQLITE:BOOL=ON -DWITH_LASZIP:BOOL=ON -DWITH_ZLIB:BOOL=ON -DWITH_ZSTD:BOOL=ON -DWITH_LZMA:BOOL=ON -DWITH_TESTS:BOOL=OFF -DBUILD_PLUGIN_SQLITE:BOOL=OFF -DGDAL_LIBRARY:STRING="-lgdal" -DCMAKE_CXX_FLAGS:STRING="-D_USE_MATH_DEFINES" -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf PDAL-$VERSION-src



