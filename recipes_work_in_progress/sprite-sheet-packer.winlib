export NAME="sprite-sheet-packer"
export STATUS=
export URL=https://github.com/amakaseev/sprite-sheet-packer
export BASENAME=sprite-sheet-packer
export DESCRIPTION="Sprite sheet packer"
export CATEGORY=graphics,dataprocessing
export TYPE=library
export VERSION=1.0.9
export VERSIONDATE=20240303
wl-showstatus --package-version
export DEPENDENCIES=qt
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/amakaseev/sprite-sheet-packer/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/amakaseev/sprite-sheet-packer/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION

wl-showstatus configure &&
 $MINGWPREFIX/qt/bin/qmake -makefile sprite-sheet-packer.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
 wl-showstatus build &&
 mingw32-make &&
    echo OK

#export DEPENDENCIES=qt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# $MINGWPREFIX/qt/bin/qmake -makefile ../*.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ CONFIG+=staticlib &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# $MINGWPREFIX/qt/bin/qmake -makefile ../*.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# cd .. &&
# wl-showstatus build &&
# mingw32-make -Cbuild_static &&
# wl-showstatus build &&
# mingw32-make -Cbuild_shared &&
#    echo OK

#mkdir -p $INSTALLPREFIX/python/Lib/site-packages
##wl-showstatus build &&
## PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=$PWD/winfix:$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$INSTALLPREFIX/python/Lib/site-packages:$PYDIR/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe setup.py build --compiler=mingw32 &&
#wl-showstatus build-install &&
# PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$PYDIR/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe setup.py install --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
# ## delete any __pycache__ folder(s)
# #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
#    echo OK

#wl-showstatus build-install &&
# PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe $MINGWPREFIX/python/Scripts/pip-script.py install . --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
# ## delete any __pycache__ folder(s)
# #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
#    echo OK

#wl-showstatus build-install &&
# $PYDIR/python.exe -m pip install --target $INSTALLPREFIX/python/Lib/site-packages --disable-pip-version-check --no-compile . &&
#    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



