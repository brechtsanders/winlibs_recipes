#export NAME="Textadept"
#export STATUS=
#export URL=https://foicica.com/textadept/
#export BASENAME=textadept
#export DESCRIPTION="A fast, minimalist, and remarkably extensible cross-platform text editor"
#export CATEGORY=office
#export TYPE=application
##export VERSION=10.4
##export VERSIONDATE=20190621
##export VERSION=10.5
##export VERSIONDATE=20190731
##export VERSION=10.6
##export VERSIONDATE=20190916
##export VERSION=10.7
##export VERSIONDATE=20191114
#export VERSION=10.8
#export VERSIONDATE=20200108
#####src/textadept.c:48:10: fatal error: gtdialog.h: No such file or directory
#wl-showstatus --package-version
#export DEPENDENCIES=gtdialog
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://foicica.com/hg/textadept/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://foicica.com/hg/textadept/archive/594d642981ea.zip
##export DOWNLOADSOURCEURL=https://foicica.com/hg/textadept/archive/aa1c41ba9225.zip
##export DOWNLOADSOURCEURL=https://foicica.com/hg/textadept/archive/a3eb885540c9.zip
#export DOWNLOADSOURCEURL=https://foicica.com/hg/textadept/archive/2d4e16382688.zip
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME/$VERSION $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#unzip -oq $TARBALLDIR/$BASENAME/$VERSION/*.zip -d$BASENAME-$VERSION
#cd $BASENAME-$VERSION/textadept-*
#wl-showstatus build &&
# make -Csrc &&
#    echo OK
#gcc -c -o textadept.o src/textadept.c
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Textadept"
export STATUS=
export URL=https://orbitalquark.github.io/textadept/
export BASENAME=textadept
export DESCRIPTION="A fast, minimalist, and remarkably extensible cross-platform text editor"
export CATEGORY=office
export TYPE=application
#export VERSION=12.3
#export VERSIONDATE=20240407
export VERSION=12.4
export VERSIONDATE=20240501
wl-showstatus --package-version
export DEPENDENCIES=gtdialog,qt6
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/orbitalquark/textadept/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/orbitalquark/textadept/archive/refs/tags/textadept_$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/textadept_$VERSION.tar.gz
cd textadept-textadept_$VERSION
# fix CMakeLists.txt (version >= 12.3)
patch -ulbf CMakeLists.txt << EOF
@@ -58,3 +58,3 @@
 		pkg_search_module(CURSES REQUIRED ncursesw ncurses curses)
-	elseif(WIN32)
+	elseif(MSVC)
 		set(CURSES_LIBRARIES pdcurses)
@@ -162,3 +162,3 @@
 FetchContent_MakeAvailable(termkey)
-if(WIN32)
+if(MSVC)
 	# PDCurses.
@@ -325,3 +325,3 @@
 # iconv
-if(WIN32)
+if(MSVC)
 	add_library(iconv SHARED)
@@ -361,3 +361,3 @@
 	target_sources(textadept PRIVATE \${ta_src})
-	target_include_directories(textadept PRIVATE \$<\$<BOOL:\${WIN32}>:\${iconv_dir}/include>)
+	target_include_directories(textadept PRIVATE \$<\$<BOOL:\${MSVC}>:\${iconv_dir}/include>)
 	set_target_properties(textadept PROPERTIES WIN32_EXECUTABLE \$<\$<BOOL:\${WIN32}>:ON>)
@@ -397,3 +397,3 @@
 	target_sources(textadept-curses PRIVATE \${ta_src})
-	target_include_directories(textadept-curses PRIVATE \$<\$<BOOL:\${WIN32}>:\${iconv_dir}/include>)
+	target_include_directories(textadept-curses PRIVATE \$<\$<BOOL:\${MSVC}>:\${iconv_dir}/include>)
 	target_compile_options(textadept-curses PRIVATE \${ta_compile_opts})
@@ -467,6 +467,8 @@
 	endif()
-	install(TARGETS iconv DESTINATION \${ta_dir})
+	if(MSVC)
+		install(TARGETS iconv DESTINATION \${ta_dir})
+	endif()
 	install(FILES init.lua LICENSE DESTINATION \${ta_dir})
 	install(DIRECTORY core docs \${scilua_dir}/lexers modules themes DESTINATION \${ta_dir})
-	if(NOT (EXISTS \${ta_dir}/\${qt_major}Core.dll OR EXISTS \${ta_dir}/\${qt_major}Cored.dll))
+	if(MSVC AND NOT (EXISTS \${ta_dir}/\${qt_major}Core.dll OR EXISTS \${ta_dir}/\${qt_major}Cored.dll))
 		install(CODE
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DGTK2:BOOL=OFF -DGTK3:BOOL=OFF -DCMAKE_PREFIX_PATH:PATH=$MINGWPREFIX/qt6/lib/cmake -S. -Bbuild_win &&
#-DFETCHCONTENT_SOURCE_DIR_CDK:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_ICONV:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_LEXILLA:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_LFS:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_LPEG:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_LUA:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_PDCURSES:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_REGEX:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_SCINTERM:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_SCINTILLA:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_SCINTILLUA:PATH=$MINGWPREFIX 
#-DFETCHCONTENT_SOURCE_DIR_TERMKEY:PATH=$MINGWPREFIX 
 #wl-showstatus build &&
 #cmake.exe --build build_win &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 #cmake.exe --install build_win --strip &&
 #cmake.exe --build build_win --target "install/strip" &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



