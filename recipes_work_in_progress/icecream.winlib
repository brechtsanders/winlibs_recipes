export NAME="icecream"
export STATUS=
export URL=https://github.com/icecc/icecream
export BASENAME=icecream
export DESCRIPTION="Icecream was created by SUSE based on distcc. Like distcc, Icecream takes compile jobs from a build and distributes it among remote machines allowing a parallel build. But unlike distcc, Icecream uses a central server that dynamically schedules the compile jobs to the fastest free server. This advantage pays off mostly for shared computers, if you're the only user on x machines, you have full control over them."
export CATEGORY=development
export TYPE=application
#export VERSION=1.1
#export VERSIONDATE=20180922
#export VERSION=1.2
#export VERSIONDATE=20181013
#export VERSION=1.3
#export VERSIONDATE=20190912
#export VERSION=1.3.1
#export VERSIONDATE=20200205
export VERSION=1.4
export VERSIONDATE=20220305
wl-showstatus --package-version
export DEPENDENCIES=lzo
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/icecc/icecream/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/icecc/icecream/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix/sys winfix/netinet winfix/net
cat > winfix/sys/socket.h << EOF
#include <windows.h>
#include <ws2tcpip.h>
EOF
touch winfix/netinet/in.h winfix/netinet/tcp.h winfix/sys/un.h winfix/net/if.h winfix/sys/wait.h
#touch winfix/sys/poll.h
# fix daemon/load.cpp (version >= 1.3.1)
patch -ulbf daemon/load.cpp << EOF
@@ -63,3 +63,8 @@
 // what the kernel puts as ticks in /proc/stat
+#ifdef _WIN32
+#include <windows.h>
+typedef FILETIME load_t;
+#else
 typedef unsigned long long load_t;
+#endif

@@ -102,3 +107,13 @@

-#if defined(USE_SYSCTL) && defined(__DragonFly__)
+#if defined(_WIN32)
+    if (!GetSystemTimes(&currIdleTicks, &currSysTicks, &currUserTicks)) {
+        log_error() << "GetSystemTimes() failed" << endl;
+        load->userTicks = load->sysTicks = load->niceTicks = load->idleTicks = 0;
+        load->userLoad = load->sysLoad = load->niceLoad = load->idleLoad = 0;
+       return;
+    }
+    /* It doesn't exist in Windows. */
+    currNiceTicks = 0;
+    currWaitTicks = 0;
+#elif defined(USE_SYSCTL) && defined(__DragonFly__)
     static struct kinfo_cputime cp_time;
EOF
wl-showstatus configure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-shared --enable-static --without-libcap-ng CFLAGS="-I$(pwd)/winfix" CXXFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 #--without-man
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



