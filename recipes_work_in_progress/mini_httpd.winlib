export NAME="mini_httpd"
export STATUS=
export URL=http://acme.com/software/mini_httpd/
export BASENAME=mini_httpd
export DESCRIPTION="mini_httpd is a small HTTP server. Its performance is not great, but for low or medium traffic sites it's quite adequate."
export CATEGORY=communication
export TYPE=application
#export VERSION=1.19
#export VERSIONDATE=20130708
#export VERSION=1.20
#export VERSIONDATE=20140814
#export VERSION=1.21
#export VERSIONDATE=20141019
####mini_httpd.c:36:20: fatal error: syslog.h: No such file or directory
#export VERSION=1.22
#export VERSIONDATE=20151021
#export VERSION=1.23
#export VERSIONDATE=20151229
#export VERSION=1.24
#export VERSIONDATE=20160514
#export VERSION=1.25
#export VERSIONDATE=20160707
#export VERSION=1.26
#export VERSIONDATE=20161128
#export VERSION=1.27
#export VERSIONDATE=20170309
#export VERSION=1.28
#export VERSIONDATE=20180205
#export VERSION=1.29
#export VERSIONDATE=20180528
export VERSION=1.30
export VERSIONDATE=20181027
####mini_httpd.c:41:22: fatal error: sys/mman.h: No such file or directory
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="http://acme.com/software/mini_httpd/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://acme.com/software/mini_httpd/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing random/srandom in htpasswd.c
mv htpasswd.c htpasswd.c.bak &&
sed -e "s/random/rand/g" htpasswd.c.bak > htpasswd.c

#attrib -R mini_httpd.c

wl-showstatus build &&
make CC="${CC:-gcc} -I$MINGWPREFIX/include/mman-win32" &&
#make CC=${CC:-gcc} SSL_TREE=$MINGWPREFIX SSL_DEFS=-DUSE_SSL SSL_INC="-I$MINGWPREFIX/include" SSL_LIBS="-lssl -lcrypto" &&
 wl-showstatus build-install &&
    echo OK

  wl-showstatus configure &&
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE*
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION(`gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/"`)" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



