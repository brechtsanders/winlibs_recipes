#export NAME="SftpServer"
#export STATUS=
#export URL=https://github.com/zhengjiezxxy/SftpServer
#export BASENAME=sftpserver
#export DESCRIPTION="Implement a sftp server using libssh"
#export CATEGORY=communication
#export TYPE=application
#export VERSION=master
#export VERSIONDATE=20240817
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=
#export LICENSETYPE=
#export DOWNLOADURL="https://github.com/zhengjiezxxy/SftpServer/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/zhengjiezxxy/SftpServer/archive/refs/heads/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# wl-showstatus build &&
# ninja -Cbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="sftpserver"
export STATUS=
export URL=https://github.com/sjp27/sftpserver
export BASENAME=sftpserver
export DESCRIPTION="SFTP server based on libssh library using pthreads"
export CATEGORY=communication
export TYPE=application
export VERSION=master
export VERSIONDATE=20240817
wl-showstatus --package-version
export DEPENDENCIES=libssh
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/sjp27/sftpserver/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/sjp27/sftpserver/archive/refs/heads/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix undefined NAME_MAX in sftpserver.c
mv sftpserver.c sftpserver.c.bak &&
echo "#define _POSIX_" > sftpserver.c &&
cat sftpserver.c.bak >> sftpserver.c
# fix sftpserver.c (version >= master)
patch -ulbf sftpserver.c << EOF
@@ -1571,2 +1571,8 @@
     ssh_bind sshbind = NULL;
+#ifdef _WIN32
+    static WSADATA wsaData;
+    if (WSAStartup(MAKEWORD(2, 0), &wsaData) != 0)
+        fprintf(stderr, "Attempting to initialize Winsock failed\\n");
+    atexit((void(*)())WSACleanup);
+#endif
 #ifndef WIN32
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_C_FLAGS:STRING="-DWIN32" -S. -Bbuild_win &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_win/build.ninja &&
 wl-showstatus build &&
 ninja -Cbuild_win &&
 strip build_win/*.exe &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_win install/strip &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin &&
 cp -f build_win/*.exe $INSTALLPREFIX/bin/ &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



