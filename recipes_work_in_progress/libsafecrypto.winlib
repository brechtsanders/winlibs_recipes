export NAME="SAFEcrypto"
export STATUS=
export URL=https://github.com/safecrypto/libsafecrypto
export BASENAME=libsafecrypto
export DESCRIPTION="Secure Architectures of Future Emerging Cryptography - SAFEcrypto will provide a new generation of practical, robust, and physically secure post-quantum cryptographic functions. Work Package 6 will develop a suite of software routines to implement the lattice-based constructions identified in Work Package 4 of the SAFEcrypto project, whilst providing cryptographic primitives for use in the demonstrations developed in Work Package 9."
export CATEGORY=
export TYPE=library
export VERSION=0.2.0-52
export VERSIONDATE=20210910
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/safecrypto/libsafecrypto/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/safecrypto/libsafecrypto/releases/download/$VERSION/safecrypto-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/safecrypto-$VERSION.tar.gz
cd safecrypto-$VERSION
# fix include/safecrypto_types.h (version >= 0.2.0-52)
patch -ulbf include/safecrypto_types.h << EOF
@@ -26,2 +26,5 @@
 #include <stdio.h>
+#ifdef _WIN32
+#include <windows.h>
+#endif

@@ -59,2 +62,3 @@

+#ifdef _WIN32
 #define BOOLEAN    int32_t
@@ -62,2 +66,3 @@
 #define FLOAT      float
+#endif
 #define DOUBLE     double
EOF
# fix src/utils/crypto/prng.c (version >= 0.2.0-52)
patch -ulbf src/utils/crypto/prng.c << EOF
@@ -23,3 +23,3 @@
 #ifndef ENABLE_BAREMETAL
-#if defined( __linux__ ) || defined( __GNUC__ ) || defined( __GNU_LIBRARY__ )
+#if (defined( __linux__ ) || defined( __GNUC__ ) || defined( __GNU_LIBRARY__ )) && !defined( _WIN32 )
 #include <unistd.h>
EOF
wl-showstatus build &&
 make &&
 #make CC=${CC:-gcc} &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf safecrypto-$VERSION



