export NAME="MythTV"
export STATUS=
export URL=https://www.mythtv.org/
export BASENAME=mythtv
export DESCRIPTION="MythTV is a Free Open Source software digital video recorder (DVR) project distributed under the terms of the GNU GPL."
export CATEGORY=multimedia
export TYPE=library
#export VERSION=0.28
#export VERSIONDATE=20161205
#export VERSION=0.28.1
#export VERSIONDATE=20170201
#export VERSION=0.28.2
#export VERSIONDATE=20180201
#export VERSION=29.0
#export VERSIONDATE=20170816
#export VERSION=29.1
#export VERSIONDATE=20180201
#export VERSION=30.0
#export VERSIONDATE=20190114
#export VERSION=31.0
#export VERSIONDATE=20200324
####Error! QtWebkit headers not found
#export VERSION=32.0
#export VERSIONDATE=20220223
#export VERSION=33.0
#export VERSIONDATE=20230202
export VERSION=33.1
export VERSIONDATE=20230206
####ERROR: Only one thread type must be selected.
wl-showstatus --package-version
export DEPENDENCIES=freetype2,qt
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/MythTV/mythtv/releases"
export DOWNLOADURL="https://github.com/MythTV/mythtv/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/MythTV/mythtv/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/MythTV/mythtv/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION

cd mythtv
# fix configure for using MSYS
mv configure configure.bak &&
sed -e "s/mingw32\*|mingw64\*/msys\*|&/; s/msys\*)/REMOVE&/" configure.bak > configure
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE* COPYRIGHT* configure* CMakeLists.txt Makefile
wl-showstatus configure &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --disable-x11 --qmake=$MINGWPREFIX/qt/bin/qmake.exe --extra-cflags="-I$MINGWPREFIX/include/freetype2" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export DEPENDENCIES=qt
## fix mythtv.pro (version >= 32.0)
#patch -ulbf mythtv.pro << EOF
#@@ -4,3 +4,2 @@
#
#-win32-msvc* {
#
#@@ -12,8 +11,2 @@
#
#-} else {
#-
#-    message( "MythTV.pro is only used for building on windows with Visual Studio 2010+." )
#-    message( "Run ./configure on your system." )
#-    error  ( "Bailing out!" )
#-}
#
#EOF
#mkdir -p build_version build_settings build_mythtv
# wl-showstatus configure &&
# cd build_version &&
# $MINGWPREFIX/qt/bin/qmake -makefile ../version.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# cd .. &&
# wl-showstatus build &&
# mingw32-make -Cbuild_version &&
#    echo OK
# wl-showstatus configure &&
# cd build_settings &&
# $MINGWPREFIX/qt/bin/qmake -makefile ../settings.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# cd .. &&
# wl-showstatus build &&
# mingw32-make -Cbuild_settings &&
#    echo OK
# wl-showstatus configure &&
# cd build_mythtv &&
# $MINGWPREFIX/qt/bin/qmake -makefile ../mythtv.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# cd .. &&
# wl-showstatus build &&
# mingw32-make -Cbuild_mythtv &&
#    echo OK
