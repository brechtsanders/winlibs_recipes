export NAME="sfntly"
export STATUS=
#export URL=https://github.com/googlefonts/sfntly
export URL=https://github.com/rillig/sfntly
export BASENAME=sfntly
export DESCRIPTION="The sfntly project contains Java and C++ libraries for reading, editing, and writing sfnt container fonts (OpenType, TrueType, AAT/GX, and Graphite)."
export CATEGORY=graphics
export TYPE=library
export VERSION=master
export VERSIONDATE=20210226
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=cpp/COPYING.txt
export LICENSETYPE=Apache
#export DOWNLOADURL="https://github.com/googlefonts/sfntly/releases"
export DOWNLOADURL="https://github.com/rillig/sfntly/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://chromium.googlesource.com/external/github.com/googlei18n/sfntly.git/+archive/refs/heads/master.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/googlefonts/sfntly/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/rillig/sfntly/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# skip building unit_test in cpp/CMakeLists.txt
patch -ulbf cpp/CMakeLists.txt << EOF
@@ -85,10 +85,2 @@
     src/sample/chromium/font_subsetter.h)
-  add_executable(unit_test
-    \${TEST_CASES} \${CHROME_SUBSETTER_LIB}
-    ext/gtest/src/gtest-all.cc
-    ext/gtest/src/gtest_main.cc)
-  target_link_libraries(unit_test sfntly icuuc tinyxml)
-if(GCC_OR_CLANG)
-  target_link_libraries(unit_test pthread)
-endif(GCC_OR_CLANG)
   # subtly targets
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -Scpp -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -licuuc" -Scpp -Bbuild_shared &&
 wl-showstatus build &&
 ninja -Cbuild_static &&
 wl-showstatus build &&
 ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



