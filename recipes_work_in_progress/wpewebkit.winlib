export NAME="WPE WebKit"
export STATUS=
export URL=https://webkit.org/wpe/
export BASENAME=wpewebkit
export DESCRIPTION="WPE is the reference WebKit port for embedded and low-consumption computer devices. It has been designed from the ground-up with performance, small footprint, accelerated content rendering, and simplicity of deployment in mind, bringing the excellence of the WebKit engine to countless platforms and target devices."
export CATEGORY=graphics
export TYPE=library
#export VERSION=2.24.2
#export VERSIONDATE=20190611
#export VERSION=2.24.3
#export VERSIONDATE=20190828
#export VERSION=2.25.1
#export VERSIONDATE=20190619
#export VERSION=2.25.2
#export VERSIONDATE=20190813
#export VERSION=2.26.0
#export VERSIONDATE=20190922
#export VERSION=2.26.1
#export VERSIONDATE=20190924
#export VERSION=2.26.2
#export VERSIONDATE=20191108
#export VERSION=2.26.3
#export VERSIONDATE=20200123
#export VERSION=2.26.4
#export VERSIONDATE=20200214
#export VERSION=2.27.1
#export VERSIONDATE=20191009
#export VERSION=2.27.2
#export VERSIONDATE=20191101
#export VERSION=2.27.3
#export VERSIONDATE=20191127
#export VERSION=2.28.0
#export VERSIONDATE=20200312
#export VERSION=2.28.1
#export VERSIONDATE=20200414
#export VERSION=2.28.2
#export VERSIONDATE=20200425
#export VERSION=2.28.3
#export VERSIONDATE=20200710
#export VERSION=2.28.4
#export VERSIONDATE=20200729
#export VERSION=2.29.1
#export VERSIONDATE=20200721
#export VERSION=2.29.2
#export VERSIONDATE=20200729
#export VERSION=2.30.0
#export VERSIONDATE=20200912
#export VERSION=2.30.1
#export VERSIONDATE=20200922
#export VERSION=2.30.2
#export VERSIONDATE=20201024
#export VERSION=2.30.3
#export VERSIONDATE=20201120
#export VERSION=2.30.4
#export VERSIONDATE=20201217
#export VERSION=2.30.5
#export VERSIONDATE=20210212
#export VERSION=2.30.6
#export VERSIONDATE=20210320
#export VERSION=2.31.1
#export VERSIONDATE=20210205
#export VERSION=2.32.0
#export VERSIONDATE=20210327
#export VERSION=2.32.1
#export VERSIONDATE=20210509
#export VERSION=2.32.2
#export VERSIONDATE=20210713
#export VERSION=2.32.3
#export VERSIONDATE=20210724
#export VERSION=2.32.4
#export VERSIONDATE=20210918
####Source/WTF/wtf/text/WTFString.h:38:10: fatal error: wtf/text/win/WCharStringExtras.h: No such file or directory
#export VERSION=2.33.1
#export VERSIONDATE=20210528
#export VERSION=2.33.2
#export VERSIONDATE=20210613
#export VERSION=2.33.90
#export VERSIONDATE=20210914
#export VERSION=2.34.0
#export VERSIONDATE=20211020
#export VERSION=2.34.1
#export VERSIONDATE=20211021
#export VERSION=2.34.2
#export VERSIONDATE=20211124
#export VERSION=2.34.3
#export VERSIONDATE=20211220
#export VERSION=2.34.4
#export VERSIONDATE=20220121
#export VERSION=2.34.5
#export VERSIONDATE=20220209
#export VERSION=2.34.6
#export VERSIONDATE=20220217
#export VERSION=2.34.7
#export VERSIONDATE=20220408
#export VERSION=2.35.1
#export VERSIONDATE=20211127
#export VERSION=2.36.0
#export VERSIONDATE=20220326
#export VERSION=2.36.1
#export VERSIONDATE=20220422
#export VERSION=2.36.2
#export VERSIONDATE=20220518
#export VERSION=2.36.3
#export VERSIONDATE=20220528
#export VERSION=2.36.4
#export VERSIONDATE=20220704
#export VERSION=2.36.5
#export VERSIONDATE=20220729
#export VERSION=2.36.6
#export VERSIONDATE=20220808
#export VERSION=2.36.7
#export VERSIONDATE=20220825
#export VERSION=2.37.1
#export VERSIONDATE=20220802
#export VERSION=2.38.0
#export VERSIONDATE=20220917
#export VERSION=2.38.1
#export VERSIONDATE=20221027
#export VERSION=2.38.2
#export VERSIONDATE=20221104
#export VERSION=2.38.3
#export VERSIONDATE=20221223
#export VERSION=2.38.4
#export VERSIONDATE=20230202
#export VERSION=2.38.5
#export VERSIONDATE=20230215
#export VERSION=2.38.6
#export VERSIONDATE=20230421
#export VERSION=2.39.5
#export VERSIONDATE=20230119
#export VERSION=2.40.0
#export VERSIONDATE=20230318
#export VERSION=2.40.1
#export VERSIONDATE=20230420
#export VERSION=2.40.2
#export VERSIONDATE=20230530
#export VERSION=2.40.3
#export VERSIONDATE=20230630
#export VERSION=2.40.4
#export VERSIONDATE=20230721
#export VERSION=2.40.5
#export VERSIONDATE=20230801
#export VERSION=2.41.2
#export VERSIONDATE=20230421
#export VERSION=2.42.0
#export VERSIONDATE=20230920
#export VERSION=2.42.1
#export VERSIONDATE=20230928
#export VERSION=2.42.2
#export VERSIONDATE=20231115
#export VERSION=2.42.3
#export VERSIONDATE=20231204
#export VERSION=2.42.4
#export VERSIONDATE=20231215
#export VERSION=2.42.5
#export VERSIONDATE=20240205
#export VERSION=2.43.1
#export VERSIONDATE=20231124
#export VERSION=2.44.0
#export VERSIONDATE=20240321
#export VERSION=2.44.1
#export VERSIONDATE=20240410
#export VERSION=2.44.2
#export VERSIONDATE=20240515
#export VERSION=2.44.3
#export VERSIONDATE=20240813
#export VERSION=2.44.4
#export VERSIONDATE=20240906
#export VERSION=2.45.1
#export VERSIONDATE=20240511
#export VERSION=2.45.2
#export VERSIONDATE=20240515
#export VERSION=2.45.3
#export VERSIONDATE=20240531
####Target "WebCore" links to target "LibXml2::LibXml2" but the target was not found.  Perhaps a find_package() call is missing for an IMPORTED target, or an ALIAS target is missing?
#export VERSION=2.46.0
#export VERSIONDATE=20240918
#export VERSION=2.46.1
#export VERSIONDATE=20241003
#export VERSION=2.46.2
#export VERSIONDATE=20241022
#export VERSION=2.46.2
#export VERSIONDATE=20241031
#export VERSION=2.46.4
#export VERSIONDATE=20241127
#export VERSION=2.46.5
#export VERSIONDATE=20241219
#export VERSION=2.46.6
#export VERSIONDATE=20250209
#export VERSION=2.46.7
#export VERSIONDATE=20250315
#export VERSION=2.47.1
#export VERSIONDATE=20241104
#export VERSION=2.47.2
#export VERSIONDATE=20241127
#export VERSION=2.47.3
#export VERSIONDATE=20250123
#export VERSION=2.47.4
#export VERSIONDATE=20250210
#export VERSION=2.48.0
#export VERSIONDATE=20250315
#export VERSION=2.48.1
#export VERSIONDATE=20250403
#export VERSION=2.48.2
#export VERSIONDATE=20250515
#export VERSION=2.48.3
#export VERSIONDATE=20250530
#export VERSION=2.48.4
#export VERSIONDATE=20250728
#export VERSION=2.49.1
#export VERSIONDATE=20250403
#export VERSION=2.49.2
#export VERSIONDATE=20250531
export VERSION=2.49.3
export VERSIONDATE=20250626
wl-showstatus --package-version
export DEPENDENCIES=ruby,icu,jack,sqlite3,sqlitecpp,wtf
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://wpewebkit.org/releases/"
#export DOWNLOADURL="https://svn.webkit.org/repository/webkit/releases/WPE%20WebKit/ webkit-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://wpewebkit.org/releases/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix Source/WTF/wtf/ASCIICType.cpp
####Source/WTF/wtf/ASCIICType.cpp:30:62: error: external linkage required for symbol 'WTF::asciiCaseFoldTable' because of 'dllexport' attribute
patch -ulbf Source/WTF/wtf/ASCIICType.cpp << EOF
@@ -30 +30 @@
-WTF_EXPORT_PRIVATE const unsigned char asciiCaseFoldTable[256] = {
+const unsigned char asciiCaseFoldTable[256] = {
EOF
# fix path to sys/mman.h (version >= 2.42.2)
sed -i.bak -e "s?\(#include <\)\(sys/mman\.h>\)?\1mman-win32/\2?" $(grep -l "#include <sys/mman\.h>" $(find -name '*.h' -or -name '*.c' -or -name '*.cpp' -or -name '*.cc'))
# fix Tools/TestWebKitAPI/CMakeLists.txt
patch -ulbf Tools/TestWebKitAPI/CMakeLists.txt << EOF
@@ -279,3 +279,3 @@
 set_target_properties(TestWTF PROPERTIES
-    RUNTIME_OUTPUT_DIRECTORY \${TESTWEBKITAPI_RUNTIME_OUTPUT_DIRECTORY_WTF}
+    RUNTIME_OUTPUT_DIRECTORY "\${TESTWEBKITAPI_RUNTIME_OUTPUT_DIRECTORY_WTF}"
 )
EOF
# fix missing files
mkdir -p PerformanceTests
touch PerformanceTests/CMakeLists.txt
mkdir -p Source/WebKitLegacy
touch Source/WebKitLegacy/CMakeLists.txt
cp -u Source/cmake/OptionsWin.cmake Source/cmake/OptionsWinCairo.cmake
#touch Source/cmake/OptionsGTK.cmake
#mkdir -p Source/WTF/wtf/win
#touch Source/WTF/wtf/win/Win32Handle.h
# fix missing ICU::data/ICU::i18n/ICU::uc
sed -i.bak -e "s/ICU::/icu/g" Source/WTF/wtf/CMakeLists.txt
# fix detection of SQLite3 (version >= 2.28.2)
echo "find_package(SQLite3 REQUIRED)" >> Source/cmake/OptionsWin.cmake
echo "find_package(SQLite3 REQUIRED)" >> Source/cmake/OptionsWinCairo.cmake
# fix missing SQLite::SQLite3
sed -i.bak -e "s/\(if (\)[^ ]*_LIBRARY AND \(NOT TARGET [^ ]*::[^ ]*)\)/\1\2/" Source/cmake/FindSQLite3.cmake
# fix missing targets ZLIB::ZLIB/LibXml2::LibXml2/LibXslt::LibXslt in Source/WebCore/CMakeLists.txt
mv Source/WebCore/CMakeLists.txt Source/WebCore/CMakeLists.txt.bak
cat > Source/WebCore/CMakeLists.txt << EOF
find_package(ZLIB REQUIRED)
find_package(LibXml2 REQUIRED)
find_package(LibXslt REQUIRED)
EOF
cat Source/WebCore/CMakeLists.txt.bak >> Source/WebCore/CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 #-DPORT:STRING=WPE -DUSE_GBM:BOOL=OFF -DENABLE_JOURNALD_LOG:BOOL=OFF -DENABLE_DOCUMENTATION:BOOL=OFF 
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPORT:STRING=WinCairo -DWTF_PLATFORM_WIN_CAIRO:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DENABLE_API_TESTS:BOOL=OFF -S. -Bbuild_win &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPORT:STRING=WinCairo -DENABLE_API_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPORT:STRING=WinCairo -DENABLE_API_TESTS:BOOL=OFF -DENABLE_LAYOUT_TESTS:BOOL=OFF -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/WTF" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPORT:STRING=Win -DENABLE_API_TESTS:BOOL=OFF -DENABLE_LAYOUT_TESTS:BOOL=OFF -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/WTF" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
 sed -i.bak -e "s/ -licudata / -licudt /; s/ -licui18n / -licuin /" build_win/build.ninja &&
 #-DENABLE_INTL:BOOL=ON -DENABLE_DEVICE_ORIENTATION:BOOL=OFF -DSHOULD_INSTALL_JS_SHELL:BOOL=ON
 #### possible values for PORT (see also: ls -1 Source/cmake/Options*.cmake): AppleWin;Efl;FTW;GTK;JSCOnly;Mac;PlayStation;WPE;WinCairo
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####Requires WebKit Support Library (not open source)



# fix Source/ThirdParty/ANGLE/src/libANGLE/renderer/dxgi_support_table.h (version >= 2.42.2)
mv Source/ThirdParty/ANGLE/src/libANGLE/renderer/dxgi_support_table.h Source/ThirdParty/ANGLE/src/libANGLE/renderer/dxgi_support_table.h.bak &&
echo "#include <dxgiformat.h>" > Source/ThirdParty/ANGLE/src/libANGLE/renderer/dxgi_support_table.h &&
echo "#include <d3d11.h>" >> Source/ThirdParty/ANGLE/src/libANGLE/renderer/dxgi_support_table.h &&
cat Source/ThirdParty/ANGLE/src/libANGLE/renderer/dxgi_support_table.h.bak >> Source/ThirdParty/ANGLE/src/libANGLE/renderer/dxgi_support_table.h
# fix Source/ThirdParty/ANGLE/src/libANGLE/renderer/Format.h (version >= 2.42.2)
echo "#include <dxgiformat.h>" >> Source/ThirdParty/ANGLE/src/libANGLE/renderer/Format.h
echo "#include <d3d11.h>" >> Source/ThirdParty/ANGLE/src/libANGLE/renderer/Format.h
# fix Source/ThirdParty/ANGLE/CMakeLists.txt (version >= 2.42.2)
cp Source/ThirdParty/ANGLE/CMakeLists.txt Source/ThirdParty/ANGLE/CMakeLists.txt.bak
cat > Source/ThirdParty/ANGLE/CMakeLists.txt << EOF
list(APPEND CMAKE_MODULE_PATH \${CMAKE_CURRENT_LIST_DIR}/../../cmake)
include(WebKitMacros)
EOF
sed -e "s/ STATIC/ \${LIBTYPE}/" Source/ThirdParty/ANGLE/CMakeLists.txt.bak >> Source/ThirdParty/ANGLE/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DLIBTYPE:STRING=STATIC -SSource/ThirdParty/ANGLE -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DLIBTYPE:STRING=SHARED -SSource/ThirdParty/ANGLE -Bbuild_shared &&
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lxxhash/" build_shared/build.ninja &&
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lxxhash -L. -lANGLE/" build_shared/build.ninja &&
 wl-showstatus build &&
 ninja -Cbuild_static &&
 wl-showstatus build &&
 ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK



