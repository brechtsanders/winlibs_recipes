#export NAME="can"
#export STATUS=
#export URL=http://sourceforge.net/projects/can/
#export BASENAME=can
#export DESCRIPTION="The CAN projects aim is to develop and maintain a CAN driver for Linux/windows that support misc. can chips/cards. Also utilities such as tracing tools, diagnostic tools and such will be published in the project. The Very Simple Control Protocol (VSCP)."
#export CATEGORY=hardware,communication
#export TYPE=library
#export VERSION=0.1.7
#export VERSIONDATE=20091103
#wl-showstatus --package-version
#export DEPENDENCIES=wx-config-win
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://sourceforge.net/projects/can/files/ vscp_src_ .tgz"
#export DOWNLOADURL="http://sourceforge.net/projects/can/files/Very%20Simple%20Control%20Protocol/ vscp_src_ .tgz"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/can/Very%20Simple%20Control%20Protocol/ver%20$VERSION/vscp_src_$VERSION.tgz
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/vscp_src_$VERSION.tgz
#cd vscp_src_$VERSION
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-wxwindows && make all install
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-wxwindows LDFLAGS="-Wl,--enable-auto-import" && make all install
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--enable-auto-import" &&
# wl-showstatus build-install &&
# make all install &&
#    echo OK
#####cancmd.cpp:62:19: error: wx/wx.h: No such file or directory
##wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf cd vscp_src_$VERSION
#####2012-03-02: The VSCP project has been moved to m2m http://sourceforge.net/projects/m2m/.



#export NAME="VSCP"
#export STATUS=
#export URL=http://sourceforge.net/projects/m2m/
#export BASENAME=m2m
#export DESCRIPTION="A project for a collection of software tools for machine to machine communication. The programs here works on Windows and Linux and are based around VSCP, The Very Simple Control Protocol."
#export CATEGORY=hardware,communication
#export TYPE=library
##export VERSION=0.3.1
##export VERSIONDATE=20111215
##export VERSION=0.3.3
##export VERSIONDATE=20120828
##export VERSION=1.12.4
##export VERSIONDATE=20170906
#export VERSION=13.0.0
#export VERSIONDATE=20180502
#wl-showstatus --package-version
#export DEPENDENCIES=libwebsockets
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=wx-config-win
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://sourceforge.net/projects/m2m/files/vscp/"
##export DOWNLOADURL="http://sourceforge.net/projects/m2m/files/vscp/0.3.3%20Oxygen/ vscp_src_"
#export DOWNLOADURL="https://sourceforge.net/projects/m2m/files/VSCP%20Software/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/m2m/vscp/0.3.1%20Nitrogen/vscp_src_0.3.1.tgz
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/m2m/vscp/0.3.3%20Oxygen/vscp_src_0.3.3.tgz
##export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/m2m/VSCP%20Software/1.2%20Magnesium/vscp-1.12.4.tar.gz
##export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/m2m/VSCP%20Software/1.2%20Magnesium/vscp-1.12.4.tar.gz
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/m2m/software/13.0.0_Aluminium/vscp-13.0.0.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##mkdir -p $BASENAME-$VERSION
##tar xfz $TARBALLDIR/$BASENAME/vscp_src_$VERSION.tgz -C $BASENAME-$VERSION
##tar xfa $TARBALLDIR/$BASENAME/vscp_src_$VERSION.tgz -C $BASENAME-$VERSION
#tar xfz $TARBALLDIR/$BASENAME/vscp-$VERSION.tar.gz
##cd $BASENAME-$VERSION/m2m
##cd $BASENAME-$VERSION/vscp
#cd vscp-$VERSION
## fix missing files
#mkdir -p win32fix/sys win32fix/linux win32fix/net
#echo "#include <winsock2.h>" > win32fix/sys/socket.h
#touch win32fix/sys/msg.h win32fix/netdb.h win32fix/linux/if_packet.h win32fix/linux/if_ether.h win32fix/net/if_arp.h win32fix/net/if.h win32fix/sys/ioctl.h win32fix/linux/sockios.h
#cat > win32fix/syslog.h << EOF
#EOF
## create dummy wx-config which supports --version and uses UNIX-style paths
#cat > wx-config.sh << EOF
##!/bin/sh
##if [ "\$1" == "--version" ]; then
#if echo \$*|grep -q version; then
# wx-config.exe --release | grep -v "wx-config Error:" | sed -e "s/^\\([0-9]*\\.[0-9]*\\)\$/\\1.0/"
#else
# wx-config.exe --debug=no --unicode=yes --static=no --compiler=gcc \$* | grep -v "wx-config Error:" | sed -e "s?\\([A-Z]\\):\\\\\\\\?/\\1/?g; s?\\\\\\\\?/?g"
#fi
#EOF
## fix invalid linker parameter -W1,--version-script in configure
#mv configure configure.bak
#sed -e "s/-W1,--version-script//" configure.bak > configure
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-wx-config="./wx-config.sh" CFLAGS="-I`pwd`/win32fix" CXXFLAGS="-I`pwd`/win32fix" &&
# wl-showstatus build-install &&
# make all install &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#####../../common/controlobject.h:50:27: fatal error: libwebsockets.h: No such file or directory
#    make install-pkgconfigDATA
##    cmake.exe . -LH; rm CMakeCache.txt &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX . &&
## make install/strip &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && rm -rf $BASENAME-$VERSION



export NAME="VSCP"
export STATUS=
export URL=https://github.com/grodansparadis/vscp
export BASENAME=vscp
export DESCRIPTION="VSCP (Very Simple Control Protocol) is a framework for IoT/m2m tasks. The framework defines methods to have a common device discovery, a common configuration, a common way to interface with remote devices and a common way to update firmware of devices built on different architectures. A server is available that runs on many platforms that have a webserver/websocket/rest/driver and tcp/ip interface with ssl security."
export CATEGORY=communication
export TYPE=library
#export VERSION=14.0.1
#export VERSIONDATE=20200406
#export VERSION=14.0.2
#export VERSIONDATE=20200429
#export VERSION=14.0.3
#export VERSIONDATE=20200516
#export VERSION=14.0.4
#export VERSIONDATE=20200604
#export VERSION=14.0.5
#export VERSIONDATE=20200912
export VERSION=15.0.0
export VERSIONDATE=20210628
wl-showstatus --package-version
export DEPENDENCIES=expat
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/grodansparadis/vscp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/grodansparadis/vscp/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus configure &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-wrap --disable-systemd &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 #make install &&
 make install-folders install-config DESTDIR=$INSTALLPREFIX &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_SSL:BOOL=ON -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



