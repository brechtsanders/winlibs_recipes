export NAME="Free Music Instrument Tuner"
export STATUS=
#export URL=http://home.gna.org/fmit/
export URL=http://gillesdegottex.github.io/fmit/
export BASENAME=fmit
export DESCRIPTION="Free Music Instrument Tuner"
export CATEGORY=audio
export TYPE=application
#export VERSION=0.99.2
#export VERSIONDATE=20130324
#export VERSION=1.1.13
#export VERSIONDATE=20170821
#export VERSION=1.1.14
#export VERSIONDATE=20180322
#export VERSION=1.1.15
#export VERSIONDATE=20180323
#export VERSION=1.1.16
#export VERSIONDATE=20180323
#export VERSION=1.1.18
#export VERSIONDATE=20180510
#export VERSION=1.2.0
#export VERSIONDATE=20180514
#export VERSION=1.2.1
#export VERSIONDATE=20180515
#export VERSION=1.2.2
#export VERSIONDATE=20180520
#export VERSION=1.2.3
#export VERSIONDATE=20180521
#export VERSION=1.2.4
#export VERSIONDATE=20180521
#export VERSION=1.2.5
#export VERSIONDATE=20180528
#export VERSION=1.2.6
#export VERSIONDATE=20180531
####g++.exe: error: unrecognized debug output level 'lu32'
#export VERSION=1.2.13
#export VERSIONDATE=20190910
export VERSION=1.2.14
export VERSIONDATE=20200726
wl-showstatus --package-version
export DEPENDANCIES=qt
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
export LICENSEFILE=COPYING_GPL.txt
export LICENSETYPE=GPL
#export LICENSEFILE=COPYING_LGPL.txt
#export LICENSETYPE=LGPL
#export DOWNLOADURL="http://download.gna.org/fmit/"
export DOWNLOADURL="https://github.com/gillesdegottex/fmit/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://download.gna.org/fmit/$BASENAME-$VERSION-Source.tar.bz2
export DOWNLOADSOURCEURL=https://github.com/gillesdegottex/fmit/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION-Source.tar.bz2
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION-Source
cd $BASENAME-$VERSION
#wl-showstatus configure &&
##    cmake.exe . -LH; rm -f CMakeCache.txt
##rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQT_INSTALL_LIBS:PATH=$MINGWPREFIX/qt/lib -DQT_MKSPECS_DIR:PATH=$MINGWPREFIX/qt/mkspecs -DQT_QTCORE_INCLUDE_DIR:PATH=$MINGWPREFIX/qt/include/QtCore -L && echo OK &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQT_MKSPECS_DIR:PATH=$MINGWPREFIX/qt/mkspecs -L && echo OK &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
#QT_QMAKE_EXECUTABLE QT_MOC_EXECUTABLE
#  QT_RCC_EXECUTABLE QT_UIC_EXECUTABLE QT_INCLUDE_DIR QT_LIBRARY_DIR
#  QT_QTCORE_LIBRARY)
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# fix missing -lfftw3-3 (version >= 1.1.13)
mv fmit.pro fmit.pro.bak &&
sed -e "s/-lfftw3-3/-lfftw3/" fmit.pro.bak > fmit.pro
wl-showstatus configure &&
 #$MINGWPREFIX/qt/bin/qmake.exe -makefile &&
 QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ $MINGWPREFIX/qt/bin/qmake.exe -makefile &&
 sed -i.bak -e "s?/usr/local/?/?g" Makefile* &&
 # fix backslashes in paths (but keep backslashes at end of line) and invalid -glu32 (version >= 1.2.13)
 sed -i.bak2 -e "s?\\\\\(.\)?/\1?g; s?-glu32?-lglu32?" Makefile* &&
 wl-showstatus build &&
 make release &&
 #PATH=$MINGWPREFIX/qt/bin:$PATH make -j1 release &&
 wl-showstatus build-install &&
 make install INSTALL_ROOT=$INSTALLPREFIX &&
 #mv -f $INSTALLPREFIX/usr/local/* $INSTALLPREFIX/ &&
 #mkdir -p $INSTALLPREFIX/share &&
 #mv -f $INSTALLPREFIX/usr/share/* $INSTALLPREFIX/share/ &&
 #rm -rf $INSTALLPREFIX/usr &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
####PATH=$MINGWPREFIX/qt/bin:$PATH QT_QPA_PLATFORM_PLUGIN_PATH=$MINGWPREFIX/qt/plugins/platforms fmit



