export NAME="TDB"
export STATUS=
#export URL=http://sourceforge.net/projects/tdb/
export URL=http://tdb.samba.org/
export BASENAME=tdb
export DESCRIPTION="TDB is a Trivial Database. In concept, it is very much like GDBM, and BSD's DB except that it allows multiple simultaneous writers and uses locking internally to keep writers from trampling on each other. TDB is also extremely small."
export CATEGORY=db
export TYPE=library
#export VERSION=1.0.6
#export VERSIONDATE=20100428
#export VERSION=1.2.9
#export VERSIONDATE=20120212
#export VERSION=1.2.10
#export VERSIONDATE=20120411
#export VERSION=1.2.11
#export VERSIONDATE=20121130
#export VERSION=1.2.12
#export VERSIONDATE=20130605
#export VERSION=1.2.13
#export VERSIONDATE=20140320
#export DEPENDENCIES=plibc
#export VERSION=1.3.0
#export VERSIONDATE=20140523
#export VERSION=1.3.1
#export VERSIONDATE=20140917
#export VERSION=1.3.2
#export VERSIONDATE=20141201
#export VERSION=1.3.3
#export VERSIONDATE=20141203
#export VERSION=1.3.4
#export VERSIONDATE=20141222
####File "./buildtools/wafsamba\samba_install.py", line 228, in symlink_bin
####os.symlink(binpath, bldpath)
####AttributeError: 'module' object has no attribute 'symlink'
#export VERSION=1.3.5
#export VERSIONDATE=20150429
#export VERSION=1.3.6
#export VERSIONDATE=20150613
#export VERSION=1.3.7
#export VERSIONDATE=20150722
#export VERSION=1.3.8
#export VERSIONDATE=20151106
#export VERSION=1.3.9
#export VERSIONDATE=20160412
#export VERSION=1.3.10
#export VERSIONDATE=20160728
#export VERSION=1.3.11
#export VERSIONDATE=20160830
#export VERSION=1.3.12
#export VERSIONDATE=20161201
#export VERSION=1.3.13
#export VERSIONDATE=20170428
#export VERSION=1.3.14
#export VERSIONDATE=20170703
#export VERSION=1.3.15
#export VERSIONDATE=20170827
#export VERSION=1.3.16
#export VERSIONDATE=20180712
#export VERSION=1.3.17
#export VERSIONDATE=20190115
#export VERSION=1.3.18
#export VERSIONDATE=20190226
#export VERSION=1.4.0
#export VERSIONDATE=20190321
#export VERSION=1.4.1
#export VERSIONDATE=20190820
#export VERSION=1.4.2
#export VERSIONDATE=20190821
#export VERSION=1.4.3
#export VERSIONDATE=20191216
#export VERSION=1.4.4
#export VERSIONDATE=20210715
#export VERSION=1.4.5
#export VERSIONDATE=20210720
#export VERSION=1.4.6
#export VERSIONDATE=20220124
#export VERSION=1.4.7
#export VERSIONDATE=20220609
#export VERSION=1.4.8
#export VERSIONDATE=20230119
#export VERSION=1.4.9
#export VERSIONDATE=20230720
#export VERSION=1.4.10
#export VERSIONDATE=20240130
#export VERSION=1.4.11
#export VERSIONDATE=20240729
#export VERSION=1.4.12
#export VERSIONDATE=20240807
export VERSION=1.4.13
export VERSIONDATE=20250206
wl-showstatus --package-version
export DEPENDENCIES=mman-win32,libdl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL2
#export DOWNLOADURL="http://sourceforge.net/projects/tdb/files/"
#export DOWNLOADURL="http://sourceforge.net/projects/tdb/files/tdb/"
#export DOWNLOADURL="http://www.samba.org/ftp/tdb/"
export DOWNLOADURL="https://www.samba.org/ftp/tdb/"
#export DOWNLOADURL="https://download.samba.org/pub/tdb/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/tdb/tdb/$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://www.samba.org/ftp/tdb/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://www.samba.org/ftp/tdb/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix lib/replace/win32_replace.h (version >= 1.4.12)
patch -ulbf lib/replace/win32_replace.h << EOF
@@ -17,2 +17,3 @@

+#ifndef ENOTSUP
 #define EAFNOSUPPORT   WSAEAFNOSUPPORT
@@ -27,2 +28,5 @@
 #define ENOTSUP                134
+#endif
+typedef int uid_t;
+typedef int gid_t;

EOF
# fix definition of mkdir(), mismatching redefinition of rep_readlink(), getting page size in lib/replace/replace.c (version >= 1.4.12)
patch -ulbf lib/replace/replace.c << EOF
@@ -40,3 +40,5 @@
 #ifdef _WIN32
-#define mkdir(d,m) _mkdir(d)
+#include <windows.h>
+#undef mkdir
+#define mkdir(d,m) CreateDirectory((d), NULL)
 #endif
@@ -717,3 +719,3 @@
 #ifndef HAVE_READLINK
-int rep_readlink(const char *path, char *buf, size_t bufsiz)
+ssize_t rep_readlink(const char *path, char *buf, size_t bufsiz)
 {
@@ -881,3 +883,7 @@
         * be aligned on allocations of > pagesize. */
-#if defined(SYSCONF_SC_PAGESIZE)
+#ifdef _WIN32
+        SYSTEM_INFO sysinfo;
+        GetSystemInfo(&sysinfo);
+       size_t pagesize = (size_t)sysinfo.dwPageSize;
+#elif defined(SYSCONF_SC_PAGESIZE)
        size_t pagesize = (size_t)sysconf(_SC_PAGESIZE);
EOF
# fix lib/replace/system/network.h (version >= 1.4.12)
patch -ulbf lib/replace/system/network.h << EOF
@@ -356,3 +356,3 @@

-#ifndef HAVE_STRUCT_ADDRINFO
+#if !defined(HAVE_STRUCT_ADDRINFO) && !defined(__MINGW32__)
 #define HAVE_STRUCT_ADDRINFO
EOF
# fix lib/replace/closefrom.c (version >= 1.4.12)
patch -ulbf lib/replace/closefrom.c << EOF
@@ -32,3 +32,7 @@

+#ifdef _SC_OPEN_MAX
        max_files = sysconf(_SC_OPEN_MAX);
+#else
+       max_files = FOPEN_MAX;
+#endif
        if (max_files == -1) {
@@ -46,2 +50,5 @@
 {
+#ifdef _WIN32
+       return ENOSYS;
+#else
        DIR *dirp;
@@ -125,2 +132,3 @@
        return ret;
+#endif
 }
EOF
patch -ulbf lib/replace/system/filesys.h << EOF
@@ -200,3 +200,6 @@
 #ifdef _WIN32
-#define mkdir(d,m) _mkdir(d)
+#include <windows.h>
+#undef mkdir
+#define mkdir(d,m) CreateDirectory((d), NULL)
+#define HAVE_MKDIR_MODE
 #endif
EOF
# fix missing pipe() in lib/replace/socketpair.c (version >= 1.4.12)
patch -ulbf lib/replace/socketpair.c << EOF
@@ -26,2 +26,6 @@
 #include "system/network.h"
+#ifdef _WIN32
+#include <fcntl.h>
+#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
+#endif

EOF
# fix lib/replace/system/select.h (version >= 1.4.12)
patch -ulbf lib/replace/system/select.h << EOF
@@ -40,3 +40,7 @@

-#ifdef HAVE_POLL
+#ifdef _WIN32
+#include <windows.h>
+typedef unsigned long int nfds_t;
+#define HAVE_POLL
+#elif defined(HAVE_POLL)

EOF
# fix lib/replace/poll.c (version >= 1.4.12)
patch -ulbf lib/replace/poll.c << EOF
@@ -109,2 +109,3 @@

+#ifndef WIN32
                if (FD_ISSET(fds[i].fd, &rfds)) {
@@ -125,2 +126,3 @@
                }
+#endif
                if (FD_ISSET(fds[i].fd, &wfds)) {
EOF
# fix lib/replace/getaddrinfo.c (version >= 1.4.12)
patch -ulbf lib/replace/getaddrinfo.c << EOF
@@ -109,3 +109,3 @@
        return canon_name_from_hostent(
-                       gethostbyaddr(&ip, sizeof(ip), AF_INET),
+                       gethostbyaddr((void*)&ip, sizeof(ip), AF_INET),
                        perr);
@@ -398,3 +398,3 @@
                struct hostent *hp = gethostbyaddr(
-                               &((struct sockaddr_in *)sa)->sin_addr,
+                               (void*)&((struct sockaddr_in *)sa)->sin_addr,
                                sizeof(struct in_addr),
EOF
# fix common/tdb_private.h (version >= 1.4.12)
patch -ulbf common/tdb_private.h << EOF
@@ -273,2 +273,17 @@
 int tdb_mmap(struct tdb_context *tdb);
+#ifndef F_SETLKW
+#define F_SETLKW 0
+#endif
+#ifndef F_SETLK
+#define F_SETLK  1
+#endif
+#ifndef F_RDLCK
+#define F_RDLCK  2
+#endif
+#ifndef F_WRLCK
+#define F_WRLCK  3
+#endif
+#ifndef F_UNLCK
+#define F_UNLCK  4
+#endif
 int tdb_lock(struct tdb_context *tdb, int list, int ltype);
EOF
# fix buildtools/wafsamba/wscript
patch -ulbf buildtools/wafsamba/wscript << EOF
--- buildtools/wafsamba/wscript  2012-11-30 09:51:32 +0100
+++ buildtools/wafsamba/wscript  2013-01-10 23:04:28 +0100
@@ -230,13 +230,2 @@

-        cc.run = Task.compile_fun_noshell('cc', '\${CC} \${CCFLAGS} \${CPPFLAGS} \${_CCINCFLAGS} \${_CCDEFFLAGS} \${CC_SRC_F}\${SRC} \${CC_TGT_F}\${TGT[0].abspath(env)}')[0]
-        try:
-            try:
-                conf.check(features='cc testd', fragment='int main() {return 0;}\\n', ccflags=['-MD'], mandatory=True, msg='Check for -MD')
-            except:
-                pass
-            else:
-                conf.check_tool('gccdeps', tooldir=conf.srcdir + "/buildtools/wafsamba")
-        finally:
-            cc.run = oldmeth
-
     # make the install paths available in environment
@@ -380,6 +369,2 @@

-    # see if we need special largefile flags
-    if not conf.CHECK_LARGEFILE():
-        raise Utils.WafError('Samba requires large file support support, but not available on this platform: sizeof(off_t) < 8')
-
     if 'HAVE_STDDEF_H' in conf.env and 'HAVE_STDLIB_H' in conf.env:
EOF
## fix buildtools/wafsamba/wafsamba.py (version <= 1.3.3)
#patch -ulbf buildtools/wafsamba/wafsamba.py << EOF
#--- buildtools/wafsamba/wafsamba.py  2012-11-30 09:49:18 +0100
#+++ buildtools/wafsamba/wafsamba.py  2013-01-10 23:11:40 +0100
#@@ -65,7 +65,7 @@
#     # to be expressed in terms of build directory paths
#-    mkdir_p(os.path.join(conf.blddir, 'default'))
#-    for p in ['python','shared', 'modules']:
#-        link_target = os.path.join(conf.blddir, 'default/' + p)
#-        if not os.path.lexists(link_target):
#-            os.symlink('../' + p, link_target)
#+    #mkdir_p(os.path.join(conf.blddir, 'default'))
#+    #for p in ['python','shared', 'modules']:
#+    #    link_target = os.path.join(conf.blddir, 'default/' + p)
#+    #    if not os.path.lexists(link_target):
#+    #        os.symlink('../' + p, link_target)
#
#EOF
# fix buildtools/wafsamba/wafsamba.py (version >= 1.3.4)
patch -ulbf buildtools/wafsamba/wafsamba.py << EOF
--- buildtools/wafsamba/wafsamba.py  2014-11-29 11:30:58 +0100
+++ buildtools/wafsamba/wafsamba.py  2014-12-22 19:05:10 +0100
@@ -67,7 +67,7 @@
     # to be expressed in terms of build directory paths
-    mkdir_p(os.path.join(conf.blddir, 'default'))
-    for (source, target) in [('shared', 'shared'), ('modules', 'modules'), ('python', 'python_modules')]:
-        link_target = os.path.join(conf.blddir, 'default/' + target)
-        if not os.path.lexists(link_target):
-            os.symlink('../' + source, link_target)
+    #mkdir_p(os.path.join(conf.blddir, 'default'))
+    #for (source, target) in [('shared', 'shared'), ('modules', 'modules'), ('python', 'python_modules')]:
+    #    link_target = os.path.join(conf.blddir, 'default/' + target)
+    #    if not os.path.lexists(link_target):
+    #        os.symlink('../' + source, link_target)

EOF
# fix buildtools/wafsamba/samba_utils.py (version >= 1.4.6)
patch -ulbf buildtools/wafsamba/samba_utils.py << EOF
@@ -276,10 +276,10 @@
     """Can create symlink by force"""
-    try:
-        os.symlink(src, dst)
-    except OSError as exc:
-        if exc.errno == errno.EEXIST and force:
-            os.remove(dst)
-            os.symlink(src, dst)
-        else:
-            raise
+    #try:
+    #    os.symlink(src, dst)
+    #except OSError as exc:
+    #    if exc.errno == errno.EEXIST and force:
+    #        os.remove(dst)
+    #        os.symlink(src, dst)
+    #    else:
+    #        raise

EOF
# fix buildtools/wafsamba/samba_python.py (version >= 1.4.6)
sed -i.bak -e "s/python3/python/" buildtools/wafsamba/samba_python.py
# fix skip tests in  wscript (version >= 1.4.12)
patch -ulbf wscript << EOF
@@ -23,39 +23,2 @@
 tdb1_unit_tests = [
-    'run-3G-file',
-    'run-bad-tdb-header',
-    'run',
-    'run-check',
-    'run-corrupt',
-    'run-die-during-transaction',
-    'run-endian',
-    'run-incompatible',
-    'run-nested-transactions',
-    'run-nested-traverse',
-    'run-no-lock-during-traverse',
-    'run-oldhash',
-    'run-open-during-transaction',
-    'run-readonly-check',
-    'run-rescue',
-    'run-rescue-find_entry',
-    'run-rdlock-upgrade',
-    'run-rwlock-check',
-    'run-summary',
-    'run-transaction-expand',
-    'run-traverse-in-transaction',
-    'run-wronghash-fail',
-    'run-zero-append',
-    'run-fcntl-deadlock',
-    'run-marklock-deadlock',
-    'run-allrecord-traverse-deadlock',
-    'run-mutex-openflags2',
-    'run-mutex-trylock',
-    'run-mutex-allrecord-bench',
-    'run-mutex-allrecord-trylock',
-    'run-mutex-allrecord-block',
-    'run-mutex-transaction1',
-    'run-mutex-die',
-    'run-mutex1',
-    'run-circular-chain',
-    'run-circular-freelist',
-    'run-traverse-chain',
 ]
EOF
# fix lib/replace/wscript
patch -ulbf lib/replace/wscript << EOF
--- lib/replace/wscript  2012-11-30 09:51:32 +0100
+++ lib/replace/wscript  2013-01-10 23:27:52 +0100
@@ -445,4 +445,5 @@
                     define='HAVE_SECURE_MKSTEMP',
+                    lib='plibc',
                     execute=True,
-                    mandatory=True) # lets see if we get a mandatory failure for this one
+                    mandatory=False) # lets see if we get a mandatory failure for this one

EOF
sed -i.bak -e "s/os\.symlink/#&/" buildtools/wafsamba/samba_utils.py buildtools/wafsamba/samba_install.py
wl-showstatus configure &&
 #PATH=$PYDIR:$PATH ./configure configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 PATH=$PYDIR:$PATH PYTHONHASHSEED=1 CFLAGS="-I$(cygpath -m $MINGWPREFIX/include/mman-win32) -I$(cygpath -m $MINGWPREFIX/include/libdl-win32)" LINKFLAGS="-Wl,--as-needed -lmman -ldl" $PYDIR/python.exe buildtools/bin/waf configure --prefix=$INSTALLPREFIX --bundled-libraries=NONE &&
 #$PYDIR/python.exe -v buildtools/bin/waf configure --prefix=$INSTALLPREFIX --bundled-libraries=NONE &&
 wl-showstatus build-install &&
 #echo "#include <plibc.h>" >> config.h &&
 #PATH=$PYDIR:$PATH make -j1 all install &&
 #PATH=$PYDIR:$PATH make -j1 all install WAF_BINARY="$PYDIR/python.exe $(which waf)" &&
 PATH=$PYDIR:$PATH make -j1 all install WAF_BINARY="$PYDIR/python.exe buildtools/bin/waf" &&
    echo OK
 #for F in common/*.c; do
 # gcc -c -o $F.o $F -Ilib/replace
 #done &&
 #   echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



