export NAME="TiCC utils"
export STATUS=
export URL=https://github.com/LanguageMachines/ticcutils
export BASENAME=ticcutils
export DESCRIPTION="This module contains useful functions for general use in the TiCC software stack and beyond."
export CATEGORY=development
export TYPE=library
#export VERSION=0.27
#export VERSIONDATE=20211208
#export VERSION=0.28
#export VERSIONDATE=20211215
#export VERSION=0.29
#export VERSIONDATE=20220722
#export VERSION=0.30
#export VERSIONDATE=20230102
#export VERSION=0.31
#export VERSIONDATE=20230123
#export VERSION=0.32
#export VERSIONDATE=20230220
#export VERSION=0.33.1
#export VERSIONDATE=20230921
#export VERSION=0.34
#export VERSIONDATE=20240201
#export VERSION=0.35
#export VERSIONDATE=20240912
export VERSION=0.36
export VERSIONDATE=20241216
wl-showstatus --package-version
export DEPENDENCIES=zlib,libbz2,libxml2,libtar,icu
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/LanguageMachines/ticcutils/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/LanguageMachines/ticcutils/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing realpath in src/StringOps.cxx (version >= 0.33.1)
patch -ulbf src/StringOps.cxx << EOF
@@ -35,2 +35,8 @@
 #include "ticcutils/Version.h"
+#ifdef __MINGW32__
+static char* realpath(const char* relpath, char* abspath)
+{
+  return _fullpath(abspath,relpath,_MAX_PATH);
+}
+#endif

EOF
# fix missing timeradd in src/Timer.cxx (version >= 0.33.1)
patch -ulbf src/Timer.cxx << EOF
@@ -33,2 +33,14 @@
 #include <cstdlib>
+#ifdef _WIN32
+#define timeradd(a, b, result)                          \\
+  do {                                                  \\
+    (result)->tv_sec = (a)->tv_sec + (b)->tv_sec;       \\
+    (result)->tv_usec = (a)->tv_usec + (b)->tv_usec;    \\
+    if ((result)->tv_usec >= 1000000)                   \\
+      {                                                 \\
+        ++(result)->tv_sec;                             \\
+        (result)->tv_usec -= 1000000;                   \\
+      }                                                 \\
+  } while (0)
+#endif

EOF
# fix conversion from filesystem::path to std::string in src/FileUtils.cxx (version >= 0.36)
patch -ulbf src/FileUtils.cxx << EOF
@@ -92,3 +92,3 @@
 	 && ec.value() != 0 ){
-      throw runtime_error( "create_dir(" + string(p) + ") failed: "
+      throw runtime_error( "create_dir(" + p.string() + ") failed: "
 			   + ec.message() + " (" + to_string( ec.value())
@@ -163,4 +163,4 @@
 	if ( ext.empty() ||
-	     TiCC::match_back( p, ext ) ){
-	  result.push_back( p );
+	     TiCC::match_back( p.string(), ext ) ){
+	  result.push_back( p.string() );
 	}
@@ -172,4 +172,4 @@
 	if ( ext.empty() ||
-	     TiCC::match_back( p, ext ) ){
-	  result.push_back( p );
+	     TiCC::match_back( p.string(), ext ) ){
+	  result.push_back( p.string() );
 	}
@@ -221,3 +221,3 @@
       for ( const auto& entry : filesystem::recursive_directory_iterator(dir_path) ){
-	string p = entry.path();
+	string p = entry.path().string();
 	if ( regex_search( p, match ) ){
@@ -229,3 +229,3 @@
       for ( const auto& entry : filesystem::directory_iterator(dir_path) ){
-	string p = entry.path();
+	string p = entry.path().string();
 	if ( regex_search( p, match ) ){
EOF
# fix src/SocketBasics.cxx (version >= 0.36)
patch -ulbf src/SocketBasics.cxx << EOF
@@ -26,2 +26,6 @@
 
+#ifdef _WIN32
+#include <winsock2.h>
+#include <ws2tcpip.h>
+#endif
 #include "ticcutils/SocketBasics.h"
@@ -33,2 +37,3 @@
 #include <cerrno>
+#ifndef _WIN32
 #include <fcntl.h>
@@ -38,2 +43,3 @@
 #include <sys/socket.h>
+#endif
 #include <unistd.h>
@@ -276,2 +282,12 @@
     */
+#ifdef _WIN32
+    unsigned long flags = 0;
+    if ( ioctlsocket(sock, FIONBIO, &flags) != 0) {
+      mess = "ioctlsocket failed";
+#ifdef DEBUG
+    cerr << "ioctlsocket: " << mess << endl;
+#endif
+      return false;
+    }
+#else
     int opts = fcntl( sock, F_GETFL );
@@ -300,2 +316,3 @@
     }
+#endif
     nonBlocking = false;
@@ -312,2 +329,12 @@
     */
+#ifdef _WIN32
+    unsigned long flags = 1;
+    if ( ioctlsocket(sock, FIONBIO, &flags) != 0) {
+      mess = "ioctlsocket failed";
+#ifdef DEBUG
+    cerr << "ioctlsocket: " << mess << endl;
+#endif
+      return false;
+    }
+#else
     int opts = fcntl( sock, F_GETFL );
@@ -336,2 +363,3 @@
     }
+#endif
     nonBlocking = true;
@@ -510,3 +538,3 @@
     if (host != NULL) {
-      return static_cast<struct in_addr *>(*host->h_addr_list);
+      return reinterpret_cast<struct in_addr *>(*host->h_addr_list);
     }
@@ -535,3 +563,3 @@
     struct sockaddr_in address;
-    memset( static_cast<char *>(&address), 0, sizeof(address));
+    memset( reinterpret_cast<char *>(&address), 0, sizeof(address));
     address.sin_family = AF_INET;
@@ -546,3 +574,3 @@
       setsockopt( sock, SOL_SOCKET, SO_REUSEADDR,
-		  static_cast<void *>(&val), sizeof(val) );
+		  reinterpret_cast<void *>(&val), sizeof(val) );
       val = 1;
@@ -551,6 +579,6 @@
       int connected = ::connect( sock,
-				 static_cast<struct sockaddr *>(&address),
+				 reinterpret_cast<struct sockaddr *>(&address),
 				 sizeof(address));
       if (connected < 0) {
-	mess = string( "ClientSocket connect: ") + host + ":" + portNum +
+	mess = string( "ClientSocket connect: ") + hostString + ":" + portString +
 	  " failed (" + strerror( errno ) + ")";
@@ -581,3 +609,3 @@
       struct sockaddr_in serv_addr;
-      memset( static_cast<char *>(&serv_addr), 0, sizeof(serv_addr));
+      memset( reinterpret_cast<char *>(&serv_addr), 0, sizeof(serv_addr));
       serv_addr.sin_family = AF_INET;
@@ -587,3 +615,3 @@
       if ( bind( sock,
-		 static_cast<struct sockaddr *>(&serv_addr),
+		 reinterpret_cast<struct sockaddr *>(&serv_addr),
 		 sizeof(serv_addr) ) < 0 ){
@@ -596,3 +624,3 @@
 
-  bool ServerSocket::accept( ServerSocket& newSocket ){
+  bool ServerSocket::accept( ClientSocket& newSocket ){
     /// accept a connection on a socket
@@ -606,3 +634,3 @@
     int newsock = ::accept( sock,
-			    static_cast<struct sockaddr *>(&cli_addr),
+			    reinterpret_cast<struct sockaddr *>(&cli_addr),
 			    &clilen );
@@ -622,6 +650,6 @@
       if ( getpeername( newsock,
-			static_cast<struct sockaddr *>(&rem),
+			reinterpret_cast<struct sockaddr *>(&rem),
 			&remlen ) >= 0 ){
 	struct hostent *host
-	  = gethostbyaddr( static_cast<char *>(&rem.sin_addr),
+	  = gethostbyaddr( reinterpret_cast<char *>(&rem.sin_addr),
 			   sizeof rem.sin_addr,
EOF
wl-showstatus configure &&
 #mkdir -p m4 &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CXXFLAGS="-fpermissive -D_POSIX_THREAD_SAFE_FUNCTIONS" &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



