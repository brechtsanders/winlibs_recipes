export NAME="Slope"
export STATUS=
#export URL=https://github.com/elvismt/slope
export URL=https://github.com/bytebrew/slope
export BASENAME=slope
export DESCRIPTION="Slope is a free (LGPL) C library for creating charts using the cairo 2D drawing library. As long as Gtk+ uses cairo to render it's widgets, embedding slope's charts in gtk is straitforward."
export CATEGORY=graphics
export TYPE=library
export VERSION=master
export VERSIONDATE=20160718
####src/slope/widget.h:27:25: fatal error: glib-object.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=cairo
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/elvismt/slope/releases"
export DOWNLOADURL="https://github.com/bytebrew/slope/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/elvismt/slope/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
#wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DDEP_INCLUDE_DIRS:PATH="$(pkg-config.exe --cflags-only-I glib-2.0)" . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DDEP_INCLUDE_DIRS:PATH="$(pkg-config.exe --cflags-only-I glib-2.0)" -DCMAKE_SHARED_LINKER_FLAGS:STRING="$(pkg-config.exe --libs gtk+-3.0 gobject-2.0)" -S. -Bbuild_win &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lgtk-3 -lglib-2.0/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



