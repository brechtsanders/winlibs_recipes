export NAME="SSLH"
export STATUS=
export URL=https://www.rutschle.net/tech/sslh/README.html
#export URL=https://github.com/yrutschle/sslh
export BASENAME=sslh
export DESCRIPTION="Applicative Protocol Multiplexer (e.g. share SSH and HTTPS on the same port)"
export CATEGORY=communication,security
export TYPE=application
#export VERSION=1.20
#export VERSIONDATE=20190111
#export VERSION=1.21
#export VERSIONDATE=20200712
#export VERSION=1.21b
#export VERSIONDATE=20200720
#export VERSION=1.21c
#export VERSIONDATE=20200731
#export VERSION=1.22
#export VERSIONDATE=20210818
#export VERSION=1.22b
#export VERSIONDATE=20210825
#export VERSION=1.22c
#export VERSIONDATE=20210906
#export VERSION=1.23.0
#export VERSIONDATE=20240103
#export VERSION=1.23.1
#export VERSIONDATE=20240112
#export VERSION=2.0.0
#export VERSIONDATE=20230901
#export VERSION=2.0.1
#export VERSIONDATE=20230924
#export VERSION=2.1.0
#export VERSIONDATE=20240314
#export VERSION=2.1.1
#export VERSIONDATE=20240325
#export VERSION=2.1.2
#export VERSIONDATE=20240517
#export VERSION=2.1.3
#export VERSIONDATE=20241208
#export VERSION=2.1.4
#export VERSIONDATE=20241211
#export VERSION=2.2.1
#export VERSIONDATE=20250406
#export VERSION=2.2.3
#export VERSIONDATE=20250504
#export VERSION=2.2.4
#export VERSIONDATE=20250529
export VERSION=2.3.0
export VERSIONDATE=20250911
wl-showstatus --package-version
export DEPENDENCIES=sys_wait_h,pcre,libconfig,tcpwrappers
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/yrutschle/sslh/releases"
export DOWNLOADURL="https://github.com/yrutschle/sslh/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/yrutschle/sslh/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/yrutschle/sslh/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix/sys winfix/netinet winfix/arpa
echo "#include <winsock2.h>" > winfix/sys/socket.h
touch winfix/netinet/in.h winfix/arpa/inet.h winfix/netdb.h
cat > winfix/syslog.h << EOF
//#ifndef __DUMMY_SYSLOG_H_INCLUDED
//#define __DUMMY_SYSLOG_H_INCLUDED
//#define LOG_ERR 3
//#define LOG_WARNING 4
//#define LOG_NOTICE 5
//#define LOG_INFO 6
//#define LOG_DEBUG 7
//#define LOG_PRIMASK 0x07
//#define LOG_DAEMON (3<<3)
//#define LOG_AUTHPRIV (10<<3)
//#define LOG_PID 0x01
//#define SEVERITY 1
//static void openlog (const char *ident, int option, ...) {}
//static void syslog (int priority, const char *format, ...) {}
//static void closelog (void) {}
//#endif
EOF
cat > winfix/pwd.h << EOF
//struct passwd {
// int pw_uid;
//};
//#define setuid(uid) 0
EOF
cat > winfix/grp.h << EOF
//struct group {
// int gr_gid;
//};
//#define setgid(gid) -1
EOF
#wl-showstatus build &&
# make PREFIX=$INSTALLPREFIX CC="${CC:-gcc} -I$MINGWPREFIX/win32ports/include -I$(pwd)/winfix" ENABLE_REGEX=1 USELIBCONFIG=1 USELIBPCRE=1 USELIBWRAP= USELIBCAP=1 USESYSTEMD= COV_TEST= &&
#    echo OK
wl-showstatus configure &&
 #wl-showstatus preconfigure &&
 #mkdir -p m4 &&
 ##libtoolize -f -i -c &&
 ##intltoolize -f -c &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 ## allow building shared libraries when using clang
 #if ${CC:-gcc} --version|grep -q "^clang" && ! ${CC:-gcc} --help|grep auto-import; then
 # sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" configure
 # #sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" $(find -name configure)
 #fi &&
 ## fix confusion between MSVC and clang
 #if ${CC:-gcc} --version|grep -q "^clang"; then
 # sed -i.bak2 -e "s/\b\(cl\)\(\*\)/\1.exe\2/g; s/\(ld_shlibs\)=no/\1yes/" configure
 #fi &&
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CC=${CC:-gcc} CFLAGS="-I$MINGWPREFIX/win32ports/include -I$PWD/winfix" &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 wl-showstatus build &&
 make PREFIX=$INSTALLPREFIX CC="${CC:-gcc} -I$MINGWPREFIX/win32ports/include -I$PWD/winfix" ENABLE_REGEX=1 USELIBCONFIG=1 USELIBPCRE=1 USELIBWRAP= USELIBCAP=1 USESYSTEMD= COV_TEST= &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



