export NAME="Basic Development Environment (BDE)"
export STATUS=
export URL=http://www.bloomberglabs.com/basic-development-environment/
export BASENAME=bde
export DESCRIPTION="The Basic Development Environment (BDE) is a set of C++ libraries and supporting tools intended to form the foundation of large-scale commercial applications on a variety of popular platforms."
export CATEGORY=development
export TYPE=library
#export VERSION=2.22.1.2
#export VERSIONDATE=20150328
#export VERSION=3.0.0.0
#export VERSIONDATE=20151015
####BDE waf customizations can not be found under tools/waf/bde in the path of waf.
#export VERSION=3.35.0.0
#export VERSIONDATE=20190829
#export VERSION=3.36.0.0
#export VERSIONDATE=20190829
#export VERSION=3.37.1.0
#export VERSIONDATE=20190829
#export VERSION=3.38.0.1
#export VERSIONDATE=20190911
#export VERSION=3.39.0.0
#export VERSIONDATE=20190924
#export VERSION=3.53.0.0
#export VERSIONDATE=20200430
#export VERSION=3.54.0.0
#export VERSIONDATE=20200502
#export VERSION=3.54.0.1
#export VERSIONDATE=20200507
#export VERSION=3.55.0.0
#export VERSIONDATE=20200516
#export VERSION=3.56.0.0
#export VERSIONDATE=20200608
#export VERSION=3.57.0.0
#export VERSIONDATE=20200620
#export VERSION=3.58.0.0
#export VERSIONDATE=20200711
#export VERSION=3.58.0.1
#export VERSIONDATE=20200713
#export VERSION=3.59.0.1
#export VERSIONDATE=20200726
#export VERSION=3.59.0.1
#export VERSIONDATE=20200726
#export VERSION=3.60.0.0
#export VERSIONDATE=20200808
#export VERSION=3.61.0.0
#export VERSIONDATE=20200822
#export VERSION=3.112.0.0
#export VERSIONDATE=20230104
#export VERSION=3.115.1.0
#export VERSIONDATE=20230331
#export VERSION=3.117.0.0
#export VERSIONDATE=20230425
#export VERSION=3.123.0.0
#export VERSIONDATE=20230913
#export VERSION=3.124.0.0
#export VERSIONDATE=20230919
#export VERSION=4.8.0.0
#export VERSIONDATE=20240430
#export VERSION=4.14.0.0
#export VERSIONDATE=20240928
#export VERSION=4.15.1.0
#export VERSIONDATE=20241101
#export VERSION=4.16.1.0
#export VERSIONDATE=20241101
#export VERSION=4.17.0.1
#export VERSIONDATE=20250305
#export VERSION=4.18.0.0
#export VERSIONDATE=20241218
#export VERSION=4.18.1.0
#export VERSIONDATE=20250306
#export VERSION=4.19.1.0
#export VERSIONDATE=20250305
#export VERSION=4.18.2.0
#export VERSIONDATE=20250305
#export VERSION=4.20.2.0
#export VERSIONDATE=20250305
#export VERSION=4.21.0.2
#export VERSIONDATE=20250305
#export VERSION=4.22.0.0
#export VERSIONDATE=20250315
#export VERSION=4.23.0.0
#export VERSIONDATE=20250404
#export VERSION=4.25.0.0
#export VERSIONDATE=20250519
export VERSION=4.27.0.0
export VERSIONDATE=20250712
####CMake Error at CMakeLists.txt:20 (include): include could not find load file: bde_workspace
wl-showstatus --package-version
export DEPENDENCIES=bde-tools
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=waf
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
#export DOWNLOADURL="https://github.com/bloomberg/bde/releases BDE_"
export DOWNLOADURL="https://github.com/bloomberg/bde/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/bloomberg/bde/archive/BDE_$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/bloomberg/bde/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/bloomberg/bde/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/BDE_$VERSION.tar.gz
#cd bde-BDE_$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus configure &&
 WAFDIR=$MINGWPREFIX/share/waf $PYDIR/python.exe $(which waf) configure --prefix=$INSTALLPREFIX --destdir=$INSTALLPREFIX &&
    echo OK

wl-showstatus configure &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA

#grep -wi add_library $(find -name CMakeLists.txt -or -name '*.cmake')
#mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/libexec/bde-tools/cmake -DPython3_EXECUTABLE:PATH=$PYDIR/python.exe -S. -Bbuild_test -LH && echo OK; rm -rf build_test


#export BUILDDEPENDENCIES=cmake,ninja
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 #wl-showstatus build &&
 #cmake.exe --build build_static &&
 #ninja -Cbuild_static &&
 #wl-showstatus build &&
 #cmake.exe --build build_shared &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 #cmake.exe --install build_static --strip &&
 #cmake.exe --build build_static --target "install/strip" &&
 #cmake.exe --build build_static --target "library/install/strip" &&
 ninja -Cbuild_static install/strip &&
 #ninja -Cbuild_static library/install/strip &&
 wl-showstatus build-install &&
 #cmake.exe --install build_shared --strip &&
 #cmake.exe --build build_shared --target "install/strip" &&
 ninja -Cbuild_shared install/strip &&
    echo OK

#    cmake.exe . -LH; rm -f CMakeCache.txt
#wl-showstatus configure &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf bde-BDE_$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



