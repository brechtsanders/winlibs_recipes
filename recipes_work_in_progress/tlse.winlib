export NAME="TLSe"
export STATUS=
export URL=https://github.com/eduardsui/tlse
export BASENAME=tlse
export DESCRIPTION="Single C file TLS 1.2 (also 1.1 and 1.0) implementation, using libtomcrypt as crypto library. It also supports DTLS 1.2 and 1.0, over SCTP."
export CATEGORY=security
export TYPE=library
#export VERSION=0.9
#export VERSIONDATE=20160626
#export VERSION=1.0.2
#export VERSIONDATE=20160701
#export VERSION=1.0.4
#export VERSIONDATE=20160810
#export VERSION=1.0.6
#export VERSIONDATE=20170104
export VERSION=1.0.7
export VERSIONDATE=20180126
wl-showstatus --package-version
export DEPENDANCIES=libtomcrypt
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE="Public Domain/BSD/MIT"
export DOWNLOADURL="https://github.com/eduardsui/tlse/releases "
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/eduardsui/tlse/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/eduardsui/tlse/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix redefinition of strcasecmp in tlse.c (version >= 1.0.7)
patch -ulbf tlse.c << EOF
@@ -36,3 +36,5 @@
 #include <wincrypt.h>
+#ifndef strcasecmp
 #define strcasecmp stricmp
+#endif
 #else
EOF
wl-showstatus build &&
gcc -c libtomcrypt.c -o libtomcrypt.o $(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "-DLTC_NO_ASM=1"; fi) &&
gcc -c tlse.c -o tlse.o &&
    echo OK
    
gcc examples/tlshelloworld.c -ltomcrypt -ltommath -lws2_32 -DLTM_DESC
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE* COPYRIGHT* configure* CMakeLists.txt Makefile
wl-showstatus configure &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#wl-showstatus configure &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



