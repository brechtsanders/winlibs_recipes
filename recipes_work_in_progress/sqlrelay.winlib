export NAME="SQL Relay"
export STATUS=
export URL=http://sqlrelay.sourceforge.net/
export BASENAME=sqlrelay
export DESCRIPTION="With SQL Relay, you can speed up and enhance the scalability of database-driven web-based applications, access databases from unsupported platforms, throttle database access, distribute load over clustered or replicated databases, route queries and migrate applications from one database to another."
export CATEGORY=database
export TYPE=library
#export VERSION=0.65.0
#export VERSIONDATE=20160507
#export VERSION=0.66.0
#export VERSIONDATE=20160922
#export VERSION=1.0.1
#export VERSIONDATE=20170314
####src/api/c++/sqlrconnection.cpp:125:1: error: 'sqlrconnection::sqlrconnection(const char*, uint16_t, const char*, const char*, const char*, int32_t, int32_t, bool)' redeclared without dllimport attribute: previous dllimport ignored [-Werror=attributes]
#export VERSION=1.1.0
#export VERSIONDATE=20170602
#export VERSION=1.2.0
#export VERSIONDATE=20171108
#export VERSION=1.3.0
#export VERSIONDATE=20180521
####.libs/sqlrservercontroller.o:sqlrservercontroller.cpp:(.text+0x8c2d): undefined reference to `sqlrserverconnection::getErrorLength()'
#export VERSION=1.4.0
#export VERSIONDATE=20180912
#export VERSION=1.5.0
#export VERSIONDATE=20190329
#export VERSION=1.5.1
#export VERSIONDATE=20190418
export VERSION=1.5.2
export VERSIONDATE=20190424
#export VERSION=1.6.0
#export VERSIONDATE=20190813
#export VERSION=1.7.0
#export VERSIONDATE=20200107
#export VERSION=1.8.0
#export VERSIONDATE=20200826
####pseudo-reloc.c:(.text+0x225): undefined reference to `___chkstk_ms'
#export VERSION=1.9.0
#export VERSIONDATE=20210428
#export VERSION=1.9.1
#export VERSIONDATE=20210616
#export VERSION=1.9.2
#export VERSIONDATE=20210928
#export VERSION=1.9.3
#export VERSIONDATE=20220806
####libtool:   error: 'libsqlrclient.la' is not a valid libtool archive
wl-showstatus --package-version
export DEPENDENCIES=rudiments
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://sqlrelay.sourceforge.net/download2.html"
export DOWNLOADURL="http://sqlrelay.sourceforge.net/download.html"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://sourceforge.net/projects/sqlrelay/files/sqlrelay/$VERSION/$BASENAME-$VERSION.tar.gz/download
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/sqlrelay/sqlrelay/$VERSION/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/sqlrelay/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
  ./configure --help
  head COPYING* LICENSE*
  ls -l COPYING* LICENSE* COPYRIGHT* configure* CMakeLists.txt
# fix missing PREFIX in src/util/sqlrpaths.cpp (version >= 1.0.1)
mv src/util/sqlrpaths.cpp src/util/sqlrpaths.cpp.bak
cat > src/util/sqlrpaths.cpp << EOF
#undef PREFIX
#define PREFIX "..\\\\"
EOF
cat src/util/sqlrpaths.cpp.bak >> src/util/sqlrpaths.cpp
# fix src/server/sqlrserverconnection.cpp (version >= 1.0.1)
mv src/server/sqlrserverconnection.cpp src/server/sqlrserverconnection.cpp
echo "#include <winsock2.h>" > src/server/sqlrserverconnection.cpp
cat src/server/sqlrserverconnection.cpp.bak >> src/server/sqlrserverconnection.cpp
# fix src/server/sqlr-start.cpp (version >= 1.0.1)
mv src/server/sqlr-start.cpp src/server/sqlr-start.cpp.bak &&
sed -e "s/(long)/(intptr_t)/g" src/server/sqlr-start.cpp.bak > src/server/sqlr-start.cpp
# fix missing getHashLength in src/server/sqlrservercontroller.cpp (version >= 1.5.2)
sed -i.bak -e "s/getHashLength/getHashSize/" src/server/sqlrservercontroller.cpp
# fix building DLLs
mv config.mk.in config.mk.in.bak &&
sed -e "s/CPPCPPFLAGS\s*=\s*/&-DSQLRCLIENT_EXPORTS /; s/CCPPFLAGS\s*=\s*/&-DSQLRCLIENTWRAPPER_EXPORTS /; s/ODBCDRIVERCPPFLAGS\s*=\s*/&-DSQLRODBC_EXPORTS /; s/UTILCPPFLAGS\s*=\s*/&-DSQLRUTIL_EXPORTS -DPREFIX=\\\"\"@prefix@\\\"\" /; s/SERVERCPPFLAGS\s*=\s*/&-DSQLRSERVER_EXPORTS /; s/PLUGINCPPFLAGS\s*=\s*/&-DSQLRSERVER_EXPORTS -DSQLRUTIL_EXPORTS /; s/CONNECTIONCPPFLAGS\s*=\s*/&-DSQLRSERVER_EXPORTS /" config.mk.in.bak > config.mk.in &&
mv configure configure.bak &&
sed -e "s/-Werror//g" configure.bak > configure
wl-showstatus configure &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-rudiments-prefix=$MINGWPREFIX &&
 #--with-mysql-prefix=$MINGWPREFIX
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --disable-shared --with-postgresql-prefix=$MINGWPREFIX --with-sqlite-prefix=$MINGWPREFIX --with-freetds-prefix=$MINGWPREFIX --with-mdbtools-prefix=$MINGWPREFIX --with-rudiments-prefix=$MINGWPREFIX --with-libgdbm-prefix=$MINGWPREFIX --with-glib-prefix=$MINGWPREFIX --with-pthread-prefix=$MINGWPREFIX CXXFLAGS="-I$(pwd)/src/api/c++ -I$(pwd)/src/api/c" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-postgresql-prefix=$MINGWPREFIX --with-sqlite-prefix=$MINGWPREFIX --with-freetds-prefix=$MINGWPREFIX --with-mdbtools-prefix=$MINGWPREFIX --with-rudiments-prefix=$MINGWPREFIX --with-libgdbm-prefix=$MINGWPREFIX --with-glib-prefix=$MINGWPREFIX --with-pthread-prefix=$MINGWPREFIX CXXFLAGS="-fpermissive -I$(pwd)/src/api/c++ -I$(pwd)/src/api/c -I$(pwd)/src/util -I$(pwd)/src/server" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-system-libtool --with-postgresql-prefix=$MINGWPREFIX --with-sqlite-prefix=$MINGWPREFIX --with-freetds-prefix=$MINGWPREFIX --with-mdbtools-prefix=$MINGWPREFIX --with-rudiments-prefix=$MINGWPREFIX --with-libgdbm-prefix=$MINGWPREFIX --with-glib-prefix=$MINGWPREFIX --with-pthread-prefix=$MINGWPREFIX CXXFLAGS="-I$(pwd)/src/api/c++ -I$(pwd)/src/api/c -I$(pwd)/src/util -I$(pwd)/src/server" &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 sed -i.bak -e "s? [^ -][^ ]*/lib ? ?" config.mk &&
 wl-showstatus build &&
 #make -Csrc/api/c CC="${CC:-gcc} -DSQLRCLIENT_EXPORTS" &&
 #make -Csrc/api/c++ CXX="${CXX:-g++} -DSQLRCLIENT_EXPORTS" &&
 make &&
 wl-showstatus build-install &&
 ( make install-strip || make install ) &&
    echo OK && ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



