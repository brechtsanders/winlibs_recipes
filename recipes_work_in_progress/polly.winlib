export NAME="polly"
export STATUS=
export URL=https://polly.llvm.org/
export BASENAME=polly
export DESCRIPTION="The polly project implements a suite of cache-locality optimizations as well as auto-parallelism and vectorization using a polyhedral model."
export CATEGORY=development
export TYPE=application
#export VERSION=3.4
#export VERSIONDATE=20140109
#export VERSION=3.5.0
#export VERSIONDATE=20140904
#export VERSION=3.5.1
#export VERSIONDATE=20150113
#export VERSION=3.5.2
#export VERSIONDATE=20150403
#export VERSION=3.6.0
#export VERSIONDATE=20150228
#export VERSION=3.6.1
#export VERSIONDATE=20150525
####Unknown CMake command "get_system_libs".
#export VERSION=3.6.2
#export VERSIONDATE=20150714
#export VERSION=3.7.0
#export VERSIONDATE=20150902
#export VERSION=3.7.1
#export VERSIONDATE=20160405
#export VERSION=3.8.0
#export VERSIONDATE=20160405
#export VERSION=3.8.1
#export VERSIONDATE=20160711
#export VERSION=3.9.0
#export VERSIONDATE=20160905
#export VERSION=3.9.1
#export VERSIONDATE=20161218
#export VERSION=4.0.0
#export VERSIONDATE=20170314
#export VERSION=4.0.1
#export VERSIONDATE=20170624
####CMake Error: Cannot determine link language for target "Polly".
####CMake Error: CMake can not determine linker language for target: Polly
#export VERSION=5.0.0
#export VERSIONDATE=20170909
#export VERSION=5.0.1
#export VERSIONDATE=20171220
#export VERSION=5.0.2
#export VERSIONDATE=20180703
#export VERSION=6.0.0
#export VERSIONDATE=20180318
#export VERSION=6.0.1
#export VERSIONDATE=20180703
#export VERSION=7.0.0
#export VERSIONDATE=20181029
#export VERSION=7.0.1
#export VERSIONDATE=20181230
#export VERSION=7.1.0
#export VERSIONDATE=20190502
#export VERSION=8.0.0
#export VERSIONDATE=20190401
#export VERSION=8.0.1
#export VERSIONDATE=20190818
#export DEPENDANCIES=llvm,isl,gmp
#export OPTIONALDEPENDANCIES=cloog
#export BUILDDEPENDANCIES=cmake
####lib/Analysis/DependenceInfo.cpp:69:16: error: 'clEnumValEnd' was not declared in this scope
####CMake Error at CMakeLists.txt:113 (if): if given arguments: "NVPTX" "IN_LIST" "LLVM_TARGETS_TO_BUILD" Unknown arguments specified
####include/polly/Support/SCEVAffinator.h:20:10: fatal error: isl/isl-noexceptions.h: No such file or directory
#export VERSION=9.0.0
#export VERSIONDATE=20190930
#export VERSION=9.0.1
#export VERSIONDATE=20200224
#export VERSION=10.0.0
#export VERSIONDATE=20200326
export VERSION=10.0.1
export VERSIONDATE=20200902
####lib/Analysis/DependenceInfo.cpp:(.text+0x23): undefined reference to `llvm::AnalysisUsage::addRequiredTransitiveID(char&)'
#export VERSION=12.0.0
#export VERSIONDATE=20210419
wl-showstatus --package-version
export DEPENDANCIES=llvm,isl,gmp
export OPTIONALDEPENDANCIES=cloog
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE.TXT
export LICENSETYPE=
#export DOWNLOADURL="http://llvm.org/releases/download.html polly- .src.tar.gz"
#export DOWNLOADURL="http://llvm.org/releases/download.html polly- .src.tar.xz"
export DOWNLOADURL="https://github.com/llvm/llvm-project/releases polly- .src.tar.xz"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://llvm.org/releases/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\.*$/\1/")/$BASENAME-$VERSION.src.tar.gz
#export DOWNLOADSOURCEURL=http://llvm.org/releases/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\.*$/\1/")/$BASENAME-$VERSION.src.tar.xz
#export DOWNLOADSOURCEURL=http://llvm.org/releases/$VERSION/$BASENAME-$VERSION.src.tar.xz
export DOWNLOADSOURCEURL=https://github.com/llvm/llvm-project/releases/download/llvmorg-$VERSION/$BASENAME-$VERSION.src.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfzh $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.src.tar.gz
tar xfJh $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.src.tar.xz
#cd $BASENAME-$VERSION
cd $BASENAME-$VERSION.src
# fix lib/Analysis/ScopInfo.cpp
sed -i.bak -e "s/utostr_32/utostr/" lib/Analysis/ScopInfo.cpp
# fix CMakeLists.txt
mv CMakeLists.txt CMakeLists.txt.bak
cat > CMakeLists.txt << EOF
find_package(LLVM REQUIRED CONFIG)
list(APPEND CMAKE_MODULE_PATH "\${LLVM_CMAKE_DIR}")
set(LLVM_RUNTIME_OUTPUT_INTDIR \${CMAKE_BINARY_DIR}/\${CMAKE_CFG_INTDIR}/bin)
set(LLVM_LIBRARY_OUTPUT_INTDIR \${CMAKE_BINARY_DIR}/\${CMAKE_CFG_INTDIR}/lib)
set(LLVM_LIBRARY_DIR \${LLVM_CMAKE_DIR}/lib)
include(AddLLVM)
include(TableGen)
ENABLE_LANGUAGE(C)
ENABLE_LANGUAGE(CXX)
EOF
cat CMakeLists.txt.bak >> CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLLVM_ENABLE_CXX11:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-std=c++11" -DPYTHON_EXECUTABLE:PATH=$PYDIR/python.exe -DLLD_PATH_TO_LLVM_BUILD:PATH=$MINGWPREFIX -DLLVM_MAIN_SRC_DIR:PATH=$MINGWPREFIX -DCMAKE_FIND_LIBRARY_PREFIXES:STRING=lib -DCMAKE_FIND_LIBRARY_SUFFIXES:STRING=.dll -DISL_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DISL_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libisl.dll.a -DGMP_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DGMP_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libgmp.dll.a -DCLOOG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DCLOOG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libcloog.dll.a -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLLVM_DIR:PATH=$MINGWPREFIX/lib/cmake/llvm -DLLVM_ENABLE_CXX11:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-std=c++11" -DPYTHON_EXECUTABLE:PATH=$PYDIR/python.exe -DLLD_PATH_TO_LLVM_BUILD:PATH=$MINGWPREFIX -DLLVM_MAIN_SRC_DIR:PATH=$MINGWPREFIX -DCMAKE_FIND_LIBRARY_PREFIXES:STRING=lib -DCMAKE_FIND_LIBRARY_SUFFIXES:STRING=.dll -DISL_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DISL_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libisl.dll.a -DGMP_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DGMP_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libgmp.dll.a -DCLOOG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DCLOOG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libcloog.dll.a -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_CREATE_STATIC_LIBRARY:BOOL=OFF -DLLVM_ENABLE_CXX11:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-std=c++11" -DPYTHON_EXECUTABLE:PATH=$PYDIR/python.exe -DLLD_PATH_TO_LLVM_BUILD:PATH=$MINGWPREFIX -DLLVM_MAIN_SRC_DIR:PATH=$MINGWPREFIX -DCMAKE_FIND_LIBRARY_PREFIXES:STRING=lib -DCMAKE_FIND_LIBRARY_SUFFIXES:STRING=.dll -DISL_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DISL_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libisl.dll.a -DGMP_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DGMP_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libgmp.dll.a -DCLOOG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DCLOOG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libcloog.dll.a -S. -Bbuild_win &&
 #PKG_CONFIG= cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLLVM_MAIN_SRC_DIR:PATH=$MINGWPREFIX -DPOLLY_ENABLE_GPGPU_CODEGEN:BOOL=OFF -DPOLLY_BUNDLED_ISL:BOOL=ON -S. -Bbuild_win &&
 PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLLVM_DIR:PATH=$MINGWPREFIX/share/llvm/lib/cmake/llvm -DLLVM_INSTALL_ROOT:PATH=$MINGWPREFIX/share/llvm -S. -Bbuild_win &&
 wl-showstatus build-install &&
 #make -Cbuild install/strip &&
 ninja -Cbuild install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION.src
####See also: http://polly.llvm.org/get_started.html
####Superseded by llvm-project all-in-one build
