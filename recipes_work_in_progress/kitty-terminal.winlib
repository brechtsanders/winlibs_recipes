export NAME="kitty terminal"
export STATUS=
export URL=https://sw.kovidgoyal.net/kitty/
export BASENAME=kitty-terminal
export DESCRIPTION="The fast, feature-rich, GPU based terminal emulator"
export CATEGORY=system
export TYPE=application
#export VERSION=0.34.1
#export VERSIONDATE=20240506
#export VERSION=0.35.0
#export VERSIONDATE=20240525
#export VERSION=0.35.1
#export VERSIONDATE=20240531
#export VERSION=0.35.2
#export VERSIONDATE=20240622
#export VERSION=0.36.0
#export VERSIONDATE=20240817
#export VERSION=0.36.1
#export VERSIONDATE=20240824
#export VERSION=0.36.2
#export VERSIONDATE=20240906
#export VERSION=0.36.3
#export VERSIONDATE=20240925
#export VERSION=0.36.4
#export VERSIONDATE=20240927
#export VERSION=0.37.0
#export VERSIONDATE=20241031
#export VERSION=0.38.0
#export VERSIONDATE=20241216
#export VERSION=0.38.1
#export VERSIONDATE=20241226
#export VERSION=0.39.0
#export VERSIONDATE=20250116
#export VERSION=0.39.1
#export VERSIONDATE=20250201
#export VERSION=0.40.0
#export VERSIONDATE=20250308
#export VERSION=0.40.1
#export VERSIONDATE=20250318
export VERSION=0.41.0
export VERSIONDATE=20250329
####Unknown binary format with signature: b'MZ\x90\x00'
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/kovidgoyal/kitty/releases kitty-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/kovidgoyal/kitty/releases/download/v$VERSION/kitty-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/kitty-$VERSION.tar.xz
cd kitty-$VERSION

  ./configure --help 2> /dev/null
  cat meson_options.txt 2> /dev/null
  head COPYING* LICENSE* LICENCE* COPYRIGHT*
  ls -ld COPYING* LICENSE* LICENCE* COPYRIGHT* configure* m4 CMakeLists.txt cmake xmake.lua Makefile GNUmakefile setup.py scons SConscript SConstruct meson.build meson_options.txt *.pro *.proj *.sln BUILD.gn .gn build 2> /dev/null

# fix missing python3 (version >= 0.39.0)
sed -i.bak -e "s?\(\s\)python3 ?\1$PYDIR/python.exe ?" Makefile
wl-showstatus build &&
 make &&
 #make CC=${CC:-gcc} CXX=${CXX:-g++} LD=${LD:-ld} AR=${AR:-ar} &&
    echo OK

wl-showstatus build &&
 PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$PYDIR/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe setup.py build --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
 wl-showstatus install &&
 PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$PYDIR/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe setup.py install --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
 ## delete any __pycache__ folder(s)
 #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
    echo OK

#wl-showstatus build-install &&
# PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe $MINGWPREFIX/python/Scripts/pip-script.py install . --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
# ## delete any __pycache__ folder(s)
# #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
#    echo OK

#wl-showstatus build-install &&
# $PYDIR/python.exe -m pip install --target $INSTALLPREFIX/python/Lib/site-packages --disable-pip-version-check --no-compile . &&
#    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf kitty-$VERSION



