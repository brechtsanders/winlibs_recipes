export NAME="GLtron"
export STATUS=
export URL=http://www.gltron.org/
export BASENAME=gltron
export DESCRIPTION="GLtron is a 3D snake game based on the light cycle portion of the film Tron."
export CATEGORY=game
export TYPE=application
export VERSION=0.70
export VERSIONDATE=20180821
wl-showstatus --package-version
export DEPENDENCIES=sdl,sdlsound
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.gltron.org/download.php"
export DOWNLOADURL="https://sourceforge.net/projects/gltron/files/gltron-source/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/gltron/gltron-source/$VERSION/gltron-$VERSION-source.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/gltron-$VERSION-source.tar.gz
cd $BASENAME-$VERSION
# fix invalid conversion in lua/src/llimits.h
sed -i.bak -e "s/(unsigned long)/(uintptr_t)/" lua/src/llimits.h
# fix nebu/scripting/scripting.c
patch -ulbf nebu/scripting/scripting.c << EOF
@@ -171,3 +171,3 @@

-void scripting_RunFile(char *name) {
+void scripting_RunFile(const char *name) {
   lua_dofile(L, name);
@@ -175,3 +175,3 @@

-void scripting_Run(char *command) {
+void scripting_Run(const char *command) {
   /* fprintf(stderr, "[command] %s\n", command); */
@@ -180,3 +180,3 @@

-void scripting_RunFormat(char *format, ... ) {
+void scripting_RunFormat(const char *format, ... ) {
   char buf[4096];
EOF
# fix detection of OpenGL in configure
sed -i.bak -e "s/-lGL/-lopengl32/g; s/-Wall\|-Werror//g" configure
wl-showstatus configure &&
# mkdir -p m4 &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



