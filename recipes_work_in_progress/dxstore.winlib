export NAME="Dxstore"
export STATUS=
export URL=https://www.dss.ca/dx/
export BASENAME=dxstore
export DESCRIPTION="The Dxstore Database System is a database management system for Linux, FreeBSD, and other operating systems. In the tradition of dbm/ndbm, it is distributed as an embeddable C or C++ library and shares with them the model of a database as a collection of key/value pairs. Dxstore is a completely new design and implementation, however, and has greatly extended functionality. It concentrates on providing very fast yet flexible access to a huge number of data items and vast amounts of data."
export CATEGORY=database
export TYPE=library
export VERSION=0.2
export VERSIONDATE=20191108
####local.h:22:10: fatal error: netinet/in.h: No such file or directory
####dxtypes.h:119:2: error: #error "Dxstore requires flock()"
wl-showstatus --package-version
export DEPENDANCIES=mman-win32
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
export DOWNLOADURL="https://www.dss.ca/dx/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://www.dss.ca/dx/dist/$BASENAME-$VERSION/$BASENAME-$VERSION.tgz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tgz
cd dx-$VERSION
# fix missing files
mkdir -p winfix/netinet
echo "#include <winsock2.h>" > winfix/netinet/in.h
wl-showstatus configure &&
# mkdir -p m4 &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$(pwd)/winfix -I$MINGWPREFIX/include/mman-win32" &&
#--enable-64bits
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build &&
 #make &&
 make -j1 CC="${CC:-gcc} -I$(pwd)/winfix -I$MINGWPREFIX/include/mman-win32"
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf dx-$VERSION



