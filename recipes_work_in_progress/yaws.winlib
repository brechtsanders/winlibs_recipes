export NAME="yaws"
export STATUS=
#export URL=http://yaws.hyber.org/
export URL=https://github.com/erlyaws/yaws/
export BASENAME=yaws
export DESCRIPTION="Yaws is a HTTP high perfomance 1.1 webserver particularly well suited for dynamic-content web applications. "
export CATEGORY=communications
export TYPE=application
#export VERSION=1.99
#export VERSIONDATE=20150515
#export VERSION=2.0
#export VERSIONDATE=20150714
#export VERSION=2.0.1
#export VERSIONDATE=20151001
#export VERSION=2.0.2
#export VERSIONDATE=20151008
#export VERSION=2.0.3
#export VERSIONDATE=20160701
#export VERSION=2.0.4
#export VERSIONDATE=20160922
#export VERSION=2.0.5
#export VERSIONDATE=20180411
#export VERSION=2.0.6
#export VERSIONDATE=20180626
#export VERSION=2.1.1
#export VERSIONDATE=20231111
export VERSION=2.2.0
export VERSIONDATE=20240714
wl-showstatus --package-version
export DEPENDENCIES=erlang
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="http://yaws.hyber.org/download/"
export DOWNLOADURL="https://github.com/erlyaws/yaws/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://yaws.hyber.org/download/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/erlyaws/yaws/archive/refs/tags/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
cd yaws-yaws-$VERSION
wl-showstatus preconfigure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 wl-showstatus configure &&
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --disable-pam --enable-crypto --enable-compiler &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#wl-showstatus configure &&
#rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf yaws-yaws-$VERSION



