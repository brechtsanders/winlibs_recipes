#export NAME="Qthread library"
#export STATUS=
#export URL=http://www.cs.sandia.gov/qthreads/
##export URL=https://github.com/Qthreads/qthreads
##export URL=https://github.com/sandialabs/qthreads
#export BASENAME=qthreads
#export DESCRIPTION="The qthreads API is designed to make using large numbers of threads convenient and easy, and to allow portable access to threading constructs used in massively parallel shared memory environments. The API maps well to both MTA-style threading and PIM-style threading, and is still quite useful in a standard SMP context. The qthreads API provides access to full/empty-bit (FEB) semantics, where every word of memory can be marked either full or empty, and a thread can wait for any word to attain either state."
#export CATEGORY=development
#export TYPE=library
##export VERSION=1.15
##export VERSIONDATE=20200108
##export VERSION=1.16
##export VERSIONDATE=20210119
##export VERSION=1.17
##export VERSIONDATE=20210915
##export VERSION=1.18
##export VERSIONDATE=20220920
##export VERSION=1.20
##export VERSIONDATE=20240503
#export VERSION=1.21
#export VERSIONDATE=20241001
#####configure: error: Can not find working makecontext.
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
##export DOWNLOADURL="https://github.com/Qthreads/qthreads/releases"
#export DOWNLOADURL="https://github.com/sandialabs/qthreads/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/Qthreads/qthreads/releases/download/$VERSION/qthread-$VERSION.tar.bz2
##export DOWNLOADSOURCEURL=https://github.com/Qthreads/qthreads/releases/download/$VERSION/qthread-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://github.com/Qthreads/qthreads/releases/download/$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/sandialabs/qthreads/releases/download/$VERSION/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
##tar xj --force-local -f $TARBALLDIR/$BASENAME/qthread-$VERSION.tar.bz2
##tar xa --force-local -f $TARBALLDIR/$BASENAME/qthread-$VERSION.tar.gz
##cd qthread-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
##tar xa --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##cd $BASENAME-$VERSION
#wl-showstatus configure &&
# # mkdir -p m4 &&
# # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# #./autogen.sh &&
# #    echo OK
# ## fix building DLLs on 64-bit
# #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
# #fi
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
# #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
# #PYTHON=$PYDIR/python.exe 
# #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-fastcontext --disable-cxx-tests &&
# ## fix building DLLs
# #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK && find . -name '*.a'
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf qthread-$VERSION
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Qthread library"
export STATUS=
export URL=http://www.cs.sandia.gov/qthreads/
#export URL=https://github.com/Qthreads/qthreads
#export URL=https://github.com/sandialabs/qthreads
export BASENAME=qthreads
export DESCRIPTION="The qthreads API is designed to make using large numbers of threads convenient and easy, and to allow portable access to threading constructs used in massively parallel shared memory environments. The API maps well to both MTA-style threading and PIM-style threading, and is still quite useful in a standard SMP context. The qthreads API provides access to full/empty-bit (FEB) semantics, where every word of memory can be marked either full or empty, and a thread can wait for any word to attain either state."
export CATEGORY=development
export TYPE=library
export VERSION=1.22
export VERSIONDATE=20250227
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://github.com/sandialabs/qthreads/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/sandialabs/qthreads/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DQTHREADS_TOPOLOGY:STRING=hwloc -DQTHREADS_BUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 #-DQTHREADS_TIMER_TYPE:STRING=clock_gettime
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DQTHREADS_TOPOLOGY:STRING=hwloc -DQTHREADS_BUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install-static &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install-shared &&
 ninja -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



