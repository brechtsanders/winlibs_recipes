export NAME="FreeLing"
#export NAME="FreeLing (also contains libcfg+)"
export STATUS=
#export URL=http://nlp.lsi.upc.edu/freeling/
export URL=https://nlp.lsi.upc.edu/freeling/
export BASENAME=freeling
export DESCRIPTION="The FreeLing package consists of a library providing language analysis services."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=2.2.2
#export VERSIONDATE=20110829
#export VERSION=3.0
#export VERSIONDATE=20130210
####libboost_regex does not include Unicode ICU support. Make sure that the installed libboost_regex was built with libicu support.
#export VERSION=3.1
#export VERSIONDATE=20150329
####src/libfreeling/traces.cc:34:7: error: definition of static data member 'freeling::traces::TraceLevel' of dllimport'd class
#export DEPENDENCIES=libomlet,libfries,pcre,boost,bdb,libcfg+
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
export VERSION=4.2
export VERSIONDATE=20240914
wl-showstatus --package-version
export DEPENDENCIES=libomlet,libfries,pcre,boost,bdb,libcfg+
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="different open licenses"
#export DOWNLOADURL="http://devel.cpl.upc.edu/freeling/downloads FreeLing-"
#export DOWNLOADURL="http://devel.cpl.upc.edu/freeling/downloads"
#export DOWNLOADURL="http://devel.cpl.upc.edu/freeling/svn/versions/"
export DOWNLOADURL="https://github.com/TALP-UPC/FreeLing/releases FreeLing-src-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://devel.cpl.upc.edu/freeling/downloads/FreeLing-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://devel.cpl.upc.edu/freeling/downloads/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/TALP-UPC/FreeLing/releases/download/$VERSION/FreeLing-src-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/FreeLing-src-$VERSION.tar.gz
cd FreeLing-$VERSION
## fix invalid boost/property_map.hpp
#mkdir -p src/libmorfo/boost
#echo "#include <boost/property_map/property_map.hpp>" > src/libmorfo/boost/property_map.hpp
##mkdir -p m4
##autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
## fix detection of boost libraries and link issues due to link parameter order
#sed -i.bak -e "s/-gcc-/-/g; s/\(\$LDFLAGS\) \(conftest\.\$ac_ext\)/\2 \1/g" configure
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lws2_32 -no-undefined -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,-no-undefined" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lws2_32 -licudt -licuin -licuio -licule -liculx -licutest -licutu -licuuc -Wl,--enable-auto-import -Wl,-no-undefined" &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK
# also allow building static library
sed -i.bak -e "s/\(add_library([^ ]*\) SHARED/\1/" src/libfreeling/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPYTHON2_API:BOOL=OFF -DPERL_API:BOOL=OFF -DJAVA_API:BOOL=OFF -DTRACES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPYTHON2_API:BOOL=OFF -DPERL_API:BOOL=OFF -DJAVA_API:BOOL=OFF -DTRACES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 #wl-showstatus build-static &&
 #cmake.exe --build build_static &&
 #ninja -Cbuild_static &&
 #wl-showstatus build-shared &&
 #cmake.exe --build build_shared &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install-static &&
 #cmake.exe --install build_static --strip &&
 #cmake.exe --build build_static --target "install/strip" &&
 #cmake.exe --build build_static --target "library/install/strip" &&
 ninja -Cbuild_static install/strip &&
 #ninja -Cbuild_static library/install/strip &&
 wl-showstatus build-install-shared &&
 #cmake.exe --install build_shared --strip &&
 #cmake.exe --build build_shared --target "install/strip" &&
 ninja -Cbuild_shared install/strip &&
    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf FreeLing-$VERSION
