export NAME="GNU-EFI"
export STATUS=
export URL=http://gnu-efi.sourceforge.net/
export BASENAME=gnu-efi
export DESCRIPTION="Develop EFI applications for ARM-64, ARM-32, x86_64, IA-64 (IPF), and IA-32 (x86) platforms using the GNU toolchain and the EFI development environment."
export CATEGORY=system
export TYPE=library
#export VERSION=3.0.4
#export VERSIONDATE=20160702
#export VERSION=3.0.5
#export VERSIONDATE=20170110
#export VERSION=3.0.6
#export VERSIONDATE=20170620
#export VERSION=3.0.8
#export VERSIONDATE=20180315
#export VERSION=3.0.9
#export VERSIONDATE=20181012
#export VERSION=3.0.10
#export VERSIONDATE=20191004
#export VERSION=3.0.11
#export VERSIONDATE=20191028
#export VERSION=3.0.12
#export VERSIONDATE=20200512
#export VERSION=3.0.13
#export VERSIONDATE=20210309
#export VERSION=3.0.14
#export VERSIONDATE=20210820
#export VERSION=3.0.15
#export VERSIONDATE=20220809
#export VERSION=3.0.17
#export VERSIONDATE=20230502
export VERSION=3.0.18
export VERSIONDATE=20240322
####gnuefi/reloc_ia32.c:39:17: fatal error: elf.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://sourceforge.net/projects/gnu-efi/files/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/gnu-efi/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
mkdir -p winfix
cat > winfix/elf.h << EOF
#include <stdint.h>
#include <sys/types.h>
//#include <sys/elf32.h>
//#include <sys/elf64.h>
//#include <sys/elf_generic.h>
typedef uint64_t Elf64_Addr;
typedef uint64_t Elf64_Xword;
typedef int64_t Elf64_Sxword;
typedef struct Elf64_Dyn_struct {
  Elf64_Sxword d_tag; // Type of dynamic table entry.
  union {
    Elf64_Xword d_val; // Integer value of entry.
    Elf64_Addr d_ptr;  // Pointer value of entry.
  } d_un;
} Elf64_Dyn;
EOF
cat > winfix/elf.h << EOF
#include <libelf.h>
#include <libelf/sys_elf.h>
EOF
mv Make.defaults Make.defaults.bak &&
sed -e "s/-fpic//" Make.defaults.bak > Make.defaults
wl-showstatus build &&
 make CC="${CC:-gcc} -I$PWD/winfix" &&
    echo OK
# wl-showstatus build-install &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



