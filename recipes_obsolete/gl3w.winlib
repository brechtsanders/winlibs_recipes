export NAME="GL3W"
export STATUS=
#export URL=https://www.khronos.org/opengl/wiki/OpenGL_Loading_Library
export URL=https://github.com/skaslev/gl3w
export BASENAME=gl3w
export DESCRIPTION="Simple OpenGL core profile loading. The GL3W library focuses on the core profile of OpenGL 3 and 4. It only loads the core entrypoints for these OpenGL versions. It supports Windows, Mac OS X, Linux, and FreeBSD."
export CATEGORY=graphics,hardware
export TYPE=library
export VERSION=master
export VERSIONDATE=20171028
wl-showstatus --package-version
export DEPENDENCIES=khronos-opengl-registry
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=UNLICENSE
export LICENSETYPE="public domain"
#export DOWNLOADURL="https://github.com/skaslev/gl3w/releases"
export DOWNLOADURL="https://github.com/skaslev/gl3w/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/skaslev/gl3w/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix gl3w_gen.py
####ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:777)
patch -ulbf gl3w_gen.py << EOF
@@ -33,2 +33,3 @@
 import re
+import ssl

@@ -103,3 +104,4 @@
     print('Downloading glcorearb.h to {0}...'.format(os.path.join(args.root, 'include/GL/glcorearb.h')))
-    web = urllib2.urlopen('http://www.opengl.org/registry/api/GL/glcorearb.h')
+    request = urllib2.Request('http://www.opengl.org/registry/api/GL/glcorearb.h')
+    web = urllib2.urlopen(request, context=ssl._create_unverified_context())
     with open(os.path.join(args.root, 'include/GL/glcorearb.h'), 'wb') as f:
EOF
wl-showstatus configure &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
 wl-showstatus build &&
 ( PATH=$PYDIR:$PATH make -j1 || ( mv -f gl3w_gen.py.orig gl3w_gen.py && PATH=$PYDIR:$PATH make -j1 )) &&
 wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX &&
 cp -rf include $INSTALLPREFIX/ &&
 cp -rf src $INSTALLPREFIX/ &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####Not really installing anything that isn't already part of another package



## skip downloading files in CMakeLists.txt (version >= master)
#patch -ulbf CMakeLists.txt << EOF
#@@ -38,6 +38,2 @@
#        gl3w_gen ALL
#-       DEPENDS
#-               "\${SOURCE_DIR}/gl3w.c"
#-               "\${HEADER_DIR}/GL/gl3w.h"
#-               "\${HEADER_DIR}/GL/glcorearb.h"
# )
#EOF
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# wl-showstatus build &&
# PATH=$PYDIR:$PATH ninja -Cbuild_win &&
# wl-showstatus build-install &&
# mkdir -p $INSTALLPREFIX &&
# cp -rf include $INSTALLPREFIX/ &&
# cp -rf src $INSTALLPREFIX/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



