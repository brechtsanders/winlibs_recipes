#export NAME="pugixml"
#export STATUS=
#export URL=http://pugixml.org/
#export BASENAME=pugixml
#export DESCRIPTION="pugixml is a light-weight C++ XML processing library."
#export CATEGORY=dataprocessing
#export TYPE=library
##export VERSION=1.2
##export VERSIONDATE=20130527
##export VERSION=1.4
##export VERSIONDATE=20140301
##export VERSION=1.5
##export VERSIONDATE=20141127
##export VERSION=1.6
##export VERSIONDATE=20150411
#export VERSION=1.7
#export VERSIONDATE=20151019
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=readme.txt
#export LICENSETYPE=MIT
#export DOWNLOADURL="http://pugixml.org/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://pugixml.googlecode.com/files/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://pugixml.googlecode.com/files/$BASENAME-$VERSION.zip
#export DOWNLOADSOURCEURL=http://github.com/zeux/pugixml/releases/download/v$VERSION/$BASENAME-$VERSION.zip
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##mkdir -p $BASENAME-$VERSION
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz -C $BASENAME-$VERSION
##unzip -oq $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.zip -d $BASENAME-$VERSION
#unzip -oq $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.zip
#cd $BASENAME-$VERSION/scripts
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install &&
# rm -f CMakeCache.txt && &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON . &&
# make install &&
# mkdir -p $INSTALLPREFIX/bin &&
# strip *.dll &&
# cp -f *.dll $INSTALLPREFIX/bin/ &&
# cd .. &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="pugixml"
#export STATUS=
#export URL=http://pugixml.org/
#export BASENAME=pugixml
#export DESCRIPTION="pugixml is a light-weight C++ XML processing library."
#export CATEGORY=dataprocessing
#export TYPE=library
##export VERSION=1.8
##export VERSIONDATE=20161124
##export VERSION=1.9
##export VERSIONDATE=20180405
#export VERSION=1.10
#export VERSIONDATE=20190916
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=readme.txt
#export LICENSETYPE=MIT
#export DOWNLOADURL="http://pugixml.org/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://github.com/zeux/pugixml/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="pugixml"
export STATUS=
export URL=http://pugixml.org/
export BASENAME=pugixml
export DESCRIPTION="pugixml is a light-weight C++ XML processing library."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=1.8
#export VERSIONDATE=20161124
#export VERSION=1.9
#export VERSIONDATE=20180405
#export VERSION=1.10
#export VERSIONDATE=20190916
#export VERSION=1.11
#export VERSIONDATE=20201127
#export VERSION=1.11.1
#export VERSIONDATE=20201205
#export VERSION=1.11.2
#export VERSIONDATE=20201215
#export VERSION=1.11.3
#export VERSIONDATE=20201219
#export VERSION=1.11.4
#export VERSIONDATE=20201223
#export VERSION=1.12
#export VERSIONDATE=20220209
#export VERSION=1.12.1
#export VERSIONDATE=20220216
#export VERSION=1.13
#export VERSIONDATE=20221103
export VERSION=1.14
export VERSIONDATE=20231002
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=readme.txt
export LICENSETYPE=MIT
#export DOWNLOADURL="http://pugixml.org/"
export DOWNLOADURL="https://github.com/zeux/pugixml/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/zeux/pugixml/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
cd $BASENAME-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")
## fix CMakeLists.txt (version = 1.10)
#patch -ulbf CMakeLists.txt << EOF
#@@ -72,2 +72,3 @@
# foreach(TARGET \${LIBRARY})
#+       set_target_properties(\${TARGET} PROPERTIES OUTPUT_NAME pugixml)
#        # Enable C++11 long long for compilers that are capable of it
#EOF
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_AND_STATIC_LIBS:BOOL=ON -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPUGIXML_WCHAR_MODE:BOOL=OFF -DPUGIXML_BUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPUGIXML_WCHAR_MODE:BOOL=OFF -DPUGIXML_BUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_win/build.ninja &&
 #wl-showstatus build &&
 #ninja -Cbuild_static &&
 #wl-showstatus build &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")



