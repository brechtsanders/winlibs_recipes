#export NAME="GDAL"
#export STATUS=
#export URL=http://www.gdal.org/
#export BASENAME=gdal
#export DESCRIPTION="GDAL is a translator library for raster geospatial data formats that is released under an X/MIT style Open Source license by the Open Source Geospatial Foundation. As a library, it presents a single abstract data model to the calling application for all supported formats. It also comes with a variety of useful commandline utilities for data translation and processing."
#export CATEGORY=geo
#export TYPE=library
##export VERSION=1.6.0
##export VERSION=1.6.1
##export VERSION=1.6.2
##export VERSION=1.6.3
##export VERSIONDATE=20091128
##export VERSION=1.7.1
##export VERSIONDATE=20100211
#####cannot find frmts/o/.libs/EnvisatFile.o
##export VERSION=1.7.2
##export VERSIONDATE=20100428
##export VERSION=1.7.3
##export VERSIONDATE=20101111
##export VERSION=1.8.0
##export VERSIONDATE=20110124
#####g++.exe: E:/Prog/MinGW-mSys/home/win32/gdal-1.8.0/.libs/libgdal.dll.a: No such file or directory
##export VERSION=1.8.1
##export VERSIONDATE=20110715
#####0 [main] ld.exe" 3904 handle_exceptions: Exception: STATUS_ACCESS_VIOLATION
#####16379 [main] ld.exe" 3904 open_stackdumpfile: Dumping stack trace to ld.exe.stackdump
##export VERSION=1.9.0
##export VERSIONDATE=20120110
##export VERSION=1.9.1
##export VERSIONDATE=20120523
##export VERSION=1.9.2
##export VERSIONDATE=20121012
##export VERSION=1.10.0
##export VERSIONDATE=20130430
##export VERSION=1.10.1
##export VERSIONDATE=20130831
##export VERSION=1.11.0
##export VERSIONDATE=20140426
##export VERSION=1.11.1
##export VERSIONDATE=20141001
##export VERSION=1.11.2
##export VERSIONDATE=20150219
##export VERSION=1.11.3
##export VERSIONDATE=20150923
##export VERSION=1.11.4
##export VERSIONDATE=20160129
##export VERSION=1.11.5
##export VERSIONDATE=20160713
#####netcdfdataset.cpp:140:22: error: 'NC_NAT' was not declared in this scope
##export VERSION=2.0.0
##export VERSIONDATE=20150619
##export VERSION=2.0.1
##export VERSIONDATE=20150923
##export VERSION=2.0.2
##export VERSIONDATE=20160129
##export VERSION=2.0.3
##export VERSIONDATE=20160713
##export VERSION=2.1.0
##export VERSIONDATE=20160502
#####frmts/pdf/pdfwritabledataset.cpp:307:17: error: 'class GDALPDFWriter' has no member named 'WriteOGRLayer'
##export VERSION=2.1.1
##export VERSIONDATE=20160713
##export VERSION=2.1.2
##export VERSIONDATE=20161027
#####apps/gdalinfo_lib.cpp:40:18: fatal error: json.h: No such file or directory
##export VERSION=2.1.3
##export VERSIONDATE=20170127
##export VERSION=2.1.4
##export VERSIONDATE=20170624
##export VERSION=2.2.0
##export VERSIONDATE=20170509
##export VERSION=2.2.1
##export VERSIONDATE=20170630
#####ogr/ogrsf_frmts/gml/xercesc_headers.h:42:34: fatal error: util/PlatformUtils.hpp: No such file or directory
##export VERSION=2.2.2
##export VERSIONDATE=20170922
##export VERSION=2.2.3
##export VERSIONDATE=20171123
#####apps/gdal_translate_lib.cpp:50:10: fatal error: gdal_vrt.h: No such file or directory
##export VERSION=2.2.4
##export VERSIONDATE=20180322
#####port/cpl_vsil_crypt.cpp:450:28: error: expected primary-expression before 'const'    *poEncCipher, (const byte*)osCheckIV.c_str());
##export VERSION=2.3.0
##export VERSIONDATE=20180511
##export VERSION=2.3.1
##export VERSIONDATE=20180628
#####port/cpl_vsil_crypt.cpp:458:50: error: expected '>' before 'cryptopp_uint8_t'
##export VERSION=2.3.2
##export VERSIONDATE=20180929
##export VERSION=2.3.3
##export VERSIONDATE=20181221
##export VERSION=2.4.0
##export VERSIONDATE=20181222
##export VERSION=2.4.1
##export VERSIONDATE=20190322
##export VERSION=2.4.2
##export VERSIONDATE=20190706
##export VERSION=2.4.3
##export VERSIONDATE=20191104
##export VERSION=2.4.4
##export VERSIONDATE=20200114
##export VERSION=3.0.0
##export VERSIONDATE=20190509
##export VERSION=3.0.1
##export VERSIONDATE=20190706
##export VERSION=3.0.2
##export VERSIONDATE=20191104
##export VERSION=3.0.3
##export VERSIONDATE=20200114
#####configure: error: PROJ 6 symbols not found
##export VERSION=3.0.4
##export VERSIONDATE=20200131
##export VERSION=3.1.0
##export VERSIONDATE=20200508
#####frmts/exr/exrdataset.cpp:65:32: error: template argument 1 is invalid
##export VERSION=3.1.1
##export VERSIONDATE=20200629
##export VERSION=3.1.2
##export VERSIONDATE=20200708
##export VERSION=3.1.3
##export VERSIONDATE=20200907
#####ld.exe: error: export ordinal too large: 80377
##export VERSION=3.1.4
##export VERSIONDATE=20201024
##export VERSION=3.2.0
##export VERSIONDATE=20201102
##export VERSION=3.2.1
##export VERSIONDATE=20210104
##export VERSION=3.2.2
##export VERSIONDATE=20210310
##export VERSION=3.2.3
##export VERSIONDATE=20210505
##export VERSION=3.3.0
##export VERSIONDATE=20210503
##export VERSION=3.3.1
##export VERSIONDATE=20210705
##export VERSION=3.3.2
##export VERSIONDATE=20210907
##export VERSION=3.3.3
##export VERSIONDATE=20211029
##export VERSION=3.4.0
##export VERSIONDATE=20211108
##export VERSION=3.4.1
##export VERSIONDATE=20220104
#####g++.exe: fatal error: cannot execute 'd:/prog/winlibs64-10.3.0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/10.3.0/collect2.exe': CreateProcess: No such file or directory
##export VERSION=3.4.2
##export VERSIONDATE=20220314
#export VERSION=3.4.3
#export VERSIONDATE=20220504
#wl-showstatus --package-version
##export DEPENDANCIES=sqlite3,libcurl,libjpeg,libpng,libtiff,postgresql,zlib,geos,proj,json,xerces,libxml2,pcre,openssl
##export DEPENDANCIES=sqlite3,libcurl,libjpeg,libpng,libtiff,postgresql,zlib,geos,proj,json,xerces,libxml2,pcre,openssl,openexr
#export DEPENDANCIES=sqlite3,libcurl,libjpeg,libpng,libtiff,libgeotiff,postgresql,zlib,geos,proj,json,expat,xerces,libxml2,pcre,openssl,openexr,hdf,tiledb,libgta,libiconv,cfitsio,charls
#export OPTIONALDEPENDANCIES=freexl
#export BUILDDEPENDANCIES=
#export LICENSEFILE=LICENSE.TXT
#export LICENSETYPE="MIT/X style"
#export DOWNLOADURL="http://download.osgeo.org/gdal/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://download.osgeo.org/gdal/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://download.osgeo.org/gdal/$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://download.osgeo.org/gdal/$VERSION/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix port/cplgetsymbol.cpp
##mv port/cplgetsymbol.cpp port/cplgetsymbol.cpp.bak
##sed -e "s/^\(#if defined(WIN32) \&\& \!defined(WIN32CE)\)/\1 \&\& \!defined(GOT_GETSYMBOL)/" port/cplgetsymbol.cpp.bak > port/cplgetsymbol.cpp
### fix to avoid double definition of CPLGetSymbol in port/cplgetsymbol.cpp
##echo "#undef HAVE_DLFCN_H" >> port/cpl_config.h
## fix missing getaddrinfo/freeaddrinfo in gcore/gdalclientserver.cpp (version >= 1.10.1)
#mv gcore/gdalclientserver.cpp gcore/gdalclientserver.cpp.bak
#cat > gcore/gdalclientserver.cpp << EOF
##if _WIN32_WINNT < 0x0501
##define _WIN32_WINNT 0x0501
##endif
##include <ws2tcpip.h>
#EOF
#cat gcore/gdalclientserver.cpp.bak >> gcore/gdalclientserver.cpp
### fix missing getaddrinfo/freeaddrinfo in apps/gdalserver.c (version >= 1.10.1 <= 2.3.1)
##mv apps/gdalserver.c apps/gdalserver.c.bak
##cat > apps/gdalserver.c << EOF
###if _WIN32_WINNT < 0x0501
###define _WIN32_WINNT 0x0501
###endif
###include <ws2tcpip.h>
##EOF
##cat apps/gdalserver.c.bak >> apps/gdalserver.c
## fix include of ogr_attrind.h (version >= 1.11.0)
#mv ogr/ogrfeaturequery.cpp ogr/ogrfeaturequery.cpp.bak
#sed -e 's?\("\)\(ogr_attrind.h"\)?\1ogrsf_frmts/\2?' ogr/ogrfeaturequery.cpp.bak > ogr/ogrfeaturequery.cpp
## fix redefinition of Polygon/Unknown in ogr/ogrsf_frmts/kml/kmlutility.h (version >= 1.11.5)
#mv ogr/ogrsf_frmts/kml/kmlutility.h ogr/ogrsf_frmts/kml/kmlutility.h.bak
#cat > ogr/ogrsf_frmts/kml/kmlutility.h << EOF
##include <windows.h>
##define Polygon KMLPolygon
##define Unknown KMLUnknown
#EOF
#cat ogr/ogrsf_frmts/kml/kmlutility.h.bak >> ogr/ogrsf_frmts/kml/kmlutility.h
## fix missing byte in port/cpl_vsil_crypt.cpp (version >= 2.2.4)
#mv port/cpl_vsil_crypt.cpp port/cpl_vsil_crypt.cpp.bak &&
#sed -e "s/byte\( *\*\)/uint8_t\1/g" port/cpl_vsil_crypt.cpp.bak > port/cpl_vsil_crypt.cpp
## fix missing cryptopp_uint8_t in port/cpl_vsil_crypt.cpp (version >= 2.3.0)
#sed -i.bak -e "s/cryptopp_uint8_t/uint8_t/g" port/cpl_vsil_crypt.cpp
## fix frmts/exr/exrdataset.cpp (version >= 3.1.1)
#patch -ulbf frmts/exr/exrdataset.cpp << EOF
#@@ -64,3 +64,3 @@
#         // Keep stream before others, so that it is destroyed last
#-        std::unique_ptr<IStream> m_pIStream{};
#+        std::unique_ptr<$(sed -ne "s/#define OPENEXR_IMF_INTERNAL_NAMESPACE //p" $MINGWPREFIX/include/OpenEXR/OpenEXRConfig.h)::IStream> m_pIStream{};
#
#@@ -451,3 +451,3 @@
#
#-class GDALEXRIOStream final: public IStream, public OStream
#+class GDALEXRIOStream final: public $(sed -ne "s/#define OPENEXR_IMF_INTERNAL_NAMESPACE //p" $MINGWPREFIX/include/OpenEXR/OpenEXRConfig.h)::IStream, public OStream
# {
#EOF
## fix dllexport in port/cpl_port.h (version >= 3.2.0)
#patch -ulbf port/cpl_port.h << EOF
#@@ -345,3 +345,3 @@
# #ifndef CPL_DLL
#-#if defined(_MSC_VER) && !defined(CPL_DISABLE_DLL)
#+#if defined(_WIN32) && !defined(CPL_DISABLE_DLL)
# #  ifdef GDAL_COMPILATION
#EOF
### fix frmts/hdf5/hdf5vfl.h (version = 3.4.1)
######Bug reported: https://github.com/OSGeo/gdal/issues/5061
##patch -ulbf frmts/hdf5/hdf5vfl.h << EOF
##@@ -73,2 +73,3 @@
## static const H5FD_class_t HDF5_vsil_g = {
##+    H5FD_VFD_DEFAULT,           /* value */
##     "vsil",                     /* name */
##@@ -106,2 +107,4 @@
##     nullptr,                    /* unlock */
##+    nullptr,                    /* del */
##+    nullptr,                    /* ctl */
##     H5FD_FLMAP_DICHOTOMY        /* fl_map */
##EOF
## fix undeclared at_quick_exit (version >= 3.3.2)
#for F in $(find -name '*.cpp'); do
# mv $F $F.bak &&
# echo "#include <cstdlib>" > $F &&
# cat $F.bak >> $F
#done
### workaround for MinGW libtool error: cannot find /home/bsanders/gdal-1.6.0/frmts/o/.libs/EnvisatFile.o
##mv GNUmakefile GNUmakefile.bak
##sed -e "s?\$(GDAL_ROOT)/?./?g" GNUmakefile.bak > GNUmakefile
##make install || make install LIBS="-lpng.dll -lgeos.dll"
### remove dependancy on dynamic libstdc++ (GCC 4)
##mv libtool libtool.bak &&
##sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
## fix problems detecting json-c/json.h (version >= 1.11.0)
#sed -i.bak -e "s?/usr/local/include/?\$MINGWPREFIX/include/?g" configure
### fix linker error: export ordinal too large
###sed -i.bak2 "s/\$wl--export-all-symbols//" configure
##sed -i.bak2 "s/\(\$wl\)--export-all-symbols/\1--discard-all/" configure
#wl-showstatus configure &&
# #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif LIBS="-ldl"
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif LDFLAGS="-Wl,-no-undefined"
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif LDFLAGS="-ldl" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif LDFLAGS="-ldl -Wl,-no-undefined -static-libstdc++ -Wl,--enable-auto-import" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif LDFLAGS="-ldl -static-libstdc++ -Wl,--enable-auto-import -no-undefined -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif LDFLAGS="-Wl,--as-needed -ldl -Wl,--enable-auto-import -no-undefined -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif LDFLAGS="-Wl,--as-needed -ldl -Wl,--enable-auto-import -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif --without-ogr LDFLAGS="-Wl,--as-needed -ldl -Wl,--enable-auto-import -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif --with-ogr --with-libjson-c=internal LDFLAGS="-Wl,--as-needed -ldl -Wl,--enable-auto-import -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif --with-ogr --with-libjson-c=$MINGWPREFIX/include/json-c CXXFLAGS="-I$MINGWPREFIX/include/json-c -I$(pwd)/ogr/ogrsf_frmts/geojson" LDFLAGS="-Wl,--as-needed -ldl -Wl,--enable-auto-import -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif --with-ogr --with-libjson-c=$MINGWPREFIX/include/json-c --without-netcdf CXXFLAGS="-I$MINGWPREFIX/include/json-c -I$(pwd)/ogr/ogrsf_frmts/geojson -I$(pwd)/frmts/vrt -I$(pwd)/ogr/ogrsf_frmts/generic -I$MINGWPREFIX/include/xercesc" LDFLAGS="-Wl,--as-needed -ldl -Wl,--enable-auto-import -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif --with-ogr --with-libjson-c=$MINGWPREFIX/include/json-c --without-netcdf --with-hide-internal-symbols CXXFLAGS="-I$MINGWPREFIX/include/json-c -I$(pwd)/ogr/ogrsf_frmts/geojson -I$(pwd)/frmts/vrt -I$(pwd)/ogr/ogrsf_frmts/generic -I$MINGWPREFIX/include/xercesc" LDFLAGS="-Wl,--as-needed -ldl -Wl,--enable-auto-import -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif --with-ogr --with-libjson-c=$MINGWPREFIX/include/json-c --without-netcdf CXXFLAGS="-I$MINGWPREFIX/include/json-c -I$(pwd)/ogr/ogrsf_frmts/geojson -I$(pwd)/frmts/vrt -I$(pwd)/ogr/ogrsf_frmts/generic -I$MINGWPREFIX/include/xercesc" CFLAGS="-g0" CXXFLAGS="-g0" LDFLAGS="-Wl,--as-needed -ldl -Wl,-no-undefined" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-libtool --without-jasper --without-gif --with-ogr --with-libjson-c=$MINGWPREFIX/include/json-c --without-netcdf --without-exr CXXFLAGS="-I$MINGWPREFIX/include/json-c -I$(pwd)/ogr/ogrsf_frmts/geojson -I$(pwd)/frmts/vrt -I$(pwd)/ogr/ogrsf_frmts/generic -I$MINGWPREFIX/include/xercesc" CFLAGS="-g0" CXXFLAGS="-g0 -fpermissive" LDFLAGS="-Wl,--as-needed -ldl -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-libtool --without-jasper --without-gif --with-ogr --with-libjson-c=$MINGWPREFIX/include/json-c --without-netcdf CXXFLAGS="-I$MINGWPREFIX/include/json-c -I$(pwd)/ogr/ogrsf_frmts/geojson -I$(pwd)/frmts/vrt -I$(pwd)/ogr/ogrsf_frmts/generic -I$MINGWPREFIX/include/xercesc" CFLAGS="-g0" CXXFLAGS="-g0 -fpermissive" LDFLAGS="-Wl,--as-needed -ldl -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-jasper --without-gif --with-ogr --with-libjson-c=$MINGWPREFIX/include/json-c CXXFLAGS="-I$MINGWPREFIX/include/json-c -I$(pwd)/ogr/ogrsf_frmts/geojson -I$MINGWPREFIX/include/xercesc" LDFLAGS="-Wl,--as-needed -ldl -Wl,--enable-auto-import -Wl,-no-undefined" &&
# ## fix issue with libtool
# #mv libtool libtool.bak &&
# #cp $(which libtool) . &&
# # fix building DLLs
# sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# ## fix detection of binaries
# #sed -i.bak2 -e "s/^\(deplibs_check_method=\).*$/\1\"pass_all\"/" libtool &&
# # fix GNUmakefile
# sed -i.bak -e "s?\$(GDAL_ROOT)/?./?g" GNUmakefile &&
# ## fix linker error: export ordinal too large
# #sed -i.bak2 -e "s/\$(\(LD\|LD_SHARED\))/& -Wl,--discard-all/g" GNUmakefile &&
# ## fix linker error: export ordinal too large
# #sed -i.bak2 "s/\\\\\$wl--export-all-symbols//" libtool &&
# # fix multithreading
# echo "#undef CPL_MULTIPROC_PTHREAD" >> port/cpl_config.h &&
# echo "#define CPL_MULTIPROC_WIN32 1" >> port/cpl_config.h &&
# echo "#define USE_WIN32_MUTEX 1" >> port/cpl_config.h &&
# ## fix build dependancies and building of libgdal.dll.a (version >= 3.2.0)
# #sed -i.bak -e "s/^\(\$(GDAL_S*LIB):\s*\)/&lib-dependencies /; s/^\(lib-target:\s*\)/&\$(GDAL_LIB) \$(GDAL_SLIB) /; s/\$(LD_SHARED) \$(GDAL_SLIB_SONAME)/& -Wl,--out-implib,libgdal.dll.a -Wl,--output-def,libgdal.def/" GNUmakefile &&
# # fix building of libgdal.dll.a (version >= 3.2.0)
# sed -i.bak -e "s/\$(LD_SHARED) \$(GDAL_SLIB_SONAME)/& -Wl,--out-implib,libgdal.dll.a -Wl,--output-def,libgdal.def/" GNUmakefile &&
# # fix error calling collect2.exe because of command line too long (version >= 3.4.0)
# ####g++.exe: fatal error: cannot execute 'd:/prog/winlibs64-9.3.1/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/9.3.1/collect2.exe': CreateProcess: No such file or directory
# sed -i.bak -e "s?-L$(cygpath -m $MINGWPREFIX)/lib \|-L$(cygpath -m $MINGWPREFIX)/bin/../lib ??g" GDALmake.opt &&
# wl-showstatus build-install &&
# #make -Cogr/ogrsf_frmts &&
# #( make all install || make -j1 all install || make -j1 libgdal.la install LDFLAGS="-Wl,--as-needed -lpng.dll -lgeos_c.dll -ljpeg -ltiff -lcurl -lsqlite3 -lpq -lz -lws2_32" CONFIG_LIB_UTILS="-mconsole" ) &&
# #( make all install CONFIG_LIB_UTILS="-mconsole" || make -j1 libgdal.la install LDFLAGS="-Wl,--as-needed -lpng.dll -lgeos_c.dll -ljpeg -ltiff -lcurl -lsqlite3 -lpq -lz -lws2_32 -lcrypt32 -lssleay32" CONFIG_LIB_UTILS="-mconsole" ) &&
# #( make all install CC="${CC:-gcc} -I$MINGWPREFIX/include/json-c -I$MINGWPREFIX/include/xercesc" CXX="${CXX:-g++} -I$MINGWPREFIX/include/json-c -I$MINGWPREFIX/include/xercesc" LD_SHARED="g++ -shared -fno-lto" CONFIG_LIB_UTILS="-mconsole" || make -j1 libgdal.la install LDFLAGS="-Wl,--as-needed -lpng.dll -lgeos_c.dll -ljpeg -ltiff -lcurl -lsqlite3 -lpq -lz -lws2_32 -lcrypt32 -lssleay32" CONFIG_LIB_UTILS="-mconsole" ) &&
# #( make all install CONFIG_LIB_UTILS="-mconsole" || make -j1 libgdal.la install LDFLAGS="-Wl,--as-needed -lpng.dll -lgeos_c.dll -ljpeg -ltiff -lcurl -lsqlite3 -lpq -lz -lws2_32 -lcrypt32 -lssleay32" CONFIG_LIB_UTILS="-mconsole" || make install LD_SHARED="g++ -shared -fno-lto" ) &&
# #sed -i.bak -e "s/\(-licu[^ ]*\)64/\1/g" libgdal.la &&
# #( make -j1 all install CC="${CC:-gcc} -fpermissive" CXX="${CXX:-g++} -fpermissive" || make -j1 libgdal.la install CC="${CC:-gcc} -fpermissive" CXX="${CXX:-g++} -fpermissive" LDFLAGS="-Wl,--as-needed -lpng.dll -lgeos_c.dll -ljpeg -ltiff -lcurl -lsqlite3 -lpq -lz -lws2_32" ) &&
# #make all install CC="${CC:-gcc} -Wa,-mbig-obj" CXX="${CXX:-g++} -fpermissive -Wa,-mbig-obj" &&
# #make all install CC="${CC:-gcc} -Wa,-mbig-obj -g0" CXX="${CXX:-g++} -fpermissive -Wa,-mbig-obj -g0" &&
# #make -j1 all install CC="${CC:-gcc} -g0" CXX="${CXX:-g++} -fpermissive -g0" CONFIG_LIB_UTILS="-mconsole" LDFLAGS="-Wl,--as-needed -lpng.dll -lgeos_c.dll -ljpeg -ltiff -lcurl -lsqlite3 -lpq -lz -lws2_32 -lcrypt32 -lssleay32" &&
# #make all install CC="${CC:-gcc} -g0 -fno-lto -I$MINGWPREFIX/include/json-c -I$MINGWPREFIX/include/xercesc" CXX="${CXX:-g++} -fpermissive -g0 -fno-lto -I$MINGWPREFIX/include/json-c -I$MINGWPREFIX/include/xercesc" LD_SHARED="g++ -shared -fno-lto" CONFIG_LIB_UTILS="-mconsole" LDFLAGS="-Wl,--as-needed -lpng.dll -lgeos_c.dll -ljpeg -ltiff -lcurl -lsqlite3 -lpq -lz -lws2_32 -lcrypt32 -lssleay32" &&
# (
#  make lib-dependencies CC="${CC:-gcc} -I$MINGWPREFIX/include/json-c -I$MINGWPREFIX/include/xercesc" CXX="${CXX:-g++} -I$MINGWPREFIX/include/json-c -I$MINGWPREFIX/include/xercesc" &&
#  make $(pwd)/libgdal.a $(pwd)/libgdal.dll HAVE_LD_SHARED=yes LD_SHARED="g++ -shared -fno-lto" LDFLAGS="-Wl,--as-needed -lpng.dll -lgeos_c.dll -ljpeg -ltiff -lcurl -lsqlite3 -lpq -lz -lws2_32 -lcrypt32 -lssleay32" &&
#  #-lcharls
#  make all install CONFIG_LIB_UTILS="-mconsole"
# ) &&
# mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# rm -f $INSTALLPREFIX/lib/*.dll.[0-9]* &&
# strip $INSTALLPREFIX/bin/*.dll $INSTALLPREFIX/bin/*.exe &&
# cp -u *.a $INSTALLPREFIX/lib/ &&
# # fix absolute paths in gdal-config
# sed -i -e "s?$INSTALLPREFIX\|$(cygpath -m $INSTALLPREFIX)?\$(dirname \$0)/..?g" $INSTALLPREFIX/bin/gdal-config &&
# #sed -i -e "s?-L$MINGWPREFIX/include/json-c/lib ??" $INSTALLPREFIX/lib/libgdal.la &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="GDAL"
export STATUS=
export URL=http://www.gdal.org/
export BASENAME=gdal
export DESCRIPTION="GDAL is a translator library for raster and vector geospatial data formats that is released under an MIT style Open Source License by the Open Source Geospatial Foundation. As a library, it presents a single raster abstract data model and single vector abstract data model to the calling application for all supported formats. It also comes with a variety of useful command line utilities for data translation and processing."
export CATEGORY=geo
export TYPE=library
#export VERSION=3.5.0
#export VERSIONDATE=20220513
#export VERSION=3.5.1
#export VERSIONDATE=20220706
export VERSION=3.5.2
export VERSIONDATE=20220913
#export VERSION=3.5.3
#export VERSIONDATE=20221101
wl-showstatus --package-version
export DEPENDANCIES=sqlite3,libcurl,libjpeg,libpng,libtiff,libgeotiff,postgresql,zlib,geos,proj,json,expat,xerces,libxml2,pcre,openssl,openexr,hdf,tiledb,libgta,libiconv,cfitsio,charls,poppler
export OPTIONALDEPENDANCIES=freexl,brunsli
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE.TXT
export LICENSETYPE="MIT style"
export DOWNLOADURL="http://download.osgeo.org/gdal/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://download.osgeo.org/gdal/$VERSION/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DGDAL_USE_OPENCL:BOOL=ON -DOGR_ENABLE_DRIVER_CAD:BOOL=OFF -DCSHARP_MONO:BOOL=OFF -DGDAL_USE_EXTERNAL_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DGDAL_USE_OPENCL:BOOL=ON -DOGR_ENABLE_DRIVER_CAD:BOOL=OFF -DCSHARP_MONO:BOOL=OFF -DGDAL_USE_EXTERNAL_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DGDAL_USE_OPENCL:BOOL=ON -DOGR_ENABLE_DRIVER_CAD:BOOL=OFF -DCSHARP_MONO:BOOL=OFF -DGDAL_USE_HDF5:BOOL=OFF -DGDAL_USE_EXTERNAL_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DGDAL_USE_OPENCL:BOOL=ON -DOGR_ENABLE_DRIVER_CAD:BOOL=OFF -DCSHARP_MONO:BOOL=OFF -DGDAL_USE_EXTERNAL_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DGDAL_USE_OPENCL:BOOL=ON -DOGR_ENABLE_DRIVER_CAD:BOOL=OFF -DCSHARP_MONO:BOOL=OFF -DGDAL_USE_EXTERNAL_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DGDAL_USE_OPENCL:BOOL=ON -DOGR_ENABLE_DRIVER_CAD:BOOL=OFF -DCSHARP_MONO:BOOL=OFF -DGDAL_USE_HDF5:BOOL=OFF -DGDAL_USE_EXTERNAL_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 # fix absolute paths in gdal-config
 sed -i -e "s?$INSTALLPREFIX\|$(cygpath -m $INSTALLPREFIX)?\$(dirname \$0)/..?g" $INSTALLPREFIX/bin/gdal-config &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



