export NAME="pypackaging"
export STATUS=
export URL=https://pypi.org/project/pypackaging/
export BASENAME=pypackaging
export DESCRIPTION="Python boilerplate that contains all the boilerplate you need to create a Python package."
export CATEGORY=development
export TYPE=library
export VERSION=0.1.0
export VERSIONDATE=20240308
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://pypi.org/project/pypackaging/#files"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://files.pythonhosted.org/packages/e9/e7/8184f8cc2a79b84fe9126ad2326e93e7ea31e6ed202a17000fed02afc150/pypackaging-0.1.0.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus build-install &&
 PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$PYDIR/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe setup.py install --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
 ## delete any __pycache__ folder(s)
 #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



