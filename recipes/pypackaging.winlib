#export NAME="pypackaging"
#export STATUS=
#export URL=https://pypi.org/project/pypackaging/
#export BASENAME=pypackaging
#export DESCRIPTION="Python boilerplate that contains all the boilerplate you need to create a Python package."
#export CATEGORY=development
#export TYPE=library
#export VERSION=0.1.0
#export VERSIONDATE=20240308
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSEFILE=LICENSE
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://pypi.org/project/pypackaging/#files"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://files.pythonhosted.org/packages/e9/e7/8184f8cc2a79b84fe9126ad2326e93e7ea31e6ed202a17000fed02afc150/pypackaging-0.1.0.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
#wl-showstatus build-install &&
# #PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$PYDIR/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe setup.py install --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
# PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$PYDIR/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe setup.py --no-user-cfg install --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
# ## delete any __pycache__ folder(s)
# #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
# #( ls -1 $INSTALLPREFIX/python/Scripts/pypackaging.py &> /dev/null || cp $INSTALLPREFIX/python/Scripts/pypackaging-script.py $INSTALLPREFIX/python/Scripts/pypackaging.py ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="packaging"
export STATUS=
export URL=https://packaging.pypa.io/
export BASENAME=pypackaging
export DESCRIPTION="Reusable core utilities for various Python Packaging interoperability specifications."
export CATEGORY=development
export TYPE=library
#export VERSION=23.2
#export VERSIONDATE=20240409
#export VERSION=24.0
#export VERSIONDATE=20240410
export VERSION=24.1
export VERSIONDATE=20240610
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSEFILE=LICENSE.APACHE
#export LICENSETYPE=Apache
export LICENSEFILE=LICENSE.BSD
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/pypa/packaging/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/pypa/packaging/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd packaging-$VERSION
#wl-showstatus build-install &&
# #PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe $MINGWPREFIX/python/Scripts/pip-script.py install . --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
# PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe $MINGWPREFIX/python/Scripts/pip3-script.py install . --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
# ## delete any __pycache__ folder(s)
# #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf packaging-$VERSION
wl-showstatus build-install &&
 $PYDIR/python.exe -m pip install --target $INSTALLPREFIX/python/Lib/site-packages --disable-pip-version-check --no-compile . &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf packaging-$VERSION



