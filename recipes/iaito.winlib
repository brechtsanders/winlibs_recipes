export NAME="iaito"
export STATUS=
export URL=https://www.radare.org/n/iaito.html
export BASENAME=iaito
export DESCRIPTION="iaito is the official graphical interface of radare2"
export CATEGORY=development
export TYPE=application
#export VERSION=5.9.0
#export VERSIONDATE=20240401
#export VERSION=5.9.2
#export VERSIONDATE=20240524
#export VERSION=5.9.4
#export VERSIONDATE=20240809
#export VERSION=5.9.6
#export VERSIONDATE=20241013
#export VERSION=5.9.8
#export VERSIONDATE=20241119
#export VERSION=5.9.9
#export VERSIONDATE=20241122
#export VERSION=6.0.0
#export VERSIONDATE=20250813
export VERSION=6.0.2
export VERSIONDATE=20250930
wl-showstatus --package-version
export DEPENDENCIES=qt6,radare2
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/radareorg/iaito/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/radareorg/iaito/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/core/GuiCorePlugin.cpp (version >= 5.9.2)
sed -i.bak -e "s/^static \(R_API \)/\1/" src/core/GuiCorePlugin.cpp
# avoid MSVC specifics
sed -i.bak -e "s/win32:/msvc:/" src/Iaito.pro
wl-showstatus configure &&
 $MINGWPREFIX/qt6/bin/qmake -makefile src/Iaito.pro -spec $MINGWPREFIX/qt6/mkspecs/win32-g++ QMAKE_CXXFLAGS+="-MD -I$(cygpath -m $MINGWPREFIX/include/libr)" &&
 # don't link with missing libraries
 sed -i.bak -e "s/\(-lr_hash\|-lr_parse\) //g" Makefile.Release &&
 wl-showstatus build &&
 mingw32-make &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/share/iaito &&
 cp -f Release/*.exe $INSTALLPREFIX/share/iaito/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: fix runtime error: ERROR: cannot open 'iaito' colorscheme
####PATH=$MINGWPREFIX/qt6/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt6/plugins release/iaito.exe



#mkdir -p iaito/platforms iaito/styles iaito/tls iaito/translations iaito/share/radare2/last/cons &&
# PATH=$MINGWPREFIX/qt6/bin:$PATH copypedeps -r $MINGWPREFIX/share/iaito/* $MINGWPREFIX/qt6/plugins/platforms/qwindows.dll $MINGWPREFIX/qt6/plugins/styles/q*style.dll $MINGWPREFIX/qt6/plugins/tls/q*backend.dll iaito/ &&
# mv -f iaito/qwindows.dll iaito/platforms &&
# mv -f iaito/q*style.dll iaito/styles &&
# mv -f iaito/q*backend.dll iaito/tls &&
# #cp -rf build_win/src/webui/www/translations/*.qm iaito/translations/ &&
# #cp -f dist/windows/qt.conf iaito/ &&
# cp -rf $MINGWPREFIX/share/cons/* iaito/share/radare2/last/cons/ &&
#    echo OK

#mkdir -p iaito/plugins &&
#PATH=$MINGWPREFIX/qt/bin:$PATH copypedeps -r $(which iaito.exe) iaito &&
#for D in $(find $MINGWPREFIX/qt/plugins -type d); do
# mkdir -p iaito/plugins/$(echo $D|sed -e "s?^$MINGWPREFIX/qt/plugins/??")
# mkdir -p iaito/plugins.deps/$(echo $D|sed -e "s?^$MINGWPREFIX/qt/plugins/??")
# PATH=$MINGWPREFIX/qt/bin:$PATH copypedeps -r -n -q $D iaito/plugins.deps/$(echo $D|sed -e "s?^$MINGWPREFIX/qt/plugins/??")
#done &&
#for F in $(find $MINGWPREFIX/qt/plugins -name '*.dll'); do
# mv -f iaito/plugins.deps/$(echo $F|sed -e "s?^$MINGWPREFIX/qt/plugins/??") iaito/plugins/$(echo $F|sed -e "s?^$MINGWPREFIX/qt/plugins/??")
#done &&

##$MINGWPREFIX/share/iaito/* 
#mkdir -p iaito/platforms iaito/styles iaito/tls &&
# PATH=$MINGWPREFIX/qt6/bin:$PATH copypedeps -r $MINGWPREFIX/qt6/plugins/platforms/qwindows.dll $MINGWPREFIX/qt6/plugins/styles/q*style.dll $MINGWPREFIX/qt6/plugins/tls/q*backend.dll iaito/ &&
# mv -f iaito/qwindows.dll iaito/platforms &&
# #cp -rf $MINGWPREFIX/share/iaito/{translations,examples,doc} iaito/ &&
#    echo OK



