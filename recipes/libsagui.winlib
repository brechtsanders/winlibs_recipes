export NAME="libsagui"
export STATUS=
export URL=https://risoflora.github.io/libsagui/
#export URL=https://github.com/risoflora/libsagui
export BASENAME=libsagui
export DESCRIPTION="Cross-platform library which helps to develop web servers or frameworks."
export CATEGORY=framework,communication
export TYPE=library
#export VERSION=3.2.2
#export VERSIONDATE=20210120
#export VERSION=3.3.0
#export VERSIONDATE=20210127
#export VERSION=3.3.1
#export VERSIONDATE=20210304
#export VERSION=3.3.2
#export VERSIONDATE=20210320
#export VERSION=3.3.3
#export VERSIONDATE=20210426
#export VERSION=3.3.4
#export VERSIONDATE=20211025
export VERSION=3.4.0
export VERSIONDATE=20211220
wl-showstatus --package-version
export DEPENDENCIES=pcre2,gnutls,libmicrohttpd
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/risoflora/libsagui/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/risoflora/libsagui/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# don't build dependancies
sed -i.bak -e "s/add_dependencies(sagui/#&/" src/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSG_HTTPS_SUPPORT:BOOL=ON -DSG_HTTP_COMPRESSION:BOOL=ON -DPCRE2_JIT_SUPPORT:BOOL=ON -D__SG_MHD_INCLUDED:BOOL=ON -DMHD_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DMHD_ARCHIVE_LIB:STRING=-lmicrohttpd -D__SG_ZLIB_INCLUDED:BOOL=ON -DZLIB_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DZLIB_ARCHIVE_LIB:STRING=-lz -D__SG_PCRE2_INCLUDED:BOOL=ON -DPCRE2_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DPCRE2_ARCHIVE_LIB:STRING=-lpcre2-8 -DSG_BUILD_EXAMPLES:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DSG_EXTERN= -DPCRE2_STATIC" -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DSG_HTTPS_SUPPORT:BOOL=ON -DSG_HTTP_COMPRESSION:BOOL=ON -DPCRE2_JIT_SUPPORT:BOOL=ON -D__SG_MHD_INCLUDED:BOOL=ON -DMHD_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DMHD_ARCHIVE_LIB:STRING=-lmicrohttpd -D__SG_ZLIB_INCLUDED:BOOL=ON -DZLIB_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DZLIB_ARCHIVE_LIB:STRING=-lz -D__SG_PCRE2_INCLUDED:BOOL=ON -DPCRE2_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DPCRE2_ARCHIVE_LIB:STRING=-lpcre2-8 -DSG_BUILD_EXAMPLES:BOOL=OFF -S. -Bbuild_shared &&
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lpcre2-8.dll/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



