export NAME="wolfSSL"
export STATUS=
#export URL=https://www.wolfssl.com/
export URL=https://www.wolfssl.com/products/wolfssl/
export BASENAME=wolfssl
export DESCRIPTION="The wolfSSL embedded SSL library (formerly CyaSSL) is a lightweight SSL/TLS library written in ANSI C and targeted for embedded, RTOS, and resource-constrained environments - primarily because of its small size, speed, and feature set."
export CATEGORY=security
export TYPE=library
#export VERSION=3.12.0
#export VERSIONDATE=20170926
#export VERSION=4.2.0
#export VERSIONDATE=20191219
#export VERSION=4.4.0
#export VERSIONDATE=20200819
#export VERSION=4.6.0
#export VERSIONDATE=20210121
#export VERSION=4.7.0
#export VERSIONDATE=20210216
#export VERSION=4.8.0
#export VERSIONDATE=20210713
#export VERSION=4.8.1
#export VERSIONDATE=20210724
#export VERSION=5.0.0
#export VERSIONDATE=20211102
#export VERSION=5.1.0
#export VERSIONDATE=20211229
#export VERSION=5.1.1
#export VERSIONDATE=20220104
#export VERSION=5.2.0
#export VERSIONDATE=20220222
#export VERSION=5.3.0
#export VERSIONDATE=20220504
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=5.4.0
#export VERSIONDATE=20220712
#export VERSION=5.5.0
#export VERSIONDATE=20220831
#export VERSION=5.5.1
#export VERSIONDATE=20220928
#export VERSION=5.5.2
#export VERSIONDATE=20221029
#export VERSION=5.5.3
#export VERSIONDATE=20221104
export VERSION=5.5.4
export VERSIONDATE=20221222
wl-showstatus --package-version
export DEPENDENCIES=libdl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://www.wolfssl.com/wordpress/wolfssl_download/downloadForm.php"
#export DOWNLOADURL=https://www.wolfssl.com/download/
export DOWNLOADURL=https://github.com/wolfSSL/wolfssl/releases
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=
#export DOWNLOADSOURCEURL=https://fossies.org/linux/misc/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://github.com/wolfSSL/wolfssl/archive/v$VERSION-stable.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#unzip -oq $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.zip
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION-stable.tar.gz
cd $BASENAME-$VERSION-stable
## fix wolfssl/wolfcrypt/sp_int.h (version >= 5.5.2 <= 5.5.3)
##### Bug reported: https://github.com/wolfSSL/wolfssl/pull/5755
#patch -ulbf wolfssl/wolfcrypt/sp_int.h << EOF
#@@ -276,2 +276,5 @@
#     typedef  sp_int128  sp_int_sword;
#+#else
#+    typedef  sp_uint64  sp_int_word;
#+    typedef   sp_int64  sp_int_sword;
# #endif
#EOF
wl-showstatus configure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-keygen --enable-certgen --enable-certreq &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-keygen --enable-certgen --enable-certreq --enable-pkcs11 -enable-eccsi CFLAGS="-I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -ldl" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-keygen --enable-certgen --enable-certreq --enable-pkcs11 -enable-eccsi CFLAGS="-I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -ldl -lcrypt32" &&
 wl-showstatus build-install &&
 make install-strip &&
 strip $INSTALLPREFIX/bin/*.dll &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION-stable
####TO DO: many more configure options to enable



#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DWOLFSSL_OPENSSLEXTRA:BOOL=OFF -DWOLFSSL_TPM:BOOL=ON -DWOLFSSL_CERTGEN:BOOL=ON -DWOLFSSL_CERTREQ:BOOL=ON -DWOLFSSL_CERTEXT:BOOL=ON -DWOLFSSL_BASE64_ENCODE:BOOL=ON -DWOLFSSL_SHA224:BOOL=ON -DWOLFSSL_SHA3:BOOL=ON -DWOLFSSL_OCSP:BOOL=ON -DWOLFSSL_SESSION_TICKET:BOOL=ON -DWOLFSSL_EXAMPLES:BOOL=OFF -DWOLFSSL_CRYPT_TESTS:BOOL=OFF -S. -Bbuild_static &&
# #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DWOLFSSL_OPENSSLEXTRA:BOOL=OFF -DWOLFSSL_TPM:BOOL=ON -DWOLFSSL_CERTGEN:BOOL=ON -DWOLFSSL_CERTREQ:BOOL=ON -DWOLFSSL_CERTEXT:BOOL=ON -DWOLFSSL_BASE64_ENCODE:BOOL=ON -DWOLFSSL_SHA224:BOOL=ON -DWOLFSSL_SHA3:BOOL=ON -DWOLFSSL_OCSP:BOOL=ON -DWOLFSSL_SESSION_TICKET:BOOL=ON -DWOLFSSL_EXAMPLES:BOOL=OFF -DWOLFSSL_CRYPT_TESTS:BOOL=OFF -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# # fix missing link libraries
# sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lcrypt32/" build_shared/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# #ninja -Cbuild_static library/install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION-stable
