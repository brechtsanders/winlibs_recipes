#export NAME="gexiv2"
#export STATUS=
##export URL=http://redmine.yorba.org/projects/gexiv2/wiki
#export URL=https://wiki.gnome.org/Projects/gexiv2
#export BASENAME=gexiv2
#export DESCRIPTION="gexiv2 is a GObject-based wrapper around the Exiv2 library. It makes the basic features of Exiv2 available to GNOME applications."
#export CATEGORY=metadata
#export TYPE=library
##export VERSION=0.5.0
##export VERSIONDATE=20121028
##export VERSION=0.6.0
##export VERSIONDATE=20130319
#export VERSION=0.7.0
#export VERSIONDATE=20131004
#wl-showstatus --package-version
#export DEPENDANCIES=glib2,exiv2
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.yorba.org/download/gexiv2/ libgexiv2-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://www.yorba.org/download/gexiv2/`echo $VERSION|sed -e "s/^\([0-9][0-9]*\.[0-9][0-9]*\)\..*$/\1/"`/libgexiv2_$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://www.yorba.org/download/gexiv2/`echo $VERSION|sed -e "s/^\([0-9][0-9]*\.[0-9][0-9]*\)\..*$/\1/"`/libgexiv2-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfJ $TARBALLDIR/$BASENAME/libgexiv2_$VERSION.tar.xz
#tar xfJ $TARBALLDIR/$BASENAME/libgexiv2-$VERSION.tar.xz
#cd libgexiv2-$VERSION
## fix libtool for building DLLs
##sed -e "s/\(allow_undefined=\)yes/\1no/" `which libtool` > libtool
#cp -f `which libtool` libtool
#patch -ulbf libtool << EOF
#--- libtool  2010-02-22 16:59:52 +0100
#+++ libtool  2012-10-29 10:13:28 +0100
#@@ -3105,2 +3105,5 @@
#       ;;
#+    *MS-DOS\\ executable*)
#+      win32_libid_type="x86 DLL"
#+      ;;
#     esac
#@@ -4049,6 +4052,6 @@
#       # that all symbols are satisfied, otherwise we get a static library.
#-      allow_undefined=yes
#+      allow_undefined=no
#       ;;
#     *)
#-      allow_undefined=yes
#+      allow_undefined=no
#       ;;
#EOF
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --disable-introspection --release &&
# wl-showstatus build-install &&
# #make &&
# PATH=.:$PATH make LDFLAGS="-Wl,-no-undefined" &&
# make install &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libgexiv2-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gexiv2-$VERSION
#####To do: build DLL



#export NAME="gexiv2"
#export STATUS=
##export URL=http://redmine.yorba.org/projects/gexiv2/wiki
#export URL=https://wiki.gnome.org/Projects/gexiv2
#export BASENAME=gexiv2
#export DESCRIPTION="gexiv2 is a GObject-based wrapper around the Exiv2 library. It makes the basic features of Exiv2 available to GNOME applications."
#export CATEGORY=metadata
#export TYPE=library
##export VERSION=0.5.0
##export VERSIONDATE=20121028
##export VERSION=0.6.0
##export VERSIONDATE=20130319
#export VERSION=0.7.0
#export VERSIONDATE=20131004
#wl-showstatus --package-version
#export DEPENDANCIES=glib2,exiv2
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.yorba.org/download/gexiv2/ libgexiv2-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://www.yorba.org/download/gexiv2/`echo $VERSION|sed -e "s/^\([0-9][0-9]*\.[0-9][0-9]*\)\..*$/\1/"`/libgexiv2_$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://www.yorba.org/download/gexiv2/`echo $VERSION|sed -e "s/^\([0-9][0-9]*\.[0-9][0-9]*\)\..*$/\1/"`/libgexiv2-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfJ $TARBALLDIR/$BASENAME/libgexiv2_$VERSION.tar.xz
#tar xfJ $TARBALLDIR/$BASENAME/libgexiv2-$VERSION.tar.xz
#cd libgexiv2-$VERSION
## fix libtool for building DLLs
##sed -e "s/\(allow_undefined=\)yes/\1no/" `which libtool` > libtool
#cp -f `which libtool` libtool
#patch -ulbf libtool << EOF
#--- libtool  2010-02-22 16:59:52 +0100
#+++ libtool  2012-10-29 10:13:28 +0100
#@@ -3105,2 +3105,5 @@
#       ;;
#+    *MS-DOS\\ executable*)
#+      win32_libid_type="x86 DLL"
#+      ;;
#     esac
#@@ -4049,6 +4052,6 @@
#       # that all symbols are satisfied, otherwise we get a static library.
#-      allow_undefined=yes
#+      allow_undefined=no
#       ;;
#     *)
#-      allow_undefined=yes
#+      allow_undefined=no
#       ;;
#EOF
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --disable-introspection --release &&
# wl-showstatus build-install &&
# #make &&
# PATH=.:$PATH make LDFLAGS="-Wl,-no-undefined" &&
# make install &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libgexiv2-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gexiv2-$VERSION
#####To do: build DLL



#export NAME="gexiv2"
#export STATUS=
##export URL=http://redmine.yorba.org/projects/gexiv2/wiki
#export URL=https://wiki.gnome.org/Projects/gexiv2
#export BASENAME=gexiv2
#export DESCRIPTION="gexiv2 is a GObject-based wrapper around the Exiv2 library. It makes the basic features of Exiv2 available to GNOME applications."
#export CATEGORY=metadata
#export TYPE=library
##export VERSION=0.10.1
##export VERSIONDATE=20140618
##export VERSION=0.10.2
##export VERSIONDATE=20150208
##export VERSION=0.10.3
##export VERSIONDATE=20150728
##export VERSION=0.10.4
##export VERSIONDATE=20160816
##export VERSION=0.10.5
##export VERSIONDATE=20170320
##export VERSION=0.10.6
##export VERSIONDATE=20170513
##export VERSION=0.10.7
##export VERSIONDATE=20171224
##export VERSION=0.10.8
##export VERSIONDATE=20180206
#export VERSION=0.10.10
#export VERSIONDATE=20190101
#export DEPENDANCIES=glib2,exiv2
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#####64-bit: libtool: link: can not build a shared library
##export VERSION=0.10.9
##export VERSIONDATE=20181118
##export VERSION=0.11.0
##export VERSIONDATE=20190109
##export VERSION=0.12.0
##export VERSIONDATE=20190312
##export VERSION=0.12.1
##export VERSIONDATE=20200524
#wl-showstatus --package-version
##export DEPENDANCIES=glib2,exiv2
##export OPTIONALDEPENDANCIES=
##export BUILDDEPENDANCIES=meson
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://www.yorba.org/download/gexiv2/ libgexiv2-"
#export DOWNLOADURL="https://download.gnome.org/sources/gexiv2/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://download.gnome.org/sources/gexiv2/$(echo $VERSION|sed -e "s/^\([0-9][0-9]*\.[0-9][0-9]*\)\..*$/\1/")/gexiv2-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfJ $TARBALLDIR/$BASENAME/gexiv2-$VERSION.tar.xz
#cd gexiv2-$VERSION
## fix missing overflow_error in gexiv2/gexiv2-metadata-gps.cpp (version >= 0.10.5)
#mv gexiv2/gexiv2-metadata-gps.cpp gexiv2/gexiv2-metadata-gps.cpp.bak &&
#echo "#include <stdexcept>" > gexiv2/gexiv2-metadata-gps.cpp &&
#cat gexiv2/gexiv2-metadata-gps.cpp.bak >> gexiv2/gexiv2-metadata-gps.cpp
### fix configure.ac for possibly missing AM_PROG_AR
##patch -ulbf configure.ac << EOF
##--- configure.ac  2014-04-25 21:32:42 +0200
##+++ configure.ac  2014-06-18 22:34:54 +0200
##@@ -8,3 +8,3 @@
## AM_INIT_AUTOMAKE([1.11 -Wall no-define foreign dist-xz no-dist-gzip tar-ustar])
##-AM_PROG_AR
##+m4_ifdef([AM_PROG_AR], [AM_PROG_AR])
## LT_PREREQ([2.2])
##EOF
#wl-showstatus configure &&
##autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --disable-introspection --disable-vala &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gexiv2-$VERSION
#####To do: also build static library



export NAME="gexiv2"
export STATUS=
#export URL=http://redmine.yorba.org/projects/gexiv2/wiki
export URL=https://wiki.gnome.org/Projects/gexiv2
export BASENAME=gexiv2
export DESCRIPTION="gexiv2 is a GObject-based wrapper around the Exiv2 library. It makes the basic features of Exiv2 available to GNOME applications."
export CATEGORY=metadata
export TYPE=library
#export VERSION=0.10.9
#export VERSIONDATE=20181118
#export VERSION=0.11.0
#export VERSIONDATE=20190109
#export VERSION=0.12.0
#export VERSIONDATE=20190312
#export VERSION=0.12.1
#export VERSIONDATE=20200524
#export VERSION=0.12.2
#export VERSIONDATE=20210220
####ccache gcc @tools/f9d35d4@@gexiv2-dump@exe/meson-generated_gexiv2-dump.c.obj.rsptools/f9d35d4@@gexiv2-dump@exe/gexiv2-dump.c:16:10: fatal error: gexiv2gexiv2.h: No such file or directory
#export VERSION=0.12.3
#export VERSIONDATE=20210816
#export DEPENDANCIES=glib2,exiv2,gobject-introspection
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=meson,ninja
#export VERSION=0.13.0
#export VERSIONDATE=20210816
export VERSION=0.14.0
export VERSIONDATE=20210919
wl-showstatus --package-version
export DEPENDANCIES=glib2,exiv2,gobject-introspection,vala
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=meson,ninja
#export BUILDDEPENDANCIES=meson,ninja,gtk-doc
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.yorba.org/download/gexiv2/ libgexiv2-"
export DOWNLOADURL="https://download.gnome.org/sources/gexiv2/"
#export DOWNLOADURL="https://gitlab.gnome.org/GNOME/gexiv2/-/tags"
#export DOWNLOADURL="https://github.com/GNOME/gexiv2/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://download.gnome.org/sources/gexiv2/$(echo $VERSION|sed -e "s/^\([0-9][0-9]*\.[0-9][0-9]*\)\..*$/\1/")/gexiv2-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/gexiv2-$VERSION.tar.xz
cd gexiv2-$VERSION
# fix MSVC issue
mkdir -p winfix
cp -rf $PYDIR/lib/distutils winfix/
patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
@@ -85,3 +85,3 @@
         else:
-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
+            return None

EOF
# fix detection of Python (version >= 0.13.0)
sed -i.bak -e "s?\(find_installation(\)'python3'?\1'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
# skip building test (version >= 0.14.0)
sed -i.bak2 -e "s/^subdir('test')/#&/" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dintrospection=true -Dvapi=false -Dgtk_doc=false . build_both &&
 #PKG_CONFIG= PYTHONPATH=$MINGWPREFIX/lib/python$($PYDIR/python.exe --version|sed -ne "s/^Python \([0-9]*\.[0-9]*\).*/\1/p")/site-packages:$MINGWPREFIX/lib:$PYTHONPATH $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dtools=true -Dpython3=true -Dintrospection=true -Dvapi=true -Dgtk_doc=false . build_both &&
 #-Dpython3=true -Dpython3_girdir=$MINGWPREFIX/lib 
 #PKG_CONFIG= PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dintrospection=true -Dvapi=true -Dgtk_doc=true . build_both &&
 PKG_CONFIG= PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dpython3=false -Dintrospection=true -Dvapi=true -Dgtk_doc=false . build_both &&
 # fix slash/backslash path issue when calling Python from Ninja
 sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 ## fix Python path issues in meson_exe
 #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PKG_CONFIG= PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib:$PYTHONPATH ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gexiv2-$VERSION
####TO DO: build with -Dgtk_doc=true



