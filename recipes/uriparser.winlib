export NAME="uriparser"
export STATUS=
#export URL=http://uriparser.sourceforge.net/
export URL=https://uriparser.github.io
#export URL=https://github.com/uriparser/uriparser
export BASENAME=uriparser
export DESCRIPTION="uriparser is a strictly RFC 3986 compliant URI parsing library written in C. uriparser is cross-platform, fast, supports Unicode and is licensed under the New BSD license."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=0.7.9
#export VERSIONDATE=20131002
#export VERSION=0.8.0
#export VERSIONDATE=20131221
#export VERSION=0.8.0.1
#export VERSIONDATE=20140713
#export VERSION=0.8.1
#export VERSIONDATE=20141020
#export VERSION=0.8.2
#export VERSIONDATE=20150428
#export VERSION=0.8.3
#export VERSIONDATE=20151005
#export VERSION=0.8.4
#export VERSIONDATE=20151013
#export VERSION=0.8.5
#export VERSIONDATE=20180207
#export VERSION=0.8.6
#export VERSIONDATE=20180818
#export VERSION=0.9.0
#export VERSIONDATE=20181027
#export VERSION=0.9.1
#export VERSIONDATE=20190106
#wl-showstatus --package-version
##export DEPENDENCIES=doxygen,graphviz
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
##export OPTIONALDEPENDENCIES=cpptest
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=0.9.2
#export VERSIONDATE=20190423
#export VERSION=0.9.3
#export VERSIONDATE=20190428
#export VERSION=0.9.4
#export VERSIONDATE=20200601
#export VERSION=0.9.5
#export VERSIONDATE=20210319
#export VERSION=0.9.6
#export VERSIONDATE=20220107
export VERSION=0.9.7
export VERSIONDATE=20221006
wl-showstatus --package-version
#export DEPENDENCIES=doxygen,graphviz
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export OPTIONALDEPENDENCIES=cpptest
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=BSD
#export DOWNLOADURL="http://sourceforge.net/projects/uriparser/files/Sources/"
export DOWNLOADURL="https://github.com/uriparser/uriparser/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/uriparser/Sources/$VERSION/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://github.com/uriparser/uriparser/releases/download/uriparser-$VERSION/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
## fix missing files and missing inet_ntop (version >= 0.8.0)
#mkdir -p winfix/arpa winfix/netinet
#touch winfix/netinet/in.h
#cat > winfix/arpa/inet.h << EOF
##include <io.h>
##include <stdio.h>
##include <winsock2.h>
##include <ws2tcpip.h>
#static const char* inet_ntop (int af, void const *src, char *dst, size_t size)
#{
#  switch (af) {
#    case AF_INET:
#    {
#      char tmp[16];
#      sprintf(tmp, "%u.%u.%u.%u", ((unsigned char*)src)[0], ((unsigned char*)src)[1], ((unsigned char*)src)[2], ((unsigned char*)src)[3]);
#      return strcpy(dst, tmp);
#    }
#    default:
#      return NULL;//to do: implement AF_INET6
#  }
#}
#EOF
## fix tool/uriparse.c (version >= 0.8.5)
#patch -ulbf tool/uriparse.c << EOF
#@@ -38,3 +38,9 @@
#  */
#+#ifdef _WIN32
#+#define _WIN32_WINNT 0x0600
#+#include <winsock2.h>
#+#include <ws2tcpip.h>
#+#else
# #include <sys/socket.h>
#+#endif
# #include <stdio.h>
#@@ -42,4 +48,6 @@
# #include <uriparser/Uri.h>
#+#ifndef _WIN32
# #include <arpa/inet.h>
# #include <netinet/in.h>
#+#endif
#
#EOF
## fix tool/uriparse.c (version = 0.9.5)
#patch -ulbf tool/uriparse.c << EOF
#@@ -43,8 +43,8 @@
# #ifdef _WIN32
#+# if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600
#+#  undef WIN32_WINNT
#+#  define _WIN32_WINNT 0x0600
#+# endif
# # include <winsock2.h>
# # include <ws2tcpip.h>
#-# ifdef __MINGW32__
#-WINSOCK_API_LINKAGE const char WSAAPI inet_ntop(
#-               int af, const void *src, char *dst, socklen_t size);
#-# endif
# #else
#EOF
## fix already defined inet_ntop() in tool/uriparse.c (version >= 0.9.6)
#patch -ulbf tool/uriparse.c << EOF
#@@ -45,3 +45,3 @@
# # include <ws2tcpip.h>
#-# ifdef __MINGW32__
#+# if defined(__MINGW32__) && !defined(__MINGW32_MAJOR_VERSION)
# WINSOCK_API_LINKAGE const char * WSAAPI inet_ntop(
#EOF
# fix already defined inet_ntop() in tool/uriparse.c (version >= 0.9.6)
####fix proposed via pull request: https://github.com/uriparser/uriparser/pull/133
patch -ulbf tool/uriparse.c << EOF
@@ -45,3 +45,3 @@
 # include <ws2tcpip.h>
-# ifdef __MINGW32__
+# if defined(__MINGW32__) && !defined(InetNtopA)
 WINSOCK_API_LINKAGE const char * WSAAPI inet_ntop(
EOF
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-test &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-test CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-doc --disable-test CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" &&
# wl-showstatus build-install &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DURIPARSER_BUILD_TOOLS:BOOL=ON -DURIPARSER_BUILD_DOCS:BOOL=OFF -DURIPARSER_BUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DURIPARSER_BUILD_TOOLS:BOOL=ON -DURIPARSER_BUILD_DOCS:BOOL=OFF -DURIPARSER_BUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DURIPARSER_BUILD_WCHAR_T:BOOL=ON -DURIPARSER_BUILD_TOOLS:BOOL=ON -DURIPARSER_BUILD_DOCS:BOOL=OFF -DURIPARSER_BUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DURIPARSER_BUILD_WCHAR_T:BOOL=ON -DURIPARSER_BUILD_TOOLS:BOOL=ON -DURIPARSER_BUILD_DOCS:BOOL=OFF -DURIPARSER_BUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



