export NAME="aravis"
export STATUS=
export URL=http://live.gnome.org/Aravis
export BASENAME=aravis
export DESCRIPTION="Aravis is a glib/gobject based library for the video acquisition of Genicam cameras. It currently only implements an ethernet camera protocol used for industrial cameras."
export CATEGORY=
export TYPE=library
#export VERSION=0.1.4
#export VERSIONDATE=20110202
#export VERSION=0.1.5
#export VERSIONDATE=20110217
#export VERSION=0.1.6
#export VERSIONDATE=20110426
#export VERSION=0.1.7
#export VERSIONDATE=20110520
#export VERSION=0.1.8
#export VERSIONDATE=20110621
#export VERSION=0.1.9
#export VERSIONDATE=20110627
#export VERSION=0.1.10
#export VERSIONDATE=20110713
#export VERSION=0.1.11
#export VERSIONDATE=20120119
#export VERSION=0.1.12
#export VERSIONDATE=20120305
#export VERSION=0.1.13
#export VERSIONDATE=20120420
#export VERSION=0.1.14
#export VERSIONDATE=20120618
#export VERSION=0.1.15
#export VERSIONDATE=20120808
#export VERSION=0.2.0
#export VERSIONDATE=20121017
#export VERSION=0.2.1
#export VERSIONDATE=20130118
#export VERSION=0.2.2
#export VERSIONDATE=20130501
#export VERSION=0.2.3
#export VERSIONDATE=20130723
#export VERSION=0.3.0
#export VERSIONDATE=20131019
#export VERSION=0.3.1
#export VERSIONDATE=20131222
#export VERSION=0.3.2
#export VERSIONDATE=20140515
#export VERSION=0.3.3
#export VERSIONDATE=20140815
#export VERSION=0.3.4
#export VERSIONDATE=20140816
#export VERSION=0.3.5
#export VERSIONDATE=20140820
#export VERSION=0.3.7
#export VERSIONDATE=20150118
#export VERSION=0.3.8
#export VERSIONDATE=20160127
#export VERSION=0.4.0
#export VERSIONDATE=20160804
#export VERSION=0.4.1
#export VERSIONDATE=20160831
#export VERSION=0.5.0
#export VERSIONDATE=20160810
#export VERSION=0.5.1
#export VERSIONDATE=20160825
#export VERSION=0.5.2
#export VERSIONDATE=20160919
#export VERSION=0.5.3
#export VERSIONDATE=20160925
#export VERSION=0.5.4
#export VERSIONDATE=20160929
#export VERSION=0.5.5
#export VERSIONDATE=20161008
#export VERSION=0.5.6
#export VERSIONDATE=20161021
#export VERSION=0.5.7
#export VERSIONDATE=20170210
#export VERSION=0.5.8
#export VERSIONDATE=20170411
#export VERSION=0.5.9
#export VERSIONDATE=20170519
#export VERSION=0.5.10
#export VERSIONDATE=20171002
#export VERSION=0.5.11
#export VERSIONDATE=20180130
#export VERSION=0.5.12
#export VERSIONDATE=20180504
#export VERSION=0.5.13
#export VERSIONDATE=20180625
#export VERSION=0.6.0
#export VERSIONDATE=20180911
#export VERSION=0.6.1
#export VERSIONDATE=20190116
#export VERSION=0.6.2
#export VERSIONDATE=20190426
#export VERSION=0.6.3
#export VERSIONDATE=20190611
#export VERSION=0.6.4
#export VERSIONDATE=20190902
#export DEPENDENCIES=cairo,gtk3,gstreamer
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=0.7.0
#export VERSIONDATE=20190926
#export VERSION=0.7.1
#export VERSIONDATE=20190928
####src/arvgvinterface.c:80:2: warning: implicit declaration of function 'getifaddrs' [-Wimplicit-function-declaration]
####src/arvgvinterface.c:83:65: error: dereferencing pointer to incomplete type
#export VERSION=0.7.2
#export VERSIONDATE=20191017
#export VERSION=0.7.3
#export VERSIONDATE=20191108
#export VERSION=0.7.4
#export VERSIONDATE=20200410
#export VERSION=0.7.5
#export VERSIONDATE=20200608
#export VERSION=0.8.0
#export VERSIONDATE=20200820
#export VERSION=0.8.1
#export VERSIONDATE=20200904
#export VERSION=0.8.2
#export VERSIONDATE=20201016
#export VERSION=0.8.4
#export VERSIONDATE=20201125
#export VERSION=0.8.5
#export VERSIONDATE=20201127
#export VERSION=0.8.6
#export VERSIONDATE=20210209
#export VERSION=0.8.7
#export VERSIONDATE=20210329
#export VERSION=0.8.8
#export VERSIONDATE=20210421
#export VERSION=0.8.9
#export VERSIONDATE=20210422
export VERSION=0.8.10
export VERSIONDATE=20210512
####tests/realtimetest.c:35:10: fatal error: sys/resource.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=zlib,glib2,gettext,libxml2,cairo,gtk3,libnotify,libusb,gstreamer,gst-plugins-base
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/aravis/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix/sys winfix/net winfix/arpa
echo "#include <winsock2.h>" > winfix/sys/socket.h
echo "#include <ws2tcpip.h>" > winfix/ifaddrs.h
touch winfix/net/if.h winfix/arpa/inet.h winfix/netdb.h
# fix missing arv__memdup in src/arvnetwork.c (version >= 0.8.7)
patch -ulbf src/arvnetwork.c << EOF
@@ -43,2 +43,9 @@
 #ifdef G_OS_WIN32
+static void* arv__memdup (void* src, size_t len)
+{
+  char* result;
+  if ((result = g_malloc(len)) != NULL)
+    memcpy(result, src, len);
+  return result;
+}

EOF
# fix missing localtime_r in src/arvdebug.c (version >= 0.8.8)
mv src/arvdebug.c src/arvdebug.c.bak &&
echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > src/arvdebug.c &&
cat src/arvdebug.c.bak >> src/arvdebug.c
# fix viewer/data/meson.build (version >= 0.8.10)
patch -ulbf viewer/data/meson.build << EOF
@@ -10,3 +10,3 @@

-desktop = i18n.merge_file ('desktop',
+desktop = i18n.merge_file (output: 'desktop',
                           input: configure_file (input: files('arv-viewer.desktop.in.in'),
EOF
## fix problem detecting GNU gettext tools on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# mv configure configure.bak
# sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
#fi
#wl-showstatus configure &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-cairo --enable-gtk --enable-gstreamer --disable-introspection CFLAGS="-I`pwd`/winfix" LDFLAGS="-no-undefined -Wl,-no-undefined" &&
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-cairo --enable-gtk --enable-gstreamer --disable-introspection CFLAGS="-I`pwd`/winfix" LDFLAGS="-Wl,-no-undefined" &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK
#####arvgvinterface.c:115: warning: implicit declaration of function 'getifaddrs'
#####arvgvinterface.c:118: error: 'IFF_POINTOPOINT' undeclared (first use in this function)
#####See also: http://code.google.com/p/openpgm/source/browse/trunk/openpgm/pgm/getifaddrs.c?spec=svn982&r=982
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Ddocumentation=false -Dintrospection=false -Dtests=false -Dc_args="-I$(pwd)/winfix" . build_both &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Ddocumentation=disabled -Dintrospection=disabled -Dtests=false -Dc_args="-I$(pwd)/winfix" . build_both &&
 ## fix slash/backslash path issue when calling Python from Ninja
 #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 # fix Python path issues in meson_exe
 sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



