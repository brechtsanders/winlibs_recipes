#export NAME="serf"
#export STATUS=
#export URL=https://code.google.com/p/serf/
#export BASENAME=serf
#export DESCRIPTION="High-performance asynchronous HTTP client library"
#export CATEGORY=communication
#export TYPE=library
##export VERSION=1.3.7
##export VERSIONDATE=20140818
#export VERSION=1.3.8
#export VERSIONDATE=20141021
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=Apache
#export DOWNLOADURL="http://serf.googlecode.com/svn/src_releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://serf.googlecode.com/svn/src_releases/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
#PYTHONPATH=$MINGWPREFIX/python/scons $PYDIR/python.exe $MINGWPREFIX/python/Scripts/scons.py --prefix=$INSTALLPREFIX &&
##PYTHONPATH=$MINGWPREFIX/python/scons $PYDIR/python.exe $MINGWPREFIX/python/Scripts/scons.py PREFIX=$INSTALLPREFIX CC=$(which gcc) &&
#    echo OK
#  ./configure --help
#  head COPYING* LICENSE*
#  ls -l COPYING* LICENSE*
#wl-showstatus configure &&
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
##fi
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# wl-showstatus build &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#    make install-pkgconfigDATA
##    cmake.exe . -LH; rm -f CMakeCache.txt
##wl-showstatus configure
##rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
## wl-showstatus build &&
## make install/strip &&
##    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Apache Serf"
export STATUS=
export URL=http://serf.apache.org/
export BASENAME=serf
export DESCRIPTION="The serf library is a high performance C-based HTTP client library built upon the Apache Portable Runtime (APR) library."
export CATEGORY=communication
export TYPE=library
export VERSION=1.3.9
export VERSIONDATE=20180413
####scons: *** Multiple ways to build the same target were specified for: libserf-1.dll
wl-showstatus --package-version
export DEPENDANCIES=zlib,openssl,apr,apr-util
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=scons
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="http://serf.apache.org/download"
#export DOWNLOADURL="https://archive.apache.org/dist/serf/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://www.apache.org/dist/serf/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix missing ERR_GET_FUNC in buckets/ssl_buckets.c (version >= 1.3.9)
patch -ulbf buckets/ssl_buckets.c << EOF
@@ -1328,3 +1328,7 @@
                 printf("OpenSSL cert error: %d %d %d\\n", ERR_GET_LIB(err),
+#ifdef ERR_GET_FUNC
                        ERR_GET_FUNC(err),
+#else
+                       ERR_GET_RFLAGS(err),
+#endif
                        ERR_GET_REASON(err));
EOF
patch -ulbf SConstruct << EOF
@@ -168,3 +168,3 @@
                   'SERF_PATCH_VERSION ([0-9]+)',
-                  env.File('serf.h').get_contents(),
+                  env.File('serf.h').get_contents().decode('utf-8'),
                   re.DOTALL)
@@ -185,3 +185,3 @@
 if unknown:
-  print 'Warning: Used unknown variables:', ', '.join(unknown.keys())
+  print ('Warning: Used unknown variables:', ', '.join(unknown.keys()))

@@ -217,3 +217,3 @@
 # runtime patch levels have to be identical.
-if sys.platform != 'sunos5':
+if sys.platform != 'sunos5' and sys.platform != 'win32':
   env['SHLIBVERSION'] = '%d.%d.%d' % (MAJOR, MINOR, 0)
@@ -233,3 +233,3 @@

-if sys.platform != 'win32':
+if sys.platform != 'win32_MSVC':
   def CheckGnuCC(context):
EOF
sed -i.bak -e "s/'\(z\)lib\.lib'/'\1'/; s/'lib\([^ ]*\)\.lib'/'\1'/g; s/'\([^ ]*\)\.lib'/'\1'/g" SConstruct
pushd $MINGWPREFIX/include &&
INCDIR=$(pwd -W) &&
popd
pushd $MINGWPREFIX/lib &&
LIBDIR=$(pwd -W) &&
popd
wl-showstatus configure-build-install &&
 #PYTHONPATH=$MINGWPREFIX/python/scons $PY2DIR/python.exe $MINGWPREFIX/python/Scripts/scons.py PREFIX=$INSTALLPREFIX LIBDIR=$INSTALLPREFIX/lib CPPFLAGS="-I$INCDIR -I$INCDIR/apr-1" LINKFLAGS="-L$LIBDIR" install &&
 PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $MINGWPREFIX/python/Scripts/scons-script.py PREFIX=$INSTALLPREFIX LIBDIR=$INSTALLPREFIX/lib CPPFLAGS="-I$INCDIR -I$INCDIR/apr-1" LINKFLAGS="-L$LIBDIR" install &&
 #PYTHONPATH=$MINGWPREFIX/python/scons:$MINGWPREFIX/python/Lib/site-packages $PYDIR/python.exe $MINGWPREFIX/python/Scripts/scons-script.py PREFIX=$INSTALLPREFIX LIBDIR=$INSTALLPREFIX/lib CPPFLAGS="-I$INCDIR -I$INCDIR/apr-1" LINKFLAGS="-L$LIBDIR" install &&
 mkdir -p $INSTALLPREFIX/bin &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 mv -f $INSTALLPREFIX/lib/libserf-1.a $INSTALLPREFIX/lib/libserf-1.dll.a &&
 mv -f $INSTALLPREFIX/lib/liblibserf-1.a $INSTALLPREFIX/lib/libserf-1.a &&
 strip $INSTALLPREFIX/bin/*.dll &&
 sed -i -e "s/\bapr[^ ]*-1\b/-l&/g" $INSTALLPREFIX/lib/pkgconfig/serf-1.pc &&
 sed -i -e "s/^Libs.private:.*$/& -Wl,--as-needed -lws2_32 -lsecur32 -lcrypto -lssl/" $INSTALLPREFIX/lib/pkgconfig/serf-1.pc &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



