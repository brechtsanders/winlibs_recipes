#export NAME="VMime"
#export STATUS=
#export URL=http://www.vmime.org/
#export BASENAME=libvmime
#export DESCRIPTION="VMime is a powerful C++ class library for working with MIME messages and Internet messaging services like IMAP, POP or SMTP. With VMime you can parse, generate and modify messages, and also connect to store and transport services to receive or send messages over the Internet. The library offers all the features to build a complete mail client."
#export CATEGORY=fileformat,communication
#export TYPE=library
##export VERSION=0.9.0
#export VERSION=0.9.1
#export VERSIONDATE=20101116
#wl-showstatus --package-version
#export DEPENDANCIES=libgsasl,libidn,gettext,libiconv,gnutls,zlib,libgcrypt,libgpg-error
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL2
##export DOWNLOADURL="http://sourceforge.net/projects/vmime/files/"
#export DOWNLOADURL="http://sourceforge.net/projects/vmime/files/vmime/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://prdownloads.sourceforge.net/vmime/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
## fix for obsolete libgnutls-config
#patch -ulbf configure << EOF
#--- configure  Sun Oct 19 14:36:20 2008
#+++ configure  Wed Jul 22 11:24:58 2009
#@@ -30794,8 +30794,9 @@
#   no_libgnutls=""
#-  if test "\$LIBGNUTLS_CONFIG" = "no" ; then
#+  if test "\$LIBGNUTLS_CONFIG" = "___no" ; then
#     no_libgnutls=yes
#   else
#-    LIBGNUTLS_CFLAGS=\`\$LIBGNUTLS_CONFIG \$libgnutls_config_args --cflags\`
#-    LIBGNUTLS_LIBS=\`\$LIBGNUTLS_CONFIG \$libgnutls_config_args --libs\`
#-    libgnutls_config_version=\`\$LIBGNUTLS_CONFIG \$libgnutls_config_args --version\`
#+    LIBGNUTLS_CFLAGS=\`pkg-config --dont-define-prefix --cflags gnutls\`
#+    LIBGNUTLS_LIBS=\`pkg-config --dont-define-prefix --libs gnutls\`
#+    libgnutls_config_version=\`pkg-config gnutls --modversion\`
#+    LIBGNUTLS_CONFIG=yes
#EOF
## fix missing definitions in src/net_tls_TLSSession.cpp
#patch -ulbf src/net_tls_TLSSession.cpp << EOF
#--- src/net_tls_TLSSession.cpp  2010-08-19 09:44:52 +0200
#+++ src/net_tls_TLSSession.cpp  2011-12-27 13:37:48 +0100
#@@ -300,6 +300,12 @@
#        ERROR(GNUTLS_E_UNKNOWN_PK_ALGORITHM)
#+#ifdef GNUTLS_E_INIT_LIBEXTRA
#        ERROR(GNUTLS_E_INIT_LIBEXTRA)
#+#endif
#+#ifdef GNUTLS_E_LIBRARY_VERSION_MISMATCH
#        ERROR(GNUTLS_E_LIBRARY_VERSION_MISMATCH)
#+#endif
#        ERROR(GNUTLS_E_NO_TEMPORARY_RSA_PARAMS)
#+#ifdef GNUTLS_E_LZO_INIT_FAILED
#        ERROR(GNUTLS_E_LZO_INIT_FAILED)
#+#endif
#        ERROR(GNUTLS_E_NO_COMPRESSION_ALGORITHMS)
#EOF
### fix conflicting types (version <= 0.9.0)
##echo n|patch -ulbf vmime/platforms/windows/windowsFile.hpp << EOF
##--- vmime/platforms/windows/windowsFile.hpp  Sun Oct 12 10:54:34 2008
##+++ vmime/platforms/windows/windowsFile.hpp  Fri Oct 16 23:27:30 2009
##@@ -76 +76 @@
##-       const length_type getLength();
##+       length_type getLength();
##EOF
##patch -ulbf src/platforms/windows/windowsFile.cpp << EOF
##--- src/platforms/windows/windowsFile.cpp  Sun Oct 12 10:54:32 2008
##+++ src/platforms/windows/windowsFile.cpp  Fri Oct 16 23:33:58 2009
##@@ -271 +271 @@
##-const windowsFile::length_type windowsFile::getLength()
##+windowsFile::length_type windowsFile::getLength()
##EOF
### fix missing gnutls/extra.h
##mkdir -p src/gnutls
##touch src/gnutls/extra.h
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-platform-windows --disable-platform-posix &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lole32" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lole32 -luuid" &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# # fix missing swprintf and vswprintf
# mv src/Makefile src/Makefile.bak &&
# sed -e "s/-ansi -pedantic//" src/Makefile.bak > src/Makefile &&
# # fix undefined reference to IID_IMultiLanguage
# echo "#undef VMIME_HAVE_MLANG_H" >> vmime/config.hpp &&
# wl-showstatus build-install &&
# #make install-strip &&
# ( make install-strip || (
#patch -ulbf src/net_tls_TLSSession.cpp << EOF
#--- src/net_tls_TLSSession.cpp  2010-08-19 09:44:52 +0200
#+++ src/net_tls_TLSSession.cpp  2011-12-27 13:37:48 +0100
#@@ -300,6 +300,12 @@
#        ERROR(GNUTLS_E_UNKNOWN_PK_ALGORITHM)
#+#ifdef GNUTLS_E_INIT_LIBEXTRA
#        ERROR(GNUTLS_E_INIT_LIBEXTRA)
#+#endif
#+#ifdef GNUTLS_E_LIBRARY_VERSION_MISMATCH
#        ERROR(GNUTLS_E_LIBRARY_VERSION_MISMATCH)
#+#endif
#        ERROR(GNUTLS_E_NO_TEMPORARY_RSA_PARAMS)
#+#ifdef GNUTLS_E_LZO_INIT_FAILED
#        ERROR(GNUTLS_E_LZO_INIT_FAILED)
#+#endif
#        ERROR(GNUTLS_E_NO_COMPRESSION_ALGORITHMS)
#EOF
#   make install-strip
# ) || ( 
#  mkdir -p src/gnutls &&
#  touch src/gnutls/extra.h &&
#  make install-strip
# ) ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="VMime"
export STATUS=
export URL=http://www.vmime.org/
export BASENAME=libvmime
export DESCRIPTION="VMime is a powerful C++ class library for working with MIME messages and Internet messaging services like IMAP, POP or SMTP. With VMime you can parse, generate and modify messages, and also connect to store and transport services to receive or send messages over the Internet. The library offers all the features to build a complete mail client."
export CATEGORY=fileformat,communication
export TYPE=library
export VERSION=0.9.2
export VERSIONDATE=20181229
wl-showstatus --package-version
export DEPENDANCIES=libgsasl,libidn,gettext,libiconv,gnutls,zlib,libgcrypt,libgpg-error
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://www.vmime.org/downloads.html"
export DOWNLOADURL="https://github.com/kisli/vmime/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/kisli/vmime/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd vmime-$VERSION
# fix src/vmime/charsetConverter_icu.cpp (version >= 0.9.2)
patch -ulbf src/vmime/charsetConverter_icu.cpp << EOF
@@ -36,4 +36,2 @@

-extern "C"
-{
 #ifndef VMIME_BUILDING_DOC
@@ -44,3 +42,3 @@
 #endif // VMIME_BUILDING_DOC
-}
+#include <windows.h>

EOF
## fix ambiguous make_shared in src/vmime/charset.cpp (version >= 0.9.2)
#patch -ulbf src/vmime/charset.cpp << EOF
#@@ -175,3 +175,3 @@
# {
#-       return make_shared <charset>(m_name);
#+       return std::make_shared <charset>(m_name);
# }
#EOF
## fix ambiguous make_shared in src/vmime/component.cpp (version >= 0.9.2)
#patch -ulbf src/vmime/component.cpp << EOF
#@@ -171,3 +171,3 @@
#        shared_ptr <utility::seekableInputStream> stream =
#-               make_shared <utility::inputStreamStringAdapter>(buffer);
#+               std::make_shared <utility::inputStreamStringAdapter>(buffer);
#
#EOF
## fix ambiguous make_shared in src/vmime/htmlTextPart.cpp (version >= 0.9.2)
#patch -ulbf src/vmime/htmlTextPart.cpp << EOF
#@@ -430,3 +430,3 @@
# {
#-       shared_ptr <stringContentHandler> cts = make_shared <stringContentHandler>(data);
#+       shared_ptr <stringContentHandler> cts = std::make_shared <stringContentHandler>(data);
#        return addObject(cts, encoding::decide(cts), type);
#EOF
# don't use mlang on Windows
sed -i.bak -e "s/\(CHECK.*(\"*\)\(mlang\)/\1DUMMY_\2/i" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DVMIME_BUILD_SHARED_LIBRARY:BOOL=ON -DVMIME_BUILD_STATIC_LIBRARY:BOOL=ON -DVMIME_TLS_SUPPORT_LIB:STRING=gnutls -DVMIME_CHARSETCONV_LIB:STRING=icu -DVMIME_HAVE_MESSAGING_PROTO_SENDMAIL:BOOL=OFF -DVMIME_BUILD_DOCUMENTATION:BOOL=OFF -DVMIME_BUILD_SAMPLES:BOOL=OFF -DVMIME_BUILD_TESTS:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build-install &&
 make -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf vmime-$VERSION



