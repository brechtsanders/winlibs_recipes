export NAME="darktable"
export STATUS=
export URL=https://www.darktable.org/
#export URL=https://github.com/darktable-org/darktable
export BASENAME=darktable
export DESCRIPTION="darktable is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them."
export CATEGORY=graphics
export TYPE=library
#export VERSION=3.0.0
#export VERSIONDATE=20200215
#export VERSION=3.0.1
#export VERSIONDATE=20200310
#export VERSION=3.0.2
#export VERSIONDATE=20200418
#export VERSION=3.2.1
#export VERSIONDATE=20200810
#export VERSION=3.4.0
#export VERSIONDATE=20210110
#export VERSION=3.4.1
#export VERSIONDATE=20210204
#export VERSION=3.4.1.1
#export VERSIONDATE=20210209
#export VERSION=3.6.0
#export VERSIONDATE=20210624
#export VERSION=3.6.1
#export VERSIONDATE=20210910
#export VERSION=3.7.0
#export VERSIONDATE=20210624
#export VERSION=3.8.0
##export VERSIONDATE=20211224
#export VERSION=3.8.1
#export VERSIONDATE=20220211
####CMake Error at bin/cmake_install.cmake:73 (file): file INSTALL cannot find "D:/Prog/winlibs64-11.2.0/mingw64/bin/../lib/gdk-pixbuf-2.0": No error.
#export VERSION=4.0.0
#export VERSIONDATE=20220703
#export VERSION=4.0.1
#export VERSIONDATE=20220918
#export VERSION=4.2.0
#export VERSIONDATE=20221221
#export VERSION=4.4.0
#export VERSIONDATE=20230622
#export VERSION=4.4.1
#export VERSIONDATE=20230701
export VERSION=4.4.2
export VERSIONDATE=20230723
export DEPENDENCIES=zlib,libjpeg,libpng,libopenjpeg,gettext,glib2,gtk3,gdk-pixbuf,atk,pango,cairo,harfbuzz,libsecret,pugixml,libxml2,sqlite3,libjson-glib,graphicsmagick,lensfun,libcurl,khronos-opencl-icd-loader,libwebp,openexr,librsvg,lua,libheif,libgphoto,icu
#libxcf
export OPTIONALDEPENDENCIES=libavif,osm-gps-map,libsecret
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
#export VERSION=4.6.0
#export VERSIONDATE=20231222
#export VERSION=4.6.1
#export VERSIONDATE=20240218
#export VERSION=4.8.0
#export VERSIONDATE=20240622
wl-showstatus --package-version
#export DEPENDENCIES=zlib,libjpeg,libpng,libopenjpeg,gettext,glib2,gtk3,gdk-pixbuf,atk,pango,cairo,harfbuzz,libsecret,pugixml,libxml2,sqlite3,libjson-glib,graphicsmagick,lensfun,libcurl,khronos-opencl-icd-loader,libwebp,openexr,librsvg,lua,libheif,libgphoto,icu,gmic
##libxcf
#export OPTIONALDEPENDENCIES=libavif,osm-gps-map,libsecret
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/darktable-org/darktable/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/darktable-org/darktable/archive/release-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/darktable-org/darktable/releases/download/release-$VERSION/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/darktable-org/darktable/archive/refs/tags/release-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/release-$VERSION.tar.gz
#cd darktable-release-$VERSION
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix detection of exiv2
sed -i.bak -e "s/message.*at least version .* is required/#&/" cmake/modules/FindExiv2.cmake
# fix detection of gphoto2
patch -ulbf src/CMakeLists.txt << EOF
@@ -454,3 +454,3 @@
   #
-  if(\${GPHOTO2_VERSION_STRING} VERSION_LESS "2.5")
+  if("\${GPHOTO2_VERSION_STRING}" VERSION_LESS "2.5")
   else()
EOF
# fix missing FILE_INFO_BY_HANDLE_CLASS in src/common/file_location.c (version >= 3.4.0)
mv src/common/file_location.c src/common/file_location.c.bak &&
echo "#include <windows.h>" > src/common/file_location.c &&
cat src/common/file_location.c.bak >> src/common/file_location.c
#mkdir -p build_test && cd build_test && cmake.exe -G"MSYS Makefiles" .. -LH && echo OK; cd ..; rm -rf build_test
#rm -rf CMakeCache.txt CMakeFiles; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#mkdir -p build_win &&
# wl-showstatus configure &&
# PKG_CONFIG= cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_BUNDLED_PUGIXML:BOOL=OFF -DUSE_BUNDLED_LLVMOPENMP:BOOL=OFF -DUSE_XCF:BOOL=OFF -DUSE_COLORD:BOOL=OFF -DGTK3_INCLUDE_DIRS:PATH=$MINGWPREFIX/include/gtk-3.0 -DGTK3_LIBRARIES:PATH=$MINGWPREFIX/lib -DOpenJPEG_INCLUDE_DIR:PATH="$(pkg-config --cflags-only-I libopenjp2|sed -e "s/^\s*-I\s*\([^ ]*\).*$/\1/")" -DLibsecret_INCLUDE_DIRS:PATH="$(pkg-config --cflags-only-I libsecret-1|sed -e "s/^\s*-I\s*\([^ ]*\).*$/\1/")" -DLibsecret_LIBRARIES:STRING=-lsecret-1 -D_OPENEXR_LIBRARY_IMIMF:STRING=-l$(ls -1 $MINGWPREFIX/lib/libIlmImf-*.dll.a|sort -V|tail -n1|sed -e "s?^.*/lib/lib\(.*\)\.dll\.a\$?\1?") -DUSE_GAME:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DBUILD_USERMANUAL:BOOL=OFF -DBUILD_BENCHMARKING:BOOL=OFF -DBUILD_CMSTEST:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL= -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/cairo -I$MINGWPREFIX/include/gdk-pixbuf-2.0 -I$MINGWPREFIX/include/atk-1.0 -I$MINGWPREFIX/include/harfbuzz" -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/cairo -I$MINGWPREFIX/include/gdk-pixbuf-2.0 -I$MINGWPREFIX/include/atk-1.0 -I$MINGWPREFIX/include/harfbuzz" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lgtk-3 -lintl" -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lgtk-3 -lintl" -DCMAKE_EXE_LINKER_FLAGS:STRING="-Wl,--as-needed -lgtk-3 -lintl" -Dperl_BIN:FILEPATH=$PERLDIR/bin/perl.exe -S. -Bbuild_win &&
# #-DBUILD_MSYS2_INSTALL:BOOL=ON
# #echo "#include <winsock2.h>" >> build_win/src/config.h &&
# # fix error: invalid register for .seh_savexmm
# echo "-fno-asynchronous-unwind-tables" >> build_win/lib/darktable/plugins/CMakeFiles/shadhi.dir/includes_C.rsp &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
#    echo OK
mkdir -p build_win &&
 wl-showstatus configure &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/darktable -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_BUNDLED_PUGIXML:BOOL=OFF -DUSE_BUNDLED_LLVMOPENMP:BOOL=OFF -DUSE_XCF:BOOL=OFF -DUSE_COLORD:BOOL=OFF -DGTK3_INCLUDE_DIRS:PATH=$MINGWPREFIX/include/gtk-3.0 -DGTK3_LIBRARIES:PATH=$MINGWPREFIX/lib -DOpenJPEG_INCLUDE_DIR:PATH="$(pkg-config --cflags-only-I libopenjp2|sed -e "s/^\s*-I\s*\([^ ]*\).*$/\1/")" -DLibsecret_INCLUDE_DIRS:PATH="$(pkg-config --cflags-only-I libsecret-1|sed -e "s/^\s*-I\s*\([^ ]*\).*$/\1/")" -DLibsecret_LIBRARIES:STRING=-lsecret-1 -D_OPENEXR_LIBRARY_IMIMF:STRING=-l$(ls -1 $MINGWPREFIX/lib/libIlmImf-*.dll.a|sort -V|tail -n1|sed -e "s?^.*/lib/lib\(.*\)\.dll\.a\$?\1?") -DUSE_GAME:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DBUILD_USERMANUAL:BOOL=OFF -DBUILD_BENCHMARKING:BOOL=OFF -DBUILD_CMSTEST:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL= -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/cairo -I$MINGWPREFIX/include/gdk-pixbuf-2.0 -I$MINGWPREFIX/include/atk-1.0 -I$MINGWPREFIX/include/harfbuzz" -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/cairo -I$MINGWPREFIX/include/gdk-pixbuf-2.0 -I$MINGWPREFIX/include/atk-1.0 -I$MINGWPREFIX/include/harfbuzz" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lgtk-3 -lintl" -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lgtk-3 -lintl" -DCMAKE_EXE_LINKER_FLAGS:STRING="-Wl,--as-needed -lgtk-3 -lintl" -Dperl_BIN:FILEPATH=$PERLDIR/bin/perl.exe -S. -Bbuild_win &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/darktable -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_BUNDLED_PUGIXML:BOOL=OFF -DUSE_BUNDLED_LLVMOPENMP:BOOL=OFF -DUSE_XCF:BOOL=OFF -DUSE_COLORD:BOOL=OFF -DGTK3_INCLUDE_DIRS:PATH=$MINGWPREFIX/include/gtk-3.0 -DGTK3_LIBRARIES:PATH=$MINGWPREFIX/lib -DOpenJPEG_INCLUDE_DIR:PATH="$(pkg-config --cflags-only-I libopenjp2|sed -e "s/^\s*-I\s*\([^ ]*\).*$/\1/")" -DLibsecret_INCLUDE_DIRS:PATH="$(pkg-config --cflags-only-I libsecret-1|sed -e "s/^\s*-I\s*\([^ ]*\).*$/\1/")" -DLibsecret_LIBRARIES:STRING=-lsecret-1 -D_OPENEXR_LIBRARY_IMIMF:STRING=-l$(ls -1 $MINGWPREFIX/lib/libIlmImf-*.dll.a|sort -V|tail -n1|sed -e "s?^.*/lib/lib\(.*\)\.dll\.a\$?\1?") -DUSE_GAME:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DBUILD_USERMANUAL:BOOL=OFF -DBUILD_BENCHMARKING:BOOL=OFF -DBUILD_CMSTEST:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL= -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/cairo -I$MINGWPREFIX/include/gdk-pixbuf-2.0 -I$MINGWPREFIX/include/atk-1.0 -I$MINGWPREFIX/include/harfbuzz" -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/cairo -I$MINGWPREFIX/include/gdk-pixbuf-2.0 -I$MINGWPREFIX/include/atk-1.0 -I$MINGWPREFIX/include/harfbuzz" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lgtk-3 -lintl" -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lgtk-3 -lintl" -DCMAKE_EXE_LINKER_FLAGS:STRING="-Wl,--as-needed -lgtk-3 -lintl" -Dperl_BIN:FILEPATH=$PERLDIR/bin/perl.exe -S. -Bbuild_win &&
 #-D_osmgpsmap_LIBRARY:STRING=-losmgpsmap-1.0 
 #-DOSMGpsMap:BOOL=OFF 
 # avoid install issues (version >= 3.8.0)
 sed -i.bak -e "s?file(INSTALL .*$(cygpath -m $MINGWDIR)/bin/../?#&?" build_win/bin/cmake_install.cmake &&
 ## fix missing library (version >= 4.2.0)
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -licuin/" build_win/build.ninja &&
 wl-showstatus build &&
 ( PATH=$PATH:$PERLDIR/../c/bin ninja -Cbuild_win || ( PATH=$PATH:$PERLDIR/../c/bin ninja -Cbuild_win -k0; PATH=$PATH:$PERLDIR/../c/bin ninja -Cbuild_win -j1 )) &&
 wl-showstatus build-install &&
 #ninja -Cbuild_win install/strip &&
 PATH=$PATH:$PERLDIR/../c/bin ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



