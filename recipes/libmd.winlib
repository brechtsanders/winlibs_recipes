export NAME="libmd"
export STATUS=
export URL=https://www.hadrons.org/software/libmd/
export BASENAME=libmd
export DESCRIPTION="libmd (Message Digest functions from BSD systems) - This library provides message digest functions found on BSD systems either on their libc (NetBSD, OpenBSD) or libmd (FreeBSD, DragonflyBSD, Mac OS X, Solaris) libraries and lacking on others like GNU systems."
export CATEGORY=security
export TYPE=library
#export VERSION=0.0.0
#export VERSIONDATE=20170208
####rmd160.c:34:20: fatal error: endian.h: No such file or directory
#export VERSION=1.0.0
#export VERSIONDATE=20180114
#export VERSION=1.0.1
#export VERSIONDATE=20181022
####src/sha384hl.c:76: undefined reference to `SHA384Update'
#export VERSION=1.0.3
#export VERSIONDATE=20210103
export VERSION=1.0.4
export VERSIONDATE=20211005
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="BSD/ISC/Public Domain"
export DOWNLOADURL="https://archive.hadrons.org/software/libmd/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://archive.hadrons.org/software/libmd/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix __weak_alias issue in src/sha2.c (version >= 1.0.0)
patch -ulbf src/sha2.c << EOF
@@ -822,5 +822,5 @@

-__weak_alias(SHA384Transform, SHA512Transform);
-__weak_alias(SHA384Update, SHA512Update);
-__weak_alias(SHA384Pad, SHA512Pad);
+void SHA384Transform (uint64_t state[8], const uint8_t data[SHA512_BLOCK_LENGTH]) { SHA512Transform(state, data); }
+void SHA384Update (SHA2_CTX *context, const uint8_t *data, size_t len) { SHA512Update(context, data, len); }
+void SHA384Pad (SHA2_CTX *context) { SHA512Pad(context); }

EOF
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build-install &&
 make install-strip &&
 # allow detection as libmd5 library
 sed -e "s/^Name: libmd$/&5/" $INSTALLPREFIX/lib/pkgconfig/libmd.pc > $INSTALLPREFIX/lib/pkgconfig/md5.pc &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



