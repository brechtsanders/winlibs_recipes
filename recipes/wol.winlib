export NAME="wol"
export STATUS=
export URL=http://sourceforge.net/projects/wake-on-lan/
export BASENAME=wol
export DESCRIPTION="wol implements Wake On LAN functionality in a small program. It wakes up hardware that is Magic Packet compliant."
export CATEGORY=communication
export TYPE=library
export VERSION=0.7.1
export VERSIONDATE=
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL2
#export DOWNLOADURL="http://sourceforge.net/projects/wake-on-lan/files/"
export DOWNLOADURL="http://sourceforge.net/projects/wake-on-lan/files/wol/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/wake-on-lan/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# patch to avoide using termios.h
patch -ulbf lib/getpass4.c << EOF
--- lib/getpass4.c  Tue Jul 29 14:42:41 2008
+++ lib/getpass4.c  Tue Jul 29 14:42:44 2008
@@ -3,3 +3,2 @@
 #include <stdio.h>
-#include <termios.h>
 
@@ -13,15 +12,4 @@
 {
-       struct termios old, new;
        int nread;
 
-       /* Turn echoing off and fail if we can't */
-       if (tcgetattr (fileno (stream), &old))
-               return -1;
-
-       new = old;
-       new.c_lflag &= ~ECHO;
-
-       if (tcsetattr (fileno (stream), TCSAFLUSH, &new))
-               return -1;
-
        if (prompt)
@@ -33,4 +21,2 @@
                fprintf (stderr, "\n");
-
-       tcsetattr (fileno (stream), TCSAFLUSH, &old);
EOF
# fix missing network include files
mkdir sys netinet arpa
echo "#include <winsock2.h>" >> sys/socket.h
touch netdb.h
touch netinet/in.h
touch arpa/inet.h
# fix bad order of libraries
mv src/Makefile.in src/Makefile.in.bak
sed -e "s/^\(wol_LDADD =.*\)/\1 -lws2_32/" src/Makefile.in.bak > src/Makefile.in
# fix usleep
mv lib/usleep.c lib/usleep.c.bak
echo "#include <windows.h>" > lib/usleep.c
sed -e "s?\(select.*\)?/*\1*/ SleepEx((usec < 500 \? 1 : (usec + 500) / 1000), TRUE);?" lib/usleep.c.bak >> lib/usleep.c
# patch to initialize winsock at startup
patch -u -l src/wol.c << EOF
--- src/wol.c   Sun Apr 18 13:42:11 2004
+++ src/wol.c   Wed Jul 30 13:05:09 2008
@@ -38,2 +38,3 @@
 #include <error.h>
+#include <windows.h>
 
@@ -340,2 +341,13 @@
   int ret = 0;
+
+#ifdef __WIN32__
+  //initialize WINSOCK
+  static WSADATA wsaData;
+  int wsaerr = WSAStartup(MAKEWORD(1, 0), &wsaData);
+  if (wsaerr) {
+    fprintf(stderr, "WSAStartup failed\n");
+    return 1;
+  }
+  atexit((void(*)())WSACleanup);
+#endif
EOF
mv src/net.c src/net.c.bak
sed -e "s/close (socket)/shutdown (socket, 2)/" src/net.c.bak > src/net.c
wl-showstatus configure &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-nls LDFLAGS="-lws2_32 -Wl,-no-undefined" &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



