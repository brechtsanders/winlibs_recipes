export NAME="librealsense"
export STATUS=
export URL=https://github.com/IntelRealSense/librealsense
export BASENAME=librealsense
export DESCRIPTION="Intel(R) RealSense(TM) SDK 2.0 is a cross-platform library for Intel(R) RealSense(TM) depth cameras."
export CATEGORY=dataprocessing
export TYPE=library
export VERSION=2.55.1
export VERSIONDATE=20250223
wl-showstatus --package-version
export DEPENDENCIES=glfw3,nlohmann-json,re2
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/IntelRealSense/librealsense/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/IntelRealSense/librealsense/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix undefined ftruncate in third-party/realsense-file/rosbag/rosbag_storage/src/chunked_file.cpp
sed -i.bak "1i #include <unistd.h>" third-party/realsense-file/rosbag/rosbag_storage/src/chunked_file.cpp
# don't require Visual Studio
sed -i.bak -e "s/^#if (_MSC_FULL_VER < 180031101)$/& \&\& \!defined(__MINGW32__)/" $(grep -l "#if (_MSC_FULL_VER < 180031101)" $(find -name '*.cpp'))
# fix undefined _getch_nolock() in tools/terminal/auto-complete.cpp
patch -ulbf tools/terminal/auto-complete.cpp << EOF
@@ -126,2 +126,5 @@
 #if defined(_WIN32)
+#if defined(__MINGW32__) && (!defined(__MSVCRT_VERSION__) || __MSVCRT_VERSION__ < 0x800)
+#define _getch_nolock getch_nolock
+#endif
     auto ch = static_cast<char>(_getch_nolock());
EOF
# fix src/realsense.def
patch -ulbf src/realsense.def << EOF
@@ -1,3 +1 @@
-LIBRARY
-
 EXPORTS
@@ -126,3 +124,3 @@
     rs2_enqueue_frame
-    rs2_flush_queue
+;    rs2_flush_queue
     rs2_frame_queue_size
@@ -156,3 +154,3 @@
     rs2_notification_category_to_string
-    rs2_cah_trigger_to_string
+;    rs2_cah_trigger_to_string

EOF
# fix undefine uint8_t in src/core/frame-interface.h (version >= 2.55.1)
sed -i.bak -e "1i #include <cstdint>" src/core/frame-interface.h
# fix undefine uint8_t in src/core/motion.h (version >= 2.55.1)
sed -i.bak -e "1i #include <cstdint>" src/core/motion.h
# fix undefine uint8_t in src/core/debug.h (version >= 2.55.1)
sed -i.bak -e "1i #include <cstdint>" src/core/debug.h
# fix undefine uint8_t in src/core/stream-profile-interface.h (version >= 2.55.1)
sed -i.bak -e "1i #include <cstdint>" src/core/stream-profile-interface.h
# fix undefine uint8_t in src/core/frame-additional-data.h (version >= 2.55.1)
sed -i.bak -e "1i #include <cstdint>" src/core/frame-additional-data.h
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DFORCE_RSUSB_BACKEND:BOOL=ON -DBUILD_WITH_OPENMP:BOOL=ON -DCHECK_FOR_UPDATES:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_GRAPHICAL_EXAMPLES:BOOL=OFF -DBUILD_UNIT_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-mssse3" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_static &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lcfgmgr32 -lsetupapi -lwinusb/" build_static/build.ninja &&
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DFORCE_RSUSB_BACKEND:BOOL=ON -DBUILD_WITH_OPENMP:BOOL=ON -DCHECK_FOR_UPDATES:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_GRAPHICAL_EXAMPLES:BOOL=OFF -DBUILD_UNIT_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-mssse3" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lcfgmgr32 -lsetupapi -lwinusb/" build_shared/build.ninja &&
 #wl-showstatus build-static &&
 #cmake.exe --build build_static &&
 #ninja -Cbuild_static &&
 #wl-showstatus build-shared &&
 #cmake.exe --build build_shared &&
 #ninja -Cbuild_shared &&
 wl-showstatus build-install-static &&
 # fix missing IntelRealSense_D400_series_win7.inf
 cp -u build_static/drivers/IntelRealSense_D400_series_win7.inf build_static/ &&
 ninja -Cbuild_static install/strip &&
 #ninja -Cbuild_static library/install/strip &&
 wl-showstatus build-install-shared &&
 # fix missing IntelRealSense_D400_series_win7.inf
 cp -u build_static/drivers/IntelRealSense_D400_series_win7.inf build_shared/ &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



