export NAME="gnuplot-iostream"
export STATUS=
export URL=http://stahlke.org/dan/gnuplot-iostream/
export BASENAME=gnuplot-iostream
export DESCRIPTION="Gnuplot-iostream interface - This interface allows gnuplot to be controlled from C++ and is designed to be the lowest hanging fruit. In other words, if you know how gnuplot works it should only take 30 seconds to learn this library. Basically it is just an iostream pipe to gnuplot with some extra functions for pushing data arrays and getting mouse clicks. Data sources include STL containers (eg. vector), Blitz++, and armadillo. You can use nested data types like std::vector<std::vector<std::pair<double, double>>> (as well as even more exotic types). Support for custom data types is possible."
export CATEGORY=
export TYPE=library
export VERSION=master
export VERSIONDATE=20221215
wl-showstatus --package-version
export DEPENDANCIES=gnuplot
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/dstahlke/gnuplot-iostream/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/dstahlke/gnuplot-iostream/archive/refs/heads/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DGnuPlotIostream_BuildExamples:BOOL=ON -DGnuPlotIostream_BuildTests:BOOL=ON -S. -Bbuild_win &&
# wl-showstatus build &&
# ninja -Cbuild_win &&
#    echo OK
wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include &&
 cp -f gnuplot-iostream.h $INSTALLPREFIX/include/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



