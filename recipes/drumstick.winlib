#export NAME="Drumstick"
#export STATUS=
#export URL=https://drumstick.sourceforge.io/
##export URL=https://sourceforge.net/projects/drumstick/
#export BASENAME=drumstick
#export DESCRIPTION="Drumstick is a tool to play music. This is a set of C++ MIDI libraries using Qt5 objects, idioms and style. It contains a C++ wrapper around the ALSA library sequencer interface; ALSA sequencer provides software support for MIDI technology on Linux. A complementary library provides classes for SMF (Standard MIDI files: .MID/.KAR), Cakewalk (.WRK), and Overture (.OVE) file formats processing. A multiplatform realtime MIDI I/O library is also provided."
#export CATEGORY=audio
#export TYPE=library
##export VERSION=1.1.3
##export VERSIONDATE=20200305
#export VERSION=2.0.0
#export VERSIONDATE=20201230
#export DEPENDENCIES=qt
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
#export DOWNLOADURL="https://sourceforge.net/projects/drumstick/files/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/drumstick/$VERSION/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
#wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_DRUMSTICK:BOOL=OFF -DUSE_DBUS:BOOL=OFF -DBUILD_TESTING:BOOL=ON . &&
# #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_DRUMSTICK:BOOL=OFF -DUSE_DBUS:BOOL=OFF -DBUILD_TESTING:BOOL=ON -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DBUILD_TESTING:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins drumstick-vpiano.exe



export NAME="Drumstick"
export STATUS=
export URL=https://drumstick.sourceforge.io/
#export URL=https://sourceforge.net/projects/drumstick/
export BASENAME=drumstick
export DESCRIPTION="Drumstick is a tool to play music. This is a set of C++ MIDI libraries using Qt5 objects, idioms and style. It contains a C++ wrapper around the ALSA library sequencer interface; ALSA sequencer provides software support for MIDI technology on Linux. A complementary library provides classes for SMF (Standard MIDI files: .MID/.KAR), Cakewalk (.WRK), and Overture (.OVE) file formats processing. A multiplatform realtime MIDI I/O library is also provided."
export CATEGORY=audio
export TYPE=application,library
#export VERSION=2.1.0
#export VERSIONDATE=20210321
#export VERSION=2.1.1
#export VERSIONDATE=20210331
#export VERSION=2.2.0
#export VERSIONDATE=20210509
#export DEPENDENCIES=qt,mman-win32,fluidsynth
#export OPTIONALDEPENDENCIES=
##export OPTIONALDEPENDENCIES=libsonivox
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=2.2.1
#export VERSIONDATE=20210601
#export VERSION=2.3.0
#export VERSIONDATE=20210629
#export VERSION=2.3.1
#export VERSIONDATE=20210730
#export VERSION=2.4.0
#export VERSIONDATE=20210919
#export VERSION=2.4.1
#export VERSIONDATE=20211025
#export VERSION=2.5.0
#export VERSIONDATE=20211210
#export VERSION=2.5.1
#export VERSIONDATE=20220208
#export VERSION=2.6.0
#export VERSIONDATE=20220405
#export VERSION=2.6.1
#export VERSIONDATE=20220520
#export VERSION=2.7.0
#export VERSIONDATE=20220801
####utils/vpiano/CMakeFiles/drumstick-vpiano.dir/vpianomain.cpp.obj:vpianomain.cpp:(.text.startup+0xc7): undefined reference to `qt_static_plugin_SynthOutput()'
#export VERSION=2.7.1
#export VERSIONDATE=20220814
####Sonivox library not available.  SonivoxEas Synth RT backend can't be built.
####vpianomain.cpp:(.text.startup+0xc7): undefined reference to `qt_static_plugin_SynthOutput()'
#export VERSION=2.7.2
#export VERSIONDATE=20221002
export VERSION=2.8.0
export VERSIONDATE=20230701
wl-showstatus --package-version
export DEPENDENCIES=qt6,mman-win32,fluidsynth
export OPTIONALDEPENDENCIES=
#export OPTIONALDEPENDENCIES=libsonivox
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://sourceforge.net/projects/drumstick/files/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/drumstick/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix relative path in INTERFACE_INCLUDE_DIRECTORIES
####CMake Error in library/rt-backends/fluidsynth/CMakeLists.txt: Target "PkgConfig::FLUIDSYNTH" contains relative path in its INTERFACE_INCLUDE_DIRECTORIES: "../../include"
echo 'SET_TARGET_PROPERTIES(PkgConfig::FLUIDSYNTH PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "")' >> library/rt-backends/fluidsynth/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_DRUMSTICK:BOOL=ON -DUSE_DBUS:BOOL=OFF -DBUILD_TESTING:BOOL=ON -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_DRUMSTICK:BOOL=ON -DUSE_DBUS:BOOL=OFF -DBUILD_TESTING:BOOL=ON -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
 #PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_DRUMSTICK:BOOL=ON -DUSE_DBUS:BOOL=OFF -DUSE_SONIVOX:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_DRUMSTICK:BOOL=OFF -DUSE_DBUS:BOOL=OFF -DBUILD_TESTING:BOOL=ON -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_DRUMSTICK:BOOL=OFF -DUSE_DBUS:BOOL=OFF -DBUILD_TESTING:BOOL=ON -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
 #PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_DRUMSTICK:BOOL=OFF -DUSE_DBUS:BOOL=OFF -DUSE_SONIVOX:BOOL=OFF -DBUILD_TESTING:BOOL=ON -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/mman-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
 #echo "-L$(pwd)/build_shared/lib -ldrumstick-rt" >> build_shared/library/rt-backends/eassynth/src/CMakeFiles/drumstick-rt-eassynth.dir/linklibs.rsp &&
 wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 ninja -Cbuild_static library/install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins drumstick-vpiano.exe
####PATH=$MINGWPREFIX/qt6/bin:$PATH drumstick-vpiano.exe



