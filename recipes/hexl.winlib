export NAME="Intel Homomorphic Encryption Acceleration Library (HEXL)"
export STATUS=
export URL=https://github.com/intel/hexl
export BASENAME=hexl
export DESCRIPTION="Intel(R) HEXL is an open-source library which provides efficient implementations of integer arithmetic on Galois fields. Such arithmetic is prevalent in cryptography, particularly in homomorphic encryption (HE) schemes. Intel HEXL targets integer arithmetic with word-sized primes, typically 40-60 bits. Intel HEXL provides an API for 64-bit unsigned integers and targets Intel CPUs."
export CATEGORY=
export TYPE=library
#export VERSION=1.0.1
#export VERSIONDATE=20210407
#export VERSION=1.1.0
#export VERSIONDATE=20210511
#export VERSION=1.1.1
#export VERSIONDATE=20210605
#export VERSION=1.2.0
#export VERSIONDATE=20210727
#export VERSION=1.2.1
#export VERSIONDATE=20210902
#export VERSION=1.2.2
#export VERSIONDATE=20211021
#export VERSION=1.2.3
#export VERSIONDATE=20211104
#export VERSION=1.2.4
#export VERSIONDATE=20220319
export VERSION=1.2.5
export VERSIONDATE=20220809
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/intel/hexl/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/intel/hexl/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DHEXL_SHARED_LIB:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYTHON/python.exe -DBENCHMARK_BUILD_32_BITS:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "OFF"; else echo "ON"; fi) -DHEXL_DOCS:BOOL=OFF -DHEXL_BENCHMARK:BOOL=OFF -DBUILD_GMOCK:BOOL=OFF -DBENCHMARK_ENABLE_GTEST_TESTS:BOOL=OFF -DINSTALL_GTEST:BOOL=OFF -DHEXL_TESTING:BOOL=OFF -S. -Bbuild_static &&
 sed -i.bak -e "s/\.o\b/&bj/g" build_static/build.ninja &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DHEXL_SHARED_LIB:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYTHON/python.exe -DBENCHMARK_BUILD_32_BITS:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "OFF"; else echo "ON"; fi) -DHEXL_DOCS:BOOL=OFF -DHEXL_BENCHMARK:BOOL=OFF -DBUILD_GMOCK:BOOL=OFF -DBENCHMARK_ENABLE_GTEST_TESTS:BOOL=OFF -DINSTALL_GTEST:BOOL=OFF -DHEXL_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/bin &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



