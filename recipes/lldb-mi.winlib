export NAME="lldb-mi"
export STATUS=
export URL=https://github.com/lldb-tools/lldb-mi
export BASENAME=lldb-mi
export DESCRIPTION="LLDB's machine interface driver"
export CATEGORY=development
export TYPE=application
export VERSION=main
export VERSIONDATE=20220501
wl-showstatus --package-version
export DEPENDENCIES=llvm-project
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.TXT
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/lldb-tools/lldb-mi/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/lldb-tools/lldb-mi/archive/refs/heads/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/llvm -DCMAKE_BUILD_TYPE:STRING=Release -DINCLUDE_TESTS:BOOL=OFF -DLLVM_DIR:PATH=$MINGWPREFIX/share/llvm/lib/cmake/llvm -S. -Bbuild_win &&
 #-DCMAKE_CXX_STANDARD:STRING=17 
 # fix missing link libraries
 if ${CC:-gcc} --version|grep -q clang; then
  sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -pthread/" build_win/build.ninja
 fi &&
 # fix variant not supported before C++ 17
 sed -i.bak2 -e "s/-std=gnu++14//g" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



