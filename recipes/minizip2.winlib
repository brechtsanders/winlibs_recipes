export NAME="minizip2"
export STATUS=
#export URL=https://github.com/nmoinvaz/minizip/
export URL=https://github.com/zlib-ng/minizip-ng
export BASENAME=minizip2
export DESCRIPTION="Zip file manipulation library with minizip 1.x compatibility layer"
export CATEGORY=compression
export TYPE=library
#export VERSION=2.9.2
#export VERSIONDATE=20200309
#export DEPENDENCIES=zlib,libbz2,openssl
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=2.9.3
#export VERSIONDATE=20200522
#export VERSION=2.10.0
#export VERSIONDATE=20200625
#export VERSION=2.10.1
#export VERSIONDATE=20201012
#export VERSION=2.10.2
#export VERSIONDATE=20201026
#export VERSION=2.10.3
#export VERSIONDATE=20201109
#export VERSION=2.10.4
#export VERSIONDATE=20201207
#export VERSION=2.10.5
#export VERSIONDATE=20201214
export VERSION=2.10.6
export VERSIONDATE=20201230
wl-showstatus --package-version
export DEPENDENCIES=zlib,libbz2,xz,zstd,openssl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=zlib
#export DOWNLOADURL="https://github.com/nmoinvaz/minizip/releases"
export DOWNLOADURL="https://github.com/zlib-ng/minizip-ng/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/nmoinvaz/minizip/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/zlib-ng/minizip-ng/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd minizip-$VERSION
cd minizip-ng-$VERSION
## fix for building both static and shared library (version <= 2.9.2)
#patch -ulbf CMakeLists.txt << EOF
#@@ -623,5 +623,6 @@
#
#-project(minizip)
#+foreach(LINKTYPE STATIC SHARED)
#+project(minizip_\${LINKTYPE})
#
#-add_library(\${PROJECT_NAME}
#+add_library(\${PROJECT_NAME} \${LINKTYPE}
#                 \${MINIZIP_SRC} \${MINIZIP_PUBLIC_HEADERS}
#@@ -637,2 +638,3 @@
#
#+set_target_properties(minizip_\${LINKTYPE} PROPERTIES OUTPUT_NAME minizip)
# mz_configure_target(\${PROJECT_NAME})
#@@ -897,2 +899,3 @@
# endif()
#+endforeach()
#
#EOF
#wl-showstatus configure &&
#cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DINSTALL_INC_DIR:PATH=$INSTALLPREFIX/include/minizip -DMZ_COMPAT:BOOL=ON -DMZ_PKCRYPT:BOOL=ON -DMZ_OPENSSL:BOOL=ON -DMZ_BUILD_UNIT_TEST:BOOL=OFF -DMZ_BUILD_TEST:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
## fix CMakeLists.txt (version = 2.9.3)
#patch -ulbf CMakeLists.txt << EOF
#@@ -652,3 +652,3 @@
#
#-if(WIN32)
#+if(MSVC)
#     # VS debugger has problems when executable and static library are named the same
#EOF
# fix missing -lbzip2
sed -i.bak -e "s/-lbzip2/-lbz2/" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DMZ_PROJECT_SUFFIX:STRING=2 -DINSTALL_INC_DIR:PATH=$INSTALLPREFIX/include/minizip2 -DMZ_COMPAT:BOOL=ON -DMZ_PKCRYPT:BOOL=ON -DMZ_OPENSSL:BOOL=ON -DMZ_BUILD_UNIT_TEST:BOOL=OFF -DMZ_BUILD_TEST:BOOL=OFF -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DMZ_PROJECT_SUFFIX:STRING=2 -DINSTALL_INC_DIR:PATH=$INSTALLPREFIX/include/minizip2 -DMZ_COMPAT:BOOL=ON -DMZ_PKCRYPT:BOOL=ON -DMZ_OPENSSL:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_BZIP2:BOOL=ON -DMZ_LZMA:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_BUILD_UNIT_TEST:BOOL=OFF -DMZ_BUILD_TEST:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake/zstd -S. -Bbuild_static &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DMZ_PROJECT_SUFFIX:STRING=2 -DINSTALL_INC_DIR:PATH=$INSTALLPREFIX/include/minizip2 -DMZ_COMPAT:BOOL=ON -DMZ_PKCRYPT:BOOL=ON -DMZ_OPENSSL:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_BZIP2:BOOL=ON -DMZ_LZMA:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_FETCH_LIBS:BOOL=OFF -DMZ_FORCE_FETCH_LIBS:BOOL=OFF -DMZ_BUILD_UNIT_TEST:BOOL=OFF -DMZ_BUILD_TEST:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake/zstd -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DMZ_PROJECT_SUFFIX:STRING=2 -DINSTALL_INC_DIR:PATH=$INSTALLPREFIX/include/minizip2 -DMZ_COMPAT:BOOL=ON -DMZ_PKCRYPT:BOOL=ON -DMZ_OPENSSL:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_BZIP2:BOOL=ON -DMZ_LZMA:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_FETCH_LIBS:BOOL=OFF -DMZ_FORCE_FETCH_LIBS:BOOL=OFF -DMZ_BUILD_UNIT_TEST:BOOL=OFF -DMZ_BUILD_TEST:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake/zstd -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DMZ_PROJECT_SUFFIX:STRING=2 -DINSTALL_INC_DIR:PATH=$INSTALLPREFIX/include/minizip2 -DMZ_COMPAT:BOOL=ON -DMZ_PKCRYPT:BOOL=ON -DMZ_OPENSSL:BOOL=ON -DMZ_BUILD_UNIT_TEST:BOOL=OFF -DMZ_BUILD_TEST:BOOL=OFF -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DMZ_PROJECT_SUFFIX:STRING=2 -DINSTALL_INC_DIR:PATH=$INSTALLPREFIX/include/minizip2 -DMZ_COMPAT:BOOL=ON -DMZ_PKCRYPT:BOOL=ON -DMZ_OPENSSL:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_BZIP2:BOOL=ON -DMZ_LZMA:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_BUILD_UNIT_TEST:BOOL=OFF -DMZ_BUILD_TEST:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake/zstd -S. -Bbuild_shared &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DMZ_PROJECT_SUFFIX:STRING=2 -DINSTALL_INC_DIR:PATH=$INSTALLPREFIX/include/minizip2 -DMZ_COMPAT:BOOL=ON -DMZ_PKCRYPT:BOOL=ON -DMZ_OPENSSL:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_BZIP2:BOOL=ON -DMZ_LZMA:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_FETCH_LIBS:BOOL=OFF -DMZ_FORCE_FETCH_LIBS:BOOL=OFF -DMZ_BUILD_UNIT_TEST:BOOL=OFF -DMZ_BUILD_TEST:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake/zstd -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DMZ_PROJECT_SUFFIX:STRING=2 -DINSTALL_INC_DIR:PATH=$INSTALLPREFIX/include/minizip2 -DMZ_COMPAT:BOOL=ON -DMZ_PKCRYPT:BOOL=ON -DMZ_OPENSSL:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_BZIP2:BOOL=ON -DMZ_LZMA:BOOL=ON -DMZ_ZSTD:BOOL=ON -DMZ_FETCH_LIBS:BOOL=OFF -DMZ_FORCE_FETCH_LIBS:BOOL=OFF -DMZ_BUILD_UNIT_TEST:BOOL=OFF -DMZ_BUILD_TEST:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake/zstd -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 ( ninja -Cbuild_shared install/strip || ( sed -i.bak -e "s/^\s*LINK_LIBRARIES\s.*=.*$/& -lzstd/" build_shared/build.ninja &&ninja -Cbuild_shared install/strip )) &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf minizip-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf minizip-ng-$VERSION
####Conflicts with minizip, so added "2" suffix



