export NAME="libpcap"
export STATUS=
export URL=https://www.tcpdump.org/
export BASENAME=libpcap
export DESCRIPTION="the libpcap interface to various kernel packet capture mechanisms"
export CATEGORY=communications
export TYPE=library
export VERSION=1.10.1
export VERSIONDATE=20210921
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://www.tcpdump.org/release/"
#export DOWNLOADURL="https://github.com/the-tcpdump-group/libpcap/releases"
export DOWNLOADURL="https://github.com/the-tcpdump-group/libpcap/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://www.tcpdump.org/release/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/the-tcpdump-group/libpcap/archive/refs/tags/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd libpcap-libpcap-$VERSION
# fix missing EINVAL in charconv.c
mv charconv.c charconv.c.bak &&
echo "#include <errno.h>" > charconv.c &&
cat charconv.c.bak >> charconv.c
# disable use of symbolic links in CMakeLists.txt (version >= 1.10.1)
patch -ulbf CMakeLists.txt << EOF
@@ -2732,3 +2732,3 @@
     #
-    if(MINGW)
+    if(FALSE)
         find_program(LINK_EXECUTABLE ln)
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libpcap-libpcap-$VERSION



