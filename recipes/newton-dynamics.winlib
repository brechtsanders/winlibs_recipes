export NAME="Newton Dynamics"
export STATUS=
export URL=http://newtondynamics.com/
export BASENAME=newton-dynamics
export DESCRIPTION="Newton Dynamics is a cross-platform life-like physics simulation library. It can easily be integrated into game engines and other applications and provides top of it's class performance and simulation stability. Ongoing developement and a permissive license makes Newton Dynamics a top choice for all kinds of projects from scientific projects to game engines. Newton Dynamics implements a deterministic solver, which is not based on traditional LCP or iterative methods, but possesses the stability and speed of both respectively. This feature makes Newton Dynamics a tool not only for games, but also for any real-time physics simulation."
export CATEGORY=science
export TYPE=library
export VERSION=4.01
export VERSIONDATE=20220722
wl-showstatus --package-version
export DEPENDENCIES=pthreads
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE 
export LICENSETYPE=zlib
export DOWNLOADURL="https://github.com/MADEAPPS/newton-dynamics/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/MADEAPPS/newton-dynamics/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION/newton-4.00
## also allow building shared library in sdk/dExtensions/dAvx2/CMakeLists.txt (version >= 4.01)
#patch -ulbf sdk/dExtensions/dAvx2/CMakeLists.txt << EOF
#@@ -42,3 +42,3 @@
#        set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "\${CMAKE_CXX_FLAGS_RELEASE} -mavx2 -mfma")
#-       add_library(\${projectName} STATIC \${CPP_SOURCE})
#+       add_library(\${projectName} \${CPP_SOURCE})
# endif()
#EOF
# fix invalid /DEBUG linker flag
sed -i.bak -e "s/\(if(MSVC\) OR MINGW/\1/" sdk/CMakeLists.txt sdk/dCore/CMakeLists.txt sdk/dNewton/CMakeLists.txt sdk/dCollision/CMakeLists.txt sdk/dExtensions/dAvx2/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DNEWTON_BUILD_SHARED_LIBS:BOOL=OFF -DNEWTON_ENABLE_AVX2_SOLVER:BOOL=OFF -DNEWTON_DOUBLE_PRECISION:BOOL=OFF -DNEWTON_BUILD_SANDBOX_DEMOS:BOOL=OFF -DNEWTON_BUILD_TEST:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DNEWTON_BUILD_SHARED_LIBS:BOOL=ON -DNEWTON_ENABLE_AVX2_SOLVER:BOOL=OFF -DNEWTON_DOUBLE_PRECISION:BOOL=OFF -DNEWTON_BUILD_SANDBOX_DEMOS:BOOL=OFF -DNEWTON_BUILD_TEST:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: build (including shared library) with -DNEWTON_ENABLE_AVX2_SOLVER:BOOL=ON 



