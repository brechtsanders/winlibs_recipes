export NAME="miniz-cpp"
export STATUS=
export URL=https://github.com/tfussell/miniz-cpp
export BASENAME=miniz-cpp
export DESCRIPTION="A cross-platform header-only C++14 library for reading and writing ZIP files"
export CATEGORY=compression
export TYPE=library
export VERSION=master
export VERSIONDATE=20250815
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/tfussell/miniz-cpp/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/tfussell/miniz-cpp/archive/refs/heads/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix zip_file.hpp (version >= master)
patch -ulbf zip_file.hpp << EOF
@@ -34,2 +34,3 @@
 #include <vector>
+#include <string.h>

@@ -5572,3 +5573,3 @@
                 mz_zip_archive archive_copy;
-            std::memset(&archive_copy, 0, sizeof(mz_zip_archive));
+                memset(&archive_copy, 0, sizeof(mz_zip_archive));
                 std::vector<char> buffer_copy(buffer_.begin(), buffer_.end());
@@ -5678,3 +5679,3 @@

-        result.filename = std::string(stat.m_filename, stat.m_filename + std::strlen(stat.m_filename));
+        result.filename = std::string(stat.m_filename, stat.m_filename + strlen(stat.m_filename));
         result.comment = std::string(stat.m_comment, stat.m_comment + stat.m_comment_size);EOF
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_win &&
 wl-showstatus build &&
 ninja -Cbuild_win &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_win install/strip &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include &&
 cp -f *.hpp $INSTALLPREFIX/include/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



