#export NAME="KeePassXC"
#export STATUS=
#export URL=https://keepassxc.org/
##export URL=https://github.com/keepassxreboot/keepassxc
#export BASENAME=keepassxc
#export DESCRIPTION="KeePassXC is a cross-platform community-driven port of the Windows application \"Keepass Password Safe\"."
#export CATEGORY=security
#export TYPE=application
##export VERSION=2.3.4
##export VERSIONDATE=20181207
##export VERSION=2.4.0
##export VERSIONDATE=20190320
##export VERSION=2.4.1
##export VERSIONDATE=20190413
##export VERSION=2.4.2
##export VERSIONDATE=20190601
##export VERSION=2.4.3
##export VERSIONDATE=20190612
##export VERSION=2.5.0
##export VERSIONDATE=20191027
##export VERSION=2.5.1
##export VERSIONDATE=20191112
##export VERSION=2.5.2
##export VERSIONDATE=20200105
##export VERSION=2.5.3
##export VERSIONDATE=20200120
#export VERSION=2.5.4
#export VERSIONDATE=20200410
#export DEPENDENCIES=qt,zlib,libgcrypt,libgpg-error,libargon2,libqrencode,zxcvbn
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/keepassxreboot/keepassxc/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/keepassxreboot/keepassxc/releases/download/$VERSION/keepassxc-$VERSION-src.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/keepassxreboot/keepassxc/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
##tar xJ --force-local -f $TARBALLDIR/$BASENAME/keepassxc-$VERSION-src.tar.xz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix qt paths
#sed -i.bak -e "s?\(\${Qt5_PREFIX}/\)share/qt5/?\1?" src/CMakeLists.txt share/translations/CMakeLists.txt
## don't install missing ssl/certs/ca-bundle.crt (version >= 2.5.4)
#sed -i.bak2 -e "s?^\s*install.*ssl/certs/ca-bundle.crt?#&?" src/CMakeLists.txt
#wl-showstatus configure &&
#( PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/KeePassXC -DCMAKE_BUILD_TYPE:STRING=Release -DKEEPASSXC_BUILD_TYPE:STRING=Release -DWITH_XC_SSHAGENT:BOOL=ON -DWITH_XC_YUBIKEY:BOOL=OFF -DWITH_XC_HTTP:BOOL=OFF -DWITH_XC_NETWORKING:BOOL=OFF -DWITH_APP_BUNDLE:BOOL=OFF -DWITH_ASAN:BOOL=OFF -DWITH_TESTS:BOOL=OFF . || true ) &&
##PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/KeePassXC -DCMAKE_BUILD_TYPE:STRING=Release -DKEEPASSXC_BUILD_TYPE:STRING=Release -DWITH_XC_SSHAGENT:BOOL=ON -DWITH_XC_YUBIKEY:BOOL=ON -DYUBIKEY_INCLUDE_DIRS:PATH=$MINGWPREFIX/include -DYUBIKEY_LIBRARIES:STRING=-lyubikey -DWITH_XC_HTTP:BOOL=OFF -DWITH_XC_NETWORKING:BOOL=OFF -DWITH_APP_BUNDLE:BOOL=OFF -DWITH_ASAN:BOOL=OFF -DWITH_TESTS:BOOL=OFF . &&
# wl-showstatus build &&
# ( make || make -j1 ) &&
# wl-showstatus build-install &&
# ( PATH=$PATH:$MINGWPREFIX/qt/bin make install/strip || PATH=$PATH:$MINGWPREFIX/qt/bin make -j1 install/strip ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ $INSTALLPREFIX/KeePassXC/KeePassXC.exe
#####PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ $MINGWPREFIX/KeePassXC/KeePassXC.exe



export NAME="KeePassXC"
export STATUS=
export URL=https://keepassxc.org/
#export URL=https://github.com/keepassxreboot/keepassxc
export BASENAME=keepassxc
export DESCRIPTION="KeePassXC is a cross-platform community-driven port of the Windows application \"Keepass Password Safe\"."
export CATEGORY=security
export TYPE=application
#export VERSION=2.6.0
#export VERSIONDATE=20200707
#export VERSION=2.6.1
#export VERSIONDATE=20200820
#export VERSION=2.6.2
#export VERSIONDATE=20201022
#export VERSION=2.6.3
#export VERSIONDATE=20210113
#export VERSION=2.6.4
#export VERSIONDATE=20210201
#export VERSION=2.6.5
#export VERSIONDATE=20210608
#export VERSION=2.6.6
#export VERSIONDATE=20210612
#export VERSION=2.7.0
#export VERSIONDATE=20220322
#export VERSION=2.7.1
#export VERSIONDATE=20220407
#export VERSION=2.7.2
#export VERSIONDATE=20221023
#export VERSION=2.7.3
#export VERSIONDATE=20221024
export VERSION=2.7.4
export VERSIONDATE=20221030
wl-showstatus --package-version
export DEPENDENCIES=qt,zlib,libgcrypt,libgpg-error,libargon2,libqrencode,zxcvbn,libyubikey,ykpers,botan
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/keepassxreboot/keepassxc/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/keepassxreboot/keepassxc/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# skip installation of certificates
sed -i.bak -e "s/install(.*ca-bundle\.crt/#&/" src/CMakeLists.txt
# fix undefined reference to __stack_chk_fail (version >= 2.6.4)
sed -i.bak -e "s/-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2//" CMakeLists.txt
# disable stack protection
sed -i.bak -e "s/add_gcc_compiler_flags.*-fstack-protector/#&/" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/KeePassXC -DCMAKE_BUILD_TYPE:STRING=Release -DKEEPASSXC_BUILD_TYPE:STRING=Release -DKEEPASSXC_DIST_TYPE:STRING=Other -DWITH_XC_AUTOTYPE:BOOL=ON -DWITH_XC_YUBIKEY:BOOL=ON -DWITH_XC_SSHAGENT:BOOL=ON -DWITH_XC_UPDATECHECK:BOOL=OFF -DWITH_APP_BUNDLE:BOOL=OFF -DWITH_XC_DOCS:BOOL=OFF -DWITH_TESTS:BOOL=OFF -S. -Bbuild_win &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/KeePassXC -DCMAKE_BUILD_TYPE:STRING=Release -DKEEPASSXC_BUILD_TYPE:STRING=Release -DKEEPASSXC_DIST_TYPE:STRING=Other -DWITH_XC_AUTOTYPE:BOOL=ON -DWITH_XC_YUBIKEY:BOOL=ON -DWITH_XC_SSHAGENT:BOOL=ON -DWITH_XC_UPDATECHECK:BOOL=OFF -DWITH_APP_BUNDLE:BOOL=OFF -DWITH_XC_DOCS:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_win &&
 #-DWITH_XC_NETWORKING:BOOL=ON -DWITH_XC_ALL:BOOL=ON -DYUBIKEY_LIBRARIES:STRING="-lyubikey" -DYUBIKEY_INCLUDE_DIRS:PATH=$MINGWPREFIX 
 #-DASCIIDOCTOR_EXE:FILEPATH="$PYDIR/python.exe $(which asciidoc)"
 # fix missing linked libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lhid -lsetupapi -lyubikey/" build_win/build.ninja &&
 wl-showstatus build-install &&
 PATH=$MINGWPREFIX/qt/bin:$PATH ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins $MINGWPREFIX/KeePassXC/KeePassXC.exe



