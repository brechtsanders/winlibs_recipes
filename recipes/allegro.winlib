#export NAME="Allegro"
#export STATUS=
##export URL=http://www.talula.demon.co.uk/allegro/
#export URL=http://alleg.sourceforge.net/
#export BASENAME=allegro
#export DESCRIPTION="Allegro is a portable library mainly aimed at video game and multimedia programming."
#export CATEGORY=games,gui
#export TYPE=library
##export VERSION=4.4.1.1
##export VERSIONDATE=20101209
##export VERSION=5.0.1
##export VERSIONDATE=20110315
##export VERSION=5.0.2
##export VERSIONDATE=20110403
#####src/win/wjoydxnu.c:424: warning: implicit declaration of function 'IDirectInputDevice8_Acquire'
#####src/win/wjoydxnu.c:981: error: 'DI8DEVCLASS_GAMECTRL' undeclared (first use in this function)
##export VERSION=5.0.2.1
##export VERSIONDATE=20110519
##export VERSION=5.0.3
##export VERSIONDATE=20110522
##export VERSION=5.0.4
##export VERSIONDATE=20110814
##export VERSION=5.0.5
##export VERSIONDATE=20111106
#####addons/audio/openal.c:630: undefined reference to `_imp__alSourcei'
##export VERSION=5.0.6
##export VERSIONDATE=20120304
##export VERSION=5.0.7
##export VERSIONDATE=20120624
##export VERSION=5.0.8
##export VERSIONDATE=20121118
##export VERSION=5.0.9
##export VERSIONDATE=20130217
##export DEPENDENCIES=zlib,libpng,libvorbis
##export OPTIONALDEPENDENCIES=openal
##export VERSION=5.0.10
##export VERSIONDATE=20130616
#export VERSION=5.0.11
#export VERSIONDATE=20150112
#wl-showstatus --package-version
#export DEPENDENCIES=zlib,libpng,libvorbis,openal
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
##export LICENSEFILE=docs/txt/license.txt
#export LICENSEFILE=LICENSE.txt
#export LICENSETYPE=gift-ware
##export DOWNLOADURL="http://www.talula.demon.co.uk/allegro/wip.html allegro-"
#export DOWNLOADURL="http://sourceforge.net/projects/alleg/files/allegro/ allegro-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/alleg/allegro/$VERSION/$BASENAME-$VERSION.tar.gz
##wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
###export DOWNLOADSOURCEURL=http://www.libsdl.org/extras/win32/common/directx-devel.tar.gz
##export DOWNLOADSOURCEURL=http://trent.gamblin.ca/dx/dx9mgw.zip
##wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#export DOWNLOADSOURCEURL="http://downloads.sourceforge.net/project/alleg/allegro/$VERSION/$BASENAME-$VERSION.tar.gz http://trent.gamblin.ca/dx/dx9mgw.zip"
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
#mkdir -p build
#cd build
## get DirectX development files
##tar xz --force-local -f $TARBALLDIR/$BASENAME/directx-devel.tar.gz
#unzip -oq $TARBALLDIR/$BASENAME/dx9mgw.zip
#mv dx9mgw/* . && rmdir dx9mgw
### fix missing definition of DIK_PAUSE in include/dinput.h
##grep -q DIK_PAUSE include/dinput.h || echo "#define DIK_PAUSE 0xC5" >> include/dinput.h
### fix missing Z_BEST_COMPRESSION in addons/image/png.c (version >= 5.0.2.1)
##mv ../addons/image/png.c ../addons/image/png.c.bak
##echo "#define Z_BEST_COMPRESSION 9" > ../addons/image/png.c
##cat ../addons/image/png.c.bak >> ../addons/image/png.c
#if [ "$W32APIINCDIR" == "" ]; then
# W32APIINCDIR=$(ls -1d $MINGWDIR/*mingw32/include)
#fi
#wl-showstatus configure &&
##cmake.exe .. -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DWANT_EXAMPLES=OFF -DWANT_X11=OFF -DDINPUT_INCLUDE_DIR=$W32APIINCDIR -DDSOUND_INCLUDE_DIR=$W32APIINCDIR -DDXGUID_LIBRARY=$W32APIINCDIR &&
##cmake.exe .. -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DWANT_DEMO:BOOL=OFF -DWANT_EXAMPLES:BOOL=OFF -DWANT_X11:BOOL=OFF -DDINPUT_INCLUDE_DIR=$W32APIINCDIR -DDSOUND_INCLUDE_DIR=$W32APIINCDIR -DDXGUID_LIBRARY=$W32APIINCDIR &&
##cmake.exe .. -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DWANT_DEMO:BOOL=OFF -DWANT_EXAMPLES:BOOL=OFF -DWANT_X11:BOOL=OFF -DDINPUT_INCLUDE_DIR=$W32APIINCDIR -DDSOUND_INCLUDE_DIR=$W32APIINCDIR -DDXGUID_LIBRARY=$W32APIINCDIR -DWANT_OPENAL:BOOL=OFF &&
##cmake.exe .. -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED:BOOL=ON -DWANT_DEMO:BOOL=OFF -DWANT_EXAMPLES:BOOL=OFF -DWANT_X11:BOOL=OFF -DDINPUT_INCLUDE_DIR=$W32APIINCDIR -DDSOUND_INCLUDE_DIR=$W32APIINCDIR -DDXGUID_LIBRARY=$W32APIINCDIR -DWANT_OPENAL:BOOL=OFF &&
#cmake.exe .. -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED:BOOL=ON -DWANT_DEMO:BOOL=OFF -DWANT_EXAMPLES:BOOL=OFF -DWANT_X11:BOOL=OFF -DDINPUT_INCLUDE_DIR:PATH=$W32APIINCDIR -DDSOUND_INCLUDE_DIR:PATH=$W32APIINCDIR -DD3D9_INCLUDE_DIR:PATH=$W32APIINCDIR -DD3DX9_INCLUDE_DIR:PATH=$W32APIINCDIR -DGDIPLUS_INCLUDE_DIR:PATH=$W32APIINCDIR -DWANT_OPENAL:BOOL=ON &&
# wl-showstatus build-install &&
# # fix link problems
# sed -i.orig "s?\(-o lib/alleg[0-9]*.dll .*\)?\1 -L`pwd`/lib -ldxguid -ldinput -Wl,--enable-stdcall-fixup?" CMakeFiles/allegro.dir/build.make &&
# # fix install path in Makefiles
# for F in `find . -iname Makefile` ; do
#  sed -i.orig "s?\(-P cmake_install.cmake\)?-DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX \1?" $F
# done &&
# # fix missing w32api folder dependancy
# for F in CMakeFiles/allegro.dir/build.make */CMakeFiles/*.dir/build.make ; do
#   #sed -i.orig "s?[^ ]*/include/w32api??" $F
#   mv $F $F.bak &&
#   sed "s?[^ ]*/include/w32api??" $F.bak > $F
# done &&
# ## fix missing OpenAL32 dependancy
# #mv addons/audio/CMakeFiles/allegro_audio.dir/build.make addons/audio/CMakeFiles/allegro_audio.dir/build.make.bak &&
# #sed -e "s/\(-shared -o.*\)$/\1 -Wl,--as-needed -lOpenAL32/" addons/audio/CMakeFiles/allegro_audio.dir/build.make.bak > addons/audio/CMakeFiles/allegro_audio.dir/build.make &&
# make install/strip &&
# cd .. &&
# mkdir -p $INSTALLPREFIX/include/allegro5/allegro/internal &&
# cp -f include/allegro5/internal/aintern.h $INSTALLPREFIX/include/allegro5/allegro/internal/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####To do: fix w32api folder problems fixed by: mkdir /include/w32api /lib/w32api



export NAME="Allegro"
export STATUS=
export URL=https://liballeg.org/
export BASENAME=allegro
export DESCRIPTION="Allegro is a portable library mainly aimed at video game and multimedia programming."
export CATEGORY=games,gui
export TYPE=library
#export VERSION=5.2.4.0
#export VERSIONDATE=20190111
#export VERSION=5.2.5.0
#export VERSIONDATE=20190304
#export VERSION=5.2.6.0
#export VERSIONDATE=20200210
#export VERSION=5.2.7.0
#export VERSIONDATE=20210308
#export VERSION=5.2.8.0
#export VERSIONDATE=20220606
#export VERSION=5.2.9.0
#export VERSIONDATE=20231126
#export VERSION=5.2.9.1
#export VERSIONDATE=20240120
#export VERSION=5.2.10.0
#export VERSIONDATE=20241128
export VERSION=5.2.10.1
export VERSIONDATE=20241229
wl-showstatus --package-version
export DEPENDENCIES=zlib,libpng,libvorbis,openal
export OPTIONALDEPENDENCIES=freeimage
#export BUILDDEPENDENCIES=cmake
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=docs/txt/license.txt
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=gift-ware
export DOWNLOADURL="https://liballeg.org/download.html"
#export DOWNLOADURL="https://github.com/liballeg/allegro5/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL="https://github.com/liballeg/allegro5/releases/download/$VERSION/$BASENAME-$VERSION.tar.gz"
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# addons/ttf/ttf.c
patch -ulbf addons/ttf/ttf.c << EOF
@@ -266,2 +266,3 @@

+#undef REGION
    REGION lock_rect;
EOF
# fix unresolved symbols from FreeImage in addons/image/freeimage.c (version >= 5.2.6.0)
mv addons/image/freeimage.c addons/image/freeimage.c.bak &&
echo "#define FREEIMAGE_LIB" > addons/image/freeimage.c &&
cat addons/image/freeimage.c.bak >> addons/image/freeimage.c
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED:BOOL=OFF -DWANT_MONOLITH:BOOL=OFF -DWANT_OPENAL:BOOL=ON -DWANT_PYTHON_WRAPPER:BOOL=OFF -DFREETYPE_BZIP2:BOOL=ON -DFREETYPE_PNG:BOOL=ON -DFREETYPE_ZLIB:BOOL=ON -DWANT_STATIC_RUNTIME:BOOL=ON -DWANT_X11:BOOL=OFF -DWANT_DEMO:BOOL=OFF -DWANT_EXAMPLES:BOOL=OFF -DWANT_TESTS:BOOL=OFF -S. -Bbuild_static &&
# #-DDINPUT_INCLUDE_DIR:PATH=$W32APIINCDIR -DDSOUND_INCLUDE_DIR:PATH=$W32APIINCDIR -DD3D9_INCLUDE_DIR:PATH=$W32APIINCDIR -DD3DX9_INCLUDE_DIR:PATH=$W32APIINCDIR -DGDIPLUS_INCLUDE_DIR:PATH=$W32APIINCDIR
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED:BOOL=ON -DWANT_MONOLITH:BOOL=OFF -DWANT_OPENAL:BOOL=ON -DWANT_PYTHON_WRAPPER:BOOL=OFF -DWANT_X11:BOOL=OFF -DWANT_DEMO:BOOL=OFF -DWANT_EXAMPLES:BOOL=OFF -DWANT_TESTS:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# mkdir -p $INSTALLPREFIX/include/allegro5/allegro/internal &&
# cp -f include/allegro5/internal/aintern.h $INSTALLPREFIX/include/allegro5/allegro/internal/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED:BOOL=OFF -DWANT_MONOLITH:BOOL=OFF -DWANT_OPENAL:BOOL=ON -DWANT_PYTHON_WRAPPER:BOOL=OFF -DFREETYPE_BZIP2:BOOL=ON -DFREETYPE_PNG:BOOL=ON -DFREETYPE_ZLIB:BOOL=ON -DWANT_STATIC_RUNTIME:BOOL=ON -DWANT_X11:BOOL=OFF -DWANT_DEMO:BOOL=OFF -DWANT_EXAMPLES:BOOL=OFF -DWANT_TESTS:BOOL=OFF -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_static &&
 #-DDINPUT_INCLUDE_DIR:PATH=$W32APIINCDIR -DDSOUND_INCLUDE_DIR:PATH=$W32APIINCDIR -DD3D9_INCLUDE_DIR:PATH=$W32APIINCDIR -DD3DX9_INCLUDE_DIR:PATH=$W32APIINCDIR -DGDIPLUS_INCLUDE_DIR:PATH=$W32APIINCDIR
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED:BOOL=ON -DWANT_MONOLITH:BOOL=OFF -DWANT_OPENAL:BOOL=ON -DWANT_PYTHON_WRAPPER:BOOL=OFF -DWANT_X11:BOOL=OFF -DWANT_DEMO:BOOL=OFF -DWANT_EXAMPLES:BOOL=OFF -DWANT_TESTS:BOOL=OFF -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/include/allegro5/allegro/internal &&
 cp -f include/allegro5/internal/aintern.h $INSTALLPREFIX/include/allegro5/allegro/internal/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



