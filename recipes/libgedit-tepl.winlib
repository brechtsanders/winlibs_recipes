export NAME="libgedit-tepl"
export STATUS=
#export URL=https://github.com/gedit-technology/libgedit-tepl
export URL=https://gitlab.gnome.org/World/gedit/libgedit-tepl
export BASENAME=libgedit-tepl
export DESCRIPTION="libgedit-tepl is a library that eases the development of text editors and IDEs based on GTK."
export CATEGORY=development
export TYPE=library
#export VERSION=6.10.0
#export VERSIONDATE=20240428
export VERSION=6.11.0
export VERSIONDATE=20240914
wl-showstatus --package-version
export DEPENDENCIES=libgedit-gfls
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSES/LGPL-3.0-or-later.txt
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/gedit-technology/libgedit-tepl/releases"
export DOWNLOADURL="https://gitlab.gnome.org/World/gedit/libgedit-tepl/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/gedit-technology/libgedit-tepl/releases/download/$VERSION/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://gitlab.gnome.org/World/gedit/libgedit-tepl/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix tepl/tepl-style-scheme-row.c (version >= 6.11.0)
patch -ulbf tepl/tepl-style-scheme-row.c << EOF
@@ -35,7 +35,11 @@

+#ifdef GTK_SOURCE_STYLE_SCHEME_KIND_LIGHT_ONLY
                case GTK_SOURCE_STYLE_SCHEME_KIND_LIGHT_ONLY:
                        return !for_dark_theme_variant;
+#endif

+#ifdef GTK_SOURCE_STYLE_SCHEME_KIND_DARK_ONLY
                case GTK_SOURCE_STYLE_SCHEME_KIND_DARK_ONLY:
                        return for_dark_theme_variant;
+#endif

EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 #PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgobject_introspection=true -Dgtk_doc=false . build_both &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgobject_introspection=true -Dgtk_doc=false -Dtests=false . build_both &&
 wl-showstatus build-install &&
 ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



