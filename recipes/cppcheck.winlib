export NAME="Cppcheck"
export STATUS=
export URL=http://cppcheck.sourceforge.net/
export BASENAME=cppcheck
export DESCRIPTION="Cppcheck is a static analysis tool for C/C++ code. Unlike C/C++ compilers and many other analysis tools it does not detect syntax errors in the code. Cppcheck primarily detects the types of bugs that the compilers normally do not detect. The goal is to detect only real errors in the code (i.e. have zero false positives)."
export CATEGORY=development
export TYPE=application
#export VERSION=1.77
#export VERSIONDATE=20170312
#export VERSION=1.78
#export VERSIONDATE=20170401
#export VERSION=1.79
#export VERSIONDATE=20170513
#export VERSION=1.80
#export VERSIONDATE=20170814
#export VERSION=1.81
#export VERSIONDATE=20171008
#export VERSION=1.82
#export VERSIONDATE=20180115
#export VERSION=1.83
#export VERSIONDATE=20180402
#export VERSION=1.84
#export VERSIONDATE=20180614
#export VERSION=1.85
#export VERSIONDATE=20181015
#export VERSION=1.86
#export VERSIONDATE=20181209
#export VERSION=1.87
#export VERSIONDATE=20190209
#export VERSION=1.88
#export VERSIONDATE=20190630
#export VERSION=1.89
#export VERSIONDATE=20190902
#export VERSION=1.90
#export VERSIONDATE=20191221
#export VERSION=2.0
#export VERSIONDATE=20200511
#export VERSION=2.1
#export VERSIONDATE=20200614
#export DEPENDENCIES=pcre
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=2.2
#export VERSIONDATE=20201003
#export VERSION=2.3
#export VERSIONDATE=20201205
#export VERSION=2.4
#export VERSIONDATE=20210322
#export VERSION=2.5
#export VERSIONDATE=20210704
#export VERSION=2.6
#export VERSIONDATE=20211002
#export VERSION=2.7
#export VERSIONDATE=20220205
#export VERSION=2.8
#export VERSIONDATE=20220521
#export VERSION=2.9
#export VERSIONDATE=20220829
#export DEPENDENCIES=pcre,z3
#export OPTIONALDEPENDENCIES=qt
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=2.10
#export VERSIONDATE=20230128
export VERSION=2.11
export VERSIONDATE=20230622
wl-showstatus --package-version
export DEPENDENCIES=pcre,z3,boost
export OPTIONALDEPENDENCIES=qt
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://sourceforge.net/projects/cppcheck/files/cppcheck/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/cppcheck/cppcheck/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix missing std::numeric_limits in lib/symboldatabase.cpp in GCC 11 (version >= 2.4)
####lib/symboldatabase.cpp:1443:32: error: 'numeric_limits' is not a member of 'std'
mv lib/symboldatabase.cpp lib/symboldatabase.cpp.bak &&
echo "#include <limits>" > lib/symboldatabase.cpp &&
cat lib/symboldatabase.cpp.bak >> lib/symboldatabase.cpp
# fix already defined _serialize in picojson.h (version >= 2.10)
sed -i.bak -e "s/_serialize/PICOJSON&/g" externals/picojson/picojson.h
# fix cmake/versions.cmake (version >= 2.11)
patch -ulbf cmake/versions.cmake << EOF
@@ -5,4 +5,3 @@
 LIST(GET VERSION_PARTS 1 VERSION_MINOR)
-LIST(GET VERSION_PARTS 2 VERSION_PATCH)
-SET(SOVERSION "\${VERSION_MAJOR}.\${VERSION_MINOR}.\${VERSION_PATCH}")
+SET(SOVERSION "\${VERSION_MAJOR}.\${VERSION_MINOR}")

EOF
## fix cmake/versions.cmake (version >= 2.0 <= 2.1)
#sed -i.bak -e "s/^LIST.*VERSION_PATCH/#&/" cmake/versions.cmake
#wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTS:BOOL=OFF -DHAVE_RULES:BOOL=ON -DBUILD_GUI:BOOL=OFF . &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTS:BOOL=OFF -DHAVE_RULES:BOOL=ON -DBUILD_GUI:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe . &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTS:BOOL=OFF -DHAVE_RULES:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe . &&
# echo "-Wl,--as-needed -lshlwapi" >> cli/CMakeFiles/cppcheck.dir/linklibs.rsp &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTS:BOOL=OFF -DHAVE_RULES:BOOL=ON -DBUILD_GUI:BOOL=OFF -S. -Bbuild_win &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTS:BOOL=OFF -DHAVE_RULES:BOOL=ON -DBUILD_GUI:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_DISABLE_PRECOMPILE_HEADERS:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DHAVE_RULES:BOOL=ON -DBUILD_GUI:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_DISABLE_PRECOMPILE_HEADERS:BOOL=ON -DUSE_BOOST:BOOL=ON -DHAVE_RULES:BOOL=ON -DBUILD_GUI:BOOL=OFF -DWARNINGS_ARE_ERRORS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DHAVE_RULES:BOOL=ON -DBUILD_GUI:BOOL=ON -DWITH_QCHART:BOOL=ON -DUSE_Z3:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #echo "-Wl,--as-needed -lshlwapi" >> cli/CMakeFiles/cppcheck.dir/linklibs.rsp &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins cppcheck-gui.exe



