#export NAME="FontForge"
#export STATUS=
#export URL=https://fontforge.github.io/en-US/
#export BASENAME=fontforge
#export DESCRIPTION="FontForge is free and open-source outline font editor."
#export CATEGORY=graphics
#export TYPE=application
##export VERSION=20160404
##export VERSIONDATE=20160704
##export VERSION=20160930
##export VERSIONDATE=20161001
##export VERSION=20161001
##export VERSIONDATE=20161002
##export VERSION=20161004
##export VERSIONDATE=20161004
##export VERSION=20161005
##export VERSIONDATE=20161005
##export VERSION=20161012
##export VERSIONDATE=20161013
##export VERSION=20170731
##export VERSIONDATE=20170815
#####fontforge/scripting.c:60:24: fatal error: xvasprintf.h: No such file or directory
##export VERSION=20190317
##export VERSIONDATE=20190317
##export VERSION=20190413
##export VERSIONDATE=20190413
#export VERSION=20190801
#export VERSIONDATE=20190801
#####fatal: Not a git repository (or any parent up to mount point /)
#wl-showstatus --package-version
#export DEPENDANCIES=freetype2,giflib,libjpeg,libtiff,cairo,libspiro,zeromq,readline,libiconv
#export OPTIONALDEPENDANCIES=libspiro
#export BUILDDEPENDANCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/fontforge/fontforge/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/fontforge/fontforge/releases/download/$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/fontforge/fontforge/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
#  ./configure --help
#  head COPYING* LICENSE*
#  ls -l COPYING* LICENSE* COPYRIGHT* configure* CMakeLists.txt
#mkdir -p lib
#touch lib/Makefile.in
## remove glWARN* and glMANYWARN* from configure.ac
#mv configure.ac configure.ac.bak &&
#sed -e "s/\(gl_[A-Z]*WARN[A-Z_]*\).*$/echo Removed \1/" configure.ac.bak > configure.ac
#wl-showstatus configure &&
##touch lib/error.c lib/float.c lib/itold.c lib/gethostname.c lib/localeconv.c lib/lstat.c lib/memchr.c lib/realloc.c lib/stat.c lib/strerror.c &&
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
##./autogen.sh &&
##    echo OK
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
##fi
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM PYTHON=$PYDIR/python.exe &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-libuninameslist PYTHON=$PYDIR/python.exe &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build &&
# make -C fontforge &&
# GIT_SSL_NO_VERIFY=true make &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#    make install-pkgconfigDATA
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="FontForge"
export STATUS=
export URL=https://fontforge.github.io/en-US/
export BASENAME=fontforge
export DESCRIPTION="FontForge is free and open-source outline font editor."
export CATEGORY=graphics
export TYPE=application
#export VERSION=20200314
#export VERSIONDATE=20200314
#export VERSION=20201107
#export VERSIONDATE=20201108
export VERSION=20220308
export VERSIONDATE=20220308
wl-showstatus --package-version
export DEPENDANCIES=freetype2,giflib,libjpeg,libtiff,libspiro,zeromq,readline,libiconv,libxml2,woff2,glib2,pango,cairo,gtk3
export OPTIONALDEPENDANCIES=libspiro
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/fontforge/fontforge/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/fontforge/fontforge/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 #wl-showstatus configure &&
 #PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_WOFF2:BOOL=ON -DENABLE_X11:BOOL=OFF -DENABLE_PYTHON_SCRIPTING:BOOL=OFF -DENABLE_PYTHON_EXTENSION:BOOL=OFF -DENABLE_DOCS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 ##PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_WOFF2:BOOL=ON -DENABLE_X11:BOOL=OFF -DENABLE_PYTHON_SCRIPTING:BOOL=ON -DENABLE_PYTHON_EXTENSION:BOOL=ON -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DENABLE_DOCS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 ## fix invalid linker flag -R (version >= 20201107)
 #sed -i.bak -e "s/-R/-L/" build_static/build.ninja &&
 wl-showstatus configure &&
 PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_WOFF2:BOOL=ON -DENABLE_X11:BOOL=OFF -DENABLE_PYTHON_SCRIPTING:BOOL=OFF -DENABLE_PYTHON_EXTENSION:BOOL=OFF -DENABLE_DOCS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 #PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_WOFF2:BOOL=ON -DENABLE_X11:BOOL=OFF -DENABLE_PYTHON_SCRIPTING:BOOL=ON -DENABLE_PYTHON_EXTENSION:BOOL=ON -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DENABLE_DOCS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 # fix invalid linker flag -R (version >= 20201107)
 sed -i.bak -e "s/-R/-L/" build_shared/build.ninja &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



