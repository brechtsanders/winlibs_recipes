export NAME="tiny-json"
export STATUS=
export URL=https://github.com/rafagafe/tiny-json
export BASENAME=tiny-json
export DESCRIPTION="tiny-json is a versatile and easy to use json parser in C suitable for embedded systems. It is fast, robust and portable. It is not only a tokenizer. You can get data in string format or get the primitives values in C type variables without performance loss."
export CATEGORY=dataprocessing,fileformat
export TYPE=library
export VERSION=master
export VERSIONDATE=20200528
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/rafagafe/tiny-json/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/rafagafe/tiny-json/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus build &&
 ${CC:-gcc} -c -o tiny-json.o tiny-json.c -I. -O3 &&
 ${AR:-ar} cru libtiny-json.a tiny-json.o &&
 ( echo EXPORTS; grep -v "#define\|inline" tiny-json.h | sed -n -e "s/^.* \(json_[^ ]*\)(.*/\1/p" ) > tiny-json.def &&
 ${CC:-gcc} -shared -s -mwindows -def tiny-json.def -o tiny-json.dll libtiny-json.a -Wl,--add-stdcall-alias -Wl,--out-implib,libtiny-json.dll.a &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f *.h $INSTALLPREFIX/include/ &&
 cp -f *.a *.def $INSTALLPREFIX/lib/ &&
 cp -f *.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



