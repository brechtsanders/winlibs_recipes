export NAME="Open Shading Language (OSL)"
export STATUS=
#export URL=https://code.google.com/p/openshadinglanguage/
export URL=
export BASENAME=openshadinglanguage
export DESCRIPTION="Open Shading Language (OSL) is a small but rich language for programmable shading in advanced renderers and other applications, ideal for describing materials, lights, displacement, and pattern generation."
export CATEGORY=graphics
export TYPE=library
#export VERSION=1.5.10
#export VERSIONDATE=20140821
####LLVM not found
#export VERSION=1.8.7
#export VERSIONDATE=20170419
#export VERSION=1.8.8
#export VERSIONDATE=20170502
#export VERSION=1.8.9
#export VERSIONDATE=20170601
#export VERSION=1.8.10
#export VERSIONDATE=20170704
#export VERSION=1.8.11
#export VERSIONDATE=20171004
#export VERSION=1.8.12
#export VERSIONDATE=20171102
#export VERSION=1.8.13
#export VERSIONDATE=20180401
#export VERSION=1.8.14
#export VERSIONDATE=20180502
#export VERSION=1.8.15
#export VERSIONDATE=20180905
#export VERSION=1.9.5
#export VERSIONDATE=20171205
#export VERSION=1.9.6
#export VERSIONDATE=20180102
#export VERSION=1.9.7
#export VERSIONDATE=20180202
#export VERSION=1.9.8
#export VERSIONDATE=20180401
#export VERSION=1.9.9
#export VERSIONDATE=20180502
#export VERSION=1.9.10
#export VERSIONDATE=20180905
#export VERSION=1.9.11
#export VERSIONDATE=20181002
#export VERSION=1.9.12
#export VERSIONDATE=20181102
#export VERSION=1.9.13
#export VERSIONDATE=20181202
#export VERSION=1.10.2
#export VERSIONDATE=20181202
#export VERSION=1.10.3
#export VERSIONDATE=20190202
#export VERSION=1.10.4
#export VERSIONDATE=20190402
#export VERSION=1.10.5
#export VERSIONDATE=20190507
#export VERSION=1.10.7
#export VERSIONDATE=20191003
#export VERSION=1.10.8
#export VERSIONDATE=20191204
#export VERSION=1.10.9
#export VERSIONDATE=20200202
#export VERSION=1.10.10
#export VERSIONDATE=20200510
#export VERSION=1.10.11
#export VERSIONDATE=20200602
#export VERSION=1.10.12
#export VERSIONDATE=20200702
####Could NOT find LLVM
#export VERSION=1.10.13
#export VERSIONDATE=20200801
#export DEPENDENCIES=openimageio,ilmbase,pugixml
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,llvm,clang
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=1.11.7.3
#export VERSIONDATE=20200902
####LLVM 10+ requires C++14 or higher (was 11).  To build against this LLVM 10.0.1, you need to set build option CMAKE_CXX_STANDARD=14.  The minimum requirements for that are gcc >= 5.1, clang >= 3.5, Apple clang >= 7, icc >= 7, MSVS >= 2017.  If you must use C++11, you need to build against LLVM 9 or earlier.
#export VERSION=1.11.8.0
#export VERSIONDATE=20201002
#export VERSION=1.11.9.0
#export VERSIONDATE=20201103
#export VERSION=1.11.10.0
#export VERSIONDATE=20201202
#export VERSION=1.11.11.0
#export VERSIONDATE=20210202
####Could not find a configuration file for package "pugixml" that is compatible with requested version "1.8".
#export VERSION=1.12.0.2-dev
#export VERSIONDATE=20201128
#export VERSION=1.11.12.0
#export VERSIONDATE=20210303
####src/liboslexec/shadingsys.cpp:3401:52: error: no matching function for call to 'open(std::ofstream&, std::string&)'
export VERSION=1.11.13.0
export VERSIONDATE=20210402
#export VERSION=1.11.14.0
#export VERSIONDATE=20210511
#export VERSION=1.11.14.1
#export VERSIONDATE=20210602
#export VERSION=1.11.14.2
#export VERSIONDATE=20210702
#export VERSION=1.11.15.0
#export VERSIONDATE=20210901
#export VERSION=1.11.16.0
#export VERSIONDATE=20211102
#export VERSION=1.11.17.0
#export VERSIONDATE=20220111
#export VERSION=1.12.6.2
#export VERSIONDATE=20221002
#export VERSION=1.12.7.0
#export VERSIONDATE=20221101
#export VERSION=1.12.7.1
#export VERSIONDATE=20221204
#export VERSION=1.12.8.0
#export VERSIONDATE=20230104
#export VERSION=1.12.9.0
#export VERSIONDATE=20230202
#export VERSION=1.12.10.0
#export VERSIONDATE=20230302
#export VERSION=1.12.11.0
#export VERSIONDATE=20230406
####/lib/cmake/OpenImageIO/OpenImageIOTargets-release.cmake:19 (set_property):  set_property could not find TARGET OpenImageIO::OpenImageIO.  Perhaps it has not yet been created.
#export VERSION=1.12.12.0
#export VERSIONDATE=20230502
#export VERSION=1.12.13.0
#export VERSIONDATE=20230702
#export VERSION=1.12.14.0
#export VERSIONDATE=20231102
####LLVM is required, aborting.
#export VERSION=1.13.6.1
#export VERSIONDATE=20240202
#export VERSION=1.13.7.0
#export VERSIONDATE=20240302
wl-showstatus --package-version
####needs #include <type_traits> in the right places
#export DEPENDENCIES=openimageio,ilmbase,pugixml,partio,pybind11
export DEPENDENCIES=openimageio,openexr,pugixml,partio,pybind11
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,llvm,clang
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,llvm-project
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
export LICENSEFILE=LICENSE.md
export LICENSETYPE=BSD
#export DOWNLOADURL="https://github.com/imageworks/OpenShadingLanguage/releases Release-"
export DOWNLOADURL="https://github.com/AcademySoftwareFoundation/OpenShadingLanguage/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/imageworks/OpenShadingLanguage/archive/Release-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/AcademySoftwareFoundation/OpenShadingLanguage/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv -f $TARBALLDIR/$BASENAME/Release-$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/Release-$VERSION.tar.gz
#cd OpenShadingLanguage-Release-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd OpenShadingLanguage-$VERSION
# fix already defined RGB in src/liboslexec/shadingsys.cpp (version >= 1.10.11)
patch -ulbf src/liboslexec/shadingsys.cpp << EOF
@@ -641,2 +641,3 @@
 ustring screen ("screen"), NDC ("NDC");
+#undef RGB
 ustring rgb ("rgb"), RGB ("RGB");
EOF
## fix src/liboslexec/automata.cpp (version >= 1.10.11)
#patch -ulbf src/liboslexec/automata.cpp << EOF
#@@ -139,3 +139,3 @@
#         s += " | ";
#-        s += Strutil::format("%lx", (long unsigned int)m_rule);
#+        s += Strutil::format("%lx", (long unsigned int)(uintptr_t)m_rule);
#     }
#@@ -389,3 +389,3 @@
#                 s += ", ";
#-            s += Strutil::format("%lx", (long unsigned int)*i);
#+            s += Strutil::format("%lx", (long unsigned int)(uintptr_t)*i);
#         }
#EOF
## fix src/liboslexec/accum_test.cpp (version >= 1.10.11)
#patch -ulbf src/liboslexec/accum_test.cpp << EOF
#@@ -69,3 +69,3 @@
#             // about the pixel.
#-            long int testno = (long int)flush_data;
#+            long int testno = (long int)(uintptr_t)flush_data;
#             if (has_color && color.x > 0)
#@@ -111,3 +111,3 @@
#     accum.popState();
#-    accum.end((void *)(long int)testno);
#+    accum.end((void *)(uintptr_t)testno);
# }
#EOF
# fix src/liboslexec/shadingsys.cpp (version >= 1.11.13.0)
patch -ulbf src/liboslexec/shadingsys.cpp << EOF
@@ -3399,3 +3399,3 @@
     std::string groupfilename = tmpdir + "/shadergroup";
-    std::ofstream groupfile;
+    OIIO::ofstream groupfile;
     OIIO::Filesystem::open(groupfile, groupfilename);
EOF
# fix type conversion issue in src/liboslexec/automata.cpp (version >= 1.11.13.0)
sed -i.bak -e "s/(long unsigned int)/&(uintptr_t)/" src/liboslexec/automata.cpp
# avoid issue with OSL tests (version >= 1.11.13.0)
sed -i.bak -e "s/^osl_add_all_tests()/#&/" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=ON -DSE_OIIO_STATIC:BOOL=ON -DUSE_EXTERNAL_PUGIXML:BOOL=ON -DSTOP_ON_WARNING:BOOL=OFF -S. -Bbuild_win &&
 #PATH=$MINGWPREFIX/share/llvm/bin:$PATH cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DSE_OIIO_STATIC:BOOL=ON -DUSE_CPP:STRING=14 -DUSE_EXTERNAL_PUGIXML:BOOL=ON -DSTOP_ON_WARNING:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DOSL_BUILD_TESTS:BOOL=OFF -S. -Bbuild_win &&
 #PATH=$PATH:$MINGWPREFIX/share/llvm/bin:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DSE_OIIO_STATIC:BOOL=ON -DCMAKE_CXX_STANDARD=14 -DUSE_CPP:STRING=14 -DUSE_EXTERNAL_PUGIXML:BOOL=ON -DSTOP_ON_WARNING:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DOSL_BUILD_TESTS:BOOL=OFF -DPython_ROOT:PATH=$PYDIR -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 PATH=$PATH:$MINGWPREFIX/share/llvm/bin:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DSE_OIIO_STATIC:BOOL=ON -DCMAKE_CXX_STANDARD=14 -DUSE_CPP:STRING=14 -DUSE_EXTERNAL_PUGIXML:BOOL=ON -DSTOP_ON_WARNING:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DOSL_BUILD_TESTS:BOOL=OFF -DPython_ROOT:PATH=$PYDIR -DCMAKE_C_COMPILER:FILEPATH=$MINGWPREFIX/share/llvm/bin/clang.exe -DCMAKE_CXX_COMPILER:FILEPATH=$MINGWPREFIX/share/llvm/bin/clang++.exe -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/share/llvm/include/c++/v1" -DCMAKE_EXE_LINKER_FLAGS:STRING="-L$MINGWPREFIX/share/llvm/lib" -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #-DOSL_BUILD_PLUGINS:BOOL=OFF
 #-DUSE_PYTHON:BOOL=OFF 
 wl-showstatus build &&
 #make -C build_win install/strip &&
 PATH=$PYDIR:$MINGWPREFIX/ffmpeg3/bin:$MINGWPREFIX/share/llvm/bin:$PATH make -Cbuild_win install/strip &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf OpenShadingLanguage-Release-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf OpenShadingLanguage-$VERSION
####PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH oslinfo.exe -h
####PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/share/llvm/bin:$MINGWPREFIX/qt/bin:$PATH osltoy.exe



