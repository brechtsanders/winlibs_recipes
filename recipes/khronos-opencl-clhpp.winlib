export NAME="OpenCL(TM) API C++ bindings"
export STATUS=
export URL=https://github.com/KhronosGroup/OpenCL-CLHPP
export BASENAME=khronos-opencl-clhpp
export DESCRIPTION="OpenCL(TM) API C++ bindings (cl.hpp and cl2.hpp)"
export CATEGORY=graphics
export TYPE=library
#export VERSION=2.0.11
#export VERSIONDATE=20200404
#export VERSION=2.0.12
#export VERSIONDATE=20200618
#export VERSION=2.0.13
#export VERSIONDATE=20201219
#export VERSION=2.0.14
#export VERSIONDATE=20210430
#export VERSION=2.0.15
#export VERSIONDATE=20210701
export VERSION=2.0.16
export VERSIONDATE=20220105
#export VERSION=2022.05.18
#export VERSIONDATE=20220604
####Could not find a package configuration file provided by "OpenCLHeaders"
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/KhronosGroup/OpenCL-CLHPP/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/KhronosGroup/OpenCL-CLHPP/archive/v$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/KhronosGroup/OpenCL-CLHPP/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd OpenCL-CLHPP-$VERSION
## fix include/CL/cl.hpp (version <= 2.0.11)
#sed -i.bak -e "s/defined(_WIN32) /&\&\& \!defined(__MINGW32__) /" include/CL/cl.hpp
### fix include/CL/cl2.hpp (version >= 2.0.12)
##sed -i.bak -e "s/defined(_WIN32) /&\&\& \!defined(__MINGW32__) /" include/CL/cl2.hpp
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DOCS:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_win &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
# # fix missing include/CL/cl.hpp (version >= 2.0.12)
# ( ls -1 $INSTALLPREFIX/include/CL/cl.hpp &>/dev/null || echo "#include \"cl2.hpp\"" > $INSTALLPREFIX/include/CL/cl.hpp ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf OpenCL-CLHPP-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DOCS:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOPENCL_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DOPENCL_LIB_DIR:PATH=$MINGWPREFIX/lib -DBUILD_DOCS:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCLHPP_BUILD_TESTS:BOOL=OFF -S. -Bbuild_win && #-DOPENCL_CLHPP_HEADERS_DIR:PATH=$MINGWPREFIX/include 
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 # fix missing include/CL/cl.hpp (version >= 2.0.12)
 ( ls -1 $INSTALLPREFIX/include/CL/cl.hpp &>/dev/null || echo "#include \"cl2.hpp\"" > $INSTALLPREFIX/include/CL/cl.hpp ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf OpenCL-CLHPP-$VERSION



