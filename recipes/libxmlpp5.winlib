export NAME="libxml++ 5"
export STATUS=
export URL=http://libxmlplusplus.sourceforge.net/
export BASENAME=libxmlpp5
export DESCRIPTION="libxml++ is a C++ wrapper for the libxml XML parser library."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=4.9.1
#export VERSIONDATE=20200112
#export VERSION=5.0.0
#export VERSIONDATE=20201222
#export VERSION=5.0.1
#export VERSIONDATE=20210527
#export VERSION=5.0.2
#export VERSIONDATE=20220910
#export VERSION=5.0.3
#export VERSIONDATE=20230322
#export VERSION=5.2.0
#export VERSIONDATE=20240111
export VERSION=5.2.1
export VERSIONDATE=20240813
wl-showstatus --package-version
export DEPENDENCIES=libxml2,glib2,glibmm,zlib,libsigcplusplus2,gettext,libiconv
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL2
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/libxml++/ libxml++-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/libxml++/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/libxml++-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xJ --force-local -f $TARBALLDIR/$BASENAME/libxml++-$VERSION.tar.xz
cd libxml++-$VERSION
# fix detection of python3
sed -i.bak -e "s/'python3'/'python'/" meson.build
## fix detection of glibmm
#sed -i.bak2 -e "s/'glibmm-2\.@0@'\.format(glibmm_req_minor_ver)/'$(ls -1 $MINGWPREFIX/lib/pkgconfig/glibmm-*.pc|sort -V|tail -n1|sed -e "s/^.*\/\([^\/]*\)\.pc$/\1/")'/" meson.build
#sed -i.bak -e "s/glibmm-[.0-9]*/$(ls -1 $MINGWPREFIX/lib/pkgconfig/glibmm-*.pc|sort -V|tail -n1|sed -e "s/^.*\/\([^\/]*\)\.pc$/\1/")/" docs/reference/meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib PATH=$PYDIR:$PATH $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dbuild-deprecated-api=true -Dvalidation=true -Dbuild-documentation=false -Dbuild-pdf=false -Dbuild-examples=false -Dbuild-tests=false -Dcpp_args="-std=c++17" . build_both &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib PATH=$PYDIR:$PATH $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dbuild-deprecated-api=true -Dvalidation=true -Dbuild-documentation=false -Dbuild-pdf=false -Dbuild-examples=false -Dbuild-tests=false -Dcpp_args="-std=c++17" . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libxml++-$VERSION



