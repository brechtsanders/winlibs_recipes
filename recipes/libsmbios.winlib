export NAME="libsmbios"
export STATUS=
export URL=http://linux.dell.com/libsmbios/main/
export BASENAME=libsmbios
export DESCRIPTION="The libsmbios project aims towards providing access to as much BIOS information as possible."
export CATEGORY=hardware
export TYPE=library
#export VERSION=2.0.2
export VERSION=2.0.3
#export VERSION=2.2.13
#### bin-supported/dellMediaDirectCtl.cpp:27:20: sys/io.h: No such file or directory
#### bin-supported/dellMediaDirectCtl.cpp: In function `void _callSmi(smiRegs*, u8)':
#### bin-supported/dellMediaDirectCtl.cpp:186: error: `iopl' was not declared in this scope
#export VERSION=2.2.14
#export VERSION=2.2.16
#export VERSION=2.2.17
#export VERSION=2.2.18
#export VERSION=2.2.19
#export VERSION=2.2.22
#export VERSION=2.2.23
#export VERSION=2.2.24
#export VERSION=2.2.26
export VERSIONDATE=
#export VERSION=2.2.27
#export VERSIONDATE=20110430
#export VERSION=2.2.28
#export VERSIONDATE=20110630
#export VERSION=2.3.0
#export VERSIONDATE=20160314
#export VERSION=2.3.3
#export VERSIONDATE=20170429
#export VERSION=2.4.0
#export VERSIONDATE=20180207
#export VERSION=2.4.1
#export VERSIONDATE=20180215
#export VERSION=2.4.2
#export VERSIONDATE=20180709
#export VERSION=2.4.3
#export VERSIONDATE=20200201
wl-showstatus --package-version
export DEPENDANCIES=cppunit,xerces
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING-GPL
export LICENSETYPE=GPL2
#export DOWNLOADURL="http://linux.dell.com/libsmbios/download/libsmbios/"
export DOWNLOADURL="https://github.com/dell/libsmbios/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://linux.dell.com/libsmbios/download/libsmbios/libsmbios-$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://linux.dell.com/libsmbios/download/libsmbios/libsmbios-$VERSION/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/dell/libsmbios/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix missing include of stdio.h
mv libraries/cmos/CmosRW.cpp libraries/cmos/CmosRW.cpp.bak
echo "#include <stdio.h>" > libraries/cmos/CmosRW.cpp
cat libraries/cmos/CmosRW.cpp.bak >> libraries/cmos/CmosRW.cpp
mv libraries/smbios/SmbiosStrategy_Linux.cpp libraries/smbios/SmbiosStrategy_Linux.cpp.bak
echo "#include <stdio.h>" > libraries/smbios/SmbiosStrategy_Linux.cpp
cat libraries/smbios/SmbiosStrategy_Linux.cpp.bak >> libraries/smbios/SmbiosStrategy_Linux.cpp
mv libraries/smi/SmiImpl.h libraries/smi/SmiImpl.h.bak
echo "#include <stdio.h>" > libraries/smi/SmiImpl.h
cat libraries/smi/SmiImpl.h.bak >> libraries/smi/SmiImpl.h
# fix missing include of stdlib.h
mv bin-supported/getSystemId.cpp bin-supported/getSystemId.cpp.bak
echo "#include <stdlib.h>" > bin-supported/getSystemId.cpp
cat bin-supported/getSystemId.cpp.bak >> bin-supported/getSystemId.cpp
mv bin-supported/verifySmiPassword.cpp bin-supported/verifySmiPassword.cpp.bak
echo "#include <stdlib.h>" > bin-supported/verifySmiPassword.cpp
cat bin-supported/verifySmiPassword.cpp.bak >> bin-supported/verifySmiPassword.cpp
mv bin-supported/dellBiosUpdate.cpp bin-supported/dellBiosUpdate.cpp.bak
echo "#include <stdlib.h>" > bin-supported/dellBiosUpdate.cpp
cat bin-supported/dellBiosUpdate.cpp.bak >> bin-supported/dellBiosUpdate.cpp
mv bin-unsupported/getPasswordFormat.cpp bin-unsupported/getPasswordFormat.cpp.bak
echo "#include <stdlib.h>" > bin-unsupported/getPasswordFormat.cpp
cat bin-unsupported/getPasswordFormat.cpp.bak >> bin-unsupported/getPasswordFormat.cpp
mv bin-unsupported/ascii2enUS_scancode.cpp bin-unsupported/ascii2enUS_scancode.cpp.bak
echo "#include <stdlib.h>" > bin-unsupported/ascii2enUS_scancode.cpp
cat bin-unsupported/ascii2enUS_scancode.cpp.bak >> bin-unsupported/ascii2enUS_scancode.cpp
# replace CmosRW_LinuxIO.cpp with CmosRW_WindowsIO.cpp
mv libraries/cmos/CmosRW_LinuxIO.cpp libraries/cmos/CmosRW_LinuxIO.cpp.bak
echo "#include <stdio.h>" > libraries/cmos/CmosRW_LinuxIO.cpp
sed -e "s/\(GetModuleHandle\)( *L/\1A(/" libraries/cmos/CmosRW_WindowsIO.cpp >> libraries/cmos/CmosRW_LinuxIO.cpp
# fix stdio.h issues for 64-bit in include/smbios/config.hpp (version >= 2.0.3)
mv include/smbios/config.hpp include/smbios/config.hpp.bak
echo "#include <stdio.h>" > include/smbios/config.hpp
cat include/smbios/config.hpp.bak >> include/smbios/config.hpp
# fix stdio.h issues for 64-bit in include/smbios/compat.h (version >= 2.0.3)
mv include/smbios/compat.h include/smbios/compat.h.bak
echo "#include <stdio.h>" > include/smbios/compat.h
cat include/smbios/compat.h.bak >> include/smbios/compat.h
## fix stdio.h issues for 64-bit in libraries/cmos/CmosRWFactory.cpp (version >= 2.0.3)
#mv libraries/cmos/CmosRWFactory.cpp libraries/cmos/CmosRWFactory.cpp.bak
#echo "#include <stdio.h>" > libraries/cmos/CmosRWFactory.cpp
#cat libraries/cmos/CmosRWFactory.cpp.bak >> libraries/cmos/CmosRWFactory.cpp
## fix stdio.h issues for 64-bit in libraries/common/ascii2enUS_scancode.cpp (version >= 2.0.3)
#mv libraries/common/ascii2enUS_scancode.cpp libraries/common/ascii2enUS_scancode.cpp.bak
#echo "#include <stdio.h>" > libraries/common/ascii2enUS_scancode.cpp
#cat libraries/common/ascii2enUS_scancode.cpp.bak >> libraries/common/ascii2enUS_scancode.cpp
## fix stdio.h issues for 64-bit in include/smbios/IFactory.h (version >= 2.0.3)
#mv include/smbios/IFactory.h include/smbios/IFactory.h.bak
#echo "#include <stdio.h>" > include/smbios/IFactory.h
#cat include/smbios/IFactory.h.bak >> include/smbios/IFactory.h
## fix stdio.h issues for 64-bit in libraries/common/Observer.cpp (version >= 2.0.3)
#mv libraries/common/Observer.cpp libraries/common/Observer.cpp.bak
#echo "#include <stdio.h>" > libraries/common/Observer.cpp
#cat libraries/common/Observer.cpp.bak >> libraries/common/Observer.cpp
# fix missing sys/io.h and iopl
mkdir sys
echo "#define iopl(n)" > sys/io.h
# replace Memory_Linux.cpp with Memory_Windows.cpp
mv libraries/memory/Memory_Linux.cpp libraries/memory/Memory_Linux.cpp.bak
sed -e "s/\(GetModuleHandle\)( *L/\1A(/" libraries/memory/Memory_Windows.cpp > libraries/memory/Memory_Linux.cpp
# replace Smi_Linux.cpp with Smi_Windows.cpp
mv libraries/smi/Smi_Linux.cpp libraries/smi/Smi_Linux.cpp.bak
cp libraries/smi/Smi_Windows.cpp libraries/smi/Smi_Linux.cpp
# comment our UNREFERENCED_PARAMETER assertion to avoid compile error
mv libraries/smbios/SmbiosStrategy.cpp libraries/smbios/SmbiosStrategy.cpp.bak
sed -e "s?\(UNREFERENCED_PARAMETER\)?//\1?" libraries/smbios/SmbiosStrategy.cpp.bak > libraries/smbios/SmbiosStrategy.cpp
sed -e "s/\(GetModuleHandle\)( *L/\1A(/" libraries/smbios/SmbiosStrategy_Windows.cpp >> libraries/smbios/SmbiosStrategy.cpp
# define missing strnlen (32-bit only)
if ( echo $RUNPLATFORM | grep -qv x86_64 ) && ( ! gcc --version | grep -q "MinGW-W64" ); then
cat >> include/smbios/compat.h << EOF
#ifndef HAVE_OWN_STRNLEN
#define HAVE_OWN_STRNLEN
inline int strnlen (const char *str, size_t maxlen)
{
 int l = 0;
 if (str)
  while (l < maxlen && str[l])
   l++;
 return l;
}
#endif
EOF
fi
# define missing strndup
mv bin-unsupported/smitest.cpp bin-unsupported/smitest.cpp.bak
cat > bin-unsupported/smitest.cpp << EOF
#include "smbios/compat.h"
#include <malloc.h>
char* strndup (const char *str, size_t maxlen)
{
  int l = strnlen(str, maxlen);
  char* s = (char*)malloc(l + 1);
  memcpy(s, str, l);
  s[l] = 0;
  return s;
}
EOF
cat bin-unsupported/smitest.cpp.bak >> bin-unsupported/smitest.cpp
# define missing nanosleep
mv bin-unsupported/dellLEDCtl.cpp bin-unsupported/dellLEDCtl.cpp.bak
if ( echo $RUNPLATFORM | grep -qv x86_64 ) && ( ! gcc --version | grep -q "MinGW-W64" ); then
cat > bin-unsupported/dellLEDCtl.cpp << EOF
struct timespec {
 long tv_sec;
 long tv_nsec;
};
EOF
else
echo "" > bin-unsupported/dellLEDCtl.cpp
fi
cat >> bin-unsupported/dellLEDCtl.cpp << EOF
//#define nanosleep(ts,p) _sleep((ts)->tv_sec * 1000 + (ts)->tv_nsec / 1000000000)
#include <stdlib.h>
#include <time.h>
#undef nanosleep
static void nanosleep(struct timespec* ts, struct timespec* p) {
 _sleep(ts->tv_sec * 1000 + ts->tv_nsec / 1000000000);
}
EOF
cat bin-unsupported/dellLEDCtl.cpp.bak >> bin-unsupported/dellLEDCtl.cpp
# fix missing strnlen (version >= 2.2.26)
mv src/libsmbios_c/system_info/service_tag.c src/libsmbios_c/system_info/service_tag.c.bak
cat > src/libsmbios_c/system_info/service_tag.c << EOF
int strnlen (const char* s, int maxlen) 
{
  for (int i = 0; i < maxlen; i++) if (s[i] == '\0') return i;
  return -1;
}
EOF
cat src/libsmbios_c/system_info/service_tag.c.bak >> src/libsmbios_c/system_info/service_tag.c
# fix missing miniddk.h (version >= 2.2.28)
cat > src/libsmbios_c/common/miniddk.h << EOF
#define LIBSMBIOS_PACKED_ATTR
#include "../../libsmbios_c++/common/miniddk.h"
EOF
## fix src/libsmbios_c/common/common_windows.h (version >= 2.3.0)
#patch -ulbf src/libsmbios_c/common/common_windows.h << EOF
#--- src/libsmbios_c/common/common_windows.h  2016-03-02 20:18:35.000000000 +0100
#+++ src/libsmbios_c/common/common_windows.h  2016-03-14 14:12:42.828719600 +0100
#@@ -13,2 +13,6 @@
# ZwSystemDebugControlPtr ZwSystemDebugControl;
#+#ifdef __MINGW32__
#+#define GetSystemFirmwareTable MYGetSystemFirmwareTable
#+#define EnumSystemFirmwareTables MYEnumSystemFirmwareTables
#+#endif
# GetSystemFirmwareTablePtr GetSystemFirmwareTable;
#EOF
## fix conflicting declaration of snprintf in src/include/smbios/compat.h (version >= 2.3.0)
#mv src/include/smbios/compat.h src/include/smbios/compat.h.bak
#echo "#include <stdio.h>" > src/include/smbios/compat.h
#cat src/include/smbios/compat.h.bak >> src/include/smbios/compat.h
# fix error with Wl,--avoid-version (version >= 2.2.28)
mv Makefile.in Makefile.in.bak
sed -e "s/ Wl,--avoid-version/ /" Makefile.in.bak > Makefile.in
#sed -e "s/ Wl,--avoid-version/ /; s/--Wl,--no-undefined//" Makefile.in.bak > Makefile.in
## fix errors with -Wl (version >= 2.3.0)
#mv Makefile.in Makefile.in.bak2
#sed -e "s/ \(--Wl\|Wl\),/ -Wl,/" Makefile.in.bak2 > Makefile.in
wl-showstatus configure &&
#autoreconf -f -i -I $MINGWPREFIX/share/aclocal &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I`pwd`/src/libsmbios_c++/common"
## fix missing LIBSMBIOS_PACKED_ATTR in src/include/smbios/config/compiler/gcc.hpp (version >= 2.2.19)
#patch -ulbf Makefile << EOF
#--- src/include/smbios/config/compiler/gcc.hpp  2009-03-24 08:21:54 +0100
#+++ src/include/smbios/config/compiler/gcc.hpp  2010-01-28 00:02:00 +0100
#@@ -52,3 +52,7 @@
# #define LIBSMBIOS_HAS_FUNCTION
#+#ifdef __MINGW32__
#+#define LIBSMBIOS_PACKED_ATTR
#+#else
# #define LIBSMBIOS_PACKED_ATTR      __attribute__ ((packed))
#+#endif
#EOF
## undo fix for vc++ /w4 (version >= 2.2.19)
#mv src/libsmbios_c/memory/memory_windows.c src/libsmbios_c/memory/memory_windows.c.bak
#sed -e "s/u64 tmp/u32 tmp/" src/libsmbios_c/memory/memory_windows.c.bak > src/libsmbios_c/memory/memory_windows.c
## fix redefinition of GetSystemFirmwareTable/EnumSystemFirmwareTables in src/libsmbios_c/common/common_windows.h (version >= 2.3.3)
#mv src/libsmbios_c/common/common_windows.h src/libsmbios_c/common/common_windows.h.bak
#cat > src/libsmbios_c/common/common_windows.h << EOF
##include <sysinfoapi.h>
##define GetSystemFirmwareTable MYGetSystemFirmwareTable
##define EnumSystemFirmwareTables MYEnumSystemFirmwareTables
#EOF
#cat src/libsmbios_c/common/common_windows.h.bak >> src/libsmbios_c/common/common_windows.h
## remove dependancy on dynamic libstdc++ (GCC 4)
#mv libtool libtool.bak &&
#sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-libsmbios_cxx --enable-python PYTHON=$PYDIR/python.exe &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 cp -rfp include $INSTALLPREFIX/ &&
 strip $INSTALLPREFIX/bin/*.dll $INSTALLPREFIX/sbin/*.exe &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION


#export VERSION=2.2.7
#export VERSION=2.2.13
#export VERSION=2.2.14
#export VERSION=2.2.16
#export VERSION=2.2.18
#export VERSION=2.2.19
#export VERSION=2.2.24
#export VERSION=2.2.26
# don't stop on warnings (src/libsmbios_c++/smbios/SmbiosWorkaround.cpp:100: warning: 'cmpPtr' might be used uninitialized in this function)
mv Makefile.in Makefile.in.bak
sed -e "s/-Wall//; s/-Werror//; s/-*Wl,--avoid-version//; s/-*Wl,--no-undefined/-Wl,--no-undefined/" Makefile.in.bak > Makefile.in
## undo fix for vc++ /w4
#mv src/libsmbios_c/memory/memory_windows.c src/libsmbios_c/memory/memory_windows.c.bak
#sed -e "s/u64 tmp/u32 tmp/" src/libsmbios_c/memory/memory_windows.c.bak > src/libsmbios_c/memory/memory_windows.c
PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I`pwd`/src/libsmbios_c++/common -DLIBSMBIOS_PACKED_ATTR=" &&
 wl-showstatus build-install &&
 make install-strip &&
    echo OK
# fix empty list in for
mv Makefile Makefile.bak
sed -e "s/\(HOOK_REPLACE =.*\)$/\1 ./" Makefile.bak > Makefile
out/smbios-sys-info-lite.exe
####out/smbios-sys-info-lite.exe has encountered a problem and needs to close.
#make check
#src/cppunit/runtests.sh



#export NAME="libsmbios"
#export STATUS=
#export URL=https://github.com/dell/libsmbios
#export BASENAME=libsmbios
#export DESCRIPTION="libsmbios provides a library to interface with the SMBIOS tables. It also provides extensions for proprietary methods of interfacing with Dell specific SMBIOS tables."
#export CATEGORY=hardware
#export TYPE=library
##export VERSION=2.3.2
##export VERSIONDATE=20161213
##export VERSION=2.3.3
##export VERSIONDATE=20170314
##export VERSION=2.4.0
##export VERSIONDATE=20180207
##export VERSION=2.4.1
##export VERSIONDATE=20180215
##export VERSION=2.4.2
##export VERSIONDATE=20180607
#export VERSION=2.4.3
#export VERSIONDATE=20200201
#####make[1]: *** No rule to make target 'out/smbios-upflag-ctl.1', needed by 'all-am'.  Stop.
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE="GPL/OSL"
#export DOWNLOADURL="https://github.com/dell/libsmbios/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/dell/libsmbios/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix redefinition of snprintf in src/include/smbios/compat.h
#mv src/include/smbios/compat.h src/include/smbios/compat.h.bak &&
#echo "#include <stdio.h>" > src/include/smbios/compat.h &&
#cat src/include/smbios/compat.h.bak >> src/include/smbios/compat.h
## fix redefinition of GetSystemFirmwareTable/EnumSystemFirmwareTables in src/libsmbios_c/common/common_windows.h
#patch -ulbf src/libsmbios_c/common/common_windows.h << EOF
#--- src/libsmbios_c/common/common_windows.h  2016-08-23 20:47:22.000000000 +0200
#+++ src/libsmbios_c/common/common_windows.h  2016-12-13 23:10:09.915240200 +0100
#@@ -13,3 +13,5 @@
# ZwSystemDebugControlPtr ZwSystemDebugControl;
#+#define GetSystemFirmwareTable libsmbiosGetSystemFirmwareTable
# GetSystemFirmwareTablePtr GetSystemFirmwareTable;
#+#define EnumSystemFirmwareTables libsmbiosEnumSystemFirmwareTables
# EnumSystemFirmwareTablesPtr EnumSystemFirmwareTables;
#EOF
## fix missing @MKINSTALLDIRS@
#cat > mkdirs.sh << EOF
##!/bin/sh
#echo mkdir -p \$*
#EOF
## fix invalid linker flags
#mv Makefile.am Makefile.am.bak &&
#sed -e "s/-*\(Wl,--\)/-\1/g; s/-Wl,--avoid-version//" Makefile.am.bak > Makefile.am
#wl-showstatus configure &&
#autoreconf -f -i -I $MINGWPREFIX/share/aclocal &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-python &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-python CFLAGS="-I$(pwd)/src/libsmbios_c/smi" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-python CFLAGS="-I$(pwd)/src/libsmbios_c/smi" HELP2MAN="$PERLDIR/bin/python.exe $(which help2man)" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-python PYTHON=$PYDIR/python.exe &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build &&
# make &&
# wl-showstatus build-install &&
# ( make install-strip || make install-strip MKINSTALLDIRS="$(pwd)/mkdirs.sh" ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####check if "WINDOWS MEMORY ACCESS NOT IMPLEMENTED YET!!!!" appears when running: out/smbios-sys-info-lite.exe



