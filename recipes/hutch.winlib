#export NAME="hutch"
#export STATUS=
#export URL=https://babelouest.github.io/hutch/
##export URL=https://github.com/babelouest/hutch
#export BASENAME=hutch
#export DESCRIPTION="Online password and secret locker"
#export CATEGORY=security
#export TYPE=application
##export VERSION=1.0.0
##export VERSIONDATE=20170517
##export VERSION=1.0.1
##export VERSIONDATE=20170606
##export VERSION=1.0.2
##export VERSIONDATE=20171115
##export DEPENDENCIES=ulfius,hoel
##export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=
##export OPTIONALBUILDDEPENDENCIES=
##export VERSION=1.1.0
##export VERSIONDATE=20180224
#export VERSION=1.1.1
#export VERSIONDATE=20180610
#####CMake 3.5 or higher is required.  You are running version 3.4.3
#wl-showstatus --package-version
#export DEPENDENCIES=ulfius,hoel,yder,libjansson,libconfig
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/babelouest/hutch/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/babelouest/hutch/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/babelouest/hutch/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
##wl-showstatus build &&
## make &&
##    echo OK
#
## fix missing file
#mkdir -p winfix/sys winfix/netinet winfix/arpa
#echo "#include <winsock2.h>" > winfix/sys/socket.h
#touch winfix/netinet/in.h winfix/arpa/inet.h
## fix missing access() in src/static_file_callback.c
#mv src/static_file_callback.c src/static_file_callback.c.bak &&
#echo "#include <io.h>" > src/static_file_callback.c &&
#cat src/static_file_callback.c.bak >> src/static_file_callback.c
## fix missing uint in src/webservice.c
#mv src/webservice.c src/webservice.c.bak &&
#echo "#define uint unsigned int" > src/webservice.c &&
#cat src/webservice.c.bak >> src/webservice.c
## fix missing uint in src/hutch.c
#patch -ulbf src/hutch.c << EOF
#@@ -33,2 +33,3 @@
# #include "hutch.h"
#+#define uint unsigned int
#
#@@ -93,6 +94,10 @@
#   // Catch end signals to make a clean exit
#+#ifdef SIGQUIT
#   signal (SIGQUIT, exit_handler);
#+#endif
#   signal (SIGINT, exit_handler);
#   signal (SIGTERM, exit_handler);
#+#ifdef SIGHUP
#   signal (SIGHUP, exit_handler);
#+#endif
#
#@@ -805,3 +810,3 @@
#       if (res != length) {
#-        fprintf(stderr, "fread warning, reading %zu while expecting %zu", res, length);
#+        fprintf(stderr, "fread warning, reading %lu while expecting %lu", (unsigned long)res, (unsigned long)length);
#       }
#EOF
## fix detection issues (version >= 1.1.1)
#sed -i.bak -e "s/\(find_package(\)\(Yder\|Ulfius\|Hoel\) [0-9.]* \(QUIET\)/\1\2 \3/" CMakeLists.txt
#wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_C_FLAGS:STRING="-I$(pwd)/winfix" . &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC:BOOL=ON -DWITH_JANSSON:BOOL=ON -DWITH_CURL:BOOL=ON -DWITH_JOURNALD:BOOL=OFF -DCHECK_ORCANIA:BOOL=ON -DCHECK_YDER:BOOL=ON -DWITH_SQLITE3:BOOL=ON -DWITH_MARIADB:BOOL=OFF -DWITH_PGSQL:BOOL=OFF -DWITH_WEBSOCKET:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$(pwd)/winfix" . &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC:BOOL=ON -DWITH_JANSSON:BOOL=ON -DWITH_CURL:BOOL=ON -DWITH_JOURNALD:BOOL=OFF -DCHECK_ORCANIA:BOOL=ON -DCHECK_YDER:BOOL=ON -DWITH_SQLITE3:BOOL=ON -DWITH_MARIADB:BOOL=OFF -DWITH_PGSQL:BOOL=OFF -DWITH_WEBSOCKET:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-fcommon -I$(pwd)/winfix" . &&
# echo "-Wl,--as-needed -lws2_32" >> CMakeFiles/hutch.dir/linklibs.rsp &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="hutch"
export STATUS=
export URL=https://babelouest.github.io/hutch/
#export URL=https://github.com/babelouest/hutch
export BASENAME=hutch
export DESCRIPTION="Online password and secret locker"
export CATEGORY=security
export TYPE=application
export VERSION=2.0.0
export VERSIONDATE=20211201
wl-showstatus --package-version
export DEPENDENCIES=ulfius,hoel,yder,rhonabwy,iddawc,libjansson,libconfig,zlib
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/babelouest/hutch/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/babelouest/hutch/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/hutch.c (version >= 2.0.0)
patch -ulbf src/hutch.c << EOF
@@ -27,2 +27,5 @@
 #include <libconfig.h>
+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <sys/socket.h>
@@ -30,2 +33,3 @@
 #include <arpa/inet.h>
+#endif
 #include <string.h>
@@ -33,2 +37,3 @@
 #include "hutch.h"
+#define uint unsigned int

@@ -114,6 +119,10 @@
   // Catch end signals to make a clean exit
+#ifdef SIGQUIT
   signal (SIGQUIT, exit_handler);
+#endif
   signal (SIGINT, exit_handler);
   signal (SIGTERM, exit_handler);
+#ifdef SIGHUP
   signal (SIGHUP, exit_handler);
+#endif

@@ -816,3 +825,3 @@
       if (!(type & R_KEY_TYPE_PRIVATE)) {
-        fprintf(stderr, "Invalid jwk at index %zu, must be a private key, exiting\\n", i);
+        fprintf(stderr, "Invalid jwk at index %lu, must be a private key, exiting\\n", (unsigned long)i);
         ret = 0;
@@ -820,3 +829,3 @@
       if (!o_strlen(r_jwk_get_property_str(jwk, "kid"))) {
-        fprintf(stderr, "Invalid jwk at index %zu, kid property missing, exiting\\n", i);
+        fprintf(stderr, "Invalid jwk at index %lu, kid property missing, exiting\\n", (unsigned long)i);
         ret = 0;
@@ -824,3 +833,3 @@
       if (!o_strlen(r_jwk_get_property_str(jwk, "alg"))) {
-        fprintf(stderr, "Invalid jwk at index %zu, alg property missing, exiting\\n", i);
+        fprintf(stderr, "Invalid jwk at index %lu, alg property missing, exiting\\n", (unsigned long)i);
         ret = 0;
@@ -935,3 +944,3 @@
       if (res != length) {
-        fprintf(stderr, "fread warning, reading %zu while expecting %zu", res, length);
+        fprintf(stderr, "fread warning, reading %lu while expecting %lu", (unsigned long)res, (unsigned long)length);
       }
EOF
# fix printf issues when printing time_t
sed -i.bak -e "s/\(printf(.*%lu.*, \)\(now)\)/\1(unsigned long)\2/" src/profile.c src/safe.c src/safe_key.c src/coin.c
# fix too manu arguments to i_verify_dpop_proof() in src/iddawc_resource.c (version >= 2.0.0)
patch -ulbf src/iddawc_resource.c << EOF
@@ -125,3 +125,3 @@
               htu = msprintf("%s%s", config->resource_url_root, request->url_path);
-              if (i_verify_dpop_proof(u_map_get(request->map_header, I_HEADER_DPOP), request->http_verb, htu, config->dpop_max_iat, json_string_value(json_object_get(json_object_get(j_access_token, "cnf"), "jkt")), token_value) == I_OK) {
+              if (i_verify_dpop_proof(u_map_get(request->map_header, I_HEADER_DPOP), request->http_verb, htu, config->dpop_max_iat, json_string_value(json_object_get(json_object_get(j_access_token, "cnf"), "jkt"))) == I_OK) {
                 res = U_CALLBACK_CONTINUE;
EOF
# fix detection issues (version >= 2.0.0)
sed -i.bak -e "s/\(find_package(.*\) \${[^}]*_VERSION_REQUIRED} QUIET\()\)/\1\2/; s/^set(JANSSON_MIN_VERSION/#&/" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DDOWNLOAD_DEPENDENCIES:BOOL=OFF -DCHECK_YDER:BOOL=ON -DSEARCH_ORCANIA:BOOL=ON -DSEARCH_ORCANIA_H:BOOL=ON -DSEARCH_ORCANIA_I:BOOL=ON -DSEARCH_ORCANIA_R:BOOL=ON -DSEARCH_ORCANIA_U:BOOL=ON -DSEARCH_RHONABWY_I:BOOL=ON -DSEARCH_ULFIUS_I:BOOL=ON -DSEARCH_ULFIUS_R:BOOL=ON -DSEARCH_YDER:BOOL=ON -DSEARCH_YDER_I:BOOL=ON -DSEARCH_YDER_R:BOOL=ON -DWITH_MARIADB:BOOL=ON -DWITH_SQLITE3:BOOL=ON -DCMAKE_C_FLAGS:STRING="-fcommon -I$(pwd)/winfix" -S. -Bbuild_win &&
 # add linker flag
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lws2_32/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



