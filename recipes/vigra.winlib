export NAME="VIGRA"
export STATUS=
export URL=http://ukoethe.github.io/vigra/
export BASENAME=vigra
export DESCRIPTION="VIGRA stands for \"Vision with Generic Algorithms\". It's an image processing and analysis library that puts its main emphasis on customizable algorithms and data structures. VIGRA is especially strong for multi-dimensional images, because many algorithms (e.g. filters, feature computation, superpixels) are implemented for arbitrary high dimensions. By using template techniques similar to those in the C++ Standard Template Library, you can easily adapt any VIGRA component to the needs of your application, without thereby giving up execution speed."
export CATEGORY=
export TYPE=library
#export VERSION=1.10.0
#export VERSIONDATE=20141221
#export VERSION=1.11.0
#export VERSIONDATE=20160406
####include/vigra/utilities.hxx:152:28: error: '_vigra_finally_impl_0' does not name a type
#export VERSION=1.11.1
#export VERSIONDATE=20170520
#export VERSION=1.11.2
#export VERSIONDATE=20231001
#export VERSION=1.12.0
#export VERSIONDATE=20240902
export VERSION=1.12.1
export VERSIONDATE=20240903
wl-showstatus --package-version
#export DEPENDENCIES=hdf5,libjpeg,libpng,libtiff,fftw,openexr
export DEPENDENCIES=hdf5,libjpeg,libpng,libtiff,fftw,openexr,lemon,boost
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE="VIGRA \(= MIT X11\)"
#export DOWNLOADURL="http://ukoethe.github.io/vigra/#download vigra- -src-with-docu.tar.gz"
export DOWNLOADURL="https://github.com/ukoethe/vigra/releases/ Version-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/ukoethe/vigra/releases/download/Version-$(echo $VERSION|tr . -)/vigra-$VERSION-src-with-docu.tar.gz
export DOWNLOADSOURCEURL=https://github.com/ukoethe/vigra/archive/Version-$(echo $VERSION|tr . -).tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/Version-$(echo $VERSION|tr . -) $TARBALLDIR/$BASENAME/vigra-Version-$(echo $VERSION|tr . -).tar.gz || mv $TARBALLDIR/$BASENAME/Version-$(echo $VERSION|tr . -).tar.gz $TARBALLDIR/$BASENAME/vigra-Version-$(echo $VERSION|tr . -).tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/vigra-Version-$(echo $VERSION|tr . -).tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/Version-$(echo $VERSION|tr . -).tar.gz
cd vigra-Version-$(echo $VERSION|tr . -)
## fix src/impex/imageinfo.cxx (version <= 1.10.0)
#patch -ulbf src/impex/imageinfo.cxx << EOF
#--- src/impex/imageinfo.cxx  2013-11-18 17:48:16 +0100
#+++ src/impex/imageinfo.cxx  2014-12-21 08:56:08 +0100
#@@ -66,3 +66,3 @@
#
#-#if defined(_MSC_VER)
#+#if defined(_MSC_VER) || defined(__MINGW32__)
# #  include "vigra/windows.h"
#EOF
# fix src/impex/imageinfo.cxx (version >= 1.11.1)
patch -ulbf src/impex/imageinfo.cxx << EOF
@@ -66,5 +66,6 @@

-#if defined(_MSC_VER)
+#if defined(_MSC_VER) || defined(__MINGW32__)
 #  include "vigra/windows.h"
 #  include <io.h>
+#  include <dirent.h>
 #else
EOF
# fix redefinition of DIFFERENCE in include/vigra/accessor.hxx
mv include/vigra/accessor.hxx include/vigra/accessor.hxx.bak
cat > include/vigra/accessor.hxx << EOF
#include <windows.h>
#undef DIFFERENCE
EOF
cat include/vigra/accessor.hxx.bak >> include/vigra/accessor.hxx
rm -f include/vigra/accessor.hxx.bak
# additional H5Oget_info_by_name parameter for newer HDF5 in src/impex/hdf5impex.cxx (version >= 1.11.1)
patch -ulbf src/impex/hdf5impex.cxx << EOF
@@ -192,3 +192,3 @@
     H5O_info_t infobuf;
-    H5Oget_info_by_name(loc_id, name, &infobuf, H5P_DEFAULT);
+    H5Oget_info_by_name(loc_id, name, &infobuf, H5O_INFO_ALL, H5P_DEFAULT);
     return infobuf.type;
EOF
#wl-showstatus configure
##-DPYTHON_EXECUTABLE:PATH=$PYDIR/python.exe -DVIGRANUMPY_INSTALL_DIR:PATH=$INSTALLPREFIX/python/Lib/site-packages
#cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DVIGRA_STATIC_LIB:BOOL=OFF -DWITH_HDF5:BOOL=ON -DWITH_OPENEXR:BOOL=ON . &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf vigra-Version-$(echo $VERSION|tr . -)
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DVIGRA_STATIC_LIB:BOOL=ON -DWITH_HDF5:BOOL=ON -DWITH_OPENEXR:BOOL=ON -DWITH_BOOST_THREAD:BOOL=OFF -DWITH_BOOST_GRAPH:BOOL=ON -DWITH_LEMON:BOOL=ON -DPYTHON_EXECUTABLE:PATH= -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DVIGRA_STATIC_LIB:BOOL=OFF -DWITH_HDF5:BOOL=ON -DWITH_OPENEXR:BOOL=ON -DWITH_BOOST_THREAD:BOOL=OFF -DWITH_BOOST_GRAPH:BOOL=ON -DWITH_LEMON:BOOL=ON -DPYTHON_EXECUTABLE:PATH= -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DVIGRA_STATIC_LIB:BOOL=ON -DWITH_HDF5:BOOL=ON -DWITH_OPENEXR:BOOL=ON -DWITH_BOOST_THREAD:BOOL=OFF -DWITH_BOOST_GRAPH:BOOL=ON -DWITH_LEMON:BOOL=ON -DPYTHON_EXECUTABLE:PATH= -S. -Bbuild_static &&
 cmake.exe -GNinja -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DVIGRA_STATIC_LIB:BOOL=ON -DWITH_HDF5:BOOL=ON -DWITH_OPENEXR:BOOL=ON -DWITH_BOOST_THREAD:BOOL=OFF -DWITH_BOOST_GRAPH:BOOL=ON -DWITH_LEMON:BOOL=ON -DPYTHON_EXECUTABLE:PATH=$PYDIR/python.exe -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DVIGRA_STATIC_LIB:BOOL=OFF -DWITH_HDF5:BOOL=ON -DWITH_OPENEXR:BOOL=ON -DWITH_BOOST_THREAD:BOOL=OFF -DWITH_BOOST_GRAPH:BOOL=ON -DWITH_LEMON:BOOL=ON -DPYTHON_EXECUTABLE:PATH= -S. -Bbuild_shared &&
 cmake.exe -GNinja -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DVIGRA_STATIC_LIB:BOOL=OFF -DWITH_HDF5:BOOL=ON -DWITH_OPENEXR:BOOL=ON -DWITH_BOOST_THREAD:BOOL=OFF -DWITH_BOOST_GRAPH:BOOL=ON -DWITH_LEMON:BOOL=ON -DPYTHON_EXECUTABLE:PATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf vigra-Version-$(echo $VERSION|tr . -)



