#export NAME="libosinfo"
#export STATUS=
##export URL=http://fedorahosted.org/libosinfo/
#export URL=http://libosinfo.org/
#export BASENAME=libosinfo
#export DESCRIPTION="libosinfo is a GObject based library API for managing information about operating systems, hypervisors and the (virtual) hardware devices they can support. It includes a database containing device metadata and provides APIs to match/identify optimal devices for deploying an operating system on a hypervisor."
#export CATEGORY=system
#export TYPE=library
##export VERSION=0.0.2
##export VERSIONDATE=20111212
##export VERSION=0.0.3
##export VERSIONDATE=20111217
##export VERSION=0.0.4
##export VERSIONDATE=20111220
##export VERSION=0.0.5
##export VERSIONDATE=20120117
##export VERSION=0.1.0
##export VERSIONDATE=20120208
##export VERSION=0.1.1
##export VERSIONDATE=20120412
##export VERSION=0.1.2
##export VERSIONDATE=20120612
##export VERSION=0.2.0
##export VERSIONDATE=20120901
##export VERSION=0.2.1
##export VERSIONDATE=20121013
##export VERSION=0.2.2
##export VERSIONDATE=20121211
##export VERSION=0.2.3
##export VERSIONDATE=20130115
##export VERSION=0.2.4
##export VERSIONDATE=20130220
##export VERSION=0.2.5
##export VERSIONDATE=20130305
##export VERSION=0.2.6
##export VERSIONDATE=20130319
##export VERSION=0.2.7
##export VERSIONDATE=20130514
##export VERSION=0.2.8
##export VERSIONDATE=20130917
##export VERSION=0.2.9
##export VERSIONDATE=20131217
##export VERSION=0.2.10
##export VERSIONDATE=20140321
##export VERSION=0.2.11
##export VERSIONDATE=20140819
##export VERSION=0.2.12
##export VERSIONDATE=20150528
##export VERSION=0.3.0
##export VERSIONDATE=20160404
##export VERSION=0.3.1
##export VERSIONDATE=20160701
##export VERSION=1.0.0
##export VERSIONDATE=20161008
##export VERSION=1.1.0
##export VERSIONDATE=20170815
##export VERSION=1.2.0
##export VERSIONDATE=20180620
##export VERSION=1.3.0
##export VERSIONDATE=20190131
##export VERSION=1.4.0
##export VERSIONDATE=20190302
#####/include/glib-2.0/glib/gmacros.h:277:53: error: size of array '_GStaticAssertCompileTimeAssertion_1' is negative
##export VERSION=1.5.0
##export VERSIONDATE=20190509
#export VERSION=1.6.0
#export VERSIONDATE=20190727
#export DEPENDANCIES=check,glib2,libxml2,libsoup-2.4
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=intltool
##export VERSION=1.7.0
##export VERSIONDATE=20191130
##export VERSION=1.7.1
##export VERSIONDATE=20191204
#wl-showstatus --package-version
##export DEPENDANCIES=check,glib2,libxml2,libsoup-2.4
##export OPTIONALDEPENDANCIES=
##export BUILDDEPENDANCIES=meson,ninja,intltool
#export LICENSEFILE=COPYING
#export LICENSETYPE="GPL/LGPL"
##export DOWNLOADURL="https://fedorahosted.org/releases/l/i/libosinfo/"
##export DOWNLOADURL="https://libosinfo.org/download/"
#export DOWNLOADURL="https://releases.pagure.org/libosinfo/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://fedorahosted.org/releases/l/i/libosinfo/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://releases.pagure.org/libosinfo/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://releases.pagure.org/libosinfo/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix invalid exported symbol osinfo_device_driver_set_signed (version >= 0.2.6)
#mv osinfo/libosinfo.syms osinfo/libosinfo.syms.bak
#grep -v osinfo_device_driver_set_signed osinfo/libosinfo.syms.bak > osinfo/libosinfo.syms
######You must have XML::Parser installed to run /bin/intltool-merge
###$PERLDIR/bin/perl.exe $PERLDIR/bin/cpan install XML::Parser
## fix problem detecting GNU gettext tools on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# mv configure configure.bak
# sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
#fi
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no &&
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" PATH=$PYDIR:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no &&
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" PATH=$PYDIR:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no &&
# wl-showstatus build-install &&
# ( make install-strip || make install-strip POD2MAN="$PERLDIR/bin/perl.exe -x $PERLDIR/bin/pod2man.bat" ) &&
# #make install-strip INTLTOOL_MERGE="$PERLDIR/bin/perl.exe -I$PERLDIR/vendor/lib $MINGWPREFIX/bin/intltool-merge" &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="libosinfo"
export STATUS=
#export URL=http://fedorahosted.org/libosinfo/
export URL=http://libosinfo.org/
export BASENAME=libosinfo
export DESCRIPTION="libosinfo is a GObject based library API for managing information about operating systems, hypervisors and the (virtual) hardware devices they can support. It includes a database containing device metadata and provides APIs to match/identify optimal devices for deploying an operating system on a hypervisor."
export CATEGORY=system
export TYPE=library
#export VERSION=1.7.0
#export VERSIONDATE=20191130
#export VERSION=1.7.1
#export VERSIONDATE=20191204
#export VERSION=1.8.0
#export VERSIONDATE=20200530
#export VERSION=1.9.0
#export VERSIONDATE=20210203
export VERSION=1.10.0
export VERSIONDATE=20220215
wl-showstatus --package-version
export DEPENDANCIES=check,glib2,libxml2,libxslt,libsoup-2.4,gettext
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=meson,ninja,intltool
export LICENSEFILE=COPYING
export LICENSETYPE="GPL/LGPL"
#export DOWNLOADURL="https://fedorahosted.org/releases/l/i/libosinfo/"
#export DOWNLOADURL="https://libosinfo.org/download/"
export DOWNLOADURL="https://releases.pagure.org/libosinfo/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://releases.pagure.org/libosinfo/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# use relative paths in osinfo/osinfo_loader.c (version >= 1.10.0)
patch -ulbf osinfo/osinfo_loader.c << EOF
@@ -37,2 +37,4 @@

+#ifndef _WIN32
+
 #ifndef USB_IDS
@@ -43,2 +45,25 @@
 #endif
+#define g_file_new_for_path_relative g_file_new_for_path
+
+#else
+
+#include <windows.h>
+#undef USB_IDS
+#define USB_IDS "share\\\\libosinfo\\\\usb.ids"
+#undef PCI_IDS
+#define PCI_IDS "share\\\\libosinfo\\\\pci.ids"
+static GFile* g_file_new_for_path_relative (const char* path)
+{
+  char buf[MAX_PATH];
+  char* p;
+  if (GetModuleFileNameA(0, buf, MAX_PATH) && (p = strrchr(buf, '\\\\')) != NULL) {
+    *p = 0;
+    if ((p = strrchr(buf, '\\\\')) != NULL) {
+      strcpy(p + 1, path);
+      return g_file_new_for_path(buf);
+    }
+  }
+  return g_file_new_for_path(path);
+}
+#endif

@@ -2625,3 +2650,3 @@
 {
-    GFile *ids = g_file_new_for_path(PCI_IDS);
+    GFile *ids = g_file_new_for_path_relative(PCI_IDS);
     g_object_set_data(G_OBJECT(ids), "data-format",
@@ -2634,3 +2659,3 @@
 {
-    GFile *ids = g_file_new_for_path(USB_IDS);
+    GFile *ids = g_file_new_for_path_relative(USB_IDS);
     g_object_set_data(G_OBJECT(ids), "data-format",
EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 PATH=$PERLDIR/bin:$PATH $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -D enable-introspection=disabled -D enable-vala=disabled -D enable-gtk-doc=false -D enable-tests=false . build_both &&
 # fix slash/backslash path issue when calling Python from Ninja
 sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_both/build.ninja &&
 # fix Python path issues in meson_exe
 sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?g" build_both/meson-private/meson_exe_python.exe_*.dat &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -C build_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



