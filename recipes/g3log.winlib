export NAME="G3log"
export STATUS=
export URL=https://github.com/KjellKod/g3log
export BASENAME=g3log
export DESCRIPTION="G3log is an asynchronous, \"crash safe\", logger that is easy to use with default logging sinks or you can add your own. G3log is made with plain C++11 with no external libraries (except gtest used for unit tests). G3log is made to be cross-platform, currently running on OSX, Windows and several Linux distros."
export CATEGORY=
export TYPE=library
#export VERSION=1.1
#export VERSIONDATE=20160220
#export VERSION=1.2
#export VERSIONDATE=20161128
#export VERSION=1.3
#export VERSIONDATE=20170330
####src/g3log/logmessage.hpp:92:7: error: 'thread' in namespace 'std' does not name a type
#export VERSION=1.3.1
#export VERSIONDATE=20180304
#export VERSION=1.3.2
#export VERSIONDATE=20180331
####CPack.cmake has already been included!!
#export VERSION=1.3.3
#export VERSIONDATE=20200607
#export VERSION=1.3.4
#export VERSIONDATE=20201216
#export VERSION=2.0.1
#export VERSIONDATE=20221107
#export VERSION=2.1
#export VERSIONDATE=20221111
#export VERSION=2.2
#export VERSIONDATE=20230204
export VERSION=2.3
export VERSIONDATE=20230220
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE="Public Domain"
export DOWNLOADURL="https://github.com/KjellKod/g3log/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/KjellKod/g3log/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/KjellKod/g3log/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing install target in CMakeLists.txt (version >= 1.3)
sed -i.bak -e "s/IF(\${CMAKE_SYSTEM_NAME}.*)$/IF(TRUE)/" CMakeLists.txt
# avoid -rdynamic (version >= 1.3.3)
sed -i.bak -e "s/-rdynamic//" Build.cmake
#wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DADD_BUILD_WIN_SHARED:BOOL=ON -DADD_FATAL_EXAMPLE:BOOL=OFF . &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DADD_BUILD_WIN_SHARED:BOOL=ON -DADD_FATAL_EXAMPLE:BOOL=OFF -DVERSION:STRING=$VERSION . &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# ( make install/strip || make install ) &&
# ( ls -1 $INSTALLPREFIX/bin/*.dll &> /dev/null || (
#  mkdir -p $INSTALLPREFIX/bin &&
#  cp -f *.dll $INSTALLPREFIX/bin/
# )) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DG3_SHARED_LIB:BOOL=OFF -DADD_FATAL_EXAMPLE:BOOL=OFF -DVERSION:STRING=$VERSION -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DG3_SHARED_LIB:BOOL=ON -DADD_FATAL_EXAMPLE:BOOL=OFF -DVERSION:STRING=$VERSION -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



