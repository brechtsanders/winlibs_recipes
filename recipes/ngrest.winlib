export NAME="ngrest"
export STATUS=
export URL=https://github.com/loentar/ngrest
export BASENAME=ngrest
export DESCRIPTION="Fast and easy C++ RESTful WebServices framework"
export CATEGORY=communication
export TYPE=library
export VERSION=0.2.1
export VERSIONDATE=20171026
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
#export DOWNLOADURL="https://github.com/loentar/ngrest/releases"
export DOWNLOADURL="https://github.com/loentar/ngrest/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/loentar/ngrest/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/loentar/ngrest/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
#wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# ( make || make -j1 ) &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX &&
# cp -rf deploy/* $INSTALLPREFIX/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
 wl-showstatus build &&
 ( ninja -Cbuild_win || ninja -j1 -Cbuild_win ) &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX &&
 cp -rf build_win/deploy/* $INSTALLPREFIX/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#sed -i.bak -e "s/^#ifdef WIN32$/#if defined(_WIN32) \&\& \!defined(STATIC)/" core/common/src/ngrestcommonexport.h core/engine/src/ngrestengineexport.h core/utils/src/ngrestutilsexport.h core/xml/src/ngrestxmlexport.h tools/ngrestcgparser/src/ngrestcodegenparserexport.h
#sed -i.bak -e "s/\(add_library([^ ]* \)SHARED /\1/" $(grep -l "add_library([^ ]* SHARED " $(find -name CMakeLists.txt))
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-DSTATIC" -S. -Bbuild_static &&
# sed -i.bak -e "s/^#ifdef WIN32$/#if defined(_WIN32) \&\& \!defined(STATIC)/" build_static/deploy/include/ngrest/utils/PluginExport.h &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# sed -i.bak -e "s/^#ifdef WIN32$/#if defined(_WIN32) \&\& \!defined(STATIC)/" build_shared/deploy/include/ngrest/utils/PluginExport.h &&
# wl-showstatus build &&
# ( ninja -Cbuild_static || ninja -j1 -Cbuild_static ) &&
# wl-showstatus build &&
# ( ninja -Cbuild_shared || ninja -j1 -Cbuild_shared ) &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX &&
# cp -rf build_static/build_win/deploy/* $INSTALLPREFIX/ &&
# cp -rf build_shared/build_win/deploy/* $INSTALLPREFIX/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####To do: build static libraries



