export NAME="eXosip"
export STATUS=
export URL=http://savannah.nongnu.org/projects/exosip
export BASENAME=exosip
export DESCRIPTION="eXosip is a library that hides the complexity of using the SIP protocol for mutlimedia session establishement."
export CATEGORY=audio,communication
export TYPE=library
#export VERSION=3.1.0
#export VERSION=3.2.0
#export VERSION=3.3.0
#export VERSIONDATE=
#export VERSION=3.5.0
#export VERSIONDATE=20110104
####E:\Prog\MinGW-mSys\include/io.h:443: error: conflicting types for 'closesocket'
####E:\Prog\MinGW-mSys\include\w32api/winsock2.h:538: note: previous declaration of 'closesocket' was here
####eXtl_tls.c:33:21: error: Mstcpip.h: No such file or directory
#export VERSION=3.6.0
#export VERSIONDATE=20111006
#export VERSION=4.0.0
#export VERSIONDATE=20121211
#export VERSION=4.1.0
#export VERSIONDATE=20140107
#export VERSION=5.0.0
#export VERSIONDATE=20160914
#export VERSION=5.1.0
#export VERSIONDATE=20190329
#export VERSION=5.1.1
#export VERSIONDATE=20200118
#export VERSION=5.1.2
#export VERSIONDATE=20200825
#export VERSION=5.1.3
#export VERSIONDATE=20200826
#export VERSION=5.2.0
#export VERSIONDATE=20201111
#export VERSION=5.2.1
#export VERSIONDATE=20210525
export VERSION=5.3.0
export VERSIONDATE=20211123
wl-showstatus --package-version
export DEPENDANCIES=libosip2,openssl,c-ares,pthreads
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL2
#export DOWNLOADURL="http://download.savannah.nongnu.org/releases/exosip/ libeXosip2-"
export DOWNLOADURL="http://download.savannah.gnu.org/releases/exosip/ libeXosip2-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://nongnu.askapache.com/exosip/libeXosip2-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://download.savannah.nongnu.org/releases/exosip/libeXosip2-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://download.savannah.gnu.org/releases/exosip/libeXosip2-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://download.savannah.gnu.org/releases/exosip/libexosip2-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/libeXosip2-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/libexosip2-$VERSION.tar.gz
#cd libeXosip2-$VERSION
cd libexosip2-$VERSION
# fix missing nameser.h (version >= 3.6.0)
touch nameser.h
## fix src/eXutils.c (version >= 3.6.0 <= 5.0.0)
#mv src/eXutils.c src/eXutils.c.bak
#cat > src/eXutils.c << EOF
##include <io.h>
##include <winsock2.h>
#EOF
#cat src/eXutils.c.bak >> src/eXutils.c
## fix src/eXtl_tcp.c (version >= 3.6.0 <= 5.0.0)
#mv src/eXtl_tcp.c src/eXtl_tcp.c.bak
#cat > src/eXtl_tcp.c << EOF
##include <io.h>
##include <winsock2.h>
##if !defined(__MINGW64__) && !`if gcc --version|grep "MinGW-W64">/dev/null; then echo 1; else echo 0; fi`
#struct tcp_keepalive {
# u_long  onoff;
# u_long  keepalivetime;
# u_long  keepaliveinterval;
#};
##endif
##define SIO_KEEPALIVE_VALS _WSAIOW(IOC_VENDOR,4)
#EOF
#grep -v Mstcpip.h src/eXtl_tcp.c.bak >> src/eXtl_tcp.c
## fix src/eXtl_tls.c (version >= 3.6.0 <= 5.0.0)
#mv src/eXtl_tls.c src/eXtl_tls.c.bak
#cat > src/eXtl_tls.c << EOF
##include <io.h>
##include <winsock2.h>
##if !defined(__MINGW64__) && !`if gcc --version|grep "MinGW-W64">/dev/null; then echo 1; else echo 0; fi`
#struct tcp_keepalive {
# u_long  onoff;
# u_long  keepalivetime;
# u_long  keepaliveinterval;
#};
##endif
##define SIO_KEEPALIVE_VALS _WSAIOW(IOC_VENDOR,4)
#EOF
#grep -v Mstcpip.h src/eXtl_tls.c.bak >> src/eXtl_tls.c
## fix unicode issue in src/eXtl_tls.c (version = 5.0.0)
#mv src/eXtl_tls.c src/eXtl_tls.c.bak2 &&
#echo "#define UNICODE" > src/eXtl_tls.c &&
#cat src/eXtl_tls.c.bak2 >> src/eXtl_tls.c
## fix src/eXtl_udp.c (version = 3.6.0)
#patch -ulbf src/eXtl_udp.c << EOF
#--- src/eXtl_udp.c  2011-10-04 09:57:00 +0200
#+++ src/eXtl_udp.c  2011-10-06 13:15:20 +0200
#@@ -180,3 +180,3 @@
# #else
#-               retval = setsockopt(udp_socket, IPPROTO_IPV6, IP_TOS,
#+               res = setsockopt(udp_socket, IPPROTO_IPV6, IP_TOS,
#                        (SOCKET_OPTION_VALUE)&tos, sizeof(tos));
#EOF
## fix src/eXtl_dtls.c for newer openssl (version <= 5.0.0)
#patch -ulbf  src/eXtl_dtls.c << EOF
#@@ -235,3 +235,7 @@
#
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      SSL_set0_rbio(reserved->socket_tab[pos].ssl_conn, rbio);
#+#else
#       (reserved->socket_tab[pos].ssl_conn)->rbio = rbio;
#+#endif
#
#@@ -564,3 +568,8 @@
#
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      SSL_set0_rbio(reserved->socket_tab[pos].ssl_conn, rbio);
#+#else
#       reserved->socket_tab[pos].ssl_conn->rbio = rbio;
#+#endif
#+
#
#@@ -568,4 +577,9 @@
#       /* done with the rbio */
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      BIO_free (SSL_get_rbio(reserved->socket_tab[pos].ssl_conn));
#+      SSL_set0_rbio(reserved->socket_tab[pos].ssl_conn, BIO_new (BIO_s_mem ()));
#+#else
#       BIO_free (reserved->socket_tab[pos].ssl_conn->rbio);
#       reserved->socket_tab[pos].ssl_conn->rbio = BIO_new (BIO_s_mem ());
#+#endif
#
#@@ -949,3 +963,7 @@
#         BIO_ctrl (rbio, BIO_CTRL_DGRAM_SET_PEER, 0, (char *) &addr);
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+        SSL_set0_rbio(reserved->socket_tab[pos].ssl_conn, rbio);
#+#else
#         reserved->socket_tab[pos].ssl_conn->rbio = rbio;
#+#endif
#         break;
#@@ -963,3 +981,7 @@
#           BIO_ctrl (rbio, BIO_CTRL_DGRAM_SET_PEER, 0, (char *) &addr);
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+          SSL_set0_rbio(reserved->socket_tab[pos].ssl_conn, rbio);
#+#else
#           reserved->socket_tab[pos].ssl_conn->rbio = rbio;
#+#endif
#           break;
#EOF
## fix src/eXtl_tls.c for newer openssl (version <= 5.0.0)
#patch -ulbf src/eXtl_tls.c << EOF
#@@ -339,3 +339,7 @@
# 
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+    if (!X509_STORE_add_cert (SSL_CTX_get_cert_store (ctx), cert)) {
#+#else
#     if (!X509_STORE_add_cert (ctx->cert_store, cert)) {
#+#endif
#       X509_free (cert);
#@@ -358,3 +362,7 @@
# 
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+    if (!X509_STORE_add_cert (SSL_CTX_get_cert_store (ctx), cert)) {
#+#else
#     if (!X509_STORE_add_cert (ctx->cert_store, cert)) {
#+#endif
#       X509_free (cert);
#@@ -377,3 +385,7 @@
# 
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+    if (!X509_STORE_add_cert (SSL_CTX_get_cert_store (ctx), cert)) {
#+#else
#     if (!X509_STORE_add_cert (ctx->cert_store, cert)) {
#+#endif
#       X509_free (cert);
#@@ -396,3 +408,7 @@
# 
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+    if (!X509_STORE_add_cert (SSL_CTX_get_cert_store (ctx), cert)) {
#+#else
#     if (!X509_STORE_add_cert (ctx->cert_store, cert)) {
#+#endif
#       X509_free (cert);
#@@ -454,3 +470,7 @@
# 
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+        if (!X509_STORE_add_cert (SSL_CTX_get_cert_store (ctx), cert)) {
#+#else
#         if (!X509_STORE_add_cert (ctx->cert_store, cert)) {
#+#endif
#           X509_free (cert);
#@@ -507,3 +527,10 @@
# {
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+#ifndef RSA_F_RSA_EAY_PRIVATE_ENCRYPT
#+#define RSA_F_RSA_EAY_PRIVATE_ENCRYPT RSA_F_RSA_OSSL_PRIVATE_ENCRYPT
#+#endif
#+  struct rsa_ctx *priv = (struct rsa_ctx *) RSA_meth_get0_app_data (RSA_get_method (rsa));
#+#else
#   struct rsa_ctx *priv = (struct rsa_ctx *) rsa->meth->app_data;
#+#endif
#   HCRYPTHASH hash;
#@@ -577,3 +604,7 @@
# {
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+  struct rsa_ctx *priv = (struct rsa_ctx *) RSA_meth_get0_app_data (RSA_get_method (rsa));
#+#else
#   struct rsa_ctx *priv = (struct rsa_ctx *) rsa->meth->app_data;
#+#endif
#   BOOL ret;
#@@ -619,2 +650,7 @@
# {
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+  rsa_free_data ((struct rsa_ctx *) RSA_meth_get0_app_data (RSA_get_method (rsa)));
#+  osip_free ((void *) RSA_get_method (rsa));
#+  RSA_set_method (rsa, RSA_null_method ());
#+#else
#   rsa_free_data ((struct rsa_ctx *) rsa->meth->app_data);
#@@ -622,2 +658,3 @@
#   rsa->meth = NULL;
#+#endif
#   return 1;
#@@ -731,3 +768,7 @@
#     priv = osip_malloc (sizeof (*priv));
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+    rsa_meth = RSA_meth_new("Microsoft CryptoAPI RSA Method", RSA_METHOD_FLAG_NO_CHECK);
#+#else
#     rsa_meth = osip_malloc (sizeof (*rsa_meth));
#+#endif
#     if (priv == NULL || rsa_meth == NULL) {
#@@ -735,3 +776,7 @@
#       osip_free (priv);
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      RSA_meth_free (rsa_meth);
#+#else
#       osip_free (rsa_meth);
#+#endif
#       X509_free (cert);
#@@ -740,3 +785,5 @@
#     memset (priv, 0, sizeof (*priv));
#+#if OPENSSL_VERSION_NUMBER < 0x01010000
#     memset (rsa_meth, 0, sizeof (*rsa_meth));
#+#endif
# 
#@@ -747,3 +794,7 @@
#       osip_free (priv);
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      RSA_meth_free (rsa_meth);
#+#else
#       osip_free (rsa_meth);
#+#endif
#       X509_free (cert);
#@@ -757,3 +808,7 @@
#       osip_free (priv);
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      RSA_meth_free (rsa_meth);
#+#else
#       osip_free (rsa_meth);
#+#endif
#       X509_free (cert);
#@@ -762,2 +817,10 @@
# 
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+    RSA_meth_set_pub_enc (rsa_meth, rsa_pub_enc);
#+    RSA_meth_set_pub_dec (rsa_meth, rsa_pub_dec);
#+    RSA_meth_set_priv_enc (rsa_meth, rsa_priv_enc);
#+    RSA_meth_set_priv_dec (rsa_meth, rsa_priv_dec);
#+    RSA_meth_set_finish (rsa_meth, rsa_finish);
#+    RSA_meth_set0_app_data (rsa_meth, priv);
#+#else
#     rsa_meth->name = "Microsoft CryptoAPI RSA Method";
#@@ -770,2 +833,3 @@
#     rsa_meth->app_data = (char *) priv;
#+#endif
# 
#@@ -777,3 +841,7 @@
#       osip_free (priv);
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      RSA_meth_free (rsa_meth);
#+#else
#       osip_free (rsa_meth);
#+#endif
#       X509_free (cert);
#@@ -788,3 +856,7 @@
#       osip_free (priv);
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      RSA_meth_free (rsa_meth);
#+#else
#       osip_free (rsa_meth);
#+#endif
#       X509_free (cert);
#@@ -793,2 +865,11 @@
# 
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+    pub_rsa = EVP_PKEY_get0_RSA (X509_get0_pubkey (cert));
#+    {
#+      const BIGNUM *n;
#+      const BIGNUM *e;
#+      RSA_get0_key(pub_rsa, &n, &e, NULL);
#+      RSA_set0_key(rsa, BN_dup (n), BN_dup (e), NULL);
#+    }
#+#else
#     pub_rsa = cert->cert_info->key->pkey->pkey.rsa;
#@@ -797,2 +878,3 @@
#     rsa->e = BN_dup (pub_rsa->e);
#+#endif
#     if (!RSA_set_method (rsa, rsa_meth)) {
#@@ -802,3 +884,7 @@
#       osip_free (priv);
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      RSA_meth_free (rsa_meth);
#+#else
#       osip_free (rsa_meth);
#+#endif
#       RSA_free (rsa);
#@@ -853,3 +939,7 @@
#   if (!preverify_ok && (err == X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT)) {
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+    X509_NAME_oneline (X509_get_issuer_name (X509_STORE_CTX_get_current_cert (store)), buf, 256);
#+#else
#     X509_NAME_oneline (X509_get_issuer_name (store->current_cert), buf, 256);
#+#endif
#     OSIP_TRACE (osip_trace (__FILE__, __LINE__, OSIP_ERROR, NULL, "issuer= %s\n", buf));
#@@ -1172,3 +1262,7 @@
#         /* this is used to add a trusted certificate */
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+        X509_STORE_add_cert (SSL_CTX_get_cert_store (ctx), cert);
#+#else
#         X509_STORE_add_cert (ctx->cert_store, cert);
#+#endif
#       }
#@@ -1245,3 +1339,7 @@
#        if (param != NULL) { /* const value, we have to copy (inherit) */
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+         if (X509_VERIFY_PARAM_inherit (X509_STORE_get0_param (pkix_validation_store), param)) {
#+#else
#          if (X509_VERIFY_PARAM_inherit (pkix_validation_store->param, param)) {
#+#endif
#            X509_STORE_set_flags (pkix_validation_store, X509_V_FLAG_TRUSTED_FIRST);
#@@ -1251,4 +1349,9 @@
#          }
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+         if (X509_VERIFY_PARAM_set1_host (X509_STORE_get0_param (pkix_validation_store), sni_servernameindication, 0)) {
#+           X509_VERIFY_PARAM_set_hostflags (X509_STORE_get0_param (pkix_validation_store), X509_CHECK_FLAG_NO_WILDCARDS);
#+#else
#          if (X509_VERIFY_PARAM_set1_host (pkix_validation_store->param, sni_servernameindication, 0)) {
#            X509_VERIFY_PARAM_set_hostflags (pkix_validation_store->param, X509_CHECK_FLAG_NO_WILDCARDS);
#+#endif
#          } else {
#EOF
## fix building DLLs on 64-bit (version <= 3.6.0)
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# #autoreconf -f -i -I $MINGWPREFIX/share/aclocal
# mv autogen.sh autogen.sh.bak
# sed -e "s?\(ACLOCALDIRS=\"\)\(\"\)?\1-I \$MINGWPREFIX/share/aclocal\2?" autogen.sh.bak > autogen.sh
# ./autogen.sh
#fi
#cp $MINGWPREFIX/lib/libosipparser2.la src
## fix for building DLL
#patch -ulbf configure.in << EOF
#--- configure.in  Wed Mar  4 11:50:58 2009
#+++ configure.in  Wed Oct  7 17:08:16 2009
#@@ -4,2 +4,3 @@
# AC_INIT(include/eXosip2/eXosip.h)
#+AC_LIBTOOL_WIN32_DLL
#EOF
#NOCONFIGURE=1 ./autogen.sh
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-tools LDFLAGS="-losip2 -losipparser2 -lws2_32 -liphlpapi" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-tools CFLAGS="-D_WIN32_WINNT=0x0501" LDFLAGS="-losip2 -losipparser2 -lws2_32 -liphlpapi" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-tools CFLAGS="-D_WIN32_WINNT=0x0501" LDFLAGS="-losip2 -losipparser2 -lws2_32 -lcrypto -liphlpapi -ldnsapi -no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-tools CFLAGS="-D_WIN32_WINNT=0x0501" LDFLAGS="-Wl,--as-needed -losip2 -losipparser2 -lws2_32 -lcrypto -liphlpapi -ldnsapi -lcrypt32 -Wl,-no-undefined" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-tools CFLAGS="-D_WIN32_WINNT=0x0501" LDFLAGS="-Wl,--as-needed -losip2 -losipparser2 -lws2_32 -lcrypto -liphlpapi -ldnsapi -lcrypt32 -lregex -Wl,-no-undefined" &&
 wl-showstatus build-install &&
 # fix missing config.h (version >= 4.0.0)
 if [ ! -f config.h ]; then
  cp -f exosip-config.h config.h
 fi &&
 ## fix missing struct timespec (version <= 3.6.0)
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "#define HAVE_STRUCT_TIMESPEC 1" >> config.h
 #fi &&
 # fix missing struct timespec (version >= 4.0.0)
 if ( echo $RUNPLATFORM | grep -q x86_64 || gcc --version|grep "MinGW-W64" > /dev/null ); then
  echo "#define HAVE_STRUCT_TIMESPEC 1" >> exosip-config.h
 fi &&
 make install-strip &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libeXosip2-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libexosip2-$VERSION
####To do: fix 64-bit DLL



