export NAME="FANN"
export STATUS=
export URL=http://leenissen.dk/fann/
export BASENAME=fann
export DESCRIPTION="Fast Artificial Neural Network Library is a free open source neural network library, which implements multilayer artificial neural networks in C with support for both fully connected and sparsely connected networks. Cross-platform execution in both fixed and floating point are supported. It includes a framework for easy handling of training data sets. It is easy to use, versatile, well documented, and fast. PHP, C++, .NET, Ada, Python, Delphi, Octave, Ruby, Prolog Pure Data and Mathematica bindings are available. A reference manual accompanies the library with examples and recommendations on how to use the library. A graphical user interface is also available for the library."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=2.0.0
#export VERSIONDATE=20101214
export VERSION=2.2.0
export VERSIONDATE=20120124
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
export LICENSEFILE=COPYING.txt
export LICENSETYPE=LGPL
export DOWNLOADURL="http://sourceforge.net/projects/fann/files/fann/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/fann/fann/$VERSION/$BASENAME-$VERSION.tar.bz2
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/fann/fann/$VERSION/FANN-$VERSION-Source.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
tar xz --force-local -f $TARBALLDIR/$BASENAME/FANN-$VERSION-Source.tar.gz
cd FANN-$VERSION-Source
# build both static and shared libraries
mv src/CMakeLists.txt src/CMakeLists.txt.bak &&
sed -e "s/ SHARED / /" src/CMakeLists.txt.bak > src/CMakeLists.txt
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_GNUtoMS:BOOL=OFF . &&
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cd build_static &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF .. &&
 cd .. &&
 wl-showstatus configure &&
 cd build_shared &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON .. &&
 cd .. &&
 wl-showstatus build-install &&
 make -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 make -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/bin &&
 mv $INSTALLPREFIX/*.dll $INSTALLPREFIX/bin/ &&
 mv $INSTALLPREFIX/*.a $INSTALLPREFIX/lib/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf FANN-$VERSION-Source



