export NAME="musescore"
export STATUS=
export URL=https://musescore.org/
export BASENAME=musescore
export DESCRIPTION="Create, play and print beautiful sheet music"
export CATEGORY=fileformat
export TYPE=application
#export VERSION=2.0.1
#export VERSIONDATE=20150628
#export VERSION=2.0.2
#export VERSIONDATE=20150716
#export VERSION=2.0.3
#export VERSIONDATE=20160407
#export VERSION=2.1.0
#export VERSIONDATE=20170427
#export VERSION=2.2
#export VERSIONDATE=20180326
#export VERSION=2.2.1
#export VERSIONDATE=20180404
#export VERSION=2.2.2
#export VERSIONDATE=20180630
#export VERSION=2.3
#export VERSIONDATE=20180629
#export VERSION=2.3.1
#export VERSIONDATE=20180707
####Found unsuitable Qt version "" from NOTFOUND, this code requires Qt 4.x
#export VERSION=2.3.2
#export VERSIONDATE=20180731
#export DEPENDENCIES=qt4
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=3.0
#export VERSIONDATE=20181225
#export VERSION=3.0.1
#export VERSIONDATE=20190115
#export VERSION=3.0.2
#export VERSIONDATE=20190206
#export VERSION=3.0.3
#export VERSIONDATE=20190226
#export VERSION=3.0.4
#export VERSIONDATE=20190228
#export VERSION=3.0.5
#export VERSIONDATE=20190312
#export VERSION=3.1
#export VERSIONDATE=20190528
#export VERSION=3.2
#export VERSIONDATE=20190625
#export VERSION=3.1
#export VERSIONDATE=20190628
#export VERSION=3.2.3
#export VERSIONDATE=20190708
####/qt/lib/cmake/Qt5Designer/Qt5DesignerConfig.cmake:15 (message):
####The imported target "Qt5::Designer" references the file "/qt/plugins/designer/customwidgetplugin.dll" but this file does not exist.  Possible reasons include:
####* The file was deleted, renamed, or moved to another location.
####* An install or uninstall procedure did not complete successfully.
####* The installation package was faulty and contained
#export VERSION=3.3
#export VERSIONDATE=20191031
#export VERSION=3.3.1
#export VERSIONDATE=20191113
#export VERSION=3.3.2
#export VERSIONDATE=20191114
#export VERSION=3.3.3
#export VERSIONDATE=20191126
export VERSION=3.3.4
export VERSIONDATE=20191205
#export VERSION=3.4
#export VERSIONDATE=20200124
#export VERSION=3.4.2
#export VERSIONDATE=20200207
#export VERSION=3.5
#export VERSIONDATE=20200806
#export VERSION=3.5.1
#export VERSIONDATE=20201007
#export VERSION=3.5.2
#export VERSIONDATE=20201016
#export VERSION=3.6
#export VERSIONDATE=20210115
#export VERSION=3.6.1
#export VERSIONDATE=20210128
#export VERSION=3.6.2
#export VERSIONDATE=20210209
#export VERSION=4.0
#export VERSIONDATE=20221214
#export VERSION=4.0.1
#export VERSIONDATE=20230114
#export VERSION=4.0.2
#export VERSIONDATE=20230313
#export VERSION=4.1.0
#export VERSIONDATE=20230712
#export VERSION=4.1.1
#export VERSIONDATE=20230727
#export VERSION=4.2.0
#export VERSIONDATE=20231219
#export VERSION=4.2.1
#export VERSIONDATE=20240124
#export VERSION=4.3.0
#export VERSIONDATE=20240507
#export VERSION=4.3.1
#export VERSIONDATE=20240529
#export VERSION=4.3.2
#export VERSIONDATE=20240612
####ninja: error: dependency cycle: mops1 -> CMakeFiles/mops1 -> all.h -> libmscore/libmscore_autogen -> libmscore/CMakeFiles/libmscore_autogen -> libmscore/libmscore_autogen/timestamp -> mops1
#export VERSION=4.4.0
#export VERSIONDATE=20240827
####src/framework/global/internal/platform/win/wininteractivehelper.cpp:24:10: fatal error: winrt/Windows.System.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=qt,qtsingleapplication,portaudio,lame,libvorbis,libogg,libsndfile
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=waf
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.GPL
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/musescore/MuseScore/releases v"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/musescore/MuseScore/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/MuseScore-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/MuseScore-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd MuseScore-$VERSION
# fix invalid -lsndfile-1
sed -i.bak -e "s/sndfile-1/sndfile/" CMakeLists.txt
# don't install dependancy libraries
patch -ulbf mscore/CMakeLists.txt << EOF
@@ -656,25 +656,5 @@
    if (BUILD_64)
-      install( FILES
-         \${MINGW_ROOT}/bin/libgcc_s_seh-1.dll
-         DESTINATION bin)
       if (Qt5Widgets_VERSION VERSION_GREATER_EQUAL "5.12.4")
-         install( FILES
-            \${DEPENDENCIES_DIR}/libcrypto-1_1-x64.dll
-            \${DEPENDENCIES_DIR}/libssl-1_1-x64.dll
-            DESTINATION bin)
       endif (Qt5Widgets_VERSION VERSION_GREATER_EQUAL "5.12.4")
-      install( FILES
-         \${DEPENDENCIES_DIR}/portaudio.dll RENAME libportaudio-x86_64-w64-mingw32.static.dll
-         DESTINATION bin)
    else (BUILD_64)
-      install( FILES
-         \${MINGW_ROOT}/bin/libgcc_s_dw2-1.dll
-         \${DEPENDENCIES_DIR}/portaudio.dll
-         DESTINATION bin)
-      if (Qt5Widgets_VERSION VERSION_GREATER_EQUAL "5.12.4")
-         install( FILES
-            \${DEPENDENCIES_DIR}/libcrypto-1_1.dll
-            \${DEPENDENCIES_DIR}/libssl-1_1.dll
-            DESTINATION bin)
-      endif (Qt5Widgets_VERSION VERSION_GREATER_EQUAL "5.12.4")
    endif (BUILD_64)
@@ -682,13 +662,2 @@
    install( FILES
-      \${MINGW_ROOT}/bin/libstdc++-6.dll
-      \${MINGW_ROOT}/bin/libwinpthread-1.dll
-      \${DEPENDENCIES_DIR}/libogg.dll
-      \${DEPENDENCIES_DIR}/libsndfile-1.dll
-      \${DEPENDENCIES_DIR}/libvorbis.dll
-      \${DEPENDENCIES_DIR}/libvorbisfile.dll
-      \${QT_INSTALL_BINS}/libEGL.dll
-      \${QT_INSTALL_BINS}/libGLESv2.dll
-      \${QT_INSTALL_BINS}/opengl32sw.dll
-      \${QT_INSTALL_BINS}/d3dcompiler_47.dll
-      \${QtInstallLibraries}
       \${PROJECT_SOURCE_DIR}/build/qt.conf
@@ -696,35 +665,4 @@
    if (Qt5Widgets_VERSION VERSION_LESS "5.12.4")
-      install( FILES
-         \${MINGW_ROOT}/opt/bin/libeay32.dll
-         \${MINGW_ROOT}/opt/bin/ssleay32.dll
-         DESTINATION bin)
    endif (Qt5Widgets_VERSION VERSION_LESS "5.12.4")

-   install (FILES
-      \${DEPENDENCIES_DIR}/lame_enc.dll
-      DESTINATION bin
-      OPTIONAL)
-
-    install(FILES
-      \${QT_INSTALL_PLUGINS}/iconengines/qsvgicon.dll
-      DESTINATION bin/iconengines)
-
-    install(FILES
-      \${QT_INSTALL_PLUGINS}/imageformats/qjpeg.dll
-      \${QT_INSTALL_PLUGINS}/imageformats/qsvg.dll
-      \${QT_INSTALL_PLUGINS}/imageformats/qtiff.dll
-      DESTINATION bin/imageformats)
-
-    install(FILES
-      \${QT_INSTALL_PLUGINS}/platforms/qwindows.dll
-      DESTINATION bin/platforms)
-
-    install(FILES
-      \${QT_INSTALL_PLUGINS}/printsupport/windowsprintersupport.dll
-      DESTINATION bin/printsupport)
-
-    install(FILES
-      \${QT_INSTALL_PLUGINS}/sqldrivers/qsqlite.dll
-      DESTINATION bin/sqldrivers)
-
     install(DIRECTORY
EOF
wl-showstatus configure &&
 #rm -f CMakeCache.txt
 #PATH=$MINGWPREFIX/qt4/bin:$PATH cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/musescore -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
 #PATH=$MINGWPREFIX/qt/bin:$PATH cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/musescore -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe . -LH && echo OK
 #PATH=$MINGWPREFIX/qt/bin:$PATH cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/musescore -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/musescore -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe . &&
 #PATH=$MINGWPREFIX/qt4/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt4/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/musescore -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe . &&
 #PATH=$MINGWPREFIX/qt/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/musescore -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe -DUSE_SYSTEM_QTSINGLEAPPLICATION:BOOL=ON . &&
 #PATH=$MINGWPREFIX/qt/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/musescore -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe -DPORTAUDIO_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DPORTAUDIO_LIBRARY:PATH=$MINGWPREFIX/lib -DVORBIS_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBIS_LIBRARY:PATH=$MINGWPREFIX/lib -DSNDFILE_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DSNDFILE_LIBRARY:PATH=$MINGWPREFIX/lib -DVORBISFILE_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBISFILE_LIBRARY:PATH=$MINGWPREFIX/lib -DOGG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DOGG_LIBRARY:PATH=$MINGWPREFIX/lib . &&
 PATH=$MINGWPREFIX/qt/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/musescore -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe -DPORTAUDIO_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DPORTAUDIO_LIBRARY:PATH=$MINGWPREFIX/lib -DVORBIS_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBIS_LIBRARY:PATH=$MINGWPREFIX/lib -DSNDFILE_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DSNDFILE_LIBRARY:PATH=$MINGWPREFIX/lib -DVORBISFILE_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBISFILE_LIBRARY:PATH=$MINGWPREFIX/lib -DOGG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DOGG_LIBRARY:PATH=$MINGWPREFIX/lib -DUSE_SYSTEM_POPPLER:BOOL=ON . &&
 #-DCMAKE_PREFIX_PATH:PATH=$MINGWPREFIX/qt6/lib/cmake/Qt6Core 
 #-DBUILD_GMOCK:BOOL=OFF -DMUE_BUILD_UNIT_TESTS:BOOL=OFF 
 #-DSNDFILE_LIB:PATH="-lsndfile" -DVORBISFILE_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBISFILE_LIBRARY:PATH=$MINGWPREFIX/lib -DOGG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DOGG_LIBRARY:PATH=$MINGWPREFIX/lib -DUSE_SYSTEM_POPPLER:BOOL=ON -DBUILD_GMOCK:BOOL=OFF 
 ##sed -i.bak -e "s/[^ ]*\/lib/-L&/g" mscore/CMakeFiles/mscore.dir/linklibs.rsp &&
 ##sed -i.bak -e "s?\b\([a-zA-Z]\):/?/\1/?g" mscore/CMakeFiles/mscore.dir/linklibs.rsp &&
 sed -i.bak -e "s?\b\([a-zA-Z]\):\(/[^ ]*/lib \)?-L/\1\2?g; s?\b\([a-zA-Z]\):\(/[^ ]*/lib\)/lib\([^ ]*\)\.a\b?-L/\1\2 -l\3?g" mscore/CMakeFiles/mscore.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lsndfile -lportaudio -lvorbisfile -lALURE32" >> mscore/CMakeFiles/mscore.dir/linklibs.rsp &&
 #sed -i.bak -e "s?\b\([a-zA-Z]\):\(/[^ ]*/lib \)?-L/\1\2?g; s?\b\([a-zA-Z]\):\(/[^ ]*/lib\)/lib\([^ ]*\)\.a\b?-L/\1\2 -l\3?g" main/CMakeFiles/mscore.dir/linklibs.rsp &&
 #echo "-Wl,--as-needed -lsndfile -lportaudio -lvorbisfile -lALURE32" >> main/CMakeFiles/mscore.dir/linklibs.rsp &&
 wl-showstatus build-install &&
 PATH=$MINGWPREFIX/qt/bin:$PATH make install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf MuseScore-$VERSION
#PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins mscore/MuseScore3.exe
#PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins $INSTALLPREFIX/musescore/bin/MuseScore3.exe
#PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins $MINGWPREFIX/musescore/bin/MuseScore3.exe



#mkdir -p build_win &&
# wl-showstatus configure &&
# PATH=$MINGWPREFIX/qt/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/musescore -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe -DPORTAUDIO_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DPORTAUDIO_LIBRARY:PATH=$MINGWPREFIX/lib -DVORBIS_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBIS_LIBRARY:PATH=$MINGWPREFIX/lib -DSNDFILE_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DSNDFILE_LIBRARY:PATH=$MINGWPREFIX/lib -DSNDFILE_LIB:STRING=-lsndfile -DVORBISFILE_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBISFILE_LIBRARY:PATH=$MINGWPREFIX/lib -DOGG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DOGG_LIBRARY:PATH=$MINGWPREFIX/lib -DUSE_SYSTEM_FREETYPE:BOOL=ON -DUSE_SYSTEM_POPPLER:BOOL=ON -DBUILD_WEBENGINE:BOOL=OFF -S. -Bbuild_win &&
# wl-showstatus build-install &&
# PATH=$MINGWPREFIX/qt/bin:$PATH ninja -Cbuild_win install/strip &&
#    echo OK



#mkdir -p build_win &&
# wl-showstatus configure &&
# PATH=$MINGWPREFIX/qt6/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/musescore -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt6/bin/qmake.exe -DPORTAUDIO_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DPORTAUDIO_LIBRARY:PATH=$MINGWPREFIX/lib -DVORBIS_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBIS_LIBRARY:PATH=$MINGWPREFIX/lib -DSNDFILE_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DSNDFILE_LIBRARY:PATH=$MINGWPREFIX/lib -DVORBISFILE_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBISFILE_LIBRARY:PATH=$MINGWPREFIX/lib -DOGG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DOGG_LIBRARY:PATH=$MINGWPREFIX/lib -DUSE_SYSTEM_POPPLER:BOOL=ON -S. -Bbuild_win &&
# wl-showstatus build-install &&
# PATH=$MINGWPREFIX/qt6/bin:$PATH ninja -Cbuild_win install/strip &&
#    echo OK



#
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
#mkdir -p build_win &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_PCH:BOOL=OFF -DSOUNDFONT3:BOOL=OFF -DDOWNLOAD_SOUNDFONT:BOOL=OFF -DBUILD_WEBENGINE:BOOL=OFF -DUSE_SYSTEM_FREETYPE:BOOL=ON -DUSE_SYSTEM_POPPLER:BOOL=ON -DBUILD_LANGUAGES_MODULE:BOOL=OFF -DUSE_SYSTEM_QTSINGLEAPPLICATION:BOOL=ON -DPORTAUDIO_LIBRARY:STRING="-lportaudio" -DVORBIS_INCLUDE_DIR:PATH=$MINGWPREFIX/include/vorbis -DVORBIS_LIBRARY:STRING="-lvorbis" -DVORBISFILE_INCLUDE_DIR:PATH=$MINGWPREFIX/include/vorbis -DVORBISFILE_LIBRARY:STRING="-lvorbisfile" -DOGG_INCLUDE_DIR:PATH=$MINGWPREFIX/include/ogg -DOGG_LIBRARY:STRING="-logg" -DSNDFILE_LIBRARY:STRING="-lsndfile" -DQTSINGLEAPPLICATION_INCLUDE_DIRS:PATH=$MINGWPREFIX/include -DQTSINGLEAPPLICATION_LIBRARIES:STRING="-lSingleApplication" -DBUILD_UNIT_TESTS:BOOL=OFF -DINSTALL_GTEST:BOOL=OFF -S. -Bbuild_win &&
# #wl-showstatus build &&
# #make -Cbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK
