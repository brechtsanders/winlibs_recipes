#export NAME="eventlog"
#export STATUS=
#export URL=http://www.balabit.com/downloads/files/eventlog/
#export BASENAME=eventlog
#export DESCRIPTION="The EventLog library aims to be a replacement of the simple syslog() API provided on UNIX systems. The major difference between EventLog and syslog is that EventLog tries to add structure to messages."
#export CATEGORY=system
#export TYPE=library
#export VERSION=0.2.5
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
#export DOWNLOADURL="http://www.balabit.com/downloads/files/eventlog/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.balabit.com/downloads/files/eventlog/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.gz
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
## create a dummy syslog.h
#cat > src/syslog.h << EOF
#/* dummy syslog.h (e.g. for Windows) which does nothing */
##ifndef __DUMMY_SYSLOG_H_INCLUDED
##define __DUMMY_SYSLOG_H_INCLUDED
#/* priorities (these are ordered) */
##define LOG_EMERG   0    //system is unusable
##define LOG_ALERT   1    //action must be taken immediately
##define LOG_CRIT    2    //critical conditions
##define LOG_ERR     3    //error conditions
##define LOG_WARNING 4    //warning conditions
##define LOG_NOTICE  5    //normal but significant condition
##define LOG_INFO    6    //informational
##define LOG_DEBUG   7    //debug-level messages
#//#define LOG_PRIMASK 0x07 //mask to extract priority part (internal)
#//#define LOG_PRI(p) ((p) & LOG_PRIMASK)    //extract priority
#//#define LOG_MAKEPRI(fac, pri) (((fac) << 3) | (pri))
#/* facility codes */
##define LOG_KERN     (0<<3)    //kernel messages
##define LOG_USER     (1<<3)    //random user-level messages
##define LOG_MAIL     (2<<3)    //mail system
##define LOG_DAEMON   (3<<3)    //system daemons
##define LOG_AUTH     (4<<3)    //security/authorization messages
##define LOG_SYSLOG   (5<<3)    //messages generated internally by syslogd
##define LOG_LPR      (6<<3)    //line printer subsystem
##define LOG_NEWS     (7<<3)    //network news subsystem
##define LOG_UUCP     (8<<3)    //UUCP subsystem
##define LOG_CRON     (9<<3)    //clock daemon
##define LOG_AUTHPRIV (10<<3)   //security/authorization messages (private)
##define LOG_FTP      (11<<3)   //ftp daemon
#/* option flags for openlog */
##define LOG_PID    0x01    //log the pid with each message
##define LOG_CONS   0x02    //log on the console if errors in sending
##define LOG_ODELAY 0x04    //delay open until first syslog() (default)
##define LOG_NDELAY 0x08    //don't delay open
##define LOG_NOWAIT 0x10    //don't wait for console forks: DEPRECATED
##define LOG_PERROR 0x20    //log to stderr as well
#/* functions */
#static void openlog (const char *ident, int option, int facility) {}
#static void syslog (int priority, const char *format, ...) {}
#static void closelog (void) {}
##endif //__DUMMY_SYSLOG_H_INCLUDED
#EOF
## for a better replacement of syslog.h see:
##   http://castor.web.cern.ch/castor/cgi-bin/cvsweb/cvsweb.cgi/CASTOR.deprecated/win32/syslog.c?rev=1.2&content-type=text/x-cvsweb-markup
##   http://castor.web.cern.ch/castor/cgi-bin/cvsweb/cvsweb.cgi/CASTOR.deprecated/win32/syslog.h?rev=1.4&content-type=text/x-cvsweb-markup
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# wl-showstatus build-install &&
# make install &&
#    echo OK
#cp src/syslog.h $INSTALLPREFIX/include/
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



export NAME="eventlog"
export STATUS=
#export URL=http://www.balabit.com/downloads/files/eventlog/
export URL=https://github.com/balabit/eventlog
export BASENAME=eventlog
export DESCRIPTION="The EventLog library aims to be a replacement of the simple syslog() API provided on UNIX systems. The major difference between EventLog and syslog is that EventLog tries to add structure to messages."
export CATEGORY=system
export TYPE=library
#export VERSION=0.2.9
export VERSION=0.2.12
export VERSIONDATE=20100712
#export VERSION=0.2.13
#export VERSIONDATE=20200405
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://www.balabit.com/downloads/files/eventlog/"
#export DOWNLOADURL="http://www.balabit.com/downloads/files?path=/eventlog/"
#export DOWNLOADURL="https://my.balabit.com/downloads/eventlog"
export DOWNLOADURL="https://github.com/balabit/eventlog/releases"
#export DOWNLOADURL="https://repology.org/project/eventlog/versions"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://www.balabit.com/downloads/files/eventlog/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME\_$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://optware.kupper.org/sources/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME\_$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# create dummy syslog.h
cat > src/syslog.h << EOF
/* dummy syslog.h (e.g. for Windows) which does nothing */
#ifndef __DUMMY_SYSLOG_H_INCLUDED
#define __DUMMY_SYSLOG_H_INCLUDED
/* priorities (these are ordered) */
#define LOG_EMERG   0    //system is unusable
#define LOG_ALERT   1    //action must be taken immediately
#define LOG_CRIT    2    //critical conditions
#define LOG_ERR     3    //error conditions
#define LOG_WARNING 4    //warning conditions
#define LOG_NOTICE  5    //normal but significant condition
#define LOG_INFO    6    //informational
#define LOG_DEBUG   7    //debug-level messages
//#define LOG_PRIMASK 0x07 //mask to extract priority part (internal)
//#define LOG_PRI(p) ((p) & LOG_PRIMASK)    //extract priority
//#define LOG_MAKEPRI(fac, pri) (((fac) << 3) | (pri))
/* facility codes */
#define LOG_KERN     (0<<3)    //kernel messages
#define LOG_USER     (1<<3)    //random user-level messages
#define LOG_MAIL     (2<<3)    //mail system
#define LOG_DAEMON   (3<<3)    //system daemons
#define LOG_AUTH     (4<<3)    //security/authorization messages
#define LOG_SYSLOG   (5<<3)    //messages generated internally by syslogd
#define LOG_LPR      (6<<3)    //line printer subsystem
#define LOG_NEWS     (7<<3)    //network news subsystem
#define LOG_UUCP     (8<<3)    //UUCP subsystem
#define LOG_CRON     (9<<3)    //clock daemon
#define LOG_AUTHPRIV (10<<3)   //security/authorization messages (private)
#define LOG_FTP      (11<<3)   //ftp daemon
/* option flags for openlog */
#define LOG_PID    0x01    //log the pid with each message
#define LOG_CONS   0x02    //log on the console if errors in sending
#define LOG_ODELAY 0x04    //delay open until first syslog() (default)
#define LOG_NDELAY 0x08    //don't delay open
#define LOG_NOWAIT 0x10    //don't wait for console forks: DEPRECATED
#define LOG_PERROR 0x20    //log to stderr as well
/* functions */
static void openlog (const char *ident, int option, int facility) {}
static void syslog (int priority, const char *format, ...) {}
static void closelog (void) {}
#endif //__DUMMY_SYSLOG_H_INCLUDED
EOF
wl-showstatus configure &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 mv $INSTALLPREFIX/include/eventlog/evtlog.h $INSTALLPREFIX/include/eventlog/evtlog.h.bak &&
 sed -e "s?^\(#include <syslog.h>\)?//\1?" $INSTALLPREFIX/include/eventlog/evtlog.h.bak > $INSTALLPREFIX/include/eventlog/evtlog.h &&
 rm $INSTALLPREFIX/include/eventlog/evtlog.h.bak &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
###package no longer maintained / hard to download



