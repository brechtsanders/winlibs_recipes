export NAME="googletest"
export STATUS=
export URL=https://code.google.com/p/googletest/
export BASENAME=gtest
export DESCRIPTION="Google's framework for writing C++ tests on a variety of platforms (Linux, Mac OS X, Windows, Cygwin, Windows CE, and Symbian). Based on the xUnit architecture. Supports automatic test discovery, a rich set of assertions, user-defined assertions, death tests, fatal and non-fatal failures, value- and type-parameterized tests, various options for running the tests, and XML test report generation."
export CATEGORY=development
export TYPE=library
#export VERSION=1.7.0
#export VERSIONDATE=20140927
####include/gtest/internal/gtest-port.h:1193:24: error: 'nanosleep' was not declared in this scope
#export VERSION=1.8.0
#export VERSIONDATE=20160823
####googletest/include/gtest/internal/gtest-port.h:1782:3: error: 'AutoHandle' does not name a type
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export VERSION=1.8.1
#export VERSIONDATE=20180901
#export VERSION=1.10.0
#export VERSIONDATE=20191005
export VERSION=1.11.0
export VERSIONDATE=20210612
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="https://code.google.com/p/googletest/downloads/list"
export DOWNLOADURL="https://github.com/google/googletest/releases release-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://googletest.googlecode.com/files/$BASENAME-$VERSION.zip
#export DOWNLOADSOURCEURL=https://github.com/google/googletest/archive/release-$VERSION.zip
export DOWNLOADSOURCEURL=https://github.com/google/googletest/archive/release-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#unzip -oq $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.zip
#unzip -oq $TARBALLDIR/$BASENAME/release-$VERSION.zip
tar xfz $TARBALLDIR/$BASENAME/release-$VERSION.tar.gz
#cd $BASENAME-$VERSION
cd googletest-release-$VERSION
#wl-showstatus configure &&
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-pthreads &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build &&
# make &&
# wl-showstatus build-install &&
# mkdir -p $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# cp -rf include $INSTALLPREFIX/ &&
# #cp -f lib/*.la lib/.libs/*.a $INSTALLPREFIX/lib/ &&
# cp -f lib/.libs/*.a $INSTALLPREFIX/lib/ &&
# # fix strange paths in .la files
# for F in lib/*.la; do
#  sed -e "s/\(dependency_libs='\)  */\1/; s?$(pwd -W|sed -e "s/^\([A-Z]\):/\/\1/i")/?../?g; s?\b[A-Z]:/[^ ]*/lib/\(../lib/\)?\1?g; s?\([' ]\)../lib/lib\([^ ]*\)\.la?\1-l\2?; s?\([' ]\)../lib/?\1?" $F > $INSTALLPREFIX/lib/$(basename $F)
# done &&
# cp -f lib/.libs/*.dll $INSTALLPREFIX/bin/ &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf googletest-release-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DINSTALL_GTEST:BOOL=ON -DBUILD_GMOCK:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
# wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DINSTALL_GTEST:BOOL=ON -DBUILD_GMOCK:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf googletest-release-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DINSTALL_GTEST:BOOL=ON -DBUILD_GMOCK:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DINSTALL_GTEST:BOOL=ON -DBUILD_GMOCK:BOOL=ON -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DINSTALL_GTEST:BOOL=ON -DBUILD_GMOCK:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DINSTALL_GTEST:BOOL=ON -DBUILD_GMOCK:BOOL=ON -DPython_EXECUTABLE=$PYDIR/python.exe -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf googletest-release-$VERSION



