#export NAME="libwebsockets"
#export STATUS=
#export URL=http://martinsikora.com/libwebsockets-simple-http-server
#export BASENAME=libwebsockets
#export DESCRIPTION="Simple HTTP server library"
#export CATEGORY=communication
#export TYPE=library
##export VERSION=0.5
##export VERSIONDATE=20120828
#export VERSION=0.6
#export VERSIONDATE=20130110
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="http://git.warmcat.com/cgi-bin/cgit/libwebsockets/ release-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://git.warmcat.com/cgi-bin/cgit/libwebsockets/snapshot/release-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/release-$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#mkdir -p $BASENAME-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz -C$BASENAME-$VERSION
#cd $BASENAME-$VERSION/release-$VERSION
## fix missing files
#mkdir -p sys netinet arpa
#touch netdb.h netinet/in.h arpa/inet.h poll.h sys/mman.h
#echo "#include <winsock2.h>" > sys/socket.h
#echo "#include <ws2tcpip.h>" > ifaddrs.h
## fix use of already defined interface in lib/libwebsockets.h
#mv lib/libwebsockets.h lib/libwebsockets.h.bak
#sed -e "s/interface/iface/g" lib/libwebsockets.h.bak > lib/libwebsockets.h
##mkdir -p m4
##autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-nofork --enable-noping &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-nofork --enable-noping --enable-mingw &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#make -j1 libwebsockets_la_CFLAGS=
#    make install-pkgconfigDATA
##    cmake.exe . -LH; rm CMakeCache.txt &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX . &&
## make install/strip &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && rm -rf $BASENAME-$VERSION



export NAME="libwebsockets"
export STATUS=
export URL=http://libwebsockets.org/
export BASENAME=libwebsockets
export DESCRIPTION="Libwebsockets is a lightweight pure C library built to use minimal CPU and memory resources, and provide fast throughput in both directions."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.4-chrome43-firefox-36
#export VERSIONDATE=20140330
#export VERSION=1.7.5
#export VERSIONDATE=20160404
####lib/private-libwebsockets.h:79:21: fatal error: mstcpip.h: No such file or directory
#export VERSION=1.7.9
#export VERSIONDATE=20160919
#export VERSION=2.0.3
#export VERSIONDATE=20160919
#export VERSION=2.1.0
#export VERSIONDATE=20161007
#export VERSION=2.1.1
#export VERSIONDATE=20170215
#export VERSION=2.2.0
#export VERSIONDATE=20170308
#export VERSION=2.2.1
#export VERSIONDATE=20170329
#export VERSION=2.2.2
#export VERSIONDATE=20170719
#export VERSION=2.3.0
#export VERSIONDATE=20170728
#export VERSION=2.4.0
#export VERSIONDATE=20171017
#export VERSION=2.4.1
#export VERSIONDATE=20171105
#export VERSION=2.4.2
#export VERSIONDATE=20180308
#export VERSION=3.0.0
#export VERSIONDATE=20180507
#export VERSION=3.0.1
#export VERSIONDATE=20180907
#export VERSION=3.1.0
#export VERSIONDATE=20181123
####lib/client-handshake.c:73:20: error: 'AI_V4MAPPED' undeclared (first use in this function)
#export DEPENDENCIES=openssl
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=3.2.0
#export VERSIONDATE=20190814
####lib/tls/openssl/x509.c:75:13: error: 'xn' undeclared (first use in this function)
#export VERSION=3.2.1
#export VERSIONDATE=20191219
#export VERSION=3.2.2
#export VERSIONDATE=20200117
#export VERSION=3.2.3
#export VERSIONDATE=20200507
#export VERSION=4.0.0
#export VERSIONDATE=20200306
#export VERSION=4.0.1
#export VERSIONDATE=20200310
#export VERSION=4.0.2
#export VERSIONDATE=20200429
#export VERSION=4.0.3
#export VERSIONDATE=20200430
#export VERSION=4.0.4
#export VERSIONDATE=20200501
#export VERSION=4.0.6
#export VERSIONDATE=20200505
#export VERSION=4.0.7
#export VERSIONDATE=20200505
#export VERSION=4.0.08
#export VERSIONDATE=20200512
#export VERSION=4.0.9
#export VERSIONDATE=20200513
#export VERSION=4.0.10
#export VERSIONDATE=20200516
#export VERSION=4.0.12
#export VERSIONDATE=20200525
#export VERSION=4.0.13
#export VERSIONDATE=20200526
#export VERSION=4.0.15
#export VERSIONDATE=20200603
#export VERSION=4.0.16
#export VERSIONDATE=20200612
#export VERSION=4.0.18
#export VERSIONDATE=20200620
#export VERSION=4.0.19
#export VERSIONDATE=20200621
#export VERSION=4.0.20
#export VERSIONDATE=20200709
#export VERSION=4.0.21
#export VERSIONDATE=20200903
#export VERSION=4.1.0
#export VERSIONDATE=20200907
#export VERSION=4.1.1
#export VERSIONDATE=20200916
#export VERSION=4.1.2
#export VERSIONDATE=20200922
#export VERSION=4.1.3
#export VERSIONDATE=20201012
#export VERSION=4.1.4
#export VERSIONDATE=20201026
#export VERSION=4.1.6
#export VERSIONDATE=20201202
#export VERSION=4.2.0
#export VERSIONDATE=20210416
#export VERSION=4.2.1
#export VERSIONDATE=20210713
#export VERSION=4.2.2
#export VERSIONDATE=20210828
#export VERSION=4.3.0
#export VERSIONDATE=20211005
#export VERSION=4.3.1
#export VERSIONDATE=20220122
#export VERSION=4.3.2
#export VERSIONDATE=20220518
#export VERSION=4.3.3
#export VERSIONDATE=20231120
#export VERSION=4.3.4
#export VERSIONDATE=20250226
#export VERSION=4.3.5
#export VERSIONDATE=20250228
export VERSION=4.4.1
export VERSIONDATE=20250718
wl-showstatus --package-version
export DEPENDENCIES=mbedtls
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE="LGPL with exceptions"
#export DOWNLOADURL="http://git.libwebsockets.org/cgi-bin/cgit/libwebsockets/"
#export DOWNLOADURL="https://github.com/warmcat/libwebsockets/releases"
export DOWNLOADURL="https://github.com/warmcat/libwebsockets/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://git.libwebsockets.org/cgi-bin/cgit/libwebsockets/snapshot/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/warmcat/libwebsockets/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/warmcat/libwebsockets/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix lib/lws-plat-win.c (version = 2.1.1)
#patch -ulbf lib/lws-plat-win.c << EOF
#--- lib/lws-plat-win.c  2017-02-15 11:03:12.000000000 +0100
#+++ lib/lws-plat-win.c  2017-02-15 22:42:38.405035700 +0100
#@@ -233,3 +233,4 @@
#
#-               for(unsigned int eIdx = 0; eIdx < pt->fds_count; ++eIdx) {
#+               unsigned int eIdx;
#+               for(eIdx = 0; eIdx < pt->fds_count; ++eIdx) {
#                        if (WSAEnumNetworkEvents(pt->fds[eIdx].fd, 0, &networkevents) == SOCKET_ERROR) {
#EOF
# fix _lws_plat_file_open lib/lws-plat-win.c (version >= 2.2.0)
patch -ulbf lib/lws-plat-win.c << EOF
--- lib/lws-plat-win.c  2017-03-08 17:30:19.560853900 +0100
+++ lib/lws-plat-win.c  2017-03-08 18:56:31.529903900 +0100
@@ -524,3 +524,3 @@
 LWS_VISIBLE lws_fop_fd_t
-_lws_plat_file_open(struct lws_plat_file_ops *fops, const char *filename,
+_lws_plat_file_open(const struct lws_plat_file_ops *fops, const char *filename,
                    const char *vpath, lws_fop_flags_t *flags)
EOF
# fix redefinition of ssize_t in lib/libwebsockets.h (version >= 2.2.0)
patch -ulbf lib/libwebsockets.h << EOF
--- lib/libwebsockets.h  2017-03-08 07:15:01.000000000 +0100
+++ lib/libwebsockets.h  2017-03-08 18:53:29.106841000 +0100
@@ -4300,3 +4300,3 @@
 /* ... */
-#if !defined(ssize_t)
+#if !defined(ssize_t) && !defined(__MINGW32__)
 typedef SSIZE_T ssize_t;
EOF
## fix missing AI_V4MAPPED in lib/client-handshake.c (version >= 2.2.2 <= 2.3.0)
#mv lib/client-handshake.c lib/client-handshake.c.bak
#cat > lib/client-handshake.c << EOF
##define _WIN32_WINNT 0x0600
##include <ws2tcpip.h>
#EOF
#cat lib/client-handshake.c.bak >> lib/client-handshake.c
# fix missing AI_V4MAPPED in lib/client/client-handshake.c (version >= 2.4.0)
mv lib/client/client-handshake.c lib/client/client-handshake.c.bak &&
echo "#define _WIN32_WINNT 0x0600" > lib/client/client-handshake.c &&
echo "#include <ws2tcpip.h>" >> lib/client/client-handshake.c &&
cat lib/client/client-handshake.c.bak >> lib/client/client-handshake.c
# fix lib/core/libwebsockets.c (version >= 3.0.0)
patch -ulbf lib/core/libwebsockets.c << EOF
@@ -2650,3 +2650,3 @@
                                     rp->ai_protocol);
-               if (sock.sockfd >= 0)
+               if (sock.sockfd != INVALID_SOCKET)
                        break;
EOF
# fix lib/core/output.c (version >= 3.0.0)
patch -ulbf lib/core/output.c << EOF
@@ -272,5 +272,5 @@
                if (wsi->trunc_len)
-                       n = sendto(wsi->desc.sockfd, buf, len, 0, &wsi->udp->sa_pending, wsi->udp->salen_pending);
+                       n = sendto(wsi->desc.sockfd, (char*)buf, len, 0, &wsi->udp->sa_pending, wsi->udp->salen_pending);
                else
-                       n = sendto(wsi->desc.sockfd, buf, len, 0, &wsi->udp->sa, wsi->udp->salen);
+                       n = sendto(wsi->desc.sockfd, (char*)buf, len, 0, &wsi->udp->sa, wsi->udp->salen);
 #endif
EOF
# fix missing bzero in lib/roles/http/client/client-handshake.c (version >= 3.1.0)
mv lib/roles/http/client/client-handshake.c lib/roles/http/client/client-handshake.c.bak &&
echo "#define bzero(b,len) memset(b, 0, len)" > lib/roles/http/client/client-handshake.c &&
cat lib/roles/http/client/client-handshake.c.bak >> lib/roles/http/client/client-handshake.c
# fix missing bzero (version >= 3.1.0)
for F in $(grep -l bzero $(find -name '*.c')); do
 mv $F $F.bak &&
 echo "#define bzero(b,len) memset(b, 0, len)" > $F &&
 cat $F.bak >> $F
done
# fix missing MBEDTLS_SSL_SERVER_NEW_SESSION_TICKET in lib/tls/mbedtls/wrapper/platform/ssl_pm.c (version >= 4.3.2)
patch -ulbf lib/tls/mbedtls/wrapper/platform/ssl_pm.c << EOF
@@ -551,2 +551,5 @@
             break;
+#ifndef MBEDTLS_SSL_SERVER_NEW_SESSION_TICKET
+#define MBEDTLS_SSL_SERVER_NEW_SESSION_TICKET MBEDTLS_SSL_TLS1_3_NEW_SESSION_TICKET
+#endif
         case MBEDTLS_SSL_SERVER_NEW_SESSION_TICKET:
EOF
# fix missing mbedtls_x509_get_name in lib/tls/mbedtls/mbedtls-extensions.c (version >= 4.3.3)
mv lib/tls/mbedtls/mbedtls-extensions.c lib/tls/mbedtls/mbedtls-extensions.c.bak &&
cat > lib/tls/mbedtls/mbedtls-extensions.c << EOF &&
#include <mbedtls/x509.h>
#if defined(MBEDTLS_VERSION_NUMBER) && MBEDTLS_VERSION_NUMBER >= 0x03060000
int mbedtls_x509_get_name(unsigned char **p, const unsigned char *end, mbedtls_x509_name *cur);
#endif
EOF
cat lib/tls/mbedtls/mbedtls-extensions.c.bak >> lib/tls/mbedtls/mbedtls-extensions.c
# don't abort build on warnings (version >= 3.2.1)
sed -i.bak -e "s/-Wall\|-Werror//g" CMakeLists.txt
#wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLWS_WITHOUT_DEBUG:BOOL=ON -DLWS_IPV6:BOOL=ON -DLWS_WITH_HTTP2:BOOL=ON -DLWS_WITHOUT_TEST_SERVER:BOOL=ON -DLWS_WITHOUT_TEST_SERVER_EXTPOLL:BOOL=ON . &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLWS_WITHOUT_DEBUG:BOOL=ON -DLWS_IPV6:BOOL=ON -DLWS_WITH_HTTP2:BOOL=ON -DLWS_WITHOUT_TESTAPPS:BOOL=ON -DLWS_WITHOUT_TEST_CLIENT:BOOL=ON -DLWS_WITHOUT_TEST_ECHO:BOOL=ON -DLWS_WITHOUT_TEST_FRAGGLE:BOOL=ON -DLWS_WITHOUT_TEST_PING:BOOL=ON -DLWS_WITHOUT_TEST_SERVER:BOOL=ON -DLWS_WITHOUT_TEST_SERVER_EXTPOLL:BOOL=ON . &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLWS_WITHOUT_DEBUG:BOOL=ON -DLWS_WITH_MBEDTLS:BOOL=ON -DLWS_IPV6:BOOL=ON -DLWS_WITH_HTTP2:BOOL=ON -DLWS_WITHOUT_TESTAPPS:BOOL=ON -DLWS_WITHOUT_TEST_CLIENT:BOOL=ON -DLWS_WITHOUT_TEST_ECHO:BOOL=ON -DLWS_WITHOUT_TEST_FRAGGLE:BOOL=ON -DLWS_WITHOUT_TEST_PING:BOOL=ON -DLWS_WITHOUT_TEST_SERVER:BOOL=ON -DLWS_WITHOUT_TEST_SERVER_EXTPOLL:BOOL=ON . &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLWS_WITHOUT_DEBUG:BOOL=ON -DLWS_WITH_MBEDTLS:BOOL=ON -DLWS_IPV6:BOOL=ON -DLWS_WITH_HTTP2:BOOL=ON -DLWS_UNIX_SOCK:BOOL=OFF -DLWS_WITHOUT_TESTAPPS:BOOL=ON -DLWS_WITHOUT_TEST_CLIENT:BOOL=ON -DLWS_WITHOUT_TEST_ECHO:BOOL=ON -DLWS_WITHOUT_TEST_FRAGGLE:BOOL=ON -DLWS_WITHOUT_TEST_PING:BOOL=ON -DLWS_WITHOUT_TEST_SERVER:BOOL=ON -DLWS_WITHOUT_TEST_SERVER_EXTPOLL:BOOL=ON . &&
# wl-showstatus build-install &&
# make install/strip &&
# cp -f $INSTALLPREFIX/lib/libwebsockets_static.a $INSTALLPREFIX/lib/libwebsockets.a &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLWS_WITHOUT_DEBUG:BOOL=ON -DLWS_WITH_MBEDTLS:BOOL=ON -DLWS_IPV6:BOOL=ON -DLWS_WITH_HTTP2:BOOL=ON -DLWS_UNIX_SOCK:BOOL=OFF -DLWS_WITHOUT_TESTAPPS:BOOL=ON -DLWS_WITHOUT_TEST_CLIENT:BOOL=ON -DLWS_WITHOUT_TEST_ECHO:BOOL=ON -DLWS_WITHOUT_TEST_FRAGGLE:BOOL=ON -DLWS_WITHOUT_TEST_PING:BOOL=ON -DLWS_WITHOUT_TEST_SERVER:BOOL=ON -DLWS_WITHOUT_TEST_SERVER_EXTPOLL:BOOL=ON -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 cp -f $INSTALLPREFIX/lib/libwebsockets_static.a $INSTALLPREFIX/lib/libwebsockets.a &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



