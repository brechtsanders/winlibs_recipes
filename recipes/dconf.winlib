export NAME="dconf"
export STATUS=
export URL=http://live.gnome.org/dconf
export BASENAME=dconf
export DESCRIPTION="dconf is a low-level configuration system. Its main purpose is to provide a backend to GSettings on platforms that don't already have configuration storage systems."
export CATEGORY=configuration
export TYPE=library
#export VERSION=0.5.1
#export VERSIONDATE=20101222
#export VERSION=0.6
#export VERSIONDATE=20101222
#export VERSION=0.7.1
#export VERSIONDATE=20110122
#export VERSION=0.7.2
#export VERSIONDATE=20110205
####No package 'gtk+-3.0' found
#export VERSION=0.7.3
#export VERSIONDATE=20110323
#export VERSION=0.7.4
#export VERSIONDATE=20110506
#export VERSION=0.7.5
#export VERSIONDATE=20110509
#export VERSION=0.8.0
#export VERSIONDATE=20110726
####../common/dconf-shmdir.c:24:24: error: sys/statfs.h: No such file or directory
####../common/dconf-shmdir.c:25:21: error: sys/vfs.h: No such file or directory
####../common/dconf-shmdir.c:35: error: storage size of 'buf' isn't known
#export VERSION=0.9.0
#export VERSIONDATE=20110726
####service/dconf-state.c:62: undefined reference to `mkdtemp'
####engine/dconf-engine.c:32:22: error: sys/mman.h: No such file or directory
#export VERSION=0.9.1
#export VERSIONDATE=20110920
#export VERSION=0.10.0
#export VERSIONDATE=20110927
####Requested 'glib-2.0 >= 2.29.90' but version of GLib is 2.28.8
#export VERSION=0.11.0
#export VERSIONDATE=20111027
#export VERSION=0.11.2
#export VERSIONDATE=20111122
####engine/dconf-engine.c:32:22: error: sys/mman.h: No such file or directory
#export VERSION=0.11.3
#export VERSIONDATE=20120128
#export VERSION=0.11.5
#export VERSIONDATE=20120207
####../engine/dconf-engine.c:114: error: 'PROT_READ' undeclared (first use in this function)
####../engine/dconf-engine.c:114: error: 'MAP_SHARED' undeclared (first use in this function)
#export VERSION=0.11.6
#export VERSIONDATE=20120309
#export VERSION=0.11.7
#export VERSIONDATE=20120320
#export VERSION=0.12.0
#export VERSIONDATE=20120326
#export VERSION=0.12.1
#export VERSIONDATE=20120501
#export VERSION=0.13.0
#export VERSIONDATE=20120605
#export VERSION=0.13.4
#export VERSIONDATE=20120717
#export VERSION=0.13.5
#export VERSIONDATE=20120808
####Requested 'glib-2.0 >= 2.33.3' but version of GLib is 2.32.4
#export VERSION=0.14.0
#export VERSIONDATE=20120927
#export VERSION=0.14.1
#export VERSIONDATE=20121101
#export VERSION=0.15.0
#export VERSIONDATE=20121023
#export VERSION=0.15.2
#export VERSIONDATE=20121120
####configure: error: Your intltool is too old.  You need intltool 0.50.0 or later.
####shm/dconf-shm.c:137:32: error: 'PROT_WRITE' undeclared (first use in this function)
#export VERSION=0.15.3
#export VERSIONDATE=20130212
####Requested 'glib-2.0 >= 2.35.2' but version of GLib is 2.34.3
#export VERSION=0.16.0
#export VERSIONDATE=20130326
#export VERSION=0.16.1
#export VERSIONDATE=20130717
####service/dconf-keyfile-writer.c:226:20: error: storage size of 'lock' isn't known
####service/dconf-keyfile-writer.c:228:21: error: 'F_WRLCK' undeclared (first use in this function)
#export VERSION=0.17.0
#export VERSIONDATE=20130715
#export VERSION=0.17.1
#export VERSIONDATE=20130917
#export VERSION=0.18.0
#export VERSIONDATE=20130924
####In file included from service/dconf-service.c:28:0:
####/include/glib-2.0/glib-unix.h:38:2: error: #error "This header may only be used on UNIX"
#export VERSION=0.19.2
#export VERSIONDATE=20131112
#export VERSION=0.19.3
#export VERSIONDATE=20140114
####make[2]: gdbus-codegen: Command not found
####gspawn-win32-helper-console.exe crashes
#export VERSION=0.20.0
#export VERSIONDATE=20140325
#export VERSION=0.21.0
#export VERSIONDATE=20140722
#export VERSION=0.22.0
#export VERSIONDATE=20140920
####Requested 'glib-2.0 >= 2.39.1' but version of GLib is 2.38.2
#export VERSION=0.23.1
#export VERSIONDATE=20150303
#export VERSION=0.24.0
#export VERSIONDATE=20150324
####gvdb/gvdb-builder.h:23:21: fatal error: gio/gio.h: No such file or directory
#export VERSION=0.25.1
#export VERSIONDATE=20151218
#export VERSION=0.26.0
#export VERSIONDATE=20160323
export VERSION=0.26.1
export VERSIONDATE=20171004
export DEPENDANCIES=dbus,glib2,gtk3,pango,libxml2
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
#export VERSION=0.27.1
#export VERSIONDATE=20171018
#export VERSION=0.28.0
#export VERSIONDATE=20180314
#export VERSION=0.29.1
#export VERSIONDATE=20180814
#export VERSION=0.29.2
#export VERSIONDATE=20180827
#export VERSION=0.30.0
#export VERSIONDATE=20180903
#export VERSION=0.30.1
#export VERSIONDATE=20181023
#export VERSION=0.31.1
#export VERSIONDATE=20190108
#export VERSION=0.31.2
#export VERSIONDATE=20190205
#export VERSION=0.32.0
#export VERSIONDATE=20190312
#export VERSION=0.33.1
#export VERSIONDATE=20190716
#export VERSION=0.33.2
#export VERSIONDATE=20190820
#export VERSION=0.34.0
#export VERSIONDATE=20190910
#export VERSION=0.35.1
#export VERSIONDATE=20200106
#export VERSION=0.36.0
#export VERSIONDATE=20200311
#export VERSION=0.38.0
#export VERSIONDATE=20200913
#export VERSION=0.39.1
#export VERSIONDATE=20210208
#export VERSION=0.40.0
#export VERSIONDATE=20210313
wl-showstatus --package-version
#export DEPENDANCIES=dbus,glib2,gtk3,pango,libxml2
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=meson,ninja,cmake
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/dconf/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2 --transform="s?/aux?/aux_?"
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz --transform="s?/aux?/aux_?"
cd $BASENAME-$VERSION
# fix missing files
mkdir -p sys
#touch sys/wait.h
cat > sys/mman.h << EOF
#ifndef __INCLUDED_WIN_MMAN_H__
#define __INCLUDED_WIN_MMAN_H__
#include <io.h>
#include <windows.h>
#define PROT_READ  PAGE_WRITECOPY  //PAGE_READONLY
#define PROT_WRITE PAGE_READWRITE
#define PROT_EXEC  PAGE_EXECUTE_READ
#define MAP_SHARED 0
#define MAP_FAILED NULL
static void* mmap (void *start, size_t length, int prot, int flags, int fd, off_t offset)
{
  HANDLE handle;
/*
  if (offset % getpagesize() != 0)
    return NULL;
*/
  if ((handle = CreateFileMapping((HANDLE)_get_osfhandle(fd), NULL, prot, 0, 0, NULL)) == NULL)
    return NULL;
  start = MapViewOfFile(handle, FILE_MAP_COPY, 0, offset, length);
  CloseHandle(handle);
  return start;
}
static int munmap (void *start, size_t length)
{
  UnmapViewOfFile(start);
  return 0;
}
static ssize_t pwrite (int fd, const void *buf, size_t count, off_t offset)
{
    ssize_t retval;
    off_t saved_pos = lseek (fd, 0, SEEK_CUR);
    lseek(fd, offset, SEEK_SET);
    retval = write(fd, buf, count);
    lseek(fd, saved_pos, SEEK_SET);
    return retval;    
}
#endif //__INCLUDED_WIN_MMAN_H__
EOF
## fix missing mkdtemp in service/dconf-state.c (version >= 0.9.0 <= 0.12.1)
#mv service/dconf-state.c service/dconf-state.c.bak
#cat > service/dconf-state.c << EOF
##define mkdtemp(template) NULL
#EOF
#cat service/dconf-state.c.bak >> service/dconf-state.c
# avoid missing unis stuff in service/service.c
mv service/service.c service/service.c.bak
grep -v unix service/service.c.bak > service/service.c
# fix reserved interface in engine/dconf-engine.h
mv engine/dconf-engine.h engine/dconf-engine.h.bak
sed -e "s/\*interface,/*iface,/g" engine/dconf-engine.h.bak > engine/dconf-engine.h
# fix service/dconf-service.c (version >= 0.16.0)
patch -ulbf service/dconf-service.c << EOF
--- service/dconf-service.c  2013-03-14 19:27:40 +0100
+++ service/dconf-service.c  2013-03-30 22:12:02 +0100
@@ -27,3 +27,5 @@

+#ifndef __MINGW32__
 #include <glib-unix.h>
+#endif
 #include <string.h>
@@ -288,2 +290,3 @@

+#ifndef __MINGW32__
   g_unix_signal_add (SIGTERM, dconf_service_signalled, service);
@@ -291,2 +294,3 @@
   g_unix_signal_add (SIGHUP, dconf_service_signalled, service);
+#endif

EOF
# fix file locking in service/dconf-keyfile-writer.c (version >= 0.16.0)
patch -ulbf service/dconf-keyfile-writer.c << EOF
--- service/dconf-keyfile-writer.c  2013-07-12 16:31:46 +0200
+++ service/dconf-keyfile-writer.c  2013-07-17 10:22:20 +0200
@@ -26,6 +26,9 @@
 #include <unistd.h>
 #include <errno.h>
 #include <fcntl.h>
+#ifdef _WIN32
+#include <windows.h>
+#endif

 typedef DConfWriterClass DConfKeyfileWriterClass;

@@ -221,6 +224,18 @@
         }
     }

+#ifdef _WIN32
+  {
+    OVERLAPPED offset = {0, 0, {{0, 0}}, NULL};
+    if (!LockFileEx((HANDLE)_get_osfhandle(kfw->lock_fd), LOCKFILE_EXCLUSIVE_LOCK, 0, 0xFFFF, 0xFFFF, &offset)) {
+      g_set_error (error, G_FILE_ERROR, -1,
+                   "%s: unable to lock file", kfw->lock_filename);
+      close (kfw->lock_fd);
+      kfw->lock_fd = -1;
+      return FALSE;
+    }
+  }
+#else
   while (TRUE)
     {
       struct flock lock;
@@ -246,6 +261,7 @@

       /* it was EINTR.  loop again. */
     }
+#endif

   if (!g_file_get_contents (kfw->filename, &kfw->contents, NULL, &local_error))
     {
EOF
# fix missing getuid in engine/dconf-engine-profile.c (version >= 0.25.1)
mv engine/dconf-engine-profile.c engine/dconf-engine-profile.c.bak &&
sed -e "s/getuid *()/0/" engine/dconf-engine-profile.c.bak > engine/dconf-engine-profile.c
# skip making tests
cat > tests/Makefile.in << EOF
clean:
all:
install:
install-strip:
clean:
EOF
cp -f tests/Makefile.in tests/Makefile.am
# skip making docs (version >= 0.16.1)
cp -f tests/Makefile.in docs/Makefile.in
cp -f tests/Makefile.in docs/Makefile.am
#mkdir -p m4
#touch README AUTHORS ChangeLog
#mv configure.ac configure.ac.bak
#sed "s?aux?aux_?" configure.ac.bak > configure.ac
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
# fix missing aux directory (aux is a reserved device name in Windows)
#mkdir -p aux_
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2 -C aux_ --wildcards $BASENAME-$VERSION/'aux/*' --strip-components=2
# fix configure
mv configure configure.bak
#sed "s?/aux?/aux_?" configure.bak > configure
sed "s?/aux?/aux_?; s/gio-unix/gio-windows/g" configure.bak > configure
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
 wl-showstatus build-install &&
 ## fix dbus-1/Makefile (version <= 0.24.0)
 #mv dbus-1/Makefile dbus-1/Makefile.bak &&
 #sed -e "s?\(\$(AM_V_GEN) \)*\(ln -.*\.so\)\(\.0\)*?#\1\2\3?; s?\(libdconf-dbus-1\)\.so\.[0-9]*\.[0-9]*\.[0-9]*\(\$(EXEEXT)\)*?\1.dll?g" dbus-1/Makefile.bak > dbus-1/Makefile &&
 # fix client/Makefile
 mv client/Makefile client/Makefile.bak &&
 sed -e "s?\(\$(AM_V_GEN) \)*\(ln -.*\.so\)\(\.0\)*?#\1\2\3?; s?\(libdconf\)\.so\.[0-9]*\.[0-9]*\.[0-9]*\(\$(EXEEXT)\)*?\1.dll?g; s?\(libdconf\)\.so?\1.0.dll?; s?\(libdconf\)\.so\.0?\1.dll?" client/Makefile.bak > client/Makefile &&
 # fix gsettings/Makefile
 mv gsettings/Makefile gsettings/Makefile.bak &&
 sed -e "s?\(libdconfsettings\)\.so\(\$(EXEEXT)\)*?\1.dll?g;" gsettings/Makefile.bak > gsettings/Makefile &&
 # fix bin/Makefile
 mv bin/Makefile bin/Makefile.bak &&
 sed -e "s/\(libdconf\)\.so\.[0-9]*/\1.dll/g" bin/Makefile.bak > bin/Makefile &&
 ## fix editor/Makefile (version <= 0.22.0)
 #mv editor/Makefile editor/Makefile.bak &&
 #sed -e "s/\(libdconf\)\.so\.[0-9]*/\1.dll/g" editor/Makefile.bak > editor/Makefile &&
 #make install-strip &&
 #PYTHONPATH=$MINGWPREFIX/share/glib-2.0 make install-strip &&
 #PYTHONPATH=$MINGWPREFIX/share:$MINGWPREFIX/share/glib-2.0:$PYTHONPATH make install-strip DESTDIR=$INSTALLPREFIX prefix= &&
 PATH=$PYDIR:$PATH PYTHONPATH=$MINGWPREFIX/share:$MINGWPREFIX/share/glib-2.0:$PYTHONPATH make install-strip DESTDIR=$INSTALLPREFIX prefix= &&
 mv -f $INSTALLPREFIX/lib/libdconf.dll.exe $INSTALLPREFIX/bin/libdconf.dll &&
 #mv -f $INSTALLPREFIX/lib/libdconf-dbus-1.dll.exe $INSTALLPREFIX/bin/libdconf-dbus-1.dll &&
 mv -f $INSTALLPREFIX/lib/gio/modules/libdconfsettings.dll.exe $INSTALLPREFIX/lib/gio/modules/libdconfsettings.dll &&
 # fix missing dconf library file
 ( ls -1 $INSTALLPREFIX/lib/dconf.dll.a &> /dev/null || dlltool -Dclient/libdconf.dll -l$INSTALLPREFIX/lib/dconf.dll.a ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



####To do: missing *.a files
## fix missing gio-unix
#sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#mkdir -p build &&
##PKG_CONFIG= PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/share/pkgconfig PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared build &&
#PKG_CONFIG= PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/share/pkgconfig PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both build &&
##echo -n " -I$MINGWPREFIX/include/mman-win32" >> build/engine/dconf-engine@sta/dconf-engine.c.obj.rsp
#PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -C build -v &&
#    echo OK



#mman-win32
## fix missing off_t in shm/dconf-shm-mockable.h (version >= 0.36.0)
#mv shm/dconf-shm-mockable.h shm/dconf-shm-mockable.h.bak &&
#echo "#include <sys/types.h>" > shm/dconf-shm-mockable.h &&
#cat shm/dconf-shm-mockable.h.bak >> shm/dconf-shm-mockable.h
### fix missing off_t in shm/dconf-shm-mockable.h (version >= 0.40.0)
##patch -ulbf shm/dconf-shm-mockable.h << EOF
##@@ -28,3 +28,3 @@
##                                             size_t       count,
##-                                            off_t        offset);
##+                                            long long    offset);
##
##EOF
### fix missing off_t in shm/dconf-shm-mockable.c (version >= 0.40.0)
##patch -ulbf shm/dconf-shm-mockable.c << EOF
##@@ -36,3 +36,3 @@
## ssize_t
##-dconf_shm_pwrite (int fd, const void *buf, size_t count, off_t offset)
##+dconf_shm_pwrite (int fd, const void *buf, size_t count, long long offset)
## {
##EOF
## fix missing glib-unix.h in service/dconf-service.c (version >= 0.40.0)
#patch -ulbf service/dconf-service.c << EOF
#@@ -27,3 +27,5 @@
#
#+#ifndef _WIN32
# #include <glib-unix.h>
#+#endif
# #include <string.h>
#EOF
## fix missing gio-unix
#sed -i.bak -e "s/gio-unix/gio-windows/" meson.build
## skip building tests
#sed -i.bak2 -e "s/^subdir('tests')/#&/" meson.build
#mkdir -p build_both &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -D bash_completion=false -D gtk_doc=false -Dc_args="-I$MINGWPREFIX/include/mman-win32" -Dc_link_args="-Wl,--as-needed -lmman" . build_both &&
# #PKG_CONFIG= PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -D bash_completion=false -D gtk_doc=false -Dc_args="-I$MINGWPREFIX/include/mman-win32 -D_POSIX" -Dc_link_args="-Wl,--as-needed -lmman" . build_both &&
# #-I$MINGWPREFIX/include/libdl-win32
# # fix slash/backslash path issue when calling Python from Ninja
# sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'
