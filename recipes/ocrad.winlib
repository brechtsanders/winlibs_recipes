export NAME="ocrad"
export STATUS=
export URL=http://www.gnu.org/software/ocrad/
export BASENAME=ocrad
export DESCRIPTION="GNU Ocrad is an OCR (Optical Character Recognition) program based on a feature extraction method. It reads images in pbm (bitmap), pgm (greyscale) or ppm (color) formats and produces text in byte (8-bit) or UTF-8 formats."
export CATEGORY=ocr
export TYPE=library
#export VERSION=0.17
#export VERSION=0.21
#export VERSIONDATE=20120116
#export VERSION=0.25
#export VERSIONDATE=20160405
#export VERSION=0.26
#export VERSIONDATE=20170331
#export VERSION=0.27
#export VERSIONDATE=20190112
#export VERSION=0.28
#export VERSIONDATE=20220118
export VERSION=0.29
export VERSIONDATE=20240119
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://ftp.gnu.org/gnu/ocrad/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnu.org/gnu/ocrad/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnu.org/gnu/ocrad/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://ftp.gnu.org/gnu/ocrad/$BASENAME-$VERSION.tar.lz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xa --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.lz
cd $BASENAME-$VERSION
# fix missing stuff
mv common.h common.h.bak
cat > common.h << EOF
#include <stdio.h>
#include <limits.h>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
EOF
cat common.h.bak >> common.h
# fix error: call of overloaded 'abs(int)' is ambiguous
patch -ulbf character_r12.cc << EOF
--- character_r12.cc  Fri Jun 29 14:29:14 2007
+++ character_r12.cc  Tue Jul  7 09:32:32 2009
@@ -143,3 +143,3 @@
           int hdiff;
-          if( b2.bottom_hook( &hdiff ) && std::abs( hdiff ) >= b2.height() / 2 )
+          if( b2.bottom_hook( &hdiff ) && std::abs( (double)hdiff ) >= b2.height() / 2 )
             {
@@ -168,3 +168,3 @@
                     ( 3 * f2.wp[f2.wp.pos(10)] < 2 * f1.wp.max() ||
-                      b1.left() <= b2.left() && b2.vpos( 80 ) > charbox.bottom() ) )
+                      ( b1.left() <= b2.left() && b2.vpos( 80 ) > charbox.bottom() ) ) )
                   { add_guess( UCS::IEXCLAM, 0 ); return; }
EOF
patch -ulbf textline_r2.cc << EOF
--- textline_r2.cc  Fri Jun 29 14:29:14 2007
+++ textline_r2.cc  Tue Jul  7 09:35:30 2009
@@ -443,4 +443,4 @@
                       cap = ( c1.bottom() + 2 <= c2.bottom() ); break;
-            case 'Q': cap = ( std::abs( c1.top() - c2.top() ) <= 2 ); break;
-            default : cap = ( std::abs( c1.bottom() - c2.bottom() ) <= 2 );
+            case 'Q': cap = ( std::abs( (double)(c1.top() - c2.top()) ) <= 2 ); break;
+            default : cap = ( std::abs( (double)(c1.bottom() - c2.bottom()) ) <= 2 );
             }
@@ -449,3 +449,3 @@
       if( !valid_c2 && i > big_initials() && !character(i-1).maybe(' ') )
-        cap = ( std::abs( c1.bottom() - charbox(c1).bottom() ) <= 2 );
+        cap = ( std::abs( (double)(c1.bottom() - charbox(c1).bottom()) ) <= 2 );
       if( cap ) c1.only_guess( 'P', 0 );
EOF
# fix already defined Rectangle in rectangle.h (version >= 0.25)
mv rectangle.h rectangle.h.bak
cat > rectangle.h << EOF
#undef Rectangle
#include <windows.h>
#define Rectangle ocrad_Rectangle
#define left ocrad_left
#define top ocrad_top
#define right ocrad_right
#define bottom ocrad_bottom
EOF
cat rectangle.h.bak >> rectangle.h
# fix main.cc (version >= 0.29)
patch -ulbf main.cc << EOF
@@ -236,3 +236,7 @@
         { if( !S_ISDIR( st.st_mode ) ) { errno = ENOTDIR; return false; } }
+#ifdef _WIN32
+      else if( mkdir( partial.c_str() ) != 0 && errno != EEXIST )
+#else
       else if( mkdir( partial.c_str(), mode ) != 0 && errno != EEXIST )
+#endif
         return false;          // if EEXIST, another process created the dir
EOF
sed -i.bak -e "s/\(\$(INSTALL) -p\) -m [0-9]*/\1/; s?\$(INSTALL_PROGRAM) ./\$(progname) \$(DESTDIR)\$(bindir)/\$(progname)?\$(INSTALL_PROGRAM) ./\$(progname).exe \$(DESTDIR)\$(bindir)/\$(progname).exe?" Makefile.in
mkdir -p $INSTALLPREFIX/bin
#make check
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-static-libstdc++" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build &&
 make &&
 # manually build shared library (version >= 0.29)
 ( echo "EXPORTS" && ${NM:-nm} -f posix --defined-only -p libocrad.a | sed -n -e "s/^\([^ ]*\) T .*$/\1/p" ) > libocrad.def &&
 ${CXX:-g++} -shared -s -mwindows -def libocrad.def -o ocrad.dll libocrad.a -Wl,--out-implib,libocrad.dll.a -lpng &&
 #wl-showstatus install &&
 #cp ocrad.exe $INSTALLPREFIX/bin/ &&
 wl-showstatus build-install &&
 make install-strip &&
 # manually copy shared library (version >= 0.29)
 cp -f *.dll.a $INSTALLPREFIX/lib/ &&
 cp -f *.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



