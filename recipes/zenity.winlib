#export NAME="zenity"
#export STATUS=
#export URL=http://live.gnome.org/Zenity
#export BASENAME=zenity
#export DESCRIPTION="Zenity is a tool that allows you to display Gtk+ dialog boxes from the command line and through shell scripts. It is similar to gdialog, but is intended to be saner."
#export CATEGORY=
#export TYPE=library
##export VERSION=2.32.1
##export VERSIONDATE=20101116
##export VERSION=3.0.0
##export VERSIONDATE=20110405
##export VERSION=3.1.5
##export VERSIONDATE=20110817
##export VERSION=3.2.0
##export VERSIONDATE=20110927
##export VERSION=3.4.0
##export VERSIONDATE=20120325
##export VERSION=3.6.0
##export VERSIONDATE=20120927
##export VERSION=3.7.2
##export VERSIONDATE=20121122
##export VERSION=3.8.0
##export VERSIONDATE=20130326
#####src/option.c:1624:76: error: 'D_FMT' undeclared (first use in this function)
##export DEPENDENCIES=plibc,glib2,gettext,libnotify,pango,gdk-pixbuf,gtk3,gnome-doc-utils
##export DEPENDENCIES=glib2,gettext,libnotify,pango,gdk-pixbuf,gtk3,gnome-doc-utils
##export VERSION=3.12.1
##export VERSIONDATE=20140426
##export VERSION=3.14.0
##export VERSIONDATE=20140924
##export VERSION=3.16.0
##export VERSIONDATE=20150513
#####src/util.h:35:84: error: unknown type name 'Window'
##export VERSION=3.16.2
##export VERSIONDATE=20150515
##export VERSION=3.16.3
##export VERSIONDATE=20150623
##export VERSION=3.18.0
##export VERSIONDATE=20150921
##export VERSION=3.18.1.1
##export VERSIONDATE=20151018
##export VERSION=3.20.0
##export VERSIONDATE=20160406
##export VERSION=3.22.0
##export VERSIONDATE=20160920
##export VERSION=3.24.0
##export VERSIONDATE=20170321
##export VERSION=3.26.0
##export VERSIONDATE=20171114
##export VERSION=3.28.0
##export VERSIONDATE=20180312
##export VERSION=3.28.1
##export VERSIONDATE=20180410
##export VERSION=3.30.0
##export VERSIONDATE=20181005
#export VERSION=3.32.0
#export VERSIONDATE=20190322
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,gettext,libnotify,pango,gdk-pixbuf,gtk3,gnome-doc-utils
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=itstool
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/zenity/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix src/progress.c
#mv src/progress.c src/progress.c.bak
#cat > src/progress.c << EOF
#//#define getppid() 0
#//#include <plibc.h>
#//#define kill(pid,sig) (sig ? _win_kill(pid,sig) : -1)
##define kill(pid,sig) (-1)
#EOF
#cat src/progress.c.bak >> src/progress.c
## fix missing langinfo.h
##touch langinfo.h
#cat > langinfo.h << EOF
##define nl_langinfo(nl_item) "%Y-%m-%d"
##define D_FMT 3000
#EOF
## skip making help (NotImplementedError)
#cat > help/Makefile.in << EOF
#clean:
#all:
#install:
#install-strip:
#EOF
## fix problem detecting GNU gettext tools on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# sed -i.bak -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure
#fi
#wl-showstatus configure &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" LIBS="-Wl,--as-needed -lplibc -no-undefined" &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" LIBS="-Wl,--as-needed -lplibc" &&
# #PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" LIBS="-Wl,--as-needed -lplibc" &&
# INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="zenity"
export STATUS=
export URL=http://live.gnome.org/Zenity
export BASENAME=zenity
export DESCRIPTION="Zenity is a tool that allows you to display Gtk+ dialog boxes from the command line and through shell scripts. It is similar to gdialog, but is intended to be saner."
export CATEGORY=
export TYPE=library
#export VERSION=3.41.0
#export VERSIONDATE=20210810
#export VERSION=3.42.0
#export VERSIONDATE=20220402
#export VERSION=3.42.1
#export VERSIONDATE=20220427
#export VERSION=3.43.0
#export VERSIONDATE=20220701
export VERSION=3.44.0
export VERSIONDATE=20230125
#export VERSION=3.90.0
#export VERSIONDATE=20230126
#export VERSION=3.91.0
#export VERSIONDATE=20230307
#export VERSION=3.92.0
#export VERSIONDATE=20230429
#export VERSION=3.99.0
#export VERSIONDATE=20230608
#export VERSION=3.99.1
#export VERSIONDATE=20230810
#export VERSION=3.99.2
#export VERSIONDATE=20230908
#export VERSION=3.99.4
#export VERSIONDATE=20231121
wl-showstatus --package-version
export DEPENDENCIES=glib2,gettext,libnotify,pango,gdk-pixbuf,gtk3
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja,itstool
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/zenity/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix missing kill() in src/progress.c
mv src/progress.c src/progress.c.bak
cat > src/progress.c << EOF
#define kill(pid,sig) (-1)
EOF
cat src/progress.c.bak >> src/progress.c
# fix missing langinfo.h
mkdir -p winfix
cat > winfix/langinfo.h << EOF
#define nl_langinfo(nl_item) "%Y-%m-%d"
#define D_FMT 3000
EOF
# fix location of Perl
sed -i.bak -e "s?'perl'?'$(cygpath -w $PERLDIR/bin/perl.exe|sed -e 's/\\/&&&&/g')'?" meson.build
# skip building help
sed -i.bak2 -e "s/^subdir('help')/#&/" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dwebkitgtk=false -Dc_args="-I$PWD/winfix" . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dlibnotify=true -Dwebkitgtk=false -Dc_args="-I$PWD/winfix" . build_both &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dlibnotify=true -Dwebkitgtk=false -Dc_args="-I$PWD/winfix" . build_both &&
 #PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dwebkitgtk=false -Dc_args="-I$PWD/winfix" . build_both &&
 wl-showstatus build-install &&
 # fix missing installation folder (version >= 3.44.0)
 mkdir -p $INSTALLPREFIX/share/icons/hicolor &&
 ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



