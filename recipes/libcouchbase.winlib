export NAME="libcouchbase"
export STATUS=
export URL=http://www.couchbase.com/communities/c-client-library
export BASENAME=libcouchbase
export DESCRIPTION="The C library provides fast access to documents in Couchbase Server 2.0. With JSON documents and Couchbase server 2.0 you have new ways to index and query data stored in the cluster through views. This client library, libcouchbase, also simplifies requests to Views through its handling of HTTP transport."
export CATEGORY=database
export TYPE=library
#export VERSION=2.4.0
#export VERSIONDATE=20140819
#export VERSION=2.4.1
#export VERSIONDATE=20140828
#export VERSION=2.4.2
#export VERSIONDATE=20140925
####.libs/liblcbtools.a(liblcbtools_la-options.o):options.cc:(.text+0x3236): undefined reference to `lcb_cntl_string'
#export VERSION=2.4.3
#export VERSIONDATE=20141029
#export VERSION=2.4.8
#export VERSIONDATE=20150329
#export VERSION=2.4.9
#export VERSIONDATE=20150415
#export VERSION=2.5.0
#export VERSIONDATE=20150514
#export VERSION=2.5.1
#export VERSIONDATE=20150618
#export VERSION=2.5.2
#export VERSIONDATE=20150730
#export VERSION=2.5.3
#export VERSIONDATE=20150828
#export VERSION=2.5.4
#export VERSIONDATE=20151128
####fatal: Not a git repository (or any parent up to mount point /r)
####Failed to download http://packages.couchbase.com/clients/c/mock/CouchbaseMock-1.1.0-gda80301.jar
#export VERSION=2.5.5
#export VERSIONDATE=20160114
#export VERSION=2.5.6
#export VERSIONDATE=20160219
#export VERSION=2.5.7
#export VERSIONDATE=20160323
####src/mc/mcreq.c:496:1: error: conflicting types for 'mcreq_get_bodysize'
#export VERSION=2.5.8
#export VERSIONDATE=20160420
#export VERSION=2.6.0
#export VERSIONDATE=20160518
#export VERSION=2.6.1
#export VERSIONDATE=20160622
#export VERSION=2.6.2
#export VERSIONDATE=20160728
#export VERSION=2.6.3
#export VERSIONDATE=20160928
#export VERSION=2.6.4
#export VERSIONDATE=20161129
#export VERSION=2.7.0
#export VERSIONDATE=20161222
#export VERSION=2.7.1
#export VERSIONDATE=20170120
#export VERSION=2.7.2
#export VERSIONDATE=20170222
#export VERSION=2.7.3
#export VERSIONDATE=20170322
#export VERSION=2.7.4
#export VERSIONDATE=20170419
#export VERSION=2.7.5
#export VERSIONDATE=20170518
#export VERSION=2.7.6
#export VERSIONDATE=20170712
#export VERSION=2.7.7
#export VERSIONDATE=20170817
#export VERSION=2.8.0
#export VERSIONDATE=20170831
#export VERSION=2.8.1
#export VERSIONDATE=20170920
#export VERSION=2.8.2
#export VERSIONDATE=20171018
#export VERSION=2.8.3
#export VERSIONDATE=20171122
#export VERSION=2.8.4
#export VERSIONDATE=20171220
####src/dns-srv.cc:101:5: error: 'PDNS_RECORDA' was not declared in this scope
#export VERSION=2.8.5
#export VERSIONDATE=20180224
#export VERSION=2.8.6
#export VERSIONDATE=20180406
####src/lcbio/connect.cc:52:63: error: expected ')' before 'PRIx64'
#export VERSION=2.8.7
#export VERSIONDATE=20180503
#export VERSION=2.9.0
#export VERSIONDATE=20180525
#export VERSION=2.9.1
#export VERSIONDATE=20180622
#export VERSION=2.9.2
#export VERSIONDATE=20180622
#export VERSION=2.9.3
#export VERSIONDATE=20180718
#export VERSION=2.9.4
#export VERSIONDATE=20180830
#export VERSION=2.9.5
#export VERSIONDATE=20180921
#export VERSION=2.10.0
#export VERSIONDATE=20181019
#export VERSION=2.10.2
#export VERSIONDATE=20181123
#export VERSION=2.10.3
#export VERSIONDATE=20181221
#export VERSION=2.10.4
#export VERSIONDATE=20190620
#export VERSION=2.10.5
#export VERSIONDATE=20191101
#export VERSION=2.10.6
#export VERSIONDATE=20200227
#export VERSION=2.10.7
#export VERSIONDATE=20200618
#export VERSION=2.10.8
#export VERSIONDATE=20200923
#export VERSION=2.10.9
#export VERSIONDATE=20210303
#export VERSION=3.0.0
#export VERSIONDATE=20200117
#export VERSION=3.0.1
#export VERSIONDATE=20200409
#export DEPENDENCIES=libevent,pthreads
#export OPTIONALDEPENDENCIES=libev,libuv
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=3.0.2
#export VERSIONDATE=20200610
#export VERSION=3.0.3
#export VERSIONDATE=20200727
#export VERSION=3.0.4
#export VERSIONDATE=20200826
#export VERSION=3.0.5
#export VERSIONDATE=20200921
#export VERSION=3.0.6
#export VERSIONDATE=20201021
#export VERSION=3.0.7
#export VERSIONDATE=20201216
#export VERSION=3.1.0
#export VERSIONDATE=20210303
#export VERSION=3.1.1
#export VERSIONDATE=20210410
#export VERSION=3.1.2
#export VERSIONDATE=20210427
#export VERSION=3.1.3
#export VERSIONDATE=20210511
#export VERSION=3.1.4
#export VERSIONDATE=20210604
#export VERSION=3.2.0
#export VERSIONDATE=20210720
#export VERSION=3.2.1
#export VERSIONDATE=20210821
#export VERSION=3.2.2
#export VERSIONDATE=20210923
#export VERSION=3.2.3
#export VERSIONDATE=20211020
#export VERSION=3.2.4
#export VERSIONDATE=20211126
#export VERSION=3.3.0
#export VERSIONDATE=20220511
#export VERSION=3.3.1
#export VERSIONDATE=20220526
#export VERSION=3.3.2
#export VERSIONDATE=20220830
#export VERSION=3.3.4
#export VERSIONDATE=20230209
#export VERSION=3.3.5
#export VERSIONDATE=20230310
#export VERSION=3.3.6
#export VERSIONDATE=20230427
#export VERSION=3.3.7
#export VERSIONDATE=20230512
#export VERSION=3.3.8
#export VERSIONDATE=20230817
#export VERSION=3.3.9
#export VERSIONDATE=20230923
#export VERSION=3.3.11
#export VERSIONDATE=20240126
#export VERSION=3.3.12
#export VERSIONDATE=20240303
#export VERSION=3.3.13
#export VERSIONDATE=20240924
#export VERSION=3.3.14
#export VERSIONDATE=20241113
export VERSION=3.3.15
export VERSIONDATE=20250312
wl-showstatus --package-version
export DEPENDENCIES=libevent,pthreads,openssl
export OPTIONALDEPENDENCIES=libev,libevent,libuv
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
#export DOWNLOADURL="http://www.couchbase.com/communities/c-client-library"
export DOWNLOADURL="https://github.com/couchbase/libcouchbase/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://packages.couchbase.com/clients/c/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/couchbase/libcouchbase/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix include/libcouchbase/visibility.h (version <= 2.5.4)
#patch -ulbf include/libcouchbase/visibility.h << EOF
#--- include/libcouchbase/visibility.h  2014-09-19 00:25:00 +0200
#+++ include/libcouchbase/visibility.h  2014-09-25 20:55:58 +0200
#@@ -28,5 +28,5 @@
# #define LIBCOUCHBASE_API __global
#-#elif defined(HAVE_VISIBILITY) && HAVE_VISIBILITY
#+#elif defined(HAVE_VISIBILITY) && HAVE_VISIBILITY && !defined(__MINGW32__)
# #define LIBCOUCHBASE_API __attribute__ ((visibility("default")))
#-#elif defined(_MSC_VER)
#+#elif defined(_MSC_VER) || defined(__MINGW32__)
# #define LIBCOUCHBASE_API extern __declspec(dllexport)
#@@ -38,3 +38,3 @@
#
#-#ifdef _MSC_VER
#+#if defined(_MSC_VER) || defined(__MINGW32__)
# #define LIBCOUCHBASE_API extern __declspec(dllimport)
#EOF
## fix missing sys/socket.h in plugins/io/libevent/plugin-libevent.c
#patch -ulbf plugins/io/libevent/plugin-libevent.c << EOF
#--- plugins/io/libevent/plugin-libevent.c  2014-07-09 23:45:22.000000000 +0200
#+++ plugins/io/libevent/plugin-libevent.c  2014-08-19 23:05:16.000000000 +0200
#@@ -29,3 +29,7 @@
# #include <sys/types.h>
#+#ifdef __MINGW32__
#+#include <winsock2.h>
#+#else
# #include <sys/socket.h>
#+#endif
# #include <libcouchbase/plugins/io/bsdio-inl.c>
#EOF
## fix src/mc/mcreq.c (version >= 2.5.6)
#patch -ulbf src/mc/mcreq.c << EOF
#--- src/mc/mcreq.c  2016-02-19 01:30:50 +0100
#+++ src/mc/mcreq.c  2016-02-19 10:29:30 +0100
#@@ -21,2 +21,3 @@
# #include "internal.h"
#+#define lcb_uint32_t uint32_t
#
#EOF
## fix missing files
#mkdir -p winfix/sys
#echo "#include <winsock2.h>" > winfix/sys/socket.h
## fix missing std::string in src/dns-srv.cc (version = 2.7.1)
#mv src/dns-srv.cc src/dns-srv.cc.bak &&
#echo "#include <string>" > src/dns-srv.cc &&
#cat src/dns-srv.cc.bak >> src/dns-srv.cc
## fix missing PDNS_RECORDA in src/dns-srv.cc (version >= 2.7.2 <= 3.3.13)
#patch -ulbf src/dns-srv.cc << EOF
#--- src/dns-srv.cc  2017-02-21 20:55:16 +0100
#+++ src/dns-srv.cc  2017-03-01 15:04:40 +0100
#@@ -5,4 +5,4 @@
#
#-#ifndef _WIN32
# #include <string>
#+#ifndef _WIN32
#
#@@ -90,3 +90,3 @@
#
#-#else
#+#elsifdef __MINGW64_VERSION_MAJOR
# #include <windns.h>
#EOF
## fix type error in src/cbft.cc (version >= 2.7.2 <= 3.3.13)
#patch -ulbf src/cbft.cc << EOF
#--- src/cbft.cc  2017-02-21 20:55:16 +0100
#+++ src/cbft.cc  2017-03-01 15:24:04 +0100
#@@ -158,3 +158,3 @@
#     } else {
#-        root["ctl"]["timeout"] = LCBT_SETTING(instance, n1ql_timeout) / 1000;
#+        root["ctl"]["timeout"] = (Json::UInt64)(LCBT_SETTING(instance, n1ql_timeout) / 1000);
#     }
#EOF
## fix conflicting types in conflicting types src/mc/mcreq.c (version >= 2.7.2 <= 3.3.13)
#mv src/mc/mcreq.c src/mc/mcreq.c.bak &&
#sed "s/lcb_uint32_t/uint32_t/g" src/mc/mcreq.c.bak > src/mc/mcreq.c
## fix missing strcasecmp in src/errmap.cc (version >= 2.7.6 <= 3.3.13)
#sed -i.bak -e "s/strcasecmp/stricmp/g" src/errmap.cc
## fix missing PRIx64 (version >= 2.8.5 <= 3.3.13)
#for F in $(grep -lrw PRIu64 .); do
# mv -f $F $F.bak &&
# echo "#define __STDC_FORMAT_MACROS" > $F
# echo "#include <inttypes.h>" >> $F
# cat $F.bak >> $F
#done
## fix src/logging.c.bak (version <= 3.3.13)
#patch -ulbf src/logging.c.bak << EOF
#@@ -29,3 +29,6 @@
#
#-#if defined(unix) || defined(__unix__) || defined(__unix) || defined(_POSIX_VERSION)
#+#if defined(__MINGW32__)
#+    #define GET_THREAD_ID() (uint32_t)GetCurrentThreadId()
#+    #define THREAD_ID_FMT PRIu32
#+#elif defined(unix) || defined(__unix__) || defined(__unix) || defined(_POSIX_VERSION)
#     #include <unistd.h>
#EOF
# fix contrib/HdrHistogram_c/src/hdr_endian.h (version >= 3.3.14)
patch -ulbf contrib/HdrHistogram_c/src/hdr_endian.h << EOF
@@ -75,5 +75,5 @@

-#              define htobe64(x) htonll(x)
+#               define htobe64(x) ((((uint64_t)htonl(x & 0xFFFFFFFFUL)) << 32) | htonl((uint64_t)(x >> 32)))
 #              define htole64(x) (x)
-#              define be64toh(x) ntohll(x)
+#               define be64toh(x) ((((uint64_t)ntohl(x & 0xFFFFFFFFUL)) << 32) | ntohl((uint64_t)(x >> 32)))
 #              define le64toh(x) (x)
EOF
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared CFLAGS="-I$(pwd)/winfix" CXXFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32 -lpthread" &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt
#mkdir -p build &&
# wl-showstatus configure &&
# cd build &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -Dbuild_LIBS:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DLCB_NO_TESTS:BOOL=OFF -DLCB_BUILD_LIBUV:BOOL=OFF -DLCB_NO_TESTS:BOOL=ON -DLCB_NO_TOOLS:BOOL=ON .. &&
# cd .. &&
# wl-showstatus build &&
# make -Cbuild install/strip &&
# cp -f build/lib/libcouchbaseS.a $INSTALLPREFIX/lib/ &&
# cp -f build/lib/libcouchbaseS.a $INSTALLPREFIX/lib/libcouchbase.a &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -Dbuild_LIBS:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DLCB_NO_TESTS:BOOL=OFF -DLCB_BUILD_LIBEV:BOOL=ON -DLCB_BUILD_LIBEVENT:BOOL=ON -DLCB_BUILD_LIBUV:BOOL=ON -DLCB_NO_SSL:BOOL=OFF -DLCB_NO_TOOLS:BOOL=ON -DLCB_BUILD_EXAMPLES:BOOL=OFF -DLCB_NO_TESTS:BOOL=ON -S. -Bbuild_win &&
 # remove invalid linker flags
 sed -i.bak -e "s/-lOPTIMIZED\|-lDEBUG//g" build_win/build.ninja &&
 # fix missing link libraries
 sed -i.bak2 -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -liphlpapi -luserenv -ldbghelp/" build_win/build.ninja &&
 wl-showstatus build &&
 ninja -Cbuild_win install/strip &&
 cp -f build_win/lib/libcouchbaseS.a $INSTALLPREFIX/lib/ &&
 cp -f build_win/lib/libcouchbaseS.a $INSTALLPREFIX/lib/libcouchbase.a &&
 ( cp -u build_win/lib/libcouchbase_*.a $INSTALLPREFIX/lib/ || true ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



