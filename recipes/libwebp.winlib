#export NAME="WebP"
#export STATUS=
#export URL=http://code.google.com/speed/webp/
#export BASENAME=libwebp
#export DESCRIPTION="WebP is a new image format that provides lossless and lossy compression for images on the web."
#export CATEGORY=graphics
#export TYPE=library
##export VERSION=0.1.3
##export VERSIONDATE=20111212
##export VERSION=0.1.99
##export VERSIONDATE=20120723
##export VERSION=0.2.0
##export VERSIONDATE=20120817
##export VERSION=0.2.1
##export VERSIONDATE=20121031
##export VERSION=0.3.0
##export VERSIONDATE=20130402
##export VERSION=0.3.1
##export VERSIONDATE=20130620
##export VERSION=0.4.0
##export VERSIONDATE=20131231
##export VERSION=0.4.4
##export VERSIONDATE=20151116
##export VERSION=0.5.0
##export VERSIONDATE=20151224
##export VERSION=0.5.1
##export VERSIONDATE=20160707
##export VERSION=0.5.2
##export VERSIONDATE=20161221
##wl-showstatus --package-version
##export DEPENDENCIES=libpng,libjpeg
##export VERSION=0.6.0
##export VERSIONDATE=20170131
##export VERSION=0.6.1
##export VERSIONDATE=20171129
##export VERSION=1.0.0
##export VERSIONDATE=20180421
##export VERSION=1.0.1
##export VERSIONDATE=20181117
##export VERSION=1.0.2
##export VERSIONDATE=20190120
##export VERSION=1.0.3
##export VERSIONDATE=20190713
##export VERSION=1.1.0
##export VERSIONDATE=20200107
#export VERSION=1.2.0
#export VERSIONDATE=20210130
#wl-showstatus --package-version
#export DEPENDENCIES=libpng,libjpeg,libtiff,giflib,sdl
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
##export DOWNLOADURL="http://code.google.com/p/webp/downloads/list"
##export DOWNLOADURL="https://chromium.googlesource.com/webm/libwebp/"
#export DOWNLOADURL="http://downloads.webmproject.org/releases/webp/index.html"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://webp.googlecode.com/files/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://downloads.webmproject.org/releases/webp/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
## skip making examples
#cat > examples/Makefile.in << EOF
#clean:
#all:
#install:
#install-strip:
#EOF
#cp -f examples/Makefile.in examples/Makefile.am
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
## fix undefined reference to WinMain (version >= 0.6.1)
#sed -i.bak -e "s/\$(LINK)/& -mconsole -Wl,--as-needed -lmingw32 -lSDLmain/" extras/Makefile.in
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-threading --enable-gl --enable-png --enable-jpeg --enable-tiff --enable-gif --enable-wic --enable-libwebpmux --enable-libwebpdemux --enable-libwebpdecoder --enable-libwebpextras LDFLAGS="-Wl,-no-undefined" &&
# wl-showstatus build-install &&
# # fix building DLLs
# sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# ( make install-strip || make -j1 install-strip ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="WebP"
export STATUS=
export URL=http://code.google.com/speed/webp/
export BASENAME=libwebp
export DESCRIPTION="WebP is a new image format that provides lossless and lossy compression for images on the web."
export CATEGORY=graphics
export TYPE=library
#export VERSION=1.2.0
#export VERSIONDATE=20210130
#export VERSION=1.2.1
#export VERSIONDATE=20210814
#export VERSION=1.2.2
#export VERSIONDATE=20220120
#export VERSION=1.2.3
#export VERSIONDATE=20220716
#export DEPENDENCIES=libjpeg,giflib,libpng,libtiff,sdl
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
export VERSION=1.2.4
export VERSIONDATE=20220806
wl-showstatus --package-version
export DEPENDENCIES=libjpeg,giflib,libpng,libtiff,sdl,freeglut
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://code.google.com/p/webp/downloads/list"
#export DOWNLOADURL="https://chromium.googlesource.com/webm/libwebp/"
export DOWNLOADURL="http://downloads.webmproject.org/releases/webp/index.html"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://webp.googlecode.com/files/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://downloads.webmproject.org/releases/webp/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# use uint32_t instead of uint32 in imageio/tiffdec.c (version >= 1.2.1)
patch -ulbf imageio/tiffdec.c << EOF
@@ -19,2 +19,3 @@
 #include <stdio.h>
+#include <stdint.h>
 #include <string.h>
@@ -48,3 +49,3 @@
     void* tag_data;
-    uint32 tag_data_len;
+    uint32_t tag_data_len;

@@ -232,3 +233,3 @@

-  raster = (uint32*)_TIFFmalloc((tsize_t)alloc_size);
+  raster = (uint32_t*)_TIFFmalloc((tsize_t)alloc_size);
   if (raster != NULL) {
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 # add linker flag (version >= 1.2.4)
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lfreeglut/" build_static/build.ninja &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 # add linker flag (version >= 1.2.4)
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lfreeglut/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



