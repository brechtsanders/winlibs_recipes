export NAME="paping"
export STATUS=
#export URL=https://github.com/leggiero/paping
export URL=https://code.google.com/archive/p/paping/
export BASENAME=paping
export DESCRIPTION="Cross-platform TCP port testing, emulating the functionality of ping (port ping)"
export CATEGORY=communication
export TYPE=application
export VERSION=1.5.5
export VERSIONDATE=20180130
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/leggiero/paping/releases"
export DOWNLOADURL="https://code.google.com/archive/p/paping/downloads"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/leggiero/paping/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/paping/paping_$VERSION\_source.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
mkdir -p $BASENAME-$VERSION
tar xfz $TARBALLDIR/$BASENAME/paping_$VERSION\_source.tar.gz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION
# fix src/standard.h
patch -ulbf src/standard.h << EOF
@@ -12,3 +12,3 @@

-#ifdef WIN32
+#if defined(WIN32) && !defined(__MINGW32__)
        #define close   closesocket
EOF
wl-showstatus build &&
 for F in src/*.cpp; do
  echo CXX $F
  g++ -c -o $F.o $F
 done &&
 g++ -s -o paping.exe src/*.o -lws2_32 &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin &&
 cp -f *.exe $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



