export NAME="zix"
export STATUS=
export URL=https://gitlab.com/drobilla/zix
export BASENAME=zix
export DESCRIPTION="A lightweight C99 portability and data structure library"
export CATEGORY=development,portability
export TYPE=library
#export VERSION=main
#export VERSIONDATE=20220106
#export VERSION=0.4.0
#export VERSIONDATE=20230824
#export VERSION=0.4.2
#export VERSIONDATE=20231023
export VERSION=0.6.2
export VERSIONDATE=20250119
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=ISC
#export DOWNLOADURL="https://github.com/drobilla/zix/tags"
export DOWNLOADURL="https://gitlab.com/drobilla/zix/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/drobilla/zix/archive/refs/heads/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://gitlab.com/drobilla/zix/-/archive/v$VERSION/$BASENAME-v$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-v$VERSION.tar.bz2
cd $BASENAME-v$VERSION
## fix meson/library/meson.build
#patch -ulbf meson/library/meson.build << EOF
#@@ -19,3 +19,3 @@
# if host_system == 'windows' and default_library == 'both'
#-  error('default_library=both is not supported on Windows')
#+  warning('default_library=both is not supported on Windows')
# endif
#EOF
# fix meson.build (version >= 0.4.0)
patch -ulbf meson.build << EOF
@@ -152,3 +152,3 @@
   if get_option('default_library') == 'both'
-    error('default_library=both is not supported on Windows')
+    warning('default_library=both is not supported on Windows')
   endif
EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Ddocs=disabled -Dbenchmarks=disabled -Dtests=disabled -Dtests_cpp=disabled . build_both &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Ddocs=disabled -Dbenchmarks=disabled -Dtests=disabled -Dtests_cpp=disabled . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-v$VERSION



