export NAME="LibOVR"
export STATUS=
#export URL=https://developer.oculus.com/documentation/pcsdk/latest/concepts/dg-libovr/
export URL=https://github.com/opentrack/LibOVR
export BASENAME=libovr
export DESCRIPTION="Oculus SDK"
export CATEGORY=graphics,hardware
export TYPE=library
export VERSION=0.8.0
export VERSIONDATE=20191205
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=
#export DOWNLOADURL="https://github.com/opentrack/LibOVR/releases"
export DOWNLOADURL="https://github.com/opentrack/LibOVR/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/opentrack/LibOVR/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/opentrack/LibOVR/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# also build shared DLL
sed -i.bak -e "s/^\(\s*\)\(add_library *( *\)\([^ ]*\) *STATIC\(.*\)$/\1\2\3 STATIC\4\n\1\2\3_shared SHARED\4\n\1set_target_properties(\3_shared PROPERTIES OUTPUT_NAME \3)/" CMakeLists.txt
wl-showstatus configure &&
cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
 echo "-Wl,--as-needed -lopengl32 -lwinmm -lversion -lpsapi -lshlwapi" >> CMakeFiles/LibOVR_shared.dir/linklibs.rsp &&
 wl-showstatus build &&
 make &&
 strip *.dll &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -rf Include/* $INSTALLPREFIX/include/ &&
 cp -f *.a $INSTALLPREFIX/lib/ &&
 cp -f *.dll $INSTALLPREFIX/bin/ &&
 #wl-showstatus build-install &&
 #make install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



