export NAME="libclangmm"
export STATUS=
export URL=https://gitlab.com/cppit/libclangmm
export BASENAME=libclangmm
export DESCRIPTION="an easy-to-use C++ wrapper for libclang"
export CATEGORY=development
export TYPE=library
export VERSION=0.9.6
export VERSIONDATE=20161127
wl-showstatus --package-version
export DEPENDENCIES=llvm-project
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://gitlab.com/cppit/libclangmm/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://gitlab.com/cppit/libclangmm/-/archive/v$VERSION/libclangmm-v$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/libclangmm-v$VERSION.tar.bz2
cd libclangmm-v$VERSION
# fix undefined std::invalid_argument in src/CodeCompleteResults.cc (version >= 0.9.6)
patch -ulbf src/CodeCompleteResults.cc << EOF
@@ -3,2 +3,3 @@
 #include <exception>
+#include <stdexcept>
 #include "Utility.h"
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLIBCLANG_INCLUDE_DIR:PATH=$MINGWPREFIX/share/llvm/include -DLIBCLANG_LIBRARY:FILEPATH=$MINGWPREFIX/share/llvm/lib/libclang.dll.a -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 mkdir -p $INSTALLPREFIX/lib &&
 cp -u build_win/lib/*.a $INSTALLPREFIX/lib/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libclangmm-v$VERSION



