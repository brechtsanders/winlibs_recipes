export NAME="mpack/munpack"
export STATUS=
#export URL=http://ftp.andrew.cmu.edu/pub/mpack/
#export URL=https://github.com/league/mpack
export URL=https://sourceforge.net/projects/mpack-win/
export BASENAME=mpack
export DESCRIPTION="Mpack and munpack are utilities for encoding and decoding (respectively) binary files in MIME (Multipurpose Internet Mail Extensions) format mail messages."
export CATEGORY=fileformat
export TYPE=application
#export VERSION=1.6
#export VERSIONDATE=
export VERSION=1.7
export VERSIONDATE=20200409
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
#export DOWNLOADURL="http://ftp.andrew.cmu.edu/pub/mpack/"
export DOWNLOADURL="https://sourceforge.net/projects/mpack-win/files/ mpack -src.zip"
#export DOWNLOADURL="https://github.com/league/mpack/releases mpack -src.zip"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://wwwcvs.mitgcm.org/viewvc/MITgcm/MITgcm_contrib/mpack_src/mpack_1.6.orig.tar.gz?revision=1.1&view=co
#export DOWNLOADSOURCEURL=http://ftp.andrew.cmu.edu/pub/mpack/mpack-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/mpack-win/mpack$(echo $VERSION|sed -e "s/\.//g")-src.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/mpack-$VERSION.tar.gz
mkdir -p $BASENAME-$VERSION
unzip -oq $TARBALLDIR/$BASENAME/mpack$(echo $VERSION|sed -e "s/\.//g")-src.zip -d$BASENAME-$VERSION
cd $BASENAME-$VERSION
#cat > netdb.h << EOF
##include <io.h>
##include <winsock.h>
#EOF
#sed -i.bak -e "s?\(extern char \*malloc();\)?//\1?; s?\(mkdir *([^,]*\), *\([^)]*\))?___\1 /*\2*/)?" unixos.c
#wl-showstatus configure &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-lws2_32" &&
# wl-showstatus build-install &&
# make install &&
#    echo OK
#### undefined reference to `fork'
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION
# fix uudecode.c (version >= 1.7)
patch -ulbf uudecode.c << EOF
@@ -665,2 +665,4 @@

+void uudecodeline(char *line, FILE *outfile);
+
 /*
@@ -842,3 +844,3 @@
  */
-uudecodeline(line, outfile)
+void uudecodeline(line, outfile)
 char *line;
EOF
wl-showstatus build &&
 #make -fMakefile.win clean &&
 #make -fMakefile.win CC=${CC:-gcc} &&
 #strip *.exe &&
 rm -f *.o &&
 for F in *.c; do
  echo CC $F
  ${CC:-gcc} -c -o $(echo $F|sed -e "s/\.c$//").o $F -O3 || break
 done &&
 ${CC:-gcc} -s -o mpack.exe dospk.o encode.o dosos.o md5c.o magic.o string.o codes.o &&
 ${CC:-gcc} -s -o munpack.exe dosunpk.o decode.o dosos.o md5c.o part.o string.o uudecode.o codes.o &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin &&
 cp -f *.exe $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



