#export URL=http://sourceware.org/pthreads-win32/
#export BASENAME=pthreads
#export DESCRIPTION='The POSIX 1003.1-2001 standard defines an application programming interface (API) for writing multithreaded applications. This interface is known more commonly as pthreads. Win32 does not, and is unlikely to ever, support pthreads natively. This project seeks to provide a freely available and high-quality solution to this problem.'
#export CATEGORY=system
#export TYPE=library
#export VERSION=2.8.0
#export VERSIONDATE=2006-12-22
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING.LIB
#export LICENSETYPE=LGPL
#export DOWNLOADURL="http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/ pthreads-w32- -release.tar.gz"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#wl-wait4deps
#mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/bin $INSTALLPREFIX/lib
#wl-download -v -d $INSTALLPREFIX http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/prebuilt-dll-`echo $VERSION|sed -e s/\\\./-/g`-release/COPYING.LIB
#wl-download -v -d $INSTALLPREFIX/include http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/prebuilt-dll-`echo $VERSION|sed -e s/\\\./-/g`-release/include/pthread.h
#wl-download -v -d $INSTALLPREFIX/include http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/prebuilt-dll-`echo $VERSION|sed -e s/\\\./-/g`-release/include/sched.h
#wl-download -v -d $INSTALLPREFIX/include http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/prebuilt-dll-`echo $VERSION|sed -e s/\\\./-/g`-release/include/semaphore.h
#wl-download -v -d $INSTALLPREFIX/lib http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/prebuilt-dll-`echo $VERSION|sed -e s/\\\./-/g`-release/lib/libpthreadGC2.a
#wl-download -v -d $INSTALLPREFIX/bin http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/prebuilt-dll-`echo $VERSION|sed -e s/\\\./-/g`-release/lib/pthreadGC2.dll
#wl-download -v -d $INSTALLPREFIX/lib http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/prebuilt-dll-`echo $VERSION|sed -e s/\\\./-/g`-release/lib/libpthreadGCE2.a
#wl-download -v -d $INSTALLPREFIX/bin http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/prebuilt-dll-`echo $VERSION|sed -e s/\\\./-/g`-release/lib/pthreadGCE2.dll
#cp $INSTALLPREFIX/lib/libpthreadGC2.a $INSTALLPREFIX/lib/libpthread.a
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION



export NAME="pthreads"
export STATUS=
export URL=http://sourceware.org/pthreads-win32/
#export URL=https://sourceforge.net/projects/pthreads4w/
export BASENAME=pthreads
export DESCRIPTION="The POSIX 1003.1-2001 standard defines an application programming interface (API) for writing multithreaded applications. This interface is known more commonly as pthreads. Win32 does not, and is unlikely to ever, support pthreads natively. This project seeks to provide a freely available and high-quality solution to this problem."
export CATEGORY=system
export TYPE=library
#export VERSION=2.8.0
#export VERSIONDATE=20061222
export VERSION=2.9.1
export VERSIONDATE=20120607
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/ pthreads-w32- -release.tar.gz"
export DOWNLOADURL="http://ftp.gwdg.de/pub/linux/sources.redhat.com/pthreads-win32/ pthreads-w32- -release.tar.gz"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=ftp://sourceware.org/pub/pthreads-win32/pthreads-w32-`echo $VERSION|sed -e s/\\\./-/g`-release.tar.gz
export DOWNLOADSOURCEURL=http://gd.tuwien.ac.at/gnu/sourceware/pthreads-win32/pthreads-w32-`echo $VERSION|sed -e s/\\\./-/g`-release.tar.gz
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/mingw/MinGW/pthreads-w32/pthreads-w32-2.9.0-pre-20110507-2/pthreads-w32-2.9.0-mingw32-pre-20110507-2-src.tar.lzma
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/pthreads-w32-`echo $VERSION|sed -e s/\\\./-/g`-release.tar.gz
#lzma -df $TARBALLDIR/$BASENAME/pthreads-w32-2.9.0-mingw32-pre-20110507-2-src.tar.lzma
cd pthreads-w32-$(echo $VERSION|sed -e s/\\\./-/g)-release
## fix pthread.h (version <= 2.8.0)
#patch -ulbf << EOF
#--- pthread.h  2006-01-24 14:59:58 +0100
#+++ pthread.h  2011-08-08 16:20:04 +0200
#@@ -212,7 +212,21 @@
#
# #if HAVE_CONFIG_H
#-#include "config.h"
#+#include "config.h" /*TO_BE_REMOVED*/
# #endif /* HAVE_CONFIG_H */
#
#+#ifdef __MINGW32__
#+# include <_mingw.h>
#+#endif
#+
#+#ifdef __MINGW64_VERSION_MAJOR
#+/* MinGW-w64 already has struct timespec */
#+#  define HAVE_STRUCT_TIMESPEC 1
#+/* define _POSIX for time.h *time_r macros */
#+#  ifndef _POSIX
#+#    define _POSIX 1
#+#  endif
#+#include <time.h>
#+#endif  /* MinGW-w64 */
#+
# #ifndef NEED_FTIME
# #include <time.h>
#@@ -1238,23 +1252,32 @@
# #endif /* !__MINGW32__ */
#
#+#if !defined(asctime_r)
# #define asctime_r( _tm, _buf ) \\
#         ( strcpy( (_buf), asctime( (_tm) ) ), \\
#           (_buf) )
#+#endif /* !asctime_r */
#
#+#if !defined(ctime_r)
# #define ctime_r( _clock, _buf ) \\
#         ( strcpy( (_buf), ctime( (_clock) ) ),  \\
#           (_buf) )
#+#endif /* !ctime_r */
#
#+#if !defined(gmtime_r)
# #define gmtime_r( _clock, _result ) \\
#         ( *(_result) = *gmtime( (_clock) ), \\
#           (_result) )
#+#endif /* !gmtime_r */
#
#+#if !defined(localtime_r)
# #define localtime_r( _clock, _result ) \\
#         ( *(_result) = *localtime( (_clock) ), \\
#           (_result) )
#+#endif /* !localtime_r */
#
#+#if !defined(rand_r)
# #define rand_r( _seed ) \\
#         ( _seed == _seed? rand() : rand() )
#-
#+#endif /* !rand_r */
#
# /*
#EOF
## fix pthread_cancel.c (version <= 2.8.0)
#patch -ulbf << EOF
#--- pthread_cancel.c
#+++ pthread_cancel.c  2011-08-08 16:23:58 +0200
#@@ -74,7 +74,7 @@
# }
#
# static void CALLBACK
#-ptw32_cancel_callback (DWORD unused)
#+ptw32_cancel_callback (ULONG_PTR unused)
# {
#   ptw32_throw (PTW32_EPS_CANCEL);
#
#@@ -192,7 +192,7 @@
#               * this will result in a call to ptw32_RegisterCancelation and only
#               * the threadH arg will be used.
#               */
#-             ptw32_register_cancelation (ptw32_cancel_callback, threadH, 0);
#+              ptw32_register_cancelation ((PAPCFUNC)ptw32_cancel_callback, threadH, 0);
#              (void) pthread_mutex_unlock (&tp->cancelLock);
#              ResumeThread (threadH);
#            }
#EOF
# fix redefinition of struct timespec in pthread.h
patch -ulbf pthread.h << EOF
--- pthread.h  2012-05-27 06:16:45 +0200
+++ pthread.h  2015-03-13 00:14:18 +0100
@@ -317,4 +317,5 @@
 #define HAVE_STRUCT_TIMESPEC
-#if !defined(_TIMESPEC_DEFINED)
+#if !defined(_TIMESPEC_DEFINED) && !defined(__struct_timespec_defined)
 #define _TIMESPEC_DEFINED
+#define __struct_timespec_defined 1
 struct timespec {
EOF
 fix DllMain in dll.c on 64-bit (version >= 2.8.0)
if ( echo $RUNPLATFORM | grep -q x86_64 ); then
patch -ulbf dll.c << EOF
--- dll.c  2011-10-21 22:37:46 +0200
+++ dll.c  2011-10-21 22:38:04 +0200
@@ -55,3 +55,3 @@
 #endif                         /* __cplusplus */
-  BOOL WINAPI
+__declspec(dllexport) BOOL WINAPI
 DllMain (HINSTANCE hinstDll, DWORD fdwReason, LPVOID lpvReserved)
EOF
fi
##if ( echo $RUNPLATFORM | grep -qv x86_64 ); then
## # fix for undefined reference to `_imp__ (32-bit)
## mv GNUmakefile GNUmakefile.bak
## sed -e "s/\(($RUNPLATFORM-dlltool) *\)-k/\1-U/" GNUmakefile.bak > GNUmakefile
##fi
if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # fix for undefined reference to `__imp_ (64-bit)
 mv GNUmakefile GNUmakefile.bak
 sed -e "s/\(\$(DLLTOOL)\) \(-z\)/\1 --export-all-symbols \2/" GNUmakefile.bak > GNUmakefile
fi
# create libpthread.la manually
cat > libpthread.la << EOF
# -lpthread - a libtool library file
# Generated by hand - GNU libtool 0.0.0
dlname='pthreadGC2.dll'
library_names='libpthreadGC2.a'
old_library='libpthread.a'
dependency_libs=''
current=0
age=0
revision=1
installed=yes
shouldnotlink=no
dlopen=''
dlpreopen=''
libdir='$INSTALLPREFIX/lib'
EOF
if ( gcc --version | grep -q posix ); then
 echo "Not building, already part of this MinGW-W64"
 rm -rf pthreads-w32-$(echo $VERSION|sed -e s/\\\./-/g)-release
 export VERSION=builtin
 mkdir -p $INSTALLPREFIX
else
 wl-showstatus build &&
 #make clean && make -j1 GC
 # build and fix to remove include of config.h
 make clean &&
 ( make -j1 GC-static || make -j1 GC-static LFLAGS="-lws2_32" ) &&
 wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/bin $INSTALLPREFIX/lib &&
 #cp pthreadGC2.dll $INSTALLPREFIX/bin/pthread.dll &&
 #cp pthread.def $INSTALLPREFIX/lib/ &&
 cp libpthreadGC2.a $INSTALLPREFIX/lib/libpthread.a &&
 make clean &&
 #( make -j1 GC-inlined || make -j1 GC-inlined LFLAGS="-lws2_32" ) &&
 ( make -j1 GC || make -j1 GC LFLAGS="-lws2_32" ) &&
 cp -f libpthread.la $INSTALLPREFIX/lib/ &&
 cp -f pthreadGC2.dll $INSTALLPREFIX/bin/ &&
 cp -f libpthreadGC2.a $INSTALLPREFIX/lib/ &&
 cp -f libpthreadGC2.a $INSTALLPREFIX/lib/libpthread.dll.a &&
 cp -f pthread.h sched.h semaphore.h $INSTALLPREFIX/include
 ## fix pthread.h (version <= 2.8.0)
 #grep -v "TO_BE_REMOVED" pthread.h > $INSTALLPREFIX/include/pthread.h
fi &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf pthreads-w32-$(echo $VERSION|sed -e s/\\\./-/g)-release
####For 64-bit see: http://sourceforge.net/apps/trac/mingw-w64/wiki/Compile%20pthreads
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/mingw-w64/External%20binary%20packages%20%28Win64%20hosted%29/pthreads/pthreads-w64sup.patch
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#patch -ulbf -p1 < $TARBALLDIR/$BASENAME/pthreads-w64sup.patch
#mv GNUmakefile GNUmakefile.bak
#sed -e "s/-O3 -finline-functions//" GNUmakefile.bak > GNUmakefile
####The procedure entry point DllMain could not be located in the dynamic link library pthreadGC2.dll
# fftw-wisdom || echo $?
# xz --help || echo $?
# xgettext.exe --version || echo $?
# xsltproc.exe --version || echo $?
####gdb: During startup program exited with code 0xc0000139.
#; s/^\(OPT.=.*\)/\1 -malign-functions=4 -mpreferred-stack-boundary=4 -mstackrealign/ -> did not fix error: The procedure entry point DllMain could not be located in the dynamic link library pthreadGC2.dll (e.g. in xgettext.exe --version)
#BOOL WINAPI DllMain (HINSTANCE hinstDll, DWORD fdwReason, LPVOID lpvReserved) __attribute__((force_align_arg_pointer));
#http://mingw.cwilson.fastmail.fm/pthreads-w32-2.9.0-mingw32-pre-20110507-2-src.tar.lzma
#export DOWNLOADSOURCEURL=http://mingw.cwilson.fastmail.fm/pthreads-w32-2.9.0-mingw32-pre-20110507-2-src.tar.lzma
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#tar xfav $TARBALLDIR/$BASENAME/pthreads-w32-2.9.0-mingw32-pre-20110507-2-src.tar.lzma
####See also: https://github.com/ldx/winpthreads
####See also: https://sourceforge.net/projects/pthreads4w/



