export NAME="libjson-rpc-cpp"
export STATUS=
export URL=http://cinemast.github.io/libjson-rpc-cpp/
export BASENAME=libjson-rpc-cpp
export DESCRIPTION="This C++ library provides a json-rpc (remote procedure call) framework for Linux and MacOS (or any other UNIX derivate). It is fully JSON-RPC 2.0 compatible (JSON-RPC 2.0) and provides additional features, such as generic authentication mechanisms."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.0.0
#export VERSIONDATE=20171106
#export VERSION=1.1.0
#export VERSIONDATE=20180105
#export VERSION=1.1.1
#export VERSIONDATE=20181101
#export VERSION=1.2.0
#export VERSIONDATE=20190329
#export VERSION=1.3.0
#export VERSIONDATE=20200114
#export VERSION=1.4.0
#export VERSIONDATE=20211024
export VERSION=1.4.1
export VERSIONDATE=20211126
####src/stubgenerator/stubgeneratorfactory.h:21:156: error: declaration of '__iob_func' as array of references
wl-showstatus --package-version
export DEPENDANCIES=pthreads,jsoncpp,boost,libmicrohttpd,libcurl,argtable2
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/cinemast/libjson-rpc-cpp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/cinemast/libjson-rpc-cpp/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing directory
mkdir -p win32-deps/include
#wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=YES -DBUILD_STATIC_LIBS:BOOL=YES -DHUNTER_ENABLED:BOOL=NO -DREDIS_CLIENT:BOOL=NO -DREDIS_SERVER:BOOL=NO -DCOMPILE_STUBGEN:BOOL=NO -DCOMPILE_TESTS:BOOL=NO -DCOMPILE_EXAMPLES:BOOL=NO . &&
# # fix missing htons/htonl (version >= 1.2.0)
# echo "-Wl,--as-needed -lws2_32" >> src/jsonrpccpp/CMakeFiles/jsonrpcserver.dir/linklibs.rsp &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=YES -DBUILD_STATIC_LIBS:BOOL=YES -DHUNTER_ENABLED:BOOL=NO -DREDIS_CLIENT:BOOL=NO -DREDIS_SERVER:BOOL=NO -DCOMPILE_STUBGEN:BOOL=NO -DCOMPILE_TESTS:BOOL=NO -DCOMPILE_EXAMPLES:BOOL=NO -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_win &&
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lws2_32/" build_win/build.ninja &&
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lws2_32 -lcurl/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



