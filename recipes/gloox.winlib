export NAME="gloox"
export STATUS=
export URL=http://camaya.net/gloox/
export BASENAME=gloox
export DESCRIPTION="gloox is a rock-solid, full-featured Jabber/XMPP client library, written in clean ANSI C++. It makes writing spec-compliant clients easy and allows for hassle-free integration of Jabber/XMPP functionality into existing applications."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.0.9
#export VERSIONDATE=20140329
#export VERSION=1.0.10
#export VERSIONDATE=20140409
#export VERSION=1.0.11
#export VERSIONDATE=20140913
#export VERSION=1.0.12
#export VERSIONDATE=20141113
#export VERSION=1.0.13
#export VERSIONDATE=20150202
#export VERSION=1.0.14
#export VERSIONDATE=20150812
#export VERSION=1.0.15
#export VERSIONDATE=20160424
#export VERSION=1.0.16
#export VERSIONDATE=20160717
#export VERSION=1.0.17
#export VERSIONDATE=20160824
#export VERSION=1.0.18
#export VERSIONDATE=20161111
#export VERSION=1.0.19
#export VERSIONDATE=20170222
#export VERSION=1.0.20
#export VERSIONDATE=20170227
#export VERSION=1.0.21
#export VERSIONDATE=20180612
#export VERSION=1.0.22
#export VERSIONDATE=20190104
#export VERSION=1.0.23
#export VERSIONDATE=20191209
export VERSION=1.0.24
export VERSIONDATE=20200715
####src/connectiontcpclient.cpp:141:69: error: too few arguments to function 'int recv(SOCKET, char*, int, int)'
wl-showstatus --package-version
export DEPENDENCIES=gnutls,libidn,zlib
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPLv3
export DOWNLOADURL="http://camaya.net/gloox/download/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://camaya.net/download/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
## fix missing ctime in src/examples/ft_recv.cpp
#mv src/examples/ft_recv.cpp src/examples/ft_recv.cpp.bak
#echo "#include <ctime>" > src/examples/ft_recv.cpp
#cat src/examples/ft_recv.cpp.bak >> src/examples/ft_recv.cpp
## fix missing ctime in src/examples/ft_send.cpp
#mv src/examples/ft_send.cpp src/examples/ft_send.cpp.bak
#echo "#include <ctime>" > src/examples/ft_send.cpp
#cat src/examples/ft_send.cpp.bak >> src/examples/ft_send.cpp
# fix missing struct addrinfo src/dns.h (version >= 1.0.15)
mv src/dns.h src/dns.h.bak
cat > src/dns.h << EOF
#undef _WIN32_WINNT
#define _WIN32_WINNT 0x0501
#include <ws2tcpip.h>
EOF
cat src/dns.h.bak >> src/dns.h
# fix struct sockaddr_storage issue in src/connectiontcpserver.cpp (version >= 1.0.15)
mv src/connectiontcpserver.cpp src/connectiontcpserver.cpp.bak &&
sed -e "s/sockaddr_storage/sockaddr/g" src/connectiontcpserver.cpp.bak > src/connectiontcpserver.cpp
# fix missing getnameinfo in src/connectiontcpbase.cpp (version >= 1.0.20)
mv src/connectiontcpbase.cpp src/connectiontcpbase.cpp.bak &&
echo '#include "dns.h"' > src/connectiontcpbase.cpp &&
cat src/connectiontcpbase.cpp.bak >> src/connectiontcpbase.cpp
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-tests --without-examples LDFLAGS="-Wl,--as-needed -lsecur32 -lcrypt32" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-tests --without-examples LDFLAGS="-Wl,--as-needed -lws2_32 -lsecur32 -lcrypt32" &&
 wl-showstatus build-install &&
 make install-strip &&
 # fix absolute paths in gloox-config
 mv -f $INSTALLPREFIX/bin/gloox-config $INSTALLPREFIX/bin/gloox-config.bak &&
 sed -e "s?$INSTALLPREFIX?\$(dirname \$0)/..?g" $INSTALLPREFIX/bin/gloox-config.bak > $INSTALLPREFIX/bin/gloox-config &&
 rm -f $INSTALLPREFIX/bin/gloox-config.bak &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####To do: fix building DLL (version >= 1.0.17)
####*** Warning: linker path does not have real file for library -lws_32.



