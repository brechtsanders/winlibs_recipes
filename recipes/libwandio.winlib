export NAME="libwandio"
export STATUS=
#export URL=https://research.wand.net.nz/software/libwandio.php
export URL=https://github.com/LibtraceTeam/wandio
export BASENAME=libwandio
export DESCRIPTION="Libwandio is a software library written in C that provides an API for transparently reading from and writing to files using a variety of supported compression methods. Provided pthreads are available, I/O performance will be improved by doing any compression and/or decompression using a separate thread."
export CATEGORY=
export TYPE=library
#export VERSION=4.2.2
#export VERSIONDATE=20191118
#export VERSION=4.2.3
#export VERSIONDATE=20201029
export VERSION=4.2.6-1
export VERSIONDATE=20240914
wl-showstatus --package-version
export DEPENDENCIES=zlib,libbz2,lzo,xz,zstd,libcurl
export OPTIONALDEPENDENCIES=qatzip
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
export LICENSEFILE=COPYING.LESSER
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://research.wand.net.nz/software/libwandio.php wandio-"
export DOWNLOADURL="https://github.com/LibtraceTeam/wandio/releases wandio-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://research.wand.net.nz/software/wandio/wandio-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/LibtraceTeam/wandio/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/wandio-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd wandio-$VERSION
# fix missing files
mkdir -p winfix/sys winfix/arpa
touch winfix/sys/uio.h winfix/err.h
echo "#include <winsock2.h>" > winfix/arpa/inet.h
# fix missing sigset_t in lib/ior-thread.c (version >= 4.2.3)
patch -ulbf lib/ior-thread.c << EOF
@@ -182,3 +182,5 @@
         io_t *state;
+#ifndef _WIN32
         sigset_t set;
+#endif
         int s;
@@ -190,3 +192,5 @@

+#ifndef _WIN32
         sigfillset(&set);
+#endif
         state = malloc(sizeof(io_t));
@@ -227,2 +231,3 @@
         pthread_create(&DATA(state)->producer, NULL, thread_producer, state);
+#ifndef _WIN32
         sigemptyset(&set);
@@ -232,2 +237,3 @@
         }
+#endif

EOF
# fix lib/iow-stdio.c (version >= 4.2.3)
# warning: this propbably breaks stuff as stdio_wwrite() always returns -1
patch -ulbf lib/iow-stdio.c << EOF
@@ -56,4 +56,6 @@
         int fd = -1;
+#ifndef _WIN32
         uid_t userid = 0;
         gid_t groupid = 0;
+#endif
         char *sudoenv = NULL;
@@ -79,2 +81,3 @@
          * TODO: make this some sort of config option */
+#ifndef _WIN32
         if (getuid() == 0) {
@@ -94,2 +97,3 @@
         }
+#endif

@@ -132,2 +136,5 @@
 static int64_t stdio_wwrite(iow_t *iow, const char *buffer, int64_t len) {
+#ifdef _WIN32
+        return -1;
+#else
         int towrite = len;
@@ -197,2 +204,3 @@
         return len;
+#endif
 }
EOF
# fix lib/iow-lzo.c (version >= 4.2.3)
patch -ulbf lib/iow-lzo.c << EOF
@@ -128,3 +128,5 @@
 #define DATA(iow) ((struct lzow_t *)((iow)->data))
+#ifndef min
 #define min(a, b) ((a) < (b) ? (a) : (b))
+#endif

@@ -344,4 +346,11 @@
         if (use_threads > 0) {
+#ifdef _WIN32
+                SYSTEM_INFO sysinfo;
+                GetSystemInfo(&sysinfo);
+                DATA(iow)->threads =
+                    min((uint32_t)sysinfo.dwProcessorType, use_threads);
+#else
                 DATA(iow)->threads =
                     min((uint32_t)sysconf(_SC_NPROCESSORS_ONLN), use_threads);
+#endif
                 DATA(iow)->thread =
EOF
# avoid missing gettimeofday() in lib/ior-http.c (version >= 4.2.6-1)
patch -ulbf lib/ior-http.c << EOF
@@ -212,3 +212,2 @@
           if (m != NULL && m->data.result != CURLE_OK) {
-            struct timeval tv;
             if (loghttpservererrors == 0) {
@@ -223,6 +222,5 @@
             }
-            gettimeofday(&tv, NULL);
             // there was an error reading -- if this is the first
             // read, then the wandio_create call will fail.
-            fprintf(stderr, "%u HTTP ERROR: %s (%d)\\n", tv.tv_sec,
+            fprintf(stderr, "HTTP ERROR: %s (%d)\\n",
                     curl_easy_strerror(m->data.result),
EOF
## fix issue with BZ2_bzDecompressInit() (version <= 4.2.3)
#sed -i.bak -e "s/char BZ2_bzDecompressInit ();/#include <bzlib.h>/" configure
wl-showstatus preconfigure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf wandio-$VERSION



