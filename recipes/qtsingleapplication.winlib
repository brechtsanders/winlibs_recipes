export NAME="QtSingleApplication"
export STATUS=
export URL=https://github.com/itay-grudev/SingleApplication
export BASENAME=qtsingleapplication
export DESCRIPTION="Replacement of QtSingleApplication for Qt5 with support for instance communication."
export CATEGORY=development
export TYPE=library
#export VERSION=3.2.0
#export VERSIONDATE=20210414
#export VERSION=3.3.0
#export VERSIONDATE=20210602
#export VERSION=3.3.1
#export VERSIONDATE=20210921
#export VERSION=3.3.2
#export VERSIONDATE=20211124
#export VERSION=3.3.4
#export VERSIONDATE=20220404
#export VERSION=3.4.0
#export VERSIONDATE=20230613
#export VERSION=3.4.1
#export VERSIONDATE=20230917
#export VERSION=3.5.0
#export VERSIONDATE=20230929
export VERSION=3.5.1
export VERSIONDATE=20231013
wl-showstatus --package-version
export DEPENDENCIES=qt
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
#export LICENSEFILE=LICENSE
export LICENSETYPE=
export DOWNLOADURL="https://github.com/itay-grudev/SingleApplication/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/itay-grudev/SingleApplication/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd SingleApplication-$VERSION
sed -i.bak -e "s/\(add_library(.*\) STATIC/\1/" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 wl-showstatus build &&
 PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_static &&
 wl-showstatus build &&
 PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_shared &&
 strip build_shared/*.dll &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f *.h $INSTALLPREFIX/include/ &&
 cp -f build_static/*.a build_shared/*.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf SingleApplication-$VERSION



