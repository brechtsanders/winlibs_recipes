export NAME="libmysofa"
export STATUS=
export URL=https://github.com/hoene/libmysofa
export BASENAME=libmysofa
export DESCRIPTION="This is a simple set of C functions to read AES SOFA files, if they contain HRTFs stored according to the AES69-2015 standard."
export CATEGORY=fileformat
export TYPE=library
export VERSION=1.3.3
export VERSIONDATE=20250111
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
#export DOWNLOADURL="https://github.com/hoene/libmysofa/releases"
export DOWNLOADURL="https://github.com/hoene/libmysofa/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/hoene/libmysofa/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing bzero() in src/tests/cache.c (version >= 1.3.3)
sed -i.bak -e "1i #define bzero(b,len) memset(b, 0, len)" src/tests/cache.c
# fix src/CMakeLists.txt (version >= 1.3.3)
patch -ulbf src/CMakeLists.txt << EOF
@@ -118,3 +118,3 @@
   set_target_properties(mysofa-shared
-                        PROPERTIES ARCHIVE_OUTPUT_NAME mysofa_shared)
+                        PROPERTIES ARCHIVE_OUTPUT_NAME mysofa)
   set_target_properties(mysofa-shared
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIBS:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#mkdir -p build_static build_shared &&
# wl-showstatus configure-static &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIBS:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTS:BOOL=ON -S. -Bbuild_static &&
# wl-showstatus configure-shared &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIBS:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTS:BOOL=ON -S. -Bbuild_shared &&
# wl-showstatus build-install-static &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install-shared &&
# ninja -Cbuild_shared install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



