export NAME="RtAudio"
export STATUS=
export URL=http://www.music.mcgill.ca/~gary/rtaudio/
#export URL=https://github.com/thestk/rtaudio
export BASENAME=rtaudio
export DESCRIPTION="RtAudio is a set of C++ classes that provide a common API (Application Programming Interface) for realtime audio input/output across Linux, Macintosh OS-X and Windows operating systems. RtAudio significantly simplifies the process of interacting with computer audio hardware."
export CATEGORY=audio
export TYPE=library
#export VERSION=4.1.2
#export VERSIONDATE=20160826
#export VERSION=5.0.0
#export VERSIONDATE=20170831
####RtAudio.cpp:3682:25: fatal error: audioclient.h: No such file or directory
#export VERSION=5.1.0
#export VERSIONDATE=20190418
#export VERSION=5.2.0
#export VERSIONDATE=20211116
#export VERSION=6.0.0
#export VERSIONDATE=20230722
export VERSION=6.0.1
export VERSIONDATE=20230801
wl-showstatus --package-version
#export DEPENDENCIES=
export DEPENDENCIES=pulseaudio,asio
export OPTIONALDEPENDENCIES=jack
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://www.music.mcgill.ca/~gary/rtaudio/release/"
export DOWNLOADURL="https://github.com/thestk/rtaudio/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.music.mcgill.ca/~gary/rtaudio/release/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/thestk/rtaudio/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM -with-asio --with-ds --with-wasapi &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK
#wl-showstatus configure &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DAUDIO_WINDOWS_ASIO:BOOL=ON -DAUDIO_WINDOWS_DS:BOOL=ON -DAUDIO_WINDOWS_WASAPI:BOOL=ON . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DAUDIO_WINDOWS_ASIO:BOOL=ON -DAUDIO_WINDOWS_DS:BOOL=ON -DAUDIO_WINDOWS_WASAPI:BOOL=OFF . &&
# wl-showstatus build &&
# make &&
# #wl-showstatus build-install &&
# #make install/strip &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/lib $INSTALLPREFIX/include &&
# cp -f *.dll $INSTALLPREFIX/bin/ &&
# cp -f *.a $INSTALLPREFIX/lib/ &&
# cp -f librtaudio_static.a $INSTALLPREFIX/lib/librtaudio.a &&
# cp -f *.h $INSTALLPREFIX/include/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DAUDIO_WINDOWS_ASIO:BOOL=ON -DAUDIO_WINDOWS_DS:BOOL=ON -DAUDIO_WINDOWS_WASAPI:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DAUDIO_WINDOWS_ASIO:BOOL=ON -DAUDIO_WINDOWS_DS:BOOL=ON -DAUDIO_WINDOWS_WASAPI:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
## fix use pthreads in RtAudio.h and RtAudio.cpp (version = 5.1.0)
#patch -ulbf RtAudio.h << EOF
#@@ -1 +1,2 @@
#+#include <windows.h>
# /************************************************************************/
#@@ -619,2 +620,5 @@
# #if defined(__WINDOWS_DS__) || defined(__WINDOWS_ASIO__) || defined(__WINDOWS_WASAPI__)
#+  #include <windows.h>
#+#endif
#+#if (defined(__WINDOWS_DS__) || defined(__WINDOWS_ASIO__) || defined(__WINDOWS_WASAPI__)) && !defined(__MINGW32__)
#
#@@ -623,3 +627,2 @@
#   #endif
#-  #include <windows.h>
#   #include <process.h>
#EOF
#patch -ulbf RtAudio.cpp << EOF
#@@ -59,6 +59,2 @@
# #if defined(__WINDOWS_DS__) || defined(__WINDOWS_ASIO__) || defined(__WINDOWS_WASAPI__)
#-  #define MUTEX_INITIALIZE(A) InitializeCriticalSection(A)
#-  #define MUTEX_DESTROY(A)    DeleteCriticalSection(A)
#-  #define MUTEX_LOCK(A)       EnterCriticalSection(A)
#-  #define MUTEX_UNLOCK(A)     LeaveCriticalSection(A)
#
#@@ -79,2 +75,8 @@
#
#+#endif
#+#if (defined(__WINDOWS_DS__) || defined(__WINDOWS_ASIO__) || defined(__WINDOWS_WASAPI__)) && !defined(__MINGW32__)
#+  #define MUTEX_INITIALIZE(A) InitializeCriticalSection(A)
#+  #define MUTEX_DESTROY(A)    DeleteCriticalSection(A)
#+  #define MUTEX_LOCK(A)       EnterCriticalSection(A)
#+  #define MUTEX_UNLOCK(A)     LeaveCriticalSection(A)
# #elif defined(__LINUX_ALSA__) || defined(__LINUX_PULSE__) || defined(__UNIX_JACK__) || defined(__LINUX_OSS__) || defined(__MACOSX_CORE__)
#EOF
## fix use of pthreads in RtAudio.h and RtAudio.cpp (version = 5.2.0)
#patch -ulbf RtAudio.h << EOF
#@@ -51,2 +51,4 @@
# #if defined _WIN32 || defined __CYGWIN__
#+  #include <winsock2.h>
#+  #include <windows.h>
#   #if defined(RTAUDIO_EXPORT)
#@@ -605,3 +607,3 @@
# // Operating system dependent thread functionality.
#-#if defined(_WIN32) || defined(__CYGWIN__)
#+#if (defined(_WIN32) || defined(__CYGWIN__)) && !defined(__MINGW32__)
#
#EOF
#patch -ulbf RtAudio.cpp << EOF
#@@ -58,3 +58,3 @@
#
#-#if defined(_WIN32) || defined(__CYGWIN__)
#+#if (defined(_WIN32) || defined(__CYGWIN__)) && !defined(__MINGW32__)
#   #define MUTEX_INITIALIZE(A) InitializeCriticalSection(A)
#@@ -63,3 +63,5 @@
#   #define MUTEX_UNLOCK(A)     LeaveCriticalSection(A)
#+#endif
#
#+#if defined(_WIN32) || defined(__CYGWIN__)
#   #include "tchar.h"
#@@ -83,4 +85,5 @@
#   }
#+#endif
#
#-#elif defined(__unix__) || defined(__APPLE__)
#+#if defined(__unix__) || defined(__APPLE__) || defined(__MINGW32__)
#   // pthread API
#EOF
## fix missing combase.h in include/asiodrvr.h (version = 5.2.0)
#sed -i.bak -e "s?^#include \"combase\.h\"?//&?" include/asiodrvr.h
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DRTAUDIO_API_WASAPI:BOOL=ON -DRTAUDIO_API_DS:BOOL=ON -DRTAUDIO_API_ASIO:BOOL=ON -DRTAUDIO_API_PULSE:BOOL=OFF -DRTAUDIO_API_JACK:BOOL=OFF -DRTAUDIO_API_CORE:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DRTAUDIO_API_WASAPI:BOOL=ON -DRTAUDIO_API_DS:BOOL=ON -DRTAUDIO_API_ASIO:BOOL=ON -DRTAUDIO_API_CORE:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DRTAUDIO_API_WASAPI:BOOL=ON -DRTAUDIO_API_DS:BOOL=ON -DRTAUDIO_API_ASIO:BOOL=ON -DRTAUDIO_API_PULSE:BOOL=OFF -DRTAUDIO_API_JACK:BOOL=OFF -DRTAUDIO_API_CORE:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DRTAUDIO_API_WASAPI:BOOL=ON -DRTAUDIO_API_DS:BOOL=ON -DRTAUDIO_API_ASIO:BOOL=ON -DRTAUDIO_API_CORE:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/share/rtaudio/asiosdk/common $INSTALLPREFIX/share/rtaudio/asiosdk/host/pc &&
 cp -f include/*.h $INSTALLPREFIX/share/rtaudio/asiosdk/common/ &&
 cp -f include/asio.cpp $INSTALLPREFIX/share/rtaudio/asiosdk/common/ &&
 cp -f include/asiolist.cpp $INSTALLPREFIX/share/rtaudio/asiosdk/host/pc/ &&
 cp -f include/asiodrivers.cpp $INSTALLPREFIX/share/rtaudio/asiosdk/host/ &&
 #cp -f include/iasiothiscallresolver.cpp $INSTALLPREFIX/share/rtaudio/asiosdk/host/pc/ &&
 ## fix invalid include path in rtaudio.pc (version = 5.1.0)
 #sed -i -e "s?\(/include\)/rtaudio?\1?" $INSTALLPREFIX/lib/pkgconfig/rtaudio.pc &&
 # fix absolute paths in RtAudioTargets.cmake (version >= 5.2.0)
 sed -i -e "s?[A-Z]:/[^;]*/lib/lib\([^ .]*\)\.dll\.a?\1?g" $INSTALLPREFIX/share/rtaudio/RtAudioTargets.cmake &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



