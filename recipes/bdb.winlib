#export NAME="Berkely DB"
#export STATUS=
#export URL=http://www.oracle.com/technology/software/products/berkeley-db/
#export BASENAME=bdb
#export DESCRIPTION="Berkeley DB"
#export CATEGORY=db
#export TYPE=library
#export VERSION=3.3.11
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=
#export DOWNLOADURL="http://www.oracle.com/technology/software/products/berkeley-db/db/index.html"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://download.oracle.com/berkeley-db/db-$VERSION.tar.gz
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/db-$VERSION.tar.gz &> /tmp/$BASENAME.err
#sed -e "s/^tar: \([^:]*\/\)\([^:\/]*\): Cannot create symlink to \`\([^']*\)': No such file or directory/ln -s \\1\\3 \\1\\2/" -e "s/^\(tar:.*\)$/#\\1/" /tmp/$BASENAME.err | sh
#rm /tmp/$BASENAME.err
##cd db-$VERSION/build_unix
##../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-cxx CFLAGS="-I$MINGWPREFIX/include" LDFLAGS="-L$MINGWPREFIX/lib -lws2_32" && make install
##cd ../..
#cd db-$VERSION/build_win32
##../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-pthread_api --enable-cxx CFLAGS="-I$MINGWPREFIX/include" LDFLAGS="-L$MINGWPREFIX/lib" && make install
##../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-cxx CFLAGS="-I$MINGWPREFIX/include" LDFLAGS="-L$MINGWPREFIX/lib -lwsock32 -lws2_32" && make install
##../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-pthread_api --enable-cxx CFLAGS="-I$MINGWPREFIX/include" LDFLAGS="-L$MINGWPREFIX/lib -lwsock32" && make && make install
#../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-pthread_api --enable-cxx CFLAGS="-I$MINGWPREFIX/include" LDFLAGS="-L$MINGWPREFIX/lib -lws2_32" && make && make install
#cd ../..
##### error: `S_IRGRP' undeclared (first use in this function)
##./makeDevPak.sh
#####See also: https://github.com/berkeleydb/libdb



export NAME="Berkely DB"
export STATUS=
#export URL=http://www.oracle.com/technology/software/products/berkeley-db/
export URL=http://oss.oracle.com/berkeley-db.html
export BASENAME=bdb
export DESCRIPTION="Berkeley DB"
export CATEGORY=db
export TYPE=library
#export VERSION=4.6.21
#export VERSION=4.7.25
#export VERSION=4.8.24
#export VERSION=4.8.26
#export VERSIONDATE=20091229
#export VERSION=4.8.30
#export VERSIONDATE=20111124
#export VERSION=5.0.21
#export VERSIONDATE=20100401
#export VERSION=5.1.19
#export VERSIONDATE=20101014
#export VERSION=5.1.25
#export VERSIONDATE=20110504
#export VERSION=5.1.36
#export VERSIONDATE=20111124
#export VERSION=5.2.36
#export VERSIONDATE=20111215
#export VERSION=5.3.21
#export VERSIONDATE=20120624
#export VERSION=6.0.20
#export VERSIONDATE=20131102
#export VERSION=6.0.30
#export VERSIONDATE=20140618
#export VERSION=6.1.19
#export VERSIONDATE=20140930
#export VERSION=6.1.23
#export VERSIONDATE=20150226
#export VERSION=6.1.26
#export VERSIONDATE=20150624
#export VERSION=6.2.23
#export VERSIONDATE=20160415
####../src/dbinc/repmgr.h:541: error: two or more data types in declaration specifiers
#export VERSION=6.2.32
#export VERSIONDATE=20170419
#export VERSION=6.2.38
#export VERSIONDATE=20191103
####os_stat.o:os_stat.c:(.text+0xc7): undefined reference to `_tcsclen'
#export VERSION=18.1.25
#export VERSIONDATE=20180615
#export VERSION=18.1.32
#export VERSIONDATE=20190227
####src/mutex/mut_win32.c:591:9: error: 'interlocked_val' undeclared (first use in this function)
export VERSION=18.1.40
export VERSIONDATE=20200603
wl-showstatus --package-version
export DEPENDENCIES=pthreads
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="http://www.ibiblio.org/pub/Linux/libs/db/ db- -src.tar.gz"
#export DOWNLOADURL="http://www.oracle.com/technology/software/products/berkeley-db/db/index.html db\\/ \\/db-targz.html"
#export DOWNLOADURL="http://www.oracle.com/technology/software/products/berkeley-db/db/index.html db\/ \/db-targz.html"
#export DOWNLOADURL="http://www.oracle.com/technology/software/products/berkeley-db/db/index.html db/ /db-targz.html"
#export DOWNLOADURL="http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html db/ /db-targz.html"
#export DOWNLOADURL="http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html db-"
export DOWNLOADURL="https://www.oracle.com/database/technologies/related/berkeleydb-release-history.html db-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://download.oracle.com/berkeley-db/db-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://download.oracle.com/otn/berkeley-db/db-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://download.oracle.com/otn/berkeley-db/db-$VERSION.tar.gz
wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/db-$VERSION.tar.gz
cd db-$VERSION
## fix for mkdir having only 1 parameter in Windows (version <= 4.8.30)
#mv os/os_mkdir.c os/os_mkdir.c.bak
#sed -e 's/, *__db_omode("rwx------")//; s/RETRY_CHK//' os/os_mkdir.c.bak > os/os_mkdir.c
## fix duplicate definition of socklen_t in dbinc/repmgr.h (version >= 4.8.24 <= 4.8.30)
#attrib -R dbinc/repmgr.h
##mv dbinc/repmgr.h dbinc/repmgr.h.bak
##sed -e "s?^\(typedef int socklen_t;\)?//\1?" dbinc/repmgr.h.bak > dbinc/repmgr.h
#sed -i.orig -e "s?^\(typedef int socklen_t;\)?//\1?" dbinc/repmgr.h
## fix building windows version (version >= 4.8.24 <= 4.8.30)
#mv repmgr/repmgr_posix.c repmgr/repmgr_posix.c.bak
#mv repmgr/repmgr_windows.c repmgr/repmgr_posix.c
## fix for pthread_t being a structure on Windows (version >= 4.8.26 <= 4.8.30)
#patch -ulbf repmgr/repmgr_util.c << EOF
#--- repmgr/repmgr_util.c  Fri Dec 18 23:26:18 2009
#+++ repmgr/repmgr_util.c  Tue Dec 29 16:07:36 2009
#@@ -976,3 +976,8 @@
# 
#+#ifdef __MINGW32__
#+       static const pthread_t empty = {NULL, 0};
#+       COMPQUIET(unused, empty);
#+#else
#        COMPQUIET(unused, 0);
#+#endif
#        MUTEX_LOCK(env, rep->mtx_repmgr);
#EOF
#patch -ulbf mutex/mut_failchk.c << EOF
#--- mutex/mut_failchk.c Fri Dec 18 23:26:18 2009
#+++ mutex/mut_failchk.c Tue Dec 29 16:13:34 2009
#@@ -51,4 +51,9 @@
#                 */
#+#ifdef __MINGW32__
#+#define EMPTY_THREAD (pthread_t){NULL,0}
#+#else
#+#define EMPTY_THREAD 0
#+#endif
#                if (dbenv->is_alive(
#-                   dbenv, mutexp->pid, 0, DB_MUTEX_PROCESS_ONLY))
#+                   dbenv, mutexp->pid, EMPTY_THREAD, DB_MUTEX_PROCESS_ONLY))
#                        continue;
#@@ -56,3 +61,3 @@
#                __db_msg(env, "Freeing mutex for process: %s",
#-                   dbenv->thread_id_string(dbenv, mutexp->pid, 0, buf));
#+                   dbenv->thread_id_string(dbenv, mutexp->pid, EMPTY_THREAD, buf));
#EOF
#patch -ulbf dbreg/dbreg.c << EOF
#--- dbreg/dbreg.c  Fri Dec 18 23:26:02 2009
#+++ dbreg/dbreg.c  Tue Dec 29 16:15:20 2009
#@@ -690,2 +690,7 @@
# 
#+#ifdef __MINGW32__
#+#define EMPTY_THREAD (pthread_t){NULL,0}
#+#else
#+#define EMPTY_THREAD 0
#+#endif
#        MUTEX_LOCK(env, lp->mtx_filelist);
#@@ -693,3 +698,3 @@
#                nnp = SH_TAILQ_NEXT(fnp, q, __fname);
#-               if (dbenv->is_alive(dbenv, fnp->pid, 0, DB_MUTEX_PROCESS_ONLY))
#+               if (dbenv->is_alive(dbenv, fnp->pid, EMPTY_THREAD, DB_MUTEX_PROCESS_ONLY))
#                        continue;
#@@ -698,3 +703,3 @@
#                    "Freeing log information for process: %s, (ref %lu)",
#-                   dbenv->thread_id_string(dbenv, fnp->pid, 0, buf),
#+                   dbenv->thread_id_string(dbenv, fnp->pid, EMPTY_THREAD, buf),
#                    (u_long)fnp->txn_ref);
#EOF
#patch -ulbf os/os_pid.c << EOF
#--- os/os_pid.c  Tue Dec 29 16:19:18 2009
#+++ os/os_pid.c  Tue Dec 29 16:19:26 2009
#@@ -43,3 +43,3 @@
#        if (tidp != NULL) {
#-#if defined(DB_WIN32)
#+#if defined(DB_WIN32) && !defined(HAVE_PTHREAD_SELF)
#                *tidp = GetCurrentThreadId();
#EOF
## fix building DLLs on 64-bit (version <= 4.8.30)
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# cd dist &&
# for F in *; do
#  attrib -r $F
# done &&
# echo "AM_GNU_GETTEXT_VERSION(`gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/"`)" >> configure.ac &&
# aclocal --force -I $MINGWPREFIX/share/aclocal -I aclocal -I aclocal_java &&
# libtoolize --force -i &&
# autoconf --force &&
# #autoheader --force -B aclocal -B aclocal_java &&
# #automake --force-missing --add-missing &&
# #autoreconf -f -i -I $MINGWPREFIX/share/aclocal &&
# cd ..
#fi
## fix src\dbinc\repmgr.h for 64-bit (version <= 4.8.30)
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# mv src/dbinc/repmgr.h src/dbinc/repmgr.h.bak
# sed -e "s?\(typedef int socklen_t;\)?//\1?" src/dbinc/repmgr.h.bak > src/dbinc/repmgr.h
#fi
## fix missing _tcslen in src/os/os_stat.c (version >= 6.2.32)
#mv src/os/os_stat.c src/os/os_stat.c.bak &&
#echo "#define _tcslen strlen" > src/os/os_stat.c &&
#cat src/os/os_stat.c.bak >> src/os/os_stat.c
## fix missing types in util/db_dump185.c
#mv util/db_dump185.c util/db_dump185.c.bak
#cat > util/db_dump185.c << EOF
##define HAVE_DB_185_H
##include <stdint.h>
#typedef unsigned char u_char;
#typedef unsigned int u_int;
#typedef unsigned long u_long;
#EOF
#cat util/db_dump185.c.bak >> util/db_dump185.c
# fix src/dbinc/atomic.h (version >= 18.1.40)
patch -ulbf src/dbinc/atomic.h << EOF
@@ -63,3 +63,3 @@
  */
-#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 201112L && !defined(__STDC_NO_ATOMICS__)
+#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 201112L && !defined(__STDC_NO_ATOMICS__) && !defined(__MINGW32__)
 #include <stdatomic.h>
@@ -111,3 +111,3 @@

-#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 201112L && !defined(__STDC_NO_ATOMICS__)
+#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 201112L && !defined(__STDC_NO_ATOMICS__) && !defined(__MINGW32__)
 static inline atomic_value_t atomic_read(db_atomic_t *p) {
@@ -143,3 +143,3 @@

-#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 201112L && !defined(__STDC_NO_ATOMICS__)
+#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 201112L && !defined(__STDC_NO_ATOMICS__) && !defined(__MINGW32__)
 #define atomic_inc(env, p) __atomic_fetch_add_int(p, 1)
EOF
cd build_windows
## fix missing __EDIT_DB_VERSION_*__
#cat >> db_int.h << EOF
##ifndef __EDIT_DB_VERSION_MAJOR__
##define __EDIT_DB_VERSION_MAJOR__ `echo $VERSION|sed -e "s/\([0-9]*\).*/\1/"`
##define __EDIT_DB_VERSION_MINOR__ `echo $VERSION|sed -e "s/[0-9]*\.\([0-9]*\).*/\1/"`
##define __EDIT_DB_VERSION_PATCH__ `echo $VERSION|sed -e "s/[0-9]*\.[0-9]*\.\([0-9]*\).*/\1/"`
##define __EDIT_DB_VERSION_STRING__ "$VERSION"
##endif
#EOF
#cp -f $INSTALLPREFIX/bin/libdb-__EDIT_DB_VERSION_MAJOR__.__EDIT_DB_VERSION_MINOR__.dll $INSTALLPREFIX/bin/libdb-`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/"`.dll
#cp -f $INSTALLPREFIX/bin/libdb_cxx-__EDIT_DB_VERSION_MAJOR__.__EDIT_DB_VERSION_MINOR__.dll $INSTALLPREFIX/bin/libdb_cxx-`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/"`.dll
#sed -i -e "s/__EDIT_DB_VERSION_MAJOR__/`echo $VERSION|sed -e "s/\([0-9]*\).*/\1/"`/; s/__EDIT_DB_VERSION_MINOR__/`echo $VERSION|sed -e "s/[0-9]*\.\([0-9]*\).*/\1/"`/; s/__EDIT_DB_VERSION_PATCH__/`echo $VERSION|sed -e "s/[0-9]*\.[0-9]*\.\([0-9]*\).*/\1/"`/; s/__EDIT_DB_VERSION_STRING__/$VERSION/" $INSTALLPREFIX/include/db.h
## remove dependancy on dynamic libstdc++ (GCC 4)
#mv libtool libtool.bak &&
#sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
wl-showstatus configure &&
#../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-pthread_api --enable-cxx CFLAGS="-I$MINGWPREFIX/include" LDFLAGS="-L$MINGWPREFIX/lib" && make install
#../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-pthread_api --enable-cxx CFLAGS="-I$MINGWPREFIX/include -Dsocklen_t=int" LDFLAGS="-L$MINGWPREFIX/lib -lwsock32 -lws2_32" && make install
#../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-cxx CFLAGS="-I$MINGWPREFIX/include -Dsocklen_t=int" LDFLAGS="-L$MINGWPREFIX/lib -lwsock32 -lws2_32" && make install
#../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-cxx CFLAGS="-I$MINGWPREFIX/include -Dsocklen_t=int" LDFLAGS="-L$MINGWPREFIX/lib -lws2_32" &&
#../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-cxx --enable-compat185 CFLAGS="-I$MINGWPREFIX/include -Dsocklen_t=int" LDFLAGS="-L$MINGWPREFIX/lib -Wl,--as-needed -lws2_32 -static-libstdc++ -no-undefined -Wl,-no-undefined" &&
#../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-cxx --enable-compat185 CFLAGS="-I$MINGWPREFIX/include -Dsocklen_t=int" LDFLAGS="-L$MINGWPREFIX/lib -Wl,--as-needed -lws2_32 -static-libstdc++ -Wl,-no-undefined" &&
#../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-cxx --enable-compat185 CFLAGS="-I$MINGWPREFIX/include -Dsocklen_t=int" LDFLAGS="-L$MINGWPREFIX/lib -Wl,--as-needed -lws2_32 -Wl,-no-undefined" &&
../dist/configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-mingw --enable-cxx --enable-compat185 --disable-dump185 --enable-dbm --enable-sql CFLAGS="-I$MINGWPREFIX/include -Dsocklen_t=int" LDFLAGS="-L$MINGWPREFIX/lib -Wl,--as-needed -lws2_32 -Wl,-no-undefined" &&
 wl-showstatus build-install &&
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # mv libtool libtool.bak &&
 # sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool
 #fi &&
 #mv libtool libtool.bak && ln -sf `which libtool` libtool &&
 #make -j1 && ( make install || ( make -i install && cp *.exe *.dll $INSTALLPREFIX/bin/ && cp *.a $INSTALLPREFIX/lib/ )) &&
 make -j1 && ( make install || ( make -i install && cp -u *.exe .libs/*.dll $INSTALLPREFIX/bin/ && cp -u *.a $INSTALLPREFIX/lib/ )) &&
 # remove read-only attribute and strip binaries
 pushd $INSTALLPREFIX/bin &&
 for F in *.dll *.exe; do
  attrib -R $F
 done &&
 popd &&
 strip $INSTALLPREFIX/bin/*.dll $INSTALLPREFIX/bin/*.exe &&
 # create library files without version number if missing
 if [ ! -f $INSTALLPREFIX/lib/libdb.a ]; then
  #cp -f $INSTALLPREFIX/lib/libdb-[0-9].[0-9].a $INSTALLPREFIX/lib/libdb.a
  cp -f $INSTALLPREFIX/lib/libdb-*.[0-9].a $INSTALLPREFIX/lib/libdb.a
 fi &&
 if [ ! -f $INSTALLPREFIX/lib/libdb.dll.a ]; then
  #cp -f $INSTALLPREFIX/lib/libdb-[0-9].[0-9].dll.a $INSTALLPREFIX/lib/libdb.dll.a
  cp -f $INSTALLPREFIX/lib/libdb-*.[0-9].dll.a $INSTALLPREFIX/lib/libdb.dll.a
 fi &&
 if [ ! -f $INSTALLPREFIX/lib/libdb_cxx.a ]; then
  #cp -f $INSTALLPREFIX/lib/libdb_cxx-[0-9].[0-9].a $INSTALLPREFIX/lib/libdb_cxx.a
  cp -f $INSTALLPREFIX/lib/libdb_cxx-*.[0-9].a $INSTALLPREFIX/lib/libdb_cxx.a
 fi &&
 if [ ! -f $INSTALLPREFIX/lib/libdb_cxx.dll.a ]; then
  #cp -f $INSTALLPREFIX/lib/libdb_cxx-[0-9].[0-9].dll.a $INSTALLPREFIX/lib/libdb_cxx.dll.a
  cp -f $INSTALLPREFIX/lib/libdb_cxx-*.[0-9].dll.a $INSTALLPREFIX/lib/libdb_cxx.dll.a
 fi &&
 cd .. &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf db-$VERSION



