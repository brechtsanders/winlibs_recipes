export NAME="RDFLib"
export STATUS=
export URL=https://rdflib.readthedocs.org/
#export URL=https://pypi.org/project/rdflib/
#export URL=https://github.com/RDFLib/rdflib
export BASENAME=rdflib
export DESCRIPTION="RDFLib is a Python library for working with RDF, a simple yet powerful language for representing information."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=4.2.2
#export VERSIONDATE=20200311
#export VERSION=5.0.0
#export VERSIONDATE=20200418
#export VERSION=6.0.0
#export VERSIONDATE=20210721
#export VERSION=6.0.1
#export VERSIONDATE=20210917
#export VERSION=6.0.2
#export VERSIONDATE=20211010
#export VERSION=6.1.1
#export VERSIONDATE=20211220
export VERSION=6.2.0
export VERSIONDATE=20220716
#export VERSION=6.3.0
#export VERSIONDATE=20230317
#export VERSION=6.3.1
#export VERSIONDATE=20230318
#export VERSION=6.3.2
#export VERSIONDATE=20230326
#export VERSION=7.0.0
#export VERSIONDATE=20230802
####missing setup.py
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
export DOWNLOADURL="https://github.com/RDFLib/rdflib/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/RDFLib/rdflib/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
#wl-showstatus build &&
#$PYDIR/python setup.py build &&
wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX/python/Lib/site-packages &&
 PYTHONPATH=$INSTALLPREFIX/python/Lib/site-packages:$MINGWPREFIX/python/Lib/site-packages:$PYDIR/Lib${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python setup.py install --force --compile --single-version-externally-managed --prefix=$(echo $INSTALLPREFIX/python|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\?") --root $(echo $INSTALLPREFIX|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\?; s?/?\\\\?") &&
 # delete any __pycache__ folder(s)
 find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#wl-showstatus build-install &&
# PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $MINGWPREFIX/python/Scripts/pip-script.py install . --prefix=$(cygpath -w $INSTALLPREFIX/python) --force-reinstall --no-compile &&
# ## delete any __pycache__ folder(s)
# #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
#    echo OK
#wl-showstatus build-install &&
# PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe $MINGWPREFIX/python/Scripts/pip-script.py install . --prefix=$(cygpath -w $INSTALLPREFIX/python) --force-reinstall &&
# ## delete any __pycache__ folder(s)
# #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
#    echo OK
#wl-showstatus build-install &&
# $PYDIR/python.exe -m pip install --target $INSTALLPREFIX/python/Lib/site-packages --no-compile . &&
#    echo OK




#PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $MINGWPREFIX/python/Scripts/pip-script.py install -e . install --force --compile --prefix=$(echo $INSTALLPREFIX/python|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\?") --root $(echo $INSTALLPREFIX|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\?; s?/?\\\\?") && echo OK
