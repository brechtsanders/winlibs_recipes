export NAME="phobos"
export STATUS=
export URL=https://dlang.org/phobos/
#export URL=https://github.com/dlang/phobos
export BASENAME=phobos
export DESCRIPTION="The standard library of the D programming language"
export CATEGORY=
export TYPE=library
#export VERSION=2.098.0
#export VERSIONDATE=20211010
#export VERSION=2.098.1
#export VERSIONDATE=20220122
#export VERSION=2.099.0
#export VERSIONDATE=20220308
#export VERSION=2.099.1
#export VERSIONDATE=20220408
#export VERSION=2.100.0
#export VERSIONDATE=20220515
#export VERSION=2.100.1
#export VERSIONDATE=20220710
#export VERSION=2.100.2
#export VERSIONDATE=20220911
#export VERSION=2.101.0
#export VERSIONDATE=20221115
#export VERSION=2.101.1
#export VERSIONDATE=20221216
#export VERSION=2.101.2
#export VERSIONDATE=20230101
#export VERSION=2.102.0
#export VERSIONDATE=20230202
#export VERSION=2.102.1
#export VERSIONDATE=20230216
export VERSION=2.102.2
export VERSIONDATE=20230302
#export VERSION=2.103.0
#export VERSIONDATE=20230402
#export VERSION=2.103.1
#export VERSIONDATE=20230502
#export VERSION=2.104.0
#export VERSIONDATE=20230602
#export VERSION=2.104.1
#export VERSIONDATE=20230702
#export VERSION=2.104.2
#export VERSIONDATE=20230715
#export VERSION=2.105.0
#export VERSIONDATE=20230802
#export VERSION=2.105.1
#export VERSIONDATE=20230902
#export VERSION=2.105.2
#export VERSIONDATE=20230916
#export VERSION=2.105.3
#export VERSIONDATE=20231102
#export VERSION=2.106.0
#export VERSIONDATE=20231202
#export VERSION=2.106.1
#export VERSIONDATE=20240102
#export VERSION=2.107.0
#export VERSIONDATE=20240202
#export VERSION=2.108.0
#export VERSIONDATE=20240402
wl-showstatus --package-version
export DEPENDENCIES=dmd,druntime
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE_1_0.txt
export LICENSETYPE=BSL
#export DOWNLOADURL="https://github.com/dlang/phobos/releases"
export DOWNLOADURL="https://github.com/dlang/phobos/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/dlang/phobos/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix etc/c/zlib/gzguts.h (version >= 2.101.0)
patch -ulbf etc/c/zlib/gzguts.h << EOF
@@ -141,3 +141,3 @@
 #include <io.h>
-#elif defined(_MSC_VER)
+#elif defined(_WIN32)
 #include <io.h>
EOF
# fix std/logger/core.d (version >= 2.101.0)
patch -ulbf std/logger/core.d << EOF
@@ -1418,3 +1418,3 @@

-    __gshared align(__traits(classInstanceAlignment, FileLogger))
+    __gshared
         void[__traits(classInstanceSize, FileLogger)] _buffer = void;
@@ -1593,3 +1593,3 @@

-    static align(__traits(classInstanceAlignment, StdForwardLogger))
+    static
         void[__traits(classInstanceSize, StdForwardLogger)] buffer;
EOF
#sed -e "s/-fPIC//; s/\.obj\b/.o/" posix.mak > mingw.mak
sed -e "s/-fPIC//; s/\.a\b/.lib/g; s/-conf= //" posix.mak > mingw.mak
# fix missing osmodel.mak (version >= 2.101.0)
sed -i.bak -e "s?/compiler/?/?" mingw.mak
#sed -i.bak2 -e "s/-preview=[^ ]*//g; s/-release/-frelease/" mingw.mak
#wl-showstatus build &&
# make -fmingw.mak OS=win32 MODEL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) BUILD=release DMD_DIR=$MINGWPREFIX/share/dmd DMD=$MINGWPREFIX/share/dmd/windows/bin/dmd.exe DRUNTIME=$MINGWPREFIX/share/dmd/src/druntime/import/libdruntime.lib CC=${CC:-gcc} &&
# #DRUNTIMELIB=$MINGWPREFIX/share/dmd/src/druntime/import/libdruntime.lib 
# #DFLAGS=-conf=$MINGWPREFIX/share/dmd/windows/bin/sc.ini 
wl-showstatus install &&
 make -fmingw.mak install INSTALL_DIR=$INSTALLPREFIX/share/dmd OS=win32 MODEL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) BUILD=release DMD_DIR=$MINGWPREFIX/share/dmd DMD=$MINGWPREFIX/share/dmd/windows/bin/dmd.exe DRUNTIME=$MINGWPREFIX/share/dmd/src/druntime/import/libdruntime.lib CC=${CC:-gcc} &&
 #DMD=$MINGWPREFIX/share/gcc9/bin/gdc.exe 
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



