#export NAME="XMLTooling-C"
#export STATUS=
#export URL=https://wiki.shibboleth.net/confluence/display/OpenSAML/XMLTooling-C
#export BASENAME=xmltooling-c
#export DESCRIPTION="Shibboleth 2.x relies on OpenSAML 2, which in turn requires this lower-level library that provides a higher level interface to XML processing, particularly in light of signing and encryption. This project is maintained as part of the OpenSAML 2 project and is supported with it. This package includes two alternate library versions, one with security support, and one so-called "lite" version without that support. Shibboleth relies on both being built, so the option to build only the lite version is not applicable."
#export CATEGORY=dataprocessing
#export TYPE=library
##export VERSION=1.6.3
##export VERSIONDATE=20180202
#export VERSION=1.6.4
#export VERSIONDATE=20180227
#wl-showstatus --package-version
#export DEPENDENCIES=log4cpp,log4shib,xml-security-c,boost
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
#export DOWNLOADURL="http://shibboleth.net/downloads/c++-opensaml/ xmltooling-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://shibboleth.net/downloads/c++-opensaml/2.6.1/xmltooling-1.6.3.tar.bz2
#export DOWNLOADSOURCEURL=http://shibboleth.net/downloads/c++-opensaml/2.6.1/xmltooling-1.6.4.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/xmltooling-$VERSION.tar.bz2
#cd xmltooling-$VERSION
## fix exports in xmltooling/version.cpp
#sed -i.bak -e "s/^XMLTOOL_API/extern &/" xmltooling/version.cpp
## fix xmltooling/XMLToolingConfig.cpp
#mv xmltooling/XMLToolingConfig.cpp xmltooling/XMLToolingConfig.cpp.bak &&
#echo "#define DOMDocument WIN_DOMDocument" > xmltooling/XMLToolingConfig.cpp &&
#echo "#include <windows.h>" >> xmltooling/XMLToolingConfig.cpp &&
#echo "#undef DOMDocument" >> xmltooling/XMLToolingConfig.cpp &&
#echo "#include \"../config_win32.h\"" >> xmltooling/XMLToolingConfig.cpp &&
#cat xmltooling/XMLToolingConfig.cpp.bak >> xmltooling/XMLToolingConfig.cpp
## use Windows threads (version = 1.6.4)
#mv -f xmltooling/util/PThreads.cpp xmltooling/util/PThreads.cpp.bak &&
#sed -e "s/#include<xfunctional>/#include <windows.h>/; s/(DWORD)\(return_val\)/(uintptr_t)\1/" xmltooling/util/Win32Threads.cpp > xmltooling/util/PThreads.cpp
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-{boost,log4shib,log4cpp,xerces,xmlsec,openssl,curl}=$MINGWPREFIX CXXFLAGS="-std=c++11 -DWIN32" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-log4cpp --without-log4shib --disable-doxygen-doc CXXFLAGS="-std=c++11 -DWIN32" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-xerces=$MINGWPREFIX --with-xmlsec=$MINGWPREFIX --with-openssl=$MINGWPREFIX --with-curl=$MINGWPREFIX --with-log4cpp=$(which log4cpp-config) --without-log4shib --disable-doxygen-doc CXXFLAGS="-std=c++11 -DWIN32" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-log4cpp=$(which log4cpp-config) --without-log4shib --without-xmlsec --disable-doxygen-doc CXXFLAGS="-std=c++11 -DWIN32" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-log4cpp=$(which log4cpp-config) --without-log4shib --disable-doxygen-doc CXXFLAGS="-std=c++11 -DWIN32" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --disable-doxygen-doc CXXFLAGS="-std=c++11 -DWIN32" LDFLAGS="-Wl,--as-needed -lz" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --disable-doxygen-doc CXXFLAGS="-std=c++11 -DWIN32" LDFLAGS="-Wl,--as-needed -lz" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,--as-needed -llibxml-security-c" &&
# # fix building DLLs
# sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# # avoid issues with class TXFMOutputLog (version <= 1.6.4)
# echo "#undef XMLTOOLING_XMLSEC_DEBUGLOGGING" >> config.h &&
# ## fix undefined type xsecsize_t (version >= 1.6.4)
# #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# # echo "#define XMLTOOLING_XERCESC_64BITSAFE 1" >> config.h
# #fi &&
# # fix linking against wrong logging library
# sed -i.bak -e "s/-llog4cpp/-Wl,--as-needed & -llog4shib/" xmltooling/Makefile &&
# wl-showstatus build-install &&
# #( make install-strip || make -j1 install-strip ) &&
# ( make install-strip CXX="${CXX:-g++} -std=c++11 -DWIN32" || make -j1 install-strip CXX="${CXX:-g++} -std=c++11 -DWIN32" ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf xmltooling-$VERSION



export NAME="XMLTooling-C"
export STATUS=
export URL=https://wiki.shibboleth.net/confluence/display/OpenSAML/XMLTooling-C
export BASENAME=xmltooling-c
export DESCRIPTION="Shibboleth 2.x relies on OpenSAML 2, which in turn requires this lower-level library that provides a higher level interface to XML processing, particularly in light of signing and encryption. This project is maintained as part of the OpenSAML 2 project and is supported with it. This package includes two alternate library versions, one with security support, and one so-called "lite" version without that support. Shibboleth relies on both being built, so the option to build only the lite version is not applicable."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=3.0.0
#export VERSIONDATE=20180717
#export VERSION=3.0.4
#export VERSIONDATE=20190311
#export VERSION=3.1.0
#export VERSIONDATE=20200414
#export VERSION=3.2.0
#export VERSIONDATE=20201215
export VERSION=3.2.2
export VERSIONDATE=20221102
#export VERSION=3.2.3
#export VERSIONDATE=20230111
####xmltooling/security/impl/FilesystemCredentialResolver.cpp:474: undefined reference to `__imp__ZN17OpenSSLCryptoX509C1EP7x509_st'
wl-showstatus --package-version
export DEPENDENCIES=log4cpp,log4shib,xml-security-c,boost,xerces,zlib,openssl,libcurl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=doxygen
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=doc/LICENSE.txt
export LICENSETYPE=Apache
export DOWNLOADURL="http://shibboleth.net/downloads/c++-opensaml/ xmltooling-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://shibboleth.net/downloads/c++-opensaml/$VERSION/xmltooling-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://shibboleth.net/downloads/c++-opensaml/3.2.1/xmltooling-3.2.2.tar.bz2
#export DOWNLOADSOURCEURL=http://shibboleth.net/downloads/c++-opensaml/3.2.1/xmltooling-3.2.3.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/xmltooling-$VERSION.tar.bz2
cd xmltooling-$VERSION
# fix exports in xmltooling/version.cpp
sed -i.bak -e "s/^XMLTOOL_API/extern &/" xmltooling/version.cpp
# fix xmltooling/XMLToolingConfig.cpp
mv xmltooling/XMLToolingConfig.cpp xmltooling/XMLToolingConfig.cpp.bak &&
echo "#define DOMDocument WIN_DOMDocument" > xmltooling/XMLToolingConfig.cpp &&
echo "#include <windows.h>" >> xmltooling/XMLToolingConfig.cpp &&
echo "#undef DOMDocument" >> xmltooling/XMLToolingConfig.cpp &&
echo "#include \"../config_win32.h\"" >> xmltooling/XMLToolingConfig.cpp &&
cat xmltooling/XMLToolingConfig.cpp.bak >> xmltooling/XMLToolingConfig.cpp
## fix ambiguities in xmltooling/security/impl/OpenSSLSecurityHelper.cpp (version = 3.0.0)
#sed -i.bak -e "s/RSA_get0_[ned]/::&/g" xmltooling/security/impl/OpenSSLSecurityHelper.cpp
## fix xmltooling/util/PThreads.cpp (version >= 3.0.0)
#mv xmltooling/util/PThreads.cpp xmltooling/util/PThreads.cpp.bak &&
#echo "#include <windows.h>" > xmltooling/util/PThreads.cpp &&
#sed -e "s/(DWORD)\(return_val\)/(uintptr_t)\1/" xmltooling/util/Win32Threads.cpp >> xmltooling/util/PThreads.cpp
## fix xmltooling/util/PThreads.cpp (version >= 3.1.0)
#patch -ulbf xmltooling/util/PThreads.cpp << EOF
#@@ -32,2 +32,5 @@
# #include <signal.h>
#+#ifdef WIN32
#+#include <windows.h>
#+#endif
#
#@@ -299,2 +302,3 @@
#
#+#ifndef WIN32
# void Thread::mask_all_signals(void)
#@@ -310,2 +314,3 @@
# }
#+#endif
#
#EOF
# fix xmltooling/util/Win32Threads.cpp (version >= 3.1.0)
patch -ulbf xmltooling/util/Win32Threads.cpp << EOF
@@ -35,2 +35,4 @@
 # error "This implementation is for WIN32 platforms."
+#else
+# include <windows.h>
 #endif
@@ -395,3 +397,3 @@
 {
-    ExitThread((DWORD)return_val);
+    ExitThread((uintptr_t)return_val);
 }
EOF
# force using Windows Threads (version >= 3.1.0)
mv xmltooling/util/PThreads.cpp xmltooling/util/PThreads.cpp.bak &&
cp xmltooling/util/Win32Threads.cpp xmltooling/util/PThreads.cpp
# use _WIN32 instead of WIN32 (version >= 3.2.0)
#sed -i.bak2 -e "s/\([ (]\)\(WIN32\)\([ )].*\|\)^/\1_\2\3/" $(grep -l "[ (]WIN32" -r $(find -name '*.h' -or -name '*.cpp'))
sed -i.bak2 -e "s/\bWIN32\b/_&/g" $(grep -lw WIN32 $(find -name '*.h'))
# fix exporting symbols in DLL (version >= 3.2.0)
sed -i.bak -e "s/^libxmltooling_la_CXXFLAGS\s*=\s*/&-DXMLTOOLING_EXPORTS /" xmltooling/Makefile.in
wl-showstatus configure &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,--as-needed -Wl,-lxml-security-c" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-xmlsec &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-xmlsec &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-xmlsec CXXFLAGS="-std=c++11 -DWIN32" &&
 echo "#undef XSEC_OPENSSL_HAVE_EC" >> config.h &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix building DLLs and detection of DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/; s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 wl-showstatus build-install &&
 #( make install-strip || make install-strip LIBS="-Wl,--as-needed -Wl,-lxml-security-c" ) &&
 ( make install-strip || make install-strip LIBS="-Wl,--as-needed -lxml-security-c" ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf xmltooling-$VERSION



