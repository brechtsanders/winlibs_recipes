#export NAME="Rubber Band Library"
#export STATUS=
#export URL=http://breakfastquay.com/rubberband/
#export BASENAME=rubberband
#export DESCRIPTION="Rubber Band Library is a high quality software library for audio time-stretching and pitch-shifting. It permits you to change the tempo and pitch of an audio stream or recording dynamically and independently of one another."
#export CATEGORY=audio
#export TYPE=library
##export VERSION=1.8.1
##export VERSIONDATE=20160829
#####ladspa/RubberBandPitchShifter.h:27:20: fatal error: ladspa.h: No such file or directory
##export VERSION=1.8.2
##export VERSIONDATE=20180520
#export VERSION=1.9.0
#export VERSIONDATE=20200910
#wl-showstatus --package-version
#export DEPENDANCIES=ladspa,vamp
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=pexports
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
#export DOWNLOADURL="http://breakfastquay.com/rubberband/"
##export DOWNLOADURL="https://breakfastquay.com/files/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://code.breakfastquay.com/attachments/download/34/rubberband-1.8.1.tar.bz2
#export DOWNLOADSOURCEURL=https://breakfastquay.com/files/releases/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
## fix building .dll instead of .so
#sed -i.bak -e 's/\(DYNAMIC_EXTENSION.*= *\)\.so/\1.dll/; s/$(DYNAMIC_LIBNAME)$(DYNAMIC_ABI_VERSION)/librubberband$(subst .,-,$(DYNAMIC_ABI_VERSION))$(DYNAMIC_EXTENSION)/g' Makefile.in
## avoid making lib/librubberband-jni.dll (version >= 1.8.2)
#sed -i.bak2 -e "s?\(\s*\)\(.*JNI_TARGET\)?\1#\2?" Makefile.in
#wl-showstatus configure &&
##autoreconf -f -i -I $MINGWPREFIX/share/aclocal &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
#wl-showstatus build-install DYNAMIC_EXTENSION=.dll &&
# make install &&
# mv -f $INSTALLPREFIX/lib/librubberband.dll $INSTALLPREFIX/bin/ &&
# rm -f $INSTALLPREFIX/lib/librubberband*.dll* &&
# strip $INSTALLPREFIX/bin/librubberband.dll &&
# pexports $INSTALLPREFIX/bin/librubberband.dll > librubberband.def &&
# dlltool -D $INSTALLPREFIX/bin/librubberband.dll -l $INSTALLPREFIX/lib/librubberband.dll.a -d librubberband.def &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Rubber Band Library"
export STATUS=
export URL=http://breakfastquay.com/rubberband/
export BASENAME=rubberband
export DESCRIPTION="Rubber Band Library is a high quality software library for audio time-stretching and pitch-shifting. It permits you to change the tempo and pitch of an audio stream or recording dynamically and independently of one another."
export CATEGORY=audio
export TYPE=library
#export VERSION=1.9.1
#export VERSIONDATE=20210312
#export VERSION=1.9.2
#export VERSIONDATE=20210608
#export VERSION=2.0.0
#export VERSIONDATE=20211023
#export VERSION=2.0.1
#export VERSIONDATE=20220120
#export VERSION=2.0.2
#export VERSIONDATE=20220126
#export VERSION=3.0.0
#export VERSIONDATE=20220708
#export VERSION=3.1.0
#export VERSIONDATE=20221001
#export VERSION=3.1.1
#export VERSIONDATE=20221022
export VERSION=3.1.2
export VERSIONDATE=20221203
wl-showstatus --package-version
export DEPENDANCIES=kissfft,libsamplerate,libsndfile,ladspa,vamp
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=meson,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://breakfastquay.com/rubberband/"
#export DOWNLOADURL="https://breakfastquay.com/files/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://code.breakfastquay.com/attachments/download/34/rubberband-1.8.1.tar.bz2
export DOWNLOADSOURCEURL=https://breakfastquay.com/files/releases/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix missing int64_t in src/StretchCalculator.h (version >= 2.0.0)
mv src/StretchCalculator.h src/StretchCalculator.h.bak &&
echo "#include <stdint.h>" > src/StretchCalculator.h &&
cat src/StretchCalculator.h.bak >> src/StretchCalculator.h
# fix missing srand48/drand48 in src/test/TestFFT.cpp (version >= 3.0.0)
mv src/test/TestFFT.cpp src/test/TestFFT.cpp.bak
cat > src/test/TestFFT.cpp << EOF
#define srand48(x) srand(x)
#define drand48() (((float) rand())/((float) RAND_MAX))
EOF
cat src/test/TestFFT.cpp.bak >> src/test/TestFFT.cpp
# fix meson.build (version >= 1.9.1)
patch -ulbf meson.build << EOF
@@ -358,3 +358,3 @@

-if system == 'windows'
+if system == 'windows_MSVC_ONLY'
   if get_option('no_shared')
EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dfft=kissfft -Dresampler=libsamplerate . build_both &&
 wl-showstatus build-install &&
 ninja -Cbuild_both install &&
 # manually create a copy of the static library with -static suffix
 cp -u $INSTALLPREFIX/lib/librubberband.a $INSTALLPREFIX/lib/librubberband-static.a &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



