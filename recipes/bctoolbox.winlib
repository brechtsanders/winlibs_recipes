export NAME="bctoolbox"
export STATUS=
export URL=https://github.com/BelledonneCommunications/bctoolbox
export BASENAME=bctoolbox
export DESCRIPTION="Utilities library used by Belledonne Communications softwares like belle-sip, mediastreamer2 and linphone."
export CATEGORY=development
export TYPE=library
#export VERSION=0.2.0
#export VERSIONDATE=20161013
#export VERSION=0.4.0
#export VERSIONDATE=20161119
####port.c:(.text+0xc8d): undefined reference to `bctbx_list_remove_link'
#export VERSION=0.5.0
#export VERSIONDATE=20170215
#export VERSION=0.5.1
#export VERSIONDATE=20170223
####src/utils/port.c:964:6: error: implicit declaration of function 'rand_s' [-Werror=implicit-function-declaration]
#export VERSION=0.6.0
#export VERSIONDATE=20170721
#export VERSION=4.3.0
#export VERSIONDATE=20191211
#export VERSION=4.3.1
#export VERSIONDATE=20200226
#export VERSION=4.3.2
#export VERSIONDATE=20200729
#export VERSION=4.3.3
#export VERSIONDATE=20201014
#export VERSION=4.4.0
#export VERSIONDATE=20200623
#export VERSION=4.4.4
#export VERSIONDATE=20201022
#export VERSION=4.4.6
#export VERSIONDATE=20201024
#export VERSION=4.4.7
#export VERSIONDATE=20201112
#export VERSION=4.4.8
#export VERSIONDATE=20201114
#export VERSION=4.4.9
#export VERSIONDATE=20201119
#export VERSION=4.4.10
#export VERSIONDATE=20201124
#export VERSION=4.4.12
#export VERSIONDATE=20201126
#export VERSION=4.4.13
#export VERSIONDATE=20201127
#export VERSION=4.4.16
#export VERSIONDATE=20201214
#export VERSION=4.4.17
#export VERSIONDATE=20201216
#export VERSION=4.4.18
#export VERSIONDATE=20201217
#export VERSION=4.4.19
#export VERSIONDATE=20201219
#export VERSION=4.4.21
#export VERSIONDATE=20201223
#export VERSION=4.4.22
#export VERSIONDATE=20210105
#export VERSION=4.4.24
#export VERSIONDATE=20210112
#export VERSION=4.4.25
#export VERSIONDATE=20210204
#export VERSION=4.4.26
#export VERSIONDATE=20210204
#export VERSION=4.4.27
#export VERSIONDATE=20210206
#export VERSION=4.4.28
#export VERSIONDATE=20210212
#export VERSION=4.4.29
#export VERSIONDATE=20210216
#export VERSION=4.4.31
#export VERSIONDATE=20210218
#export VERSION=4.4.32
#export VERSIONDATE=20210220
#export VERSION=4.4.33
#export VERSIONDATE=20210304
#export VERSION=4.4.34
#export VERSIONDATE=20210309
#export VERSION=4.5.0
#export VERSIONDATE=20210329
#export VERSION=4.5.1
#export VERSIONDATE=20210401
#export VERSION=4.5.3
#export VERSIONDATE=20210415
#export VERSION=4.5.7
#export VERSIONDATE=20210421
#export VERSION=4.5.10
#export VERSIONDATE=20210427
#export VERSION=4.5.13
#export VERSIONDATE=20210506
#export VERSION=4.5.14
#export VERSIONDATE=20210511
#export VERSION=4.5.15
#export VERSIONDATE=20210513
#export VERSION=4.5.20
#export VERSIONDATE=20210615
#export VERSION=4.5.22
#export VERSIONDATE=20210625
#export VERSION=5.0.0
#export VERSIONDATE=20210708
#export VERSION=5.0.3
#export VERSIONDATE=20210730
#export VERSION=5.0.5
#export VERSIONDATE=20210811
#export VERSION=5.0.8
#export VERSIONDATE=20210819
#export VERSION=5.0.11
#export VERSIONDATE=20210827
#export VERSION=5.0.13
#export VERSIONDATE=20210831
#export VERSION=5.0.15
#export VERSIONDATE=20210902
#export VERSION=5.0.16
#export VERSIONDATE=20210903
#export VERSION=5.0.18
#export VERSIONDATE=20210906
#export VERSION=5.0.22
#export VERSIONDATE=20210910
#export VERSION=5.0.23
#export VERSIONDATE=20210917
#export VERSION=5.0.24
#export VERSIONDATE=20210922
#export VERSION=5.0.26
#export VERSIONDATE=20210925
#export VERSION=5.0.27
#export VERSIONDATE=20210928
#export VERSION=5.0.28
#export VERSIONDATE=20210930
#export VERSION=5.0.32
#export VERSIONDATE=20211005
#export VERSION=5.0.35
#export VERSIONDATE=20211015
#export VERSION=5.0.37
#export VERSIONDATE=20211022
#export VERSION=5.0.66
#export VERSIONDATE=20220122
#export VERSION=5.0.67
#export VERSIONDATE=20220201
#export VERSION=5.0.68
#export VERSIONDATE=20220202
#export VERSION=5.0.70
#export VERSIONDATE=20220216
#export VERSION=5.0.71
#export VERSIONDATE=20220309
#export VERSION=5.1.0
#export VERSIONDATE=20220209
#export VERSION=5.1.2
#export VERSIONDATE=20220216
#export VERSION=5.1.3
#export VERSIONDATE=20220225
#export VERSION=5.1.10
#export VERSIONDATE=20220314
#export VERSION=5.1.12
#export VERSIONDATE=20220316
#export VERSION=5.1.17
#export VERSIONDATE=20220331
#export VERSION=5.1.31
#export VERSIONDATE=20220519
#export VERSION=5.1.32
#export VERSIONDATE=20220519
#export VERSION=5.1.36
#export VERSIONDATE=20220525
####src/parser.c:27:7: error: 'bctbx_escape' redeclared without dllimport attribute: previous dllimport ignored [-Werror=attributes]
#export VERSION=5.1.38
#export VERSIONDATE=20220530
#export VERSION=5.1.45
#export VERSIONDATE=20220620
#export VERSION=5.1.51
#export VERSIONDATE=20220728
#export VERSION=5.1.55
#export VERSIONDATE=20220805
#export VERSION=5.1.58
#export VERSIONDATE=20220908
#export VERSION=5.1.61
#export VERSIONDATE=20220916
#export VERSION=5.1.64
#export VERSIONDATE=20220930
#export VERSION=5.1.66
#export VERSIONDATE=20221021
#export VERSION=5.1.67
#export VERSIONDATE=20221027
#export VERSION=5.1.71
#export VERSIONDATE=20221119
####src/crypto/mbedtls.c:135:13: error: too few arguments to function 'mbedtls_pk_parse_key'
#export VERSION=5.1.72
#export VERSIONDATE=20221130
#export VERSION=5.2.0
#export VERSIONDATE=20221206
#export VERSION=5.2.2
#export VERSIONDATE=20221221
#export VERSION=5.2.4
#export VERSIONDATE=20221222
#export VERSION=5.2.6
#export VERSIONDATE=20221226
#export VERSION=5.2.9
#export VERSIONDATE=20230109
#export VERSION=5.2.11
#export VERSIONDATE=20230113
#export VERSION=5.2.12
#export VERSIONDATE=20230114
#export VERSION=5.2.16
#export VERSIONDATE=20230121
#export VERSION=5.2.21
#export VERSIONDATE=20230215
#export VERSION=5.2.22
#export VERSIONDATE=20230216
#export VERSION=5.2.23
#export VERSIONDATE=20230217
#export VERSION=5.2.25
#export VERSIONDATE=20230224
#export VERSION=5.2.27
#export VERSIONDATE=20230227
#export VERSION=5.2.28
#export VERSIONDATE=20230228
#export VERSION=5.2.29
#export VERSIONDATE=20230303
#export VERSION=5.2.30
#export VERSIONDATE=20230308
#export VERSION=5.2.32
#export VERSIONDATE=20230311
#export VERSION=5.2.37
#export VERSIONDATE=20230318
#export VERSION=5.2.38
#export VERSIONDATE=20230320
#export VERSION=5.2.42
#export VERSIONDATE=20230328
#export VERSION=5.2.45
#export VERSIONDATE=20230331
#export VERSION=5.2.49
#export VERSIONDATE=20230406
#export VERSION=5.2.51
#export VERSIONDATE=20230414
#export VERSION=5.2.52
#export VERSIONDATE=20230426
#export VERSION=5.2.53
#export VERSIONDATE=20230428
#export VERSION=5.2.54
#export VERSIONDATE=20230503
#export VERSION=5.2.57
#export VERSIONDATE=20230506
#export VERSION=5.2.58
#export VERSIONDATE=20230510
#export VERSION=5.2.62
#export VERSIONDATE=20230523
#export VERSION=5.2.63
#export VERSIONDATE=20230525
#export VERSION=5.2.64
#export VERSIONDATE=20230526
#export VERSION=5.2.70
#export VERSIONDATE=20230610
#export VERSION=5.2.71
#export VERSIONDATE=20230613
#export VERSION=5.2.73
#export VERSIONDATE=20230613
#export VERSION=5.2.83
#export VERSIONDATE=20230630
#export VERSION=5.2.86
#export VERSIONDATE=20230704
#export VERSION=5.2.89
#export VERSIONDATE=20230712
#export VERSION=5.2.91
#export VERSIONDATE=20230719
#export VERSION=5.2.93
#export VERSIONDATE=20230725
#export VERSION=5.2.94
#export VERSIONDATE=20230729
#export VERSION=5.2.95
#export VERSIONDATE=20230810
#export VERSION=5.2.97
#export VERSIONDATE=20230822
#export VERSION=5.2.98
#export VERSIONDATE=20230824
#export VERSION=5.2.100
#export VERSIONDATE=20230905
#export VERSION=5.2.102
#export VERSIONDATE=20230908
#export VERSION=5.2.105
#export VERSIONDATE=20230919
#export VERSION=5.2.106
#export VERSIONDATE=20230920
#export VERSION=5.2.107
#export VERSIONDATE=20230922
#export VERSION=5.2.108
#export VERSIONDATE=20230926
#export VERSION=5.2.109
#export VERSIONDATE=20230929
#export VERSION=5.2.111
#export VERSIONDATE=20231031
#export VERSION=5.2.112
#export VERSIONDATE=20231208
##export DEPENDENCIES=
#export DEPENDENCIES=polarssl
##export DEPENDENCIES=mbedtls
#export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=cmake
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=5.3.0
#export VERSIONDATE=20231221
#export VERSION=5.3.1
#export VERSIONDATE=20231222
#export VERSION=5.3.4
#export VERSIONDATE=20231226
#export VERSION=5.3.5
#export VERSIONDATE=20231229
#export VERSION=5.3.6
#export VERSIONDATE=20240103
#export VERSION=5.3.7
#export VERSIONDATE=20240105
#export VERSION=5.3.10
#export VERSIONDATE=20240116
#export VERSION=5.3.11
#export VERSIONDATE=20240123
#export VERSION=5.3.12
#export VERSIONDATE=20240123
#export VERSION=5.3.13
#export VERSIONDATE=20240125
export VERSION=5.3.15
export VERSIONDATE=20240202
wl-showstatus --package-version
export DEPENDENCIES=bcunit,polarssl
#export DEPENDENCIES=bcunit,mbedtls
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/BelledonneCommunications/bctoolbox/releases"
export DOWNLOADURL="https://github.com/BelledonneCommunications/bctoolbox/tags"
#export DOWNLOADURL="https://gitlab.linphone.org/BC/public/bctoolbox/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/BelledonneCommunications/bctoolbox/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/BelledonneCommunications/bctoolbox/archive/refs/tags/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://gitlab.linphone.org/BC/public/bctoolbox/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix redefinition of ssize_t
##sed -i.bak -e "s?^typedef long ssize_t;?//&?; s?#define strtok_r strtok_s?#define strtok_r(_s,_sep,_lasts) (*(_lasts) = strtok((_s), (_sep)))?" include/bctoolbox/port.h
#sed -i.bak -e "s?^typedef long ssize_t;?//&?; s?^#define strtok_r strtok_s?//&?" include/bctoolbox/port.h
#sed -i.bak2 -e "s?^#ifdef BCTBX_EXPORTS?#if defined(BCTBX_EXPORTS) || defined(bctoolbox_EXPORT)?" include/bctoolbox/port.h
# fix include/bctoolbox/port.h (version >= 5.3.0)
patch -ulbf include/bctoolbox/port.h << EOF
@@ -249,3 +249,3 @@
 #else
-#ifdef BCTBX_EXPORTS
+#if defined(BCTBX_EXPORTS) || defined(bctoolbox_EXPORT)
 #define BCTBX_PUBLIC __declspec(dllexport)
@@ -263,4 +263,7 @@

-#define strtok_r strtok_s
+//#define strtok_r strtok_s

+#ifdef __MINGW32__
+#include <stdint.h>
+#else
 typedef unsigned __int64 uint64_t;
@@ -273,2 +276,3 @@
 typedef long ssize_t;
+#endif
 #else
EOF
# fix missing AI_NUMERICSERV/_access and exports of __bctbx_* in src/utils/port.c
mv src/utils/port.c src/utils/port.c.bak &&
echo "#define _WIN32_WINNT 0x0600" > src/utils/port.c &&
echo "#include <io.h>" >> src/utils/port.c &&
sed -e "s/_MSC_VER/_WIN32/" src/utils/port.c.bak >> src/utils/port.c
#sed -e "s/_MSC_VER/_WIN32/; s/^[^ ].*__bctbx_/BCTBX_PUBLIC &/" src/utils/port.c.bak >> src/utils/port.c
## fix exports in src/parser.c (version >= 0.6.0 <= 4.4.19)
#patch -ulbf src/parser.c << EOF
#@@ -27 +27 @@
#-char* bctbx_escape(const char* buff, const bctbx_noescape_rules_t noescapes) {
#+BCTBX_PUBLIC char* bctbx_escape(const char* buff, const bctbx_noescape_rules_t noescapes) {
#@@ -52 +52 @@
#-void bctbx_noescape_rules_add_list(bctbx_noescape_rules_t noescapes, const char *allowed) {
#+BCTBX_PUBLIC void bctbx_noescape_rules_add_list(bctbx_noescape_rules_t noescapes, const char *allowed) {
#@@ -59 +59 @@
#-void bctbx_noescape_rules_add_range(bctbx_noescape_rules_t noescapes, char first, char last) {
#+BCTBX_PUBLIC void bctbx_noescape_rules_add_range(bctbx_noescape_rules_t noescapes, char first, char last) {
#@@ -63 +63 @@
#-void bctbx_noescape_rules_add_alfanums(bctbx_noescape_rules_t noescapes) {
#+BCTBX_PUBLIC void bctbx_noescape_rules_add_alfanums(bctbx_noescape_rules_t noescapes) {
#@@ -73 +73 @@
#-size_t bctbx_get_char (const char*a, char*out) {
#+BCTBX_PUBLIC size_t bctbx_get_char (const char*a, char*out) {
#@@ -85 +85 @@
#-char* bctbx_unescaped_string(const char* buff) {
#+BCTBX_PUBLIC char* bctbx_unescaped_string(const char* buff) {
#EOF
# disable encryption cleanup
sed -i.bak -e "s?bctbx_clean?//&?" src/vfs/vfs.c
# fix src/utils/win_utils.cc (version >= 5.2.0)
patch -ulbf src/utils/win_utils.cc << EOF
@@ -96,3 +96,3 @@
        if (SymInitialize(process, NULL, TRUE) == FALSE) {
-               bctbx_error(__FUNCTION__ ": Failed to call SymInitialize.");
+               bctbx_error("getStackTrace: Failed to call SymInitialize.");
                return std::vector<StackFrame>();
@@ -151,3 +151,3 @@
                PIMAGEHLP_SYMBOL symbol = (PIMAGEHLP_SYMBOL)symbolBuffer;
-               symbol->SizeOfStruct = (sizeof IMAGEHLP_SYMBOL) + 255;
+               symbol->SizeOfStruct = sizeof(IMAGEHLP_SYMBOL) + 255;
                symbol->MaxNameLength = 254;
@@ -207,2 +207,5 @@
 static std::terminate_handler gOldTerminateHandler = NULL;
+#ifdef __MINGW32__
+#define _crt_signal_t __p_sig_fn_t
+#endif
 static _crt_signal_t gOldABRT = NULL;
EOF
# fix src/crypto/polarssl.c (version >= 5.2.0)
patch -ulbf src/crypto/polarssl.c << EOF
@@ -919,3 +919,3 @@

-int32_t bctbx_ssl_get_dtls_srtp_key_material(bctbx_ssl_context_t *ssl_ctx, char *output, size_t *output_length) {
+int32_t bctbx_ssl_get_dtls_srtp_key_material(bctbx_ssl_config_t *ssl_ctx, uint8_t *output, size_t *output_length) {
        *output_length = 0;
@@ -1088,3 +1088,3 @@

-int32_t bctbx_ssl_config_set_callback_cli_cert(bctbx_ssl_config_t *ssl_config, int(*callback_function)(void *, bctbx_ssl_context_t *, unsigned char *, size_t), void *callback_data) {
+int32_t bctbx_ssl_config_set_callback_cli_cert(bctbx_ssl_config_t *ssl_config, int(*callback_function)(void *, bctbx_ssl_context_t *, const bctbx_list_t *), void *callback_data) {
        if (ssl_config != NULL) {
EOF
# fix issue exporting symbol bcStandardVfs in src/vfs/vfs_standard.c (version >= 5.3.1)
patch -ulbf src/vfs/vfs_standard.c << EOF
@@ -49,3 +49,3 @@

-bctbx_vfs_t bcStandardVfs = {
+BCTBX_PUBLIC bctbx_vfs_t bcStandardVfs = {
     "bctbx_vfs", /* vfsName */
EOF
# fix include/bctoolbox/vfs_encrypted.hh (version >= 5.3.1)
patch -ulbf include/bctoolbox/vfs_encrypted.hh << EOF
@@ -77,3 +77,3 @@
  */
-const std::string encryptionSuiteString(const EncryptionSuite suite) noexcept;
+BCTBX_PUBLIC const std::string encryptionSuiteString(const EncryptionSuite suite) noexcept;

@@ -92,3 +92,3 @@
 /** Store in the bctbx_vfs_file_t userData field an object specific to encryption */
-class VfsEncryption {
+class BCTBX_PUBLIC VfsEncryption {
        /* Class properties and method */
EOF
# fix exported symbols in include/bctoolbox/crypto.hh (version >= 5.3.1)
patch -ulbf include/bctoolbox/crypto.hh << EOF
@@ -39,3 +39,3 @@
  */
-class RNG {
+class BCTBX_PUBLIC RNG {
 public:
@@ -93,3 +93,3 @@
  */
-std::string encodeBase64(const std::vector<uint8_t> &input);
+BCTBX_PUBLIC std::string encodeBase64(const std::vector<uint8_t> &input);

@@ -101,3 +101,3 @@
  */
-std::vector<uint8_t> decodeBase64(const std::string &input);
+BCTBX_PUBLIC std::vector<uint8_t> decodeBase64(const std::string &input);

@@ -322,3 +322,3 @@
  */
-int AES_key_wrap(const std::vector<uint8_t> &plaintext,
+BCTBX_PUBLIC int AES_key_wrap(const std::vector<uint8_t> &plaintext,
                  const std::vector<uint8_t> &key,
@@ -339,3 +339,3 @@
  */
-int AES_key_unwrap(const std::vector<uint8_t> &ciphertext,
+BCTBX_PUBLIC int AES_key_unwrap(const std::vector<uint8_t> &ciphertext,
                    const std::vector<uint8_t> &key,
EOF
sed -i.bak -e "s/^template <>$/&\nBCTBX_PUBLIC/" include/bctoolbox/crypto.hh
## don't abort on warnings
#sed -i.bak -e "s/-Wall//" CMakeLists.txt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_STATIC:BOOL=ON -DENABLE_POLARSSL=OFF -DENABLE_MBEDTLS=ON -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_STATIC:BOOL=OFF -DENABLE_POLARSSL=OFF -DENABLE_MBEDTLS=ON -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
# fix CMakeLists.txt (version >= 4.5.3)
patch -ulbf CMakeLists.txt << EOF
@@ -139,6 +139,2 @@
 set(BCTOOLBOX_CPPFLAGS )
-if(ENABLE_STATIC)
-       set(BCTBX_STATIC 1)
-       list(APPEND BCTOOLBOX_CPPFLAGS "-DBCTBX_STATIC")
-endif()

EOF
# avoid invalid compiler flags in CMakeLists.txt (version >= 5.2.0)
sed -i.bak2 -e "s?add_definitions(-EHa)\|list(APPEND STRICT_OPTIONS_CXX \"/EHa\")?#&?g" src/CMakeLists.txt
# fix IMPORTED_LOCATION not set errors in cmake/FindMbedTLS.cmake (version >= 5.3.0)
sed -i.bak -e "s/WIN32/MSVC/" cmake/FindMbedTLS.cmake
#mkdir -p build_win &&
# wl-showstatus configure &&
# #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=ON -DENABLE_STATIC:BOOL=ON -DENABLE_POLARSSL=OFF -DENABLE_MBEDTLS=ON -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -DENABLE_STRICT:BOOL=OFF -S. -Bbuild_win &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=ON -DENABLE_STATIC:BOOL=OFF -DENABLE_POLARSSL=OFF -DENABLE_MBEDTLS=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -DENABLE_STRICT:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DBCTBX_EXPORTS" -DCMAKE_CXX_FLAGS:STRING="-DBCTBX_EXPORTS" -S. -Bbuild_win &&
# #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=ON -DENABLE_STATIC:BOOL=ON -DENABLE_POLARSSL=OFF -DENABLE_MBEDTLS=ON -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -DENABLE_STRICT:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DBCTBX_EXPORTS" -DCMAKE_CXX_FLAGS:STRING="-DBCTBX_EXPORTS" -S. -Bbuild_win &&
# #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=ON -DENABLE_STATIC:BOOL=ON -DENABLE_POLARSSL=ON -DENABLE_MBEDTLS=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -DENABLE_STRICT:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DBCTBX_EXPORTS" -DCMAKE_CXX_FLAGS:STRING="-DBCTBX_EXPORTS" -S. -Bbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=OFF -DENABLE_STATIC:BOOL=ON -DENABLE_POLARSSL=OFF -DENABLE_MBEDTLS=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -DENABLE_STRICT:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DBCTBX_STATIC" -DCMAKE_CXX_FLAGS:STRING="-DBCTBX_STATIC" -S. -Bbuild_static &&
# #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=OFF -DENABLE_STATIC:BOOL=ON -DENABLE_POLARSSL=ON -DENABLE_MBEDTLS=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -DENABLE_STRICT:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DBCTBX_STATIC" -DCMAKE_CXX_FLAGS:STRING="-DBCTBX_STATIC" -S. -Bbuild_static &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=OFF -DENABLE_STATIC:BOOL=ON -DENABLE_POLARSSL=ON -DENABLE_MBEDTLS=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=ON -DENABLE_STRICT:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DBCTBX_STATIC" -DCMAKE_CXX_FLAGS:STRING="-DBCTBX_STATIC" -S. -Bbuild_static &&
# #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=OFF -DENABLE_STATIC:BOOL=ON -DENABLE_POLARSSL=OFF -DENABLE_MBEDTLS=ON -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -DENABLE_STRICT:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DBCTBX_STATIC" -DCMAKE_CXX_FLAGS:STRING="-DBCTBX_STATIC" -S. -Bbuild_static &&
# wl-showstatus configure &&
# #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=ON -DENABLE_STATIC:BOOL=OFF -DENABLE_POLARSSL=OFF -DENABLE_MBEDTLS=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -DENABLE_STRICT:BOOL=OFF -S. -Bbuild_shared &&
# #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=ON -DENABLE_STATIC:BOOL=OFF -DENABLE_POLARSSL=ON -DENABLE_MBEDTLS=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -DENABLE_STRICT:BOOL=OFF -S. -Bbuild_shared &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=ON -DENABLE_STATIC:BOOL=OFF -DENABLE_POLARSSL=ON -DENABLE_MBEDTLS=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=ON -DENABLE_STRICT:BOOL=OFF -S. -Bbuild_shared &&
# #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SHARED:BOOL=ON -DENABLE_STATIC:BOOL=OFF -DENABLE_POLARSSL=OFF -DENABLE_MBEDTLS=ON -DENABLE_TESTS:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=OFF -DENABLE_STRICT:BOOL=OFF -S. -Bbuild_shared &&
# # fix missing link libraries
# sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -ldbghelp/" build_shared/build.ninja &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_MBEDTLS=ON -DENABLE_STRICT:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=ON -DENABLE_UNIT_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DBCTBX_STATIC" -DCMAKE_CXX_FLAGS:STRING="-DBCTBX_STATIC -fpermissive" -S. -Bbuild_static &&
 #-DENABLE_POLARSSL=OFF -DENABLE_MBEDTLS=ON 
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_MBEDTLS=ON -DENABLE_STRICT:BOOL=OFF -DENABLE_TESTS_COMPONENT:BOOL=ON -DENABLE_UNIT_TESTS:BOOL=OFF -S. -Bbuild_shared -DCMAKE_CXX_FLAGS:STRING="-fpermissive" &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -ldbghelp/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: build with encryption support via mbedtls



