export NAME="libmicrodns"
export STATUS=
export URL=https://github.com/videolabs/libmicrodns
export BASENAME=libmicrodns
export DESCRIPTION="Minimal mDNS resolver (and announcer) cross-platform library "
export CATEGORY=communication
export TYPE=library
export VERSION=0.2.0
export VERSIONDATE=20201207
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=meson,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/videolabs/libmicrodns/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/videolabs/libmicrodns/releases/download/$VERSION/microdns-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/microdns-$VERSION.tar.xz
cd microdns-$VERSION
# fix src/mdns.c (version >= 0.2.0)
patch -ulbf src/mdns.c << EOF
@@ -242,4 +242,4 @@
             intf->OperStatus == IfOperStatusUp &&
-            ((family == AF_INET && intf->Ipv4Enabled) ||
-            (family == AF_INET6 && intf->Ipv6Enabled));
+            ((family == AF_INET && (intf->Flags | IP_ADAPTER_IPV4_ENABLED)) ||
+            (family == AF_INET6 && (intf->Flags | IP_ADAPTER_IPV6_ENABLED)));
 }
EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dexamples=disabled -Dfuzzing=false -Dtests=disabled . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf microdns-$VERSION



