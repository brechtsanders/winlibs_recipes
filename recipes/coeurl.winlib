export NAME="coeurl"
export STATUS=
export URL=https://nheko.im/nheko-reborn/coeurl
export BASENAME=coeurl
export DESCRIPTION="A simple async wrapper around CURL for C++"
export CATEGORY=communication
export TYPE=library
export VERSION=0.3.1
export VERSIONDATE=20240801
wl-showstatus --package-version
export DEPENDENCIES=libcurl,libevent,spdlog
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://nheko.im/nheko-reborn/coeurl/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://nheko.im/nheko-reborn/coeurl/-/archive/v$VERSION/$BASENAME-v$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-v$VERSION.tar.bz2
cd $BASENAME-v$VERSION
# fix meson.build (version >= 0.3.1)
patch -ulbf meson.build << EOF
@@ -15,3 +15,3 @@
 libevent_dep = dependency('libevent_core', required: get_option('wrap_mode') == 'nofallback',)
-if target_machine.system() == 'windows'
+if target_machine.system() == 'msvc'
   libevent_threads_dep = dependency('libevent_windows', required: get_option('wrap_mode') == 'nofallback',)
@@ -89,3 +89,3 @@
 if target_machine.system() == 'windows'
-  cc = meson.get_compiler('c')
+  cc = meson.get_compiler('cpp')
   deps += [
EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dexamples=false -Dtests=false . build_both &&
 wl-showstatus build-install &&
 ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-v$VERSION



