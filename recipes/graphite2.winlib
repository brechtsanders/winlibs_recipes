export NAME="Graphite2"
export STATUS=
#export URL=http://projects.palaso.org/projects/graphitedev
export URL=https://github.com/silnrsi/graphite
export BASENAME=graphite2
export DESCRIPTION="Graphite is a project to provide cross-platform rendering for complex writing systems."
export CATEGORY=graphics
export TYPE=library
#export VERSION=1.2.0
#export VERSIONDATE=20130112
#export VERSION=1.2.1
#export VERSIONDATE=20130301
#export VERSION=1.2.2
#export VERSIONDATE=20130524
#export VERSION=1.2.3
#export VERSIONDATE=20130611
#export VERSION=1.2.4
#export VERSIONDATE=20131129
#export VERSION=1.3.0
#export VERSIONDATE=20150811
#export VERSION=1.3.1
#export VERSIONDATE=20150831
#export VERSION=1.3.2
#export VERSIONDATE=20150909
#export VERSION=1.3.3
#export VERSIONDATE=20150922
#export VERSION=1.3.4
#export VERSIONDATE=20230613
#export VERSION=1.3.5
#export VERSIONDATE=20160222
#export VERSION=1.3.6
#export VERSIONDATE=20160229
#export VERSION=1.3.7
#export VERSIONDATE=20160315
#export VERSION=1.3.8
#export VERSIONDATE=20160406
#export VERSION=1.3.9
#export VERSIONDATE=20161111
#export VERSION=1.3.10
#export VERSIONDATE=20170506
#export VERSION=1.3.11
#export VERSIONDATE=20180305
#export VERSION=1.3.12
#export VERSIONDATE=20180816
#export VERSION=1.3.13
#export VERSIONDATE=20181220
export VERSION=1.3.14
export VERSIONDATE=20200401
####make: *** No rule to make target 'src/libgraphite2.a'.  Stop.
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,pexports
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://projects.palaso.org/projects/graphitedev/files"
export DOWNLOADURL="https://github.com/silnrsi/graphite/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://projects.palaso.org/attachments/download/298/graphite2-1.2.0.tgz
#export DOWNLOADSOURCEURL=http://projects.palaso.org/attachments/download/361/graphite2-1.2.1.tgz
#export DOWNLOADSOURCEURL=http://projects.palaso.org/attachments/download/378/graphite2-1.2.2.tgz
#export DOWNLOADSOURCEURL=http://projects.palaso.org/attachments/download/384/graphite2-1.2.3.tgz
#export DOWNLOADSOURCEURL=http://projects.palaso.org/attachments/download/407/graphite2-1.2.4.tgz
#export DOWNLOADSOURCEURL=http://projects.palaso.org/attachments/download/427/graphite2-1.3.0.tgz
#export DOWNLOADSOURCEURL=http://projects.palaso.org/attachments/download/430/graphite2-1.3.1.tgz
#export DOWNLOADSOURCEURL=http://projects.palaso.org/attachments/download/434/graphite2-1.3.2.tgz
#export DOWNLOADSOURCEURL=http://projects.palaso.org/attachments/download/436/graphite2-1.3.3.tgz
#export DOWNLOADSOURCEURL=https://github.com/silnrsi/graphite/releases/download/$VERSION/$BASENAME-$VERSION.tgz
#export DOWNLOADSOURCEURL=https://github.com/silnrsi/graphite/releases/download/$VERSION/graphite-$VERSION.tgz
export DOWNLOADSOURCEURL=https://github.com/silnrsi/graphite/releases/download/$VERSION/$BASENAME-$VERSION.tgz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tgz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/graphite-$VERSION.tgz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tgz
cd $BASENAME-$VERSION
## fix the way functions are exported/imported in include/graphite2/Types.h
#patch -ulbf include/graphite2/Types.h << EOF
#--- include/graphite2/Types.h  2012-09-21 10:39:40 +0200
#+++ include/graphite2/Types.h  2013-01-12 19:04:38 +0100
#@@ -47,3 +47,5 @@
#   #elif defined GRAPHITE2_EXPORTING
#-    #if defined __GNUC__
#+    #if defined __MINGW32__
#+      #define GR2_API    __attribute__((dllexport, stdcall))
#+    #elif defined __GNUC__
#       #define GR2_API    __attribute__((dllexport))
#@@ -53,3 +55,5 @@
#   #else
#-    #if defined __GNUC__
#+    #if defined __MINGW32__
#+      #define GR2_API    __attribute__((dllimport, stdcall))
#+    #elif defined __GNUC__
#       #define GR2_API    __attribute__((dllimport))
#EOF
## create libgraphite2.la manually
#mkdir -p $INSTALLPREFIX/lib
#cat > $INSTALLPREFIX/lib/libgraphite2.la << EOF
## -llibgraphite2 - a libtool library file
## Generated by hand - GNU libtool 0.0.0
#dlname='../bin/libgraphite2.dll'
#library_names='libgraphite2.dll.a'
#old_library='libgraphite2.a'
#dependency_libs=''
#current=0
#age=0
#revision=0
#installed=yes
#shouldnotlink=no
#dlopen=''
#dlpreopen=''
#libdir='$INSTALLPREFIX/lib'
#EOF
#mv src/CMakeLists.txt src/CMakeLists.txt.shared &&
# sed -e "s/ SHARED//" src/CMakeLists.txt.shared > src/CMakeLists.txt &&
#wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DGRAPHITE2_NTRACING:BOOL=ON . &&
# wl-showstatus build-install &&
# ( make install/strip || make install ) &&
# cp -f src/CMakeLists.txt.shared src/CMakeLists.txt &&
# rm -f CMakeCache.txt &&
## build both static and shared version
#mkdir -p build_static build_shared &&
# cd build_shared && &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_FLAGS:STRING="-DGRAPHITE2_EXPORTING" -DGRAPHITE2_NTRACING:BOOL=ON .. &&
# cd .. &&
# ( make -j1 -Cbuild_shared all install/strip || make -j1 -Cbuild_shared all install ) &&
# mv src/CMakeLists.txt src/CMakeLists.txt.shared &&
# sed -e "s/ SHARED//; s/GRAPHITE2_EXPORTING/GRAPHITE2_STATIC/" src/CMakeLists.txt.shared > src/CMakeLists.txt &&
# cd build_static && &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_FLAGS:STRING="-DGRAPHITE2_STATIC" -DGRAPHITE2_NTRACING:BOOL=ON .. &&
# cd .. &&
# #make -Cbuild_static -j1 all install -i &&
# #ls $INSTALLPREFIX/lib/libgraphite2.a &&
# #if [ -f $INSTALLPREFIX/lib/libgraphite2.dll.a -a ! -f $INSTALLPREFIX/lib/libgraphite2.a ]; then
# # mv -f $INSTALLPREFIX/lib/libgraphite2.dll.a $INSTALLPREFIX/lib/libgraphite2.a
# #fi &&
# ( make -Cbuild_static -f src/CMakeFiles/graphite2.dir/build.make src/libgraphite2.a || make -Cbuild_static ) &&
# cp -f build_static/src/libgraphite2.a $INSTALLPREFIX/lib/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
## fix undefined MAX_NAME_LEN and redefinition of DELETE in src/inc/Machine.h (version >= 1.2.4)
#mv src/inc/Machine.h src/inc/Machine.h.bak
#cat > src/inc/Machine.h << EOF
##include <windows.h>
##undef DELETE
#EOF
#sed -e "s/\[MAX_NAME_LEN\]/[32]/" src/inc/Machine.h.bak >> src/inc/Machine.h
## fix redefinition of DELETE in src/Collider.cpp (version >= 1.3.1)
#mv src/Collider.cpp src/Collider.cpp.bak
#cat > src/Collider.cpp << EOF
##include <windows.h>
##undef DELETE
#EOF
#cat src/Collider.cpp.bak >> src/Collider.cpp
# remove -I../../include from graphite2.pc
sed -i.bak -e "s/\(Cflags: \)-I\${includedir}//" graphite2.pc.in
## first build shared version, then build static library
#wl-showstatus configure &&
# #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DGRAPHITE2_NTRACING:BOOL=ON &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DGRAPHITE2_NTRACING:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe &&
# wl-showstatus build-install &&
# ( make || make -j1 ) &&
# wl-showstatus build-install &&
# ( make -j1 all install/strip || make -j1 all install ) &&
# #if [ -f $INSTALLPREFIX/lib/libgraphite2.dll.a -a ! -f $INSTALLPREFIX/lib/libgraphite2.a ]; then
# # mv -f $INSTALLPREFIX/lib/libgraphite2.dll.a $INSTALLPREFIX/lib/libgraphite2.a
# #fi &&
# rm $INSTALLPREFIX/lib/libgraphite2*.a &&
# pexports src/libgraphite2.dll > libgraphite2.def &&
# #pexports /custombuilt32/bin/libgraphite2.dll | grep -v "^\(LIBRARY\|EXPORTS\)" | sed -e "s/^\(.*\)$/_\1 = \1/" >> libgraphite2.def &&
# #pexports /custombuilt32/bin/libgraphite2.dll | grep -v "^\(LIBRARY\|EXPORTS\)" | sed -e "s/^\(.*\)$/_imp__\1 = \1/" >> libgraphite2.def &&
# #pexports /custombuilt32/bin/libgraphite2.dll | grep -v "^\(LIBRARY\|EXPORTS\)" | sed -e "s/^\(.*\)$/__imp__\1 = \1/" >> libgraphite2.def &&
# dlltool -d libgraphite2.def -D src/libgraphite2.dll -l $INSTALLPREFIX/lib/libgraphite2.dll.a &&
# rm -f CMakeCache.txt &&
# mv -f src/CMakeLists.txt src/CMakeLists.txt.shared &&
# sed -e "s/ SHARED//; s/GRAPHITE2_EXPORTING/GRAPHITE2_STATIC/" src/CMakeLists.txt.shared > src/CMakeLists.txt &&
# wl-showstatus configure &&
# #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DGRAPHITE2_NTRACING:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-DGRAPHITE2_STATIC" &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DGRAPHITE2_NTRACING:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-DGRAPHITE2_STATIC" &&
# wl-showstatus build-install &&
# #( make -j1 all install/strip || make -j1 all install ) &&
# ## build only static library (version <= 1.3.10)
# #make -f src/CMakeFiles/graphite2.dir/build.make src/libgraphite2.a &&
# #cp -f src/libgraphite2.a $INSTALLPREFIX/lib/ &&
# # build only static library (version >= 1.3.11)
# rm -f src/libgraphite2.dll* &&
# make -f src/CMakeFiles/graphite2.dir/build.make src/libgraphite2.dll &&
# cp -f src/libgraphite2.dll.a $INSTALLPREFIX/lib/libgraphite2.a &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf graphite-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DGRAPHITE2_NTRACING:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_C_FLAGS:STRING="-DGRAPHITE2_STATIC" -DCMAKE_CXX_FLAGS:STRING="-DGRAPHITE2_STATIC" -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DGRAPHITE2_NTRACING:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ( ninja -Cbuild_static install/strip || (
  ninja -Cbuild_static src/libgraphite2.a &&
  mkdir -p $INSTALLPREFIX/lib &&
  cp -f build_static/src/libgraphite2.a $INSTALLPREFIX/lib/
 )) &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



