export NAME="plutosvg"
export STATUS=
export URL=https://github.com/libsdl-org/plutosvg
export BASENAME=plutosvg
export DESCRIPTION="PlutoSVG is a compact and efficient SVG rendering library written in C. It is specifically designed for parsing and rendering SVG documents embedded in OpenType fonts, providing an optimal balance between speed and minimal memory usage. It is also suitable for rendering scalable icons."
export CATEGORY=graphics,fileformat
export TYPE=library
export VERSION=0.0.6
export VERSIONDATE=20250423
wl-showstatus --package-version
export DEPENDENCIES=freetype2
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/libsdl-org/plutosvg/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/libsdl-org/plutosvg/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure-static &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPLUTOSVG_ENABLE_FREETYPE:BOOL=ON -DPLUTOSVG_BUILD_EXAMPLES:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure-shared &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPLUTOSVG_ENABLE_FREETYPE:BOOL=ON -DPLUTOSVG_BUILD_EXAMPLES:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install-static &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install-shared &&
# ninja -Cbuild_shared install/strip &&
#    echo OK
mkdir -p build_both &&
 wl-showstatus configure &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dfreetype=enabled -Dexamples=disabled -Dtests=disabled . build_both &&
 wl-showstatus build-install &&
 ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



