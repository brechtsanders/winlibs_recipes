export NAME="DuckX"
export STATUS=
export URL=https://github.com/amiremohamadi/DuckX
export BASENAME=duckx
export DESCRIPTION="C++ library for creating and updating Microsoft Word (.docx) files."
export CATEGORY=fileformat
export TYPE=library
#export VERSION=1.0.0
#export VERSIONDATE=20191026
export VERSION=1.2.2
export VERSIONDATE=20191106
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/amiremohamadi/DuckX/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/amiremohamadi/DuckX/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/duckx -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_SAMPLE:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/duckx -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_SAMPLE:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# mkdir -p $INSTALLPREFIX/lib &&
# cp -f build_static/*.a $INSTALLPREFIX/lib/ &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# strip build_shared/*.dll &&
# mkdir -p $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# cp -f build_shared/*.a $INSTALLPREFIX/lib/ &&
# cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/duckx -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_SAMPLE:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/duckx -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_SAMPLE:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 mkdir -p $INSTALLPREFIX/lib &&
 cp -f build_static/*.a $INSTALLPREFIX/lib/ &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 strip build_shared/*.dll &&
 mkdir -p $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f build_shared/*.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####include/zip.h conflicts with libzip and include/pugixml.hpp conflicts with pugixml => install in separate folder



