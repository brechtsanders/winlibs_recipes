export NAME="Drogon"
export STATUS=
export URL=https://github.com/an-tao/drogon
export BASENAME=drogon
export DESCRIPTION="Drogon: A C++14/17 based HTTP web application framework running on Linux/macOS/Unix"
export CATEGORY=communication
export TYPE=library
#export VERSION=1.0.0-beta13
#export VERSIONDATE=20200127
#export VERSION=1.0.0-beta14
#export VERSIONDATE=20200218
#export VERSION=1.0.0
#export VERSIONDATE=20200927
#export VERSION=1.1.0
#export VERSIONDATE=20201031
#export VERSION=1.2.0
#export VERSIONDATE=20201212
#export VERSION=1.3.0
#export VERSIONDATE=20210117
#export VERSION=1.4.0
#export VERSIONDATE=20210306
#export VERSION=1.4.1
#export VERSIONDATE=20210307
#export VERSION=1.5.0
#export VERSIONDATE=20210410
#export VERSION=1.5.1
#export VERSIONDATE=20210410
#export VERSION=1.6.0
#export VERSIONDATE=20210515
#export VERSION=1.7.0
#export VERSIONDATE=20210618
#export VERSION=1.7.1
#export VERSIONDATE=20210624
####CMake Error at drogon_ctl/CMakeLists.txt:29 (add_custom_command): Error evaluating generator expression: $<TARGET_FILE:trantor> No target "trantor"
#export VERSION=1.7.2
#export VERSIONDATE=20210824
#export VERSION=1.7.3
#export VERSIONDATE=20211017
#export VERSION=1.7.4
#export VERSIONDATE=20211211
#export VERSION=1.7.5
#export VERSIONDATE=20220220
#export VERSION=1.8.0
#export VERSIONDATE=20220901
#export VERSION=1.8.1
#export VERSIONDATE=20220926
#export VERSION=1.8.2
#export VERSIONDATE=20221111
#export VERSION=1.8.3
#export VERSIONDATE=20230123
#export VERSION=1.8.4
#export VERSIONDATE=20230321
#export VERSION=1.8.5
#export VERSIONDATE=20230820
#export VERSION=1.8.6
#export VERSIONDATE=20230823
#export VERSION=1.8.7
#export VERSIONDATE=20230924
#export VERSION=1.9.0
#export VERSIONDATE=20231029
#export VERSION=1.9.1
#export VERSIONDATE=20231127
#export VERSION=1.9.2
#export VERSIONDATE=20240118
#export VERSION=1.9.3
#export VERSIONDATE=20240209
export VERSION=1.9.4
export VERSIONDATE=20240505
wl-showstatus --package-version
#export DEPENDENCIES=boost,zlib,brotli,jsoncpp,trantor,sqlite3,postgresql
#export DEPENDENCIES=boost,zlib,brotli,jsoncpp,trantor,sqlite3,postgresql,mariadb-client
export DEPENDENCIES=boost,zlib,brotli,jsoncpp,trantor,sqlite3,postgresql,mariadb-client,yaml-cpp
export OPTIONALDEPENDENCIES=hiredis
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/an-tao/drogon/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/an-tao/drogon/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix missing trantor dependancy in drogon_ctl/CMakeLists.txt (version <= 1.0.0-beta14)
#patch -ulbf drogon_ctl/CMakeLists.txt << EOF
#@@ -38,3 +38,2 @@
# add_dependencies(drogon_ctl
#-                 trantor
#                  _drogon_ctl)
#EOF
## fix orm_lib/inc/drogon/orm/SqlBinder.h (version >= 1.0.0)
#patch -ulbf orm_lib/inc/drogon/orm/SqlBinder.h << EOF
#@@ -37,3 +37,3 @@
#
#-#if defined __linux__ || defined __FreeBSD__
#+#if defined __linux__ || defined __FreeBSD__ || defined __MINGW32__
#
#@@ -45,2 +45,5 @@
# #define __LITTLE_ENDIAN _LITTLE_ENDIAN
#+#elif defined __MINGW32__
#+#define __LITTLE_ENDIAN 1234
#+#define __BYTE_ORDER __LITTLE_ENDIAN
# #endif
#EOF
## fix orm_lib/inc/drogon/orm/SqlBinder.h (version >= 1.0.0 <= 1.1.0)
#patch -ulbf orm_lib/inc/drogon/orm/SqlBinder.h << EOF
#@@ -33,2 +33,4 @@
# #include <winsock2.h>
#+#define htonll(x) ((1==htonl(1)) ? (x) : (((uint64_t)htonl((x) & 0xFFFFFFFFUL)) << 32) | htonl((uint32_t)((x) >> 32)))
#+#define ntohll(x) ((1==ntohl(1)) ? (x) : (((uint64_t)ntohl((x) & 0xFFFFFFFFUL)) << 32) | ntohl((uint32_t)((x) >> 32)))
# #else  // some Unix-like OS
#EOF
# fix orm_lib/inc/drogon/orm/SqlBinder.h (version >= 1.7.5)
patch -ulbf orm_lib/inc/drogon/orm/SqlBinder.h << EOF
@@ -68,2 +68,3 @@
 }
+#if !defined(__MINGW64_VERSION_MAJOR) || __MINGW64_VERSION_MAJOR < 10
 inline uint64_t htonll(uint64_t value)
@@ -77,2 +78,3 @@
 #endif
+#endif

EOF
# fix lib/src/Utilities.cc (version = 1.8.2)
#### Bug reported here: https://github.com/drogonframework/drogon/pull/1436
patch -ulbf lib/src/Utilities.cc << EOF
@@ -1225,3 +1225,3 @@
 {
-DROGON_EXPORT const size_t fixedRandomNumber = []() {
+const size_t fixedRandomNumber = []() {
     size_t res;
EOF
## fix missing htonll in cmake/templates/config.h.in (version >= 1.8.3)
#cat >> cmake/templates/config.h.in << EOF
##if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0602
##undef _WIN32_WINNT
##define _WIN32_WINNT 0x0602
##endif
#EOF
## fix missing htonll in cmake/templates/config.h.in (version >= 1.8.3)
#for F in $(find -name '*.cc'); do
#mv $F $F.bak
#cat > $F << EOF
##if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0602
##undef _WIN32_WINNT
##define _WIN32_WINNT 0x0602
##endif
#EOF
#cat $F.bak >> $F
#done
## fix redefinition of htonll/ntohll in orm_lib/inc/drogon/orm/SqlBinder.h (version >= 1.9.0 <= 1.9.1)
#patch -ulbf orm_lib/inc/drogon/orm/SqlBinder.h << EOF
#@@ -74,2 +74,3 @@
#
#+#define htonll DROGON_htonll
# inline uint64_t htonll(uint64_t value)
#@@ -79,2 +80,3 @@
#
#+#define ntohll DROGON_ntohll
# inline uint64_t ntohll(uint64_t value)
#EOF
# fix missing file
touch trantor/CMakeLists.txt
## fix drogon_ctl/CMakeLists.txt (version >= 1.7.2 <= 1.7.5)
#patch -ulbf drogon_ctl/CMakeLists.txt << EOF
#@@ -19,3 +19,3 @@
# target_link_libraries(_drogon_ctl \${PROJECT_NAME})
#-if (WIN32 AND BUILD_DROGON_SHARED)
#+if (MSVC AND BUILD_DROGON_SHARED)
#   set(DROGON_FILE \$<TARGET_FILE:drogon>)
#EOF
# fix drogon_ctl/CMakeLists.txt (version >= 1.8.1)
patch -ulbf drogon_ctl/CMakeLists.txt << EOF
@@ -19,3 +19,3 @@
 target_link_libraries(_drogon_ctl \${PROJECT_NAME})
-if (WIN32 AND BUILD_SHARED_LIBS)
+if (MSVC AND BUILD_SHARED_LIBS)
   set(DROGON_FILE \$<TARGET_FILE:drogon>)
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DROGON_SHARED:BOOL=OFF -DUSE_SQLITE3:BOOL=ON -DUSE_POSTGRESQL:BOOL=ON -DUSE_MYSQL:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DROGON_SHARED:BOOL=OFF -DUSE_SQLITE3:BOOL=ON -DUSE_POSTGRESQL:BOOL=ON -DUSE_MYSQL:BOOL=ON -DMYSQL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/mariadb -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DMYSQL_INCLUDE_DIRS=$MINGWPREFIX/include/mariadb -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DROGON_SHARED:BOOL=OFF -DUSE_SQLITE3:BOOL=ON -DUSE_POSTGRESQL:BOOL=ON -DUSE_MYSQL:BOOL=ON -DMYSQL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/mariadb -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DMYSQL_INCLUDE_DIRS=$MINGWPREFIX/include/mariadb -DCMAKE_CXX_FLAGS:STRING="-D_WIN32_WINNT=0x0602" -S. -Bbuild_static &&
 # fix missing library
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lyaml-cpp/" build_static/build.ninja &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DROGON_SHARED:BOOL=ON -DUSE_SQLITE3:BOOL=ON -DUSE_POSTGRESQL:BOOL=ON -DUSE_MYSQL:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DROGON_SHARED:BOOL=ON -DUSE_SQLITE3:BOOL=ON -DUSE_POSTGRESQL:BOOL=ON -DUSE_MYSQL:BOOL=ON -DMYSQL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/mariadb -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DMYSQL_INCLUDE_DIRS=$MINGWPREFIX/include/mariadb -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DROGON_SHARED:BOOL=ON -DUSE_SQLITE3:BOOL=ON -DUSE_POSTGRESQL:BOOL=ON -DUSE_MYSQL:BOOL=ON -DMYSQL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/mariadb -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DMYSQL_INCLUDE_DIRS=$MINGWPREFIX/include/mariadb -DCMAKE_CXX_FLAGS:STRING="-D_WIN32_WINNT=0x0602" -S. -Bbuild_shared &&
 # fix missing library
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lws2_32 -lrpcrt4/" build_shared/build.ninja &&
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lyaml-cpp/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 PATH=$(pwd)/build_shared:$PATH ninja -Cbuild_shared install/strip &&
 strip build_shared/*.dll &&
 cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####Note: version >= 1.8.3 only supports Windows 8 or higher (_WIN32_WINNT=0x0602)



