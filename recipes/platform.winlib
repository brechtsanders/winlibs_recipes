#export NAME="platform"
#export STATUS=
#export URL=https://github.com/Pulse-Eight/platform
#export BASENAME=platform
#export DESCRIPTION="Platform support library used by libCEC and binary add-ons for Kodi"
#export CATEGORY=
#export TYPE=library
##export VERSION=1.0.5
##export VERSIONDATE=20150504
##export VERSION=1.0.6
##export VERSIONDATE=20150508
##export VERSION=1.0.7
##export VERSIONDATE=20150509
##export VERSION=1.0.8
##export VERSIONDATE=20150513
##export VERSION=1.0.9
##export VERSIONDATE=20150513
#export VERSION=1.0.10
#export VERSIONDATE=20150630
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=
#export LICENSETYPE=
#export DOWNLOADURL="https://github.com/Pulse-Eight/platform/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/Pulse-Eight/platform/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix invalid vswprintf in src/util/StringUtils.cpp
#mv src/util/StringUtils.cpp src/util/StringUtils.cpp.bak
#sed -e "s/vswprintf/_vsnwprintf/" src/util/StringUtils.cpp.bak > src/util/StringUtils.cpp
### fix missing _snprintf_s in src/windows/dlfcn-win32.cpp
##mv src/windows/dlfcn-win32.cpp src/windows/dlfcn-win32.cpp.bak
##sed -e "s/_snprintf_s\( *([^,]*,[^,]*,\)[^,]*,/snprintf\1/" src/windows/dlfcn-win32.cpp.bak > src/windows/dlfcn-win32.cpp
### fix redefinition of ssize_t in src/windows/os-types.h
##mv src/windows/os-types.h src/windows/os-types.h.bak
##echo "#define _SSIZE_T_DEFINED 1" > src/windows/os-types.h
##cat src/windows/os-types.h.bak >> src/windows/os-types.h
### fix missing CONDITION_VARIABLE in src/windows/os-threads.h
##mv src/windows/os-threads.h src/windows/os-threads.h.bak
##echo "#define CONDITION_VARIABLE int" > src/windows/os-threads.h
##cat src/windows/os-threads.h.bak >> src/windows/os-threads.h
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
# sed -i -e 's/[^"]*platform\.lib/-lplatform/' $INSTALLPREFIX/lib/platform/platform-config.cmake &&
# mkdir -p $INSTALLPREFIX/bin &&
# ${CXX:-g++} -shared -o $INSTALLPREFIX/bin/platform.dll -Wl,--out-implib,$INSTALLPREFIX/lib/libplatform.dll.a -Wl,--whole-archive $INSTALLPREFIX/lib/libplatform.a -Wl,--no-whole-archive -lmingwex &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="platform"
export STATUS=
export URL=https://github.com/Pulse-Eight/platform
export BASENAME=platform
export DESCRIPTION="Platform support library used by libCEC and binary add-ons for Kodi"
export CATEGORY=
export TYPE=library
#export VERSION=2.0.1
#export VERSIONDATE=20160120
#export VERSION=2.1.0
#export VERSIONDATE=20161024
export VERSION=2.1.0.1
export VERSIONDATE=20161026
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
#export DOWNLOADURL="https://github.com/Pulse-Eight/platform/releases p8-platform-"
export DOWNLOADURL="https://github.com/Pulse-Eight/platform/tags p8-platform-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/Pulse-Eight/platform/archive/p8-platform-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/Pulse-Eight/platform/archive/refs/tags/p8-platform-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/p8-platform-$VERSION.tar.gz
cd platform-p8-platform-$VERSION
# fix invalid parameters to vswprintf in src/util/StringUtils.cpp (version >= 2.0.1)
mv src/util/StringUtils.cpp src/util/StringUtils.cpp.bak
sed -e "s/ vswprintf/ _vsnwprintf/g" src/util/StringUtils.cpp.bak > src/util/StringUtils.cpp
## fix missing _snprintf_s in src/windows/dlfcn-win32.cpp (version >= 2.1.0)
#mv src/windows/dlfcn-win32.cpp src/windows/dlfcn-win32.cpp.bak &&
#sed -e "s/_snprintf_s(\s*\([a-z_]*\), MAX_PATH, MAX_PATH/snprintf(\1, MAX_PATH/" src/windows/dlfcn-win32.cpp.bak > src/windows/dlfcn-win32.cpp
wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 . &&
 wl-showstatus build-install &&
 #make install/strip &&
 ninja install/strip &&
 sed -i -e 's/[^"]*p8-platform\.lib/-lp8-platform/' $INSTALLPREFIX/lib/p8-platform/p8-platform-config.cmake &&
 mkdir -p $INSTALLPREFIX/bin &&
 ${CXX:-g++} -shared -o $INSTALLPREFIX/bin/p8-platform.dll -Wl,--out-implib,$INSTALLPREFIX/lib/libp8-platform.dll.a -Wl,--whole-archive $INSTALLPREFIX/lib/libp8-platform.a -Wl,--no-whole-archive -lmingwex &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf platform-p8-platform-$VERSION



