export NAME="Prometheus C++ client library"
export STATUS=
export URL=https://github.com/jupp0r/prometheus-cpp
export BASENAME=prometheus-cpp
export DESCRIPTION="Prometheus Client Library for Modern C++ - This library aims to enable Metrics-Driven Development for C++ services. It implements the Prometheus Data Model, a powerful abstraction on which to collect and expose metrics. We offer the possibility for metrics to be collected by Prometheus, but other push/pull collections can be added as plugins."
export CATEGORY=
export TYPE=library
#export VERSION=0.4.1
#export VERSIONDATE=20180528
#export VERSION=0.4.2
#export VERSIONDATE=20180726
#export VERSION=0.5.0
#export VERSIONDATE=20180926
#export VERSION=0.6.0
#export VERSIONDATE=20181106
#export VERSION=0.7.0
#export VERSIONDATE=20190606
#export VERSION=0.8.0
#export VERSIONDATE=20191026
#export VERSION=0.9.0
#export VERSIONDATE=20200212
#export DEPENDANCIES=civetweb,benchmark,libcurl,cpr
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake
#export VERSION=0.10.0
#export VERSIONDATE=20201002
#export VERSION=0.11.0
#export VERSIONDATE=20201124
#export VERSION=0.12.0
#export VERSIONDATE=20210205
#export VERSION=0.12.1
#export VERSIONDATE=20210205
#export VERSION=0.12.3
#export VERSIONDATE=20210510
#export VERSION=0.13.0
#export VERSIONDATE=20210910
#export VERSION=1.0.0
#export VERSIONDATE=20211118
export VERSION=1.0.1
export VERSIONDATE=20220522
wl-showstatus --package-version
export DEPENDANCIES=civetweb,benchmark,libcurl,cpr,cppcodec
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/jupp0r/prometheus-cpp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/jupp0r/prometheus-cpp/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix missing files (version <= 0.5.0)
#cp -f /custombuilt/include/cpr/* 3rdparty/cpr/
## fix detection of civetweb (version <= 0.5.0)
#sed -i.bak -e "s/set_and_check(CIVETWEB_INCLUDE_DIR/#&/" cmake/civetweb-config.cmake
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_THIRDPARTY_LIBRARIES:BOOL=OFF -DCIVETWEB_CXX_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DCIVETWEB_CXX_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libcivetweb.a -DENABLE_TESTING:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_COMPRESSION:BOOL=ON -DUSE_THIRDPARTY_LIBRARIES:BOOL=OFF -DCIVETWEB_CXX_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DCIVETWEB_CXX_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libcivetweb.a -DENABLE_TESTING:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_COMPRESSION:BOOL=ON -DUSE_THIRDPARTY_LIBRARIES:BOOL=OFF -DCIVETWEB_CXX_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DCIVETWEB_CXX_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libcivetweb.a -DENABLE_TESTING:BOOL=OFF -S. -Bbuild_shared &&
# echo "-Wl,--as-needed -lws2_32 -lcivetweb-cpp" >> build_shared/pull/CMakeFiles/pull.dir/linklibs.rsp &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
## fix missing WINSOCK::WINSOCK target (version = 0.10.0)
#cat >> pull/CMakeLists.txt << EOF
#if(WIN32)
#  add_library(WINSOCK::WINSOCK INTERFACE IMPORTED)
#  target_link_libraries(WINSOCK::WINSOCK INTERFACE ws2_32)
#endif()
#EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_COMPRESSION:BOOL=ON -DUSE_THIRDPARTY_LIBRARIES:BOOL=OFF -DENABLE_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_COMPRESSION:BOOL=ON -DUSE_THIRDPARTY_LIBRARIES:BOOL=OFF -DENABLE_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



