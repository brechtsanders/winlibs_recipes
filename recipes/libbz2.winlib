export NAME="bzip2"
export STATUS=
#export URL=http://www.bzip.org/
#export URL=https://sourceforge.net/projects/bzip2/
export URL=https://www.sourceware.org/bzip2/
export BASENAME=libbz2
export DESCRIPTION='bzip2 is a freely available, patent free (see below), high-quality data compressor. It typically compresses files to within 10% to 15% of the best available techniques (the PPM family of statistical compressors), whilst being around twice as fast at compression and six times faster at decompression.'
export CATEGORY=compression
export TYPE=library
#export VERSION=1.0.4
#export VERSION=1.0.5
#export VERSION=1.0.6
#export VERSIONDATE=20100920
export VERSION=1.0.8
export VERSIONDATE=20210125
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=pexports
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="http://www.bzip.org/downloads.html bzip2-"
#export DOWNLOADURL="https://sourceforge.net/projects/bzip2/files/ bzip2-"
export DOWNLOADURL="https://sourceware.org/pub/bzip2/ bzip2-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.bzip.org/$VERSION/bzip2-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://download.sourceforge.net/project/bzip2/bzip2-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://sourceware.org/pub/bzip2/bzip2-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/bzip2-$VERSION.tar.gz
cd bzip2-$VERSION
#PREFIX=$INSTALLPREFIX CC=$RUNPLATFORM-gcc AR=$RUNPLATFORM-ar RANLIB=$RUNPLATFORM-ranlib &&
# manually create .la file
mkdir -p $INSTALLPREFIX/lib
cat > $INSTALLPREFIX/lib/libbz2.la << EOF
# -lz - a libtool library file
# Generated by hand - GNU libtool 0.0.0
dlname='libbz2.dll'
library_names='libbz2.dll.a'
old_library='libbz2.a'
dependency_libs=''
current=0
age=0
revision=1
installed=yes
shouldnotlink=no
dlopen=''
dlpreopen=''
libdir='$INSTALLPREFIX/lib'
EOF
# fix Makefile
sed -i.bak -e "s/chmod /#chmod /; s/^\(CFLAGS=.*\)$/\1 -D_X86_/; s/ln -s -f /cp -f /" Makefile
# fix Makefile-libbz2_so
#sed -i.bak -e "s/^\(CFLAGS=.*\)$/\1 -D_X86_/" Makefile-libbz2_so
sed -i.bak -e "s/^\(CFLAGS=.*\)$/\1 -D_X86_/; s/libbz2\.so\.$(echo $VERSION|sed -e "s/\./\\\\&/g")/libbz2.dll/g; s/-Wl,-soname -Wl,libbz2\.so[^ ]*/-s -Wl,--out-implib,libbz2.dll.a/" Makefile-libbz2_so
# fix building DLL (also export symbols without ordinals)
#sed -i.bak2 -e "s/-Wl,--out-implib,lib\([^\s]*\)\.dll\.a/-Wl,--kill-at & -Wl,--output-def,\1.def/" Makefile-libbz2_so
#sed -i.bak2 -e "s/-Wl,--out-implib,lib\([^\s]*\)\.dll\.a/-Wl,--add-stdcall-alias & -Wl,--output-def,\1.def/" Makefile-libbz2_so
sed -i.bak2 -e "s/-Wl,--out-implib,lib\([^\s]*\)\.dll\.a/& -Wl,--output-def,\1.def/; s/-fpic\|-fPIC//g; s/ln -s /#&/" Makefile-libbz2_so
# fix building for ARM64
if ( echo $RUNPLATFORM | grep -q aarch64 ); then
 sed -i.bak2 -e "s/-D_X86_//" Makefile Makefile-libbz2_so
fi
wl-showstatus build &&
 #make &&
 #make -f Makefile-libbz2_so &&
 make CC=${CC:-gcc} LDFLAGS="-s" &&
 make -f Makefile-libbz2_so CC=${CC:-gcc} LDFLAGS="-s" &&
 wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX/bin &&
 make install PREFIX=$INSTALLPREFIX &&
 #cp libbz2.so.1.0 $INSTALLPREFIX/bin/libbz2.dll &&
 #pexports -o $INSTALLPREFIX/bin/libbz2.dll | sed -e "s/^\(LIBRARY *\).*/\1libbz2.dll/" > libbz2.dll.def &&
 #dlltool --def libbz2.dll.def --dllname $INSTALLPREFIX/bin/libbz2.dll --output-lib $INSTALLPREFIX/lib/libbz2.dll.a &&
 cp -f *.dll $INSTALLPREFIX/bin/ &&
 cp -f *.dll.a $INSTALLPREFIX/lib/ &&
 cp -f bz2.def $INSTALLPREFIX/lib/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf  bzip2-$VERSION



