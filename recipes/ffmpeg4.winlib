export NAME="FFmpeg 4"
export STATUS=
export URL=http://ffmpeg.org/
export BASENAME=ffmpeg4
export DESCRIPTION="FFmpeg is a complete solution to record, convert and stream audio and video. It includes libavcodec, the leading audio/video codec library."
export CATEGORY=video,codec
export TYPE=library
#export VERSION=4.0
#export VERSIONDATE=20180420
#export VERSION=4.0.1
#export VERSIONDATE=20180616
#export VERSION=4.0.2
#export VERSIONDATE=20180719
####libavcodec/vdpau.c:65:24: error: 'ENOBUFS' undeclared (first use in this function)
#export VERSION=4.0.3
#export VERSIONDATE=20181103
#export VERSION=4.0.4
#export VERSIONDATE=20190328
#export VERSION=4.0.5
#export VERSIONDATE=20191123
#export VERSION=4.0.6
#export VERSIONDATE=20200704
#export VERSION=4.1
#export VERSIONDATE=20181106
#export VERSION=4.1.1
#export VERSIONDATE=20190210
#export VERSION=4.1.2
#export VERSIONDATE=20190323
#export VERSION=4.1.3
#export VERSIONDATE=20190402
#export VERSION=4.1.4
#export VERSIONDATE=20190709
#export VERSION=4.1.5
#export VERSIONDATE=20200108
#export VERSION=4.1.6
#export VERSIONDATE=20200705
#export VERSION=4.1.7
#export VERSIONDATE=20210912
#export VERSION=4.1.8
#export VERSIONDATE=20211018
#export VERSION=4.1.9
#export VERSIONDATE=20220418
#export VERSION=4.1.10
#export VERSIONDATE=20221022
#export VERSION=4.1.11
#export VERSIONDATE=20230608
#export VERSION=4.2
#export VERSIONDATE=20190806
#export VERSION=4.2.1
#export VERSIONDATE=20190907
#export VERSION=4.2.2
#export VERSIONDATE=20200101
####ERROR: w32threads requested but not found
#export VERSION=4.2.3
#export VERSIONDATE=20200522
#export VERSION=4.2.4
#export VERSIONDATE=20200709
#export VERSION=4.2.5
#export VERSIONDATE=20211016
#export VERSION=4.2.6
#export VERSIONDATE=20220416
#export VERSION=4.2.7
#export VERSIONDATE=20220514
#export VERSION=4.2.8
#export VERSIONDATE=20221012
#export VERSION=4.2.9
#export VERSIONDATE=20230422
#export VERSION=4.3
#export VERSIONDATE=20200616
#export VERSION=4.3.1
#export VERSIONDATE=20200712
####ERROR: avisynth/avisynth_c.h not found
#export VERSION=4.3.2
#export VERSIONDATE=20210221
#export VERSION=4.3.3
#export VERSIONDATE=20211022
#export VERSION=4.3.4
#export VERSIONDATE=20220416
#export VERSION=4.3.5
#export VERSIONDATE=20221011
#export VERSION=4.3.6
#export VERSIONDATE=20230416
#export VERSION=4.3.7
#export VERSIONDATE=20240616
#export VERSION=4.4
#export VERSIONDATE=20210409
#export VERSION=4.4.1
#export VERSIONDATE=20211025
#export VERSION=4.4.2
#export VERSIONDATE=20220415
#export VERSION=4.4.3
#export VERSIONDATE=20221010
export VERSION=4.4.4
export VERSIONDATE=20230413
wl-showstatus --package-version
export DEPENDENCIES=zlib,libbz2,libdl,freetype2,libgsm,lame,libogg,libvorbis,libtheora,opencore-amr,librtmp,schroedinger,libspeex,x264,libxavs,libvpx,frei0r,xvidcore,celt
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE="mostly LGPL, some parts MIT/X11/BSD-style, optional modules under GPL"
export DOWNLOADURL="http://ffmpeg.org/releases/ ffmpeg-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ffmpeg.org/releases/ffmpeg-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ffmpeg.org/releases/ffmpeg-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/ffmpeg-$VERSION.tar.bz2
tar xJ --force-local -f $TARBALLDIR/$BASENAME/ffmpeg-$VERSION.tar.xz
cd ffmpeg-$VERSION
## fix missing ENOBUFS/ENOTSUP in libavcodec/vdpau_internal.h
#mv libavcodec/vdpau_internal.h libavcodec/vdpau_internal.h.bak
#cat > libavcodec/vdpau_internal.h << EOF
##include <winsock2.h>
##ifndef ENOBUFS
##define ENOBUFS WSAENOBUFS
##endif
##ifndef ENOTSUP
##define ENOTSUP WSAEOPNOTSUPP
##endif
#EOF
#cat libavcodec/vdpau_internal.h.bak >> libavcodec/vdpau_internal.h
# fix deprecated x264_bit_depth in recent ffmpeg
sed -i.bak -e "s/x264_bit_depth/X264_BIT_DEPTH/" libavcodec/libx264.c
## fix "operand type mismatch for `shr'" error when building with binutils 2.41 or higher in libavcodec/x86/mathops.h (version >= 4.4.4)
#patch -ulbf libavcodec/x86/mathops.h << EOF
#@@ -35,12 +35,20 @@
# static av_always_inline av_const int MULL(int a, int b, unsigned shift)
# {
#     int rt, dummy;
#+    if (__builtin_constant_p(shift))
#     __asm__ (
#         "imull %3               \n\t"
#         "shrdl %4, %%edx, %%eax \n\t"
#         :"=a"(rt), "=d"(dummy)
#-        :"a"(a), "rm"(b), "ci"((uint8_t)shift)
#+        :"a"(a), "rm"(b), "i"(shift & 0x1F)
#     );
#+    else
#+        __asm__ (
#+            "imull %3               \n\t"
#+            "shrdl %4, %%edx, %%eax \n\t"
#+            :"=a"(rt), "=d"(dummy)
#+            :"a"(a), "rm"(b), "c"((uint8_t)shift)
#+        );
#     return rt;
# }
# 
#@@ -113,19 +121,31 @@ __asm__ volatile(\
# // avoid +32 for shift optimization (gcc should do that ...)
# #define NEG_SSR32 NEG_SSR32
# static inline  int32_t NEG_SSR32( int32_t a, int8_t s){
#+    if (__builtin_constant_p(s))
#     __asm__ ("sarl %1, %0\n\t"
#          : "+r" (a)
#-         : "ic" ((uint8_t)(-s))
#+         : "i" (-s & 0x1F)
#     );
#+    else
#+        __asm__ ("sarl %1, %0\n\t"
#+               : "+r" (a)
#+               : "c" ((uint8_t)(-s))
#+        );
#     return a;
# }
# 
# #define NEG_USR32 NEG_USR32
# static inline uint32_t NEG_USR32(uint32_t a, int8_t s){
#+    if (__builtin_constant_p(s))
#     __asm__ ("shrl %1, %0\n\t"
#          : "+r" (a)
#-         : "ic" ((uint8_t)(-s))
#+         : "i" (-s & 0x1F)
#     );
#+    else
#+        __asm__ ("shrl %1, %0\n\t"
#+               : "+r" (a)
#+               : "c" ((uint8_t)(-s))
#+        );
#     return a;
# }
# 
#EOF
# fix for building on MSYS (version >= 3.1.2)
patch -ulbf configure << EOF
@@ -4671,6 +4671,3 @@
         ;;
-    msys*)
-        die "Native MSYS builds are discouraged, please use the MINGW environment."
-        ;;
-    mingw32*|mingw64*)
+    mingw32*|mingw64*|msys*)
         if test \$target_os = "mingw32ce"; then
EOF
# build both static and shared libraries (version >= 4.0.1)
sed -i.bak -e "s/^\(\s*\)\(disable static\)/\1echo \2/" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX/ffmpeg4 --arch=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) --enable-static --enable-shared --enable-w32threads --enable-gpl --enable-incompatible-libav-abi --enable-postproc --enable-swscale --enable-avfilter --enable-memalign-hack --disable-devices --enable-runtime-cpudetect --disable-debug --enable-zlib --enable-bzlib --enable-version3 --enable-avisynth --enable-frei0r --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfreetype --enable-libgsm --enable-libmp3lame --enable-librtmp --enable-libschroedinger --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libxavs --enable-libcelt --enable-libxvid &&
 #./configure --prefix=$INSTALLPREFIX/ffmpeg4 --arch=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) --enable-static --enable-shared --enable-w32threads --enable-gpl --enable-postproc --enable-swscale --enable-avfilter --enable-memalign-hack --disable-devices --enable-runtime-cpudetect --disable-debug --enable-zlib --enable-bzlib --enable-version3 --enable-avisynth --enable-frei0r --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfreetype --enable-libgsm --enable-libmp3lame --enable-librtmp --enable-libschroedinger --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libxavs --enable-libcelt --enable-libxvid &&
 #./configure --prefix=$INSTALLPREFIX/ffmpeg4 --arch=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) --enable-static --enable-shared --enable-w32threads --enable-gpl --enable-postproc --enable-swscale --enable-avfilter --disable-devices --enable-runtime-cpudetect --disable-debug --enable-zlib --enable-bzlib --enable-version3 --enable-avisynth --enable-frei0r --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfreetype --enable-libgsm --enable-libmp3lame --enable-librtmp --enable-libschroedinger --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libxavs --enable-libcelt --enable-libxvid &&
 #./configure --prefix=$INSTALLPREFIX/ffmpeg4 --arch=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) --enable-static --enable-shared --enable-w32threads --enable-gpl --enable-postproc --enable-swscale --enable-avfilter --disable-devices --enable-runtime-cpudetect --disable-debug --enable-zlib --enable-bzlib --enable-version3 --enable-avisynth --enable-frei0r --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfreetype --enable-libgsm --enable-libmp3lame --enable-librtmp --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libxavs --enable-libcelt --enable-libxvid &&
 ./configure --prefix=$INSTALLPREFIX/ffmpeg4 --arch=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) --enable-static --enable-shared --enable-w32threads --enable-gpl --enable-postproc --enable-swscale --enable-avfilter --disable-devices --enable-runtime-cpudetect --disable-debug --enable-zlib --enable-bzlib --enable-version3 --disable-avisynth --disable-libflite --enable-frei0r --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfreetype --enable-libgsm --enable-libmp3lame --enable-librtmp --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libxavs --enable-libcelt --enable-libxvid --extra-cflags="-I$MINGWPREFIX/include/libdl-win32" &&
 #--disable-doc 
 #--enable-libaacplus 
 #--enable-nonfree --enable-libfaac
 #--enable-libnut --enable-libdc1394 --enable-libdirac --enable-libopenjpeg --enable-libopencv --enable-libvo-amrwbenc 
 #--disable-asm 
 #--disable-x86asm 
 # fix invalid linker flag -framework
 sed -i.bak -e "s/-framework CoreFoundation//" ffbuild/config.mak &&
 wl-showstatus build-install &&
 ( make all install EXESUF=".exe" || make -j1 all install EXESUF=".exe" ) &&
 #( PERLLIB=$PWD:$MINGWPREFIX/share/texinfo make all install SRC_PATH=$PWD EXESUF=".exe" || PERLLIB=$PWD:$MINGWPREFIX/share/texinfo make -j1 all install SRC_PATH=$PWD EXESUF=".exe" ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ffmpeg-$VERSION



