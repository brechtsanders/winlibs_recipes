#export NAME="Poppler"
#export STATUS=
#export URL=http://poppler.freedesktop.org/
#export BASENAME=poppler
#export DESCRIPTION="Poppler is a PDF rendering library based on the xpdf-3.0 code base."
#export CATEGORY=graphics,fileformat
#export TYPE=library
##export VERSION=0.5.4
##export VERSION=0.8.3
##export VERSION=0.10.5
##export VERSION=0.10.6
##export VERSION=0.10.7
##export VERSION=0.11.1
##export VERSION=0.11.2
##export VERSION=0.11.3
##export VERSION=0.12.0
##export VERSION=0.12.1
##export VERSIONDATE=
##export VERSION=0.12.3
##export VERSIONDATE=20091227
#####utils/pdffonts.cc:215: undefined reference to `Dict::lookupNF(char*, Object*)'
##export VERSION=0.12.4
##export VERSIONDATE=20100218
##export VERSION=0.13.2
##export VERSIONDATE=20100328
##export VERSION=0.13.3
##export VERSIONDATE=20100426
##export VERSION=0.13.4
##export VERSIONDATE=20100526
#####fofi/FoFiType1.cc:207: error: 'strtok_s' was not declared in this scope
##export VERSION=0.14.0
##export VERSIONDATE=20100609
##export VERSION=0.14.1
##export VERSIONDATE=20100712
##export VERSION=0.14.2
##export VERSIONDATE=20100811
##export VERSION=0.14.3
##export VERSIONDATE=20100912
##export VERSION=0.14.4
##export VERSIONDATE=20101007
##export VERSION=0.14.5
##export VERSIONDATE=20101108
##export VERSION=0.15.0
##export VERSIONDATE=20100917
##export VERSION=0.15.1
##export VERSIONDATE=20101021
##export VERSION=0.15.2
##export VERSIONDATE=20101115
##export VERSION=0.15.3
##export VERSIONDATE=20101130
#####PDFDoc.cc: In constructor 'PDFDoc::PDFDoc(wchar_t*, int, GooString*, GooString*, void*)':
#####PDFDoc.cc:186: error: cannot convert 'stat*' to '_stat*' for argument '2' to 'int _wstat(const wchar_t*, _stat*)'
#####PDFDoc.cc:191: error: cannot convert 'char*' to 'const wchar_t*' for argument '1' to 'int _wstat(const wchar_t*, _stat*)'
##export VERSION=0.16.0
##export VERSIONDATE=20101228
##export VERSION=0.16.1
##export VERSIONDATE=20110128
##export VERSION=0.16.2
##export VERSIONDATE=20110202
##export VERSION=0.16.3
##export VERSIONDATE=20110227
##export VERSION=0.16.4
##export VERSIONDATE=20110229
##export VERSION=0.16.5
##export VERSIONDATE=20110428
##export VERSION=0.16.6
##export VERSIONDATE=20110528
##export VERSION=0.16.7
##export VERSIONDATE=20110628
##export VERSION=0.17.0
##export VERSIONDATE=20110330
##export VERSION=0.17.1
##export VERSIONDATE=20110504
##export VERSION=0.17.2
##export VERSIONDATE=20110816
##export VERSION=0.17.3
##export VERSIONDATE=20110830
##export VERSION=0.17.4
##export VERSIONDATE=20110912
##export VERSION=0.18.0
##export VERSIONDATE=20110927
##export VERSION=0.18.1
##export VERSIONDATE=20111026
##export VERSION=0.18.2
##export VERSIONDATE=20111204
##export VERSION=0.18.3
##export VERSIONDATE=20120115
##export VERSION=0.18.4
##export VERSIONDATE=20120216
##export VERSION=0.19.0
##export VERSIONDATE=20120302
##export VERSION=0.19.1
##export VERSIONDATE=20120316
##export VERSION=0.19.2
##export VERSIONDATE=20120330
##export VERSION=0.19.3
##export VERSIONDATE=20120413
##export VERSION=0.19.4
##export VERSIONDATE=20120427
##export VERSION=0.20.0
##export VERSIONDATE=20120511
##export VERSION=0.20.1
##export VERSIONDATE=20120611
#####poppler/GlobalParamsWin.cc: In member function 'GooString* GlobalParams::findSystemFontFile(GfxFont*, SysFontType*, int*, GooString*, GooString*)': GlobalParamsWin.cc:576: error: request for member 'Set' in 'substituteFontName', which is of non-class type 'GooString*'
##export VERSION=0.20.2
##export VERSIONDATE=20120711
##export VERSION=0.20.3
##export VERSIONDATE=20120811
##export VERSION=0.20.4
##export VERSIONDATE=20120911
##export VERSION=0.20.5
##export VERSIONDATE=20121011
##export VERSION=0.21.0
##export VERSIONDATE=20120921
##export VERSION=0.21.1
##export VERSIONDATE=20121110
##export VERSION=0.21.2
##export VERSIONDATE=20121123
##export VERSION=0.21.3
##export VERSIONDATE=20121202
##export VERSION=0.21.4
##export VERSIONDATE=20121215
##export VERSION=0.22.0
##export VERSIONDATE=20121230
##export VERSION=0.22.1
##export VERSIONDATE=20130210
##export VERSION=0.22.2
##export VERSIONDATE=20130312
##export VERSION=0.22.3
##export VERSIONDATE=20130412
##export VERSION=0.22.4
##export VERSIONDATE=20130514
##export VERSION=0.22.5
##export VERSIONDATE=20130617
##export VERSION=0.23.0
##export VERSIONDATE=20130514
##export VERSION=0.23.1
##export VERSIONDATE=20130528
##export VERSION=0.23.2
##export VERSIONDATE=20130611
##export VERSION=0.23.3
##export VERSIONDATE=20130704
##export VERSION=0.23.4
##export VERSIONDATE=20130719
##export VERSION=0.24.0
##export VERSIONDATE=20130730
##export VERSION=0.24.1
##export VERSIONDATE=20130827
##export VERSION=0.24.2
##export VERSIONDATE=20130927
##export VERSION=0.24.3
##export VERSIONDATE=20131027
##export VERSION=0.24.4
##export VERSIONDATE=20131127
##export VERSION=0.24.5
##export VERSIONDATE=20140103
##export VERSION=0.25.0
##export VERSIONDATE=20131212
##export VERSION=0.25.1
##export VERSIONDATE=20140103
##export VERSION=0.25.2
##export VERSIONDATE=20140327
##export VERSION=0.25.3
##export VERSIONDATE=20140411
##export VERSION=0.26.0
##export VERSIONDATE=20140425
##export VERSION=0.26.1
##export VERSIONDATE=20140524
##export VERSION=0.26.2
##export VERSIONDATE=20140620
##export VERSION=0.26.3
##export VERSIONDATE=20140721
##export VERSION=0.26.4
##export VERSIONDATE=20140822
##export VERSION=0.26.5
##export VERSIONDATE=20140927
##export VERSION=0.28.0
##export VERSIONDATE=20141104
##export VERSION=0.28.1
##export VERSIONDATE=20141105
##export VERSION=0.29.0
##export VERSIONDATE=20141205
##export VERSION=0.30.0
##export VERSIONDATE=20150105
##export VERSION=0.31.0
##export VERSIONDATE=20150206
##export VERSION=0.32.0
##export VERSIONDATE=20150307
##export VERSION=0.33.0
##export VERSIONDATE=20150515
##export VERSION=0.34.0
##export VERSIONDATE=20150709
##export VERSION=0.35.0
##export VERSIONDATE=20150811
##export VERSION=0.36.0
##export VERSIONDATE=20150910
##export VERSION=0.37.0
##export VERSIONDATE=20151010
##export VERSION=0.38.0
##export VERSIONDATE=20151117
##export VERSION=0.39.0
##export VERSIONDATE=20151218
##export VERSION=0.42.0
##export VERSIONDATE=20160405
##export VERSION=0.43.0
##export VERSIONDATE=20160429
##export VERSION=0.44.0
##export VERSIONDATE=20160522
##export VERSION=0.45.0
##export VERSIONDATE=20160617
##export VERSION=0.46.0
##export VERSIONDATE=20160725
##export VERSION=0.47.0
##export VERSIONDATE=20160819
##export VERSION=0.48.0
##export VERSIONDATE=20161009
##export VERSION=0.49.0
##export VERSIONDATE=20161115
##export VERSION=0.50.0
##export VERSIONDATE=20161216
##export VERSION=0.51.0
##export VERSIONDATE=20170116
##export VERSION=0.52.0
##export VERSIONDATE=20170217
##export VERSION=0.53.0
##export VERSIONDATE=20170320
##export VERSION=0.54.0
##export VERSIONDATE=20170422
##export VERSION=0.55.0
##export VERSIONDATE=20170522
##export VERSION=0.56.0
##export VERSIONDATE=20170622
##export VERSION=0.57.0
##export VERSIONDATE=20170816
##export VERSION=0.58.0
##export VERSIONDATE=20170902
##export VERSION=0.59.0
##export VERSIONDATE=20170904
#wl-showstatus --package-version
#export DEPENDANCIES=cairo,fontconfig,freetype2,glib2,libiconv,zlib,libxml2,libjpeg,libpng,libopenjpeg,pthreads,lcms2,gdk-pixbuf
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
######Note: configure fails when using libjpeg-turbo instead of libjpeg:
#####checking libjpeg.h problem can be fixed by XMD_H macro... no, disable libjpeg
#####configure: error: Install libjpeg before trying to build poppler. You can also decide to use the internal unmaintained DCT decoder or none at all. See --help.
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL2
#export DOWNLOADURL="http://poppler.freedesktop.org/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://poppler.freedesktop.org/poppler-data-0.2.1.tar.gz
##export DOWNLOADSOURCEURL=http://poppler.freedesktop.org/poppler-data-0.4.3.tar.gz
##export DOWNLOADSOURCEURL=http://poppler.freedesktop.org/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://poppler.freedesktop.org/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfz $TARBALLDIR/$BASENAME/poppler-$VERSION.tar.gz
#tar xfJ $TARBALLDIR/$BASENAME/poppler-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix missing definition of uint in poppler/Gfx.cc (version >= 0.12.0)
#mv poppler/Gfx.cc poppler/Gfx.cc.bak
#echo "#define uint unsigned int" > poppler/Gfx.cc
#cat poppler/Gfx.cc.bak >> poppler/Gfx.cc
##fix missing _MAX_PATH (version >= 0.13.0)
#mv goo/gfile.cc goo/gfile.cc.bak
#echo "#define _MAX_PATH 200" > goo/gfile.cc
#cat goo/gfile.cc.bak >> goo/gfile.cc
### fix missing DBL_MIN and DBL_MAX in poppler/TextOutputDev.cc (version >= 0.13.3)
##mv poppler/TextOutputDev.cc poppler/TextOutputDev.cc.bak
##cat > poppler/TextOutputDev.cc << EOF
###define DBL_MAX 1.7976931348623157e+308
###define DBL_MIN 2.2250738585072014e-308
##EOF
##cat poppler/TextOutputDev.cc.bak >> poppler/TextOutputDev.cc
### fix undefined uint in poppler/FontInfo.cc (version >= 0.15.3)
##mv poppler/FontInfo.cc poppler/FontInfo.cc.bak
##echo "#define uint unsigned int" >  poppler/FontInfo.cc
##cat poppler/FontInfo.cc.bak >> poppler/FontInfo.cc
### fix const problem in poppler/GlobalParamsWin.cc (version <= 0.19.1) ERROR: GlobalParamsWin.cc:470: error: invalid conversion from 'const char*' to 'char*'
##mv poppler/GlobalParamsWin.cc poppler/GlobalParamsWin.cc.bak
##sed -e "s/\(static\) *\(char \*findSubstituteName\)/\1 const \2/" poppler/GlobalParamsWin.cc.bak > poppler/GlobalParamsWin.cc
## fix invalid substituteFontName.Set in poppler/GlobalParamsWin.cc (version >= 0.20.1)
#mv poppler/GlobalParamsWin.cc poppler/GlobalParamsWin.cc.bak
#sed -e "s/\(substituteFontName\)\.\(Set\)/\1->\2/" poppler/GlobalParamsWin.cc.bak > poppler/GlobalParamsWin.cc
## fix missing GetFileSizeEx in goo/gfile.cc (version >= 0.24.0)
#mv goo/gfile.cc goo/gfile.cc.bak2
#echo "#define _WIN32_WINNT 0x0500" > goo/gfile.cc
#cat goo/gfile.cc.bak2 >> goo/gfile.cc
## fix missing stuff (version >= 0.53.0)
#if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then echo OK; fi
# for F in */*.cpp */*.cc; do
#  mv $F $F.bak &&
#  echo "#undef __STRICT_ANSI__" > $F &&
#  # fix missing time_t (version >= 0.59.0)
#  ( echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null || echo "#include <time.h>" >> $F ) &&
#  cat $F.bak >> $F
# done
#fi
## skip making utils
#cat > utils/Makefile.in << EOF
#all:
#install:
#install-strip:
#EOF
## skip making test
#cat > test/Makefile.in << EOF
#all:
#install:
#install-strip:
#EOF
#cat > cpp/tests/Makefile.in << EOF
#all:
#install:
#install-strip:
#EOF
#cat > glib/demo/Makefile.in << EOF
#all:
#install:
#install-strip:
#EOF
## fix libjpeg not being found by configure
#mv configure configure.bak
#sed -e "s?/usr/local/?$MINGWPREFIX/?g" configure.bak > configure
### remove dependancy on dynamic libstdc++ (GCC 4)
##mv libtool libtool.bak &&
##sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CPPFLAGS="-DXMD_H -DHAVE_BOOLEAN" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CPPFLAGS="-DXMD_H -DHAVE_BOOLEAN" LDFLAGS="-lopenjpeg -Wl,--enable-auto-import" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-libopenjpeg CPPFLAGS="-DXMD_H -DHAVE_BOOLEAN" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-zlib CPPFLAGS="-DXMD_H" LDFLAGS="-L$MINGWPREFIX/lib" LDFLAGS="-Wl,--enable-auto-import" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-zlib CPPFLAGS="-DXMD_H" LDFLAGS="-L$MINGWPREFIX/lib" LDFLAGS="-static-libstdc++" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-zlib --disable-libopenjpeg CPPFLAGS="-DXMD_H" LDFLAGS="-L$MINGWPREFIX/lib" LDFLAGS="-static-libstdc++ -Wl,--enable-auto-import" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-zlib --disable-libopenjpeg CPPFLAGS="-DXMD_H" LDFLAGS="-L$MINGWPREFIX/lib" LDFLAGS="-static-libstdc++ -Wl,--compat-implib -Wl,--enable-auto-import" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-zlib --disable-libopenjpeg --enable-introspection=no CPPFLAGS="-DXMD_H" LDFLAGS="-L$MINGWPREFIX/lib" LDFLAGS="-static-libstdc++ -Wl,--compat-implib -Wl,--enable-auto-import" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-zlib --enable-introspection=no CPPFLAGS="-DXMD_H" LDFLAGS="-L$MINGWPREFIX/lib" LDFLAGS="-static-libstdc++ -Wl,--compat-implib -Wl,--enable-auto-import" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-zlib --enable-introspection=no CPPFLAGS="-DXMD_H $(pkg-config --cflags libopenjp2)" LDFLAGS="-L$MINGWPREFIX/lib" LDFLAGS="-static-libstdc++ -Wl,--compat-implib -Wl,--enable-auto-import" &&
# wl-showstatus build-install &&
# mv poppler/Makefile poppler/Makefile.bak &&
# sed -e "s/-ansi//" poppler/Makefile.bak > poppler/Makefile &&
# mv cpp/Makefile cpp/Makefile.bak &&
# sed -e "s/-ansi//" cpp/Makefile.bak > cpp/Makefile &&
# mv cpp/tests/Makefile cpp/tests/Makefile.bak &&
# sed -e "s/-ansi//" cpp/tests/Makefile.bak > cpp/tests/Makefile &&
# echo "#include <windows.h>" >> config.h &&
# echo "#define HAVE_BOOLEAN" >> config.h &&
# ( make install-strip || make install-strip LIBS="-lpng.dll -lopenjpeg.dll -lxml2" ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="Poppler"
#export STATUS=
#export URL=http://poppler.freedesktop.org/
#export BASENAME=poppler
#export DESCRIPTION="Poppler is a PDF rendering library based on the xpdf-3.0 code base."
#export CATEGORY=graphics,fileformat
#export TYPE=library
##export VERSION=0.60.0
##export VERSIONDATE=20171003
##export VERSION=0.60.1
##export VERSIONDATE=20171006
##export VERSION=0.61.0
##export VERSIONDATE=20171104
##export VERSION=0.61.1
##export VERSIONDATE=20171113
##export VERSION=0.62.0
##export VERSIONDATE=20171204
#####fofi/FoFiType1.cc:233:41: error: 'strtok_r' was not declared in this scope
##export VERSION=0.63.0
##export VERSIONDATE=20180319
#####goo/gfile.cc:83:18: error: 'const struct _stat64' has no member named 'st_mtim'
##export VERSION=0.64.0
##export VERSIONDATE=20180418
##export VERSION=0.65.0
##export VERSIONDATE=20180520
##export VERSION=0.66.0
##export VERSIONDATE=20180620
##export VERSION=0.67.0
##export VERSIONDATE=20180720
##export VERSION=0.68.0
##export VERSIONDATE=20180820
##export VERSION=0.69.0
##export VERSIONDATE=20180922
##export VERSION=0.70.0
##export VERSIONDATE=20181022
##export VERSION=0.70.1
##export VERSIONDATE=20181023
##export VERSION=0.71.0
##export VERSIONDATE=20181101
##export VERSION=0.72.0
##export VERSIONDATE=20181207
##export VERSION=0.73.0
##export VERSIONDATE=20190108
##export VERSION=0.74.0
##export VERSIONDATE=20190208
##export VERSION=0.75.0
##export VERSIONDATE=20190321
##export VERSION=0.76.0
##export VERSIONDATE=20190421
#####splash/SplashBitmap.cc:450:25: error: 'class std::vector<GfxSeparationColorSpace*>' has no member named 'getLength'
##export VERSION=0.76.1
##export VERSIONDATE=20190501
##export VERSION=0.77.0
##export VERSIONDATE=20190525
##export VERSION=0.78.0
##export VERSIONDATE=20190627
##export VERSION=0.79.0
##export VERSIONDATE=20190718
##export VERSION=0.80.0
##export VERSIONDATE=20190823
##export VERSION=0.81.0
##export VERSIONDATE=20190923
##export VERSION=0.82.0
##export VERSIONDATE=20191026
##export VERSION=0.83.0
##export VERSIONDATE=20191128
##export VERSION=0.84.0
##export VERSIONDATE=20191229
##export VERSION=0.85.0
##export VERSIONDATE=20200130
##export VERSION=0.86.0
##export VERSIONDATE=20200229
##export VERSION=0.86.1
##export VERSIONDATE=20200302
##export DEPENDANCIES=zlib,cairo,fontconfig,freetype2,glib2,libiconv,zlib,libxml2,libjpeg,libpng,libtiff,libopenjpeg,pthreads,lcms2,gdk-pixbuf,nss
###export DEPENDANCIES=zlib,cairo,fontconfig,freetype2,glib2,libiconv,zlib,libxml2,libjpeg,libpng,libtiff,libopenjpeg,pthreads,lcms2,gdk-pixbuf,nss,qt4
##export OPTIONALDEPENDANCIES=libcurl
##export BUILDDEPENDANCIES=cmake
#export VERSION=0.87.0
#export VERSIONDATE=20200329
##export VERSION=0.88.0
##export VERSIONDATE=20200428
#wl-showstatus --package-version
#export DEPENDANCIES=boost,zlib,cairo,fontconfig,freetype2,glib2,gobject-introspection,libiconv,zlib,libxml2,libjpeg,libpng,libtiff,libopenjpeg,pthreads,lcms2,gdk-pixbuf,nss
##export DEPENDANCIES=boost,zlib,cairo,fontconfig,freetype2,glib2,gobject-introspection,libiconv,zlib,libxml2,libjpeg,libpng,libtiff,libopenjpeg,pthreads,lcms2,gdk-pixbuf,nss,qt4
#export OPTIONALDEPENDANCIES=libcurl
#export BUILDDEPENDANCIES=cmake
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL2
#export DOWNLOADURL="http://poppler.freedesktop.org/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://poppler.freedesktop.org/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfJ $TARBALLDIR/$BASENAME/poppler-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix missing _MAX_PATH/off64_t/strcasecmp/strcpy_s
#if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then
# for F in $(find . -name *.cc); do
#  mv $F $F.bak &&
#  echo "#undef __STRICT_ANSI__" > $F &&
#  echo "#include <time.h>" >> $F &&
#  cat $F.bak >> $F
# done
# sed -i.bak2 -e "s/strcasecmp/stricmp/g" utils/pdftocairo.cc
# #sed -i.bak2 -e "s/strcasecmp/stricmp/g; s/strcpy_s/strcpy/g; s/strcat_s/strcat/g" test/perf-test.cc
# ## fix missing strtok_r in fofi/FoFiType1.cc.bak (version >= 0.61.1)
# #mv fofi/FoFiType1.cc fofi/FoFiType1.cc.bak
# #echo "#define strtok_r(_s,_sep,_lasts) (*(_lasts)=strtok((_s),(_sep)))" > fofi/FoFiType1.cc &&
# #cat fofi/FoFiType1.cc.bak >> fofi/FoFiType1.cc
# # fix missing strtok_r in fofi/FoFiType1.cc.bak (version >= 0.62.0)
# for F in $(grep -l strtok_r */*.cc); do
#  mv $F $F.bak2 &&
#  echo "#define strtok_r(_s,_sep,_lasts) (*(_lasts)=strtok((_s),(_sep)))" > $F &&
#  cat $F.bak2 >> $F
# done
#fi
## fix missing gmalloc/gstrndup/gfree in utils/pdftocairo-win32.cc (version >= 0.69.0)
#mv utils/pdftocairo-win32.cc utils/pdftocairo-win32.cc.bak
#cat > utils/pdftocairo-win32.cc << EOF
##include <malloc.h>
##include <string.h>
#char* strndup (const char *str, size_t maxlen)
#{
#  int l = strnlen(str, maxlen);
#  char* s = (char*)malloc(l + 1);
#  memcpy(s, str, l);
#  s[l] = 0;
#  return s;
#}
#EOF
#sed -e "s/g\(malloc\|strndup\|free\)/\1/" utils/pdftocairo-win32.cc.bak >> utils/pdftocairo-win32.cc
## fix building static libraries
#for F in $(grep -l "add_library(.*SHARED" $(find . -name CMakeLists.txt)); do
# sed -i.orig -e "s/\(add_library(.*\) SHARED/\1/" $F
#done
## fix installation of .pc files
#sed -i.orig -e "s?^\(\s*\)poppler_create_install_pkgconfig(\([^ ]*\)\.pc \([^ ]*/pkgconfig\))?\1configure_file(\${CMAKE_CURRENT_SOURCE_DIR}/\2.pc.cmake \2.pc @ONLY)\n\1install(FILES \${CMAKE_CURRENT_BINARY_DIR}/\2.pc DESTINATION lib/pkgconfig)?" CMakeLists.txt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# #PKG_CONFIG=$(which pkg-config) cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_CPP:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_LIBOPENJPEG:STRING=auto -DFONT_CONFIGURATION:STRING=win32 -DENABLE_SPLASH:BOOL=ON -DSPLASH_CMYK:BOOL=ON -DGLIB2_LIBRARIES:STRING="$(pkg-config --libs glib-2.0)" -DGLIB2_CFLAGS:STRING="$(pkg-config --cflags glib-2.0)" -DLIBOPENJPEG_LIBRARIES:STRING="$(pkg-config --libs libopenjp2)" -DLIBOPENJPEG_INCLUDE_DIR:PATH="$(ls -1d $MINGWPREFIX/include/openjpeg-*|tail -n1)" -DWITH_Qt4:BOOL=OFF -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT4_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF .. &&
# PKG_CONFIG=$(which pkg-config) cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_CPP:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_XPDF_HEADERS:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_LIBOPENJPEG:STRING=openjpeg2 -DFONT_CONFIGURATION:STRING=win32 -DENABLE_SPLASH:BOOL=ON -DSPLASH_CMYK:BOOL=ON -DGLIB2_LIBRARIES:STRING="$(pkg-config --libs glib-2.0)" -DGLIB2_CFLAGS:STRING="$(pkg-config --cflags glib-2.0)" -DLIBOPENJPEG_LIBRARIES:STRING="$(pkg-config --libs libopenjp2)" -DLIBOPENJPEG_INCLUDE_DIR:PATH="$(ls -1d $MINGWPREFIX/include/openjpeg-*|tail -n1)" -DWITH_Qt4:BOOL=OFF -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT4_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF .. &&
# #QMAKESPEC=$MINGWPREFIX/qt4/mkspecs/win32-g++ PKG_CONFIG=$(which pkg-config) cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_CPP:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_LIBOPENJPEG:STRING=openjpeg2 -DFONT_CONFIGURATION:STRING=win32 -DENABLE_SPLASH:BOOL=ON -DSPLASH_CMYK:BOOL=ON -DGLIB2_LIBRARIES:STRING="$(pkg-config --libs glib-2.0)" -DGLIB2_CFLAGS:STRING="$(pkg-config --cflags glib-2.0)" -DLIBOPENJPEG_LIBRARIES:STRING="$(pkg-config --libs libopenjp2)" -DLIBOPENJPEG_INCLUDE_DIR:PATH="$(ls -1d $MINGWPREFIX/include/openjpeg-*|tail -n1)" -DWITH_Qt4:BOOL=ON -DENABLE_QT4:BOOL=ON -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe -DENABLE_QT5:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT4_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# #PKG_CONFIG=$(which pkg-config) cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_CPP:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_LIBOPENJPEG:STRING=auto -DFONT_CONFIGURATION:STRING=win32 -DENABLE_SPLASH:BOOL=ON -DSPLASH_CMYK:BOOL=ON -DGLIB2_LIBRARIES:STRING="$(pkg-config --libs glib-2.0)" -DGLIB2_CFLAGS:STRING="$(pkg-config --cflags glib-2.0)" -DLIBOPENJPEG_LIBRARIES:STRING="$(pkg-config --libs libopenjp2)" -DLIBOPENJPEG_INCLUDE_DIR:PATH="$(ls -1d $MINGWPREFIX/include/openjpeg-*|tail -n1)" -DWITH_Qt4:BOOL=OFF -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT4_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF .. &&
# PKG_CONFIG=$(which pkg-config) cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_CPP:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_XPDF_HEADERS:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_LIBOPENJPEG:STRING=openjpeg2 -DFONT_CONFIGURATION:STRING=win32 -DENABLE_SPLASH:BOOL=ON -DSPLASH_CMYK:BOOL=ON -DGLIB2_LIBRARIES:STRING="$(pkg-config --libs glib-2.0)" -DGLIB2_CFLAGS:STRING="$(pkg-config --cflags glib-2.0)" -DLIBOPENJPEG_LIBRARIES:STRING="$(pkg-config --libs libopenjp2)" -DLIBOPENJPEG_INCLUDE_DIR:PATH="$(ls -1d $MINGWPREFIX/include/openjpeg-*|tail -n1)" -DWITH_Qt4:BOOL=OFF -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT4_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF .. &&
# #QMAKESPEC=$MINGWPREFIX/qt4/mkspecs/win32-g++ PKG_CONFIG=$(which pkg-config) cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_CPP:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_LIBOPENJPEG:STRING=openjpeg2 -DFONT_CONFIGURATION:STRING=win32 -DENABLE_SPLASH:BOOL=ON -DSPLASH_CMYK:BOOL=ON -DGLIB2_LIBRARIES:STRING="$(pkg-config --libs glib-2.0)" -DGLIB2_CFLAGS:STRING="$(pkg-config --cflags glib-2.0)" -DLIBOPENJPEG_LIBRARIES:STRING="$(pkg-config --libs libopenjp2)" -DLIBOPENJPEG_INCLUDE_DIR:PATH="$(ls -1d $MINGWPREFIX/include/openjpeg-*|tail -n1)" -DWITH_Qt4:BOOL=ON -DENABLE_QT4:BOOL=ON -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe -DENABLE_QT5:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT4_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# #PKG_CONFIG= PATH=$PYDIR:$PATH PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} make -Cbuild_shared install/strip &&
# cp -u poppler/GfxFont.h poppler/CharTypes.h $INSTALLPREFIX/include/poppler/ &&
# mkdir -p $INSTALLPREFIX/include/poppler/goo &&
# cp -u goo/GooString.h $INSTALLPREFIX/include/poppler/goo/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Poppler"
export STATUS=
export URL=http://poppler.freedesktop.org/
export BASENAME=poppler
export DESCRIPTION="Poppler is a PDF rendering library based on the xpdf-3.0 code base."
export CATEGORY=graphics,fileformat
export TYPE=library
#export VERSION=0.87.0
#export VERSIONDATE=20200329
#export VERSION=0.88.0
#export VERSIONDATE=20200428
#export VERSION=0.89.0
#export VERSIONDATE=20200528
#export VERSION=0.90.0
#export VERSIONDATE=20200703
#export VERSION=0.90.1
#export VERSIONDATE=20200712
#export VERSION=20.08.0
#export VERSIONDATE=20200802
#export VERSION=20.09.0
#export VERSIONDATE=20200902
#export VERSION=20.10.0
#export VERSIONDATE=20201002
#export VERSION=20.11.0
#export VERSIONDATE=20201102
#export VERSION=20.12.0
#export VERSIONDATE=20201202
#export VERSION=20.12.1
#export VERSIONDATE=20201207
#export DEPENDANCIES=boost,zlib,cairo,fontconfig,freetype2,glib2,gtk3,gobject-introspection,libiconv,zlib,libxml2,libjpeg,libpng,libtiff,libopenjpeg,pthreads,lcms2,gdk-pixbuf,nss,libcurl,qt
#export OPTIONALDEPENDANCIES=libcurl
#export BUILDDEPENDANCIES=cmake,ninja
##export BUILDDEPENDANCIES=cmake,ninja,gtk-doc
#export VERSION=21.01.0
#export VERSIONDATE=20210103
#export VERSION=21.02.0
#export VERSIONDATE=20210202
####qt5/src/poppler-form.cc:82:1: warning: 'Poppler::FormFieldIcon::FormFieldIcon(Poppler::FormFieldIconData*)' redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]
#export VERSION=21.03.0
#export VERSIONDATE=20210302
#export VERSION=21.04.0
#export VERSIONDATE=20210402
#export VERSION=21.05.0
#export VERSIONDATE=20210503
#export VERSION=21.06.0
#export VERSIONDATE=20210602
#export VERSION=21.06.1
#export VERSIONDATE=20210604
#export VERSION=21.07.0
#export VERSIONDATE=20210703
#export VERSION=21.08.0
#export VERSIONDATE=20210802
#export VERSION=21.09.0
#export VERSIONDATE=20210902
#export VERSION=21.10.0
#export VERSIONDATE=20211001
#export VERSION=21.11.0
#export VERSIONDATE=20211101
#export VERSION=21.12.0
#export VERSIONDATE=20211202
#export VERSION=22.01.0
#export VERSIONDATE=20220105
#export VERSION=22.02.0
#export VERSIONDATE=20220202
#export VERSION=22.03.0
#export VERSIONDATE=20220302
#export VERSION=22.04.0
#export VERSIONDATE=20220402
export VERSION=22.05.0
export VERSIONDATE=20220504
wl-showstatus --package-version
export DEPENDANCIES=boost,zlib,cairo,fontconfig,freetype2,glib2,gtk3,gobject-introspection,libiconv,zlib,libxml2,libjpeg,libpng,libtiff,libopenjpeg,pthreads,lcms2,gdk-pixbuf,nss,libcurl
export OPTIONALDEPENDANCIES=libcurl,qt,qt6
export BUILDDEPENDANCIES=cmake,ninja
#export BUILDDEPENDANCIES=cmake,ninja,gtk-doc
export LICENSEFILE=COPYING
export LICENSETYPE=GPL2
export DOWNLOADURL="http://poppler.freedesktop.org/"
#export DOWNLOADURL="https://github.com/freedesktop/poppler/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://poppler.freedesktop.org/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://poppler.freedesktop.org/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/poppler-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix MSVC issue
mkdir -p winfix
cp -rf $PYDIR/lib/distutils winfix/
patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
@@ -85,3 +85,3 @@
         else:
-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
+            return None

EOF
# avoid __declspec(dllexport) in static builds (version >= 21.01.0)
sed -i.bak -e "s/#if defined(_WIN32)/& \&\& \!defined(STATIC)/" cpp/poppler-global.h glib/poppler-macros.h qt5/src/poppler-export.h qt6/src/poppler-export.h
# fix detection of Python for glib-mkenums (version >= 22.02.0)
sed -i.bak -e "s?\(find_program(GLIB2_MKENUMS_PYTHON python\)3)?\1 PATHS \"$(cygpath -m $PYDIR)\")?" glib/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ PKG_CONFIG=$(which pkg-config) cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_RELOCATABLE:BOOL=ON -DENABLE_CPP:BOOL=ON -DENABLE_UTILS:BOOL=ON -DENABLE_QT5:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_DCTDECODER:STRING=libjpeg -DENABLE_CMS:STRING=lcms2 -DENABLE_ZLIB:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_SPLASH:BOOL=ON -DENABLE_GOBJECT_INTROSPECTION:BOOL=ON -DENABLE_GTK_DOC:BOOL=OFF -DRUN_GPERF_IF_PRESENT:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF -S. -Bbuild_static &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ PKG_CONFIG=$(which pkg-config) cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_RELOCATABLE:BOOL=ON -DENABLE_CPP:BOOL=ON -DENABLE_UTILS:BOOL=ON -DENABLE_QT5:BOOL=ON -DENABLE_QT6:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_DCTDECODER:STRING=libjpeg -DENABLE_CMS:STRING=lcms2 -DENABLE_ZLIB:BOOL=ON -DENABLE_ZLIB_UNCOMPRESS:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_SPLASH:BOOL=ON -DENABLE_GOBJECT_INTROSPECTION:BOOL=ON -DENABLE_GTK_DOC:BOOL=OFF -DRUN_GPERF_IF_PRESENT:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF -DBUILD_QT6_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_C_FLAGS:STRING="-DSTATIC" -DCMAKE_CXX_FLAGS:STRING="-DSTATIC" -S. -Bbuild_static &&
 PATH=$PATH:$MINGWPREFIX/qt/bin:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ PKG_CONFIG=$(which pkg-config) cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_RELOCATABLE:BOOL=ON -DENABLE_CPP:BOOL=ON -DENABLE_UNSTABLE_API_ABI_HEADERS:BOOL=ON -DENABLE_UTILS:BOOL=ON -DENABLE_QT5:BOOL=ON -DENABLE_QT6:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_DCTDECODER:STRING=libjpeg -DENABLE_CMS:STRING=lcms2 -DENABLE_ZLIB:BOOL=ON -DENABLE_ZLIB_UNCOMPRESS:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_SPLASH:BOOL=ON -DENABLE_GOBJECT_INTROSPECTION:BOOL=ON -DENABLE_GTK_DOC:BOOL=OFF -DRUN_GPERF_IF_PRESENT:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF -DBUILD_QT6_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_C_FLAGS:STRING="-DSTATIC" -DCMAKE_CXX_FLAGS:STRING="-DSTATIC $(pkg-config --cflags libopenjp2)" -S. -Bbuild_static &&
 #-DFONT_CONFIGURATION:STRING=fontconfig 
 #-DCMAKE_MODULE_PATH:PATH=
 #-DENABLE_ZLIB_UNCOMPRESS:BOOL=OFF
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ PKG_CONFIG=$(which pkg-config) cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_RELOCATABLE:BOOL=ON -DENABLE_CPP:BOOL=ON -DENABLE_UTILS:BOOL=ON -DENABLE_QT5:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_DCTDECODER:STRING=libjpeg -DENABLE_CMS:STRING=lcms2 -DENABLE_ZLIB:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_SPLASH:BOOL=ON -DENABLE_GOBJECT_INTROSPECTION:BOOL=ON -DENABLE_GTK_DOC:BOOL=OFF -DRUN_GPERF_IF_PRESENT:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ PKG_CONFIG=$(which pkg-config) cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_RELOCATABLE:BOOL=ON -DENABLE_CPP:BOOL=ON -DENABLE_UTILS:BOOL=ON -DENABLE_QT5:BOOL=ON -DENABLE_QT6:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_DCTDECODER:STRING=libjpeg -DENABLE_CMS:STRING=lcms2 -DENABLE_ZLIB:BOOL=ON -DENABLE_ZLIB_UNCOMPRESS:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_SPLASH:BOOL=ON -DENABLE_GOBJECT_INTROSPECTION:BOOL=ON -DENABLE_GTK_DOC:BOOL=OFF -DRUN_GPERF_IF_PRESENT:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF -DBUILD_QT6_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 PATH=$PATH:$MINGWPREFIX/qt/bin:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ PKG_CONFIG=$(which pkg-config) cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_RELOCATABLE:BOOL=ON -DENABLE_CPP:BOOL=ON -DENABLE_UNSTABLE_API_ABI_HEADERS:BOOL=ON -DENABLE_UTILS:BOOL=ON -DENABLE_QT5:BOOL=ON -DENABLE_QT6:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_DCTDECODER:STRING=libjpeg -DENABLE_CMS:STRING=lcms2 -DENABLE_ZLIB:BOOL=ON -DENABLE_ZLIB_UNCOMPRESS:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_SPLASH:BOOL=ON -DENABLE_GOBJECT_INTROSPECTION:BOOL=ON -DENABLE_GTK_DOC:BOOL=OFF -DRUN_GPERF_IF_PRESENT:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF -DBUILD_QT6_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="$(pkg-config --cflags libopenjp2)" -S. -Bbuild_shared &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ PKG_CONFIG=$(which pkg-config) cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_RELOCATABLE:BOOL=ON -DFONT_CONFIGURATION:STRING=fontconfig -DENABLE_CPP:BOOL=ON -DENABLE_UTILS:BOOL=ON -DENABLE_QT5:BOOL=ON -DENABLE_QT6:BOOL=ON -DENABLE_GLIB:BOOL=ON -DENABLE_DCTDECODER:STRING=libjpeg -DENABLE_CMS:STRING=lcms2 -DENABLE_ZLIB:BOOL=ON -DENABLE_ZLIB_UNCOMPRESS:BOOL=ON -DENABLE_LIBCURL:BOOL=ON -DENABLE_SPLASH:BOOL=ON -DENABLE_GOBJECT_INTROSPECTION:BOOL=ON -DENABLE_GTK_DOC:BOOL=OFF -DRUN_GPERF_IF_PRESENT:BOOL=OFF -DBUILD_CPP_TESTS:BOOL=OFF -DBUILD_GTK_TESTS:BOOL=OFF -DBUILD_QT5_TESTS:BOOL=OFF -DBUILD_QT6_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_CXX_FLAGS:STRING="$(pkg-config --cflags libopenjp2)" -S. -Bbuild_shared &&
 #-DENABLE_ZLIB_UNCOMPRESS:BOOL=OFF
 # fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND *=.* \)\([^ ]*\\\\\)\(glib-mkenums\|g-ir-scanner\)?\1\"$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g")\" \2\3?" build_*/build.ninja &&
 #sed -i.bak2 -e "s?\(COMMAND *=.* \)\([^ ]*\\\\\)\(make-glib-api-docs\)?\1\"$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g")\" \2\3?" build_*/build.ninja &&
 sed -i.bak -e "s?\(COMMAND\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(glib-mkenums\|g-ir-scanner\|make-glib-api-docs\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 PKG_CONFIG= PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_shared install/strip &&
 cp -u build_shared/poppler/poppler-config.h $INSTALLPREFIX/include/poppler/ &&
 cp -u poppler/GfxFont.h poppler/CharTypes.h $INSTALLPREFIX/include/poppler/ &&
 mkdir -p $INSTALLPREFIX/include/poppler/goo &&
 cp -u goo/GooString.h $INSTALLPREFIX/include/poppler/goo/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



