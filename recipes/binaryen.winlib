export NAME="binaryen"
export STATUS=
export URL=https://github.com/WebAssembly/binaryen
export BASENAME=binaryen
export DESCRIPTION="Compiler infrastructure and toolchain library for WebAssembly, in C++"
export CATEGORY=development
export TYPE=application
#export VERSION=1.38.32
#export VERSIONDATE=20190613
#export VERSION=1.38.48
#export VERSIONDATE=20191018
#export VERSION=1.39.1
#export VERSIONDATE=20191101
#export VERSION=92
#export VERSIONDATE=20200422
#export VERSION=94
#export VERSIONDATE=20200630
#export VERSION=105
#export VERSIONDATE=20220121
#export VERSION=107
#export VERSIONDATE=20220504
#export VERSION=108
#export VERSIONDATE=20220512
#export VERSION=109
#export VERSIONDATE=20220615
#export VERSION=110
#export VERSIONDATE=20220901
#export VERSION=111
#export VERSIONDATE=20221119
#export VERSION=112
#export VERSIONDATE=20230211
#export VERSION=113
#export VERSIONDATE=20230517
#export VERSION=114
#export VERSIONDATE=20230629
export VERSION=115
export VERSIONDATE=20230912
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/WebAssembly/binaryen/releases version_"
#export DOWNLOADURL="https://github.com/WebAssembly/binaryen/tags  version_"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/WebAssembly/binaryen/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/WebAssembly/binaryen/archive/version_$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/WebAssembly/binaryen/archive/refs/tags/version_$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/version_$VERSION.tar.gz
#cd $BASENAME-$VERSION
cd binaryen-version_$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIB:BOOL=ON -S. -Bbuild_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIB:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
# wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIB:BOOL=OFF -S. -Bbuild_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIB:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# PATH=$PYDIR:$PATH make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# PATH=$PYDIR:$PATH make -Cbuild_shared install/strip &&
# #mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf binaryen-version_$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIB:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIB:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 PATH=$PYDIR:$PATH ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 PATH=$PYDIR:$PATH ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf binaryen-version_$VERSION



