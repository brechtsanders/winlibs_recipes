export NAME="Enblend/Enfuse"
export STATUS=
export URL=http://enblend.sourceforge.net/
#export URL=https://sourceforge.net/projects/enblend/
export BASENAME=enblend-enfuse
export DESCRIPTION="Enblend blends away the seams in a panoramic image mosaic using a multi-resolution spline. Enfuse merges different exposures of the same scene to produce an image that looks much like a tone-mapped image."
export CATEGORY=graphics
export TYPE=application
export VERSION=4.2
export VERSIONDATE=20170706
wl-showstatus --package-version
export DEPENDENCIES=libjpeg,libpng,libtiff,openexr,lcms2,gsl,vigra,boost
export OPTIONALDEPENDENCIES=gperftools
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://sourceforge.net/projects/enblend/files/enblend-enfuse/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/enblend/enblend-enfuse/enblend-enfuse-$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# avoid conflict between VERSION and version
mv VERSION VERSION.bak
# fix missing std::numeric_limits in src/minimizer.cc
mv src/minimizer.cc src/minimizer.cc.bak &&
echo "#include <limits>" > src/minimizer.cc &&
cat src/minimizer.cc.bak >> src/minimizer.cc
# fix issue with ##__VA_ARGS__ in src/enblend.cc and src/enfuse.cc (version >= 4.2)
sed -i.bak -e "s/, ##__VA_ARGS__//" src/enblend.cc src/enfuse.cc
# skip building doc
cat > doc/Makefile.in << EOF
clean:
all:
install:
install-strip:
EOF
# remove LaTeX dependancy
sed -i.bak -e "s/as_fn_error\(.*Unable to find a LaTeX application\)/echo&/" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --without-boost &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug CXXFLAGS="-std=c++11" &&
 wl-showstatus build-install &&
 #HELP2MAN="$PERLDIR/bin/perl.exe $(which help2man)" make -j1 install-strip &&
 ( make -j1 install-strip || make -j1 install-strip HELP2MAN= ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_SSE2:BOOL=ON -DENABLE_OPENMP:BOOL=ON -DVIGRA_VERSION_FILE:FILEPATH=$MINGWPREFIX/lib/vigra/VigraConfigVersion.cmake -DDOC:BOOL=OFF -DPERL_EXECUTABLE:FILEPATH=$PERLDIR/bin/perl.exe -S. -Bbuild_win &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK
