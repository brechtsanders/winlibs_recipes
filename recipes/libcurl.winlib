export NAME="libcurl"
export STATUS=
export URL=http://curl.haxx.se/libcurl/
export BASENAME=libcurl
export DESCRIPTION="libcurl is a free and easy-to-use client-side URL transfer library, supporting FTP, FTPS, HTTP, HTTPS, SCP, SFTP, TFTP, TELNET, DICT, LDAP, LDAPS and FILE. libcurl supports SSL certificates, HTTP POST, HTTP PUT, FTP uploading, HTTP form based upload, proxies, cookies, user+password authentication (Basic, Digest, NTLM, Negotiate, Kerberos4), file transfer resume, http proxy tunneling and more!"
export CATEGORY=communication
export TYPE=library
#export VERSION=7.17.1
#export VERSION=7.18.0
#export VERSION=7.18.1
#export VERSION=7.18.2
#export VERSION=7.19.0
#export VERSION=7.19.2
#export VERSION=7.19.4
#export VERSION=7.19.5
#export VERSION=7.19.6
#export VERSION=7.19.7
#export VERSION=7.20.0
#export VERSIONDATE=20100210
#export VERSION=7.20.1
#export VERSIONDATE=20100415
#export VERSION=7.21.0
#export VERSIONDATE=20100617
#export VERSION=7.21.1
#export VERSIONDATE=20100815
#export VERSION=7.21.2
#export VERSIONDATE=20101013
#export VERSION=7.21.3
#export VERSIONDATE=20101215
#export VERSION=7.21.4
#export VERSIONDATE=20110217
#export VERSION=7.21.5
#export VERSIONDATE=20110418
#export DEPENDENCIES=zlib,openssl,libssh2,libidn,libgssapi,libgcrypt
#export VERSION=7.21.6
#export VERSIONDATE=20110423
#export VERSION=7.22.0
#export VERSIONDATE=20110914
#export VERSION=7.23.0
#export VERSIONDATE=20111116
#export VERSION=7.23.1
#export VERSIONDATE=20111118
#export VERSION=7.24.0
#export VERSIONDATE=20120124
#export VERSION=7.25.0
#export VERSIONDATE=20120323
#export VERSION=7.26.0
#export VERSIONDATE=20120525
#export VERSION=7.27.0
#export VERSIONDATE=20120728
#export VERSION=7.28.0
#export VERSIONDATE=20121011
#export VERSION=7.28.1
#export VERSIONDATE=20121020
#export VERSION=7.29.0
#export VERSIONDATE=20130206
#export VERSION=7.30.0
#export VERSIONDATE=20130412
#export VERSION=7.31.0
#export VERSIONDATE=20130622
#export VERSION=7.32.0
#export VERSIONDATE=20130812
#export VERSION=7.33.0
#export VERSIONDATE=20131014
#export VERSION=7.34.0
#export VERSIONDATE=20131217
#export VERSION=7.35.0
#export VERSIONDATE=20140129
#export VERSION=7.36.0
#export VERSIONDATE=20140326
#export VERSION=7.37.0
#export VERSIONDATE=20140521
#export VERSION=7.37.1
#export VERSIONDATE=20140717
#export VERSION=7.38.0
#export VERSIONDATE=20140910
#export VERSION=7.39.0
#export VERSIONDATE=20141105
#export VERSION=7.40.0
#export VERSIONDATE=20150108
#export VERSION=7.41.0
#export VERSIONDATE=20150226
#export VERSION=7.42.0
#export VERSIONDATE=20150422
#export VERSION=7.42.1
#export VERSIONDATE=20150429
#export VERSION=7.43.0
#export VERSIONDATE=20150617
#export VERSION=7.44.0
#export VERSIONDATE=20150812
#export VERSION=7.45.0
#export VERSIONDATE=20151007
#export VERSION=7.46.0
#export VERSIONDATE=20151202
#export VERSION=7.47.0
#export VERSIONDATE=20160127
#export VERSION=7.47.1
#export VERSIONDATE=20160208
#export VERSION=7.48.0
#export VERSIONDATE=20160323
#export VERSION=7.49.0
#export VERSIONDATE=20160518
#export VERSION=7.49.1
#export VERSIONDATE=20160530
#export VERSION=7.50.0
#export VERSIONDATE=20160721
#export VERSION=7.50.1
#export VERSIONDATE=20160803
#export VERSION=7.50.2
#export VERSIONDATE=20160907
#export VERSION=7.50.3
#export VERSIONDATE=20160914
#export VERSION=7.51.0
#export VERSIONDATE=20161102
#export VERSION=7.52.0
#export VERSIONDATE=20161221
#export VERSION=7.52.1
#export VERSIONDATE=20161223
#export VERSION=7.53.0
#export VERSIONDATE=20170222
#export VERSION=7.53.1
#export VERSIONDATE=20170224
#export VERSION=7.54.0
#export VERSIONDATE=20170419
#export VERSION=7.54.1
#export VERSIONDATE=20170614
#export VERSION=7.55.1
#export VERSIONDATE=20170815
#export VERSION=7.56.0
#export VERSIONDATE=20171005
#export VERSION=7.56.1
#export VERSIONDATE=20171023
#export VERSION=7.57.0
#export VERSIONDATE=20171129
#export VERSION=7.58.0
#export VERSIONDATE=20180124
#export VERSION=7.59.0
#export VERSIONDATE=20180314
#export VERSION=7.60.0
#export VERSIONDATE=20180516
#export VERSION=7.61.0
#export VERSIONDATE=20180711
#export VERSION=7.61.1
#export VERSIONDATE=20180905
#export VERSION=7.62.0
#export VERSIONDATE=20181031
#export VERSION=7.63.0
#export VERSIONDATE=20181212
#export VERSION=7.64.0
#export VERSIONDATE=20190206
#export VERSION=7.64.1
#export VERSIONDATE=20190327
#export VERSION=7.65.0
#export VERSIONDATE=20190523
#export VERSION=7.65.1
#export VERSIONDATE=20190605
#export VERSION=7.65.2
#export VERSIONDATE=20190718
#export VERSION=7.65.3
#export VERSIONDATE=20190720
#export VERSION=7.66.0
#export VERSIONDATE=20190911
#export VERSION=7.67.0
#export VERSIONDATE=20191106
#export VERSION=7.68.0
#export VERSIONDATE=20200108
#export VERSION=7.69.0
#export VERSIONDATE=20200304
#export VERSION=7.69.1
#export VERSIONDATE=20200311
#export VERSION=7.70.0
#export VERSIONDATE=20200429
#export VERSION=7.71.0
#export VERSIONDATE=20200624
#export VERSION=7.71.1
#export VERSIONDATE=20200701
#export VERSION=7.72.0
#export VERSIONDATE=20200819
#export VERSION=7.73.0
#export VERSIONDATE=20201014
#export VERSION=7.74.0
#export VERSIONDATE=20201209
#export VERSION=7.75.0
#export VERSIONDATE=20210203
####lib/vauth/spnego_sspi.c:294:7: error: 'struct negotiatedata' has no member named 'token_max'
#export VERSION=7.76.0
#export VERSIONDATE=20210331
#export VERSION=7.76.1
#export VERSIONDATE=20210414
#export VERSION=7.77.0
#export VERSIONDATE=20210526
#export VERSION=7.78.0
#export VERSIONDATE=20210721
#export VERSION=7.79.0
#export VERSIONDATE=20210915
#export VERSION=7.79.1
#export VERSIONDATE=20210922
#export VERSION=7.80.0
#export VERSIONDATE=20211110
#export VERSION=7.81.0
#export VERSIONDATE=20220105
#export VERSION=7.82.0
#export VERSIONDATE=20220305
#export VERSION=7.83.0
#export VERSIONDATE=20220427
####undefined reference to `__imp_curl_slist_append'
#export VERSION=7.83.1
#export VERSIONDATE=20220511
####lib/vquic/ngtcp2.c:889:6: error: implicit declaration of function 'ngtcp2_conn_get_cwnd_left'
#export VERSION=7.84.0
#export VERSIONDATE=20220627
#export VERSION=7.85.0
#export VERSIONDATE=20220831
#export VERSION=7.86.0
#export VERSIONDATE=20221026
export VERSION=7.87.0
export VERSIONDATE=20221221
wl-showstatus --package-version
#export DEPENDENCIES=zlib,openssl,libssh2,libidn,libgssapi,libgcrypt,librtmp,fbopenssl
#export DEPENDENCIES=zlib,gnutls,libssh2,libidn,libgssapi,libgcrypt,librtmp
#export DEPENDENCIES=zlib,gnutls,libssh2,libidn,libgssapi,libgcrypt,librtmp,libmetalink,libpsl,nghttp2
export DEPENDENCIES=zlib,gnutls,libssh2,libidn,gss,libgcrypt,librtmp,libmetalink
export OPTIONALDEPENDENCIES=libpsl,brotli,nghttp2,ngtcp2,zstd
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
# required for building with --with-spnego
#export DEPENDENCIES=$DEPENDANCIES,fbopenssl
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="MIT/X derivate license"
export DOWNLOADURL="http://curl.haxx.se/download.html curl-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://curl.haxx.se/download/curl-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://curl.haxx.se/download/curl-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/curl-$VERSION.tar.bz2
tar xfJ $TARBALLDIR/$BASENAME/curl-$VERSION.tar.xz
cd curl-$VERSION
#mv docs/examples/10-at-a-time.c docs/examples/10-at-a-time.c.bak
#sed -e "s?sleep(L / 1000)?_sleep(L)?" docs/examples/10-at-a-time.c.bak > docs/examples/10-at-a-time.c
## fix missing definition of UNICODE_STRING in lib/curl_sspi.h (version <= 7.19.4)
#patch -ulbf lib/curl_sspi.h << EOF
#--- lib/curl_sspi.h  Fri Jan 30 08:13:18 2009
#+++ lib/curl_sspi.h  Sat Mar  7 09:28:29 2009
#@@ -39,2 +39,3 @@
# #define SECURITY_WIN32 1
#+#include <subauth.h>
# #include <security.h>
#EOF
# fix src/main.c for 64-bit
patch -ulbf src/main.c << EOF
--- src/main.c  2011-04-22 19:01:50 +0200
+++ src/main.c  2011-08-13 17:04:50 +0200
@@ -436,2 +436,3 @@

+#ifndef __MINGW64__
 static int ftruncate64(int fd, curl_off_t where)
@@ -447,2 +448,3 @@
 #define ftruncate(fd,where) ftruncate64(fd,where)
+#endif

EOF
## fix missing definition of gss_ctx_id_t in lib/urldata.h (--with-gssapi)
#mv lib/urldata.h lib/urldata.h.bak
#echo "#include <gssglue/gssapi/gssapi.h>" > lib/urldata.h
#cat lib/urldata.h.bak >> lib/urldata.h
# fix redefinition of GSS_ERROR in lib/http_negotiate.h (--with-gssapi)
patch -ulbf lib/http_negotiate.h << EOF
--- lib/http_negotiate.h  2013-01-06 23:33:52 +0100
+++ lib/http_negotiate.h  2013-02-06 23:24:52 +0100
@@ -35,3 +35,3 @@

-#ifdef USE_WINDOWS_SSPI
+#if defined(USE_WINDOWS_SSPI) && !defined(GSS_ERROR)
 #define GSS_ERROR(status) (status & 0x80000000)
EOF
# fix lib/http_negotiate_sspi.c (--with-gssapi)
patch -ulbf lib/http_negotiate_sspi.c << EOF
--- lib/http_negotiate_sspi.c  2013-01-16 23:05:56 +0100
+++ lib/http_negotiate_sspi.c  2013-02-07 21:35:24 +0100
@@ -24,3 +24,3 @@

-#ifdef USE_WINDOWS_SSPI
+#if defined(USE_WINDOWS_SSPI) && !defined(HAVE_GSSAPI)

EOF
# fix lib/socks_sspi.c (--with-gssapi)
patch -ulbf lib/socks_sspi.c << EOF
--- lib/socks_sspi.c  2013-01-16 23:05:56 +0100
+++ lib/socks_sspi.c  2013-02-07 21:39:34 +0100
@@ -25,3 +25,3 @@

-#if defined(USE_WINDOWS_SSPI) && !defined(CURL_DISABLE_PROXY)
+#if defined(USE_WINDOWS_SSPI) && !defined(HAVE_GSSAPI) && !defined(CURL_DISABLE_PROXY)

EOF
# fix missing bracket in lib/vtls/gtls.c (version >= 7.45.0)
patch -ulbf lib/vtls/gtls.c << EOF
--- lib/vtls/gtls.c  2015-10-04 23:43:48 +0200
+++ lib/vtls/gtls.c  2015-10-07 20:37:40 +0200
@@ -677,6 +677,7 @@
               gnutls_strerror(rc));
         return CURLE_SSL_CONNECT_ERROR;
 #else
+      {
         failf(data, "gnutls lacks support for encrypted key files");
         return CURLE_SSL_CONNECT_ERROR;
 #endif
EOF
# fix static linking with nghttp2
####bug reported: https://github.com/curl/curl/issues/7353
mv lib/http2.c lib/http2.c.bak
cat > lib/http2.c << EOF
#if defined(BUILDING_LIBCURL) && !defined(DLL_EXPORT)
#define NGHTTP2_STATICLIB
#endif
EOF
cat lib/http2.c.bak >> lib/http2.c
mv lib/http.c lib/http.c.bak
cat > lib/http.c << EOF
#if defined(BUILDING_LIBCURL) && !defined(DLL_EXPORT)
#define NGHTTP2_STATICLIB
#endif
EOF
cat lib/http.c.bak >> lib/http.c
mv lib/vquic/ngtcp2.c lib/vquic/ngtcp2.c.bak
cat > lib/vquic/ngtcp2.c << EOF
#if defined(BUILDING_LIBCURL) && !defined(DLL_EXPORT)
#define NGTCP2_STATICLIB
#define NGHTTP3_STATICLIB
#endif
EOF
cat lib/vquic/ngtcp2.c.bak >> lib/vquic/ngtcp2.c
## fix lib/vquic/ngtcp2.c (version = 7.83.1)
#patch -ulbf lib/vquic/ngtcp2.c << EOF
#@@ -434,2 +438,3 @@
#
#+#if NGTCP2_VERSION_NUM < 0x000600
#   if(ngtcp2_decode_transport_params(
#@@ -441,2 +446,7 @@
#     return -1;
#+#else
#+  if(ngtcp2_conn_decode_remote_transport_params(qs->qconn,
#+       data, data_size) != 0)
#+    return -1;
#+#endif
#
#@@ -449,3 +459,2 @@
#   uint8_t paramsbuf[64];
#-  ngtcp2_transport_params params;
#   ssize_t nwrite;
#@@ -453,2 +462,4 @@
#
#+#if NGTCP2_VERSION_NUM < 0x000600
#+  ngtcp2_transport_params params;
#   ngtcp2_conn_get_local_transport_params(qs->qconn, &params);
#@@ -457,2 +468,9 @@
#     &params);
#+#else
#+  const ngtcp2_transport_params* params;
#+  params = ngtcp2_conn_get_local_transport_params(qs->qconn);
#+  nwrite = ngtcp2_encode_transport_params(
#+    paramsbuf, sizeof(paramsbuf), NGTCP2_TRANSPORT_PARAMS_TYPE_CLIENT_HELLO,
#+    params);
#+#endif
#   if(nwrite < 0) {
#EOF
## fix for nghttp3 0.7.0 or higher in lib/vquic/ngtcp2.c (version = 7.84.0)
#patch -ulbf lib/vquic/ngtcp2.c << EOF
#@@ -1891,8 +1895,3 @@
#         assert(ndatalen == -1);
#-        rv = nghttp3_conn_block_stream(qs->h3conn, stream_id);
#-        if(rv) {
#-          failf(data, "nghttp3_conn_block_stream returned error: %s\\n",
#-                nghttp3_strerror(rv));
#-          return CURLE_SEND_ERROR;
#-        }
#+        nghttp3_conn_block_stream(qs->h3conn, stream_id);
#         continue;
#@@ -1900,9 +1899,3 @@
#         assert(ndatalen == -1);
#-        rv = nghttp3_conn_shutdown_stream_write(qs->h3conn, stream_id);
#-        if(rv) {
#-          failf(data,
#-                "nghttp3_conn_shutdown_stream_write returned error: %s\\n",
#-                nghttp3_strerror(rv));
#-          return CURLE_SEND_ERROR;
#-        }
#+        nghttp3_conn_shutdown_stream_write(qs->h3conn, stream_id);
#         continue;
#EOF
# fix lib/vquic/ngtcp2.c (version >= 7.85.0)
patch -ulbf lib/vquic/ngtcp2.c << EOF
@@ -1983,5 +1987,13 @@
   size_t max_udp_payload_size =
+#if NGTCP2_VERSION_NUM < 0x000a00
       ngtcp2_conn_get_max_udp_payload_size(qs->qconn);
+#else
+      ngtcp2_conn_get_max_tx_udp_payload_size(qs->qconn);
+#endif
   size_t path_max_udp_payload_size =
+#if NGTCP2_VERSION_NUM < 0x000a00
       ngtcp2_conn_get_path_max_udp_payload_size(qs->qconn);
+#else
+      ngtcp2_conn_get_path_max_tx_udp_payload_size(qs->qconn);
+#endif
   size_t max_pktcnt =
EOF
# fix using static GnuTLS when building static library (version >= 7.74.0)
sed -i.bak2 -e "s/^\s*#include <gnutls\//#if defined(CURL_STATICLIB) \&\& \!defined(STATIC_GNUTLS)\n#define STATIC_GNUTLS\n#endif\n&/" lib/vtls/gtls.c lib/vquic/ngtcp2.h
# don't used undefined gnutls_free in lib/vtls/gtls.c (version >= 7.75.0)
sed -i.bak3 -e "s/gnutls_free/free/" lib/vtls/gtls.c
## fix missing depcomp
#automake -a -c --no-force
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
# fix building both static and shared
patch -ulbf configure << EOF
--- configure  2015-05-08 16:07:40.721708200 +0200
+++ configure  2015-05-08 16:16:08.767593800 +0200
@@ -11148,7 +11148,7 @@
 if test "x\$xc_lt_want_enable_shared" = 'xyes' &&
   test "x\$xc_lt_want_enable_static" = 'xyes'; then
   case \$host_os in # (
-    mingw* | pw32* | cegcc* | os2* | aix*)
+    pw32* | cegcc* | os2* | aix*)
       xc_lt_want_enable_static='no'
       ;;
   esac
EOF
# allow building shared libraries when using clang
sed -i.bak -e "s/\$LD --help 2>&1 | \$GREP 'auto-import'/true/" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-Dsocklen_t=int" LDFLAGS="-Wl,--allow-multiple-definition" && make install
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-spnego=$MINGWPREFIX/lib --enable-sspi --enable-ares --enable-ldaps LDFLAGS="-Wl,--allow-multiple-definition" && make install
 #make check
 # to do: --with-gssapi
 # to do: fix $INSTALLPREFIX/bin/curl-config
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM && 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --with-ssl=$MINGWPREFIX --without-gnutls --enable-ldaps --with-gssapi=$MINGWPREFIX --with-spnego=$MINGWPREFIX --enable-sspi && 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --with-ssl=$MINGWPREFIX --without-gnutls --enable-ldaps --with-spnego=$MINGWPREFIX --enable-sspi && 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --with-ssl=$MINGWPREFIX --without-gnutls --enable-ldaps --with-spnego=$MINGWPREFIX --enable-sspi LDFLAGS="-Wl,--compat-implib" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --with-ssl=$MINGWPREFIX --without-gnutls --enable-ldaps --with-spnego=$MINGWPREFIX --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi LDFLAGS="-Wl,--compat-implib" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --with-ssl=$MINGWPREFIX --without-gnutls --enable-ldaps --with-spnego=$MINGWPREFIX --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--compat-implib -Wl,--as-needed -lrtmp" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --with-ssl=$MINGWPREFIX --without-gnutls --enable-ldaps --with-spnego=$MINGWPREFIX --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--compat-implib -Wl,--as-needed" LIBS="-lrtmp" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --without-ssl --with-gnutls=$MINGWPREFIX --enable-ldaps --without-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--compat-implib -Wl,--as-needed -lrtmp" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --without-ssl --with-gnutls=$MINGWPREFIX --enable-ldaps --without-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --with-gssapi --enable-tls-srp --with-libmetalink --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--as-needed" LIBS="-lrtmp" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --without-ssl --with-gnutls=$MINGWPREFIX --enable-ldaps --without-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --with-libmetalink --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--as-needed" LIBS="-lrtmp" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --without-ssl --with-gnutls=$MINGWPREFIX --enable-ldaps --without-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --with-gssapi --with-libmetalink --with-nghttp2 --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed" LIBS="-lrtmp" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --without-ssl --with-gnutls=$MINGWPREFIX --enable-ldaps --with-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --with-gssapi --with-libmetalink --with-libpsl --with-nghttp2 --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed" LIBS="-lrtmp" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --with-ssl --with-gnutls=$MINGWPREFIX --without-mbedtls --without-axtls --enable-ldaps --with-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --with-gssapi --with-libmetalink --with-libpsl --with-nghttp2 --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed" LIBS="-lrtmp" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib=$MINGWPREFIX --with-default-ssl-backend=gnutls --with-gnutls=$MINGWPREFIX --without-ssl --without-nss --without-mbedtls --without-axtls --without-cyassl --without-wolfssl --enable-ldaps --with-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --with-gssapi --with-libmetalink --with-libpsl --with-nghttp2 --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed" LIBS="-lrtmp" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-winssl --without-schannel --disable-unix-sockets --with-zlib=$MINGWPREFIX --with-default-ssl-backend=gnutls --with-gnutls=$MINGWPREFIX --without-ssl --without-nss --without-mbedtls --without-axtls --without-cyassl --without-wolfssl --enable-ldaps --with-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --with-gssapi --with-libmetalink --with-libpsl --with-nghttp2 --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed" LIBS="-lrtmp" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-winssl --without-schannel --disable-unix-sockets --with-zlib=$MINGWPREFIX --with-default-ssl-backend=gnutls --with-gnutls=$MINGWPREFIX --without-ssl --without-nss --without-mbedtls --without-axtls --without-cyassl --without-wolfssl --enable-ldaps --with-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --with-gssapi --with-libpsl --without-nghttp2 --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed" LIBS="-lrtmp" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-unix-sockets --with-zlib=$MINGWPREFIX --with-default-ssl-backend=gnutls --with-gnutls=$MINGWPREFIX --enable-ldaps --with-librtmp=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --with-gssapi --with-libpsl --with-nghttp2 --with-ngtcp2 --enable-websockets --enable-ipv6 --enable-threaded-resolver LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed" LIBS="-lrtmp" &&
 #--with-ngtcp2 
 #--enable-ech 
 ## fix thread model (version >= 7.24.0)
 #echo "#undef USE_THREADS_POSIX" >> lib/curl_config.h &&
 #echo "#define USE_THREADS_WIN32 1" >> lib/curl_config.h &&
 #echo "#undef USE_THREADS_POSIX" >> src/curl_config.h &&
 #echo "#define USE_THREADS_WIN32 1" >> src/curl_config.h &&
 ## fix -pthread in Makefiles (version >= 7.24.0)
 #for F in `find . -iname Makefile` ; do
 # sed -i.orig "s/-pthread//" $F
 #done &&
 # fix definition of both HAVE_GSSAPI and USE_WINDOWS_SSPI (version >= 7.49.0)
 (( grep -q "^#define HAVE_GSSAPI 1" lib/curl_config.h && echo "#undef USE_WINDOWS_SSPI" >> lib/curl_config.h ) || true) &&
 wl-showstatus build-install &&
 ( make install-strip || make -j1 install-strip ) &&
 # fix absolute paths in curl-config
 sed -i.bak -e "s?$INSTALLPREFIX?\$(dirname \$0)/..?g" $INSTALLPREFIX/bin/curl-config &&
 rm -f $INSTALLPREFIX/bin/curl-config.bak &&
 #make check &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf curl-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --disable-shared --without-winssl --without-schannel --disable-unix-sockets --with-zlib=$MINGWPREFIX --with-default-ssl-backend=gnutls --with-gnutls=$MINGWPREFIX --without-ssl --without-nss --without-mbedtls --without-axtls --without-cyassl --without-wolfssl --enable-ldaps --with-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --with-gssapi --with-libmetalink --with-libpsl --with-nghttp2 --enable-ipv6 --enable-threaded-resolver --disable-pthreads LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed" LIBS="-lrtmp" &&
# cd .. &&
# # fix for building static library with against static libunistring
# echo "#define STATIC_LIBUNISTRING 1" >> lib/curl_config.h &&
# # fix definition of both HAVE_GSSAPI and USE_WINDOWS_SSPI (version >= 7.49.0)
# (( grep -q "^#define HAVE_GSSAPI 1" build_static/lib/curl_config.h && echo "#undef USE_WINDOWS_SSPI" >> build_static/lib/curl_config.h ) || true) &&
# wl-showstatus configure &&
# cd build_shared &&
# ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared --without-winssl --without-schannel --disable-unix-sockets --with-zlib=$MINGWPREFIX --with-default-ssl-backend=gnutls --with-gnutls=$MINGWPREFIX --without-ssl --without-nss --without-mbedtls --without-axtls --without-cyassl --without-wolfssl --enable-ldaps --with-spnego --with-librtmp=$MINGWPREFIX --with-libidn=$MINGWPREFIX --with-libssh2=$MINGWPREFIX --enable-sspi --enable-tls-srp --with-gssapi --with-libmetalink --with-libpsl --with-nghttp2 --enable-ipv6 --enable-threaded-resolver --disable-pthreads LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed" LIBS="-lrtmp" &&
# cd .. &&
# # fix definition of both HAVE_GSSAPI and USE_WINDOWS_SSPI (version >= 7.49.0)
# (( grep -q "^#define HAVE_GSSAPI 1" build_shared/lib/curl_config.h && echo "#undef USE_WINDOWS_SSPI" >> build_shared/lib/curl_config.h ) || true) &&
# wl-showstatus build-install &&
# make -Cbuild_static install-strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install-strip &&
# #make -Cbuild_shared check &&
# # fix .la file to include static library
# sed -i -e "s/\(old_library='\)\('\)/\1libcurl.a\2/" $INSTALLPREFIX/lib/libcurl.la &&
# # fix absolute paths in curl-config
# sed -i -e "s?$INSTALLPREFIX?\$(dirname \$0)/..?g" $INSTALLPREFIX/bin/curl-config &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf curl-$VERSION



#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_ARES:BOOL=ON -DCURL_BROTLI:BOOL=ON -DUSE_GNUTLS:BOOL=ON -DUSE_NGHTTP2:BOOL=ON -DENABLE_UNIX_SOCKETS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_ARES:BOOL=ON -DCURL_BROTLI:BOOL=ON -DUSE_GNUTLS:BOOL=ON -DUSE_NGHTTP2:BOOL=ON -DENABLE_UNIX_SOCKETS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
# echo " -Wl,--as-needed $(pkg-config --libs libgcrypt gnutls)" >> build_shared/CMakeFiles/libcurl.rsp &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK

