export NAME="Orcania"
export STATUS=
export URL=https://github.com/babelouest/orcania
export BASENAME=orcania
export DESCRIPTION="Potluck with different functions for different purposes that can be shared among Angharad programs"
export CATEGORY=development
export TYPE=library
#export VERSION=1.0.0
#export VERSIONDATE=20170517
#export VERSION=1.1
#export VERSIONDATE=20170529
#export VERSION=1.1.1
#export VERSIONDATE=20180103
#export VERSION=1.2.0
#export VERSIONDATE=20180218
#export VERSION=1.2.1
#export VERSIONDATE=20180319
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export VERSION=1.2.2
#export VERSIONDATE=20180325
#export VERSION=1.2.3
#export VERSIONDATE=20180413
#export VERSION=1.2.4
#export VERSIONDATE=20180728
#export VERSION=1.2.5
#export VERSIONDATE=20180929
#export VERSION=1.2.6
#export VERSIONDATE=20181001
#export VERSION=1.2.7
#export VERSIONDATE=20181016
#export VERSION=1.2.8
#export VERSIONDATE=20181028
#export VERSION=1.2.9
#export VERSIONDATE=20181207
#export VERSION=2.0.0
#export VERSIONDATE=20190415
#export VERSION=2.0.1
#export VERSIONDATE=20190708
#export VERSION=2.1.0
#export VERSIONDATE=20191216
#export VERSION=2.1.1
#export VERSIONDATE=20200630
####CMake 3.5 or higher is required.  You are running version 3.4.3
#export VERSION=2.2.0
#export VERSIONDATE=20210228
#export VERSION=2.2.1
#export VERSIONDATE=20210511
export VERSION=2.2.2
export VERSIONDATE=20220310
wl-showstatus --package-version
export DEPENDANCIES=libjansson
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/babelouest/orcania/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/babelouest/orcania/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/babelouest/orcania/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix missing strndup/strnstr in orcania.c (version <= 1.0.0)
#mv orcania.c orcania.c.bak
#cat > orcania.c << EOF
##include <malloc.h>
##include <string.h>
#static inline char* strndup (const char* s, size_t n)
#{
#  char* result;
#  size_t len = strlen(s);
#  if (len > n)
#    len = n;
#  result = (char*)malloc(len + 1);
#  if (!result)
#    return 0;
#  result[len] = 0;
#  return (char*)memcpy(result, s, len);
#}
#char* strnstr (const char* haystack, const char* needle, size_t len)
#{
#  int i;
#  size_t needle_len;
#  if ((needle_len = strnlen(needle, len)) == 0)
#    return (char*)haystack;
#  for (i = 0; i <= len - needle_len; i++) {
#    if ((haystack[0] == needle[0]) && strncmp(haystack, needle, needle_len) == 0)
#      return (char *)haystack;
#    haystack++;
#  }
#  return NULL;
#}
#EOF
#cat orcania.c.bak >> orcania.c
## fix missing strndup/strnstr/strcasestr in src/orcania.c (version = 1.1)
#mv src/orcania.c src/orcania.c.bak
#cat > src/orcania.c << EOF
##include <malloc.h>
##include <string.h>
#static inline char* strndup (const char* s, size_t n)
#{
#  char* result;
#  size_t len = strlen(s);
#  if (len > n)
#    len = n;
#  result = (char*)malloc(len + 1);
#  if (!result)
#    return 0;
#  result[len] = 0;
#  return (char*)memcpy(result, s, len);
#}
#char* strnstr (const char* haystack, const char* needle, size_t len)
#{
#  int i;
#  size_t needle_len;
#  if ((needle_len = strnlen(needle, len)) == 0)
#    return (char*)haystack;
#  for (i = 0; i <= len - needle_len; i++) {
#    if ((haystack[0] == needle[0]) && strncmp(haystack, needle, needle_len) == 0)
#      return (char *)haystack;
#    haystack++;
#  }
#  return NULL;
#}
#const char* strcasestr (const char* s1, const char* s2)
#{
#  if (!s1 || !s2)
#    return 0;
#  size_t s2len = strlen(s2);
#  while (*s1)
#    if (strnicmp(s1++, s2, s2len) == 0)
#      return (s1 - 1);
#  return 0;
#}
#EOF
## fix missing const in src/orcania.c (version <= 1.1.1)
#sed -e "s/^char \* o_strcasestr/const &/" src/orcania.c.bak >> src/orcania.c
#mv src/orcania.h src/orcania.h.bak &&
#sed -e "s/^char \* o_strcasestr/const &/" src/orcania.h.bak >> src/orcania.h
## fix Makefile (version <= 1.0.0)
#mv Makefile Makefile.bak &&
#sed -e "s/-lc//; s/\.so/.dll/; s/-Wl,-soname,\(\$(OUTPUT)\) -o \$(OUTPUT)\.\$(VERSION)/-s -Wl,-soname,\1 -o \1 -Wl,--out-implib,\1.a/; s/ln -sf \$(OUTPUT).\$(VERSION).*$/ar cru liborcania.a orcania.o/; s/cp \$(OUTPUT).\$(VERSION)/cp -f *.a/; s/\/sbin\/ldconfig.*/cp -f \$(OUTPUT) \$(PREFIX)\/bin/" Makefile.bak > Makefile
## fix Makefile (version >= 1.1)
#mv src/Makefile src/Makefile.bak &&
#sed -e "s/-lc//; s/\.so/.dll/; s/-Wl,-soname,\(\$(OUTPUT)\) -o \$(OUTPUT)\.\$(VERSION)/-s -Wl,-soname,\1 -o \1 -Wl,--out-implib,\1.a/; s/ln -sf \$(OUTPUT).\$(VERSION).*$/ar cru liborcania.a orcania.o/; s/cp \$(OUTPUT).\$(VERSION)/cp -f *.a/; s/\/sbin\/ldconfig.*/cp -f \$(OUTPUT) \$(PREFIX)\/bin/" src/Makefile.bak > src/Makefile
#wl-showstatus build &&
# make &&
# wl-showstatus build-install &&
# mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# make install PREFIX=$INSTALLPREFIX &&
# cp -f src/*.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
# fix static library name (version >= 1.2.2)
sed -i.bak -e "s/\(OUTPUT_NAME \)lib\(orcania\)/\1\2/" CMakeLists.txt
# don't treat warnings as errors (version >= 2.1.1)
sed -i.bak2 -e "s/-Wall\|-Werror//g" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC:BOOL=ON -DWITH_JANSSON:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build-install &&
 make -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



