export NAME="CAF C++ Actor Framework"
export STATUS=
export URL=https://actor-framework.org/
#export URL=https://actor-framework.org/doc/
#export URL=https://github.com/actor-framework/actor-framework
export BASENAME=libcaf
export DESCRIPTION="An Open Source Implementation of the Actor Model in C++"
export CATEGORY=development
export TYPE=library
#export VERSION=0.16.4
#export VERSIONDATE=20190922
#export VERSION=0.16.5
#export VERSIONDATE=20191112
#export VERSION=0.17.1
#export VERSIONDATE=20190907
#export VERSION=0.17.2
#export VERSIONDATE=20191021
#export VERSION=0.17.3
#export VERSIONDATE=20191112
#export VERSION=0.17.4
#export VERSIONDATE=20200208
#export VERSION=0.17.5
#export VERSIONDATE=20200513
export VERSION=0.17.6
export VERSIONDATE=20200726
#export VERSION=0.18.0
#export VERSIONDATE=20210125
#export VERSION=0.18.1
#export VERSIONDATE=20210319
#export VERSION=0.18.2
#export VERSIONDATE=20210326
#export VERSION=0.18.3
#export VERSIONDATE=20210521
#export VERSION=0.18.4
#export VERSIONDATE=20210707
#export VERSION=0.18.5
#export VERSIONDATE=20210716
wl-showstatus --package-version
export DEPENDANCIES=khronos-opencl-icd-loader
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD/Boost
export DOWNLOADURL="https://github.com/actor-framework/actor-framework/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/actor-framework/actor-framework/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd actor-framework-$VERSION
# fix for GCC 11 in libcaf_io/caf/io/network/receive_buffer.hpp (version >= 0.17.6)
mv libcaf_io/caf/io/network/receive_buffer.hpp libcaf_io/caf/io/network/receive_buffer.hpp.bak &&
echo "#include <limits>" > libcaf_io/caf/io/network/receive_buffer.hpp &&
cat libcaf_io/caf/io/network/receive_buffer.hpp.bak >> libcaf_io/caf/io/network/receive_buffer.hpp
# fix for building both static and shared version
sed -i.bak -e "s/WIN32 AND/MSVC AND/" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCAF_BUILD_STATIC:BOOL=yes -DCAF_CAF_BUILD_STATIC_ONLY:BOOL=OFF -DCAF_NO_PYTHON:BOOL=ON -DCAF_NO_EXAMPLES:BOOL=ON -DCAF_NO_UNIT_TESTS:BOOL=ON -S. -Bbuild_win &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCAF_BUILD_STATIC:BOOL=yes -DCAF_CAF_BUILD_STATIC_ONLY:BOOL=OFF -DCAF_NO_PYTHON:BOOL=ON -DCAF_NO_EXAMPLES:BOOL=ON -DCAF_NO_UNIT_TESTS:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-fcommon" -S. -Bbuild_win &&
 ## fix multiple definition of _Unwind_Resume
 #echo "-Wl,--allow-multiple-definition" >> build_win/libcaf_io/CMakeFiles/libcaf_io_shared.dir/linklibs.rsp &&
 #echo "-Wl,--allow-multiple-definition" >> build_win/libcaf_openssl/CMakeFiles/libcaf_openssl_shared.dir/linklibs.rsp &&
 #( echo "-Wl,--allow-multiple-definition" >> build_win/libcaf_opencl/CMakeFiles/libcaf_opencl_shared.dir/linklibs.rsp || true ) &&
 #echo "-Wl,--allow-multiple-definition" >> build_win/tools/CMakeFiles/caf-vec.dir/linklibs.rsp &&
 #( echo "-Wl,--allow-multiple-definition" >> build_win/doc/CMakeFiles/caf-generate-rst.dir/linklibs.rsp || true ) &&
 #( echo "-Wl,--as-needed -lcfgmgr32" >> build_win/libcaf_opencl/CMakeFiles/libcaf_opencl_shared.dir/linklibs.rsp || true ) &&
 #echo "-Wl,--allow-multiple-definition" >> build_win/libcaf_io/CMakeFiles/libcaf_io_shared.dir/linklibs.rsp &&
 #echo "-Wl,--as-needed -lcfgmgr32" >> build_win/libcaf_openssl/CMakeFiles/libcaf_openssl_shared.dir/linklibs.rsp &&
 #echo "-Wl,--allow-multiple-definition" >> build_win/libcaf_openssl/CMakeFiles/libcaf_openssl_shared.dir/linklibs.rsp &&
 #echo "-Wl,--allow-multiple-definition" >> build_win/libcaf_opencl/CMakeFiles/libcaf_opencl_shared.dir/linklibs.rsp &&
 #echo "-Wl,--allow-multiple-definition" >> build_win/tools/CMakeFiles/caf-vec.dir/linklibs.rsp &&
 for F in $(find build_win -name linklibs.rsp); do
  echo "-Wl,--allow-multiple-definition -Wl,--as-needed -lcfgmgr32" >> $F
 done &&
 wl-showstatus build-install &&
 make -Cbuild_win install/strip &&
 # copy missing .dll.a files (version >= 0.17.1)
 cp -u build_win/lib/lib*.dll.a $INSTALLPREFIX/lib/ &&
 # copy missing libcaf_openssl (version >= 0.17.1)
 cp -u build_win/lib/libcaf_openssl_static.a $INSTALLPREFIX/lib/ &&
 cp -u build_win/lib/libcaf_openssl.dll $INSTALLPREFIX/bin/ &&
 # create copies of static libraries without the _static suffix
 for F in $INSTALLPREFIX/lib/lib*_static.a; do
  cp -u $F $(echo -n $F|sed -e "s/_static\.a$/.a/")
 done &&
 # strip DLLs
 strip $INSTALLPREFIX/bin/*.dll &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf actor-framework-$VERSION
####TO DO: check why libcaf_openssl is not installed properly and if include files are missing



# fix missing localtime_r in libcaf_core/src/detail/print.cpp (version >= 0.18.0)
mv libcaf_core/src/detail/print.cpp libcaf_core/src/detail/print.cpp.bak &&
echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > libcaf_core/src/detail/print.cpp &&
cat libcaf_core/src/detail/print.cpp.bak >> libcaf_core/src/detail/print.cpp
# fix undefined reference to GetAdaptersAddresses (version >= 0.18.0)
echo "-Wl,--as-needed -liphlpapi" >> build_win/libcaf_core/CMakeFiles/caf-core-test.dir/linklibs.rsp
echo "-Wl,--as-needed -liphlpapi" >> build_win/libcaf_core/CMakeFiles/libcaf_core.dir/linklibs.rsp
