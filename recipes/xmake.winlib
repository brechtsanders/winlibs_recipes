export NAME="xmake"
export STATUS=
export URL=https://xmake.io/
#export URL=https://github.com/xmake-io/xmake/
export BASENAME=xmake
export DESCRIPTION="A cross-platform build utility based on Lua"
export CATEGORY=development
export TYPE=application
#export VERSION=2.2.7
#export VERSIONDATE=20190704
#export VERSION=2.2.8
#export VERSIONDATE=20190826
#export VERSION=2.2.9
#export VERSIONDATE=20191221
#export VERSION=2.3.1
#export VERSIONDATE=20200223
#export VERSION=2.3.2
#export VERSIONDATE=20200328
#export VERSION=2.3.3
#export VERSIONDATE=20200426
#export VERSION=2.3.4
#export VERSIONDATE=20200607
#export VERSION=2.3.5
#export VERSIONDATE=20200628
#export VERSION=2.3.6
#export VERSIONDATE=20200729
#export VERSION=2.3.7
#export VERSIONDATE=20200915
#export VERSION=2.3.8
#export VERSIONDATE=20201018
#export VERSION=2.3.9
#export VERSIONDATE=20201125
#export VERSION=2.5.1
#export VERSIONDATE=20210121
#export VERSION=2.5.2
#export VERSIONDATE=20210228
#export VERSION=2.5.3
#export VERSIONDATE=20210408
#export VERSION=2.5.4
#export VERSIONDATE=20210515
#export VERSION=2.5.5
#export VERSIONDATE=20210701
#export VERSION=2.5.6
#export VERSIONDATE=20210726
#export VERSION=2.5.7
#export VERSIONDATE=20210829
#export VERSION=2.5.8
#export VERSIONDATE=20211009
#export VERSION=2.5.9
#export VERSIONDATE=20211031
#export VERSION=2.6.1
#export VERSIONDATE=20211203
#export VERSION=2.6.2
#export VERSIONDATE=20211217
#export VERSION=2.6.3
#export VERSIONDATE=20220122
#export VERSION=2.6.4
#export VERSIONDATE=20220307
#export VERSION=2.6.5
#export VERSIONDATE=20220425
#export VERSION=2.6.6
#export VERSIONDATE=20220525
#export VERSION=2.6.7
#export VERSIONDATE=20220529
#export VERSION=2.6.8
#export VERSIONDATE=20220623
#export VERSION=2.6.9
#export VERSIONDATE=20220717
#export VERSION=2.7.1
#export VERSIONDATE=20220827
#export VERSION=2.7.2
#export VERSIONDATE=20221010
#export VERSION=2.7.3
#export VERSIONDATE=20221108
#export VERSION=2.7.4
#export VERSIONDATE=20221224
#export VERSION=2.7.5
#export VERSIONDATE=20230107
#export VERSION=2.7.6
#export VERSIONDATE=20230127
#export VERSION=2.7.7
#export VERSIONDATE=20230224
#export VERSION=2.7.8
#export VERSIONDATE=20230405
#export VERSION=2.7.9
#export VERSIONDATE=20230515
#export VERSION=2.8.1
#export VERSIONDATE=20230711
#export VERSION=2.8.2
#export VERSIONDATE=20230823
#export VERSION=2.8.3
#export VERSIONDATE=20230926
#export VERSION=2.8.5
#export VERSIONDATE=20231107
#export VERSION=2.8.6
#export VERSIONDATE=20231226
#export VERSION=2.8.7
#export VERSIONDATE=20240225
#export VERSION=2.8.8
#export VERSIONDATE=20240302
#export VERSION=2.8.9
#export VERSIONDATE=20240321
#export VERSION=2.9.1
#export VERSIONDATE=20240422
#export VERSION=2.9.2
#export VERSIONDATE=20240524
#export VERSION=2.9.3
#export VERSIONDATE=20240624
#export VERSION=2.9.4
#export VERSIONDATE=20240730
#export VERSION=2.9.5
#export VERSIONDATE=20240914
#export VERSION=2.9.6
#export VERSIONDATE=20241030
#export VERSION=2.9.7
#export VERSIONDATE=20241219
#export VERSION=2.9.8
#export VERSIONDATE=20250205
export VERSION=2.9.9
export VERSIONDATE=20250408
wl-showstatus --package-version
#export DEPENDENCIES=lua,lua-cjson,tbox,libsv,ncurses,liblz4
export DEPENDENCIES=tbox,libsv,luajit,liblz4,ncurses
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/xmake-io/xmake/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/xmake-io/xmake/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix luajit include path in core/src/xmake/prefix.h (version >= 2.8.2)
#patch -ulbf core/src/xmake/prefix.h << EOF
#@@ -35,5 +35,5 @@
# #ifdef USE_LUAJIT
#-#   include "luajit.h"
#-#   include "lualib.h"
#-#   include "lauxlib.h"
#+#   include "$(${PKG_CONFIG:-pkg-config} --cflags-only-I luajit|sed -e "s?^.*/??")/luajit.h"
#+#   include "$(${PKG_CONFIG:-pkg-config} --cflags-only-I luajit|sed -e "s?^.*/??")/lualib.h"
#+#   include "$(${PKG_CONFIG:-pkg-config} --cflags-only-I luajit|sed -e "s?^.*/??")/lauxlib.h"
# #else
#EOF
# fix core/src/xmake/os/cpfile.c (version >= 2.9.5)
patch -ulbf core/src/xmake/os/cpfile.c << EOF
@@ -52,4 +52,6 @@
     tb_bool_t is_writeable = lua_toboolean(lua, 4);
+#ifdef TB_FILE_COPY_WRITEABLE
     if (is_writeable)
         flags |= TB_FILE_COPY_WRITEABLE;
+#endif

EOF
# skip building tbox
mkdir -p core/src/tbox/tbox/src
touch core/src/tbox/tbox/src/xmake.sh
# fix mktemp errors in configure (version >= 2.8.9)
####mktemp.exe: cannot make temp file /tmp/tmp.TFebJYCwWH: No such file or directory
patch -ulbf configure << EOF
@@ -205,3 +205,3 @@
 _os_tmpfile() {
-    _ret=\$(mktemp)
+    _ret=\$(mktemp -p \$TEMP)
 }
EOF
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --mode=release --plat=mingw --arch=$(echo $RUNPLATFORM|sed -e "s/^\([^-]*\)-.*$/\1/"|sed -e "s/^i686/i386/; s/^aarch64/arm64/") --generator=gmake --toolchain=$(if ${CC:-gcc} --version|grep -q clang; then echo clang; else echo gcc; fi) --runtime=lua --external=yes --buildir=build_win &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --mode=release --plat=mingw --arch=$(echo $RUNPLATFORM|sed -e "s/^\([^-]*\)-.*$/\1/"|sed -e "s/^i686/i386/; s/^aarch64/arm64/") --generator=gmake --toolchain=$(if ${CC:-gcc} --version|grep -q clang; then echo clang; else echo gcc; fi) --runtime=luajit --external=yes --buildir=build_win &&
 #--generator=ninja 
 #--kind=shared 
 #sed -i.bak -e "s/\(-o [^ ]*xmake\.exe .*\$(\)demo_ldflags/\1xmake_ldflags/" makefile &&
 ## make sure luajit path is included first (version <= 2.8.8)
 #sed -i.bak -e "s?^[^ ]*cflags=?&$(${PKG_CONFIG:-pkg-config} --cflags-only-I luajit) ?" makefile &&
 # make sure luajit path is included first and correct linker flags are used (version = 2.8.9)
 sed -i.bak -e "s?^[^ ]*cflags=?&$(${PKG_CONFIG:-pkg-config} --cflags-only-I luajit) ?; s?^[^ ]*ldflags=.*?& $(${PKG_CONFIG:-pkg-config} --libs luajit) -ltbox -lsv -llz4?" makefile &&
 ## fix empty xmake.config.h (version >= 2.8.9)
 #if [ ! -s build_win/mingw/*/release/xmake.config.h ]; then
 # sed -e "s/\${VERSION}/$VERSION/; s/\${VERSION_MAJOR}/$(echo $VERSION|sed -e "s/^\([0-9]*\)\.[0-9]*\.[0-9]*.*$/\1/")/; s/\${VERSION_MINOR}/$(echo $VERSION|sed -e "s/^[0-9]*\.\([0-9]*\)\.[0-9]*.*$/\1/")/; s/\${VERSION_ALTER}/$(echo $VERSION|sed -e "s/^[0-9]*\.[0-9]*\.\([0-9]*\).*$/\1/")/; s/\${VERSION_BUILD}/0/; s/\${GIT_BRANCH}/$VERSION/; s/\${GIT_COMMIT}/$VERSION/" core/src/xmake/xmake.config.h.in > build_win/mingw/*/release/xmake.config.h
 #fi
 # fix issues building with GCC 14 or higher (version >= 2.9.1)
 sed -i.bak2 -e "s?^[^ ]*cflags=?&-Wno-incompatible-pointer-types ?" makefile &&
 wl-showstatus build-install &&
 make -f makefile install &&
 ## copy binary to folder when it can find its files (version >= 2.8.9)
 #mkdir -p $INSTALLPREFIX/share/xmake/bin &&
 #cp -f $INSTALLPREFIX/bin/xmake.exe $INSTALLPREFIX/bin/xrepo $INSTALLPREFIX/share/xmake/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



