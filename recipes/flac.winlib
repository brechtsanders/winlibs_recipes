#export NAME="FLAC"
#export STATUS=
#export URL=http://flac.sourceforge.net/
#export BASENAME=flac
#export DESCRIPTION='FLAC stands for Free Lossless Audio Codec, an audio format similar to MP3, but lossless, meaning that audio is compressed in FLAC without any loss in quality. This is similar to how Zip works, except with FLAC you will get much better compression because it is designed specifically for audio, and you can play back compressed FLAC files in your favorite player (or your car or home stereo, see supported devices) just like you would an MP3 file.'
#export CATEGORY=audio,codec
#export TYPE=library
#export VERSION=1.2.1
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=pexports
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING.GPL
#export LICENSETYPE=BSD
#export DOWNLOADURL="http://sourceforge.net/projects/flac/files/ flac-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://surfnet.dl.sourceforge.net/project/flac/flac-win/$BASENAME-$VERSION-win/$BASENAME-$VERSION-win.zip
#export DOWNLOADSOURCEURL=http://surfnet.dl.sourceforge.net/project/flac/flac-win/$BASENAME-$VERSION-win/$BASENAME-$VERSION-devel-win.zip
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##unzip -oq -d $BASENAME-$VERSION -j $TARBALLDIR/$BASENAME/$BASENAME-$VERSION-win.zip
##unzip -oq -d $BASENAME-$VERSION -j $TARBALLDIR/$BASENAME/$BASENAME-$VERSION-devel-win.zip
#unzip -oq -d $BASENAME-$VERSION $TARBALLDIR/$BASENAME/$BASENAME-$VERSION-win.zip
#unzip -oq -d $BASENAME-$VERSION $TARBALLDIR/$BASENAME/$BASENAME-$VERSION-devel-win.zip
#cd $BASENAME-$VERSION
#mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin
#cp -rfp include/FLAC* $INSTALLPREFIX/include/
#cp lib/libFLAC_static.lib $INSTALLPREFIX/lib/libFLAC.lib
#cp lib/libFLAC++_static.lib $INSTALLPREFIX/lib/libFLAC++.lib
#cp lib/libFLAC*.dll $INSTALLPREFIX/bin/
#cp bin/*.exe $INSTALLPREFIX/bin/
#pexports -o $INSTALLPREFIX/bin/libFLAC.dll > libFLAC.dll.def
#$RUNPLATFORM-dlltool --def libFLAC.dll.def --dllname $INSTALLPREFIX/bin/libFLAC.dll --output-lib $INSTALLPREFIX/lib/libFLAC.dll.a
#pexports -o $INSTALLPREFIX/bin/libFLAC++.dll > libFLAC++.dll.def
#$RUNPLATFORM-dlltool --def libFLAC++.dll.def --dllname $INSTALLPREFIX/bin/libFLAC++.dll --output-lib $INSTALLPREFIX/lib/libFLAC++.dll.a
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



#export NAME="FLAC"
#export STATUS=
##export URL=http://flac.sourceforge.net/
#export URL=https://xiph.org/flac/
#export BASENAME=flac
#export DESCRIPTION="FLAC stands for Free Lossless Audio Codec, an audio format similar to MP3, but lossless, meaning that audio is compressed in FLAC without any loss in quality. This is similar to how Zip works, except with FLAC you will get much better compression because it is designed specifically for audio, and you can play back compressed FLAC files in your favorite player (or your car or home stereo, see supported devices) just like you would an MP3 file."
#export CATEGORY=audio,codec
#export TYPE=library
##export VERSION=1.2.1
##export VERSIONDATE=
##export VERSION=1.3.1
##export VERSIONDATE=20141129
##export VERSION=1.3.2
##export VERSIONDATE=20170101
#export VERSION=1.3.3
#export VERSIONDATE=20190804
#wl-showstatus --package-version
#export DEPENDENCIES=libogg
#export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=pexports
##export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING.GPL
#export LICENSETYPE=BSD
##export DOWNLOADURL="http://sourceforge.net/projects/flac/files/ flac-"
##export DOWNLOADURL="http://sourceforge.net/projects/flac/files/flac-src/"
##export DOWNLOADURL="https://github.com/xiph/flac/releases"
#export DOWNLOADURL="http://downloads.xiph.org/releases/flac/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/flac/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://surfnet.dl.sourceforge.net/project/flac/flac-win/$BASENAME-$VERSION-win/$BASENAME-$VERSION-devel-win.zip
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/flac/flac-src/flac-$VERSION-src/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/flac/flac-src/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://downloads.xiph.org/releases/flac/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix for missing definition of SIZE_T_MAX
#mv include/share/alloc.h  include/share/alloc.h.bak
#sed -e "s/# *error/#define SIZE_T_MAX ((size_t)-1)/" include/share/alloc.h.bak > include/share/alloc.h
## fix missing memcmp
#mv examples/cpp/encode/file/main.cpp examples/cpp/encode/file/main.cpp.bak
#echo "#include <string.h>" > examples/cpp/encode/file/main.cpp
#cat examples/cpp/encode/file/main.cpp.bak >> examples/cpp/encode/file/main.cpp
### fix libtool issue (version >= 1.2.1)
##echo "exit 0" > src/flac/flac.
##echo "exit 0" > src/metaflac/metaflac.
### fix for building DLL (not working yet)
##patch -ulbf configure.in << EOF
##--- configure.in  2007-09-13 17:48:42 +0200
##+++ configure.in  2010-02-11 16:35:54 +0100
##@@ -22,2 +22,4 @@
## AM_INIT_AUTOMAKE(flac, 1.2.1)
##+AC_LIBTOOL_WIN32_DLL
##+#LT_NO_UNDEFINED
##EOF
### remove dependancy on dynamic libstdc++ (GCC 4)
##mv libtool libtool.bak &&
##sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
##mv libtool-disable-static libtool-disable-static.bak &&
##sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool-disable-static.bak > libtool-disable-static &&
#wl-showstatus configure &&
# #./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32-dll --with-gnu-ld LDFLAGS="-Wl,-no-undefined"
# #./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32-dll LDFLAGS="-Wl,-no-undefined" &&
# #./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32-dll --with-gnu-ld LDFLAGS="-no-undefined -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32-dll --with-gnu-ld LDFLAGS="-lws2_32 -no-undefined -Wl,-no-undefined" &&
# # make install-strip &&
# # unzip -oq -d $INSTALLPREFIX/bin -j $TARBALLDIR/$BASENAME/$BASENAME-$VERSION-devel-win.zip lib/*.dll &&
# # pexports -o $INSTALLPREFIX/bin/libFLAC.dll > libFLAC.dll.def &&
# # dlltool --def libFLAC.dll.def --dllname $INSTALLPREFIX/bin/libFLAC.dll --output-lib $INSTALLPREFIX/lib/libFLAC.dll.a &&
# # pexports -o $INSTALLPREFIX/bin/libFLAC++.dll > libFLAC++.dll.def &&
# # dlltool --def libFLAC++.dll.def --dllname $INSTALLPREFIX/bin/libFLAC++.dll --output-lib $INSTALLPREFIX/lib/libFLAC++.dll.a &&
# # mv $INSTALLPREFIX/lib/libFLAC.la $INSTALLPREFIX/lib/libFLAC.la.bak &&
# # sed -e "s/^\(dlname='\)\('\)/\1libFLAC.dll\2/" $INSTALLPREFIX/lib/libFLAC.la.bak > $INSTALLPREFIX/lib/libFLAC.la &&
# # rm $INSTALLPREFIX/lib/libFLAC.la.bak &&
# # mv $INSTALLPREFIX/lib/libFLAC++.la $INSTALLPREFIX/lib/libFLAC++.la.bak &&
# # sed -e "s/^\(dlname='\)\('\)/\1libFLAC++.dll\2/" $INSTALLPREFIX/lib/libFLAC++.la.bak > $INSTALLPREFIX/lib/libFLAC++.la &&
# # rm $INSTALLPREFIX/lib/libFLAC++.la.bak &&
# ## fix building DLLs on 64-bit
# #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
# #fi
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32-dll --with-gnu-ld LDFLAGS="-lws2_32 -no-undefined -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32-dll --with-gnu-ld LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-win32-dll --with-gnu-ld LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,-no-undefined" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-win32-dll --disable-examples CXXFLAGS="-std=c++98" LDFLAGS="-Wl,--as-needed -lws2_32" &&
# wl-showstatus build-install &&
# # fix building DLLs
# sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="FLAC"
export STATUS=
export URL=https://xiph.org/flac/
#export URL=http://flac.sourceforge.net/
export BASENAME=flac
export DESCRIPTION="FLAC stands for Free Lossless Audio Codec, an audio format similar to MP3, but lossless, meaning that audio is compressed in FLAC without any loss in quality. This is similar to how Zip works, except with FLAC you will get much better compression because it is designed specifically for audio, and you can play back compressed FLAC files in your favorite player (or your car or home stereo, see supported devices) just like you would an MP3 file."
export CATEGORY=audio,codec
export TYPE=library
#export VERSION=1.3.4
#export VERSIONDATE=20220221
#export VERSION=1.4.0
#export VERSIONDATE=20220910
#export VERSION=1.4.1
#export VERSIONDATE=20220923
export VERSION=1.4.2
export VERSIONDATE=20221023
wl-showstatus --package-version
export DEPENDENCIES=libogg,libiconv
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.GPL
export LICENSETYPE=BSD
#export DOWNLOADURL="http://sourceforge.net/projects/flac/files/ flac-"
#export DOWNLOADURL="http://sourceforge.net/projects/flac/files/flac-src/"
#export DOWNLOADURL="https://github.com/xiph/flac/releases"
export DOWNLOADURL="http://downloads.xiph.org/releases/flac/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/xiph/flac/releases/download/$VERSION/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=http://downloads.xiph.org/releases/flac/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix missing file (version >= 1.4.0)
touch doc/api
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_UTILS:BOOL=ON -DWITH_STACK_PROTECTOR:BOOL=ON -DBUILD_DOCS:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_UTILS:BOOL=ON -DWITH_STACK_PROTECTOR:BOOL=ON -DBUILD_DOCS:BOOL=OFF -DWITH_STACK_PROTECTOR:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -fstack-protector-strong -Wl,--as-needed -lssp_nonshared/" build_static/build.ninja &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_UTILS:BOOL=ON -DWITH_STACK_PROTECTOR:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_UTILS:BOOL=ON -DWITH_STACK_PROTECTOR:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DWITH_STACK_PROTECTOR:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -fstack-protector-strong -Wl,--as-needed -lssp/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/share/aclocal &&
 cp -u src/libFLAC/libFLAC.m4 src/libFLAC++/libFLAC++.m4 $INSTALLPREFIX/share/aclocal/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



