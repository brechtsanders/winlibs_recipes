export NAME="Thrust"
export STATUS=
export URL=https://thrust.github.io/
export BASENAME=thrust
export DESCRIPTION="Thrust is a parallel algorithms library which resembles the C++ Standard Template Library (STL). Thrust's high-level interface greatly enhances programmer productivity while enabling performance portability between GPUs and multicore CPUs. Interoperability with established technologies (such as CUDA, TBB, and OpenMP) facilitates integration with existing software. Develop high-performance applications rapidly with Thrust!"
export CATEGORY=development
export TYPE=library
#export VERSION=1.7.0
#export VERSIONDATE=20190228
#export VERSION=1.8.2
#export VERSIONDATE=20171128
#export VERSION=1.9.4
#export VERSIONDATE=20190301
#export VERSION=1.9.5
#export VERSIONDATE=20190515
#export DEPENDENCIES=tbb
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=scons
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=1.9.8
#export VERSIONDATE=20200301
#export VERSION=1.9.8-1
#export VERSIONDATE=20200519
####thrust/iterator/detail/iterator_traits.inl:95:10: error: no type named 'iterator_category' in 'struct thrust::iterator_traits<only_set_when_expected_it>'
#export VERSION=1.9.10
#export VERSIONDATE=20200516
####testing/shuffle.cu:49:11: error: 'sequence' is not a member of 'thrust'
#export VERSION=1.9.10-1
#export VERSIONDATE=20200721
####thrust/iterator/detail/iterator_traits.inl:95:10: error: no type named 'iterator_category' in 'struct thrust::iterator_traits<only_set_when_expected_it>'
#export VERSION=1.10.0
#export VERSIONDATE=20200916
#export VERSION=1.11.0
#export VERSIONDATE=20201205
#export VERSION=1.12.0
#export VERSIONDATE=20210309
#export VERSION=1.12.1
#export VERSIONDATE=20210616
#export VERSION=1.13.0
#export VERSIONDATE=20210629
#export VERSION=1.13.1
#export VERSIONDATE=20211026
#export VERSION=1.14.0
#export VERSIONDATE=20210825
#export VERSION=1.15.0
#export VERSIONDATE=20211102
#export VERSION=1.16.0
#export VERSIONDATE=20220215
#export VERSION=1.17.0
#export VERSIONDATE=20220603
#export VERSION=1.17.1
#export VERSIONDATE=20220816
export VERSION=1.17.2
export VERSIONDATE=20220914
####CMake Error: File dependencies/cub/cub/cmake/cub-header-search.cmake.in does not exist.
#export VERSION=2.0.1
#export VERSIONDATE=20230309
#export VERSION=2.1.0
#export VERSIONDATE=20230321
####Could not find a package configuration file provided by "libcudacxx" (requested version 1.8.0)
wl-showstatus --package-version
export DEPENDENCIES=tbb
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/thrust/thrust/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/thrust/thrust/releases/download/$VERSION/$BASENAME-$VERSION.zip
export DOWNLOADSOURCEURL=https://github.com/thrust/thrust/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
unzip -oq $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.zip -d$BASENAME-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
#patch -ulbf SConstruct << EOF
#@@ -168,13 +168,5 @@
#
#-      # choose bitness
#-      bitness = 'ia32'
#-      if platform.machine()[-2:] == '64':
#-        bitness = 'intel64'
#-
#-      # choose msvc version
#-      msvc_version = 'vc' + str(int(float(env['MSVC_VERSION'])))
#-
#       # assemble paths
#-      bin_path = os.path.join(root, 'bin', bitness, msvc_version)
#-      lib_path = os.path.join(root, 'lib', bitness, msvc_version)
#+      bin_path = os.path.join(root, 'bin')
#+      lib_path = os.path.join(root, 'lib')
#       inc_path = os.path.join(root, 'include')
#EOF
#wl-showstatus configure &&
#TBBROOT=$MINGWPREFIX PYTHONPATH=$MINGWPREFIX/python/scons $PYDIR/python.exe $MINGWPREFIX/python/Scripts/scons.py --prefix=$INSTALLPREFIX &&
#    echo OK
## fix thrust/system/omp/detail/par.h (version >= 1.9.8-1 <= 1.9.10-1)
#####see also: https://github.com/thrust/thrust/issues/1093
#patch -ulbf thrust/system/omp/detail/par.h << EOF
#@@ -37,3 +37,3 @@
#   __host__ __device__
#-  par_t() : thrust::system::omp::detail::execution_policy<par_t>() {}
#+  THRUST_CONSTEXPR par_t() : thrust::system::omp::detail::execution_policy<par_t>() {}
# };
#EOF
#wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTHRUST_DEVICE_SYSTEM:STRING=OMP -DTHRUST_ENABLE_EXAMPLES_WITH_RDC:BOOL=OFF -DTHRUST_ENABLE_TESTS_WITH_RDC:BOOL=OFF -DBUILD_TESTING:BOOL=OFF . &&
# ####-DTHRUST_DEVICE_SYSTEM:STRING=CPP / -DTHRUST_DEVICE_SYSTEM:STRING=TBB / -DTHRUST_DEVICE_SYSTEM:STRING=CUDA
# wl-showstatus build &&
# make &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTHRUST_DEVICE_SYSTEM:STRING=OMP -DTHRUST_ENABLE_EXAMPLES_WITH_RDC:BOOL=OFF -DTHRUST_ENABLE_TESTS_WITH_RDC:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTHRUST_DEVICE_SYSTEM:STRING=OMP -DTHRUST_ENABLE_EXAMPLES_WITH_RDC:BOOL=OFF -DTHRUST_ENABLE_TESTS_WITH_RDC:BOOL=OFF -DTHRUST_ENABLE_EXAMPLES:BOOL=OFF -DTHRUST_ENABLE_TESTING:BOOL=OFF -DTHRUST_INCLUDE_CUB_CMAKE:BOOL=OFF -DTHRUST_INSTALL_CUB_HEADERS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 ####-DTHRUST_DEVICE_SYSTEM:STRING=CPP / -DTHRUST_DEVICE_SYSTEM:STRING=TBB / -DTHRUST_DEVICE_SYSTEM:STRING=CUDA
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 # fix missing dependencies/cub/cub/cmake (version >= 1.11.0)
 mkdir -p dependencies/cub/cub/cmake &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



