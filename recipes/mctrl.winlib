export NAME="mCtrl"
export STATUS=
#export URL=http://mctrl.sourceforge.net/
export URL=http://www.mctrl.org/
export BASENAME=mctrl
export DESCRIPTION="mCtrl is C library providing set of additional user interface controls for Windows, intended to be complementary to standard Win32API controls from USER32.DLL and COMCTL32.DLL."
export CATEGORY=graphics
export TYPE=library
#export VERSION=0.9.1
#export VERSIONDATE=20130312
#export VERSION=0.9.2
#export VERSIONDATE=20130313
#export VERSION=0.9.3
#export VERSIONDATE=20130613
#export VERSION=0.9.4
#export VERSIONDATE=20130721
#export VERSION=0.9.5
#export VERSIONDATE=20130907
#export VERSION=0.9.6
#export VERSIONDATE=20131109
####include/mCtrl/theme.h:25:21: fatal error: vssym32.h: No such file or directory
#export VERSION=0.9.7
#export VERSIONDATE=20150304
#export VERSION=0.9.8
#export VERSIONDATE=20150429
#export VERSION=0.11.3
#export VERSIONDATE=20170620
#export VERSION=0.11.4
#export VERSIONDATE=20181118
export VERSION=0.11.5
export VERSIONDATE=20190325
####src/xdraw.c:1956:85: error: macro "ID2D1RenderTarget_CreateBitmapFromWicBitmap" passed 4 arguments, but takes just 3
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="GPL/LGPL"
#export DOWNLOADURL="http://mctrl.sourceforge.net/download.php"
#export DOWNLOADURL="http://sourcefor	ge.net/projects/mctrl/files/mctrl/"
#export DOWNLOADURL="http://www.mctrl.org/ mCtrl- -src.zip"
export DOWNLOADURL="https://github.com/mity/mctrl/tags release-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/mctrl/mctrl/mctrl-$VERSION/mCtrl-$VERSION-src.zip
#export DOWNLOADSOURCEURL=http://www.mctrl.org/download/$VERSION/mCtrl-$VERSION-src.zip
export DOWNLOADSOURCEURL=https://github.com/mity/mctrl/archive/refs/tags/release-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#unzip -oq $TARBALLDIR/$BASENAME/mCtrl-$VERSION-src.zip
tar xfz $TARBALLDIR/$BASENAME/release-$VERSION.tar.gz
#cd mCtrl-$VERSION
cd mctrl-release-$VERSION
#touch vssym32.h vsstyle.h
#echo "#include <tmschema.h>" > vssym32.h
## fix missing size_t (version >= 0.9.6)
#patch -ulbf src/compat.h << EOF
#--- src/compat.h  2013-11-08 21:34:06 +0100
#+++ src/compat.h  2013-11-09 14:36:06 +0100
#@@ -79,2 +79,3 @@
# #else
#+    #include <stdlib.h>
#     #include <stdint.h>
#EOF
#mv Makefile Makefile.bak
##sed -e "s/-municode/-DUNICODE/; s/\(-D_WIN32_WINNT=\)0x0600/\10x0510/" Makefile.bak > Makefile
#sed -e "s/-municode/-DUNICODE/" Makefile.bak > Makefile
#make -j1 CFLAGS="-I`pwd`" &&
#    echo OK
#wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# make PREFIX=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo x86_64-w64-mingw32-; else echo i686-w64-mingw32-; fi) all &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# cp -rf include/* $INSTALLPREFIX/include/ &&
# cp -f *.a $INSTALLPREFIX/lib/ &&
# cp -f *.dll $INSTALLPREFIX/bin/ &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf mCtrl-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf mctrl-release-$VERSION
# disable LTO build in src/CMakeLists.txt (version >= 0.11.5)
patch -ulbf src/CMakeLists.txt << EOF
@@ -76,3 +76,3 @@
     # With gcc >= 4.9, use LTO for Release builds:
-    if(GCC_VERSION VERSION_GREATER 4.9 OR GCC_VERSION VERSION_EQUAL 4.9)
+    if((GCC_VERSION VERSION_GREATER 4.9 OR GCC_VERSION VERSION_EQUAL 4.9) AND NOT MINGW)
         string(REGEX REPLACE "(^| )-O[0-9a-z]+" "" CMAKE_C_FLAGS_RELEASE "\${CMAKE_C_FLAGS_RELEASE}")
EOF
# allow building both static and shared libraries
sed -i.bak "s/\(add_library([^ ]*\) \(STATIC\|SHARED\)/\1/" src/CMakeLists.txt lib/hsluv-c/src/CMakeLists.txt lib/windrawlib/src/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DMCTRL_BUILD_EXAMPLES:BOOL=OFF -DWINDRAWLIB_BUILD_EXAMPLES:BOOL=OFF -DHSLUV_C_TESTS:BOOL=OFF -DMCTRL_BUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
 cp src/mCtrl.def build_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DMCTRL_BUILD_EXAMPLES:BOOL=OFF -DWINDRAWLIB_BUILD_EXAMPLES:BOOL=OFF -DHSLUV_C_TESTS:BOOL=OFF -DMCTRL_BUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build &&
 ninja -Cbuild_static &&
 wl-showstatus build &&
 ninja -Cbuild_shared &&
 strip build_shared/*.dll &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -rf include/* $INSTALLPREFIX/include/ &&
 cp -f build_static/*.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/*.dll.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf mCtrl-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf mctrl-release-$VERSION
####See also: http://www.mctrl.org/doc/0.9.3/page_build.html



