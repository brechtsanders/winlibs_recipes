export NAME="libgit2"
export STATUS=
export URL=https://libgit2.github.com/
export BASENAME=libgit2
export DESCRIPTION="libgit2 is a portable, pure C implementation of the Git core methods provided as a re-entrant linkable library with a solid API, allowing you to write native speed custom Git applications in any language which supports C bindings."
export CATEGORY=communication
export TYPE=library
#export VERSION=0.23.4
#export VERSIONDATE=20151204
#export VERSION=0.24.0
#export VERSIONDATE=20160304
#export VERSION=0.24.1
#export VERSIONDATE=20160412
#export VERSION=0.24.2
#export VERSIONDATE=20161004
#export VERSION=0.24.3
#export VERSIONDATE=20161103
#export VERSION=0.24.4
#export VERSIONDATE=20161217
#export VERSION=0.24.5
#export VERSIONDATE=20161217
#export VERSION=0.24.6
#export VERSIONDATE=20170110
#export VERSION=0.25.0
#export VERSIONDATE=20161224
#export VERSION=0.25.1
#export VERSIONDATE=20170110
#export VERSION=0.26.0
#export VERSIONDATE=20170620
#export VERSION=0.26.1
#export VERSIONDATE=20180308
#export VERSION=0.26.2
#export VERSIONDATE=20180309
#export VERSION=0.26.3
#export VERSIONDATE=20180312
#export VERSION=0.26.4
#export VERSIONDATE=20180605
#export VERSION=0.26.5
#export VERSIONDATE=20180710
#export VERSION=0.26.6
#export VERSIONDATE=20180806
#export VERSION=0.26.7
#export VERSIONDATE=20181006
#export VERSION=0.26.8
#export VERSIONDATE=20181027
#export VERSION=0.27.0
#export VERSIONDATE=20180326
#export VERSION=0.27.1
#export VERSIONDATE=20180530
#export VERSION=0.27.2
#export VERSIONDATE=20180611
#export VERSION=0.27.3
#export VERSIONDATE=20180709
#export VERSION=0.27.4
#export VERSIONDATE=20180806
#export VERSION=0.27.5
#export VERSIONDATE=20181006
#export VERSION=0.27.7
#export VERSIONDATE=20181027
#export VERSION=0.27.8
#export VERSIONDATE=20190128
#export VERSION=0.27.9
#export VERSIONDATE=20190814
#export VERSION=0.27.10
#export VERSIONDATE=20191211
#export VERSION=0.28.0
#export VERSIONDATE=20190212
#export VERSION=0.28.1
#export VERSIONDATE=20190215
#export VERSION=0.28.2
#export VERSIONDATE=20190521
#export VERSION=0.28.3
#export VERSIONDATE=20190814
#export VERSION=0.28.4
#export VERSIONDATE=20191211
#export VERSION=0.28.5
#export VERSIONDATE=20200402
#export DEPENDENCIES=zlib,libiconv,libssh2,openssl,libcurl,http-parser
##export DEPENDENCIES=zlib,libiconv,libssh2,openssl,libcurl,http-parser,krb5
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=1.0.0
#export VERSIONDATE=20200402
####CMake Error at cmake/Modules/FindPkgLibraries.cmake:17 (MESSAGE): could not resolve ws2_32
####src/transports/auth_negotiate.c:21:10: fatal error: krb5.h: No such file or directory
#export VERSION=1.0.1
#export VERSIONDATE=20200604
#export VERSION=1.1.0
#export VERSIONDATE=20201013
#export VERSION=1.1.1
#export VERSIONDATE=20210701
#export VERSION=1.2.0
#export VERSIONDATE=20210902
#export VERSION=1.3.0
#export VERSIONDATE=20210928
#export VERSION=1.3.1
#export VERSIONDATE=20220413
#export VERSION=1.3.2
#export VERSIONDATE=20220713
#export VERSION=1.4.0
#export VERSIONDATE=20220214
#export VERSION=1.4.1
#export VERSIONDATE=20220219
#export VERSION=1.4.2
#export VERSIONDATE=20220227
#export VERSION=1.4.3
#export VERSIONDATE=20220413
##export DEPENDENCIES=libcurl,libssh2,openssl
#export DEPENDENCIES=zlib,libiconv,pcre2,libssh2,openssl,libcurl,http-parser,gss,ntlmclient
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=1.4.4
#export VERSIONDATE=20220713
#export VERSION=1.4.5
#export VERSIONDATE=20230121
#export VERSION=1.4.6
#export VERSIONDATE=20230225
#export VERSION=1.5.0
#export VERSIONDATE=20220714
#export VERSION=1.5.1
#export VERSIONDATE=20230121
#export VERSION=1.5.2
#export VERSIONDATE=20230225
#export VERSION=1.6.1
#export VERSIONDATE=20230225
#export VERSION=1.6.2
#export VERSIONDATE=20230228
#export VERSION=1.6.3
#export VERSIONDATE=20230321
#export VERSION=1.6.4
#export VERSIONDATE=20230412
#export VERSION=1.6.5
#export VERSIONDATE=20240207
#export VERSION=1.7.0
#export VERSIONDATE=20230717
#export VERSION=1.7.1
#export VERSIONDATE=20230815
#export VERSION=1.7.2
#export VERSIONDATE=20240207
#export VERSION=1.8.0
#export VERSIONDATE=20240321
#export VERSION=1.8.1
#export VERSIONDATE=20240516
export VERSION=1.8.2
export VERSIONDATE=20241020
wl-showstatus --package-version
export DEPENDENCIES=zlib,libiconv,pcre2,libssh2,openssl,libcurl,http-parser,gss,libgssapi
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://github.com/libgit2/libgit2/releases v"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/libgit2/libgit2/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz || mv $TARBALLDIR/$BASENAME/v$VERSION $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing gssapi.h and krb5.h in src/transports/auth_negotiate.c (version >= 1.0.0)
sed -i.bak -e "s?gssapi\.h?gss/api.h?; s?krb5\.h?gss/&?" src/transports/auth_negotiate.c
# fix missing arpa/inet.h and undefined htonll deps/ntlmclient/ntlm.c (version >= 1.0.0)
patch -ulbf deps/ntlmclient/ntlm.c << EOF
@@ -17,3 +17,8 @@
 #include <time.h>
+#ifdef _WIN32
+#include <winsock2.h>
+#define htonll _byteswap_uint64
+#else
 #include <arpa/inet.h>
+#endif

EOF
# fix missing arpa/inet.h in deps/ntlmclient/util.c (version >= 1.1.1)
patch -ulbf deps/ntlmclient/util.c << EOF
@@ -10,3 +10,7 @@
 #include <stdint.h>
+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <arpa/inet.h>
+#endif

EOF
## allow using libiconv (version >= 0.28.4)
#patch -ulbf CMakeLists.txt << EOF
#@@ -72,3 +72,3 @@
#
#-IF (APPLE)
#+IF (APPLE OR MINGW)
#        OPTION(USE_ICONV                "Link with and use iconv library"			 ON)
#EOF
# fix CMakeLists.txt (version >= 1.4.0)
patch -ulbf CMakeLists.txt << EOF
@@ -59,3 +59,3 @@

-if(APPLE)
+if(APPLE OR MINGW)
        option(USE_ICONV           "Link with and use iconv library"        ON)
EOF
## fix finding ws2_32 library cmake/Modules/FindPkgLibraries.cmake (version >= 1.0.0 <= 1.0.1)
#patch -ulbf cmake/Modules/FindPkgLibraries.cmake << EOF
#@@ -14,2 +14,5 @@
#        FOREACH(LIBRARY \${\${prefix}_LIBRARIES})
#+               IF (\${LIBRARY} MATCHES ws2_32)
#+               SET(\${LIBRARY}_RESOLVED} -lws2_32)
#+               ELSE()
#                FIND_LIBRARY(\${LIBRARY}_RESOLVED \${LIBRARY} PATHS \${\${prefix}_LIBRARY_DIRS})
#@@ -18,2 +21,3 @@
#                ENDIF()
#+               ENDIF()
#                LIST(APPEND RESOLVED_LIBRARIES \${\${LIBRARY}_RESOLVED})
#EOF
# fix finding ws2_32 library cmake/Modules/FindPkgLibraries.cmake (version >= 1.1.0)
patch -ulbf cmake/FindPkgLibraries.cmake << EOF
@@ -14,2 +14,5 @@
        FOREACH(LIBRARY \${\${prefix}_LIBRARIES})
+               IF (\${LIBRARY} MATCHES ws2_32)
+               SET(\${LIBRARY}_RESOLVED} -lws2_32)
+               ELSE()
                FIND_LIBRARY(\${LIBRARY}_RESOLVED \${LIBRARY} PATHS \${\${prefix}_LIBRARY_DIRS})
@@ -18,2 +21,3 @@
                ENDIF()
+               ENDIF()
                LIST(APPEND RESOLVED_LIBRARIES \${\${LIBRARY}_RESOLVED})
EOF
# fix missing FindHTTP_Parser.cmake (version >= 1.4.0)
cp -u cmake/FindHTTPParser.cmake cmake/FindHTTP_Parser.cmake
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPYTHON_EXECUTABLE=$PYDIR/python.exe -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 #PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DUSE_GSSAPI:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:BOOL=ON -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_EXT_HTTP_PARSER:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_CLAR:BOOL=OFF -S. -Bbuild_static &&
 #PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DUSE_GSS:STRING=gssapi -DUSE_GSSAPI:BOOL=ON -DGSSAPI_LIBRARIES:STRING=-lgss -DGSSAPI_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DUSE_NTLMCLIENT:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:BOOL=ON -DWINHTTP:BOOL=OFF -DHTTPS_BACKEND:STRING=OpenSSL -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_HTTP_PARSER:STRING=system -DREGEX_BACKEND:STRING=pcre2 -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_CLAR:BOOL=OFF -S. -Bbuild_static &&
 #PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DUSE_GSS:STRING=gssapi -DUSE_GSSAPI:BOOL=ON -DGSSAPI_LIBRARIES:STRING=-lgss -DGSSAPI_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DUSE_NTLMCLIENT:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:BOOL=ON -DUSE_WINHTTP:BOOL=OFF -DHTTPS_BACKEND:STRING=OpenSSL -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_HTTP_PARSER:STRING=system -DREGEX_BACKEND:STRING=pcre2 -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_CLAR:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DUSE_GSSAPI:BOOL=ON -DGSSAPI_LIBRARIES:STRING=-lgss -DGSSAPI_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DUSE_NTLMCLIENT:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:STRING=OpenSSL -DUSE_WINHTTP:BOOL=OFF -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_HTTP_PARSER:STRING=system -DREGEX_BACKEND:STRING=pcre2 -DBUILD_EXAMPLES:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DUSE_GSSAPI:BOOL=ON -DGSSAPI_LIBRARIES:STRING=-lgss -DGSSAPI_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DUSE_NTLMCLIENT:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:STRING=OpenSSL -DUSE_WINHTTP:BOOL=OFF -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_HTTP_PARSER:STRING=system -DREGEX_BACKEND:STRING=pcre2 -DBUILD_EXAMPLES:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_C_FLAGS:STRING="-I$(cygpath -m $MINGWPREFIX/include/gssglue/gssapi) -I$(cygpath -m $MINGWPREFIX/include/gss)" -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DUSE_GSSAPI:BOOL=ON -DGSSAPI_LIBRARIES:STRING=-lgss -DGSSAPI_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DUSE_NTLMCLIENT:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:STRING=OpenSSL -DUSE_WINHTTP:BOOL=OFF -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_HTTP_PARSER:STRING=system -DREGEX_BACKEND:STRING=pcre2 -DBUILD_EXAMPLES:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$(cygpath -m $MINGWPREFIX/include/gssglue/gssapi) -I$(cygpath -m $MINGWPREFIX/include/gss)" -S. -Bbuild_static &&
 #-DUSE_GSSAPI:BOOL=OFF 
 # add linker flags (version >= 1.7.0)
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lsecur32 -Wl,--allow-multiple-definition/" build_static/build.ninja &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPYTHON_EXECUTABLE=$PYDIR/python.exe -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 #PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DUSE_GSSAPI:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:BOOL=ON -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_EXT_HTTP_PARSER:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_CLAR:BOOL=OFF -S. -Bbuild_shared &&
 #PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DUSE_GSS:STRING=gssapi -DUSE_GSSAPI:BOOL=ON -DGSSAPI_LIBRARIES:STRING=-lgss -DGSSAPI_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DUSE_NTLMCLIENT:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:BOOL=ON -DWINHTTP:BOOL=OFF -DHTTPS_BACKEND:STRING=OpenSSL -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_HTTP_PARSER:STRING=system -DREGEX_BACKEND:STRING=pcre2 -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_CLAR:BOOL=OFF -S. -Bbuild_shared &&
 #PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DUSE_GSS:STRING=gssapi -DUSE_GSSAPI:BOOL=ON -DGSSAPI_LIBRARIES:STRING=-lgss -DGSSAPI_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DUSE_NTLMCLIENT:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:BOOL=ON -DUSE_WINHTTP:BOOL=OFF -DHTTPS_BACKEND:STRING=OpenSSL -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_HTTP_PARSER:STRING=system -DREGEX_BACKEND:STRING=pcre2 -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_CLAR:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DUSE_GSSAPI:BOOL=ON -DGSSAPI_LIBRARIES:STRING=-lgss -DGSSAPI_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DUSE_NTLMCLIENT:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:STRING=OpenSSL -DUSE_WINHTTP:BOOL=OFF -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_HTTP_PARSER:STRING=system -DREGEX_BACKEND:STRING=pcre2 -DBUILD_EXAMPLES:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DUSE_GSSAPI:BOOL=ON -DGSSAPI_LIBRARIES:STRING=-lgss -DGSSAPI_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DUSE_NTLMCLIENT:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:STRING=OpenSSL -DUSE_WINHTTP:BOOL=OFF -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_HTTP_PARSER:STRING=system -DREGEX_BACKEND:STRING=pcre2 -DBUILD_EXAMPLES:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_C_FLAGS:STRING="-I$(cygpath -m $MINGWPREFIX/include/gssglue/gssapi) -I$(cygpath -m $MINGWPREFIX/include/gss)" -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DUSE_GSSAPI:BOOL=ON -DGSSAPI_LIBRARIES:STRING=-lgss -DGSSAPI_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DUSE_NTLMCLIENT:BOOL=ON -DUSE_SSH:BOOL=ON -DUSE_HTTPS:STRING=OpenSSL -DUSE_WINHTTP:BOOL=OFF -DUSE_BUNDLED_ZLIB:BOOL=OFF -DUSE_HTTP_PARSER:STRING=system -DREGEX_BACKEND:STRING=pcre2 -DBUILD_EXAMPLES:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$(cygpath -m $MINGWPREFIX/include/gssglue/gssapi) -I$(cygpath -m $MINGWPREFIX/include/gss)" -S. -Bbuild_shared &&
 # add linker flags (version >= 1.7.0)
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lsecur32 -Wl,--allow-multiple-definition/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 #make -Cbuild_static install/strip &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 #make -Cbuild_shared install/strip &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



