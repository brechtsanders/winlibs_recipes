export NAME="ibpp"
export STATUS=
export URL=http://www.ibpp.org/
export BASENAME=ibpp
export DESCRIPTION="IBPP is a C++ client class library for Firebird Server (and Interbase(R))"
export CATEGORY=db
export TYPE=library
export VERSION=2.5.3.1
export VERSIONDATE=20091113
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=license.txt
export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/ibpp/files/ ibpp- -src.zip"
export DOWNLOADURL="http://sourceforge.net/projects/ibpp/files/ibpp/ ibpp- -src.zip"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/ibpp/ibpp/`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/"`/ibpp-`echo $VERSION|sed -e "s/\./-/g"`-src.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
unzip -oq -d $BASENAME-$VERSION $TARBALLDIR/$BASENAME/ibpp-`echo $VERSION|sed -e "s/\./-/g"`-src.zip
cd $BASENAME-$VERSION
# fix core/_ibpp.h
patch -ulbf core/_ibpp.h << EOF
--- core/_ibpp.h  2006-04-11 14:18:54 +0200
+++ core/_ibpp.h  2013-12-16 14:37:16 +0100
@@ -51,3 +51,3 @@

-#if (defined(__GNUC__) && defined(IBPP_WINDOWS))
+#if (defined(__GNUC__) && defined(IBPP_WINDOWS)) && !defined(__MINGW32__)
 //     UNSETTING flags used above for ibase.h -- Huge conflicts with libstdc++ !
EOF
wl-showstatus build &&
 g++ -c -DIBPP_WINDOWS -o all_in_one.o core/all_in_one.cpp &&
 ar cr libibpp.a all_in_one.o &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib &&
 cp core/*.h $INSTALLPREFIX/include/ &&
 cp libibpp.a $INSTALLPREFIX/lib/ &&
 mkdir -p $INSTALLPREFIX/bin &&
 g++ -shared -o $INSTALLPREFIX/bin/ibpp.dll -Wl,--out-implib,$INSTALLPREFIX/lib/libibpp.dll.a -Wl,--whole-archive libibpp.a -Wl,--no-whole-archive -lstdc++ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



