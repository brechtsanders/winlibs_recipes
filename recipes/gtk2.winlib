export NAME="GTK+ 2"
export STATUS=
export URL=http://www.gtk.org/
export BASENAME=gtk2
export DESCRIPTION="GTK+ is a highly usable, feature rich toolkit for creating graphical user interfaces which boasts cross platform compatibility and an easy to use API."
export CATEGORY=gui
export TYPE=library
#export VERSION=2.16.6
#export VERSION=2.17.4
#export VERSION=2.17.5
#export VERSION=2.17.6
#export VERSION=2.17.8
#export VERSION=2.17.9
#export VERSION=2.17.10
#export VERSION=2.17.11
#export VERSION=2.18.0
#export VERSION=2.18.1
#export VERSION=2.18.2
#export VERSION=2.18.3
#export VERSION=2.18.4
#export VERSION=2.18.5
#export VERSION=2.18.6
#export VERSION=2.18.8
#export VERSIONDATE=20100316
#export VERSION=2.18.9
#export VERSIONDATE=20100317
####make[2]: *** [gtkbuiltincache.h] Error 57
#export VERSION=2.19.0
#export VERSION=2.19.1
#export VERSION=2.19.3
#export VERSIONDATE=
#export VERSION=2.20.0
#export VERSIONDATE=20100324
#export VERSION=2.20.1
#export VERSIONDATE=20100503
#export VERSION=2.21.0
#export VERSIONDATE=20100510
#export VERSION=2.21.1
#export VERSIONDATE=20100531
#export VERSION=2.21.2
#export VERSIONDATE=20100611
#export VERSION=2.21.3
#export VERSIONDATE=20100628
#export VERSION=2.21.4
#export VERSIONDATE=20100630
#export VERSION=2.21.5
#export VERSIONDATE=20100712
#export VERSION=2.21.6
#export VERSIONDATE=20100818
#export VERSION=2.21.7
#export VERSIONDATE=20100831
#export VERSION=2.21.8
#export VERSIONDATE=20100914
#export VERSION=2.22.0
#export VERSIONDATE=20100924
#export VERSION=2.22.1
#export VERSIONDATE=20101116
#export VERSION=2.23.0
#export VERSIONDATE=20101017
#export VERSION=2.23.1
#export VERSIONDATE=20101106
#export VERSION=2.23.2
#export VERSIONDATE=20101110
#export VERSION=2.24.0
#export VERSIONDATE=20110209
#export VERSION=2.24.2
#export VERSIONDATE=20110315
#export VERSION=2.24.3
#export VERSIONDATE=20110315
####gtk/queryimmodules.c:185: undefined reference to `gtk_rc_get_im_module_path'
#export VERSION=2.24.4
#export VERSIONDATE=20110402
#export VERSION=2.24.5
#export VERSIONDATE=20110616
####gdk/win32/gdkdisplay-win32.c:389: undefined reference to `_gdk_win32_cf_to_string'
#export VERSION=2.24.6
#export VERSIONDATE=20110831
#export VERSION=2.24.7
#export VERSIONDATE=20111018
#export VERSION=2.24.8
#export VERSIONDATE=20111111
#export VERSION=2.24.9
#export VERSIONDATE=20120125
#export VERSION=2.24.10
#export VERSIONDATE=20120207
#export VERSION=2.24.11
#export VERSIONDATE=20120716
#export VERSION=2.24.12
#export VERSIONDATE=20120904
#export VERSION=2.24.13
#export VERSIONDATE=20120924
#export VERSION=2.24.14
#export VERSIONDATE=20121206
#export VERSION=2.24.15
#export VERSIONDATE=20130210
#export VERSION=2.24.16
#export VERSIONDATE=20130219
#export VERSION=2.24.17
#export VERSIONDATE=20130305
#export VERSION=2.24.18
#export VERSIONDATE=20130313
#export VERSION=2.24.19
#export VERSIONDATE=20130617
#export VERSION=2.24.20
#export VERSIONDATE=20130705
#export VERSION=2.24.21
#export VERSIONDATE=20130918
#export VERSION=2.24.22
#export VERSIONDATE=20131011
#export VERSION=2.24.23
#export VERSIONDATE=20140318
####64-bit: Cannot export gdk_display_warp_pointer: symbol not defined
#export VERSION=2.24.24
#export VERSIONDATE=20140624
#export VERSION=2.24.25
#export VERSIONDATE=20141011
#export VERSION=2.24.26
#export VERSIONDATE=20150217
#export VERSION=2.24.27
#export VERSIONDATE=20150304
#export VERSION=2.24.28
#export VERSIONDATE=20150513
#export VERSION=2.24.29
#export VERSIONDATE=20151211
#export VERSION=2.24.30
#export VERSIONDATE=20160306
#export VERSION=2.24.31
#export VERSIONDATE=20160910
#export VERSION=2.24.32
#export VERSIONDATE=20180109
export VERSION=2.24.33
export VERSIONDATE=20201221
wl-showstatus --package-version
export DEPENDENCIES=glib2,atk,pango,cairo,gdk-pixbuf,gettext,libiconv,libpng,libjpeg,libtiff,freetype2,fontconfig,expat,libxau
export OPTIONALDEPENDENCIES=libx11,libxdmcp
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL2
export DOWNLOADURL="http://ftp.gnome.org/pub/gnome/sources/gtk+/ gtk+-"
export INSTALLPREFIX=`pwd`/inst_gtk+-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/gtk+/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/gtk+-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/gtk+/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/gtk+-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/gtk+-$VERSION.tar.bz2
tar xJ --force-local -f $TARBALLDIR/$BASENAME/gtk+-$VERSION.tar.xz
cd gtk+-$VERSION
# fix problem with gtk_style_get_font (version >= 2.90.0 < 3.0.0)
echo " gtk_style_get_font" >> gtk/gtk.def
# workaround for missing gdk-pixbuf/libgdk_pixbuf-2.0.la (version >= 2.21.4 < 3.0.0)
mkdir -p gdk-pixbuf
cp $MINGWPREFIX/lib/libgdk_pixbuf-2.0.la gdk-pixbuf/
## fix missing builtin_icons in gtk/gtkicontheme.c (version >= 2.24.0)
#mv gtk/gtkicontheme.c gtk/gtkicontheme.c.bak
#echo "#define builtin_icons icon_theme_builtin_icons" > gtk/gtkicontheme.c
## fix missing FLASHWINFO in gdk/win32/gdkwindow-win32.c (version >= 2.24.14)
#mv gdk/win32/gdkwindow-win32.c gdk/win32/gdkwindow-win32.c.bak
#echo "#define _WIN32_WINNT 0x0500" > gdk/win32/gdkwindow-win32.c
#cat gdk/win32/gdkwindow-win32.c.bak >> gdk/win32/gdkwindow-win32.c
#cat gtk/gtkicontheme.c.bak >> gtk/gtkicontheme.c
# fix missing gtk/gtk-update-icon-cache
cat > gtk/gtk-update-icon-cache << EOF
#!/bin/sh
`pwd`/gtk/gtk-update-icon-cache.exe \$*
EOF
# fix missing MONITOR_DEFAULTTONEAREST/FLASHW_ALL in gdk/win32/gdkwindow-win32.c (version >= 2.24.14)
mv gdk/win32/gdkwindow-win32.c gdk/win32/gdkwindow-win32.c.bak
cat > gdk/win32/gdkwindow-win32.c << EOF
#define _WIN32_WINNT 0x0500
#define WINVER 0x0500
EOF
cat gdk/win32/gdkwindow-win32.c.bak >> gdk/win32/gdkwindow-win32.c
# fix missing INPUT/INPUT_KEYBOARD in gdk/win32/gdktestutils-win32.c (version >= 2.24.25)
mv gdk/win32/gdktestutils-win32.c gdk/win32/gdktestutils-win32.c.bak
cat > gdk/win32/gdktestutils-win32.c << EOF
#define _WIN32_WINNT 0x0500
#define WINVER 0x0500
EOF
cat gdk/win32/gdktestutils-win32.c.bak >> gdk/win32/gdktestutils-win32.c
# fix missing gdk_drawable_get_size in modules/engines/ms-windows/msw_style.c (version >= 2.24.33)
mv modules/engines/ms-windows/msw_style.c modules/engines/ms-windows/msw_style.c.bak &&
echo "#undef GDK_DISABLE_DEPRECATED" > modules/engines/ms-windows/msw_style.c &&
cat modules/engines/ms-windows/msw_style.c.bak >> modules/engines/ms-windows/msw_style.c
####TO DO: remove ASCII 1 character from configure and Makefile in gdk-pixbuf/pixops, gdk-pixbuf, gdk/win32, gdk, gtk, gtk/theme-bits, gtk/tests, modules/input, modules/engines/ms-windows, modules/engines/pixbuf, modules
## fix invalid export of gtk_custom_paper_unix_dialog_get_type
#mv gtk/gtk.def gtk/gtk.def.bak
#grep -v gtk_custom_paper_unix_dialog_get_type gtk/gtk.def.bak > gtk/gtk.def
# skip making tests
cat > gtk/tests/Makefile.in << EOF
all:
install:
install-strip:
clean:
EOF
cat > tests/Makefile.in << EOF
all:
install:
install-strip:
clean:
EOF
# skip making demos
cat > demos/Makefile.in << EOF
all:
depend:
links:
generate:
install:
install-strip:
EOF
## avoid undefined reference to atk_value_get_minimum_increment (version >= 2.22.0)
#cat > modules/other/gail/Makefile.in << EOF
#all:
#install:
#install-strip:
#clean:
#EOF
# fix gtk/gtkbuiltincache.h problem
#mv gtk/Makefile gtk/Makefile.bak
#sed -e "s?\(mv gtkbuiltincache.h.tmp gtkbuiltincache.h\)?\1 || true?" gtk/Makefile.bak > gtk/Makefile
patch -ulbf gtk/Makefile.in << EOF
--- gtk/Makefile.in  2011-10-18 00:38:32 +0200
+++ gtk/Makefile.in  2011-10-18 22:39:10 +0200
@@ -1901,3 +1901,3 @@
 @CROSS_COMPILING_FALSE@gtk_update_icon_cache_program = \\
-@CROSS_COMPILING_FALSE@           ./gtk-update-icon-cache
+@CROSS_COMPILING_FALSE@           ./gtk-update-icon-cache\$(EXEEXT)

@@ -5635,3 +5635,3 @@
           --source builtin_icons stock-icons > gtkbuiltincache.h.tmp && \\
-       mv gtkbuiltincache.h.tmp gtkbuiltincache.h
+       mv -f gtkbuiltincache.h.tmp gtkbuiltincache.h || true

EOF
## fix configure so it can find cairo-pdf.h (caused by ASCII code 1)
#mv configure configure.bak
#sed -e 's/`\($PKG_CONFIG[^`]*\)`/\$(\1)/g' configure.bak > configure
# fix configure problem in detection of cairo-pdf.h
patch -ulbf configure << EOF
--- configure   2010-09-23 16:27:28 +0200
+++ configure   2010-09-24 12:54:52 +0200
@@ -23745,6 +23745,2 @@

-else
-  as_fn_error \$? "
-*** Can't find cairo-pdf.h. You must build Cairo with the pdf
-*** backend enabled." "\$LINENO" 5
 fi
EOF
## fix MSYS problem with smiley's (SOH, ASCII 1) in pkg-config results
#cat > fix-pkg-config.sh << EOF
##!/bin/sh
#`which pkg-config.exe` --dont-define-prefix \$*|sed -e "s/$'\x01'/ /g"
#EOF
#PKG_CONFIG="`pwd`/fix-pkg-config.sh"
## fix gtk/gtk.symbols for 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# mv gtk/gtk.symbols gtk/gtk.symbols.bak
# #sed -e "s/\(#ifndef _WIN64\)/\1__BAD/; s/ PRIVATE$//" gtk/gtk.symbols.bak > gtk/gtk.symbols
# sed -e "s/\(#ifndef\) _WIN64/\1 __MINGW64__/" gtk/gtk.symbols.bak > gtk/gtk.symbols
#fi
## fix export problems on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# mv gtk/gtk.symbols gtk/gtk.symbols.bak &&
# grep -v PRIVATE$ gtk/gtk.symbols.bak > gtk/gtk.symbols
# ## fix lines in gtk/gtk.def ending with PRIVATE to use _utf8 functions (error: Cannot export gtk_accel_map_load: symbol not defined)
# #mv gtk/gtk.def gtk/gtk.def.bak &&
# #sed -e "s/\([^ ]*\)\( *PRIVATE\)$/\1 = \1_utf8\2/" gtk/gtk.def.bak > gtk/gtk.def
#fi
# fix export problems
mv gtk/gtk.symbols gtk/gtk.symbols.bak &&
grep -v "PRIVATE$" gtk/gtk.symbols.bak > gtk/gtk.symbols
# allow also building static libraries for Windows in configure (version >= 2.24.32)
patch -ulbf configure << EOF
@@ -5242,3 +5242,3 @@
 \$as_echo "\$as_me: WARNING: Disabling static library build, must build as DLL on Windows." >&2;}
-    enable_static=no
+    enable_static=yes
   fi
EOF
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# aclocal --force -I $MINGWPREFIX/share/aclocal &&
# libtoolize --force -i -c &&
# autoconf --force
#fi
# don't abort on warnings
sed -i.bak2 -e "s/ -Wall//" configure
#PKG_CONFIG="`which pkg-config` --dont-define-prefix" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gdktarget=win32 --without-x --without-xinput LDFLAGS="-Wl,--enable-auto-import" &&
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gdktarget=win32 --without-x --without-xinput LDFLAGS="-Wl,--enable-auto-import" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gdktarget=win32 --with-x --without-xinput LDFLAGS="-Wl,--enable-auto-import" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gdktarget=win32 --disable-modules --with-x --with-xinput LDFLAGS="-Wl,--enable-auto-import" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gdktarget=win32 --with-x --with-xinput LDFLAGS="-Wl,--enable-auto-import" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gdktarget=win32 --with-x --with-xinput --enable-introspection=no LDFLAGS="-Wl,--enable-auto-import" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-gdktarget=win32 --with-x --with-xinput --enable-introspection=no LDFLAGS="-Wl,--enable-auto-import" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-gdktarget=win32 --with-x --with-xinput --enable-introspection=no LDFLAGS="-Wl,--enable-auto-import " &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-gdktarget=win32 --without-x --without-xinput --disable-papi --disable-cups --disable-debug --disable-introspection LDFLAGS="-Wl,--enable-auto-import" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-gdktarget=win32 --without-x --without-xinput --disable-papi --disable-cups --disable-debug --disable-introspection CFLAGS="-fcommon" LDFLAGS="-Wl,--enable-auto-import" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-gdktarget=win32 --disable-visibility --without-x --without-xinput --disable-papi --disable-cups --disable-debug --disable-introspection CFLAGS="-fcommon $(if ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-function-pointer-types"; fi)" LDFLAGS="-Wl,--enable-auto-import" &&
 ## remove smiley's (SOH, ASCII 1) from Makefile
 #sed -i.bak s/$'\x01'//g $(grep -l $'\x01' `find . -iname Makefile`) &&
 # fix detection of shared libraries
 sed -i.bak -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 wl-showstatus build &&
 #( make GLIB_MKENUMS="$PYDIR/python.exe $(which glib-mkenums)" || make GLIB_MKENUMS="$PYDIR/python.exe $(which glib-mkenums)" LIBS="-Wl,--as-needed -lpng.dll" || make GLIB_MKENUMS="$PYDIR/python.exe $(which glib-mkenums)" LIBS="-Wl,--as-needed -lgmodule-2.0" ) &&
 #( make GLIB_MKENUMS="$PYDIR/python.exe $(which glib-mkenums)" GLIB_GENMARSHAL="$PYDIR/python.exe $(which glib-genmarshal)" || make GLIB_MKENUMS="$PYDIR/python.exe $(which glib-mkenums)" GLIB_GENMARSHAL="$PYDIR/python.exe $(which glib-genmarshal)" LIBS="-Wl,--as-needed -lpng.dll" || make GLIB_MKENUMS="$PYDIR/python.exe $(which glib-mkenums)" GLIB_GENMARSHAL="$PYDIR/python.exe $(which glib-genmarshal)" LIBS="-Wl,--as-needed -lgmodule-2.0" ) &&
 #( PATH=$PYDIR:$PATH make || PATH=$PYDIR:$PATH make LIBS="-Wl,--as-needed -lpng.dll" || PATH=$PYDIR:$PATH make LIBS="-Wl,--as-needed -lgmodule-2.0" ) &&
 #( PATH=$PYDIR:$PATH make || PATH=$PYDIR:$PATH make LIBS="-Wl,--as-needed -lpng.dll" || PATH=$PYDIR:$PATH make LIBS="-Wl,--as-needed -L$(pwd)/gtk/.libs -lgtk-win32-2.0" ) &&
 ## generate generated files manually
 #PATH=$PYDIR:$PATH make -j1 -Cgtk $(sed -ne "s/^\([^ ]*\.\(h\|def\)\):.*/\1/p" gtk/Makefile) &&
 #PATH=$PYDIR:$PATH make -j1 -Cgdk $(sed -ne "s/^\([^ ]*\.\(h\|def\)\):.*/\1/p" gdk/Makefile) &&
 PATH=$PYDIR:$PATH make &&
 wl-showstatus build-install &&
 ( make -j1 all install-strip || make -i install-strip ) &&
 mkdir -p $INSTALLPREFIX/include/gtk-`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/gdk/win32 &&
 cp -f gdk/win32/*.h $INSTALLPREFIX/include/gtk-*/gdk/win32/ &&
 #PKG_CONFIG= &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gtk+-$VERSION
#gtk/gtk-update-icon-cache --force --ignore-theme-index --source builtin_icons gtk/stock-icons > gtk/gtkbuiltincache.h.tmp && mv -f gtk/gtkbuiltincache.h.tmp gtk/gtkbuiltincache.h && mv gtk/gtkbuiltincache.h.tmp gtk/gtkbuiltincache.h
####to do: fix configure so it can find cairo-pdf.h (caused by ASCII code 1)
####gtk-query-immodules-2.0.exe - Application Error: The application failed to initialize properly (0xc0000005).
#mkdir -p gio
#cat > gio/gdesktopappinfo.h << EOF
##include <gio/gwin32appinfo.h>
#EOF
#touch gio/gwin32appinfo.h
#make -j1 -Cgdk/x11
####gtk/gtkobject.c:340: undefined reference to `__sync_bool_compare_and_swap_4'
#make clean; make CFLAGS="-march=i686" CXXFLAGS="-march=i686" && echo OK



