export NAME="PJSIP"
export STATUS=
export URL=http://www.pjsip.org/
export BASENAME=pjsip
export DESCRIPTION="PJSIP is a SIP stack supporting many SIP extensions/features"
export CATEGORY=audio,communication
export TYPE=library
#export VERSION=1.1
#export VERSION=1.2
#export VERSION=1.3
#export VERSION=1.4
#export VERSION=1.4.5
#export VERSION=1.5
#export VERSIONDATE=20091126
#export VERSION=1.5.5
#export VERSIONDATE=20100111
#export VERSION=1.6
#export VERSIONDATE=20100430
#export VERSION=1.7
#export VERSIONDATE=20100815
#export VERSION=1.8
#export VERSIONDATE=20100909
#export VERSION=1.8.5
#export VERSIONDATE=20101021
#export VERSION=1.8.10
#export VERSIONDATE=20101207
#export VERSION=1.10
#export VERSIONDATE=20110505
#export VERSION=1.12
#export VERSIONDATE=20111109
#export VERSION=1.14
#export VERSIONDATE=20120427
#export VERSION=1.14.2
#export VERSIONDATE=20120522
#export VERSION=1.16
#export VERSIONDATE=20130307
#export VERSION=2.0
#export VERSIONDATE=20120522
#export VERSION=2.0.1
#export VERSIONDATE=20120703
####pjmedia/lib/libpjmedia-audiodev-x86_64-pc-mingw32.a(wmme_dev.o):wmme_dev.c:(.text+0x185d): undefined reference to `pjmedia_format_init_audio'
#export VERSION=2.1
#export VERSIONDATE=20130306
#export VERSION=2.2
#export VERSIONDATE=20140227
#export VERSION=2.2.1
#export VERSIONDATE=20140314
#export VERSION=2.3
#export VERSIONDATE=20140903
#export VERSION=2.4
#export VERSIONDATE=20150413
#export VERSION=2.4.5
#export VERSIONDATE=20150812
####pjmedia/lib/libpjmedia-audiodev-i686-pc-mingw32.a(wmme_dev.o):wmme_dev.c:(.text+0x6db): undefined reference to `_pjmedia_format_init_audio'
#export VERSION=2.5
#export VERSIONDATE=20160511
#export VERSION=2.5.1
#export VERSIONDATE=20160602
#export VERSION=2.5.5
#export VERSIONDATE=20160721
####src/pjmedia/transport_srtp.c:93:33: error: 'AES_ICM' undeclared here (not ina function)
#export VERSION=2.6
#export VERSIONDATE=20170126
####src/pjmedia/transport_srtp.c:117:10: error: 'crypto_policy_set_aes_cm_256_hmac_sha1_80' undeclared here (not in a function)
#export DEPENDENCIES=pthreads,libsamplerate,libspeex
#export VERSION=2.7
#export VERSIONDATE=20170925
#export VERSION=2.7.1
#export VERSIONDATE=20171108
#export VERSION=2.7.2
#export VERSIONDATE=20180221
#export VERSION=2.8
#export VERSIONDATE=20180905
#export VERSION=2.9
#export VERSIONDATE=20190613
#export VERSION=2.10
#export VERSIONDATE=20200214
#export VERSION=2.11.1
#export VERSIONDATE=20211028
#export VERSION=2.12
#export VERSIONDATE=20220224
#export VERSION=2.12.1
#export VERSIONDATE=20220510
export VERSION=2.13
export VERSIONDATE=20221124
wl-showstatus --package-version
export DEPENDENCIES=pthreads,libsamplerate,libspeex,libgsm,srtp,portaudio,opencore-amr,srtp2,libopus
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL2
#export DOWNLOADURL="http://www.pjsip.org/download.htm pjproject-"
export DOWNLOADURL="https://github.com/pjsip/pjproject/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.pjsip.org/release/$VERSION/pjproject-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://github.com/pjsip/pjproject/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/pjproject-$VERSION.tar.bz2
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd pjproject-$VERSION*
# fix include of samplerate.h from invalid path in pjmedia/src/pjmedia/resample_libsamplerate.c (version >= 2.2)
mv pjmedia/src/pjmedia/resample_libsamplerate.c pjmedia/src/pjmedia/resample_libsamplerate.c.bak
sed -e "s?\.\./\.\./third_party/libsamplerate/src/\(samplerate\.h\)?\1?" pjmedia/src/pjmedia/resample_libsamplerate.c.bak > pjmedia/src/pjmedia/resample_libsamplerate.c
# fix pjlib/include/pj/compat/cc_gcc.h (version >= 2.2)
patch -ulf pjlib/include/pj/compat/cc_gcc.h << EOF
--- pjlib/include/pj/compat/cc_gcc.h  2014-01-16 06:30:46 +0100
+++ pjlib/include/pj/compat/cc_gcc.h  2014-03-05 21:12:50 +0100
@@ -66,3 +66,10 @@
 #define PJ_UINT64(val)         val##ULL
-#define PJ_INT64_FMT           "L"
+#ifndef __MINGW32__
+  #define PJ_INT64_FMT         "L"
+#else
+  #define PJ_INT64_FMT         "I64"
+  #define PJ_EXPORT_DECL_SPECIFIER    __declspec(dllexport)
+  #define PJ_EXPORT_DEF_SPECIFIER     __declspec(dllexport)
+  #define PJ_IMPORT_DECL_SPECIFIER    __declspec(dllimport)
+#endif

EOF
## fix pjsip/src/pjsua2/endpoint.cpp for 64-bit (version >= 2.2.1 <= 2.9)
#patch -ulbf pjsip/src/pjsua2/endpoint.cpp << EOF
#--- pjsip/src/pjsua2/endpoint.cpp  2014-03-04 05:25:32 +0100
#+++ pjsip/src/pjsua2/endpoint.cpp  2014-03-14 22:00:30 +0100
#@@ -491,3 +491,3 @@
#     entry.msg = string(data, len);
#-    entry.threadId = (long)pj_thread_this();
#+    entry.threadId = (intptr_t)pj_thread_this();
#     entry.threadName = string(pj_thread_get_name(pj_thread_this()));
#EOF
# fix pjsip/include/pjsua2/endpoint.hpp for 64-bit (version >= 2.2.1)
patch -ulf pjsip/include/pjsua2/endpoint.hpp << EOF
--- pjsip/include/pjsua2/endpoint.hpp  2014-01-16 06:30:46 +0100
+++ pjsip/include/pjsua2/endpoint.hpp  2014-03-14 22:08:52 +0100
@@ -314,3 +314,3 @@
     /** ID of current thread */
-    long       threadId;
+    intptr_t   threadId;

EOF
## fix missing pj_* in pj_ pjlib-util/src/pjlib-util/*.c and pjlib-util/src/pjlib-util-test/*.c (version >= 2.2.1)
#for F in grep -l pj_ pjlib-util/src/pjlib-util/*.c pjlib-util/src/pjlib-util-test/*.c ; do
# mv $F $F.bak &&
# echo "#include <pj/sock.h>" > $F &&
# cat $F.bak >> $F
#done
## fix missing pj_ definitions when building shared version (version >= 2.2.1)
#echo "#include <pj/sock.h>" >> pjproject-2.2.1/pjlib/include/pj/compat/socket.h
## fix missing pj_ definitions when building shared version (version >= 2.2.1)
#mv pjlib/src/pj/sock_qos_bsd.c pjlib/src/pj/sock_qos_bsd.c.bak &&
#echo "#include <pj/sock.h>" > pjlib/src/pj/sock_qos_bsd.c &&
#cat pjlib/src/pj/sock_qos_bsd.c.bak >> pjlib/src/pj/sock_qos_bsd.c
# fix missing AES_ICM in pjmedia/src/pjmedia/transport_srtp.c (version >= 2.5)
mv pjmedia/src/pjmedia/transport_srtp.c pjmedia/src/pjmedia/transport_srtp.c.bak
echo '#include "../../third_party/srtp/crypto/include/crypto_types.h"' > pjmedia/src/pjmedia/transport_srtp.c
cat pjmedia/src/pjmedia/transport_srtp.c.bak >> pjmedia/src/pjmedia/transport_srtp.c
# fix pjlib/src/pj/ssl_sock_ossl.c (version >= 2.7)
patch -ulbf pjlib/src/pj/ssl_sock_ossl.c << EOF
@@ -137,4 +137,7 @@
 #  define strerror_r(errno,buf,len) strerror_s(buf,len,errno)
 #endif
+#ifdef __MINGW32__
+#  define strerror_r(buf,buflen,errnum) {strncpy(buf,strerror(errnum),buflen-1);buf[buflen-1]=0;}
+#endif


EOF
# fix missing strcasecmp in pjlib/include/pj/compat/string.h (version >= 2.7)
patch -ulf pjlib/include/pj/compat/string.h << EOF
@@ -45,3 +45,3 @@

-#if defined(_MSC_VER)
+#if defined(_MSC_VER) || defined(__MINGW32__)
 #   define strcasecmp  _stricmp
EOF
## fix build (version <= 1.5.5)
#mv Makefile Makefile.bak &&
#sed -e "s?^\(prefix = .*\)?#\1?; s?\(ln -s [^;]*\)?echo \1?" Makefile.bak > Makefile &&
#make dep all install DESTDIR=$INSTALLPREFIX prefix= &&
#make -j1 dep all install DESTDIR=$INSTALLPREFIX prefix= &&
#make -j1 dep all install-strip AR=ar DESTDIR=$INSTALLPREFIX prefix= &&
# specify ar with parameter to avoid error: ar.exe: supported targets: pe-i386 pei-i386 elf32-i386 elf32-little elf32-big pe-x86-64 pei-x86-64 elf64-x86-64 elf64-l1om elf64-little elf64-big srec symbolsrec verilog tekhex binary ihex
# build and fix install and fix library names (remove platform suffix from library names) (version <= 1.5.5)
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--allow-multiple-definition" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-libsamplerate --with-external-speex --with-external-gsm --with-external-srtp --with-external-pa LDFLAGS="-Wl,--allow-multiple-definition" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-libsamplerate --with-external-speex --with-external-gsm --with-external-srtp --with-external-pa LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed -lws2_32" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-libsamplerate --with-external-speex --with-external-gsm --with-external-srtp --with-external-pa LDFLAGS="-Wl,--allow-multiple-definition" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-libsamplerate --with-external-speex --with-external-gsm --with-external-srtp --with-external-pa &&
 wl-showstatus build-install &&
 #rm -f pjlib/build/*.depend &&
 #make -j1 dep all install AR="`gcc -print-prog-name=ar` r" RANLIB=`gcc -print-prog-name=ranlib` DESTDIR=$INSTALLPREFIX prefix= &&
 #make -j1 dep all install M_LDFLAGS="-mdll" AR="`gcc -print-prog-name=ar` r" RANLIB=`gcc -print-prog-name=ranlib` DESTDIR=$INSTALLPREFIX prefix= &&
 #make -j1 dep all install HOST_LDFLAGS="-mdll" AR="`gcc -print-prog-name=ar` r" RANLIB=`gcc -print-prog-name=ranlib` DESTDIR=$INSTALLPREFIX prefix= &&
 #make -j1 dep all install SHLIB_OPT="-shared" AR="`gcc -print-prog-name=ar` r" RANLIB=`gcc -print-prog-name=ranlib` DESTDIR=$INSTALLPREFIX prefix= &&
 ##CFLAGS="-DPJ_DLL -DPJ_EXPORTING"
 #make -j1 dep all install SHLIB_OPT="-shared" AR="$(gcc -print-prog-name=ar)" RANLIB=$(gcc -print-prog-name=ranlib) DESTDIR=$INSTALLPREFIX prefix= &&
 make -j1 dep all install SHLIB_OPT="-shared -Wl,--allow-multiple-definition" AR="$(gcc -print-prog-name=ar)" RANLIB=$(gcc -print-prog-name=ranlib) DESTDIR=$INSTALLPREFIX prefix= &&
 for F in $INSTALLPREFIX/lib/*-$BUILDPLATFORM.a ; do mv $F $(echo $F|sed s/-$BUILDPLATFORM//); done &&
 mkdir -p $INSTALLPREFIX/bin &&
 for F in $INSTALLPREFIX/lib/*.dll; do
  pexports $F | sed -e "s/^\(LIBRARY.*\.dll\).*$/\1/" > _.def &&
  dlltool -D$F -d_.def -l$F.a &&
  strip $F &&
  mv -f $F $INSTALLPREFIX/bin/ &&
  rm -f _.def $F.[0-9]
 done &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf pjproject-$VERSION*



