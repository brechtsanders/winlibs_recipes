export NAME="libproxy"
export STATUS=
export URL=http://code.google.com/p/libproxy/
export BASENAME=libproxy
export DESCRIPTION="libproxy is a library that provides automatic proxy configuration management"
export CATEGORY=communication,configuration
export TYPE=library
#export VERSION=0.2.3
#export VERSION=0.3.0
#export VERSION=0.3.1
#export VERSIONDATE=
#export VERSION=0.4.0
#export VERSIONDATE=20100226
#export VERSION=0.4.1
#export VERSIONDATE=20100519
#export VERSION=0.4.2
#export VERSIONDATE=20100520
#export VERSION=0.4.3
#export VERSIONDATE=20100608
#export VERSION=0.4.4
#export VERSIONDATE=20100823
#export DEPENDANCIES=pthreads,plibc
#export OPTIONALDEPENDANCIES=libxmu,libx11,gconf
#export BUILDDEPENDANCIES=
#export VERSION=0.4.5
#export VERSIONDATE=20100614
#export VERSION=0.4.6
#export VERSIONDATE=20100902
#export VERSION=0.4.7
#export VERSIONDATE=20110607
#export VERSION=0.4.8
#export VERSIONDATE=20121002
#export VERSION=0.4.9
#export VERSIONDATE=20121011
#export VERSION=0.4.10
#export VERSIONDATE=20121016
#export VERSION=0.4.11
#export VERSIONDATE=20121201
#export VERSION=0.4.15
#export VERSIONDATE=20171207
#export VERSION=0.4.16
#export VERSIONDATE=20201204
export VERSION=0.4.17
export VERSIONDATE=20201229
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
#export OPTIONALDEPENDANCIES=xulrunner
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL2
#export DOWNLOADURL="http://code.google.com/p/libproxy/downloads/list"
export DOWNLOADURL="https://github.com/libproxy/libproxy/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://libproxy.googlecode.com/files/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://libproxy.googlecode.com/files/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/libproxy/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/libproxy/libproxy/releases/download/$VERSION/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://github.com/libproxy/libproxy/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix missing files (version <= 0.2.3)
#mkdir win32fix win32fix/sys win32fix/arpa
#echo "#include <winsock2.h>" > win32fix/netdb.h
##echo "#define SOCKET int" > win32fix/sys/socket.h
#cat > win32fix/sys/socket.h << EOF
##include <winsock2.h>
#//typedef SOCKET int;
#EOF
#cat > win32fix/arpa/inet.h << EOF
##include <stdint.h>
#typedef uint8_t u_int8_t;
#typedef uint16_t u_int16_t;
#typedef uint32_t u_int32_t;
##include <ip6_misc.h>
#EOF
## fix missing file (version >= 0.3.0 <= 0.3.1)
#mkdir win32fix
#touch win32fix/inet.h
## fix libmodman/test/main.cpp (version >= 0.4.7)
#patch -ulbf libmodman/test/main.cpp << EOF
#--- libmodman/test/main.cpp  2011-06-06 23:44:38 +0200
#+++ libmodman/test/main.cpp  2011-06-07 20:20:48 +0200
#@@ -34,3 +34,3 @@
# #ifdef SYMB
#-       void* symb = recv;
#+       void* symb = (void*)recv;
# #endif
#EOF
## fix libproxy/config.hpp (version >= 0.4.7)
#patch -ulbf libmodman/test/main.cpp << EOF
#--- libproxy/config.hpp  2011-06-06 23:44:38 +0200
#+++ libproxy/config.hpp  2011-06-07 20:24:50 +0200
#@@ -35,2 +35,3 @@
# #include <windows.h>
#+#ifndef __MINGW32__
# typedef unsigned __int64 uint64_t;
#@@ -40,2 +41,3 @@
# typedef unsigned short int sa_family_t;
#+#endif
# #else
#EOF
## fix dependancy on python (version = 0.3.1)
#patch -ulbf configure << EOF
#--- configure  Thu Oct  8 21:24:06 2009
#+++ configure  Fri Oct  9 09:08:02 2009
#@@ -15706,3 +15706,3 @@
# \$as_echo "\$as_me: error: no suitable Python interpreter found" >&2;}
#-   { (exit 1); exit 1; }; }
#+   }
#   else
#EOF
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# autoreconf -f -i -I $MINGWPREFIX/share/aclocal
#fi
#PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-python --without-dotnet CFLAGS="-I`pwd`/win32fix" LIBS="-Wl,--as-needed -lws2_32 -lplibc -lpthread -ldl" &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
## fix missing __FUNCSIG__ in libmodman/module.hpp (version >= 0.4.0 <= 0.4.7)
#mv libmodman/module.hpp libmodman/module.hpp.bak
#echo "#define __FUNCSIG__ __FUNCTION__" > libmodman/module.hpp
#cat libmodman/module.hpp.bak >> libmodman/module.hpp
## fix missing typeid in libmodman/module_manager.cpp (version >= 0.4.0 <= 0.4.7)
#mv libmodman/module_manager.cpp libmodman/module_manager.cpp.bak
#echo "#include <typeinfo>" > libmodman/module_manager.cpp
#sed -e "s/return GetProcAddress/return (void*)GetProcAddress/" libmodman/module_manager.cpp.bak >> libmodman/module_manager.cpp
# fix missing #include <typeinfo> in libmodman/test/main.hpp (version >= 0.4.0 <= 0.4.7)
#mv libmodman/test/main.hpp libmodman/test/main.hpp.bak
#echo "#include <typeinfo>" > libmodman/test/main.hpp
#cat libmodman/test/main.hpp.bak >> libmodman/test/main.hpp
# fix libproxy/config.hpp (version >= 0.4.8)
patch -ulbf libproxy/config.hpp << EOF
--- libproxy/config.hpp  2012-10-02 16:32:16 +0200
+++ libproxy/config.hpp  2012-10-02 20:36:02 +0200
@@ -35,2 +35,5 @@
 #include <windows.h>
+#ifdef __MINGW32__
+#include <stdint.h>
+#else
 typedef unsigned __int64 uint64_t;
@@ -40,2 +43,3 @@
 typedef unsigned short int sa_family_t;
+#endif
 #else
EOF
# fix missing sa_family_t in libproxy/modules/ignore_ip.cpp (version >= 0.4.8)
mv libproxy/modules/ignore_ip.cpp libproxy/modules/ignore_ip.cpp.bak
echo "typedef unsigned short sa_family_t;" > libproxy/modules/ignore_ip.cpp
cat libproxy/modules/ignore_ip.cpp.bak >> libproxy/modules/ignore_ip.cpp
# fix libmodman/test/main.cpp (version >= 0.4.8)
patch -ulbf libmodman/test/main.cpp << EOF
--- libmodman/test/main.cpp  2012-10-02 16:32:16 +0200
+++ libmodman/test/main.cpp  2012-10-02 21:27:14 +0200
@@ -34,3 +34,3 @@
 #ifdef SYMB
-       void* symb = recv;
+       void* symb = (void*)recv;
 #endif
EOF
# fix missing getaddrinfo/freeaddrinfo in libproxy/url.cpp
mv libproxy/url.cpp libproxy/url.cpp.bak
cat > libproxy/url.cpp << EOF
#define _WIN32_WINNT 0x0501
#include <ws2tcpip.h>
EOF
cat libproxy/url.cpp.bak >> libproxy/url.cpp
# fix missing getaddrinfo/freeaddrinfo in libproxy/modules/ignore_ip.cpp
mv libproxy/modules/ignore_ip.cpp libproxy/modules/ignore_ip.cpp.bak
cat > libproxy/modules/ignore_ip.cpp << EOF
#define _WIN32_WINNT 0x0501
#include <ws2tcpip.h>
EOF
cat libproxy/modules/ignore_ip.cpp.bak >> libproxy/modules/ignore_ip.cpp
# create libproxy.la manually
mkdir -p $INSTALLPREFIX/lib
cat > $INSTALLPREFIX/lib/libproxy.la << EOF
# -lproxy - a libtool library file
# Generated by hand - GNU libtool 0.0.0
dlname='../bin/proxy.dll'
library_names='libproxy.dll.a'
old_library='libproxy.a'
dependency_libs=''
current=0
age=0
revision=0
installed=yes
shouldnotlink=no
dlopen=''
dlpreopen=''
libdir='$INSTALLPREFIX/lib'
EOF
# force module for environment variables
mv libproxy/cmake/modules/config_envvar.cmk libproxy/cmake/modules/config_envvar.cmk.bak
grep -v "^\(if\|endif\)" libproxy/cmake/modules/config_envvar.cmk.bak > libproxy/cmake/modules/config_envvar.cmk
# force creation of .pc file
mv libproxy/cmake/devfiles.cmk libproxy/cmake/devfiles.cmk.bak
grep -v "^\(if\|endif\)" libproxy/cmake/devfiles.cmk.bak > libproxy/cmake/devfiles.cmk
# fix for building both static and shared library
cp -f libproxy/cmake/libproxy.cmk libproxy/cmake/libproxy.cmk.bak
sed -ne "s/\(add_library.*\)\(  *\)SHARED/\1_s\2STATIC/p" libproxy/cmake/libproxy.cmk.bak >> libproxy/cmake/libproxy.cmk
echo "set_target_properties(libproxy_s PROPERTIES OUTPUT_NAME proxy)" >> libproxy/cmake/libproxy.cmk
echo "set_target_properties(libproxy PROPERTIES OUTPUT_NAME proxy)" >> libproxy/cmake/libproxy.cmk &&
wl-showstatus configure &&
##PERL="$PERLDIR/bin/perl.exe" cmake -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DWIN32=1
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DWIN32=1 . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DWIN32=1 -DPERL_LIBRARY=$PERLDIR/lib -DPERL_INCLUDE_PATH=$PERLDIR/lib . && 
#cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_FLAGS="-fpermissive" . &&
cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
#cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DMOZJS_INCLUDE_DIR:PATH=$MINGWPREFIX/include/js -DMOZJS_LIBRARIES:FILEPATH=$MINGWPREFIX/lib &&
####/include/js/jsapi.h:14:32: fatal error: mozilla/Attributes.h: No such file or directory
 wl-showstatus build-install &&
 ( make install/strip || make install ) &&
 mkdir -p $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 #mv -f $INSTALLPREFIX/*.a $INSTALLPREFIX/lib/ &&
 #mv -f $INSTALLPREFIX/*.dll $INSTALLPREFIX/*.exe $INSTALLPREFIX/bin/ &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 cp -f libproxy/libproxy.a $INSTALLPREFIX/lib/libproxy.a &&
 # fix libproxy.dll.a
 echo "LIBRARY proxy.dll" > proxy.def &&
 echo "EXPORTS" >> proxy.def &&
 sed -n -e "s/^.* \**\(px_.*\)(.*$/\1/p" libproxy/proxy.h >> proxy.def &&
 dlltool -D $INSTALLPREFIX/proxy.dll -d proxy.def -l $INSTALLPREFIX/lib/libproxy.dll.a &&
 if [ ! -f $INSTALLPREFIX/lib/pkgconfig/libproxy*.pc ]; then
  rm -rf $INSTALLPREFIX/pkgconfig &&
  mkdir -p $INSTALLPREFIX/lib/pkgconfig &&
  cp -f libproxy*.pc $INSTALLPREFIX/lib/pkgconfig/ 
 fi &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



