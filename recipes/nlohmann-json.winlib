#export NAME="JSON for Modern C++"
#export STATUS=
#export URL=https://github.com/nlohmann/json
#export BASENAME=nlohmann-json
#export DESCRIPTION="JSON for Modern C++"
#export CATEGORY=dataprocessing
#export TYPE=library
##export VERSION=3.1.2
##export VERSIONDATE=20180416
#export VERSION=3.2.0
#export VERSIONDATE=20180821
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
##export BUILDDEPENDENCIES=meson
##export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.MIT
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/nlohmann/json/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/nlohmann/json/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd json-$VERSION
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF -DJSON_BuildTests:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf json-$VERSION



export NAME="JSON for Modern C++"
export STATUS=
#export URL=https://nlohmann.github.io/json/
export URL=https://github.com/nlohmann/json/
export BASENAME=nlohmann-json
export DESCRIPTION="JSON for Modern C++"
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=2.1.1
#export VERSIONDATE=20171028
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=3.0.0
#export VERSIONDATE=20171217
#export VERSION=3.0.1
#export VERSIONDATE=20171230
#export VERSION=3.1.0
#export VERSIONDATE=20180202
#export VERSION=3.1.1
#export VERSIONDATE=20180214
#export VERSION=3.1.2
#export VERSIONDATE=20180315
#export VERSION=3.2.0
#export VERSIONDATE=20180821
#export VERSION=3.3.0
#export VERSIONDATE=20181005
#export VERSION=3.4.0
#export VERSIONDATE=20181031
#export VERSION=3.5.0
#export VERSIONDATE=20181222
#export VERSION=3.6.0
#export VERSIONDATE=20190320
#export VERSION=3.6.1
#export VERSIONDATE=20190321
#export VERSION=3.7.0
#export VERSIONDATE=20190729
#export VERSION=3.7.1
#export VERSIONDATE=20191107
#export VERSION=3.7.2
#export VERSIONDATE=20191111
#export VERSION=3.7.3
#export VERSIONDATE=20191117
#export VERSION=3.8.0
#export VERSIONDATE=20200615
#export VERSION=3.9.0
#export VERSIONDATE=20200728
#export VERSION=3.9.1
#export VERSIONDATE=20200806
#export VERSION=3.10.0
#export VERSIONDATE=20210818
#export VERSION=3.10.1
#export VERSIONDATE=20210825
#export VERSION=3.10.2
#export VERSIONDATE=20210826
#export VERSION=3.10.3
#export VERSIONDATE=20211008
#export VERSION=3.10.4
#export VERSIONDATE=20211016
#export VERSION=3.11.0
#export VERSIONDATE=20220801
#export VERSION=3.11.1
#export VERSIONDATE=20220802
#export VERSION=3.11.2
#export VERSIONDATE=20220813
#export VERSION=3.11.3
#export VERSIONDATE=20231129
export VERSION=3.12.0
export VERSIONDATE=20250412
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.MIT
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/nlohmann/json/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/nlohmann/json/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd json-$VERSION
#wl-showstatus build &&
#make &&
#    echo OK
#wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/include &&
# cp -f src/json.hpp $INSTALLPREFIX/include/ &&
#    echo OK
#wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DJSON_BuildTests:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
# cp -u include/nlohmann/*.hpp $INSTALLPREFIX/include/nlohmann/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf json-$VERSION
wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DJSON_BuildTests:BOOL=OFF . &&
 wl-showstatus build-install &&
 ninja install/strip &&
 cp -u include/nlohmann/*.hpp $INSTALLPREFIX/include/nlohmann/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf json-$VERSION



#mkdir -p build &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -D documentation=true . build &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build install/strip &&
#    echo OK
