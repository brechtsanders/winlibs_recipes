export NAME="libcs50"
export STATUS=
export URL=https://cs50.readthedocs.io/libraries/cs50/c/
export BASENAME=libcs50
export DESCRIPTION="CS50's Library for C"
export CATEGORY=development
export TYPE=library
export VERSION=11.0.3
export VERSIONDATE=20240912
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/cs50/libcs50/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/cs50/libcs50/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix Makefile (version >= 11.0.3)
#### Pull request submitted: https://github.com/cs50/libcs50/pull/333
patch -ulbf Makefile << EOF
@@ -24,2 +24,6 @@
        LINKER_FLAGS := -Wl,-soname,\$(LIB_MAJOR)
+# Windows
+else ifneq (,\$(findstring MINGW,\$(OS)))
+$(echo -e '\t')LIB_VERSION := \$(BASENAME)-\$(MAJOR_VERSION).dll
+$(echo -e '\t')LINKER_FLAGS := -s -Wl,--out-implib,\$(LIB_VERSION).a
 # Mac
@@ -43,3 +47,5 @@
        rm -f \$(LIB_OBJ)
+ifneq (,\$(LIB_BASE))
        ln -sf \$(LIB_VERSION) \$(LIB_BASE)
+endif
        mkdir -p \$(addprefix build/, include lib src)
@@ -48,2 +54,5 @@
        mv \$(LIB_VERSION) \$(LIB_BASE) \$(LIB_STATIC) build/lib
+ifneq (,\$(findstring MINGW,\$(OS)))
+$(echo -e '\t')mv \$(LIB_VERSION).a build/lib
+endif

@@ -58,2 +67,6 @@
        cp -R \$(MANS) \$(DESTDIR)/\$(MANDIR)
+ifneq (,\$(findstring MINGW,\$(OS)))
+$(echo -e '\t')mkdir -p \$(addprefix \$(DESTDIR)/, bin)
+$(echo -e '\t')mv -f \$(DESTDIR)/lib/*.dll \$(DESTDIR)/bin
+endif

EOF
wl-showstatus build-install &&
 make install CC=${CC:-gcc} DESTDIR=$INSTALLPREFIX &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



