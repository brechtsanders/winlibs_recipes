export NAME="Hatari"
export STATUS=
export URL=https://hatari.tuxfamily.org/
export BASENAME=hatari
export DESCRIPTION="Hatari is an Atari ST/STE/TT/Falcon emulator for GNU/Linux, BSD, Mac OS X, Windows and other systems which are supported by the SDL library. The Atari ST was a 16/32 bit computer system which was first released by Atari in 1985. Using the Motorola 68000 CPU, it was a very popular computer having quite a lot of CPU power at that time. Unlike many other Atari ST emulators which try to give you a good environment for running GEM applications, Hatari tries to emulate the hardware of a ST as close as possible so that it is able to run most of the old ST games and demos."
export CATEGORY=
export TYPE=library
#export VERSION=2.0.0
#export VERSIONDATE=20180205
#export VERSION=2.1.0
#export VERSIONDATE=20180208
#export VERSION=2.2.0
#export VERSIONDATE=20190131
#export VERSION=2.2.1
#export VERSIONDATE=20190208
#export VERSION=2.3.0
#export VERSIONDATE=20201129
#export VERSION=2.3.1
#export VERSIONDATE=20201227
#export VERSION=2.4.0
#export VERSIONDATE=20220710
export VERSION=2.4.1
export VERSIONDATE=20220818
wl-showstatus --package-version
export DEPENDENCIES=sdl2,pthreads,zlib,libpng,readline,portaudio,portmidi
export OPTIONALDEPENDENCIES=capsimage
export BUILDDEPENDENCIES=cmake,tidy
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=gpl.txt
export LICENSETYPE=GPL
export DOWNLOADURL="http://download.tuxfamily.org/hatari/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://download.tuxfamily.org/hatari/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix detection of capsimage (version >= 2.2.0)
patch -ulbf cmake/FindCapsImage.cmake << EOF
@@ -19,7 +19,3 @@

-if(WIN32)
-       FIND_LIBRARY(CAPSIMAGE_LIBRARY NAMES capsimg PATH_SUFFIXES ${CAPSIMAGE_DIR} )
-else()
        FIND_LIBRARY(CAPSIMAGE_LIBRARY NAMES capsimage PATH_SUFFIXES ${CAPSIMAGE_DIR} )
-endif(WIN32)

EOF
# skip tests
sed -i.bak -e "s/^add_subdirectory(tests)/#&/" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_TRACING:BOOL=OFF -S. -Bbuild_win &&
 #-DCAPSIMAGE_LIBRARY:FILEPATH= -DCAPSIMAGE_INCLUDE_DIR:PATH=$MINGWPREFIX/include/caps
 echo "-Wl,--as-needed -lmingw32 -lSDL2main -lSDL2" >> build_win/src/cpu/CMakeFiles/build68k.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lmingw32 -lSDL2main -lSDL2" >> build_win/src/cpu/CMakeFiles/gencpu.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lmingw32 -lSDL2main -lSDL2" >> build_win/tools/hmsa/CMakeFiles/hmsa.dir/linklibs.rsp &&
 wl-showstatus build-install &&
 make -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####For OS see: https://sourceforge.net/projects/emutos/files/



