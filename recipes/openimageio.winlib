export NAME="OpenImageIO"
export STATUS=
export URL=https://sites.google.com/site/openimageio/
export BASENAME=openimageio
export DESCRIPTION="OpenImageIO is a library for reading and writing images, and a bunch of related classes, utilities, and applications. There is a particular emphasis on formats and functionality used in professional, large-scale animation and visual effects work for film. OpenImageIO is used extensively in animation and VFX studios all over the world, and is also incorporated into several commercial products."
export CATEGORY=graphics
export TYPE=library
#export VERSION=1.7.7
#export VERSIONDATE=20161007
#export VERSION=1.7.8
#export VERSIONDATE=20161102
#export VERSION=1.7.9
#export VERSIONDATE=20161201
#export VERSION=1.7.10
#export VERSIONDATE=20170102
#export VERSION=1.7.11
#export VERSIONDATE=20170202
#export VERSION=1.7.12
#export VERSIONDATE=20170302
#export VERSION=1.7.13
#export VERSIONDATE=20170401
#export VERSION=1.7.14
#export VERSIONDATE=20170501
#export VERSION=1.7.15
#export VERSIONDATE=20170601
#export VERSION=1.7.16
#export VERSIONDATE=20170816
#export VERSION=1.7.17
#export VERSIONDATE=20170902
#export VERSION=1.7.18
#export VERSIONDATE=20180502
#export VERSION=1.7.19
#export VERSIONDATE=20180601
#export VERSION=1.8.5
#export VERSIONDATE=20171002
#export VERSION=1.8.6
#export VERSIONDATE=20171102
####src/include/OpenImageIO/thread.h:133:9: error: 'mutex' in namespace 'std' does not name a type
#export VERSION=1.8.7
#export VERSIONDATE=20180102
#export VERSION=1.8.8
#export VERSIONDATE=20180202
#export VERSION=1.8.9
#export VERSIONDATE=20180302
#export VERSION=1.8.10
#export VERSIONDATE=20180401
#export VERSION=1.8.11
#export VERSIONDATE=20180502
#export VERSION=1.8.12
#export VERSIONDATE=20180601
#export VERSION=1.8.13
#export VERSIONDATE=20180801
#export VERSION=1.8.14
#export VERSIONDATE=20180903
#export VERSION=1.8.15
#export VERSIONDATE=20181002
#export VERSION=1.8.16
#export VERSIONDATE=20181102
#export VERSION=1.8.17
#export VERSIONDATE=20181202
####libOpenImageIO/libOpenImageIO.a(strutil.cpp.obj):strutil.cpp:(.text+0x31d0): undefined reference to `_create_locale'
#export VERSION=2.0.3
#export VERSIONDATE=20181209
#export VERSION=2.0.4
#export VERSIONDATE=20190106
#export VERSION=2.0.5
#export VERSIONDATE=20190203
#export VERSION=2.0.6
#export VERSIONDATE=20190302
#export VERSION=2.0.7
#export VERSIONDATE=20190402
#export VERSION=2.0.8
#export VERSIONDATE=20190504
####src/libutil/plugin.cpp:96:26: error: invalid conversion from 'FARPROC {aka long long int (*)()}' to 'void*' [-fpermissive]
#export VERSION=2.0.9
#export VERSIONDATE=20190705
#export VERSION=2.0.10
#export VERSIONDATE=20190803
####src/ffmpeg.imageio/ffmpeginput.cpp:133:0: error: "CODEC_CAP_DELAY" redefined [-Werror]
####src/ffmpeg.imageio/ffmpeginput.cpp:402:10: error: 'AV_PIX_FMT_YUV420P12BE' was not declared in this scope
#export VERSION=2.0.11
#export VERSIONDATE=20191002
#export VERSION=2.0.13
#export VERSIONDATE=20191204
#export VERSION=2.0.14
#export VERSIONDATE=20200801
#export VERSION=2.1.5.1
#export VERSIONDATE=20191120
#export VERSION=2.1.9.0
#export VERSIONDATE=20191209
#export VERSION=2.1.10.0
#export VERSIONDATE=20200103
####src/libutil/farmhash.cpp:34:0: error: ignoring #pragma warning  [-Werror=unknown-pragmas]
####src/testtex/testtex.cpp:(.text$_ZNK5boost6system14error_category12std_category10equivalentERKSt10error_codei[_ZNK5boost6system14error_category12std_category10equivalentERKSt10error_codei]+0x32): undefined reference to `boost::system::detail::generic_category_ncx()'
#export VERSION=2.1.10.1
#export VERSIONDATE=20200111
#export VERSION=2.1.11.0
#export VERSIONDATE=20200202
#export VERSION=2.1.11.1
#export VERSIONDATE=20200212
#export VERSION=2.1.11.2
#export VERSIONDATE=20200213
#export VERSION=2.1.12.0
#export VERSIONDATE=20200303
####src/openexr.imageio/exrinput.cpp:45:10: fatal error: OpenEXR/ImfFloatVectorAttribute.h: No such file or directory
#export DEPENDANCIES=boost,glew,libjpeg,giflib,libraw,hdf5,ilmbase,openexr,ffmpeg3,freetype2,qt,pthreads,libwebp
#export OPTIONALDEPENDANCIES=libjpeg-turbo
#export BUILDDEPENDANCIES=cmake
#export VERSION=2.1.13.0
#export VERSIONDATE=20200402
#export VERSION=2.1.13.1
#export VERSIONDATE=20200801
#export VERSION=2.1.14.0
#export VERSIONDATE=20200502
#export VERSION=2.1.15.0
#export VERSIONDATE=20200511
#export VERSION=2.1.16.0
#export VERSIONDATE=20200602
#export VERSION=2.1.17.0
#export VERSIONDATE=20200702
#export VERSION=2.1.18.0
#export VERSIONDATE=20200801
#export VERSION=2.1.18.1
#export VERSIONDATE=20200802
#export VERSION=2.1.19.0
#export VERSIONDATE=20200902
#export VERSION=2.1.20.0
#export VERSIONDATE=20201001
#export VERSION=2.2.6.1
#export VERSIONDATE=20200902
#export VERSION=2.2.7.0
#export VERSIONDATE=20201001
#export VERSION=2.2.8.0
#export VERSIONDATE=20201102
#export VERSION=2.2.9.0
#export VERSIONDATE=20201202
#export VERSION=2.2.10.0
#export VERSIONDATE=20210102
#export VERSION=2.2.10.1
#export VERSIONDATE=20210109
#export VERSION=2.2.11.1
#export VERSIONDATE=20210202
#export VERSION=2.2.12.0
#export VERSIONDATE=20210302
#export VERSION=2.2.13.0
#export VERSIONDATE=20210402
#export VERSION=2.2.13.1
#export VERSIONDATE=20210408
#export VERSION=2.2.14.0
#export VERSIONDATE=20210502
#export VERSION=2.2.15.0
#export VERSIONDATE=20210602
####ld.exe: lib/libOpenImageIO.a(ptexinput.cpp.obj):ptexinput.cpp:(.text+0x16a1): undefined reference to `_imp___ZN4Ptex4v2_311PtexTexture4openEPKcRNS0_6StringEb'
#export VERSION=2.2.15.1
#export VERSIONDATE=20210604
#export VERSION=2.2.16.0
#export VERSIONDATE=20210702
#export VERSION=2.2.17.0
#export VERSIONDATE=20210802
#export VERSION=2.2.18.0
#export VERSIONDATE=20210901
#export VERSION=2.2.19.0
#export VERSIONDATE=20211102
#export VERSION=2.2.20.0
#export VERSIONDATE=20220202
#export VERSION=2.3.7.2
#export VERSIONDATE=20210901
#export VERSION=2.3.8.0
#export VERSIONDATE=20211002
#export VERSION=2.3.9.1
#export VERSIONDATE=20211102
#export VERSION=2.3.10.0
#export VERSIONDATE=20211202
#export VERSION=2.3.10.1
#export VERSIONDATE=20211208
#export VERSION=2.3.11.0
#export VERSIONDATE=20220102
#export VERSION=2.3.12.0
#export VERSIONDATE=20220202
#export VERSION=2.3.13.0
#export VERSIONDATE=20220302
#export VERSION=2.3.14.0
#export VERSIONDATE=20220402
export VERSION=2.3.15.0
export VERSIONDATE=20220502
wl-showstatus --package-version
#export DEPENDANCIES=boost,glew,libjpeg,giflib,libraw,hdf5,ilmbase,openexr,ffmpeg3,freetype2,qt,pthreads,libwebp
export DEPENDANCIES=boost,glew,libjpeg,giflib,libraw,hdf5,openexr,ffmpeg3,freetype2,qt,pthreads,libwebp
export OPTIONALDEPENDANCIES=libjpeg-turbo,openvdb,opencolorio,field3d,ptex
export BUILDDEPENDANCIES=cmake,ninja
#export LICENSEFILE=LICENSE
export LICENSEFILE=LICENSE.md
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/OpenImageIO/oiio/releases Release-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/OpenImageIO/oiio/archive/Release-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/OpenImageIO/oiio/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/Release-$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/Release-$VERSION.tar.gz
#cd oiio-Release-$VERSION
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd oiio-$VERSION
## fix missing _copysign
#####src/include/OpenImageIO/missing_math.h:112:36: error: '_copysign' was not declared in this scope
#mv src/include/OpenImageIO/missing_math.h src/include/OpenImageIO/missing_math.h.bak &&
#echo "#undef __STRICT_ANSI__" > src/include/OpenImageIO/missing_math.h &&
#cat src/include/OpenImageIO/missing_math.h.bak >> src/include/OpenImageIO/missing_math.h
# fix src/include/OpenImageIO/missing_math.h
patch -ulbf src/include/OpenImageIO/missing_math.h << EOF
@@ -108,3 +108,3 @@

-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
 // Windows doesn't define these functions from math.h
EOF
# fix src/include/OpenImageIO/thread.h for Windows
patch -ulbf src/include/OpenImageIO/thread.h << EOF
--- src/include/OpenImageIO/thread.h  2016-10-01 06:43:09.000000000 +0200
+++ src/include/OpenImageIO/thread.h  2016-10-08 10:12:05.685962900 +0200
@@ -159,5 +159,5 @@
 {
-#if defined(__GNUC__)
+#if defined(__GNUC__) && !defined(_WIN32)
     sched_yield ();
-#elif defined(_MSC_VER)
+#elif defined(_WIN32)
     SwitchToThread ();
@@ -182,3 +182,3 @@

-#elif defined(_MSC_VER)
+#elif defined(_WIN32)
     for (int i = 0; i < delay; ++i) {
@@ -313,3 +313,3 @@
         //   m_locked = 0;
-#elif defined(_MSC_VER)
+#elif defined(_WIN32)
         MemoryBarrier ();
@@ -517,2 +517,3 @@

+#ifndef NOTHREADS
 /// Simple thread group class. This is just as good as boost::thread_group,
@@ -554,2 +555,3 @@
 };
+#endif

EOF
# fix src/libutil/farmhash.cpp for Windows
patch -ulbf src/libutil/farmhash.cpp << EOF
--- src/libutil/farmhash.cpp  2016-10-01 06:43:09.000000000 +0200
+++ src/libutil/farmhash.cpp  2016-10-08 10:17:16.515080000 +0200
@@ -109,5 +109,5 @@
 #if defined(FARMHASH_UNKNOWN_ENDIAN) || !defined(bswap_64)

-#ifdef _MSC_VER
+#ifdef _WIN32

 #undef bswap_32
EOF
## fix src/libutil/plugin.cpp (version >= 1.7.8 <= 1.8.17)
#patch -ulbf src/libutil/plugin.cpp << EOF
#@@ -93,3 +93,3 @@
# {
#-    return GetProcAddress ((HMODULE)plugin_handle, symbol_name);
#+    return (void*)GetProcAddress ((HMODULE)plugin_handle, symbol_name);
# }
#EOF
# remove invalid #pragma from src/libutil/farmhash.cpp (version >= 2.0.11)
sed -i.bak -e "s?^#pragma warning?//&&?" src/libutil/farmhash.cpp
## fix src/libutil/plugin.cpp (version >= 2.0.3 <= 2.0.4)
#patch -ulbf src/libutil/plugin.cpp << EOF
#@@ -94,5 +94,5 @@
# dlsym(Handle plugin_handle, const char* symbol_name)
# {
#-    return GetProcAddress((HMODULE)plugin_handle, symbol_name);
#+    return (void*)GetProcAddress((HMODULE)plugin_handle, symbol_name);
# }
#EOF
# fix src/libutil/plugin.cpp (version >= 2.0.5)
patch -ulbf src/libutil/plugin.cpp << EOF
@@ -95,3 +95,3 @@
 {
-    return GetProcAddress((HMODULE)plugin_handle, symbol_name);
+    return (void*)GetProcAddress((HMODULE)plugin_handle, symbol_name);
 }
EOF
# fix _m_pswapd redefinition issue (version >= 1.8.5)
mv src/include/OpenImageIO/platform.h src/include/OpenImageIO/platform.h.bak &&
echo "#include <intrin.h>" > src/include/OpenImageIO/platform.h &&
cat src/include/OpenImageIO/platform.h.bak >> src/include/OpenImageIO/platform.h
# fix type error in src/libutil/thread.cpp (version >= 1.8.16)
patch -ulbf src/libutil/thread.cpp << EOF
@@ -217,3 +217,3 @@
                     DWORD rcode;
-                    GetExitCodeThread(t->native_handle(), &rcode);
+                    GetExitCodeThread((HANDLE)t->native_handle(), &rcode);
                     return rcode != STILL_ACTIVE;
EOF
## fix missing _create_locale in src/libutil/strutil.cpp (version >= 1.8.16 <= 2.0.11)
#patch -ulbf src/libutil/strutil.cpp << EOF
#@@ -1133,3 +1133,3 @@
# # endif
#-#elif defined (_WIN32)
#+#elif defined (_WIN32) && !defined(__MINGW32__)
#     // Windows has _strtod_l
#@@ -1169,3 +1169,3 @@
#     return strtod_l (nptr, endptr, c_loc);
#-#elif defined (_WIN32)
#+#elif defined (_WIN32) && !defined(__MINGW32__)
#     // Windows has _strtod_l
#EOF
## fix memcpy/type issue in src/include/OpenImageIO/simd.h (version >= 1.8.16 <= 2.0.11)
#patch -ulbf src/include/OpenImageIO/simd.h << EOF
#@@ -2256,3 +2256,3 @@
# #else
#-        memcpy (&m_mat, f, 16*sizeof(float));
#+        memcpy ((void*)&m_mat, f, 16*sizeof(float));
# #endif
#EOF
# remove unknown #pragma in src/iv/ivmain.cpp (version >= 1.8.17)
sed -i.bak -e "s?^#\s*pragma?//&?" src/iv/ivmain.cpp
# fix missing localtime_r in src/libutil/sysutil.cpp (version >= 2.0.3)
mv src/libutil/sysutil.cpp src/libutil/sysutil.cpp.bak &&
#echo "#define localtime_r(clock,result) (*(result) = *localtime(clock),result)" > src/libutil/sysutil.cpp &&
echo "#define _POSIX_THREAD_SAFE_FUNCTIONS 1" > src/libutil/sysutil.cpp &&
cat src/libutil/sysutil.cpp.bak >> src/libutil/sysutil.cpp
# fix invalid dllexport of enum in src/include/OpenImageIO/imagebufalgo.h (version >= 2.0.13)
sed -i.bak -e "s/\(enum \)OIIO_API /\1/" src/include/OpenImageIO/imagebufalgo.h
# fix type mismatch in src/libOpenImageIO/exif.cpp (version >= 2.1.5.1)
patch -ulbf src/libOpenImageIO/exif.cpp << EOF
@@ -785 +785 @@
-        if (offset >= buf.size()) {
+        if (offset >= (unsigned int)buf.size()) {
EOF
# fix error: inline function declared as dllimport in src/include/OpenImageIO/strutil.h (version >= 2.1.13.0)
patch -ulbf src/include/OpenImageIO/strutil.h << EOF
@@ -364,3 +364,3 @@
 /// Return an all-upper case version of `a` (locale-independent).
-inline std::string OIIO_API lower (string_view a) {
+inline std::string lower (string_view a) {
     std::string result(a);
@@ -371,3 +371,3 @@
 /// Return an all-upper case version of `a` (locale-independent).
-inline std::string OIIO_API upper (string_view a) {
+inline std::string upper (string_view a) {
     std::string result(a);
EOF
# fix missing IMATH_CONSTEXPR14 in src/openexr.imageio/exrinput.cpp (version >= 2.2.13.0)
mv src/openexr.imageio/exrinput.cpp src/openexr.imageio/exrinput.cpp.bak &&
echo "#include <Imath/ImathPlatform.h>" > src/openexr.imageio/exrinput.cpp &&
cat src/openexr.imageio/exrinput.cpp.bak >> src/openexr.imageio/exrinput.cpp
# fix missing IMATH_CONSTEXPR14 in src/openexr.imageio/exroutput.cpp (version >= 2.2.13.0)
mv src/openexr.imageio/exroutput.cpp src/openexr.imageio/exroutput.cpp.bak &&
echo "#include <Imath/ImathPlatform.h>" > src/openexr.imageio/exroutput.cpp &&
cat src/openexr.imageio/exroutput.cpp.bak >> src/openexr.imageio/exroutput.cpp
# fix CMakeLists.txt
sed -i.bak -e "s/add_definitions.*-Wall/#&/; s? /MTd*\"?\"?" CMakeLists.txt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# #NOTHREADS=1 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=ON -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=ON -DOIIO_THREAD_ALLOW:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON .. &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=ON -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DOIIO_THREAD_ALLOW:BOOL=ON -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_EXE_LINKER_FLAGS:STRING="-lws2_32" .. &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=ON -DOIIO_BUILD_TOOLS:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON .. &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=ON -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON .. &&
# #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=ON -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON .. &&
# C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=ON -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON .. &&
# #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=ON -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-fpermissive" .. &&
# #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=ON -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DFFMPEG_AVCODEC_INCLUDE_DIR:PATH=$MINGWPREFIX/ffmpeg3/include -DFFMPEG_LIBAVCODEC:FILEPATH=$MINGWPREFIX/ffmpeg3/lib/libavcodec.a -DFFMPEG_LIBAVFORMAT:FILEPATH=$MINGWPREFIX/ffmpeg3/lib/libavformat.a -DFFMPEG_LIBAVUTIL:FILEPATH=$MINGWPREFIX/ffmpeg3/lib/libavutil.a -DFFMPEG_LIBSWSCALE:FILEPATH=$MINGWPREFIX/ffmpeg3/lib/libswscale.a .. &&
# for F in src/*; do
#  ( ls -1 $F/CMakeFiles/$(basename $F).dir/linklibs.rsp &> /dev/null && echo "-Wl,--as-needed -lws2_32" >> $F/CMakeFiles/$(basename $F).dir/linklibs.rsp ) || true
# done &&
# # fix undefined reference to boost::system::detail::generic_category_ncx() in src/testtex/testtex.cpp (version >= 2.1.5.1)
# echo "-Wl,--as-needed -lboost_system-mt" >> src/testtex/CMakeFiles/testtex.dir/linklibs.rsp &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# #NOTHREADS=1 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=ON -DOIIO_THREAD_ALLOW:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON .. &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DOIIO_THREAD_ALLOW:BOOL=ON -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_EXE_LINKER_FLAGS:STRING="-lws2_32" .. &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DOIIO_BUILD_TOOLS:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" .. &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" .. &&
# #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" .. &&
# C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" .. &&
# #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" .. &&
# #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILDSTATIC:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DFFMPEG_AVCODEC_INCLUDE_DIR:PATH=$MINGWPREFIX/ffmpeg3/include -DFFMPEG_LIBAVCODEC:FILEPATH=$MINGWPREFIX/ffmpeg3/lib/libavcodec.dll.a -DFFMPEG_LIBAVFORMAT:FILEPATH=$MINGWPREFIX/ffmpeg3/lib/libavformat.dll.a -DFFMPEG_LIBAVUTIL:FILEPATH=$MINGWPREFIX/ffmpeg3/lib/libavutil.dll.a -DFFMPEG_LIBSWSCALE:FILEPATH=$MINGWPREFIX/ffmpeg3/lib/libswscale.dll.a -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" .. &&
# for F in src/*; do
#  ( ls -1 $F/CMakeFiles/$(basename $F).dir/linklibs.rsp &> /dev/null && echo "-Wl,--as-needed -lws2_32" >> $F/CMakeFiles/$(basename $F).dir/linklibs.rsp ) || true
# done &&
# echo "-Wl,--as-needed -lws2_32" >> src/libOpenImageIO/CMakeFiles/OpenImageIO.dir/linklibs.rsp &&
# # fix undefined reference to boost::system::detail::generic_category_ncx() in src/testtex/testtex.cpp (version >= 2.1.5.1)
# echo "-Wl,--as-needed -lboost_system-mt" >> src/testtex/CMakeFiles/testtex.dir/linklibs.rsp &&
# cd .. &&
# #sed -i.bak "s/ -Wall -Werror//" $(grep -l " -Wall -Werror" $(find -name flags.make)) &&
# wl-showstatus build-install &&
# #make -Cbuild_static install/strip &&
# #make -j1 -Cbuild_static install/strip &&
# C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} make -j1 -Cbuild_static install/strip &&
# #( make -Cbuild_static install/strip || make -Cbuild_static install/strip CXX="${CXX:-g++} -fpermissive" ) &&
# wl-showstatus build-install &&
# #make -Cbuild_shared install/strip &&
# #make -j1 -Cbuild_shared install/strip &&
# C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} make -j1 -Cbuild_shared install/strip &&
# #( make -Cbuild_shared install/strip || make -Cbuild_shared install/strip CXX="${CXX:-g++} -fpermissive" ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf oiio-Release-$VERSION
# don't compile with -Wall/-Werror (version >= 2.2.14.0)
sed -i.bak -e "s/add_compile_options (\"\(-Wall\|-Werror\)\")//" src/cmake/compiler.cmake
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILDSTATIC:BOOL=ON -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -S. -Bbuild_static &&
 #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILDSTATIC:BOOL=ON -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-Wno-error=deprecated-declarations" -S. -Bbuild_static &&
 #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILDSTATIC:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=14 -D-DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DJPEGTurbo_ROOT:PATH=$MINGWPREFIX/share/libjpeg-turbo -DOpenJpeg_ROOT:PATH=$MINGWPREFIX -DCMAKE_CXX_FLAGS:STRING="-Wno-error=deprecated-declarations" -S. -Bbuild_static &&
 #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILDSTATIC:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=14 -D-DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DJPEGTurbo_ROOT:PATH=$MINGWPREFIX/share/libjpeg-turbo -DOpenJpeg_ROOT:PATH=$MINGWPREFIX -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DCMAKE_CXX_FLAGS:STRING="-Wno-error=deprecated-declarations" -S. -Bbuild_static &&
 C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILDSTATIC:BOOL=ON -DCMAKE_CXX_STANDARD:STRING=14 -D-DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DJPEGTurbo_ROOT:PATH=$MINGWPREFIX/share/libjpeg-turbo -DOpenJpeg_ROOT:PATH=$MINGWPREFIX -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DCMAKE_CXX_FLAGS:STRING="-Wno-error=deprecated-declarations" -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 ## fix undefined reference to __imp__ZN4half5_eLutE/__imp__ZN4half7convertEi/__imp__ZN4half8_toFloatE
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lHalf/" build_static/build.ninja &&
 wl-showstatus configure &&
 #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILDSTATIC:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -S. -Bbuild_shared &&
 #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILDSTATIC:BOOL=OFF -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-Wno-error=deprecated-declarations" -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -S. -Bbuild_shared &&
 #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILDSTATIC:BOOL=OFF -DCMAKE_CXX_STANDARD:STRING=14 -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DJPEGTurbo_ROOT:PATH=$MINGWPREFIX/share/libjpeg-turbo -DOpenJpeg_ROOT:PATH=$MINGWPREFIX -DCMAKE_CXX_FLAGS:STRING="-Wno-error=deprecated-declarations" -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -S. -Bbuild_shared &&
 #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILDSTATIC:BOOL=OFF -DCMAKE_CXX_STANDARD:STRING=14 -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DJPEGTurbo_ROOT:PATH=$MINGWPREFIX/share/libjpeg-turbo -DOpenJpeg_ROOT:PATH=$MINGWPREFIX -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DCMAKE_CXX_FLAGS:STRING="-Wno-error=deprecated-declarations" -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -S. -Bbuild_shared &&
 C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg3/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILDSTATIC:BOOL=OFF -DCMAKE_CXX_STANDARD:STRING=14 -DUSE_QT:BOOL=ON -DUSE_PYTHON:BOOL=OFF -DUSE_PYTHON3:BOOL=OFF -DNOTHREADS:BOOL=OFF -DCODECOV:BOOL=OFF -DOIIO_BUILD_TESTS:BOOL=OFF -DSTOP_ON_WARNING:BOOL=ON -DJPEGTurbo_ROOT:PATH=$MINGWPREFIX/share/libjpeg-turbo -DOpenJpeg_ROOT:PATH=$MINGWPREFIX -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DCMAKE_CXX_FLAGS:STRING="-Wno-error=deprecated-declarations" -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32" -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 ## fix undefined reference to __imp__ZN4half5_eLutE/__imp__ZN4half7convertEi/__imp__ZN4half8_toFloatE
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lHalf/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg3/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} ninja -Cbuild_shared install/strip &&
 # fix absolute paths (version >= 2.2.16.0)
 sed -i -e "s?$(cygpath -m $INSTALLPREFIX)?\${CMAKE_CURRENT_LIST_DIR}/../../..?g" $INSTALLPREFIX/lib/cmake/OpenImageIO/OpenImageIOConfig.cmake &&
 sed -i -e "s?\"$(cygpath -m $INSTALLPREFIX)\([^;]*\)[^\"]*?\${CMAKE_CURRENT_LIST_DIR}/../../..\1?g" $INSTALLPREFIX/lib/cmake/OpenImageIO/OpenImageIOTargets.cmake &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf oiio-Release-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf oiio-$VERSION
#PATH=$MINGWPREFIX/ffmpeg3/bin:$PATH iinfo



