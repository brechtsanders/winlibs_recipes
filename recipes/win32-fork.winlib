export NAME="win32-fork"
export STATUS=
export URL=https://github.com/i-e-b/win32-fork
export BASENAME=win32-fork
export DESCRIPTION="working fork() on Windows Vista and newer"
export CATEGORY=system
export TYPE=library
export VERSION=master
export VERSIONDATE=20181201
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://github.com/i-e-b/win32-fork/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/i-e-b/win32-fork/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
cat > win32fork.h << EOF
#include <sys/types.h>
pid_t fork();
EOF
cat > win32fork.def << EOF
EXPORTS
fork
EOF
wl-showstatus build &&
 #${CC:-gcc} -c -o fork.o fork.c $(if ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-function-pointer-types"; fi) &&
 ${CC:-gcc} -c -o fork.o fork.c $(if ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-function-pointer-types"; fi) -Wno-incompatible-pointer-types &&
 ${AR:-ar} cru libwin32fork.a fork.o &&
 ${CC:-gcc} -shared -s -mwindows -def win32fork.def -o win32fork.dll libwin32fork.a -Wl,--out-implib,libwin32fork.dll.a &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f *.h $INSTALLPREFIX/include/ &&
 cp -f *.a $INSTALLPREFIX/lib/ &&
 cp -f *.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



