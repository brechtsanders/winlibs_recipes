export NAME="DBH (Disk Based Hashtable)"
export STATUS=
#export URL=http://dbh.sourceforge.net/
export URL=https://www.gnu.org/software/libdbh/
export BASENAME=libdbh2
export DESCRIPTION="Library to create and manage 64-bit disk based hash tables. Associations are made between keys and values so that for a given a key the value can be found and loaded into memory quickly: 64 bit support"
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=5.0.11
#export VERSIONDATE=20140327
#export VERSION=5.0.13
#export VERSIONDATE=20140203
#export VERSION=5.0.15
#export VERSIONDATE=20140328
#export VERSION=5.0.16
#export VERSIONDATE=20141007
#export VERSION=5.0.17
#export VERSIONDATE=20150313
#export VERSION=5.0.19
#export VERSIONDATE=20150515
#export VERSION=5.0.20
#export VERSIONDATE=20160512
#export VERSION=5.0.21
#export VERSIONDATE=20160921
export VERSION=5.0.22
export VERSIONDATE=20160923
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://sourceforge.net/projects/dbh/files/dbh/"
export DOWNLOADURL="https://sourceforge.net/projects/dbh/files/dbh/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/dbh/dbh/$VERSION/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/dbh/dbh/$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing lock_attempt_limit in src/dbh_static.i
patch -ulbf src/dbh_static.i << EOF
--- src/dbh_static.i  2013-12-17 04:20:34 +0100
+++ src/dbh_static.i  2014-02-03 22:20:02 +0100
@@ -642,3 +642,5 @@
     memset (dbh, 0, sizeof (DBHashTable));
+#ifdef PARALLEL_SAFE
     dbh->lock_attempt_limit = open_timeout;
+#endif
     /////////////////////////////////////////////
@@ -742,3 +744,5 @@
     memset (dbh, 0, sizeof (DBHashTable));
+#ifdef PARALLEL_SAFE
     dbh->lock_attempt_limit = open_timeout;
+#endif

EOF
# fix missing lock_attempt_limit in src/dbh_exported.i
patch -ulbf src/dbh_exported.i << EOF
--- src/dbh_exported.i  2013-12-28 03:13:58 +0100
+++ src/dbh_exported.i  2014-02-03 22:21:00 +0100
@@ -866,3 +866,5 @@
     if (!dbh) return 0;
+#ifdef PARALLEL_SAFE
     dbh->lock_attempt_limit = limit;
+#endif
     return 0;
@@ -873,3 +875,5 @@
     if (!dbh) return 0;
+#ifdef PARALLEL_SAFE
     dbh->lock_attempt_limit = seconds;
+#endif
     return 1;
EOF
wl-showstatus configure &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-glibtest &&
 wl-showstatus build &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



