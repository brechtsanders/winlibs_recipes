export NAME="MediaInfoLib"
export STATUS=
#export URL=https://mediaarea.net/en/MediaInfo
export URL=https://github.com/MediaArea/MediaInfoLib/
export BASENAME=libmediainfo
export DESCRIPTION="MediaInfo is a convenient unified display of the most relevant technical and tag data for video and audio files."
export CATEGORY=multimedia,fileformat
export TYPE=library,application
#export VERSION=20.09
#export VERSIONDATE=20210226
#export VERSION=21.03
#export VERSIONDATE=20210328
####collect2.exe: error: ld returned 5 exit status
#export VERSION=21.09
#export VERSIONDATE=20210919
#export VERSION=22.06
#export VERSIONDATE=20220624
#export VERSION=22.09
#export VERSIONDATE=20221005
#export VERSION=22.12
#export VERSIONDATE=20221223
#export VERSION=23.03
#export VERSIONDATE=20230329
#export VERSION=23.04
#export VERSIONDATE=20230427
#export VERSION=23.06
#export VERSIONDATE=20230629
#export VERSION=23.07
#export VERSIONDATE=20230713
#export VERSION=23.09
#export VERSIONDATE=20230915
#export VERSION=23.10
#export VERSIONDATE=20231004
#export VERSION=23.11
#export VERSIONDATE=20231201
#export VERSION=24.01
#export VERSIONDATE=20240201
#export VERSION=24.03
#export VERSIONDATE=20240329
#export VERSION=24.04
#export VERSIONDATE=20240418
#export VERSION=24.05
#export VERSIONDATE=20240531
#export VERSION=24.11
#export VERSIONDATE=20241108
export VERSION=24.12
export VERSIONDATE=20241210
wl-showstatus --package-version
#export DEPENDENCIES=zlib,libzen,tinyxml2
export DEPENDENCIES=zlib,libzen,tinyxml2,libmd,sha_gladman,aes_gladman
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
#export DOWNLOADURL="https://mediaarea.net/en/MediaInfo/Download/Source"
export DOWNLOADURL="https://github.com/MediaArea/MediaInfoLib/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://mediaarea.net/download/source/libmediainfo/$VERSION/libmediainfo_$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://github.com/MediaArea/MediaInfoLib/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/MediaArea/MediaInfoLib/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd MediaInfoLib-$VERSION
wl-showstatus configure &&
 cd Project/GNU/Library &&
 mkdir -p m4 &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-libtinyxml2 &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-libtinyxml2 --with-libmd5 --with-libaes --with-libsha1 --with-libsha2 --with-libhmac CXXFLAGS="-I$MINGWPREFIX/include/gladman" LDFLAGS="-Wl,--as-needed -lsha1_gladman -lsha2_gladman -laes_gladman" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-libtinyxml2 --with-libmd5 --with-libaes --with-libsha1 --with-libsha2 --with-libhmac CXXFLAGS="-I$MINGWPREFIX/include/gladman -I$MINGWPREFIX/share/libmd/include" LDFLAGS="-Wl,--as-needed -lsha1_gladman -lsha2_gladman -laes_gladman" PKG_CONFIG_PATH=$MINGWPREFIX/share/libmd/lib/pkgconfig &&
 cd ../../.. &&
 wl-showstatus build &&
 mingw32-make -CProject/GNU/Library &&
 wl-showstatus install &&
 make -CProject/GNU/Library install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf MediaInfoLib-$VERSION
####For dependancies, see also: http://www.gladman.me.uk



#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_ZLIB:BOOL=OFF -DBUILD_ZENLIB:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -SProject/CMake -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_ZLIB:BOOL=OFF -DBUILD_ZENLIB:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -SProject/CMake -Bbuild_shared &&
# # fix invalid paths
# sed -i.bak -e "s?CMakeFiles\\\\mediainfo\.dir\\\\\(.\)_\(\\\\\)?\1:\2?g; s?CMakeFiles/mediainfo\.dir/\(.\)_/?/\1/?g" build_shared/build.ninja &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf MediaInfoLib-$VERSION



