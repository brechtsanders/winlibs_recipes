export NAME="PiTiVi"
export STATUS=
export URL=http://www.pitivi.org/
export BASENAME=pitivi
export DESCRIPTION="PiTiVi is a free, intuitive and featureful movie editor for the Linux desktop."
export CATEGORY=multimedia
export TYPE=application
#export VERSION=0.14.0
#export VERSIONDATE=20110602
#export VERSION=0.14.1
#export VERSIONDATE=20110711
#export VERSION=0.14.2
#export VERSIONDATE=20110813
#export VERSION=0.15.0
#export VERSIONDATE=20110928
#export VERSION=0.15.1
#export VERSIONDATE=20120225
export VERSION=0.15.2
export VERSIONDATE=20120503
#export VERSION=0.91
#export VERSIONDATE=20130930
#export VERSION=0.92
#export VERSIONDATE=20131104
####checking for a Python interpreter with version >= 2.7.0... none
####configure: error: no suitable Python interpreter found
#export VERSION=0.93
#export VERSIONDATE=20140321
####No package 'pycairo' found
#export VERSION=0.94
#export VERSIONDATE=20141103
#export VERSION=0.95
#export VERSIONDATE=20151120
#export VERSION=0.96
#export VERSIONDATE=20160701
#export VERSION=0.97.1
#export VERSIONDATE=20160809
#export VERSION=0.98
#export VERSIONDATE=20161207
#export VERSION=0.98.1
#export VERSIONDATE=20170701
#export VERSION=0.99
#export VERSIONDATE=20170922
#export VERSION=2020.09
#export VERSIONDATE=20201001
#export VERSION=2020.09.1
#export VERSIONDATE=20201014
####checking for a Python interpreter with version >= 3... none
####configure: error: no suitable Python interpreter found
export DEPENDANCIES=gnome-doc-utils
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
#export VERSION=0.999
#export VERSIONDATE=20180828
#export VERSION=2020.09.2
#export VERSIONDATE=20201026
####Program python3 found: NO
#export VERSION=2021.01
#export VERSIONDATE=20210201
#export VERSION=2021.05
#export VERSIONDATE=20210531
####meson.build:27:0: ERROR: Dependency "py3cairo" not found, tried pkgconfig and cmake
wl-showstatus --package-version
#export DEPENDANCIES=gnome-doc-utils
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=meson
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/pitivi/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://download.gnome.org/sources/pitivi/$(echo $VERSION|sed 's/^\([0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix problem detecting GNU gettext tools on 64-bit
if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 mv configure configure.bak
 sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
fi
wl-showstatus configure &&
 PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PYDIR:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build-install &&
 PATH=$PYDIR:$PATH make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#mkdir -p build_both &&
# wl-showstatus configure &&
# #PKG_CONFIG= PATH=$PYDIR:$PATH PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dbuild-gst=true -Ddisable-help=false . build_both &&
# PKG_CONFIG= PATH=$PYDIR:$PATH PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dbuild-gst=false -Ddisable-help=false -Dpython=$PYDIR/python.exe . build_both &&
# #PKG_CONFIG= PATH=$PYDIR:$PATH PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dbuild-gst=true -Ddisable-help=false -Dpython=$PYDIR/python.exe . build_both &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -Cbuild_both install/strip &&
#    echo OK && find . -name '*.a'



