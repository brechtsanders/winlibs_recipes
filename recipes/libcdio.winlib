export NAME="libcdio"
export STATUS=
export URL=http://www.gnu.org/software/libcdio/
export BASENAME=libcdio
export DESCRIPTION="The GNU Compact Disc Input and Control library (libcdio) contains a library for CD-ROM and CD image access. Applications wishing to be oblivious of the OS- and device-dependent properties of a CD-ROM or of the specific details of various CD-image formats may benefit from using this library."
export CATEGORY=system,fileformat
export TYPE=library
#export VERSION=0.83
#export VERSIONDATE=20111210
####64-bit: MSWindows/win32_ioctl.c:33:27: fatal error: ddk/ntddcdrm.h: No such file or directory
#export VERSION=0.90
#export VERSIONDATE=20121028
#export VERSION=0.91
#export VERSIONDATE=20131215
#export VERSION=0.92
#export VERSIONDATE=20131216
#export VERSION=0.93
#export VERSIONDATE=20140930
#export VERSION=0.94
#export VERSIONDATE=20161023
#export VERSION=1.0.0
#export VERSIONDATE=20171122
#export VERSION=1.1.0
#export VERSIONDATE=20171212
#export VERSION=2.0.0
#export VERSIONDATE=20180101
export VERSION=2.1.0
export VERSIONDATE=20180418
####64-bit: /include/stdio.h:185:30: error: unknown type name '_off64_t'
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://ftp.gnu.org/gnu/libcdio/"
#export DOWNLOADURL="http://git.savannah.gnu.org/cgit/libcdio.git libcdio-release-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnu.org/gnu/libcdio/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://ftp.gnu.org/gnu/libcdio/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://git.savannah.gnu.org/cgit/libcdio.git/snapshot/libcdio-release-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/libcdio-release-$VERSION.tar.gz
#cd libcdio-release-$VERSION
# fix missing strlen/strncpy in lib/driver/cdio_private.h (version >= 0.94)
mv lib/driver/cdio_private.h lib/driver/cdio_private.h.bak
echo "#include <string.h>" > lib/driver/cdio_private.h
echo "#include <malloc.h>" >> lib/driver/cdio_private.h
cat lib/driver/cdio_private.h.bak >> lib/driver/cdio_private.h
# fix redeclaration of off64_t (version >= 0.94)
if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then
 mv configure configure.bak &&
 sed -e "s/-D_*off_t=off64_t//g" configure.bak > configure
fi
## skip building doc
#cat > Makefile.am << EOF
#clean:
#all:
#install:
#install-strip:
#EOF
## remove dependancy on dynamic libstdc++ (GCC 4)
#mv libtool libtool.bak &&
#sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
wl-showstatus configure &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-cdda-player &&
 wl-showstatus build-install &&
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "typedef long off32_t;" >> config.h
 # echo "typedef long long off64_t;" >> config.h
 #fi &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libcdio-release-$VERSION



