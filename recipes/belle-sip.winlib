#export NAME="belle-sip"
#export STATUS=
#export URL=http://www.linphone.org/
#export BASENAME=belle-sip
#export DESCRIPTION="SIP stack from Linphone team"
#export CATEGORY=audio,communication
#export TYPE=library
##export VERSION=1.3.0
##export VERSIONDATE=20140702
##export VERSION=1.4.0
##export VERSIONDATE=20150314
##export VERSION=1.4.1
##export VERSIONDATE=20150515
##export VERSION=1.4.2
##export VERSIONDATE=20151103
##export VERSION=1.5.0
##export VERSIONDATE=20161012
#export VERSION=1.6.3
#export VERSIONDATE=20200406
#####configure: error: Could not find antlr.jar. Please install antlr3
#wl-showstatus --package-version
#export DEPENDENCIES=polarssl,antlr3c,antlr3
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://download.savannah.gnu.org/releases/linphone/belle-sip/"
#export DOWNLOADURL="https://www.linphone.org/releases/sources/belle-sip/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://download.savannah.gnu.org/releases/linphone/belle-sip/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://www.linphone.org/releases/sources/belle-sip/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION*
#  ./configure --help
#  head COPYING* LICENSE*
#  ls -l COPYING* LICENSE*
#wl-showstatus configure &&
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
##fi
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# wl-showstatus build &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#    make install-pkgconfigDATA
##    cmake.exe . -LH; rm -f CMakeCache.txt
##wl-showstatus configure
##rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
## wl-showstatus build &&
## make install/strip &&
##    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION*



export NAME="belle-sip"
export STATUS=
export URL=http://www.linphone.org/
export BASENAME=belle-sip
export DESCRIPTION="SIP stack from Linphone team"
export CATEGORY=audio,communication
export TYPE=library
#export VERSION=5.1.32
#export VERSIONDATE=20220728
#export VERSION=5.1.47
#export VERSIONDATE=20220720
#export VERSION=5.1.51
#export VERSIONDATE=20220728
#export VERSION=5.1.55
#export VERSIONDATE=20220805
#export VERSION=5.1.58
#export VERSIONDATE=20220908
#export VERSION=5.1.60
#export VERSIONDATE=20220916
#export VERSION=5.1.61
#export VERSIONDATE=20220916
#export VERSION=5.1.64
#export VERSIONDATE=20220930
#export VERSION=5.1.66
#export VERSIONDATE=20221021
#export VERSION=5.1.67
#export VERSIONDATE=20221027
#export VERSION=5.1.71
#export VERSIONDATE=20221119
#export VERSION=5.1.72
#export VERSIONDATE=20221130
#export VERSION=5.2.0
#export VERSIONDATE=20221206
#export VERSION=5.2.2
#export VERSIONDATE=20221221
#export VERSION=5.2.4
#export VERSIONDATE=20221222
#export VERSION=5.2.6
#export VERSIONDATE=20221226
#export VERSION=5.2.9
#export VERSIONDATE=20230109
#export VERSION=5.2.11
#export VERSIONDATE=20230113
#export VERSION=5.2.12
#export VERSIONDATE=20230114
#export VERSION=5.2.16
#export VERSIONDATE=20230121
#export VERSION=5.2.21
#export VERSIONDATE=20230215
####cpp_utils.cc:(.text+0x161): undefined reference to `bctoolbox::RNG::cRandomize()'
#export VERSION=5.2.23
#export VERSIONDATE=20230217
#export VERSION=5.2.25
#export VERSIONDATE=20230222
#export VERSION=5.2.27
#export VERSIONDATE=20230227
#export VERSION=5.2.28
#export VERSIONDATE=20230227
#export VERSION=5.2.29
#export VERSIONDATE=20230303
#export VERSION=5.2.30
#export VERSIONDATE=20230308
#export VERSION=5.2.32
#export VERSIONDATE=20230311
#export VERSION=5.2.37
#export VERSIONDATE=20230318
#export VERSION=5.2.42
#export VERSIONDATE=20230328
#export VERSION=5.2.45
#export VERSIONDATE=20230406
#export VERSION=5.2.49
#export VERSIONDATE=20230407
#export VERSION=5.2.51
#export VERSIONDATE=20230414
#export VERSION=5.2.52
#export VERSIONDATE=20230426
#export VERSION=5.2.53
#export VERSIONDATE=20230502
#export VERSION=5.2.57
#export VERSIONDATE=20230506
#export VERSION=5.2.58
#export VERSIONDATE=20230516
#export VERSION=5.2.63
#export VERSIONDATE=20230525
#export VERSION=5.2.64
#export VERSIONDATE=20230526
#export VERSION=5.2.71
#export VERSIONDATE=20230614
#export VERSION=5.2.73
#export VERSIONDATE=20230615
#export VERSION=5.2.78
#export VERSIONDATE=20230627
#export VERSION=5.2.83
#export VERSIONDATE=20230703
#export VERSION=5.2.86
#export VERSIONDATE=20230704
#export VERSION=5.2.93
#export VERSIONDATE=20230727
#export VERSION=5.2.94
#export VERSIONDATE=20230729
export VERSION=5.2.97
export VERSIONDATE=20230822
wl-showstatus --package-version
export DEPENDENCIES=belr,bctoolbox
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/BelledonneCommunications/belle-sip/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/BelledonneCommunications/belle-sip/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION*
# fix src/cpp_utils.cc (version >= 5.2.23)
patch -ulbf src/cpp_utils.cc << EOF
@@ -24,2 +24,5 @@
 #include "bctoolbox/crypto.hh"
+#ifdef _WIN32
+#include <wincrypt.h>
+#endif

@@ -29,3 +32,11 @@
 unsigned char * belle_sip_random_bytes(unsigned char *ret, size_t size){
+#ifdef _WIN32
+       HCRYPTPROV prov;
+       if (!CryptAcquireContextA(&prov, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT | CRYPT_SILENT))
+               return NULL;
+       CryptGenRandom(prov, size, ret);
+       CryptReleaseContext(prov, 0);
+#else
        bctoolbox::RNG::cRandomize(ret, size);
+#endif
        return ret;
@@ -34,3 +45,9 @@
 uint32_t belle_sip_random(void){
+#ifdef _WIN32
+       uint32_t result;
+       belle_sip_random_bytes((unsigned char*)result, sizeof(result));
+       return result;
+#else
        return bctoolbox::RNG::cRandomize();
+#endif
 }
EOF
# fix include/belle-sip/defs.h (version >= 5.2.83)
patch -ulbf include/belle-sip/defs.h << EOF
@@ -45,3 +45,3 @@

-#ifdef _MSC_VER
+#ifdef _WIN32
        #ifdef BELLESIP_STATIC
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_STATIC:BOOL=ON -DENABLE_SHARED:BOOL=ON -DENABLE_STRICT:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -S. -Bbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION*



