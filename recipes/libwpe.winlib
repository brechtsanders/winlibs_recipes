#export NAME="libwpe"
#export STATUS=
#export URL=https://webkit.org/wpe/
#export BASENAME=libwpe
#export DESCRIPTION="WPE is the reference WebKit port for embedded and low-consumption computer devices. It has been designed from the ground-up with performance, small footprint, accelerated content rendering, and simplicity of deployment in mind, bringing the excellence of the WebKit engine to countless platforms and target devices."
#export CATEGORY=graphics
#export TYPE=library
##export VERSION=1.2.1
##export VERSIONDATE=20190812
##export VERSION=1.3.0
##export VERSIONDATE=20190611
##export VERSION=1.3.1
##export VERSIONDATE=20190617
##export VERSION=1.4.0
##export VERSIONDATE=20190918
#export VERSION=1.4.0.1
#export VERSIONDATE=20191002
##export VERSION=1.6.0
##export VERSIONDATE=20200312
#####Could NOT find EGL (missing: EGL_LIBRARY)
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
##export BUILDDEPENDENCIES=cmake,hotdoc
##export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="https://wpewebkit.org/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://wpewebkit.org/releases/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix to also build static library
#sed -i.bak -e "s/^\(.*add_library *(\)\([^ ]*\) *SHARED\( *.*\)$/\1\2 SHARED\3\n\1\2_static STATIC\3\nset_target_properties(\2_static PROPERTIES OUTPUT_NAME \2)/; s/\(target_include_directories\)\( *([^ ]*\)\( *.*)\)$/\1\2\3\n\1\2_static\3/" CMakeLists.txt
#wl-showstatus configure &&
#PKG_CONFIG= cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DOCS:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
# cp -f libwpe.a $(ls -1 $INSTALLPREFIX/lib/libwpe*.dll.a|sed -e "s/\.dll\(\.a\)/\1/") &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="libwpe"
export STATUS=
export URL=https://webkit.org/wpe/
export BASENAME=libwpe
export DESCRIPTION="WPE is the reference WebKit port for embedded and low-consumption computer devices. It has been designed from the ground-up with performance, small footprint, accelerated content rendering, and simplicity of deployment in mind, bringing the excellence of the WebKit engine to countless platforms and target devices."
export CATEGORY=graphics
export TYPE=library
#export VERSION=1.6.0
#export VERSIONDATE=20200312
#export VERSION=1.7.1
#export VERSIONDATE=20200729
#export VERSION=1.8.0
#export VERSIONDATE=20200911
#export VERSION=1.9.1
#export VERSIONDATE=20210119
#export VERSION=1.9.90
#export VERSIONDATE=20210306
#export VERSION=1.9.91
#export VERSIONDATE=20210316
#export VERSION=1.10.0
#export VERSIONDATE=20210327
#export VERSION=1.10.1
#export VERSIONDATE=20210610
#export VERSION=1.11.1
#export VERSIONDATE=20210805
#export VERSION=1.12.0
#export VERSIONDATE=20211001
#export VERSION=1.12.2
#export VERSIONDATE=20220801
#export VERSION=1.12.3
#export VERSIONDATE=20220824
#export VERSION=1.13.1
#export VERSIONDATE=20220513
#export VERSION=1.13.2
#export VERSIONDATE=20220517
#export VERSION=1.13.3
#export VERSIONDATE=20220811
#export VERSION=1.14.0
#export VERSIONDATE=20220920
export VERSION=1.14.1
export VERSIONDATE=20230203
wl-showstatus --package-version
export DEPENDENCIES=egl,xkbcommon,libdl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja,hotdoc
#export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://wpewebkit.org/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://wpewebkit.org/releases/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
patch -ulbf cmake/FindEGL.cmake << EOF
@@ -50 +50 @@
-if (EGL_LIBRARIES AND NOT TARGET GL::egl)
+if (NOT TARGET GL::egl)
EOF
## fix CMakeLists.txt (version >= 1.6.0 <= 1.12.0)
#patch -ulbf CMakeLists.txt << EOF
#@@ -68,3 +68,4 @@
#
#-add_library(wpe SHARED
#+foreach(LINKTYPE STATIC SHARED)
#+add_library(wpe_\${LINKTYPE} \${LINKTYPE}
#     src/input.c
#@@ -80,3 +81,3 @@
# )
#-target_include_directories(wpe PRIVATE
#+target_include_directories(wpe_\${LINKTYPE} PRIVATE
#     "include"
#@@ -86,3 +87,3 @@
# )
#-target_compile_definitions(wpe PRIVATE
#+target_compile_definitions(wpe_\${LINKTYPE} PRIVATE
#     WPE_COMPILATION
#@@ -91,10 +92,10 @@
# if (WPE_BACKEND)
#-    target_compile_definitions(wpe PRIVATE WPE_BACKEND=\\"\${WPE_BACKEND}\\")
#+    target_compile_definitions(wpe_\${LINKTYPE} PRIVATE WPE_BACKEND=\\"\${WPE_BACKEND}\\")
# endif()
#-target_compile_options(wpe PRIVATE
#+target_compile_options(wpe_\${LINKTYPE} PRIVATE
#     \$<TARGET_PROPERTY:GL::egl,INTERFACE_COMPILE_OPTIONS>
# )
#-target_link_libraries(wpe PRIVATE XkbCommon::libxkbcommon \${CMAKE_DL_LIBS})
#+target_link_libraries(wpe_\${LINKTYPE} PRIVATE XkbCommon::libxkbcommon \${CMAKE_DL_LIBS})
#
#-set_target_properties(wpe PROPERTIES
#+set_target_properties(wpe_\${LINKTYPE} PROPERTIES
#   C_VISIBILITY_PRESET hidden
#@@ -106,3 +107,3 @@
#
#-install(TARGETS wpe
#+install(TARGETS wpe_\${LINKTYPE}
#   RUNTIME DESTINATION \${CMAKE_INSTALL_BINDIR}
#@@ -117,2 +118,4 @@
# )
#+set_target_properties(wpe_\${LINKTYPE} PROPERTIES OUTPUT_NAME wpe)
#+endforeach()
#
#EOF
#mkdir -p build_both &&
# wl-showstatus configure &&
# #PKG_CONFIG_PATH= cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -Dbuild_both_LIBS:BOOL=ON -DBUILD_DOCS:BOOL=OFF -S. -Bbuild_both &&
# #echo "-Wl,--as-needed -ldl" >> build_both/CMakeFiles/wpe_SHARED.dir/linklibs.rsp &&
# #PKG_CONFIG_PATH= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -Dbuild_both_LIBS:BOOL=ON -DBUILD_DOCS:BOOL=OFF -S. -Bbuild_both &&
# #PKG_CONFIG_PATH= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -Dbuild_both_LIBS:BOOL=ON -DBUILD_DOCS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -S. -Bbuild_both &&
# PKG_CONFIG_PATH= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -Dbuild_both_LIBS:BOOL=ON -DBUILD_DOCS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_both &&
# sed -i.bak -e "s/LINK_LIBRARIES\s*=\s*/&-Wl,--as-needed -ldl /g" build_both/build.ninja &&
# wl-showstatus build-install &&
# #make -Cbuild_both install/strip &&
# ninja -Cbuild_both install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 # fix missing link libraries
 sed -i.bak -e "s/LINK_LIBRARIES\s*=\s*/&-Wl,--as-needed -ldl /g" build_static/build.ninja &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DOCS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 # fix missing link libraries
 sed -i.bak -e "s/LINK_LIBRARIES\s*=\s*/&-Wl,--as-needed -ldl /g" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 cp -u $INSTALLPREFIX/lib/libwpe-*.dll.a $INSTALLPREFIX/lib/libwpe.dll.a &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



