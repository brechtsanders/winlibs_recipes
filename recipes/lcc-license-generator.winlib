export NAME="lcc-license-generator"
export STATUS=
export URL=https://github.com/open-license-manager/lcc-license-generator
export BASENAME=lcc-license-generator
export DESCRIPTION="License generator for licensecc allows to create new projects (and their public and private keys) and issue licenses."
export CATEGORY=development,security
export TYPE=library
export VERSION=master
export VERSIONDATE=20210522
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/open-license-manager/lcc-license-generator/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/open-license-manager/lcc-license-generator/archive/refs/heads/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_CXX_COMPILER_ARCHITECTURE_ID:STRING=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "x64"; else echo "x86"; fi) -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



