export NAME="Firebird zipped archive"
export STATUS=
export URL=http://www.firebirdsql.org/
export BASENAME=firebird
export DESCRIPTION="FireBird database client library"
export CATEGORY=db
export TYPE=library
#export VERSION=2.0.3.12981-1
#export VERSION=2.1.1.17910-0
#export VERSION=2.1.2.18118-0
#export VERSION=2.1.3.18185-0
#export VERSION=2.1.4.18393-0
#export VERSIONDATE=20110318
#export VERSION=2.5.0.26074-0
#export VERSIONDATE=20101004
#export VERSION=2.5.1.26362-0
#export VERSIONDATE=20110930
#export VERSION=2.5.1.26351-0
#export VERSIONDATE=20111004
#export VERSION=2.5.2.26539-0
#export VERSIONDATE=20121205
#export VERSION=2.5.5.26952-0
#export VERSIONDATE=20160110
#export VERSION=2.5.6.27020-0
#export VERSIONDATE=20160705
export VERSION=2.5.7.27050-0
export VERSIONDATE=20170215
#export VERSION=3.0.0.32483-0
#export VERSIONDATE=20160424
#export VERSION=3.0.1.32609-0
#export VERSIONDATE=20160927
#export VERSION=3.0.2.32703-0
#export VERSIONDATE=20170322
#export VERSION=3.0.10.33601-0
#export VERSIONDATE=20220609
#export VERSION=4.0.4.3010-0
#export VERSIONDATE=20231109
#export VERSION=5.0.0
#export VERSIONDATE=20240111
#export VERSION=5.0.1
#export VERSIONDATE=20240805
#export VERSION=5.0.2
#export VERSIONDATE=20250212
#export VERSION=5.0.3
#export VERSIONDATE=20250714
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=pexports
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=IDPLicense.txt
export LICENSETYPE="IPL and IDPL"
#export DOWNLOADURL="http://sourceforge.net/projects/firebird/files/ Firebird- _Win32.zip"
#export DOWNLOADURL="http://sourceforge.net/projects/firebird/files/firebird/ Firebird- _Win32.zip"
#export DOWNLOADURL="http://sourceforge.net/projects/firebird/files/firebird/ firebird/ -Release/"
export DOWNLOADURL="https://github.com/FirebirdSQL/firebird/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
wl-wait4deps
if ( echo $RUNPLATFORM | grep -qv x86_64 ); then
 OSTYPE=Win32
 BITS=32
else
 OSTYPE=x64
 BITS=64
fi
#export DOWNLOADSOURCEURL=http://prdownloads.sourceforge.net/firebird/Firebird-$VERSION\_win32.zip
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/firebird/Firebird-$VERSION\_Win32.zip
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/firebird/Firebird-$VERSION\_$OSTYPE.zip
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/firebird/firebird-win$BITS/`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/"`-Release/Firebird-$VERSION\_$OSTYPE.zip
#export DOWNLOADSOURCEURL=https://github.com/FirebirdSQL/firebird/releases/download/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/")/Firebird-$VERSION\_$OSTYPE.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-showstatus install &&
mkdir -p $INSTALLPREFIX/lib
#unzip -oq $TARBALLDIR/$BASENAME/Firebird-$VERSION\_win32.zip -d $INSTALLPREFIX *License.txt include/*.h lib/fbclient_ms.lib lib/ib_util_ms.lib bin/fbclient.dll bin/ib_util.dll
#unzip -oq $TARBALLDIR/$BASENAME/Firebird-$VERSION\_Win32.zip -d $INSTALLPREFIX *License.txt include/*.h lib/fbclient_ms.lib lib/ib_util_ms.lib bin/fbclient.dll bin/ib_util.dll
unzip -oq $TARBALLDIR/$BASENAME/Firebird-$VERSION\_$OSTYPE.zip -d $INSTALLPREFIX *License.txt include/*.h lib/fbclient_ms.lib lib/ib_util_ms.lib bin/fbclient.dll bin/ib_util.dll
#reimp $INSTALLPREFIX/lib/fbclient_ms.lib -d
#mv fbclient.def $INSTALLPREFIX/lib/fbclient.def
#sed -e "s/^_//" fbclient.def > $INSTALLPREFIX/lib/fbclient.def
#rm fbclient.def
#pexports -h $INSTALLPREFIX/include/ibase.h -o $INSTALLPREFIX/bin/fbclient.dll > $INSTALLPREFIX/lib/fbclient.def && 
pexports $INSTALLPREFIX/bin/fbclient.dll > $INSTALLPREFIX/lib/fbclient.def && 
 dlltool -k -d $INSTALLPREFIX/lib/fbclient.def -l $INSTALLPREFIX/lib/libfbclient.a && 
 dlltool -k -D $INSTALLPREFIX/bin/fbclient.dll -d $INSTALLPREFIX/lib/fbclient.def -l $INSTALLPREFIX/lib/libfbclient.dll.a &&
#reimp $INSTALLPREFIX/lib/ib_util_ms.lib -d
#mv ib_util.def $INSTALLPREFIX/lib/ib_util.def
#sed -e "s/^_//" ib_util.def > $INSTALLPREFIX/lib/ib_util.def
#rm ib_util.def
#pexports -h $INSTALLPREFIX/include/ib_util.h -o $INSTALLPREFIX/bin/ib_util.dll > $INSTALLPREFIX/lib/ib_util.def && 
pexports $INSTALLPREFIX/bin/ib_util.dll > $INSTALLPREFIX/lib/ib_util.def && 
 dlltool -k -d $INSTALLPREFIX/lib/ib_util.def -l $INSTALLPREFIX/lib/libib_util.a && 
 dlltool -k -D $INSTALLPREFIX/bin/ib_util.dll -d $INSTALLPREFIX/lib/ib_util.def -l $INSTALLPREFIX/lib/libib_util.dll.a && 
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION



#export NAME="Firebird"
#export STATUS=
#export URL=http://www.firebirdsql.org/
#export BASENAME=firebird
#export DESCRIPTION="Firebird is a relational database offering many ANSI SQL standard features that runs on Linux, Windows, and a variety of Unix platforms. Firebird offers excellent concurrency, high performance, and powerful language support for stored procedures and triggers."
#export CATEGORY=db
#export TYPE=library
##export VERSION=2.1.4.18393-0
##export VERSIONDATE=20110629
##export VERSION=2.5.0.26074-0
##export VERSIONDATE=20101117
##export VERSION=2.5.4.26856-0
##export VERSIONDATE=20150506
##export VERSION=2.5.5.26952-0
##export VERSIONDATE=20160110
##export DEPENDENCIES=
##export VERSION=3.0.0.32483-0
##export VERSIONDATE=20160424
##export VERSION=3.0.1.32609-0
##export VERSIONDATE=20160927
##export VERSION=3.0.2.32703-0
##export VERSIONDATE=20170322
##export VERSION=3.0.10.33601-0
##export VERSIONDATE=20220609
#export VERSION=4.0.4.3010-0
#export VERSIONDATE=20231109
#wl-showstatus --package-version
#export DEPENDENCIES=libtommath
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=doc/license/README.license.usage.txt
#export LICENSETYPE="IPL/IDPL"
##export DOWNLOADURL="http://sourceforge.net/projects/firebird/files/firebird/"
#export DOWNLOADURL="https://github.com/FirebirdSQL/firebird/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/firebird/firebird/`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/"`-Release/Firebird-$VERSION.tar.bz2
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/firebird/firebird/`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/"`-Release/Firebird-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/firebird/firebird/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/")-Release/Firebird-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://github.com/FirebirdSQL/firebird/releases/download/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/")/Firebird-$VERSION.tar.bz2
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/Firebird-$VERSION.tar.bz2
#cd Firebird-$VERSION
### fix missing _MSC_VER in src/jrd/os/win32/mod_loader.cpp (version <= 2.1.4.18393-0)
##mv src/jrd/os/win32/mod_loader.cpp src/jrd/os/win32/mod_loader.cpp.bak
##echo "#define _MSC_VER 1500" > src/jrd/os/win32/mod_loader.cpp
##cat src/jrd/os/win32/mod_loader.cpp.bak >> src/jrd/os/win32/mod_loader.cpp
## fix missing touch src/jrd/shfolder.h (version >= 2.5.0.26074-0)
#touch src/include/gen/shfolder.h
## fix missing SHGetSpecialFolderPath in src/jrd/gds.cpp (version >= 2.5.0.26074-0)
##echo "#include <shlobj.h>" >> src/jrd/common.h
#mv src/jrd/gds.cpp src/jrd/gds.cpp.bak
#echo "#define _WIN32_IE 0x0400" > src/jrd/gds.cpp
#echo "#include <shlobj.h>" >> src/jrd/gds.cpp
#cat src/jrd/gds.cpp.bak >> src/jrd/gds.cpp
## fix missing OpenThread in src/common/fb_exception.cpp (version >= 2.5.0.26074-0)
#mv src/common/fb_exception.cpp src/common/fb_exception.cpp.bak
#echo "#define _WIN32_WINNT 0x0501" > src/common/fb_exception.cpp
#cat src/common/fb_exception.cpp.bak >> src/common/fb_exception.cpp
## fix src/common/classes/FpeControl.h (version >= 2.5.0.26074-0)
#patch -ulbf src/common/classes/FpeControl.h << EOF
#--- src/common/classes/FpeControl.h  2011-06-29 14:15:30 +0200
#+++ src/common/classes/FpeControl.h  2011-06-29 14:18:52 +0200
#@@ -33,4 +33,7 @@
# #if defined(WIN_NT)
# #include <float.h>
#+#ifndef _CW_DEFAULT
#+#define _CW_DEFAULT 0x0000001f
#+#endif
# #else
# #include <fenv.h>
#@@ -202,5 +205,5 @@
#
# // getting a portable isinf() is harder than you would expect
#-#ifdef WIN_NT
#+#if defined(WIN_NT) && !defined(isinf)
# inline bool isinf(double x)
# {
#EOF
## fix src/remote/inet.cpp (version >= 2.5.0.26074-0)
#patch -ulbf src/remote/inet.cpp << EOF
#--- src/remote/inet.cpp  2010-09-08 10:43:36 +0200
#+++ src/remote/inet.cpp  2011-06-29 14:26:24 +0200
#@@ -1722,3 +1722,3 @@
# {
#-       const USHORT flag = (USHORT) arg;
#+       const USHORT flag = (unsigned int) arg;
#
#EOF
## fix src/jrd/ext.cpp (version >= 2.5.0.26074-0)
#patch -ulbf src/jrd/ext.cpp << EOF
#--- src/jrd/ext.cpp  2010-09-08 10:43:28 +0200
#+++ src/jrd/ext.cpp  2011-06-29 14:34:36 +0200
#@@ -68,2 +68,6 @@
#
#+#ifdef __MINGW32__
#+#define FTELL64 ftell
#+#define FSEEK64 fseek
#+#else
# #ifdef WIN_NT
#@@ -75,2 +79,3 @@
# #endif
#+#endif
#EOF
## fix missing LPMEMORYSTATUSEX in src/jrd/os/win32/winnt.cpp (version >= 2.5.0.26074-0)
#mv src/jrd/os/win32/winnt.cpp src/jrd/os/win32/winnt.cpp.bak
#echo "#define _WIN32_WINNT 0x0500" > src/jrd/os/win32/winnt.cpp
#cat src/jrd/os/win32/winnt.cpp.bak >> src/jrd/os/win32/winnt.cpp
#bison --version &> /dev/null || echo touch src/dsql/parse.cpp
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
# # wl-showstatus build &&
# # make CC=${CC:-gcc} &&
# # wl-showstatus build-install &&
# # make install &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-superserver --disable-raw-devices --without-lock-manager --with-system-editline --with-system-icu &&
# ./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-superserver --disable-raw-devices --with-system-editline --with-system-icu &&
# ## fix missing THD_sleep (version <= 2.5.5.26952-0)
# #make -j1 -Cgen -fMakefile.boot.gpre &&
# #mv gen/Makefile.boot.gpre gen/Makefile.boot.gpre.bak &&
# #sed -e "s?\(\$(LINK_OPTS)\)?\1 ../temp/boot/jrd/thd.o?" gen/Makefile.boot.gpre.bak > gen/Makefile.boot.gpre &&
# ## remove invalid compiler option -mno-cygwin (version <= 2.5.5.26952-0)
# #mv gen/make.platform gen/make.platform.bak &&
# #sed -e "s/-mno-cygwin//" gen/make.platform.bak > gen/make.platform &&
# #wl-showstatus build &&
# #make -j1 CC=${CC:-gcc} ICU_LIBS="-licuuc -licudt -licuin" &&
# make -j1 CC=${CC:-gcc} CXX="${CXX:-g++} -std=gnu++98" ICU_LIBS="-licuuc -licudt -licuin" &&
# wl-showstatus build-install &&
# make install &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
##wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf Firebird-$VERSION
######make -j1 libfbclient
######make -j1 libfbstatic
######make -j1 libfbembed
######make -j1 -Cgen -fMakefile.boot.gpre
######make -j1 -Cgen -fMakefile.extlib
######../src/jrd/../jrd/ibase.h:405: error: 'XSQLDA' has not been declared
######gen/Makefile.intl: INTL_Sources= common/dllinst.cpp jrd/gds.cpp ...
##For ShFolder DLL see also: http://www.microsoft.com/download/en/details.aspx?displaylang=en&id=21762



#export NAME="Firebird server, client and tools"
#export STATUS=
#export URL=http://www.firebirdsql.org/
##export URL=https://github.com/FirebirdSQL/firebird/
#export BASENAME=firebird
#export DESCRIPTION="Firebird is a relational database offering many ANSI SQL standard features that runs on Linux, Windows, MacOS and a variety of Unix platforms. Firebird offers excellent concurrency, high performance, and powerful language support for stored procedures and triggers."
#export CATEGORY=database
#export TYPE=application,library
#export VERSION=2.5.9.27139-0
#export VERSIONDATE=20191101
##export VERSION=3.0.4.33054-0
##export VERSIONDATE=20191101
##export VERSION=3.0.5.33220-0
##export VERSIONDATE=20200123
##export VERSION=3.0.6.33328-0
##export VERSIONDATE=20201006
##export VERSION=4.0.4.3010-0
##export VERSIONDATE=20231109
#wl-showstatus --package-version
#export DEPENDENCIES=zlib,libtommath,icu,wineditline
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=doc/license/IDPL.txt
#export LICENSETYPE="Initial Developer's Public License"
#export DOWNLOADURL="https://github.com/FirebirdSQL/firebird/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/FirebirdSQL/firebird/releases/download/R$(echo $VERSION|sed -e "s/^\([0-9]\.[0-9]\.[0-9]\).*$/\1/; s/\./_/g")/Firebird-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/Firebird-$VERSION.tar.bz2
#cd Firebird-$VERSION
## fix already defined lint in src/common/utils.cpp
#patch -ulbf src/common/utils.cpp << EOF
#@@ -879,2 +879,3 @@
# #if defined(WIN_NT)
#+#undef lint
#        FILETIME utime, stime, dummy;
#EOF
## fix already defined isinf in src/common/classes/fpecontrol.h.cpp
#patch -ulbf src/common/classes/fpecontrol.h << EOF
#@@ -219,3 +219,3 @@
# // getting a portable isinf() is harder than you would expect
#-#ifdef WIN_NT
#+#if defined(WIN_NT) && !defined(__MINGW32__)
# inline bool isinf(double x)
#EOF
## fix throw issue in src/common/classes/alloc.h
#sed -i.bak -e "s/^\(#define THROW_BAD_ALLOC\s*\)\(..*\)$/\1\/\/\2/" src/common/classes/alloc.h
## fix src/jrd/tra.cpp
#patch -ulbf src/jrd/tra.cpp << EOF
#@@ -3859,3 +3859,3 @@
#
#-                                       SCL_check_access(tdbb, s_class, 0, NULL, NULL, SCL_read, object_table, false,
#+                                       SCL_check_access(tdbb, s_class, 0, NULL, NULL, SCL_read, object_table, 0,
#                                                blb_relation->rel_name);
#EOF
## fix already defined SECPKG_ATTR_ACCESS_TOKEN in src/auth/trusted/AuthSspi.cpp
#patch -ulbf src/auth/trusted/AuthSspi.cpp << EOF
#@@ -90 +90 @@
#-#if defined (__GNUC__)
#+#if defined (__GNUC__) && !defined(SECPKG_ATTR_ACCESS_TOKEN)
#EOF
## fix CPU architecture issue
##sed -i.bak -e "s/-march=i586 -mtune=i686//" builds/posix/prefix.linux
#sed -i.bak -e "s/-march=i586//" builds/posix/prefix.mingw
## fix missing *.lo
#sed -i.bak -e "s/ \*\.lo / /" extern/libtommath/makefile.shared
## workaround for issue detecting success of gpre_current.exe
#sed -i.bak -e "s/^\s*\$(GPRE_CURRENT).*\(\$@\)$/&; ls -1 \1 > \/dev\/null/" gen/make.rules gen/make.shared.targets gen/Makefile.codes
#sed -i.bak -e "s/create_db\s.*\(\$@\)$/&; ls -1 \1 > \/dev\/null/" gen/Makefile.refDatabases
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-system-icu --with-editline --with-system-editline --with-builtin-tommath &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-system-icu --with-editline --with-system-editline --without-builtin-tommath &&
# # fix building DLLs
# sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# # fix threads
# echo "#undef USE_POSIX_THREADS" >> src/jrd/common.h &&
# #echo "#define WIN_NT 1" >> src/jrd/common.h &&
# # fix missing ln -sf
# sed -i.bak -e "s/ln -sf \$(TOMMATH_SO)\.\$(TOMMATH_VER) \$(LIB)/echo &/; s/ln -sf/cp -rf/" gen/Makefile &&
# wl-showstatus build &&
# #touch extern/libtommath/libtommath.la &&
# mkdir -p extern/libtommath &&
# cp -f $MINGWPREFIX/lib/libtommath.a $MINGWPREFIX/lib/libtommath.dll.a extern/libtommath/ &&
# cp -f $MINGWPREFIX/bin/libtommath.dll gen/ &&
# #touch gen/tommath &&
# #make -j1 CC=${CC:-gcc} LIBTOOL="$(pwd)/libtool" TOMLIB=$(pwd)/extern/libtommath/libtommath.a &&
# #make -j1 CC="${CC:-gcc} -Wno-format=" LIBTOOL="$(pwd)/libtool" TOMMATH_SO=libtommath.dll &&
# make -j1 CC="${CC:-gcc} -msse4 $(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "-DAMD64"; fi)" CXX="${CXX:-g++} -fpermissive -msse4 $(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "-DAMD64"; fi)" LIBTOOL="$(pwd)/libtool" TOMMATH_SO=libtommath.dll &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf Firebird-$VERSION



#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_win build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK



#export NAME="Firebird"
#export STATUS=
#export URL=http://www.firebirdsql.org/
#export BASENAME=firebird
#export DESCRIPTION="Firebird is a relational database offering many ANSI SQL standard features that runs on Linux, Windows, and a variety of Unix platforms. Firebird offers excellent concurrency, high performance, and powerful language support for stored procedures and triggers."
#export CATEGORY=db
#export TYPE=library
##export VERSION=2.1.4.18393-0
##export VERSIONDATE=20110629
##export VERSION=2.5.0.26074-0
##export VERSIONDATE=20101117
##export VERSION=2.5.4.26856-0
##export VERSIONDATE=20150506
##export VERSION=2.5.5.26952-0
##export VERSIONDATE=20160110
##export DEPENDENCIES=
##export VERSION=3.0.0.32483-0
##export VERSIONDATE=20160424
##export VERSION=3.0.1.32609-0
##export VERSIONDATE=20160927
##export VERSION=3.0.2.32703-0
##export VERSIONDATE=20170322
#export VERSION=4.0.4.3010-0
#export VERSIONDATE=20231109
#wl-showstatus --package-version
#export DEPENDENCIES=libtommath
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=doc/license/README.license.usage.txt
#export LICENSETYPE="IPL/IDPL"
#export DOWNLOADURL="http://sourceforge.net/projects/firebird/files/firebird/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/firebird/firebird/`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/"`-Release/Firebird-$VERSION.tar.bz2
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/firebird/firebird/`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/"`-Release/Firebird-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/firebird/firebird/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/")-Release/Firebird-$VERSION.tar.bz2
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/Firebird-$VERSION.tar.bz2
#cd Firebird-$VERSION
### fix missing _MSC_VER in src/jrd/os/win32/mod_loader.cpp (version <= 2.1.4.18393-0)
##mv src/jrd/os/win32/mod_loader.cpp src/jrd/os/win32/mod_loader.cpp.bak
##echo "#define _MSC_VER 1500" > src/jrd/os/win32/mod_loader.cpp
##cat src/jrd/os/win32/mod_loader.cpp.bak >> src/jrd/os/win32/mod_loader.cpp
## fix missing touch src/jrd/shfolder.h (version >= 2.5.0.26074-0)
#touch src/include/gen/shfolder.h
## fix missing SHGetSpecialFolderPath in src/jrd/gds.cpp (version >= 2.5.0.26074-0)
##echo "#include <shlobj.h>" >> src/jrd/common.h
#mv src/jrd/gds.cpp src/jrd/gds.cpp.bak
#echo "#define _WIN32_IE 0x0400" > src/jrd/gds.cpp
#echo "#include <shlobj.h>" >> src/jrd/gds.cpp
#cat src/jrd/gds.cpp.bak >> src/jrd/gds.cpp
## fix missing OpenThread in src/common/fb_exception.cpp (version >= 2.5.0.26074-0)
#mv src/common/fb_exception.cpp src/common/fb_exception.cpp.bak
#echo "#define _WIN32_WINNT 0x0501" > src/common/fb_exception.cpp
#cat src/common/fb_exception.cpp.bak >> src/common/fb_exception.cpp
## fix src/common/classes/FpeControl.h (version >= 2.5.0.26074-0)
#patch -ulbf src/common/classes/FpeControl.h << EOF
#--- src/common/classes/FpeControl.h  2011-06-29 14:15:30 +0200
#+++ src/common/classes/FpeControl.h  2011-06-29 14:18:52 +0200
#@@ -33,4 +33,7 @@
# #if defined(WIN_NT)
# #include <float.h>
#+#ifndef _CW_DEFAULT
#+#define _CW_DEFAULT 0x0000001f
#+#endif
# #else
# #include <fenv.h>
#@@ -202,5 +205,5 @@
#
# // getting a portable isinf() is harder than you would expect
#-#ifdef WIN_NT
#+#if defined(WIN_NT) && !defined(isinf)
# inline bool isinf(double x)
# {
#EOF
## fix src/remote/inet.cpp (version >= 2.5.0.26074-0)
#patch -ulbf src/remote/inet.cpp << EOF
#--- src/remote/inet.cpp  2010-09-08 10:43:36 +0200
#+++ src/remote/inet.cpp  2011-06-29 14:26:24 +0200
#@@ -1722,3 +1722,3 @@
# {
#-       const USHORT flag = (USHORT) arg;
#+       const USHORT flag = (unsigned int) arg;
#
#EOF
## fix src/jrd/ext.cpp (version >= 2.5.0.26074-0)
#patch -ulbf src/jrd/ext.cpp << EOF
#--- src/jrd/ext.cpp  2010-09-08 10:43:28 +0200
#+++ src/jrd/ext.cpp  2011-06-29 14:34:36 +0200
#@@ -68,2 +68,6 @@
#
#+#ifdef __MINGW32__
#+#define FTELL64 ftell
#+#define FSEEK64 fseek
#+#else
# #ifdef WIN_NT
#@@ -75,2 +79,3 @@
# #endif
#+#endif
#EOF
## fix missing LPMEMORYSTATUSEX in src/jrd/os/win32/winnt.cpp (version >= 2.5.0.26074-0)
#mv src/jrd/os/win32/winnt.cpp src/jrd/os/win32/winnt.cpp.bak
#echo "#define _WIN32_WINNT 0x0500" > src/jrd/os/win32/winnt.cpp
#cat src/jrd/os/win32/winnt.cpp.bak >> src/jrd/os/win32/winnt.cpp
## fix redefinition of errno in extern/btyacc/defs.h (version >= 3.0.11.33703-0)
#patch -ulbf extern/btyacc/defs.h << EOF
#@@ -299,3 +299,3 @@
# /* system variable */
#-#ifndef _MSC_VER
#+#ifndef _WIN32
# extern int errno;
#EOF
#bison --version &> /dev/null || echo touch src/dsql/parse.cpp
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
## wl-showstatus build &&
## make CC=${CC:-gcc} &&
## wl-showstatus build-install &&
## make install &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-superserver --disable-raw-devices --without-lock-manager --with-system-editline --with-system-icu &&
#./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-superserver --disable-raw-devices --with-system-editline --with-system-icu &&
# ## fix missing THD_sleep (version <= 2.5.5.26952-0)
# #make -j1 -Cgen -fMakefile.boot.gpre &&
# #mv gen/Makefile.boot.gpre gen/Makefile.boot.gpre.bak &&
# #sed -e "s?\(\$(LINK_OPTS)\)?\1 ../temp/boot/jrd/thd.o?" gen/Makefile.boot.gpre.bak > gen/Makefile.boot.gpre &&
# ## remove invalid compiler option -mno-cygwin (version <= 2.5.5.26952-0)
# #mv gen/make.platform gen/make.platform.bak &&
# #sed -e "s/-mno-cygwin//" gen/make.platform.bak > gen/make.platform &&
# #wl-showstatus build &&
# #make -j1 CC=${CC:-gcc} ICU_LIBS="-licuuc -licudt -licuin" &&
# make -j1 CC=${CC:-gcc} CXX="${CXX:-g++} -std=gnu++98" ICU_LIBS="-licuuc -licudt -licuin" &&
# wl-showstatus build-install &&
# make install &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
##wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf Firebird-$VERSION
######make -j1 libfbclient
######make -j1 libfbstatic
######make -j1 libfbembed
######make -j1 -Cgen -fMakefile.boot.gpre
######make -j1 -Cgen -fMakefile.extlib
######../src/jrd/../jrd/ibase.h:405: error: 'XSQLDA' has not been declared
######gen/Makefile.intl: INTL_Sources= common/dllinst.cpp jrd/gds.cpp ...
##For ShFolder DLL see also: http://www.microsoft.com/download/en/details.aspx?displaylang=en&id=21762



#export NAME="Firebird server, client and tools"
#export STATUS=
#export URL=http://www.firebirdsql.org/
##export URL=https://github.com/Fire    birdSQL/firebird/
#export BASENAME=firebird
#export DESCRIPTION="Firebird is a relational database offering many ANSI SQL standard features that runs on Linux, Windows, MacOS and a variety of Unix platforms. Firebird offers excellent concurrency, high performance, and powerful language support for stored procedures and triggers."
#export CATEGORY=database
#export TYPE=application,library
##export VERSION=3.0.6.33328-0
##export VERSIONDATE=20201019
##export VERSION=3.0.7.33374-0
##export VERSIONDATE=20210210
##export VERSION=3.0.8.33535-0
##export VERSIONDATE=20211209
##export VERSION=3.0.9.33560-0
##export VERSIONDATE=20211209
##export VERSION=3.0.10.33601-0
##export VERSIONDATE=20220610
##export VERSION=3.0.11.33703-0
##export VERSIONDATE=20230805
#export VERSION=3.0.12.33787
#export VERSIONDATE=20230809
##export VERSION=4.0.0.2496-0
##export VERSIONDATE=20211209
##export VERSION=4.0.1.2692-0
##export VERSIONDATE=20211222
##export VERSION=4.0.2.2816-0
##export VERSIONDATE=20220811
##export VERSION=4.0.3.2975-0
##export VERSIONDATE=20230805
##export VERSION=4.0.4.3010-0
##export VERSIONDATE=20231109
##export VERSION=4.0.5.3140-0
##export VERSIONDATE=20240809
##export VERSION=5.0.0.1306-0
##export VERSIONDATE=20240111
##export VERSION=5.0.1.1469-0
##export VERSIONDATE=20240805
##export VERSION=5.0.2.1613-0
##export VERSIONDATE=20250212
##export VERSION=5.0.3.1683-0
##export VERSIONDATE=20250714
######CMake Error at src/CMakeLists.txt:138 (add_custom_target):  Cannot find source file:  src/msgs/facilities2.sql
#wl-showstatus --package-version
#export DEPENDENCIES=zlib,libdl,icu,libtommath,wineditline
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=doc/license/IDPL.txt
#export LICENSETYPE="Initial Developer's Public License"
#export DOWNLOADURL="https://github.com/FirebirdSQL/firebird/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/FirebirdSQL/firebird/releases/download/R$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*$/\1_\2_\3/")/Firebird-$VERSION.tar.bz2
##export DOWNLOADSOURCEURL=https://github.com/FirebirdSQL/firebird/releases/download/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/")/Firebird-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL="https://github.com/FirebirdSQL/firebird/releases/download/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/")/Firebird-$VERSION.tar.bz2 https://github.com/FirebirdSQL/firebird/releases/download/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/")/Firebird-$VERSION""_x64.zip"
##export DOWNLOADSOURCEURL="https://github.com/FirebirdSQL/firebird/releases/download/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/")/Firebird-$VERSION.tar.xz https://github.com/FirebirdSQL/firebird/releases/download/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/")/Firebird-$VERSION-x64.zip"
##export DOWNLOADSOURCEURL="https://github.com/FirebirdSQL/firebird/releases/download/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/")/Firebird-$VERSION.tar.xz"
##export DOWNLOADSOURCEURL="https://github.com/FirebirdSQL/firebird/releases/download/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/")/Firebird-$VERSION-source.tar.xz"
##export DOWNLOADSOURCEURL="https://github.com/FirebirdSQL/firebird/archive/refs/tags/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/").tar.gz"
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/Firebird-$VERSION.tar.bz2
##tar xJ --force-local -f $TARBALLDIR/$BASENAME/Firebird-$VERSION.tar.xz
#cd Firebird-$VERSION
##tar xJ --force-local -f $TARBALLDIR/$BASENAME/Firebird-$VERSION-source.tar.xz
##cd Firebird-$VERSION-source
##tar xz --force-local -f $TARBALLDIR/$BASENAME/v$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/").tar.gz
##cd firebird-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/")
## fix src/common/cvt.cpp (version >= 3.0.6.33328-0)
#mv src/common/cvt.cpp src/common/cvt.cpp.bak &&
#echo "#undef __STRICT_ANSI__" > src/common/cvt.cpp &&
#cat src/common/cvt.cpp.bak >> src/common/cvt.cpp
## fix src/common/classes/FpeControl.h (version >= 3.0.6.33328-0)
#sed -i.bak -e "s/#if defined(WIN_NT)\|#ifdef WIN_NT/#if defined(WIN_NT) \&\& \!defined(__MINGW32__)/" src/common/classes/FpeControl.h
## fix src/jrd/jrd.cpp (version >= 3.0.6.33328-0)
#patch -ulbf src/jrd/jrd.cpp << EOF
#@@ -7452,3 +7452,3 @@
# #ifdef WIN_NT
#-               ThreadModuleRef thdRef(attachmentShutdownThread, &engineShutdown);
#+               ThreadModuleRef thdRef((void*)attachmentShutdownThread, &engineShutdown);
# #endif
#EOF
## fix src/jrd/jrd.cpp (version >= 3.0.6.33328-0)
#patch -ulbf src/jrd/jrd.cpp << EOF
#@@ -7452,3 +7452,3 @@
# #ifdef WIN_NT
#-               ThreadModuleRef thdRef(attachmentShutdownThread, &engineShutdown);
#+               ThreadModuleRef thdRef((void*)attachmentShutdownThread, &engineShutdown);
# #endif
#EOF
## fix already defined STRING in src/include/gen/parse.h (version >= 3.0.6.33328-0)
#mv src/include/gen/parse.h src/include/gen/parse.h.bak
#cat > src/include/gen/parse.h << EOF
##define STRING WIN_STRING
##include <windows.h>
##undef STRING
#EOF
#cat src/include/gen/parse.h.bak >> src/include/gen/parse.h
## fix missing AI_V4MAPPED in src/remote/inet.cpp (version >= 3.0.6.33328-0)
#mv src/remote/inet.cpp src/remote/inet.cpp.bak
#cat > src/remote/inet.cpp << EOF
##if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600
##undef _WIN32_WINNT
##define _WIN32_WINNT 0x0600
##endif
#EOF
#cat src/remote/inet.cpp.bak >> src/remote/inet.cpp
## fix missing ctime_r/ctime_s in build_win/src/utilities/gstat/dba.epp.boot.cpp (version >= 3.0.6.33328-0)
#mv build_win/src/utilities/gstat/dba.epp.boot.cpp build_win/src/utilities/gstat/dba.epp.boot.cpp.bak &&
#echo "_POSIX_THREAD_SAFE_FUNCTIONS" > build_win/src/utilities/gstat/dba.epp.boot.cpp &&
#cat build_win/src/utilities/gstat/dba.epp.boot.cpp.bak >> build_win/src/utilities/gstat/dba.epp.boot.cpp
### fix already defined MININT64 in src/common/utils_proto.h (version >= 4.0.0.2496-0)
##sed -i.bak -e "s/MININT64/MY_&/g" src/common/utils_proto.h
## fix already defined MININT64 in src/common/utils_proto.h (version >= 4.0.4.3010-0)
#patch -ulbf src/common/utils_proto.h << EOF
#@@ -117,4 +117,6 @@
# #if FB_INT64_COMPARE_FAILED
#+#ifndef MININT64
#+#define MININT64 0x8000000000000000
#+#endif
#                // avoid compiler bug when comparing minimum INT64
#-               const SINT64 MININT64 = 0x8000000000000000;
#                if (n1 == MININT64)
#EOF
## fix undefined FB_TZDATADIR in src/common/config/config.h (version >= 4.0.4.3010-0)
#cat >> src/common/config/config.h << EOF
##ifndef FB_TZDATADIR
##define FB_TZDATADIR ""
##endif
#EOF
## fix missing firebird.msg
#mkdir -p build_win/src
#unzip -oq $TARBALLDIR/$BASENAME/Firebird-$VERSION\_x64.zip firebird.msg -dbuild_win/src
##unzip -oq $TARBALLDIR/$BASENAME/Firebird-$VERSION-x64.zip firebird.msg -dbuild_win/src
## fix CMakeLists.txt (version >= 3.0.6.33328-0)
#patch -ulbf CMakeLists.txt << EOF
#@@ -100,3 +100,3 @@
#     endforeach()
#-elseif (UNIX)
#+elseif (UNIX OR MINGW)
#     set(CMAKE_LIBRARY_OUTPUT_DIRECTORY \${output_dir}/bin)
#@@ -115,3 +115,3 @@
#
#-if (UNIX)
#+if (UNIX OR MINGW)
#     if (NOT ICU_INCLUDE_DIR)
#@@ -201,3 +201,3 @@
#
#-if (MINGW)
#+if (MSVC)
#     # clear unix-style prefixes
#@@ -254,3 +254,3 @@
#
#-if (WIN32)
#+if (MSVC)
#     # icu
#EOF
## fix src/CMakeLists.txt (version >= 3.0.6.33328-0)
#patch -ulbf src/CMakeLists.txt << EOF
#@@ -852,3 +852,3 @@
#
#-if (WIN32)
#+if (MSVC)
#     add_custom_command(
#EOF
### allow using shell scripts in builds/cmake/BuildFunctions.cmake (version >= 4.0.4.3010-0)
##patch -ulbf builds/cmake/BuildFunctions.cmake << EOF
##@@ -266,4 +266,3 @@
##
##-    set_win32(env "PATH=\${dir}\\;%PATH%")
##-    set_unix (env "PATH=\${dir}/bin:\$PATH")
##+    set_win32(env "PATH=\${dir}/bin:\$PATH")
##     set(env "\${env}"
##@@ -282,3 +281,3 @@
##     set(perm)
##-    if (WIN32)
##+    if (MSVC)
##         set(pre_cmd @)
##EOF
## fix building with C++ 17
#sed -i.bak -e "s/-std=c++11/-std=c++17/" CMakeLists.txt
#mkdir -p build_win build_static build_shared &&
# wl-showstatus configure &&
# #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_FLAGS:STRING="-I$(cygpath -m $MINGWPREFIX/include/libdl-win32) -fpermissive -D_POSIX_THREAD_SAFE_FUNCTIONS -DHAVE_CTIME_R -std=c++11 -msse4.2 -Wno-deprecated -Wno-write-strings -Wa,-mbig-obj -g0" -S. -Bbuild_win &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_FLAGS:STRING="-I$(cygpath -m $MINGWPREFIX/include/libdl-win32) -fpermissive -D_POSIX_THREAD_SAFE_FUNCTIONS -DHAVE_CTIME_R -Wno-deprecated -Wno-write-strings -Wa,-mbig-obj -g0" -S. -Bbuild_win &&
# #wl-showstatus configure &&
# #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# #wl-showstatus configure &&
# #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# # fix missing -ldl
# sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -ldl/" build_win/build.ninja &&
# wl-showstatus build &&
# #sed -i.bak2 -e "s/\(\&\& \)\([^ ]*\.sh \)/\1sh.exe -i \2/" build_win/build.ninja &&
# #ninja -C build_win src/alice/alice_meta.epp.boot.cpp &&
# ninja -Cbuild_win &&
# ( ninja -Cbuild_win || (
#  # fix missing ctime_r/ctime_s (version >= 3.0.6.33328-0)
#  mv build_win/src/utilities/gstat/dba.epp.boot.cpp build_win/src/utilities/gstat/dba.epp.boot.cpp.bak &&
#  echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > build_win/src/utilities/gstat/dba.epp.boot.cpp &&
#  echo "#define HAVE_CTIME_R 1" >> build_win/src/utilities/gstat/dba.epp.boot.cpp &&
#  cat build_win/src/utilities/gstat/dba.epp.boot.cpp.bak >> build_win/src/utilities/gstat/dba.epp.boot.cpp &&
#  ninja -Cbuild_win
# )) &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
# #wl-showstatus build-install &&
# #ninja -Cbuild_static install/strip &&
# #wl-showstatus build-install &&
# #ninja -Cbuild_shared install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf Firebird-$VERSION
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf Firebird-$VERSION-source



## fix undefined SleepEx() in extern/libtomcrypt/src/math/ltm_desc.c (version >= 5.0.2.1613-0)
#patch -ulbf extern/libtomcrypt/src/math/ltm_desc.c << EOF
#@@ -1 +1,2 @@
#+#include <windows.h>
# /* LibTomCrypt, modular cryptographic library -- Tom St Denis
#EOF
## manually copy libcds-s.a
#cp -f $MINGWPREFIX/lib/libcds.a extern/libcds/lib/Release/bin/libcds-s.a
## fix missing extern/libcds/lib/Release/Makefile
#cat > extern/libcds/lib/Release/Makefile << EOF
#all:
#install:
#EOF
## manually copy builds/win32/defs/fbclient.def
#cp -n builds/win32/defs/fbclient_s.def builds/win32/defs/fbclient.def
#wl-showstatus configure &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-client-only --with-wire-compress --with-system-re2 --with-termlib=ncurses --with-editline --with-system-editline --with-system-boost --without-builtin-tommath --without-builtin-tomcrypt &&
# # avoid linking .so files
# sed -i.bak -e "s/\(ln -sf \$(TOM.*_SO)\)/#&/" gen/Makefile &&
# ## fix building DLLs
# #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# ## fix detection of shared libraries
# #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
# #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
# #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
# wl-showstatus build &&
# make &&
# wl-showstatus build-install &&
# make install-strip &&
# #( make install-strip || ( make install && strip $INSTALLPREFIX/bin/*.{dll,exe} )) &&
#    echo OK



#### see also bug: https://github.com/FirebirdSQL/firebird/issues/6774
