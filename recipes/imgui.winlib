export NAME="ImGui"
export STATUS=
export URL=https://github.com/ocornut/imgui
export BASENAME=imgui
export DESCRIPTION="dear imgui (AKA ImGui), is a bloat-free graphical user interface library for C++. It outputs optimized vertex buffers that you can render anytime in your 3D-pipeline enabled application. It is fast, portable, renderer agnostic and self-contained (no external dependencies)."
export CATEGORY=graphics
export TYPE=library
#export VERSION=1.49
#export VERSIONDATE=20161204
#export VERSION=1.50
#export VERSIONDATE=20170602
#export VERSION=1.51
#export VERSIONDATE=20170827
#export VERSION=1.52
#export VERSIONDATE=20171028
####libs/gl3w/GL/gl3w.c:1:10: fatal error: GL/gl3w.h: No such file or directory
####libs/gl3w/GL/gl3w.c:128:7: error: conflicting types for 'gl3wGetProcAddress'
#export VERSION=1.53
#export VERSIONDATE=20171226
#export VERSION=1.60
#export VERSIONDATE=20180408
#export VERSION=1.61
#export VERSIONDATE=20180514
#export VERSION=1.62
#export VERSIONDATE=20180622
#export VERSION=1.63
#export VERSIONDATE=20180830
#export VERSION=1.64
#export VERSIONDATE=20180831
####libimgui.a(imgui.cpp.o):imgui.cpp:(.text+0x5a9c): undefined reference to `ImGui::TreeNode(void const*, char const*, ...)'
#export VERSION=1.65
#export VERSIONDATE=20180907
#export VERSION=1.66
#export VERSIONDATE=20181123
#export VERSION=1.66b
#export VERSIONDATE=20181203
#export VERSION=1.67
#export VERSIONDATE=20190115
#export VERSION=1.68
#export VERSIONDATE=20190219
#export VERSION=1.69
#export VERSIONDATE=20190314
#export VERSION=1.70
#export VERSIONDATE=20190506
#export VERSION=1.71
#export VERSIONDATE=20190613
#export VERSION=1.72
#export VERSIONDATE=20190728
#export VERSION=1.73
#export VERSIONDATE=20190925
#export VERSION=1.74
#export VERSIONDATE=20191126
#export VERSION=1.75
#export VERSIONDATE=20200211
#export VERSION=1.76
#export VERSIONDATE=20200413
#export VERSION=1.77
#export VERSIONDATE=20200630
#export VERSION=1.78
#export VERSIONDATE=20200819
#export VERSION=1.79
#export VERSIONDATE=20201009
#export VERSION=1.80
#export VERSIONDATE=20210122
#export VERSION=1.81
#export VERSIONDATE=20210211
#export VERSION=1.82
#export VERSIONDATE=20210316
#export VERSION=1.83
#export VERSIONDATE=20210525
#export VERSION=1.84.1
#export VERSIONDATE=20210821
#export VERSION=1.84.2
#export VERSIONDATE=20210824
#export VERSION=1.85
#export VERSIONDATE=20211013
#export VERSION=1.86
#export VERSIONDATE=20211223
#export VERSION=1.87
#export VERSIONDATE=20220208
#export VERSION=1.88
#export VERSIONDATE=20220622
#export VERSION=1.89
#export VERSIONDATE=20221116
#export VERSION=1.89.1
#export VERSIONDATE=20221125
#export VERSION=1.89.2
#export VERSIONDATE=20230106
#export VERSION=1.89.3
#export VERSIONDATE=20230215
#export VERSION=1.89.4
#export VERSIONDATE=20230315
#export VERSION=1.89.5
#export VERSIONDATE=20230414
#export VERSION=1.89.6
#export VERSIONDATE=20230531
#export VERSION=1.89.7
#export VERSIONDATE=20230705
#export VERSION=1.89.8
#export VERSIONDATE=20230801
#export VERSION=1.89.9
#export VERSIONDATE=20230905
#export VERSION=1.90
#export VERSIONDATE=20231116
#export VERSION=1.90.1
#export VERSIONDATE=20240111
#export VERSION=1.90.2
#export VERSIONDATE=20240210
#export VERSION=1.90.3
#export VERSIONDATE=20240214
#export VERSION=1.90.4
#export VERSIONDATE=20240223
#export VERSION=1.90.5
#export VERSIONDATE=20240412
#export VERSION=1.90.6
#export VERSIONDATE=20240509
export VERSION=1.90.8
export VERSIONDATE=20240607
wl-showstatus --package-version
#export DEPENDENCIES=gl3w
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/ocornut/imgui/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/ocornut/imgui/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## replace examples/libs/gl3w/GL/gl3w.c
#mv examples/libs/gl3w/GL/gl3w.c examples/libs/gl3w/GL/gl3w.c.bak &&
#cp $MINGWPREFIX/src/gl3w.c examples/libs/gl3w/GL/gl3w.c
# fix DLL exports in imgui.h
mv imgui.h imgui.h.bak
cat > imgui.h << EOF
#if !defined(IMGUI_API) && defined(_WIN32)
#if defined(BUILD_IMGUI_SHARED)
#define IMGUI_API __declspec(dllexport)
#elif !defined(STATIC) && !defined(STATIC_IMGUI)
#define IMGUI_API __declspec(dllimport)
#else
#define IMGUI_API
#endif
#endif
EOF
sed -e "s/static char\s*EmptyString/IMGUI_API &/" imgui.h.bak >> imgui.h
## set IMGUI_API for DLL export in imconfig.h
#sed -i.bak -e "s?//\(#define IMGUI_API.*dllexport.*\)?\1?" imconfig.h
# don't export inline functions in imgui_internal.h (version >= 1.81)
sed -i.bak -e "s/IMGUI_API \(~*ImGuiTable()\)/\1/" imgui_internal.h
# don't export inline functions in imgui_internal.h (version >= 1.85)
sed -i.bak2 -e "s/IMGUI_API \(.*{\)/\1/" imgui_internal.h
wl-showstatus build &&
 touch SUCCESS &&
 for F in *.cpp; do
  echo CXX $F &&
  ${CXX:-g++} -O3 -I. $F -c -o $F.o -DBUILD_IMGUI_SHARED || rm -f SUCCESS
 done &&
 ls -1 SUCCESS > /dev/null &&
 #make -C examples/opengl_example CXXFLAGS="-I$(pwd)" LIBS="-lglfw3 -lgdi32 -lopengl32 -limm32" &&
 #examples/opengl_example/opengl_example.exe &&
 #make -C examples/opengl3_example CC=${CC:-gcc} CXX=${CXX:-g++} CXXFLAGS="-I$(pwd)" LIBS="-lglfw3 -lgdi32 -lopengl32 -limm32" &&
 ##examples/opengl3_example/opengl3_example.exe &&
 #make -C examples/example_glfw_opengl2 CC=${CC:-gcc} CXX=${CXX:-g++} CXXFLAGS="-I$(pwd) -I$(pwd)/examples" LIBS="-lglfw3 -lgdi32 -lopengl32 -limm32" &&
 #make -C examples/example_glfw_opengl3 CC=${CC:-gcc} CXX=${CXX:-g++} CXXFLAGS="-I$(pwd) -I$(pwd)/examples" LIBS="-lglfw3 -lgdi32 -lopengl32 -limm32" &&
 #make -C examples/example_glfw_opengl3 CC=${CC:-gcc} CXX=${CXX:-g++} CXXFLAGS="-I$(pwd) -I$(pwd)/examples" LIBS="-lglfw3" &&
 #make -C examples/example_glfw_opengl3 CC=${CC:-gcc} CXX=${CXX:-g++} CXXFLAGS="-I$(pwd) -I$(pwd)/examples -I$(pwd)/backends" LIBS="-lglfw3" &&
 #ar cru libimgui.a imgui.cpp.o imgui_draw.cpp.o &&
 #ar cru libimgui.a imgui.cpp.o imgui_draw.cpp.o imgui_widgets.cpp.o &&
 #ar cru libimgui.a $(ls -1 *.cpp.o|grep  -v demo) &&
 ${AR:-ar} cru libimgui.a *.cpp.o &&
 ( echo EXPORTS; ${NM:-nm} -f posix --defined-only -p libimgui.a | sed -n -e "s/^\([^ ]*\) T .*$/\1/p" | sed -e "s/^__*/_/" | grep "Im" ) > imgui.def &&
 #g++ -shared -s -mwindows -def imgui.def -o imgui.dll libimgui.a -Wl,--out-implib,libimgui.dll.a &&
 ${CXX:-g++} -shared -s -mwindows -def imgui.def -o imgui.dll libimgui.a -Wl,--out-implib,libimgui.dll.a -Wl,--as-needed -limm32 &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include/imgui $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f *.cpp *.h $INSTALLPREFIX/include/imgui/ &&
 cp -f *.a $INSTALLPREFIX/lib/ &&
 cp -f *.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



