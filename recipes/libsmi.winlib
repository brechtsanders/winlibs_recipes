export NAME="libsmi"
export STATUS=
export URL=http://www.ibr.cs.tu-bs.de/projects/libsmi/
export BASENAME=libsmi
export DESCRIPTION="Library to Access SMI MIB Information"
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=0.4.8
#export VERSIONDATE=20150510
export VERSION=0.5.0
export VERSIONDATE=20150625
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://www.ibr.cs.tu-bs.de/projects/libsmi/download/"
#export DOWNLOADURL="http://repository.timesys.com/buildsources/l/libsmi/"
#export DOWNLOADURL="https://gitlab.ibr.cs.tu-bs.de/nm/libsmi/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://www.ibr.cs.tu-bs.de/projects/libsmi/download/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://repository.timesys.com/buildsources/l/libsmi/libsmi-$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix lib/parser-smi.h (version >= 0.5.0)
patch -ulbf lib/parser-smi.h << EOF
@@ -26,3 +26,3 @@

-extern int smiparse();
+extern int smiparse(struct Parser *parserPtr);

EOF
# fix lib/smi-data.c (version >= 0.5.0)
patch -ulbf lib/smi-data.c << EOF
@@ -41,3 +41,3 @@
 #include "scanner-smi.h"
-extern int smiparse();
+extern int smiparse(struct Parser *parserPtr);
 #endif
EOF
# fix lib/parser-yang.h (version >= 0.5.0)
patch -ulbf lib/parser-yang.h << EOF
@@ -8,2 +8,3 @@
 #include "yang-data.h"
+#include "smi-data.h"

@@ -15,3 +16,3 @@

-extern int yangparse();
+extern int yangparse(struct Parser *parserPtr);

EOF
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="$(if ${CC:-gcc} --help -v 2>/dev/null | grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####For windows patches see also: http://www.bertnase.de/libsmi/



