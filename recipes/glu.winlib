export NAME="GLU"
export STATUS=
export URL=http://cgit.freedesktop.org/mesa/glu/
export BASENAME=glu
export DESCRIPTION="Mesa GLU - OpenGL Utility Library (GLU)"
export CATEGORY=graphics
export TYPE=library
#export VERSION=9.0.0
#export VERSIONDATE=20130211
#export VERSION=9.0.1
#export VERSIONDATE=20190724
export VERSION=9.0.2
export VERSIONDATE=20210625
####64-bit: src/include/gluos.h:89:22: fatal error: GL/glext.h: No such file or directory compilation terminated.
#export VERSION=9.0.3
#export VERSIONDATE=20230722
wl-showstatus --package-version
#export DEPENDENCIES=khronos-headers-gl
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
export DOWNLOADURL="ftp://ftp.freedesktop.org/pub/mesa/glu/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=ftp://ftp.freedesktop.org/pub/mesa/glu/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=ftp://ftp.freedesktop.org/pub/mesa/glu/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix header files for OpenGL
cat >> src/include/gluos.h << EOF
#ifdef __MINGW32__
#include <GL/gl.h>
#include <GL/glext.h>
#endif
EOF
wl-showstatus configure &&
 #mkdir -p m4 &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 # fix detection of OpenGL libary
 sed -i.bak -e "s/-lGL/-lopengl32/g; s/char glBegin ();/#include <GL\/gl.h>/; s/return *\(glBegin *(\))/\10)/" configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-DRESOLVE_3D_TEXTURE_SUPPORT" &&
 ## fix libtool for proper export of symbols (version <= 9.0.1)
 #sed -i.bak -e 's/\(\[_A-Za-z0-9\)\(\].*\)\(\\\$\)/\1\2\\(@[0-9]*\\)*\3/' libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 # fix missing dependancy in pkg-config .pc files
 sed -i -e "s/^Requires: gl/#&/" $INSTALLPREFIX/lib/pkgconfig/glu.pc &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION




# fix meson.build (version >= 9.0.3)
patch -ulbf meson.build << EOF
@@ -36,3 +36,3 @@
   description : 'Mesa OpenGL Utility Library',
-  requires: dep_gl
+  libraries: dep_gl
 )
EOF
#export BUILDDEPENDENCIES=meson,ninja
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS -Dcpp_link_args=$LDFLAGS
## fix location of Perl
#sed -i.bak -e "s?'perl'?'$(cygpath -w $PERLDIR/bin/perl.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix detection of Python
#sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix missing gio-unix
##sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgl_provider=gl -Dc_link_args="-lglbinding" -Dcpp_link_args="-lglbinding" . build_both &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgl_provider=glvnd -Dc_link_args="-lglbinding" -Dcpp_link_args="-lglbinding" . build_both &&
 ## fix slash/backslash path issue when calling Python from Ninja
 #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 ## fix Python path issues in meson_exe
 #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
 ## fix executing shell scripts
 #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
 #PATH=$PERLDIR/../c/bin:$PERLDIR/bin:$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
    echo OK && find . -name '*.a'
