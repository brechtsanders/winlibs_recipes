#export NAME="PulseAudio"
#export STATUS=
#export URL=http://www.pulseaudio.org/
#export BASENAME=pulseaudio
#export DESCRIPTION="PulseAudio is a sound system for POSIX OSes, meaning that it is a proxy for your sound applications. It allows you to do advanced operations on your sound data as it passes between your application and your hardware. Things like transferring the audio to a different machine, changing the sample format or channel count and mixing several sounds into one are easily achieved using a sound server."
#export CATEGORY=audio,hardware
#export TYPE=library
##export VERSION=0.9.22
##export VERSIONDATE=20101202
##export VERSION=0.9.23
##export VERSIONDATE=20110726
##export DEPENDENCIES=libatomic_ops,pthreads,dbus,glib2,gtk2,openssl
##export VERSION=1.1
##export VERSIONDATE=20120313
##export DEPENDENCIES=libatomic_ops,pthreads,dbus,glib2,gtk2,openssl,json
##wl-showstatus --package-version
##export DEPENDENCIES=bdwgc,pthreads,dbus,glib2,gtk2,openssl,json
##export VERSION=3.0
##export VERSIONDATE=20130108
##export VERSION=3.99.1
##export VERSIONDATE=20130416
##export VERSION=3.99.2
##export VERSIONDATE=20130523
##export VERSION=4.0
##export VERSIONDATE=20130605
##export VERSION=4.99.2
##export VERSIONDATE=20140124
##export VERSION=4.99.3
##export VERSIONDATE=20140130
##export VERSION=4.99.4
##export VERSIONDATE=20140215
##export VERSION=5.0
##export VERSIONDATE=20140303
##export VERSION=5.99.1
##export VERSIONDATE=20141121
##export VERSION=5.99.2
##export VERSIONDATE=20141219
##export VERSION=5.99.3
##export VERSIONDATE=20150121
##export VERSION=6.0
##export VERSIONDATE=20150213
##export VERSION=6.99.1
##export VERSIONDATE=20150828
##export VERSION=6.99.2
##export VERSIONDATE=20150912
##export VERSION=7.0
##export VERSIONDATE=20150924
##export VERSION=7.1
##export VERSIONDATE=20151101
##export VERSION=7.99.1
##export VERSIONDATE=20151228
#####src/tests/lfe-filter-test.c:145: undefined reference to `random'
##export VERSION=8.0
##export VERSIONDATE=20160406
##export VERSION=8.99.1
##export VERSIONDATE=20160512
##export VERSION=8.99.2
##export VERSIONDATE=20160529
#####src/pulsecore/conf-parser.c:227:54: error: 'alphasort' undeclared (first use in this function)
##export VERSION=9.0
##export VERSIONDATE=20160622
##export VERSION=9.99.1
##export VERSIONDATE=20170103
##export VERSION=10.0
##export VERSIONDATE=20170119
##export VERSION=10.99.1
##export VERSIONDATE=20170725
##export VERSION=11.0
##export VERSIONDATE=20170905
##export VERSION=11.1
##export VERSIONDATE=20170919
##export VERSION=11.99.1
##export VERSIONDATE=20180513
##export VERSION=12.0
##export VERSIONDATE=20180621
##export VERSION=12.1
##export VERSIONDATE=20180715
##export VERSION=12.2
##export VERSIONDATE=20180717
##export VERSION=12.99.1
##export VERSIONDATE=20190709
##export VERSION=12.99.2
##export VERSIONDATE=20190807
##export VERSION=12.99.3
##export VERSIONDATE=20190901
#export VERSION=13.0
#export VERSIONDATE=20190913
##export VERSION=13.99.2
##export VERSIONDATE=20200921
##export VERSION=13.99.3
##export VERSIONDATE=20201031
##export VERSION=14.0
##export VERSIONDATE=20201124
##export VERSION=14.1
##export VERSIONDATE=20210113
#export VERSION=14.2
#export VERSIONDATE=20210117
##export VERSION=14.99.1
##export VERSIONDATE=20210518
##export VERSION=14.99.2
##export VERSIONDATE=20210616
##export VERSION=15.0
##export VERSIONDATE=20210728
#wl-showstatus --package-version
#export DEPENDENCIES=bdwgc,pthreads,dbus,glib2,gtk2,openssl,json,libsndfile,libspeex,libsamplerate,gdbm,fftw,liborc,libltdl
#export OPTIONALDEPENDENCIES=jack
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=LGPL
##export DOWNLOADURL="http://www.pulseaudio.org/wiki/DownloadPulseAudio"
#export DOWNLOADURL="http://freedesktop.org/software/pulseaudio/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://0pointer.de/lennart/projects/pulseaudio/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://freedesktop.org/software/pulseaudio/releases/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://freedesktop.org/software/pulseaudio/releases/$BASENAME-$VERSION.tar.xz
#wl-wait4deps
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix missing files
#mkdir -p sys netinet
#touch sys/utsname.h sys/ioctl.h sys/poll.h sys/wait.h netinet/in.h netdb.h netinet/tcp.h
#echo "#include <winsock2.h>" > sys/socket.h
### fix src/pulse/fork-detect.c (version <= 1.1)
##mv src/pulse/fork-detect.c src/pulse/fork-detect.c.bak
##grep -v pa_assert_cc src/pulse/fork-detect.c.bak > src/pulse/fork-detect.c
## fix missing ENOTSUP in src/pulsecore/rtkit.c
#mv src/pulsecore/rtkit.c src/pulsecore/rtkit.c.bak
#echo "#define ENOTSUP 45" > src/pulsecore/rtkit.c
#cat src/pulsecore/rtkit.c.bak >> src/pulsecore/rtkit.c
## fix missing getuid in src/modules/module-console-kit.c
#mv src/modules/module-console-kit.c src/modules/module-console-kit.c.bak
#echo "#define getuid() 0" > src/modules/module-console-kit.c
#cat src/modules/module-console-kit.c.bak >> src/modules/module-console-kit.c
## workarounds in src/modules/rtp/rtp.c
#mv src/modules/rtp/rtp.c src/modules/rtp/rtp.c.bak
#cat > src/modules/rtp/rtp.c << EOF
##include <winsock2.h>
##include <ws2tcpip.h>
##include <mswsock.h>
##define SO_TIMESTAMP 29
##define SCM_TIMESTAMP SO_TIMESTAMP
#struct cmsghdr {
# socklen_t     cmsg_len;
# int           cmsg_level;
# int           cmsg_type;
# unsigned char cmsg_data[];
#};
##define CMSG_FIRSTHDR(m) NULL
##define CMSG_NXTHDR(m, cm) NULL
##define CMSG_DATA(cm) cm->cmsg_data
#//#define msghdr wsacmsghdr
#struct msghdr {
#void          *msg_name;
#socklen_t      msg_namelen;
#struct iovec  *msg_iov;
#int            msg_iovlen;
#void          *msg_control;
#socklen_t      msg_controllen;
#int            msg_flags;
#};
#typedef char* caddr_t;
#struct iovec {
# caddr_t iov_base;
# int iov_len;
#};
##ifndef MSG_DONTWAIT
##define MSG_DONTWAIT 0x1000000
##endif
##define ioctl(fd,flag,size) -1
##define sendmsg(fd,msg,flags) -1
#EOF
#cat src/modules/rtp/rtp.c.bak >> src/modules/rtp/rtp.c
## workarounds in src/modules/rtp/sap.c
#mv src/modules/rtp/sap.c src/modules/rtp/sap.c.bak
#cat > src/modules/rtp/sap.c << EOF
##include <winsock2.h>
##include <ws2tcpip.h>
#struct msghdr {
#void          *msg_name;
#socklen_t      msg_namelen;
#struct iovec  *msg_iov;
#int            msg_iovlen;
#void          *msg_control;
#socklen_t      msg_controllen;
#int            msg_flags;
#};
#typedef char* caddr_t;
#struct iovec {
# caddr_t iov_base;
# int iov_len;
#};
##ifndef MSG_DONTWAIT
##define MSG_DONTWAIT 0x1000000
##endif
##define ioctl(fd,flag,size) -1
##define sendmsg(fd,msg,flags) -1
##define recvmsg(fd,msg,flags) -1
#EOF
## fix getuid src/daemon/main.c
#mv src/daemon/main.c src/daemon/main.c.bak
#echo "#define getuid() 0" > src/daemon/main.c
#cat src/daemon/main.c.bak >> src/daemon/main.c
## fix problem detecting GNU gettext tools on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# mv configure configure.bak
# sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
#fi
## fix duplicate case in src/pulse/fork-detect.c
#patch -ulbf src/pulse/fork-detect.c << EOF
#--- src/pulse/fork-detect.c  2009-07-04 21:29:30 +0200
#+++ src/pulse/fork-detect.c  2013-01-09 15:21:04 +0100
#@@ -41,3 +41,3 @@
#
#-    pa_assert_cc(sizeof(pa_atomic_t) >= sizeof(pid_t));
#+    //pa_assert_cc(sizeof(pa_atomic_t) >= sizeof(pid_t));
#
#EOF
## fix missing uid in src/daemon/caps.c (version = 4.0)
#patch -ulbf src/daemon/caps.c << EOF
#--- src/daemon/caps.c  2013-04-14 06:42:34 +0200
#+++ src/daemon/caps.c  2013-06-05 08:26:04 +0200
#@@ -73,8 +73,8 @@
#     pa_assert_se(getgid() == gid);
#     pa_assert_se(getegid() == gid);
#-#endif
#
#     if (uid != 0)
#         pa_drop_caps();
#+#endif
# }
#EOF
## fix missing random/srandom in src/tests/lfe-filter-test.c (version >= 7.0)
#mv src/tests/lfe-filter-test.c src/tests/lfe-filter-test.c.bak
#echo "#define random rand" > src/tests/lfe-filter-test.c
#cat src/tests/lfe-filter-test.c.bak >> src/tests/lfe-filter-test.c
## fix missing scandir/alphasort src/pulsecore/conf-parser.c (version >= 0.8)
#mv src/pulsecore/conf-parser.c src/pulsecore/conf-parser.c.bak
#cat > src/pulsecore/conf-parser.c << EOF
##include <stdlib.h>
##include <string.h>
##include <dirent.h>
#
#int scandir(const char* dir, struct dirent*** namelist, int (*select)(const struct dirent*), int (*compar)(const struct dirent**, const struct dirent**)) {
#  DIR *d;
#  struct dirent *entry;
#  register int i=0;
#  size_t entrysize;
#
#  if ((d=opendir(dir)) == NULL)
#     return(-1);
#
#  *namelist=NULL;
#  while ((entry=readdir(d)) != NULL)
#  {
#    if (select == NULL || (select != NULL && (*select)(entry)))
#    {
#      *namelist=(struct dirent **)realloc((void *)(*namelist),
#                 (size_t)((i+1)*sizeof(struct dirent *)));
#	if (*namelist == NULL) return(-1);
#	entrysize=sizeof(struct dirent)-sizeof(entry->d_name)+strlen(entry->d_name)+1;
#	(*namelist)[i]=(struct dirent *)malloc(entrysize);
#	if ((*namelist)[i] == NULL) return(-1);
#	memcpy((*namelist)[i], entry, entrysize);
#	i++;
#    }
#  }
#  if (closedir(d)) return(-1);
#  if (i == 0) return(-1);
#  if (compar != NULL)
#    qsort((void *)(*namelist), (size_t)i, sizeof(struct dirent *), compar);
#    
#  return(i);
#}
#
#int alphasort (const struct dirent** a, const struct dirent** b) {
# return strcmp((*a)->d_name, (*b)->d_name);
#}
#EOF
#cat src/pulsecore/conf-parser.c.bak >> src/pulsecore/conf-parser.c
## fix missing LC_MESSAGES in src/pulsecore/proplist-util.c (version >= 10.0)
#patch -ulbf src/pulsecore/proplist-util.c << EOF
#--- src/pulsecore/proplist-util.c  2016-08-23 14:50:11.000000000 +0200
#+++ src/pulsecore/proplist-util.c  2017-03-02 11:39:33.217427500 +0100
#@@ -207,12 +207,14 @@
#             pa_proplist_sets(p, PA_PROP_APPLICATION_NAME, t);
#     }
#
#+#ifdef LC_MESSAGES
#     if (!pa_proplist_contains(p, PA_PROP_APPLICATION_LANGUAGE)) {
#         const char *l;
#
#         if ((l = setlocale(LC_MESSAGES, NULL)))
#             pa_proplist_sets(p, PA_PROP_APPLICATION_LANGUAGE, l);
#     }
#+#endif
#
#     if (!pa_proplist_contains(p, PA_PROP_WINDOW_X11_DISPLAY)) {
#         const char *t;
#EOF
## disable assertion in src/pulse/thread-mainloop.c (version >= 10.0)
#patch -ulbf src/pulse/thread-mainloop.c << EOF
#--- src/pulse/thread-mainloop.c  2016-08-23 14:50:11.000000000 +0200
#+++ src/pulse/thread-mainloop.c  2017-06-12 14:46:49.539650300 +0200
#@@ -129,3 +129,5 @@
#     /* Make sure that this function is not called from the helper thread */
#+#ifndef OS_IS_WIN32
#     pa_assert((m->thread && !pa_thread_is_running(m->thread)) || !in_worker(m));
#+#endif
#
#EOF
## fix redefinition of struct pollfd in src/pulsecore/poll.h (version >= 14.2)
#if ( echo -e "#include <stdio.h>\nint main() {\nreturn (__MINGW64_VERSION_MAJOR >= 9 ? 0 : 1);\n}" | gcc -xc -mconsole - -ois_mingw-w64_v9.exe && is_mingw-w64_v9.exe ); then
#patch -ulbf src/pulsecore/poll.h << EOF
#@@ -43,2 +43,3 @@
# /* Data structure describing a polling request.  */
#+#if !(__MINGW64_VERSION_MAJOR >= 9)
# struct pollfd {
#@@ -48,2 +49,3 @@
# };
#+#endif
#
#EOF
#mv src/pulsecore/poll-win32.c src/pulsecore/poll-win32.c.bak
#cp src/pulsecore/poll-posix.c src/pulsecore/poll-win32.c
#fi
## fix redefinition of inet_ntop/inet_pton in src/pulsecore/arpa-inet.h (version >= 14.2)
#patch -ulbf src/pulsecore/arpa-inet.h << EOF
#@@ -7,3 +7,4 @@
#
#-#elif defined(OS_IS_WIN32)
#+#include <stdlib.h>
#+#elif defined(OS_IS_WIN32) && !(_WIN32_WINNT >= 0x0600)
#
#EOF
## fix redefinition of inet_ntop/inet_pton in src/pulsecore/arpa-inet.c (version >= 14.2)
#patch -ulbf src/pulsecore/arpa-inet.c << EOF
#@@ -23,3 +23,4 @@
#
#-#if !defined(HAVE_ARPA_INET_H) && defined(OS_IS_WIN32)
#+#include <stdlib.h>
#+#if !defined(HAVE_ARPA_INET_H) && defined(OS_IS_WIN32) && !(_WIN32_WINNT >= 0x0600)
#
#EOF
## fix invalid LADSPA_PATH variable containing backslashes
#mv src/Makefile.in src/Makefile.in.bak
#sed -e "s?:/usr/local/lib/ladspa:/usr/lib/ladspa:/usr/local/lib64/ladspa:/usr/lib64/ladspa??" src/Makefile.in.bak > src/Makefile.in
### fix installation of executables (version >= 5.99.3)
##mv Makefile Makefile.bak
##sed -e "s/-f pulseaudio /-f src\/pulseaudio.exe /" Makefile.bak > Makefile
### fix libatomic-ops problem in configure
##patch -ulbf configure << EOF
##--- configure  2011-06-23 22:56:32 +0200
##+++ configure  2011-07-26 22:45:30 +0200
##@@ -19026,6 +19026,2 @@
##
##-else
##-
##-   as_fn_error \$? "*** libatomic-ops headers not found" "\$LINENO" 5
##-
## fi
##EOF
## disable stack protection (version >= 14.2)
#sed -i.bak -e "s/-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2//" configure
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x11 --disable-gconf &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x11 --disable-gconf --disable-bluez --disable-ipv6 --disable-per-user-esound-socket &&
# #PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x11 --disable-gconf --disable-bluez --disable-ipv6 --disable-per-user-esound-socket &&
# #PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x11 --disable-gconf --disable-bluez4 --disable-bluez5 --disable-ipv6 --disable-per-user-esound-socket &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x11 --disable-gconf --disable-bluez4 --disable-bluez5 --disable-ipv6 --disable-per-user-esound-socket &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x11 --disable-gconf --disable-bluez4 --disable-bluez5 --disable-ipv6 --disable-per-user-esound-socket --disable-gsettings &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x11 --disable-gconf --disable-bluez4 --disable-bluez5 --disable-ipv6 --disable-per-user-esound-socket --disable-gsettings --disable-tests --disable-default-build-tests &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x11 --disable-gconf --disable-bluez4 --disable-bluez5 --disable-ipv6 --disable-per-user-esound-socket --disable-gsettings --disable-udev --disable-tests --disable-default-build-tests LIBS="-Wl,--as-needed -lssp" &&
# INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-x11 --disable-gconf --disable-bluez4 --disable-bluez5 --disable-ipv6 --disable-per-user-esound-socket --disable-gsettings --disable-udev --disable-tests --disable-default-build-tests &&
# ## fix missing struct timespec
# #echo "struct timespec { long tv_sec; long tv_nsec; };" >> config.h &&
# echo "#undef HAVE_LANGINFO_H" >> config.h &&
# echo "#undef HAVE_SYSLOG_H" >> config.h &&
# # fix missing pulseaudio file (version >= 6.0)
# cp -f shell-completion/bash/pulseaudio . &&
# wl-showstatus build-install &&
# PATH=$PERLDIR/bin:$PERLDIR/../c/bin:$PATH make -C man &&
# make install-strip &&
# ( mv $INSTALLPREFIX/lib/bin/* $INSTALLPREFIX/bin/; rmdir $INSTALLPREFIX/lib/bin; true ) &&
# ( mv -f $INSTALLPREFIX/lib/pulseaudio/* $INSTALLPREFIX/lib && rmdir $INSTALLPREFIX/lib/pulseaudio ) &&
# for F in $INSTALLPREFIX/lib/*.la; do
#   #sed -i -e "s?\($INSTALLPREFIX/lib/pulseaudio\)/lib\(pulsecommon[-\.0-9]*\)\.la?-L\1 -l\2?" $F
#   sed -i -e "s?\($INSTALLPREFIX/lib/pulseaudio\)/lib\(pulsecommon[-\.0-9]*\)\.la?-l\2?g; s?\($INSTALLPREFIX/lib\)/pulseaudio?\1?g" $F
# done &&
# #for F in $INSTALLPREFIX/lib/pulseaudio/*.la; do
# #  sed -i -e "s?\(dlname='\)\(../bin/\)\(lib.*\.dll'\)?\1../../bin/\3?; s? \(pulseaudio/\)?$MINGWPREFIX/lib/\1?; s?\($INSTALLPREFIX/lib/pulseaudio\)/lib\(pulsecommon[-\.0-9]*\)\.la?-L\1 -l\2?" $F
# #done &&
# sed -i -e "s?$INSTALLPREFIX/?$MINGWPREFIX/?g" $INSTALLPREFIX/lib/cmake/PulseAudio/PulseAudioConfig.cmake &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="PulseAudio"
export STATUS=
export URL=http://www.pulseaudio.org/
export BASENAME=pulseaudio
export DESCRIPTION="PulseAudio is a sound system for POSIX OSes, meaning that it is a proxy for your sound applications. It allows you to do advanced operations on your sound data as it passes between your application and your hardware. Things like transferring the audio to a different machine, changing the sample format or channel count and mixing several sounds into one are easily achieved using a sound server."
export CATEGORY=audio,hardware
export TYPE=library
#export VERSION=15.0
#export VERSIONDATE=20210728
#export VERSION=16.0
#export VERSIONDATE=20220529
#export VERSION=16.1
#export VERSIONDATE=20220622
#export VERSION=16.2
#export VERSIONDATE=20241102
export VERSION=17.0
export VERSIONDATE=20240620
wl-showstatus --package-version
export DEPENDENCIES=bdwgc,pthreads,dbus,glib2,openssl,json,libsndfile,libspeex,libsamplerate,gdbm,fftw,liborc,libltdl
export OPTIONALDEPENDENCIES=gtk2,jack
export BUILDDEPENDENCIES=meson,ninja,doxygen
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://freedesktop.org/software/pulseaudio/releases/"
export DOWNLOADURL="https://freedesktop.org/software/pulseaudio/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://freedesktop.org/software/pulseaudio/releases/$BASENAME-$VERSION.tar.xz
wl-wait4deps
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix src/pulsecore/macro.h (version >= 14.99.2)
patch -ulbf src/pulsecore/macro.h << EOF
@@ -200,3 +200,2 @@
         switch (0) {                               \\
-            case 0:                                \\
             case !!(expr):                         \\
EOF
# fix missing getuid in src/modules/module-console-kit.c
mv src/modules/module-console-kit.c src/modules/module-console-kit.c.bak &&
echo "#define getuid() 0" > src/modules/module-console-kit.c &&
cat src/modules/module-console-kit.c.bak >> src/modules/module-console-kit.c
# fix missing getuid in src/daemon/main.c
mv src/daemon/main.c src/daemon/main.c.bak &&
echo "#define getuid() 0" > src/daemon/main.c &&
cat src/daemon/main.c.bak >> src/daemon/main.c
# fix redefinition of inet_ntop/inet_pton (version >= 15.0)
${CC:-gcc} -xc - -o check_winnt_ver.exe << EOF
#include <winsock2.h>
int main() {
  return (_WIN32_WINNT >= 0x0600 ? 0 : 1);
}
EOF
check_winnt_ver.exe && (
 mv src/pulsecore/arpa-inet.h src/pulsecore/arpa-inet.h.bak &&
 touch src/pulsecore/arpa-inet.h
 mv src/pulsecore/arpa-inet.c src/pulsecore/arpa-inet.c.bak &&
 touch src/pulsecore/arpa-inet.c
)
rm -f check_winnt_ver.exe
# fix missing gio-unix
#sed -i.bak -e "s/gio-unix-/gio-/" meson.build
sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
# avoid detection of absolute path
sed -i.bak2 -e "s?^assert(prefix.startswith('/')?#&?" meson.build
# fix also building static libraries
sed -i.bak -e "s/shared_\(library('pulse\)/\1/" src/pulse/meson.build src/pulsecore/meson.build src/meson.build
# fix missing linker flag -version-script in LLVM
if ! ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-version-script"; then
 sed -i.bak2 -e "s/^\(versioning_link_args = '\).*$/\1'/" src/pulse/meson.build
fi
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Ddatabase=gdbm -Dbluez5=disabled -Dx11=disabled -Dsystemd=disabled -Dudev=disabled -Dman=false -Dgcov=false -Dtests=false -Dbashcompletiondir=no . build_both &&
 #PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Ddatabase=gdbm -Dbluez5=disabled -Dx11=disabled -Dsystemd=disabled -Dudev=disabled -Dman=false -Dgcov=false -Dtests=false -Dbashcompletiondir=no . build_both &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Ddatabase=gdbm -Dbluez5=disabled -Dx11=disabled -Dsystemd=disabled -Dudev=disabled -Dman=false -Dgcov=false -Dtests=false -Dbashcompletiondir=no -Dc_args="-Wno-incompatible-pointer-types" . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 # fix absolute path in .cmake file
 sed -i -e "s?$(cygpath -m $INSTALLPREFIX)/?\${CMAKE_CURRENT_LIST_FILE}/../../../../?g" $INSTALLPREFIX/lib/cmake/PulseAudio/PulseAudioConfig.cmake &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



