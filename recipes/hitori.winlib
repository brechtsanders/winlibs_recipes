#export NAME="Hitori"
#export STATUS=
##export URL=http://live.gnome.org/Hitori
#export URL=https://wiki.gnome.org/Apps/Hitori
#export BASENAME=hitori
#export DESCRIPTION="Hitori is a small application written to allow one to play the eponymous puzzle game, which is similar in theme to more popular puzzles such as Sudoku."
#export CATEGORY=games
#export TYPE=application
##export VERSION=0.2.4
##export VERSIONDATE=20101008
##export VERSION=0.2.5
##export VERSIONDATE=20101028
##export VERSION=0.2.6
##export VERSIONDATE=20110202
##export VERSION=0.3.0
##export VERSIONDATE=20110613
##export VERSION=0.3.1
##export VERSIONDATE=20110619
##export VERSION=0.3.2
##export VERSIONDATE=20120325
##export VERSION=0.4.0
##export VERSIONDATE=20120930
##export VERSION=0.4.1
##export VERSIONDATE=20130803
##export VERSION=0.4.2
##export VERSIONDATE=20131108
##export VERSION=0.4.3
##export VERSIONDATE=20140505
##export VERSION=0.4.4
##export VERSIONDATE=20140620
##export VERSION=0.4.5
##export VERSIONDATE=20140711
##export VERSION=3.13.4
##export VERSIONDATE=20140722
#####Requested 'gtk+-3.0 >= 3.13.2' but version of GTK+ is 3.8.9
##export VERSION=3.14.2.1
##export VERSIONDATE=20150728
##export VERSION=3.16.1
##export VERSIONDATE=20150728
##export VERSION=3.16.2
##export VERSIONDATE=20151119
##export VERSION=3.20.0
##export VERSIONDATE=20160322
##export VERSION=3.22.0
##export VERSIONDATE=20160921
#export VERSION=3.22.1
#export VERSIONDATE=20170214
##export VERSION=3.22.2
##export VERSIONDATE=20170306
##export VERSION=3.22.3
##export VERSIONDATE=20170501
##export VERSION=3.22.4
##export VERSIONDATE=20171002
#export DEPENDENCIES=glib2,gtk3,pango,cairo,gettext,gnome-doc-utils
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
##export VERSION=3.31.0
##export VERSIONDATE=20190220
##export VERSION=3.32.0
##export VERSIONDATE=20190822
#####msgfmt.exe: cannot locate ITS rules for data/org.gnome.Hitori.appdata.xml.in
##export VERSION=3.33.0
##export VERSIONDATE=20190822
##export VERSION=3.34.0
##export VERSIONDATE=20190903
##export VERSION=3.35.0
##export VERSIONDATE=20200224
##export VERSION=3.36.0
##export VERSIONDATE=20200312
##export VERSION=3.37.0
##export VERSIONDATE=20200819
##export VERSION=3.37.1
##export VERSIONDATE=20200903
##export VERSION=3.38.0
##export VERSIONDATE=20200910
##export VERSION=3.38.1
##export VERSIONDATE=20210306
##export VERSION=3.38.2
##export VERSIONDATE=20210526
##export VERSION=3.38.3
##export VERSIONDATE=20210917
##export VERSION=3.38.4
##export VERSIONDATE=20220404
#####src/interface.c:(.text+0x108): undefined reference to `__stack_chk_fail'
#####msgfmt: cannot locate ITS rules for ..\data\org.gnome.Hitori.appdata.xml.in
#wl-showstatus --package-version
##export DEPENDENCIES=glib2,gtk3,pango,cairo,gettext,gnome-doc-utils
##export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=meson
##export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
##export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/hitori/"
#export DOWNLOADURL="https://download.gnome.org/sources/hitori/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
##export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://download.gnome.org/sources/hitori/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
### fix problem detecting GNU gettext tools on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## mv configure configure.bak
## sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
##fi
#wl-showstatus configure &&
# #PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-schemas-compile &&
# PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-schemas-compile --disable-appstream-util --disable-Werror &&
# wl-showstatus build-install &&
# #make install-strip &&
# #PATH=$PATH:$PERLDIR/../c/bin make install-strip &&
# #PATH=$PATH:$PERLDIR/../c/bin make PYTHONPATH=$MINGWPREFIX/python2/lib/site-packages${PYTHONPATH:+:$PYTHONPATH} install-strip ITSTOOL="$PY2DIR/python.exe $(which itstool)" &&
# #PATH=$PATH:$PERLDIR/../c/bin make PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} install-strip ITSTOOL="$PYDIR/python.exe $(which itstool)" &&
# #PATH=$PATH:$PERLDIR/../c/bin make PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages install-strip ITSTOOL="$PYDIR/python.exe $(which itstool)" &&
# PATH=$PATH:$PERLDIR/../c/bin make PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages GETTEXTDATADIR=$MINGWPREFIX/share/gettext install-strip ITSTOOL="$PYDIR/python.exe $(which itstool)" &&
# #PATH=$PATH:$PERLDIR/../c/bin GETTEXTDATADIR=$MINGWPREFIX/share/gettext make PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} install-strip ITSTOOL="$PYDIR/python.exe $(which itstool)" &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Hitori"
export STATUS=
#export URL=http://live.gnome.org/Hitori
export URL=https://wiki.gnome.org/Apps/Hitori
export BASENAME=hitori
export DESCRIPTION="Hitori is a small application written to allow one to play the eponymous puzzle game, which is similar in theme to more popular puzzles such as Sudoku."
export CATEGORY=games
export TYPE=application
#export VERSION=3.38.4
#export VERSIONDATE=20220408
export VERSION=44.0
export VERSIONDATE=20230303
wl-showstatus --package-version
export DEPENDENCIES=glib2,gtk3,pango,cairo,gettext,gnome-doc-utils
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/hitori/"
export DOWNLOADURL="https://download.gnome.org/sources/hitori/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://download.gnome.org/sources/hitori/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://download.gnome.org/sources/hitori/$(echo $VERSION|sed "s/\.[0-9]*$//")/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# disable stack protection
sed -i.bak -e "s/'-fstack[^']*',//" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared . build_both &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared . build_both &&
 # fix slash/backslash path issue when calling Python from Ninja
 sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 ## fix undefined reference to __stack_chk_fail
 #echo " -Wl,--as-needed -lssp" >> build_both/src/hitori.exe.rsp &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=$MINGWPREFIX/python/lib/site-packages${PYTHONPATH:+:$PYTHONPATH} GETTEXTDATADIR=$MINGWPREFIX/share/gettext ninja -C build_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



