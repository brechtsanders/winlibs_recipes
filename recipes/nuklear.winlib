export NAME="Nuklear"
export STATUS=
#export URL=https://github.com/vurtun/nuklear
#export URL=https://github.com/Immediate-Mode-UI/Nuklear
export URL=https://immediate-mode-ui.github.io/Nuklear/doc/
export BASENAME=nuklear
export DESCRIPTION="This is a minimal state immediate mode graphical user interface toolkit written in ANSI C and licensed under public domain. It was designed as a simple embeddable user interface for application and does not have any dependencies, a default renderbackend or OS window and input handling but instead provides a very modular library approach by using simple input state for input and draw commands describing primitive shapes as output. So instead of providing a layered library that tries to abstract over a number of platform and render backends it only focuses on the actual UI."
export CATEGORY=gui,framework
export TYPE=library
#export VERSION=master
#export VERSIONDATE=20160703
#export VERSION=4.9.6
#export VERSIONDATE=20220728
#export VERSION=4.10.1
#export VERSIONDATE=20220804
export VERSION=4.10.5
export VERSIONDATE=20221218
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="Public domain"
#export DOWNLOADURL="https://github.com/vurtun/nuklear/releases"
export DOWNLOADURL="https://github.com/Immediate-Mode-UI/Nuklear/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/vurtun/nuklear/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/Immediate-Mode-UI/Nuklear/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd Nuklear-$VERSION
#patch -ulbf nuklear.h << EOF
#@@ -187,2 +187,4 @@
#
#+#include <string.h>
#+
# #ifdef __cplusplus
#@@ -260,3 +262,7 @@
# #endif
#+#ifndef NK_UINT32
#+typedef unsigned int nk_hash;
#+#else
# typedef NK_UINT32 nk_hash;
#+#endif
# typedef unsigned int nk_flags;
#EOF
# force definition of NK_INCLUDE_FIXED_TYPES in nuklear.h
mv nuklear.h nuklear.h.bak
cat > nuklear.h << EOF
#ifndef NK_INCLUDE_FIXED_TYPES
#define NK_INCLUDE_FIXED_TYPES
#endif
EOF
cat nuklear.h.bak >> nuklear.h
# create implementation file
cat > nuklear_implementation.c << EOF
#define NK_IMPLEMENTATION
#include "nuklear.h"
EOF
# fix example/Makefile (version >= 4.9.6)
patch -ulbf example/Makefile << EOF
@@ -16,3 +16,3 @@
        else
-               LIBS := \$(GLFW3) -lGL -lm -lGLU -lGLEW
+               LIBS := \$(GLFW3) -lglfw3 -lopengl32 -lGLU32 -lGLEW32 -lgdi32
        endif
EOF
wl-showstatus build &&
 #${CC:-gcc} -O3 -c -o nuklear.o -DNK_IMPLEMENTATION -DNK_INCLUDE_FIXED_TYPES nuklear.h &&
 ${CC:-gcc} -O3 -c -o nuklear.o nuklear_implementation.c -DNK_INCLUDE_DEFAULT_ALLOCATOR -DNK_INCLUDE_STANDARD_IO -DNK_INCLUDE_STANDARD_VARARGS -DNK_INCLUDE_FONT_BAKING -DNK_INCLUDE_DEFAULT_FONT &&
 ${AR:-ar} cru libnuklear.a nuklear.o &&
 #( echo EXPORTS; sed -n -e "s/^.* \**\(nk_.*\) *(.*$/\1/p" nuklear.h ) > nuklear.def &&
 ( echo "EXPORTS" && ${NM:-nm} -f posix --defined-only -p libnuklear.a | sed -n -e "s/^_*\([^ ]*\) T .*$/\1/p" ) > nuklear.def &&
 ${CC:-gcc} -shared -s -mwindows -def nuklear.def -o nuklear.dll libnuklear.a -Wl,--out-implib,libnuklear.dll.a &&
 #make -Cexample CC=${CC:-gcc} OS=MSYS &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f nuklear.h $INSTALLPREFIX/include/ &&
 cp -f *.a $INSTALLPREFIX/lib/ &&
 cp -f *.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf Nuklear-$VERSION



