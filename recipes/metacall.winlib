export NAME="MetaCall"
export STATUS=
export URL=https://core.metacall.io/
export BASENAME=metacall
export DESCRIPTION="MetaCall: The ultimate polyglot programming experience."
export CATEGORY=development
export TYPE=application
#export VERSION=0.5.7
#export VERSIONDATE=20220319
####ninja: error: 'source/detours/funchook_detour/funchook/src/funchook/funchook.lib', needed by 'libfunchook_detour.dll', missing and no known rule to make it
#export VERSION=0.5.21
#export VERSIONDATE=20220706
#export VERSION=0.5.24
#export VERSIONDATE=20220719
#export VERSION=0.5.25
#export VERSIONDATE=20220809
#export VERSION=0.5.27
#export VERSIONDATE=20220813
#export VERSION=0.5.28
#export VERSIONDATE=20220831
#export VERSION=0.5.29
#export VERSIONDATE=20220901
#export VERSION=0.5.30
#export VERSIONDATE=20220902
#export VERSION=0.5.32
#export VERSIONDATE=20220907
#export VERSION=0.5.33
#export VERSIONDATE=20220914
#export VERSION=0.5.37
#export VERSIONDATE=20220915
#export VERSION=0.6.0
#export VERSIONDATE=20221123
#export VERSION=0.6.2
#export VERSIONDATE=20221228
#export VERSION=0.6.3
#export VERSIONDATE=20230120
#export VERSION=0.7.1
#export VERSIONDATE=20230203
#export VERSION=0.7.3
#export VERSIONDATE=20230208
#export VERSION=0.7.4
#export VERSIONDATE=20230606
#export VERSION=0.7.5
#export VERSIONDATE=20230915
#export VERSION=0.7.8
#export VERSIONDATE=20240221
#export VERSION=0.7.10
#export VERSIONDATE=20240222
#export VERSION=0.7.11
#export VERSIONDATE=20240223
#export VERSION=0.8.7
#export VERSIONDATE=20241218
#export VERSION=0.8.8
#export VERSIONDATE=20250304
#export DEPENDENCIES=
##export DEPENDENCIES=funchook
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=0.9.0
#export VERSIONDATE=20250601
####build_static/_deps/backwardcpp-src/backward.hpp:4361:24: warning: 'void (* std::set_unexpected(unexpected_handler))()' is deprecated
#export VERSION=0.9.3
#export VERSIONDATE=20250602
#export VERSION=0.9.5
#export VERSIONDATE=20250603
#export VERSION=0.9.8
#export VERSIONDATE=20250612
#export VERSION=0.9.9
#export VERSIONDATE=20250618
#export VERSION=0.9.10
#export VERSIONDATE=20250701
export VERSION=0.9.12
export VERSIONDATE=20250703
wl-showstatus --package-version
export DEPENDENCIES=rapidjson,backward-cpp
#export DEPENDENCIES=funchook
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/metacall/core/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/metacall/core/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/core-$VERSION
# fix source/loaders/ext_loader/source/ext_loader_impl.cpp (version >= 0.5.21)
patch -ulbf source/loaders/ext_loader/source/ext_loader_impl.cpp << EOF
@@ -274,3 +274,3 @@

-               function_cast.ptr = static_cast<void *>(ext.addr);
+               function_cast.ptr = (void*)ext.addr;

EOF
# fix source/extensions/plugin_extension/source/plugin_extension.cpp (version >= 0.5.21)
patch -ulbf source/extensions/plugin_extension/source/plugin_extension.cpp << EOF
@@ -96,3 +96,3 @@
                {
-                       std::string config = dir.path().filename().c_str();
+                       std::string config = dir.path().filename().string().c_str();

@@ -102,7 +102,7 @@
                        {
-                               log_write("metacall", LOG_LEVEL_DEBUG, "Loading extension: %s", dir.path().filename().c_str());
+                               log_write("metacall", LOG_LEVEL_DEBUG, "Loading extension: %s", dir.path().filename().string().c_str());

-                               if (metacall_load_from_configuration(dir.path().c_str(), NULL, config_allocator) != 0)
+                               if (metacall_load_from_configuration(dir.path().string().c_str(), NULL, config_allocator) != 0)
                                {
-                                       log_write("metacall", LOG_LEVEL_ERROR, "Failed to load extension: %s", dir.path().c_str());
+                                       log_write("metacall", LOG_LEVEL_ERROR, "Failed to load extension: %s", dir.path().string().c_str());
                                        return 1;
EOF
# fix source/log/source/log_policy_stream_syslog.c (version >= 0.9.3)
patch -ulbf source/log/source/log_policy_stream_syslog.c << EOF
@@ -125,7 +125,7 @@
 #if defined(_WIN32)
-       LPTSTR lpt_str[1];
+       LPCSTR lpt_str[1];

-       lpt_str[0] = (LPTSTR)buffer;
+       lpt_str[0] = (LPCSTR)buffer;

-       ReportEvent(syslog_data->handle,
+       ReportEventA(syslog_data->handle,
                EVENTLOG_INFORMATION_TYPE,
@@ -133,3 +133,3 @@
                LOG_POLICY_STREAM_SYSLOG_WIN_MSG,
-               NULL, 1, 0, (LPTSTR *)lpt_str, NULL);
+               NULL, 1, 0, (LPCSTR *)lpt_str, NULL);
 #elif defined(linux) || defined(__linux__) || defined(__linux) || defined(__gnu_linux) || \\
EOF
# don't abort on strict overfow
sed -i.bak -e "s/^\(\s*\)\(add_compile_options(-Wstrict-overflow\)/\1#\2/" cmake/Warnings.cmake
## don't abort on warnings
#sed -i.bak -e "s/^\(\s*\)\(add_compile_options(\)\(-Werror\|-Wall\|-Wextra\)/\1#\2\3/" cmake/CompileOptions.cmake
#sed -i.bak2 -e "s/^\(\s*\)\(add_compile_options(\)\(-Werror\|-Wall\|-Wextra\)/\1#\2\3/" cmake/Warnings.cmake
# use already installed backward-cpp in source/plugins/backtrace_plugin/CMakeLists.txt (version >= 0.9.0)
patch -ulbf source/plugins/backtrace_plugin/CMakeLists.txt << EOF
@@ -9,3 +9,6 @@

-if(NOT OPTION_BUILD_GUIX)
+if (MINGW)
+       find_package(Backward)
+       add_library(Backward::Interface ALIAS Backward::Backward)
+elseif(NOT OPTION_BUILD_GUIX)
        include(FetchContent)
EOF
# fix missing BackwardConfig.cmake in source/plugins/backtrace_plugin/CMakeLists.txt (version >= 0.9.3)
sed -i.bak -e "s/^include(.*BackwardConfig\.cmake)/#&/" source/plugins/backtrace_plugin/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/metacall -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DOPTION_BUILD_DETOURS:BOOL=OFF -DOPTION_BUILD_DETOURS_FUNCHOOK:BOOL=OFF -DOPTION_BUILD_SCRIPTS_COB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_CS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JAVA:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_NODE:BOOL=OFF -DOPTION_BUILD_SCRIPTS_TS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_PY:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JL:BOOL=OFF -DOPTION_GIT_HOOKS:BOOL=OFF -DOPTION_BUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/metacall -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DOPTION_BUILD_DETOURS:BOOL=OFF -DOPTION_BUILD_DETOURS_FUNCHOOK:BOOL=OFF -DOPTION_BUILD_SCRIPTS_COB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_CS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JAVA:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_NODE:BOOL=OFF -DOPTION_BUILD_SCRIPTS_TS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_PY:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JL:BOOL=OFF -DOPTION_GIT_HOOKS:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -DOPTION_BUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-Wno-incompatible-pointer-types" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/metacall -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DOPTION_BUILD_DETOURS:BOOL=OFF -DOPTION_BUILD_DETOURS_FUNCHOOK:BOOL=OFF -DOPTION_BUILD_SCRIPTS_COB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_CS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JAVA:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_NODE:BOOL=OFF -DOPTION_BUILD_SCRIPTS_TS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_PY:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JL:BOOL=OFF -DOPTION_GIT_HOOKS:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -DOPTION_BUILD_TESTS:BOOL=OFF -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-Wno-incompatible-pointer-types" -DCMAKE_CXX_FLAGS:STRING="-DBACKWARD_ATLEAST_CXX17" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_static &&
 #-DOPTION_BUILD_GUIX:BOOL=ON -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON 
 ## fix missing _set_abort_behavior (version >= 0.5.28)
 #sed -i.bak -e "s?^\(\s*\)\(_set_abort_behavior\)?\1//\2?" build_static/_deps/backwardcpp-src/backward.hpp &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/metacall -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPTION_BUILD_DETOURS:BOOL=OFF -DOPTION_BUILD_DETOURS_FUNCHOOK:BOOL=OFF -DOPTION_BUILD_SCRIPTS_COB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_CS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JAVA:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_NODE:BOOL=OFF -DOPTION_BUILD_SCRIPTS_TS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_PY:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JL:BOOL=OFF -DOPTION_GIT_HOOKS:BOOL=OFF -DOPTION_BUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/metacall -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPTION_BUILD_DETOURS:BOOL=OFF -DOPTION_BUILD_DETOURS_FUNCHOOK:BOOL=OFF -DOPTION_BUILD_SCRIPTS_COB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_CS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JAVA:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_NODE:BOOL=OFF -DOPTION_BUILD_SCRIPTS_TS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_PY:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JL:BOOL=OFF -DOPTION_GIT_HOOKS:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -DOPTION_BUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-Wno-incompatible-pointer-types" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/metacall -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPTION_BUILD_DETOURS:BOOL=OFF -DOPTION_BUILD_DETOURS_FUNCHOOK:BOOL=OFF -DOPTION_BUILD_SCRIPTS_COB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_CS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JAVA:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_NODE:BOOL=OFF -DOPTION_BUILD_SCRIPTS_TS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_PY:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RB:BOOL=OFF -DOPTION_BUILD_SCRIPTS_RS:BOOL=OFF -DOPTION_BUILD_SCRIPTS_JL:BOOL=OFF -DOPTION_GIT_HOOKS:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -DOPTION_BUILD_TESTS:BOOL=OFF -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-Wno-incompatible-pointer-types" -DCMAKE_CXX_FLAGS:STRING="-DBACKWARD_ATLEAST_CXX17" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_shared &&
 ## fix missing _set_abort_behavior (version >= 0.5.28)
 #sed -i.bak -e "s?^\(\s*\)\(_set_abort_behavior\)?\1//\2?" build_shared/_deps/backwardcpp-src/backward.hpp &&
 # fix missing link libraries (version >= 0.5.28)
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -ldbghelp -lpsapi/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 # move DLL files to proper location
 mkdir -p $INSTALLPREFIX/share/metacall/bin &&
 #mv -f $INSTALLPREFIX/share/metacall/*.{dll,exe} $INSTALLPREFIX/share/metacall/lib/*.dll $INSTALLPREFIX/share/metacall/bin &&
 mv -f $INSTALLPREFIX/share/metacall/*.dll $INSTALLPREFIX/share/metacall/bin &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: check if it works



