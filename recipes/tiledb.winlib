#export NAME="TileDB"
#export STATUS=
#export URL=https://tiledb.com/
##export URL=https://github.com/TileDB-Inc/TileDB
#export BASENAME=tiledb
#export DESCRIPTION="The Fastest Array Storage Engine"
#export CATEGORY=database
#export TYPE=library
##export VERSION=1.7.5
##export VERSIONDATE=20200222
##export VERSION=1.7.6
##export VERSIONDATE=20200319
##export VERSION=1.7.7
##export VERSIONDATE=20200331
##export VERSION=2.0.0
##export VERSIONDATE=20200501
##export VERSION=2.0.1
##export VERSIONDATE=20200514
##export VERSION=2.0.2
##export VERSIONDATE=20200519
##export VERSION=2.0.3
##export VERSIONDATE=20200530
##export VERSION=2.0.4
##export VERSIONDATE=20200612
##export VERSION=2.0.5
##export VERSIONDATE=20200613
##export VERSION=2.0.6
##export VERSIONDATE=20200709
##export VERSION=2.0.7
##export VERSIONDATE=20200730
##export VERSION=2.0.8
##export VERSIONDATE=20200801
##export VERSION=2.1.0
##export VERSIONDATE=20201005
##export VERSION=2.1.1
##export VERSIONDATE=20201016
##export VERSION=2.1.2
##export VERSIONDATE=20201022
##export VERSION=2.1.3
##export VERSIONDATE=20201120
##export VERSION=2.1.4
##export VERSIONDATE=20201219
##export VERSION=2.1.5
##export VERSIONDATE=20201231
##export VERSION=2.1.6
##export VERSIONDATE=20210106
##export VERSION=2.2.0
##export VERSIONDATE=20210107
##export VERSION=2.2.1
##export VERSIONDATE=20210109
##export VERSION=2.2.2
##export VERSIONDATE=20210127
##export VERSION=2.2.3
##export VERSIONDATE=20210130
##export VERSION=2.2.4
##export VERSIONDATE=20210218
##export VERSION=2.2.5
##export VERSIONDATE=20210317
##export VERSION=2.2.6
##export VERSIONDATE=20210319
#export VERSION=2.2.7
#export VERSIONDATE=20210325
#wl-showstatus --package-version
#export DEPENDENCIES=libbz2,liblz4,zstd,spdlog
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/TileDB-Inc/TileDB/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/TileDB-Inc/TileDB/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd TileDB-$VERSION
## fix redefinition of ERROR in tiledb/sm/misc/logger.h (version >= 1.7.5)
#patch -ulbf tiledb/sm/misc/logger.h << EOF
#@@ -50,2 +50,4 @@
#     VERBOSE,
#+#undef ERROR
#+#define ERROR TILEDB_ERROR
#     ERROR,
#EOF
## fix CMakeLists.txt (version >= 1.7.5)
#patch -ulbf CMakeLists.txt << EOF
#@@ -166,3 +166,3 @@
# # Set compiler flags
#-if (WIN32)
#+if (MSVC)
#   # We disable some warnings that are not present in gcc/clang -Wall:
#EOF
##mkdir build_win &&
## wl-showstatus configure &&
## #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTILEDB_STATIC:BOOL=OFF -DTILEDB_TBB_SHARED:BOOL=ON -DTILEDB_TBB:BOOL=OFF -DTILEDB_CPP_API:BOOL=ON -DTILEDB_TOOLS:BOOL=ON -DTILEDB_WERROR:BOOL=OFF -DTILEDB_TESTS:BOOL=OFF -S. -Bbuild_win &&
## #sed -i.bak -e "s/-lLIB_\([^ ]*\)-NOTFOUND/-l\1/g" build_win/tiledb/CMakeFiles/tiledb_shared.dir/linklibs.rsp build_win/tools/CMakeFiles/tiledb.dir/linklibs.rsp &&
## #echo "-Wl,--as-needed -lfmt" >> build_win/tiledb/CMakeFiles/tiledb_shared.dir/linklibs.rsp &&
## cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTILEDB_STATIC:BOOL=OFF -DTILEDB_TBB_SHARED:BOOL=ON -DTILEDB_TBB:BOOL=OFF -DTILEDB_CPP_API:BOOL=ON -DLIB_bcrypt:FILEPATH=bcrypt -DLIB_shlwapi:FILEPATH=shlwapi -DLIB_rpcrt4:FILEPATH=rpcrt4 -DTILEDB_TOOLS:BOOL=ON -DTILEDB_WERROR:BOOL=OFF -DTILEDB_TESTS:BOOL=OFF -S. -Bbuild_win &&
## wl-showstatus build-install &&
## make -Cbuild_win install/strip &&
##    echo OK
#mkdir build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTILEDB_STATIC:BOOL=ON -DTILEDB_TBB_SHARED:BOOL=ON -DTILEDB_TBB:BOOL=OFF -DTILEDB_CPP_API:BOOL=ON -DTILEDB_TOOLS:BOOL=ON -DTILEDB_WERROR:BOOL=OFF -DTILEDB_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-DFMT_HEADER_ONLY" -S. -Bbuild_win &&
# wl-showstatus build &&
# ( make -Cbuild_win || (
#  sed -i.bak -e "s/-lLIB_\([^ ]*\)-NOTFOUND/-l\1/g" build_win/tiledb/tiledb/CMakeFiles/tiledb_shared.dir/linklibs.rsp build_win/tiledb/tools/CMakeFiles/tiledb.dir/linklibs.rsp &&
#  #echo "-Wl,--allow-multiple-definition" >> build_win/tiledb/tiledb/CMakeFiles/tiledb_shared.dir/linklibs.rsp &&
#  make -Cbuild_win
# )) &&
# strip build_win/tiledb/tools/*.exe &&
# wl-showstatus build-install &&
# ( make -Cbuild_win install/strip || ( make -Cbuild_win/tiledb/tiledb install/strip && cp -f build_win/tiledb/tiledb/libtiledbstatic.a $INSTALLPREFIX/lib/libtiledb.a && cp -f build_win/tiledb/tools/*.exe $INSTALLPREFIX/bin/ && make -Cbuild_win/tiledb/tools install/strip )) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf TileDB-$VERSION



export NAME="TileDB"
export STATUS=
export URL=https://tiledb.com/
#export URL=https://github.com/TileDB-Inc/TileDB
export BASENAME=tiledb
#export DESCRIPTION="The Fastest Array Storage Engine"
export DESCRIPTION="TileDB is a powerful engine for storing and accessing dense and sparse multi-dimensional arrays, which can help you model any complex data efficiently. It is an embeddable C++ library that works on Linux, macOS, and Windows."
export CATEGORY=database
export TYPE=library
#export VERSION=2.2.8
#export VERSIONDATE=20210428
#export VERSION=2.2.9
#export VERSIONDATE=20210511
#export VERSION=2.3.0
#export VERSIONDATE=20210608
#export VERSION=2.3.1
#export VERSIONDATE=20210623
#export VERSION=2.3.2
#export VERSIONDATE=20210713
#export VERSION=2.3.3
#export VERSIONDATE=20210811
#export VERSION=2.3.4
#export VERSIONDATE=20210902
#export VERSION=2.4.0
#export VERSIONDATE=20210908
#export VERSION=2.4.2
#export VERSIONDATE=20211008
#export VERSION=2.4.3
#export VERSIONDATE=20211023
#export VERSION=2.4.4
#export VERSIONDATE=20211120
#export VERSION=2.5.0
#export VERSIONDATE=20211113
#export VERSION=2.5.1
#export VERSIONDATE=20211119
#export VERSION=2.5.2
#export VERSIONDATE=20211125
#export VERSION=2.5.3
#export VERSIONDATE=20211218
#export VERSION=2.5.4
#export VERSIONDATE=20220121
#export VERSION=2.6.0
#export VERSIONDATE=20220113
#export VERSION=2.6.1
#export VERSIONDATE=20220121
#export VERSION=2.6.2
#export VERSIONDATE=20220126
#export VERSION=2.6.3
#export VERSIONDATE=20220225
#export VERSION=2.6.4
#export VERSIONDATE=20220308
#export VERSION=2.7.0
#export VERSIONDATE=20220302
#export VERSION=2.7.1
#export VERSIONDATE=20220305
#export VERSION=2.7.2
#export VERSIONDATE=20220401
#export VERSION=2.8.0
#export VERSIONDATE=20220414
#export VERSION=2.8.1
#export VERSIONDATE=20220421
#export VERSION=2.8.2
#export VERSIONDATE=20220428
#export VERSION=2.8.3
#export VERSIONDATE=20220513
#export DEPENDENCIES=zlib,libbz2,liblz4,zstd,spdlog,fmt,google-cloud-cpp
#export OPTIONALDEPENDENCIES=clipp
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=2.9.0
#export VERSIONDATE=20220514
#export VERSION=2.9.1
#export VERSIONDATE=20220519
#export VERSION=2.9.2
#export VERSIONDATE=20220528
#export VERSION=2.9.3
#export VERSIONDATE=20220604
####CMake Error at cmake/Modules/FindMagic_EP.cmake:113 (message): Unable to find Magic
#export VERSION=2.9.4
#export VERSIONDATE=20220610
#export VERSION=2.9.5
#export VERSIONDATE=20220618
#export VERSION=2.10.0
#export VERSIONDATE=20220623
#export VERSION=2.10.1
#export VERSIONDATE=20220625
#export VERSION=2.10.2
#export VERSIONDATE=20220708
#export VERSION=2.10.3
#export VERSIONDATE=20220803
#export VERSION=2.10.4
#export VERSIONDATE=20220805
#export VERSION=2.11.0
#export VERSIONDATE=20220806
#export VERSION=2.11.1
#export VERSIONDATE=20220825
#export VERSION=2.11.2
#export VERSIONDATE=20220913
#export VERSION=2.11.3
#export VERSIONDATE=20220924
#export VERSION=2.12.0
#export VERSIONDATE=20221021
#export VERSION=2.12.1
#export VERSIONDATE=20221103
#export VERSION=2.12.2
#export VERSIONDATE=20221105
#export VERSION=2.12.3
#export VERSIONDATE=20221123
#export VERSION=2.13.0
#export VERSIONDATE=20221201
export VERSION=2.13.1
export VERSIONDATE=20230105
wl-showstatus --package-version
export DEPENDENCIES=zlib,libbz2,liblz4,zstd,spdlog,fmt,google-cloud-cpp,file
export OPTIONALDEPENDENCIES=clipp
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/TileDB-Inc/TileDB/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/TileDB-Inc/TileDB/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd TileDB-$VERSION
## fix cmake/Modules/FindMagic_EP.cmake (version >= 2.9.0)
#patch -ulbf cmake/Modules/FindMagic_EP.cmake << EOF
#@@ -118,3 +118,3 @@
#   PATHS \${LIBMAGIC_PATHS}
#-  PATH_SUFFIXES bin share
#+  PATH_SUFFIXES bin share share/misc
#   \${NO_DEFAULT_PATH}
#@@ -132,3 +132,3 @@
# # If we built a static EP, install it if required.
#-if (TILEDB_LIBMAGIC_EP_BUILT AND TILEDB_INSTALL_STATIC_DEPS)
#+if (TILEDB_LIBMAGIC_EP_BUILT AND TILEDB_INSTALL_STATIC_DEPS AND NOT MINGW)
#   install_target_libs(libmagic)
#EOF
# fix cmake/Modules/TileDBCommon.cmake (version >= 2.9.4)
patch -ulbf cmake/Modules/TileDBCommon.cmake << EOF
@@ -88,2 +88,3 @@
 function(install_target_libs LIB_TARGET)
+ if (NOT "\${LIB_TARGET}" MATCHES "")
   get_imported_location(TARGET_LIBRARIES \${LIB_TARGET})
@@ -97,2 +98,3 @@
   endif()
+ endif()
 endfunction()
EOF
# fix issue determining linker language in tiledb/type/range/CMakeLists.txt (version >= 2.9.4)
####CMake Error: CMake can not determine linker language for target: range
patch -ulbf tiledb/type/range/CMakeLists.txt << EOF
@@ -31,2 +31,3 @@
 add_library(range OBJECT range.h)
+set_target_properties(range PROPERTIES LINKER_LANGUAGE CXX)
 target_link_libraries(range PUBLIC baseline \$<TARGET_OBJECTS:baseline>)
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTILEDB_STATIC:BOOL=ON -DTILEDB_TBB_SHARED:BOOL=ON -DTILEDB_TBB:BOOL=OFF -DTILEDB_CPP_API:BOOL=ON -DTILEDB_TOOLS:BOOL=ON -DTILEDB_WERROR:BOOL=OFF -DTILEDB_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-DFMT_HEADER_ONLY" -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTILEDB_STATIC:BOOL=ON -DTILEDB_TBB_SHARED:BOOL=ON -DTILEDB_TBB:BOOL=OFF -DTILEDB_CPP_API:BOOL=ON -DTILEDB_TOOLS:BOOL=ON -DTILEDB_WERROR:BOOL=OFF -DTILEDB_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-DFMT_HEADER_ONLY" -DCMAKE_EXE_LINKER_FLAGS:STRING="-Wl,--allow-multiple-definition" -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTILEDB_STATIC:BOOL=ON -DTILEDB_CCACHE:BOOL=OFF -DTILEDB_CPP_API:BOOL=ON -DTILEDB_TOOLS:BOOL=ON -DTILEDB_GCS:BOOL=OFF -DTILEDB_SUPERBUILD:BOOL=OFF -DTILEDB_FORCE_ALL_DEPS:BOOL=OFF -DTILEDB_STATS:BOOL=OFF -DTILEDB_WERROR:BOOL=OFF -DTILEDB_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-DFMT_HEADER_ONLY" -DCMAKE_EXE_LINKER_FLAGS:STRING="-Wl,--allow-multiple-definition" -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTILEDB_STATIC:BOOL=ON -DTILEDB_CCACHE:BOOL=OFF -DTILEDB_CPP_API:BOOL=ON -DTILEDB_TOOLS:BOOL=ON -DTILEDB_GCS:BOOL=OFF -DTILEDB_LIBMAGIC_EP_BUILT:BOOL=ON -Dlibmagic_DICTIONARY:FILEPATH=$MINGWPREFIX/share/misc/magic.mgc -DTILEDB_SUPERBUILD:BOOL=OFF -DTILEDB_FORCE_ALL_DEPS:BOOL=OFF -DTILEDB_STATS:BOOL=OFF -DTILEDB_WERROR:BOOL=OFF -DTILEDB_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-DFMT_HEADER_ONLY -Iinstall/include" -DCMAKE_EXE_LINKER_FLAGS:STRING="-Wl,--allow-multiple-definition" -S. -Bbuild_win &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTILEDB_STATIC:BOOL=ON -DTILEDB_CCACHE:BOOL=OFF -DTILEDB_CPP_API:BOOL=ON -DTILEDB_TOOLS:BOOL=ON -DTILEDB_GCS:BOOL=OFF -DTILEDB_LIBMAGIC_EP_BUILT:BOOL=ON -Dlibmagic_DICTIONARY:FILEPATH=$MINGWPREFIX/share/misc/magic.mgc -DTILEDB_WEBP:BOOL=OFF -DTILEDB_SUPERBUILD:BOOL=OFF -DTILEDB_FORCE_ALL_DEPS:BOOL=OFF -DTILEDB_STATS:BOOL=OFF -DTILEDB_WERROR:BOOL=OFF -DTILEDB_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-DFMT_HEADER_ONLY -Iinstall/include" -DCMAKE_EXE_LINKER_FLAGS:STRING="-Wl,--allow-multiple-definition" -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTILEDB_STATIC:BOOL=ON -DTILEDB_TBB_SHARED:BOOL=ON -DTILEDB_TBB:BOOL=OFF -DTILEDB_CPP_API:BOOL=ON -DTILEDB_TOOLS:BOOL=ON -DTILEDB_WERROR:BOOL=OFF -DTILEDB_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-std=c++17 -DFMT_HEADER_ONLY" -S. -Bbuild_win &&
 ## add linker flag (version = 2.4.0)
 #echo " -Wl,--allow-multiple-definition" >> build_win/tiledb/CMakeFiles/tiledb_shared.rsp &&
 #echo " -Wl,--allow-multiple-definition" >> build_win/tiledb/CMakeFiles/tiledb.rsp &&
 # fix absolute path issue building magic_mgc_gzipped.bin (version >= 2.9.4)
 sed -i.bak -e "s? [/\\]\(install[/\\]include\)? \1?; s?/\(install/include/magic_mgc_gzipped\.bin\)?\1?" build_win/build.ninja &&
 wl-showstatus build &&
 ## manually build magic_mgc_gzipped.bin (version >= 2.9.4 <= 2.11.0)
 #ninja -Cbuild_win install/include/magic_mgc_gzipped.bin &&
 # manually build magic_mgc_gzipped.bin (version >= 2.11.1)
 ninja -Cbuild_win magic_mgc_gzipped.bin &&
 ninja -Cbuild_win &&
 #strip build_win/tiledb/tools/*.exe build_win/tiledb/tiledb/*.dll &&
 strip build_win/tools/*.exe build_win/tiledb/*.dll &&
 wl-showstatus build-install &&
 ( ninja -Cbuild_win install/strip || ninja -Cbuild_win install || ninja -Cbuild_win install-tiledb ) &&
 cp -f $INSTALLPREFIX/lib/libtiledbstatic.a $INSTALLPREFIX/lib/libtiledb.a &&
 # delete foreign libraries
 for F in $INSTALLPREFIX/lib/*.a; do
  if basename $F | grep -qv "^libtiledb"; then
   rm -f $F
  fi
 done &&
 #cp -f build_win/tiledb/tools/*.exe $INSTALLPREFIX/bin/ &&
 cp -f build_win/tools/*.exe $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf TileDB-$VERSION



