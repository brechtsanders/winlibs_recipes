export NAME="GKlib"
export STATUS=
export URL=https://github.com/KarypisLab/GKlib
export BASENAME=gklib
export DESCRIPTION="A library of various helper routines and frameworks used by many of the KarypisLab's software"
export CATEGORY=
export TYPE=library
#export VERSION=master
#export VERSIONDATE=20181007
export VERSION=METIS-v5.1.1-DistDGL-0.5
export VERSIONDATE=20220725
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=Apache
#export DOWNLOADURL="https://github.com/KarypisLab/GKlib/releases"
export DOWNLOADURL="https://github.com/KarypisLab/GKlib/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/KarypisLab/GKlib/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/KarypisLab/GKlib/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd GKlib-$VERSION
patch -ulbf ms_stat.h << EOF
@@ -1,4 +1,2 @@
-#ifndef _MSC_VER // [
-#error "Use this header only with Microsoft Visual C++ compilers!"
-#endif // _MSC_VER ]
+#ifdef _MSC_VER

@@ -22 +20,2 @@
 #endif
+#endif
EOF
patch -ulbf ms_stdint.h << EOF
@@ -31,5 +31,5 @@

-#ifndef _MSC_VER // [
-#error "Use this header only with Microsoft Visual C++ compilers!"
-#endif // _MSC_VER ]
+#ifndef _MSC_VER
+#include <stdint.h>
+#else

@@ -222 +222,2 @@
 #endif // _MSC_STDINT_H_ ]
+#endif
EOF
patch -ulbf ms_inttypes.h << EOF
@@ -31,5 +31,5 @@

-#ifndef _MSC_VER // [
-#error "Use this header only with Microsoft Visual C++ compilers!"
-#endif // _MSC_VER ]
+#ifndef _MSC_VER
+#include <inttypes.h>
+#else

@@ -301 +301,2 @@
 #endif // _MSC_INTTYPES_H_ ]
+#endif
EOF
# fix missing %z printf format
sed -i.bak -e "s/\(%[0-9.]*\)zu/\1\"PRIuPTR\"/g; s/\(%[0-9.]*\)zd/\1\"PRIiPTR\"/g" csr.c graph.c io.c mcore.c memory.c
# fix getopt.c
mv getopt.c getopt.c.bak &&
echo "#include <gk_getopt.h>" > getopt.c &&
cat getopt.c.bak >> getopt.c
## fix GKlibSystem.cmake
#patch -ulbf GKlibSystem.cmake << EOF
#@@ -21,3 +21,3 @@
# elseif(MINGW)
#-  set(GKlib_COPTS "-DUSE_GKREGEX")
#+  set(GKlib_COPTS "-DUSE_GKREGEX -D__MSC__")
# else()
#EOF
# fix missing __MSC__ in gk_arch.h
sed -i.bak -e "s/__MSC__/_WIN32/" gk_arch.h
# fix win32/adapt.h
patch -ulbf win32/adapt.h << EOF
@@ -7,2 +7,5 @@

+#ifdef __MINGW32__
+#include <sys/types.h>
+#else
 #include <windows.h>
@@ -10,2 +13,3 @@
 typedef DWORD pid_t;
+#endif

EOF
# fix undefined gettimeofday() in timers.c
mv timers.c timers.c.bak &&
echo "#include <sys/time.h>" > timers.c &&
cat timers.c.bak >> timers.c
# avoid C99 issues with printf
sed -i.bak -e "s/-std=c99//" GKlibSystem.cmake
#don't abort on warnings
sed -i.bak2 -e "s/-Werror -Wall -pedantic//" GKlibSystem.cmake
## fix building shared library
#sed -i.bak -e "s/^\(.*add_library\s*(\)\([^\s]*\) STATIC\( *.*\)$/\1\2 STATIC\3\n\1\2_shared SHARED\3\nset_target_properties(\2_shared PROPERTIES OUTPUT_NAME \2)/" CMakeLists.txt
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DGKRAND:BOOL=ON -DGKREGEX:BOOL=ON -DPCRE:BOOL=ON -S. -Bbuild_win &&
# for F in build_win/CMakeFiles/GKlib_shared.dir/linklibs.rsp build_win/test/CMakeFiles/*/linklibs.rsp; do echo "-Wl,--as-needed -lregex" >> $F; done &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip C_FLAGS="-O3 -D__MSC__ -DUSE_GKREGEX" &&
# strip build_win/*.dll &&
# cp -f build_win/*.dll $INSTALLPREFIX/bin/ &&
# cp -f build_win/*.dll.a $INSTALLPREFIX/lib/ &&
# mkdir -p $INSTALLPREFIX/cmake &&
# cp -f GKlibSystem.cmake $INSTALLPREFIX/cmake/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf GKlib-$VERSION
# skip building test directory
sed -i.bak -e "s/^\(include_directories\|add_subdirectory\)(\"test\")/#&/" CMakeLists.txt
mkdir -p build_static build_shared && &&
 wl-showstatus configure &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DGKRAND:BOOL=ON -DGKREGEX:BOOL=ON -DPCRE:BOOL=ON -DCMAKE_C_FLAGS:STRING="$(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types"; fi)" -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DGKRAND:BOOL=ON -DGKREGEX:BOOL=ON -DPCRE:BOOL=ON -DCMAKE_C_FLAGS:STRING="$(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types"; fi)" -S. -Bbuild_shared &&
 (( for F in build_win/CMakeFiles/GKlib_shared.dir/linklibs.rsp build_win/test/CMakeFiles/*/linklibs.rsp; do echo "-Wl,--as-needed -lregex" >> $F; done ) || true ) &&
 wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX/bin &&
 #make -Cbuild_static install/strip C_FLAGS="-O3 -D__MSC__ -DUSE_GKREGEX" &&
 make -Cbuild_static install/strip C_FLAGS="-O3 -D__MSC__ -DUSE_GKREGEX -Wno-int-conversion" &&
 wl-showstatus build-install &&
 #make -Cbuild_shared install/strip C_FLAGS="-O3 -D__MSC__ -DUSE_GKREGEX" &&
 make -Cbuild_shared install/strip C_FLAGS="-O3 -D__MSC__ -DUSE_GKREGEX -Wno-int-conversion" &&
 strip build_shared/*.dll &&
 cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
 mkdir -p $INSTALLPREFIX/cmake &&
 cp -f GKlibSystem.cmake $INSTALLPREFIX/cmake/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf GKlib-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DGKRAND:BOOL=ON -DGKREGEX:BOOL=ON -DPCRE:BOOL=ON -DCMAKE_C_FLAGS:STRING="-O3 -D__MSC__ -DUSE_GKREGEX -Wno-int-conversion" -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DGKRAND:BOOL=ON -DGKREGEX:BOOL=ON -DPCRE:BOOL=ON -DCMAKE_C_FLAGS:STRING="-O3 -D__MSC__ -DUSE_GKREGEX -Wno-int-conversion" -S. -Bbuild_shared &&
# (( for F in build_win/CMakeFiles/GKlib_shared.dir/linklibs.rsp build_win/test/CMakeFiles/*/linklibs.rsp; do echo "-Wl,--as-needed -lregex" >> $F; done ) || true ) &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
# strip build_shared/*.dll &&
# cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
# mkdir -p $INSTALLPREFIX/cmake &&
# cp -f GKlibSystem.cmake $INSTALLPREFIX/cmake/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf GKlib-$VERSION



