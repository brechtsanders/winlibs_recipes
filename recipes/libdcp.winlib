export NAME="libdcp"
export STATUS=
export URL=https://carlh.net/libdcp
export BASENAME=libdcp
export DESCRIPTION="libdcp is a small C++ library which can read and write Digital Cinema Packages using JPEG2000 and PCM data. It can also create key delivery messages (KDMs)."
export CATEGORY=fileformat
export TYPE=library
#export VERSION=1.6.7
#export VERSIONDATE=20190710
#export VERSION=1.6.17
#export VERSIONDATE=20201128
#export DEPENDENCIES=openssl,libasdcp-cth,libsndfile,graphicsmagick,libxmlpp2,libopenjpeg,libcxml,xmlsec1,boost
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=waf
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=1.8.0
#export VERSIONDATE=20211004
####Checking for 'libasdcp-carl': not found
#export VERSION=1.8.2
#export VERSIONDATE=20211008
#export VERSION=1.8.4
#export VERSIONDATE=20211025
#export VERSION=1.8.5
#export VERSIONDATE=20211110
#export VERSION=1.8.6
#export VERSIONDATE=20220202
#export VERSION=1.8.7
#export VERSIONDATE=20220215
#export VERSION=1.8.10
#export VERSIONDATE=20220310
#export VERSION=1.8.25
#export VERSIONDATE=20220816
export VERSION=1.8.41
export VERSIONDATE=20221216
wl-showstatus --package-version
export DEPENDENCIES=openssl,libasdcp-cth,libsndfile,graphicsmagick,libxmlpp2,libopenjpeg,libcxml,xmlsec1,boost,libasdcp-cth,glibmm-2.4,xerces
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=waf
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://carlh.net/libdcp"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://carlh.net/downloads/libdcp/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix src/j2k_transcode.cc (version >= 1.8.2)
patch -ulbf src/j2k_transcode.cc << EOF
@@ -317,3 +317,2 @@
        parameters.tcp_mct = 1;
-       parameters.numgbits = fourk ? 2 : 1;

EOF
## fix libxml++ version
#sed -i.bak -e "s/\(libxml++-\)2\.6/\13.0/" wscript *.pc.in
# fix missing libasdcp-carl (version >= 1.8.0)
sed -i.bak2 -e "s/-carl/-cth/g" wscript *.pc.in
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #CXXFLAGS="-DOPJ_STATIC=1" $PYDIR/python.exe waf configure --prefix=$INSTALLPREFIX --static --target-windows --disable-examples --disable-benchmarks --disable-tests --out=build_static &&
 CXXFLAGS="-DOPJ_STATIC=1" $PYDIR/python.exe waf configure --prefix=$INSTALLPREFIX --static --target-windows-$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) --disable-examples --disable-benchmarks --disable-tests --out=build_static &&
 wl-showstatus build &&
 $PYDIR/python.exe waf build --out=build_static &&
 wl-showstatus install &&
 $PYDIR/python.exe waf install --out=build_static &&
 wl-showstatus configure &&
 #$PYDIR/python.exe waf configure --prefix=$INSTALLPREFIX --target-windows --disable-examples --disable-benchmarks --disable-tests --out=build_shared &&
 $PYDIR/python.exe waf configure --prefix=$INSTALLPREFIX --target-windows-$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) --disable-examples --disable-benchmarks --disable-tests --out=build_shared &&
 wl-showstatus build &&
 $PYDIR/python.exe waf build --out=build_shared &&
 wl-showstatus install &&
 $PYDIR/python.exe waf install --out=build_shared &&
 #mv -f $INSTALLPREFIX/lib/asdcp-cth.dll.a $INSTALLPREFIX/lib/libasdcp-cth.dll.a &&
 mv -f $INSTALLPREFIX/lib/dcp-1.0.dll.a $INSTALLPREFIX/lib/libdcp-1.0.dll.a &&
 mv -f $INSTALLPREFIX/bin/pkgconfig $INSTALLPREFIX/lib/ &&
 # fix missing version in .pc file
 sed -i -e "s/^Version: $/&$VERSION/" $INSTALLPREFIX/lib/pkgconfig/libdcp-1.0.pc &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



