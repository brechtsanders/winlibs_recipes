#export NAME="OpalVoip PTLib"
#export STATUS=
#export URL=http://www.opalvoip.org/
#export BASENAME=ptlib
#export DESCRIPTION="platform isolation library"
#export CATEGORY=portability
#export TYPE=library
##export VERSION=2.2.0
##export VERSION=2.2.1
##export VERSION=2.4.5
##export VERSIONDATE=20101222
##export VERSION=2.3.0
##export VERSION=2.6.1
##export VERSION=2.6.4
#####C:/Prog/MinGW-mSys/include/ptlib/object.h:42:32: msos/ptlib/contain.h: No such file or directory
##export VERSION=2.6.5
#####D:/Prog/MinGW-mSys/home/win32/ptlib-2.6.5/lib_mingw_x86/obj_d/win32.o:win32.cxx:(.data+0x8): undefined reference to `PPlugin_PVideoOutputDevice_Window_Registration_Instance'
##export VERSION=2.6.6
##export VERSION=2.6.7
##export VERSION=2.8.0
##export VERSION=2.8.1
##export VERSION=2.8.2
##export VERSION=2.8.3
##export DEPENDENCIES=expat,pcre
##export VERSIONDATE=20101221
##export VERSION=2.10.3
##export VERSIONDATE=20111015
##export VERSION=2.10.4
##export VERSIONDATE=20120304
##export VERSION=2.10.5
##export VERSIONDATE=20120517
##export VERSION=2.10.7
##export VERSIONDATE=20120826
#export VERSION=2.10.9
#export VERSIONDATE=20121217
##export VERSION=2.12.1
##export VERSIONDATE=20130218
##export VERSION=2.14.1
##export VERSIONDATE=20140628
##export VERSION=2.16.2
##export VERSIONDATE=20170514
#####include/ptlib/msos/stdint.h:6:19: fatal error: yvals.h: No such file or directory
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDENCIES=expat,pcre,lua,expat
#export OPTIONALDEPENDENCIES=openldap
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=mpl-1.0.htm
#export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/opalvoip/files/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/opalvoip/ptlib-$VERSION.tar.bz2
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/opalvoip/ptlib-$VERSION-src.tar.bz2
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/sourceforge/opalvoip/ptlib-$VERSION-src.zip
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opalvoip/v3.8%20Sirius/Stable%203/ptlib-2.10.3.tar.bz2
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opalvoip/v3.10%20Luyten/Stable%204/ptlib-2.10.4.tar.bz2
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opalvoip/v3.10%20Luyten/Stable%205/ptlib-2.10.5.tar.bz2
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opalvoip/v3.10%20Luyten/Stable%207/ptlib-2.10.7.tar.bz2
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opalvoip/v3.10%20Luyten/Stable%209/ptlib-2.10.9.tar.bz2
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opalvoip/v3.12%20Eridani/Stable%201/ptlib-2.12.1.tar.bz2
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opalvoip/v3.14%20Lacaille/Stable%201/ptlib-2.14.1.tar.bz2
##export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/opalvoip/V3.16%20Procyon/Stable%202/ptlib-2.16.2.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/ptlib-$VERSION.tar.bz2
##tar xj --force-local -f $TARBALLDIR/$BASENAME/ptlib-$VERSION-src.tar.bz2
##unzip -oq $TARBALLDIR/$BASENAME/ptlib-$VERSION-src.zip
##cd ptlib_$VERSION
##mv ptlib ptlib-$VERSION
#cd ptlib-$VERSION
### fix wrong initalization of pthread_t (version <= 2.2.1)
##mv include/ptlib/psync.h include/ptlib/psync.h.bak
##echo "#include <pthread.h>" > include/ptlib/psync.h
##sed -e "s/pthread_t(-1)/pthread_t()/" include/ptlib/psync.h.bak >> include/ptlib/psync.h
### fix wrong definition of capGetDriverDescriptionA (version <= 2.2.1)
##mv src/ptlib/msos/vfw.cxx src/ptlib/msos/vfw.cxx.bak
##sed -e "s/\(capGetDriverDescriptionA (\)WORD/\1UINT/" src/ptlib/msos/vfw.cxx.bak > src/ptlib/msos/vfw.cxx
### fix to force using wchar_t instead of WORD and BOOL instead of bool (version <= 2.2.1)
##cat >> include/ptbuildopts.h.in << EOF
###define _NATIVE_WCHAR_T_DEFINED
##//#define P_USE_INTEGER_BOOL
##EOF
##mv src/ptlib/msos/ethsock.cxx src/ptlib/msos/ethsock.cxx.bak
##sed -e "s/bool/PBoolean/" src/ptlib/msos/ethsock.cxx.bak > src/ptlib/msos/ethsock.cxx
### add PASN_BMPString.SetValue(PWORDArray) (???) (version <= 2.2.1)
##patch -ulbf include/ptclib/asner.h << EOF
##--- include/ptclib/asner.h Wed Apr  2 22:55:49 2008
##+++ include/ptclib/asner.h Wed Apr  2 22:56:05 2008
##@@ -602,2 +602,3 @@
##     void SetValue(const PWCharArray & v) { operator=(v); }
##+    void SetValue(const PWORDArray & v) { operator=(*(PWideString*)&v); }
##     void SetValue(const PASN_BMPString & v) { operator=(v.value); }
##EOF
### fix double newlines in src/ptclib/url.cxx (version = 2.2.1)
##mv src/ptclib/url.cxx src/ptclib/url.cxx.bak
##sed -e "s/\n\n/\n/" src/ptclib/url.cxx.bak > src/ptclib/url.cxx
### fix missing qossp.h by getting it from Microsoft Platform SDK (version <= 2.2.1)
##cat > include/qossp.h << EOF
##typedef struct { ULONG ObjectType, ObjectLength; } QOS_OBJECT_HDR;
###define SERVICE_NO_QOS_SIGNALING 0x40000000
###define QOS_OBJECT_DESTADDR 2004
##typedef struct _QOS_DESTADDR {
## QOS_OBJECT_HDR ObjectHdr;
## const struct sockaddr *SocketAddress;
## ULONG SocketAddressLength;
##} QOS_DESTADDR, *LPQOS_DESTADDR;
##EOF
### fix redefinition of ETIMEDOUT which is already defined in pthread.h (version >= 2.10.4)
##mv include/ptlib/msos/ptlib/ipsock.h include/ptlib/msos/ptlib/ipsock.h.bak
##grep -v "^#define ETIMEDOUT" include/ptlib/msos/ptlib/ipsock.h.bak > include/ptlib/msos/ptlib/ipsock.h
## fix include/ptlib/socket.h (version >= 2.10.4)
#patch -ulbf include/ptlib/socket.h << EOF
#--- include/ptlib/socket.h  2012-02-21 23:57:20 +0100
#+++ include/ptlib/socket.h  2012-03-04 21:34:38 +0100
#@@ -493,4 +493,5 @@
#
#-  private:
#+  public:
#     P_fd_set(const P_fd_set &) {}
#+  private:
#     void operator=(const P_fd_set &) {}
#EOF
### fix DNS issues in include/ptclib/pdns.h (version >= 2.10.7)
##patch -ulbf include/ptclib/pdns.h << EOF
##--- include/ptclib/pdns.h  2012-08-23 04:13:04 +0200
##+++ include/ptclib/pdns.h  2012-08-26 11:46:26 +0200
##@@ -47,2 +47,3 @@
##   #include <windns.h>
##+ #if !defined(__MINGW32__)
##   #include <ntverp.h>
##@@ -54,2 +55,3 @@
##
##+ #endif
## #else /* _WIN32 */
##EOF
## fix DNS issues in include/ptclib/pdns.h (version >= 2.10.7)
#patch -ulbf include/ptclib/pdns.h << EOF
#@@ -51,5 +51,5 @@
#   enum { DnsSectionAdditional = DnsSectionAddtional };
#
#-  #if VER_PRODUCTBUILD < 6000
#+  #if VER_PRODUCTBUILD < 6000 && !defined(__MINGW32__)
#     typedef struct
#     {
#EOF
### fix DNS issues in src/ptclib/pdns.cxx (version = 2.10.7)
##patch -ulbf src/ptclib/pdns.cxx << EOF
##--- src/ptclib/pdns.cxx  2012-08-23 04:12:42 +0200
##+++ src/ptclib/pdns.cxx  2012-08-26 11:53:24 +0200
##@@ -46,6 +46,6 @@
##
##-#ifdef _WIN32
##+#if defined(_WIN32) && !defined(__MINGW32__)
##   #pragma comment(lib, "DnsAPI.Lib")
##   #pragma message("DNS support enabled")
##-#else
##+#elif !defined(__MINGW32__)
##   enum { DnsFreeFlat = 0 };
##EOF
## fix missing DnsRecordSetCopy in src/ptclib/pdns.cxx (version >= 2.10.9)
#mv src/ptclib/pdns.cxx src/ptclib/pdns.cxx.bak &&
##echo "#include <windows.h>" > src/ptclib/pdns.cxx &&
##echo "#include <windns.h>" >> src/ptclib/pdns.cxx
#cat > src/ptclib/pdns.cxx << EOF
##ifdef UNICODE
# #define DnsRecordSetCopy(x) DnsRecordSetCopyEx(x, DnsCharSetUnicode, DnsCharSetUnicode)
##else
# #define DnsRecordSetCopy(x) DnsRecordSetCopyEx(x, DnsCharSetAnsi, DnsCharSetAnsi)
##endif
#EOF
#cat src/ptclib/pdns.cxx.bak >> src/ptclib/pdns.cxx
## fix missing DNS_NAPTR_DATA in src/ptclib/enum.cxx (version >= 2.10.9)
#mv src/ptclib/enum.cxx src/ptclib/enum.cxx.bak
#cat > src/ptclib/enum.cxx << EOF
##include <windows.h>
#typedef struct _DNS_NAPTR_DATA {
#  WORD  wOrder;
#  WORD  wPreference;
#  PWSTR pFlags;
#  PWSTR pService;
#  PWSTR pRegularExpression;
#  PWSTR pReplacement;
#} DNS_NAPTR_DATA, *PDNS_NAPTR_DATA;
#EOF
#cat src/ptclib/enum.cxx.bak >> src/ptclib/enum.cxx
###cat "/C/Program Files/Microsoft Platform SDK/Include/Qossp.h" >> include/qossp.h
##cat "/C/Program Files/Microsoft SDKs/Windows/v6.1/Include/Qossp.h" >> include/qossp.h
##cat /x86_64-pc-mingw32/include/qossp.h >> include/qossp.h
## fix type issue in src/ptclib/pxmlrpc.cxx
#patch -ulbf src/ptclib/pxmlrpc.cxx << EOF
#@@ -728,5 +728,5 @@
#
#   if (param == NULL)
#-    return PFalse;
#+    return NULL;
#
#   for (i = 0; i < param->GetSize(); i++) {
#EOF
### fix include/ptlib/channel.h (version >= 2.16.2)
##patch -ulbf include/ptlib/channel.h << EOF
##@@ -795,4 +795,5 @@
##
##-private:
##+public:
##   P_fd_set(const P_fd_set &) { }
##+private:
##   void operator=(const P_fd_set &) { }
##EOF
### fix include/ptlib/dict.h (version >= 2.16.2)
##patch -ulbf include/ptlib/dict.h << EOF
##@@ -115 +115 @@
##-    virtual void PrintOn(ostream & strm) const { strm << this->m_key; }
##+    virtual void PrintOn(ostream & strm) const { strm << (unsigned long long)this->m_key; }
##EOF
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I`pwd`/include"
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-qos
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-openssl --disable-qos --disable-video
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-openssl --disable-qos --disable-video --disable-sdl &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-qos --disable-video &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-qos --disable-video --enable-asn &&
##mkdir -p lib_Windows_NT_$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) --disable-video --disable-vfw --disable-sdl --enable-asn &&
# echo "#undef P_HAS_ATOMIC_INT" >> include/ptbuildopts.h &&
# wl-showstatus build-install &&
# ## fix missing sources and linking problems
# #mv src/ptlib/msos/Makefile src/ptlib/msos/Makefile.bak &&
# ##echo "ENDLDLIBS += -liphlpapi -lpcreposix -lws2_32" > src/ptlib/msos/Makefile &&
# #echo "ENDLDLIBS += -Wl,--as-needed -liphlpapi -lpcreposix -lws2_32" > src/ptlib/msos/Makefile &&
# #sed -e "s/^\(.*\)\(inetprot.cxx\)/\1\2 \1url.cxx \1pwavfiledev.cxx \1pvidfile.cxx \1pvfiledev.cxx/" src/ptlib/msos/Makefile.bak >> src/ptlib/msos/Makefile &&
# ## remove -Wl,--kill-at from LDSOOPTS (because opal doesn't build otherwise)
# #mv make/lib.mak make/lib.mak.bak &&
# #sed "s/-Wl,--kill-at//" make/lib.mak.bak > make/lib.mak &&
# #make ptlib &&
# #mkdir -p $INSTALLPREFIX/include/ptlib $INSTALLPREFIX/include/ptclib $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/bin &&
# #cp include/*.h $INSTALLPREFIX/include &&
# #( rm $INSTALLPREFIX/include/qossp.h || true ) &&
# #cp include/ptlib/*.h include/ptlib/*.inl $INSTALLPREFIX/include/ptlib &&
# #cp include/ptclib/*.h $INSTALLPREFIX/include/ptclib &&
# #cp lib/libpt_mingw_x86_d_s.a $INSTALLPREFIX/lib/ &&
# #cp lib/libpt_mingw_x86_r_s.a $INSTALLPREFIX/lib/ &&
# #cp lib/libpt_mingw_x86_r_s.a $INSTALLPREFIX/lib/libpt.dll.a &&
# #cp lib/libpt_mingw_x86_d.dll $INSTALLPREFIX/bin/ &&
# #cp lib/libpt_mingw_x86_r.dll $INSTALLPREFIX/bin/ &&
# #cp lib/libpt_mingw_x86_r.dll $INSTALLPREFIX/bin/libpt.dll &&
# ( make || make CXX="${CXX:-g++} -fpermissive" || make CXX="${CXX:-g++} -fpermissive" BISON="$(which yacc)" ) &&
# #sed -i.bak -e "s/=.*-liphlpapi/& -Wl,--as-needed -lpsapi/" lib_Windows_NT_$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi)/make/ptlib_config.mak &&
# #make -j1 HOST=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) CPU=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) CONFIG_PARMS="--prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --disable-video --disable-vfw --disable-sdl --enable-asn" BISON="$(which yacc)" &&
# make install &&
# mv $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# # fix absolute path in ptlib-config
# mv $INSTALLPREFIX/bin/ptlib-config $INSTALLPREFIX/bin/ptlib-config.bak &&
# sed -e "s?$INSTALLPREFIX?\$(pushd \$(dirname \$0)/.. > /dev/null; pwd; popd > /dev/null)?g" $INSTALLPREFIX/bin/ptlib-config.bak > $INSTALLPREFIX/bin/ptlib-config &&
# rm -f $INSTALLPREFIX/bin/ptlib-config.bak &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ptlib-$VERSION
#####To do: build on 64-bit
#####To do: create .a and .dll.a files if needed
# 
#export PTLIB_VER=$VERSION
#####src/ptclib/pssl.cxx: In member function 'void PSSLContext::Construct(PSSLContext::Method, const void*, int)':
#####../../ptclib/pssl.cxx:807: error: invalid conversion from 'const SSL_METHOD*' to 'SSL_METHOD*'
#
## fix error: invalid conversion from 'const SSL_METHOD*' to 'SSL_METHOD*'
#mv src/ptclib/pssl.cxx src/ptclib/pssl.cxx.bak
#sed -e "s/\(SSL_METHOD \* meth;\)/const \1/" src/ptclib/pssl.cxx.bak > src/ptclib/pssl.cxx
#
## patch src/ptlib/msos/vfw.cxx to avoid redefinition of vfw.h stuff (GCC 4)
#patch -ulbf src/ptlib/msos/vfw.cxx << EOF
#--- src/ptlib/msos/vfw.cxx  Wed May  7 02:45:18 2008
#+++ src/ptlib/msos/vfw.cxx  Tue Jul 28 19:14:36 2009
#@@ -52,2 +52,3 @@
# 
#+/*
# typedef struct videohdr_tag {
#@@ -162,3 +163,3 @@
# 
#-BOOL VFWAPI capGetDriverDescriptionA (WORD wDriverIndex, LPSTR lpszName,
#+BOOL VFWAPI capGetDriverDescriptionA (UINT wDriverIndex, LPSTR lpszName,
#               int cbName, LPSTR lpszVer, int cbVer);
#@@ -168,2 +169,3 @@
# #define capCreateCaptureWindow capCreateCaptureWindowA
#+*/
#EOF
#
## fix missing PURL include/ptclib/url.h (version >= 2.10.3)
#mv include/ptclib/url.h include/ptclib/url.h.bak
#cat > include/ptclib/url.h << EOF
##ifndef P_URL
##define P_URL 1
##endif
#EOF
#cat include/ptclib/url.h.bak >> include/ptclib/url.h
## fix missing PSoundChannel_WAVFile include/ptclib/pwavfiledev.h (version >= 2.10.3)
#mv include/ptclib/pwavfiledev.h include/ptclib/pwavfiledev.h.bak
#cat > include/ptclib/pwavfiledev.h << EOF
##ifndef P_WAVFILE
##define P_WAVFILE 1
##endif
#EOF
#cat include/ptclib/pwavfiledev.h.bak >> include/ptclib/pwavfiledev.h
## fix src/ptlib/msos/svcproc.cxx (version >= 2.10.3)
#patch -ulbf src/ptlib/msos/svcproc.cxx << EOF
#--- src/ptlib/msos/svcproc.cxx  2011-10-14 08:54:50 +0200
#+++ src/ptlib/msos/svcproc.cxx  2012-01-31 20:30:02 +0100
#@@ -595,2 +595,4 @@
#     PString systemLogFileName = cfg.GetString(SystemLogFileNameKey);
#+#else
#+    PString systemLogFileName;
# #endif // P_CONFIG_FILE
#@@ -1519,3 +1521,3 @@
#
#-bool PServiceProcess::ProcessCommand(const char * cmd)
#+PBoolean PServiceProcess::ProcessCommand(const char * cmd)
# {
#EOF
## fix include/ptlib/socket.h (version >= 2.10.3)
#patch -ulbf include/ptlib/socket.h << EOF
#--- include/ptlib/socket.h  2011-10-14 08:55:00 +0200
#+++ include/ptlib/socket.h  2012-01-31 23:08:08 +0100
#@@ -493,3 +493,3 @@
#
#-  private:
#+  public:
#     P_fd_set(const P_fd_set &) {}
#EOF
## fix src/ptlib/msos/ethsock.cxx (version >= 2.10.3)
#patch -ulbf src/ptlib/msos/ethsock.cxx << EOF
#--- src/ptlib/msos/ethsock.cxx  2011-10-14 08:54:50 +0200
#+++ src/ptlib/msos/ethsock.cxx  2012-01-31 23:12:04 +0100
#@@ -244,10 +244,10 @@
#
#-    bool ReadAsync(PWin32PacketDriver & pkt);
#-    bool ReadComplete(PWin32PacketDriver & pkt);
#-    bool WriteAsync(PWin32PacketDriver & pkt);
#-    bool WriteComplete(PWin32PacketDriver & pkt);
#+    PBoolean ReadAsync(PWin32PacketDriver & pkt);
#+    PBoolean ReadComplete(PWin32PacketDriver & pkt);
#+    PBoolean WriteAsync(PWin32PacketDriver & pkt);
#+    PBoolean WriteComplete(PWin32PacketDriver & pkt);
#
#-    bool InProgress() const { return status == Progressing; }
#-    bool IsCompleted() const { return status == Completed; }
#-    bool IsType(WORD type) const;
#+    PBoolean InProgress() const { return status == Progressing; }
#+    PBoolean IsCompleted() const { return status == Completed; }
#+    PBoolean IsType(WORD type) const;
#
#EOF
## fix missing getaddrinfo/freeaddrinfo function in src/ptlib/common/sockets.cxx (version >= 2.10.3)
#mv src/ptlib/common/sockets.cxx src/ptlib/common/sockets.cxx.bak
#cat > src/ptlib/common/sockets.cxx << EOF
##define _WIN32_WINNT 0x0501
#EOF
#cat src/ptlib/common/sockets.cxx.bak >> src/ptlib/common/sockets.cxx
#
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-openssl --disable-qos --disable-video --disable-sdl --enable-url --enable-wavfile --enable-configfile &&
# make -j1 ptlib &&
#    echo OK
##make -Csrc PTLIBDIR=`pwd`
##make -Cmake -fptlib.mak PTLIBDIR=`pwd`
##make -Cmake -ftoplevel.mak PTLIBDIR=`pwd`



export NAME="OpalVoip PTLib"
export STATUS=
export URL=http://www.opalvoip.org/
export BASENAME=ptlib
export DESCRIPTION="platform isolation library"
export CATEGORY=portability
export TYPE=library
export VERSION=2.16.2
export VERSIONDATE=20170514
#export VERSION=2.18.5
#export VERSIONDATE=20201010
#export VERSION=2.18.8
#export VERSIONDATE=20240226
####include/ptlib/atomic.h:127:45: error: '_InterlockedExchangeAdd16' was not declared in this scope
export VERSIONDATE=
wl-showstatus --package-version
export DEPENDENCIES=expat,pcre,lua,glib2,ncurses,gstreamer,gst-plugins-base
export OPTIONALDEPENDENCIES=openldap
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=mpl-1.0.htm
export LICENSETYPE=
#export DOWNLOADURL="https://www.h323plus.org/source/"
export DOWNLOADURL="http://sourceforge.net/projects/opalvoip/files/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/opalvoip/V3.16%20Procyon/Stable%202/ptlib-2.16.2.tar.bz2
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/opalvoip/v3.18%20Cygni/Stable%205/ptlib-2.18.5.tar.bz2
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/opalvoip/v3.18%20Cygni/Stable%208/ptlib-2.18.8.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xj --force-local -f $TARBALLDIR/$BASENAME/ptlib-$VERSION.tar.bz2
cd ptlib-$VERSION
# fix DNS issues in include/ptclib/pdns.h (version >= 2.10.7)
patch -ulbf include/ptclib/pdns.h << EOF
@@ -51,5 +51,5 @@
   enum { DnsSectionAdditional = DnsSectionAddtional };

-  #if VER_PRODUCTBUILD < 6000
+  #if VER_PRODUCTBUILD < 6000 && !defined(__MINGW32__)
     typedef struct
     {
EOF
# fix include/ptlib/channel.h (version >= 2.16.2)
patch -ulbf include/ptlib/channel.h << EOF
@@ -795,4 +795,5 @@

-private:
+public:
   P_fd_set(const P_fd_set &) { }
+private:
   void operator=(const P_fd_set &) { }
EOF
# fix include/ptlib/dict.h (version >= 2.16.2)
patch -ulbf include/ptlib/dict.h << EOF
@@ -115 +115 @@
-    virtual void PrintOn(ostream & strm) const { strm << this->m_key; }
+    virtual void PrintOn(ostream & strm) const { strm << (unsigned long long)this->m_key; }
EOF
## fix src/ptclib/pssl.cxx for newer openssl (version >= 2.16.2)
#patch -ulbf src/ptclib/pssl.cxx << EOF
#@@ -162,3 +162,7 @@
#   public:
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+    PSSL_BIO(const BIO_METHOD *method = BIO_s_file())
#+#else
#     PSSL_BIO(BIO_METHOD *method = BIO_s_file_internal())
#+#endif
#       { bio = BIO_new(method); }
#@@ -1540,2 +1544,9 @@
#
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+  BIGNUM* p = BN_bin2bn(pData, pSize, NULL);
#+  BIGNUM* g = BN_bin2bn(gData, gSize, NULL);
#+  DH_set0_pqg(dh, p, NULL, g);
#+  if (p != NULL && p != NULL)
#+    return false;
#+#else
#   if ((m_dh->p = BN_bin2bn(pData, pSize, NULL)) == NULL)
#@@ -1545,2 +1556,3 @@
#     return false;
#+#endif
#
#@@ -2249,4 +2261,9 @@
#
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+  BIO_set_data(m_bio, this);
#+  BIO_set_init(bio, 1);
#+#else
#   m_bio->ptr = this;
#   m_bio->init = 1;
#+#endif
#
#@@ -2305,3 +2322,8 @@
# {
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+  void* ptr;
#+  return bio != NULL && (ptr = BIO_get_data(bio)) != NULL ? reinterpret_cast<PSSLChannel *>ptr->BioRead(buf, len) : -1;
#+#else
#   return bio != NULL && bio->ptr != NULL ? reinterpret_cast<PSSLChannel *>(bio->ptr)->BioRead(buf, len) : -1;
#+#endif
# }
#@@ -2358,3 +2380,8 @@
# {
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+  void* ptr;
#+  return bio != NULL && (ptr = BIO_get_data(bio)) != NULL ? reinterpret_cast<PSSLChannel *>ptr->BioWrite(buf, len) : -1;
#+#else
#   return bio != NULL && bio->ptr != NULL ? reinterpret_cast<PSSLChannel *>(bio->ptr)->BioWrite(buf, len) : -1;
#+#endif
# }
#@@ -2386,3 +2413,8 @@
# {
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+  void* ptr;
#+  return bio != NULL && (ptr = BIO_get_data(bio)) != NULL ? reinterpret_cast<PSSLChannel *>ptr->BioClose() : 0;
#+#else
#   return bio != NULL && bio->ptr != NULL ? reinterpret_cast<PSSLChannel *>(bio->ptr)->BioClose() : 0;
#+#endif
# }
#@@ -2392,4 +2424,9 @@
# {
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+  if (BIO_get_shutdown(m_bio)) {
#+    if (BIO_get_init(m_bio)) {
#+#else
#   if (m_bio->shutdown) {
#     if (m_bio->init) {
#+#endif
#       Shutdown(PSocket::ShutdownReadAndWrite);
#@@ -2397,4 +2434,9 @@
#     }
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+    BIO_set_init(m_bio, 0);
#+    BIO_clear_flags(m_bio, ~0);
#+#else
#     m_bio->init  = 0;
#     m_bio->flags = 0;
#+#endif
#   }
#@@ -2571,3 +2613,8 @@
# {
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+  void* ptr;
#+  return bio != NULL && (ptr = BIO_get_data(bio)) != NULL ? reinterpret_cast<PSSLChannel *>ptr->BioControl(cmd, num, ptr) : 0;
#+#else
#   return bio != NULL && bio->ptr != NULL ? reinterpret_cast<PSSLChannel *>(bio->ptr)->BioControl(cmd, num, ptr) : 0;
#+#endif
# }
#@@ -2579,3 +2626,7 @@
#     case BIO_CTRL_SET_CLOSE:
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      BIO_set_shutdown(m_bio, (int)num);
#+#else
#       m_bio->shutdown = (int)num;
#+#endif
#       return 1;
#@@ -2583,3 +2634,7 @@
#     case BIO_CTRL_GET_CLOSE:
#+#if OPENSSL_VERSION_NUMBER >= 0x01010000
#+      return BIO_get_shutdown(m_bio);
#+#else
#       return m_bio->shutdown;
#+#endif
#
#EOF
## fix missing LPCPROPSHEETPAGEW/LPCPROPSHEETPAGEA in src/ptclib/pssl.cxx (version >= 2.18.5)
#mv src/ptclib/pssl.cxx src/ptclib/pssl.cxx.bak &&
#echo "#include <winsock2.h>" > src/ptclib/pssl.cxx &&
#echo "#include <windows.h>" >> src/ptclib/pssl.cxx &&
#cat src/ptclib/pssl.cxx.bak >> src/ptclib/pssl.cxx
## fix src/ptlib/msos/winsock.cxx (version >= 2.18.5)
#sed -i.bak -e "s/\(P_fd_set\s.*\s*=\s*\)\([^(].*;\)/\1(intptr_t)\2/" src/ptlib/msos/winsock.cxx
## fix missing MEDIASUBTYPE_I420 in src/ptlib/msos/directshow.cxx (version >= 2.18.5)
#mv src/ptlib/msos/directshow.cxx src/ptlib/msos/directshow.cxx.bak &&
#echo "#include <winsock2.h>" > src/ptlib/msos/directshow.cxx &&
#echo "#include <wmcodecdsp.h>" >> src/ptlib/msos/directshow.cxx &&
#cat src/ptlib/msos/directshow.cxx.bak >> src/ptlib/msos/directshow.cxx
## fix missing WerAddExcludedApplication in src/ptlib/msos/ptlib.cxx (version >= 2.18.5)
#mv src/ptlib/msos/ptlib.cxx src/ptlib/msos/ptlib.cxx.bak &&
#echo "#include <winsock2.h>" > src/ptlib/msos/ptlib.cxx &&
#echo "#include <werapi.h>" >> src/ptlib/msos/ptlib.cxx &&
#cat src/ptlib/msos/ptlib.cxx.bak >> src/ptlib/msos/ptlib.cxx
mkdir -p lib_Windows_NT_$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) &&
 #autoreconf -f -i -I make -I $MINGWPREFIX/share/aclocal &&
 #wl-showstatus configure &&
 #cd lib_Windows_NT_$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) &&
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) --disable-video --disable-vfw --disable-sdl --enable-asn &&
 #sed -i.bak -e "s/=.*-liphlpapi/& -Wl,--as-needed -lpsapi/" make/ptlib_config.mak &&
 #cd .. &&
 wl-showstatus configure &&
 #make config CONFIG_PARMS="--prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --disable-openssl --disable-video --disable-vfw --disable-sdl --enable-asn" HOST=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) CPU=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) &&
 make config CONFIG_PARMS="--prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --disable-video --disable-vfw --disable-sdl --enable-asn" HOST=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) CPU=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) &&
 #make config CONFIG_PARMS="--prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-video --disable-vfw --disable-sdl --enable-asn" HOST=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) CPU=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) &&
 # fix linking to lpsapi and building .dll.a file
 sed -i.bak -e "s/=.*-liphlpapi/& -Wl,--as-needed -lpsapi/; s/SHARED_LDFLAGS\s*=.*$/& -Wl,--out-implib,libpt.dll.a/" lib_Windows_NT_$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi)/make/ptlib_config.mak &&
 wl-showstatus build &&
 #make -j1 CONFIG_PARMS="--prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --disable-video --disable-vfw --disable-sdl --enable-asn" HOST=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) CPU=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) BISON="$(which yacc)" &&
 make HOST=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) CPU=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) BISON="$(which yacc)" STATICLIBEXT=a &&
 #make all install HOST=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) CPU=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) BISON="$(which yacc)" &&
 wl-showstatus install &&
 cp -uf include/*.h lib_Windows_NT_$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi)/include &&
 cp -urf include/ptlib include/ptclib lib_Windows_NT_$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi)/include/ &&
 #make -j1 install CONFIG_PARMS="--prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --disable-video --disable-vfw --disable-sdl --enable-asn" HOST=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) CPU=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) BISON="$(which yacc)" &&
 make install HOST=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586-mingw32msvc; else echo x86_64-w64-mingw32; fi) CPU=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) STATICLIBEXT=a &&
 cp -f $INSTALLPREFIX/lib/libpt_s.a $INSTALLPREFIX/lib/libpt.a &&
 cp -f lib_Windows_NT_$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi)/libpt.dll.a $INSTALLPREFIX/lib/ &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 rm -f $INSTALLPREFIX/lib/*.dll.debug &&
 cp -f version.h $INSTALLPREFIX/include/ptlib/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ptlib-$VERSION



