#export NAME="libvirt"
#export STATUS=
#export URL=http://www.libvirt.org/
#export BASENAME=libvirt
#export DESCRIPTION=
#export CATEGORY=virtualization
#export TYPE=library
##export VERSION=0.4.0
##export VERSION=0.4.1
##export VERSION=0.4.2
##export VERSION=0.4.3
#export VERSION=0.4.4
##export VERSION=0.4.6
##export VERSION=0.5.0
##export VERSION=0.5.1
##export VERSION=0.6.0
##export VERSION=0.6.1
##export VERSION=0.6.2
##export VERSION=0.6.3
#####configure: error: You must install the Xen development package to compile Xen driver with -lxenstore
#export VERSION=0.6.4
##export VERSION=0.6.5
#####D:/Prog/MinGW-mSys/lib/libws2_32.a(dgxfh.o) (_libws2_32_a_inamelibvirt.syms: file not recognized: File format not recognized)
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDANCIES=libxen,gnutls
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING.LIB
#export LICENSETYPE=GPL2
#export DOWNLOADURL="http://libvirt.org/sources/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://libvirt.org/sources/libvirt-$VERSION.tar.gz
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/libvirt-$VERSION.tar.gz
#cd libvirt-$VERSION
## fix for missing definition of EAI_IDN_ENCODE
##cat >> gnulib/lib/getaddrinfo.h << EOF
###ifndef EAI_IDN_ENCODE
### define EAI_IDN_ENCODE  -105
###endif
##EOF
### fix for missing pwd.h
##cat > pwd.h << EOF
##typedef int uid_t;
###define geteuid() 0
###define getpwuid(uid) NULL
##struct passwd {
## char *pw_dir;
##};
##EOF
### fix for missing st_blocks and st_blksize in stat
##mv src/storage_backend.c src/storage_backend.c.bak
##sed -e "s/sb.st_blocks/sb.st_size/; s/sb.st_blksize/1/" src/storage_backend.c.bak > src/storage_backend.c
##
### fix for missing endian.h and byteswap.h (Windows is little endian)
##cat > endian.h << EOF
###define __LITTLE_ENDIAN 1234
###define __BIG_ENDIAN 4321
###define __PDP_ENDIAN 3412
##EOF
##CAT > byteswap.h << EOF
##EOF
### fix for missing mntent.h and sys/statvfs.h
##cat > mntent.h << EOF
##EOF
##mkdir sys
##touch sys/wait.h
##cat > sys/statvfs.h << EOF
##struct statvfs {
## unsigned long f_bsize, f_frsize, f_blocks, f_bfree;
##};
###define statvfs(path,sb) -1
##EOF
### fix missing pthread definitions in src/internal.h
##mv src/internal.h src/internal.h.bak
##echo "#include <pthread.h>" > src/internal.h
##cat src/internal.h.bak >> src/internal.h
## fix missing htonl/ntohl definitions in qemud/remote_protocol.c
#mv qemud/remote_protocol.c qemud/remote_protocol.c.bak
#echo "#include <winsock2.h>" > qemud/remote_protocol.c
#cat qemud/remote_protocol.c.bak >> qemud/remote_protocol.c
## fix missing fprintf definitions in proxy/libvirt_proxy.c
#mv proxy/libvirt_proxy.c proxy/libvirt_proxy.c.bak
#echo "#include <stdio.h>" > proxy/libvirt_proxy.c
#cat proxy/libvirt_proxy.c.bak >> proxy/libvirt_proxy.c
#
## patch python/Makefile.am for building libvirtmod.dll
#mv python/Makefile.am python/Makefile.am.bak
#sed -e "s/\(@CYGWIN_EXTRA_LDFLAGS@\)/\1 @MINGW_EXTRA_LDFLAGS@/" python/Makefile.am.bak > python/Makefile.am
#
## skip building tests
#cat > tests/Makefile.in << EOF
#all:
#depend:
#links:
#generate:
#install:
#EOF
#
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-qemu --without-openvz --without-uml --without-test --without-libvirtd --with-remote-pid-file=none --with-init-scripts=none --with-depends --without-sasl --without-polkit CFLAGS="-Drestrict=__restrict -DWSAAPI -Dsiginfo_t=int" LDFLAGS="-lintl -lpthread -Wl,--allow-multiple-definition"
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-sasl --without-avahi --without-polkit --without-python --without-xen --without-qemu --without-lxc --without-openvz --without-uml --without-vbox --without-libvirtd CFLAGS="-Drestrict=__restrict -DWSAAPI -Dsiginfo_t=int" LDFLAGS="-lintl -lpthread -Wl,--allow-multiple-definition"
##PYTHON=$PYDIR/python.exe PYTHON_SITE_PKG=$PYDIR/Lib/site-packages ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xen --without-xen-inotify --without-qemu --without-openvz --without-uml --without-test --without-libvirtd --with-remote-pid-file=none --with-init-scripts=none --with-depends --without-sasl --without-polkit CFLAGS="-Drestrict=__restrict -DWSAAPI -Dsiginfo_t=int -I$PYDIR/include" LDFLAGS="-lintl -lpthread -Wl,--allow-multiple-definition -L$PYDIR/libs"
## --without-xen --without-xen-inotify
#
## fix invalid permissions
#mv proxy/Makefile proxy/Makefile.bak
#sed -e "s/\(chmod u+s\)/#\1/" proxy/Makefile.bak > proxy/Makefile
### fix missing proxy/config.stat
##ln -s config.status config.stat
#
## fix redefinitions in gnulib/lib/time.h
#patch -ulbf gnulib/lib/time.h << EOF
#--- gnulib/lib/time.h   Wed Jul 29 09:10:12 2009
#+++ gnulib/lib/time.h   Wed Jul 29 09:50:34 2009
#@@ -52,2 +52,3 @@
# #   undef timespec
#+/*
# #   define timespec rpl_timespec
#@@ -58,2 +59,3 @@
# };
#+*/
# #  endif
#EOF
#
#make install
#
#make -C python libvirtmod.la
#
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION
#cd ..



#export NAME="libvirt"
#export STATUS=
#export URL=http://www.libvirt.org/
#export BASENAME=libvirt
#export DESCRIPTION=
#export CATEGORY=virtualization
#export TYPE=library
##export VERSION=0.6.1
##export VERSION=0.7.0
#####D:/Prog/MinGW-mSys/lib/libws2_32.a(dgxfh.o) (_libws2_32_a_inamelibvirt.syms: file not recognized: File format not recognized)
##export VERSION=0.7.1
##export VERSION=0.7.2
##export VERSION=0.7.4
##export VERSION=0.7.5
##export VERSION=0.7.6
##export VERSION=0.7.7
##export VERSION=0.8.0
##export VERSION=0.8.1
##export VERSION=0.8.2
#####/lib/gcc/mingw32/4.4.0/../../../../include/winsock2.h:635: error: conflicting types for 'rpl_gethostname'
#####gnulib/lib/unistd.h:524: note: previous declaration of 'rpl_gethostname' was here
##export VERSION=0.8.3
##export VERSION=0.8.4
#####src/util/util.h:261:36: error: macro "virGetUserDirectory" requires 2 arguments, but only 1 given
##export VERSION=0.8.5
##export VERSIONDATE=20101030
##export VERSION=0.8.6
##export VERSIONDATE=20101201
##export VERSION=0.8.7
##export VERSIONDATE=20110104
##export VERSION=0.8.8
##export VERSIONDATE=20110217
##export VERSION=0.9.0
##export VERSIONDATE=20110404
##export VERSION=0.9.1
##export VERSIONDATE=20110505
#####src/util/json.c:897: error: 'yajl_parser_config' undeclared (first use in this function)
##export VERSION=0.9.2
##export VERSIONDATE=20110606
#####make LIBS="-Wl,--as-needed -ldl"
#####virsh-virsh.o:virsh.c:(.text+0x1491b): undefined reference to `geteuid'
##export VERSION=0.9.3
##export VERSIONDATE=20110727
##export VERSION=0.9.4
##export VERSIONDATE=20110803
##export VERSION=0.9.5
##export VERSIONDATE=20110920
##export VERSION=0.9.6
##export VERSIONDATE=20110922
##export VERSION=0.9.7
##export VERSIONDATE=20111108
#####openpty.c:107: error: 'TCSAFLUSH' undeclared (first use in this function)
##export VERSION=0.9.8
##export VERSIONDATE=20111208
##export VERSION=0.9.9
##export VERSIONDATE=20120107
##export VERSION=0.9.10
##export VERSIONDATE=20120213
##export VERSION=0.9.11
##export VERSIONDATE=20120403
##export VERSION=0.9.11.2
##export VERSIONDATE=20120427
##export VERSION=0.9.11.3
##export VERSIONDATE=20120428
#####32-bit: /bin/sh: ./apibuild.py: /usr/bin/python: bad interpreter: No such file or directory
#####64-bit: gnulib/lib/time.h:468:1: error: expected identifier or '(' before '{' token
##export VERSION=0.9.12
##export VERSIONDATE=20120514
##export VERSION=0.9.13
##export VERSIONDATE=20120702
##export VERSION=0.10.0
##export VERSIONDATE=20120829
##export VERSION=0.10.1
##export VERSIONDATE=20120831
##export VERSION=0.10.2
##export VERSIONDATE=20120924
##export VERSION=1.0.0
##export VERSIONDATE=20121102
##export VERSION=1.0.1
##export VERSIONDATE=20121217
##export VERSION=1.0.2
##export VERSIONDATE=20130130
##export VERSION=1.0.3
##export VERSIONDATE=20130305
#####ld.exe: cannot find libvirt_lxc.def: No such file or directory
##export VERSION=1.0.4
##export VERSIONDATE=20130401
##export VERSION=1.0.5
##export VERSIONDATE=20130502
##export VERSION=1.0.6
##export VERSIONDATE=20130603
##export VERSION=1.1.0
##export VERSIONDATE=20130701
##export VERSION=1.1.1
##export VERSIONDATE=20130730
##export VERSION=1.1.2
##export VERSIONDATE=20130902
##export VERSION=1.1.3
##export VERSIONDATE=20131001
##export VERSION=1.1.4
##export VERSIONDATE=20131104
##export VERSION=1.2.0
##export VERSIONDATE=20131201
##export VERSION=1.2.1
##export VERSIONDATE=20140116
##export VERSION=1.2.2
##export VERSIONDATE=20140302
##export VERSION=1.2.3
##export VERSIONDATE=20140401
##export VERSION=1.2.4
##export VERSIONDATE=20140504
##export VERSION=1.2.5
##export VERSIONDATE=20140602
##export VERSION=1.2.6
##export VERSIONDATE=20140702
##export VERSION=1.2.7
##export VERSIONDATE=20140803
##export VERSION=1.2.8
##export VERSIONDATE=20140902
##export VERSION=1.2.9
##export VERSIONDATE=20141001
##export VERSION=1.2.10
##export VERSIONDATE=20141103
##export VERSION=1.2.11
##export VERSIONDATE=20141213
##export VERSION=1.2.12
##export VERSIONDATE=20150127
##export VERSION=1.2.13
##export VERSIONDATE=20150302
##export VERSION=1.2.14
##export VERSIONDATE=20150402
##export VERSION=1.2.15
##export VERSIONDATE=20150504
##export VERSION=1.2.16
##export VERSIONDATE=20150601
##export VERSION=1.2.17
##export VERSIONDATE=20150702
##export VERSION=1.2.18
##export VERSIONDATE=20150811
##export VERSION=1.2.19
##export VERSIONDATE=20150902
##export VERSION=1.2.20
##export VERSIONDATE=20151002
##export VERSION=1.2.21
##export VERSIONDATE=20151105
##export VERSION=1.3.0
##export VERSIONDATE=20151209
##export VERSION=1.3.2
##export VERSIONDATE=20160404
##export VERSION=1.3.3
##export VERSIONDATE=20160406
##export VERSION=1.3.4
##export VERSIONDATE=20160501
##export VERSION=1.3.5
##export VERSIONDATE=20160605
##export VERSION=2.0.0
##export VERSIONDATE=20160701
##export VERSION=2.1.0
##export VERSIONDATE=20160802
##export VERSION=2.2.0
##export VERSIONDATE=20160903
##export VERSION=2.3.0
##export VERSIONDATE=20161005
##export VERSION=2.4.0
##export VERSIONDATE=20161102
##export VERSION=2.5.0
##export VERSIONDATE=20161205
##export VERSION=3.0.0
##export VERSIONDATE=20170118
##export VERSION=3.1.0
##export VERSIONDATE=20170303
##export VERSION=3.2.0
##export VERSIONDATE=20170403
#####gnulib/lib/.libs/libgnu.a(pthread_sigmask.o):pthread_sigmask.c:(.text+0x21):
#####undefined reference to `pthread_sigmask'
##export VERSION=3.3.0
##export VERSIONDATE=20170506
##export VERSION=3.4.0
##export VERSIONDATE=20170702
#####/bin/sh: pod2man: command not found
##export VERSION=3.5.0
##export VERSIONDATE=20170705
##export VERSION=3.6.0
##export VERSIONDATE=20170816
##export VERSION=3.7.0
##export VERSIONDATE=20170904
##export VERSION=3.8.0
##export VERSIONDATE=20171005
##export VERSION=3.9.0
##export VERSIONDATE=20171103
##export VERSION=3.10.0
##export VERSIONDATE=20171205
##export VERSION=4.0.0
##export VERSIONDATE=20180119
##export VERSION=4.1.0
##export VERSIONDATE=20180305
##export VERSION=4.2.0
##export VERSIONDATE=20180401
##export VERSION=4.3.0
##export VERSIONDATE=20180502
##export VERSION=4.4.0
##export VERSIONDATE=20180605
##export VERSION=4.5.0
##export VERSIONDATE=20180703
##export VERSION=4.6.0
##export VERSIONDATE=20180806
#####src/util/virjsoncompat.c:63:67: error: 'RTLD_NODELETE' undeclared (first use in this function)
#####../libtool: line 7488: cd: lib: No such file or directory
##export VERSION=4.7.0
##export VERSIONDATE=20180904
#####.libs/libvirt-net-rpc.a(libvirt_net_rpc_la-virnetlibsshsession.o):virnetlibsshsession.c:(.text+0x1e33): undefined reference to `ssh_userauth_agent'
##export VERSION=4.8.0
##export VERSIONDATE=20181002
##export VERSION=4.9.0
##export VERSIONDATE=20181105
##export VERSION=4.10.0
##export VERSIONDATE=20181203
##export VERSION=5.0.0
##export VERSIONDATE=20190116
##export VERSION=5.1.0
##export VERSIONDATE=20190304
##export VERSION=5.3.0
##export VERSIONDATE=20190505
##export VERSION=5.4.0
##export VERSIONDATE=20190604
##export VERSION=5.5.0
##export VERSIONDATE=20190703
##export VERSION=5.6.0
##export VERSIONDATE=20190806
##export VERSION=5.7.0
##export VERSIONDATE=20190904
#export VERSION=5.8.0
#export VERSIONDATE=20191005
##export VERSION=5.9.0
##export VERSIONDATE=20191105
##export VERSION=5.10.0
##export VERSIONDATE=20191203
######GNUmakefile:38: /build-aux/syntax-check.mk: No such file or directory
##export VERSION=6.0.0
##export VERSIONDATE=20200116
##export VERSION=6.1.0
##export VERSIONDATE=20200303
##export VERSION=6.2.0
##export VERSIONDATE=20200403
######configure: error: "rst2html5/rst2html is required to build libvirt"
#wl-showstatus --package-version
#export DEPENDANCIES=gettext,readline,libxen,gnutls,libcurl,libgcrypt,portablexdr,libssh2,libxml2,libyajl,pthreads
##export DEPENDANCIES=gettext,readline,libxen,gnutls,libcurl,libgcrypt,portablexdr,libssh2,libxml2,libyajl,pthreads,mman-win32
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
##export DEPENDANCIES=gnutls
##export OPTIONALDEPENDANCIES=
##export BUILDDEPENDANCIES=
##export LICENSEFILE=COPYING.LIB
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL2
#export DOWNLOADURL="http://libvirt.org/sources/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://libvirt.org/sources/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://libvirt.org/sources/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
### patch gnulib/lib/time.h for SYS_TIME_H_DEFINES_STRUCT_TIMESPEC and REPLACE_LOCALTIME_R problems (to do: fix configure or gnulib/lib/time.in.h)
##patch -ulbf gnulib/lib/time.h << EOF
##--- gnulib/lib/time.h  Tue Mar 10 10:49:56 2009
##+++ gnulib/lib/time.h  Tue Mar 10 10:58:39 2009
##@@ -48,3 +48,3 @@
## # if ! 0
##-#  if 0
##+#  if 1
## #   include <sys/time.h>
##@@ -72,3 +72,3 @@
##    <http://www.opengroup.org/susv3xsh/gmtime_r.html>.  */
##-# if 1
##+# if 0
## #  undef localtime_r
##EOF
## remove modprobe call from src/pci.c
#patch -ulbf src/pci.c << EOF
#--- src/pci.c  Wed Mar  4 10:42:31 2009
#+++ src/pci.c  Tue Mar 10 16:30:07 2009
#@@ -627,2 +627,3 @@
#      */
#+#ifndef __MINGW32__
#     if (!virFileExists(stub_dir)) {
#@@ -636,2 +637,3 @@
#     }
#+#endif
#EOF
## fix src/vbox/vbox_XPCOMCGlue.c (version >= 0.6.3)
#patch -ulbf src/vbox/vbox_XPCOMCGlue.c << EOF
#--- src/vbox/vbox_XPCOMCGlue.c  Fri Apr 17 17:48:54 2009
#+++ src/vbox/vbox_XPCOMCGlue.c  Mon Apr 27 09:46:55 2009
#@@ -50,3 +50,3 @@
# # define DYNLIB_NAME    "VBoxXPCOMC.dylib"
#-#elif defined(_MSC_VER) || defined(__OS2__)
#+#elif defined(_MSC_VER) || defined(__OS2__) || defined(__MINGW32__)
# # define DYNLIB_NAME    "VBoxXPCOMC.dll"
#@@ -103,2 +103,3 @@
#      */
#+#ifndef __MINGW32__
#     if (fSetAppHome)
#@@ -110,2 +111,3 @@
#     }
#+#endif
#     g_hVBoxXPCOMC = dlopen(szBuf, RTLD_NOW | RTLD_LOCAL);
#@@ -173,2 +175,5 @@
#     if (tryLoadOne("/usr/local/lib/virtualbox", 1) == 0)
#+        return 0;
#+#elif defined(__MINGW32__)
#+    if (tryLoadOne("C:\\VirtualBox", 1) == 0)
#         return 0;
#EOF
## fix missing definition of AI_ADDRCONFIG in src/phyp/phyp_driver.c (version >= 0.7.2 <= 1.0.2)
###mv src/phyp/phyp_driver.c src/phyp/phyp_driver.c.bak
###cat > src/phyp/phyp_driver.c << EOF
####ifndef AI_ADDRCONFIG
###//#define AI_ADDRCONFIG 0x0020
####define AI_ADDRCONFIG 0
####endif
###EOF
###cat src/phyp/phyp_driver.c.bak >> src/phyp/phyp_driver.c
##patch -ulbf src/phyp/phyp_driver.c << EOF
##--- src/phyp/phyp_driver.c  Tue Dec 22 10:37:58 2009
##+++ src/phyp/phyp_driver.c  Mon Dec 28 10:44:14 2009
##@@ -43,3 +43,13 @@
## #include <fcntl.h>
##+#ifdef __MINGW32__
##+#ifndef AI_ADDRCONFIG
##+//#define AI_ADDRCONFIG 0x0020
##+#define AI_ADDRCONFIG 0
##+#define geteuid() 0
##+#endif
##+//#include "util/util.h"
##+#define geteuid() 0//#define virGetUserDirectory(a,b) NULL
##+#else
## #include <sys/utsname.h>
##+#endif
## #include <domain_event.h>
##@@ -1473,3 +1483,5 @@
## {
##+#ifndef __MINGW32__
##     struct utsname utsname;
##+#endif
##     virCapsPtr caps;
##@@ -1477,2 +1489,3 @@
## 
##+#ifndef __MINGW32__
##     uname(&utsname);
##@@ -1506,2 +1519,3 @@
##         goto no_memory;
##+#endif
##EOF
### fix missing si_signo in tools/virsh.c (version >= 0.8.8)
##patch -ulbf tools/virsh.c << EOF
##--- tools/virsh.c  2011-02-16 07:36:54 +0100
##+++ tools/virsh.c  2011-02-17 20:42:26 +0100
##@@ -524,4 +524,7 @@
##                                void *context ATTRIBUTE_UNUSED) {
##-    if ((sig == SIGPIPE) ||
##-        (SA_SIGINFO && siginfo->si_signo == SIGPIPE))
##+    if ((sig == SIGPIPE)
##+#if defined(SA_SIGINFO) && SA_SIGINFO
##+        || (siginfo->si_signo == SIGPIPE)
##+#endif
##+                               )
##         disconnected++;
##EOF
## fix geteuid in src/util/util.h (version >= 0.9.0)
#mv src/util/util.h src/util/util.h.bak
#sed -e "s/^\(static inline int geteuid\)/\/\/\1/" src/util/util.h.bak > src/util/util.h
#cat > tests/Makefile.in << EOF
#all:
#depend:
#links:
#generate:
#install:
#EOF
### fix missing geteuid (version >= 0.9.2 <= 1.0.1)
##mv src/remote/remote_driver.c src/remote/remote_driver.c.bak
##echo "#define geteuid() 0" > src/remote/remote_driver.c
##cat src/remote/remote_driver.c.bak >> src/remote/remote_driver.c
### fix missing geteuid in tools/virsh.c (version >= 0.9.3 <= 1.0.1)
##mv tools/virsh.c tools/virsh.c.bak
##echo "#define geteuid() 0" > tools/virsh.c
##cat tools/virsh.c.bak >> tools/virsh.c
### fix missing geteuid in src/libvirt.c (version >= 0.9.8 <= 1.0.1)
##mv src/libvirt.c src/libvirt.c.bak
##echo "#define geteuid() 0" > src/libvirt.c
##cat src/libvirt.c.bak >> src/libvirt.c
### fix missing geteuid in src/rpc/virnetserver.c (version >= 0.9.8 <= 1.0.1)
##mv src/rpc/virnetserver.c src/rpc/virnetserver.c.bak
##echo "#define geteuid() 0" > src/rpc/virnetserver.c
##cat src/rpc/virnetserver.c.bak >> src/rpc/virnetserver.c
### fix missing geteuid in src/util/virauth.c (version >= 0.9.11 <= 1.0.1)
##mv src/util/virauth.c src/util/virauth.c.bak
##echo "#define geteuid() 0" > src/util/virauth.c
##cat src/util/virauth.c.bak >> src/util/virauth.c
### fix missing geteuid in src/conf/virconsole.c (version >= 0.9.11 <= 1.0.1)
##mv src/conf/virconsole.c src/conf/virconsole.c.bak
##echo "#define geteuid() 0" > src/conf/virconsole.c
##cat src/conf/virconsole.c.bak >> src/conf/virconsole.c
## fix missing ATRRIBUTE_UNUSED in src/util/virutil.c (version >= 1.0.2)
#mv src/util/virutil.c src/util/virutil.c.bak
#echo "#define ATRRIBUTE_UNUSED" > src/util/virutil.c
#cat src/util/virutil.c.bak >> src/util/virutil.c
### fix for newer yajl in src/util/json.c (version >= 0.9.0 <= 0.9.3)
##patch -ulbf src/util/json.c << EOF
##--- src/util/json.c  2011-03-24 08:10:26 +0100
##+++ src/util/json.c  2011-07-27 09:29:52 +0200
##@@ -34,2 +34,3 @@
## # include <yajl/yajl_parse.h>
##+# include <yajl/yajl_version.h>
## #endif
##@@ -896,3 +897,5 @@
## {
##+#if YAJL_MAJOR < 2
##     yajl_parser_config cfg = { 1, 1 };
##+#endif
##     yajl_handle hand;
##@@ -903,3 +906,7 @@
##
##+#if YAJL_MAJOR < 2
##     hand = yajl_alloc(&parserCallbacks, &cfg, NULL, &parser);
##+#else
##+    hand = yajl_alloc(&parserCallbacks, NULL, &parser);
##+#endif
##
##@@ -1004,3 +1011,5 @@
## {
##+#if YAJL_MAJOR < 2
##     yajl_gen_config conf = { 0, " " }; /* Turns off pretty printing since QEMUcan't cope */
##+#endif
##     yajl_gen g;
##@@ -1012,3 +1021,7 @@
##
##+#if YAJL_MAJOR < 2
##     g = yajl_gen_alloc(&conf, NULL);
##+#else
##+    g = yajl_gen_alloc(NULL);
##+#endif
##
##EOF
## fix export of missing virNetlinkEventServiceLocalPid (version >= 0.9.12)
#mv src/libvirt.syms src/libvirt.syms.bak
#grep -v virNetlinkEventServiceLocalPid src/libvirt.syms.bak > src/libvirt.syms
## fix missing virThreadCancel (version >= 1.0.4)
#mv src/libvirt_private.syms src/libvirt_private.syms.bak
#grep -v virThreadCancel src/libvirt_private.syms.bak > src/libvirt_private.syms
## fix missing nl_item in gnulib/lib/langinfo.h (version >= 0.10.2)
#patch -ulbf gnulib/lib/langinfo.in.h << EOF
#--- gnulib/lib/langinfo.in.h  2012-04-24 07:18:10 +0200
#+++ gnulib/lib/langinfo.in.h  2012-09-24 23:25:54 +0200
#@@ -160,2 +160,5 @@
# #  if !@HAVE_NL_LANGINFO@
#+#   if defined(__MINGW32__)
#+typedef int nl_item;
#+#   endif
# _GL_FUNCDECL_SYS (nl_langinfo, char *, (nl_item item));
#EOF
## fix missing pthread_sigmask in gnulib/lib/pthread_sigmask.c (version >= 1.2.1)
#patch -ulbf gnulib/lib/pthread_sigmask.c << EOF
#--- gnulib/lib/pthread_sigmask.c  2014-01-08 04:15:00 +0100
#+++ gnulib/lib/pthread_sigmask.c  2014-01-16 20:32:48 +0100
#@@ -32,5 +32,5 @@
#
#+#undef pthread_sigmask
# int
# pthread_sigmask (int how, const sigset_t *new_mask, sigset_t *old_mask)
#-#undef pthread_sigmask
# {
#EOF
## fix redefinition of pthread_sigmask in gnulib/lib/signal.h (version >= 1.2.1)
#patch -ulbf gnulib/lib/signal.h << EOF
#--- gnulib/lib/signal.h  2014-01-17 09:45:58 +0100
#+++ gnulib/lib/signal.h  2014-01-17 10:06:20 +0100
#@@ -450,4 +450,4 @@
# #  if !0
#-_GL_FUNCDECL_SYS (pthread_sigmask, int,
#-                  (int how, const sigset_t *new_mask, sigset_t *old_mask));
#+//_GL_FUNCDECL_SYS (pthread_sigmask, int,
#+//                  (int how, const sigset_t *new_mask, sigset_t *old_mask));
# #  endif
#EOF
## fix missing sleep in examples/domsuspend/suspend.c (version >= 1.2.1)
#mv examples/domsuspend/suspend.c examples/domsuspend/suspend.c.bak
#echo "#define sleep(t) _sleep((t) * 1000)" > examples/domsuspend/suspend.c
#cat examples/domsuspend/suspend.c.bak >> examples/domsuspend/suspend.c
## avoid missing IPV6_V6ONLY in src/util/virportallocator.c (version >= 1.2.2)
#patch -ulbf src/util/virportallocator.c << EOF
#--- src/util/virportallocator - Copy.c  2014-02-21 12:24:40 +0100
#+++ src/util/virportallocator.c 2014-03-04 13:22:34 +0100
#@@ -152,2 +152,3 @@
#
#+#ifdef IPV6_V6ONLY
#     if (ipv6 && setsockopt(fd, IPPROTO_IPV6, IPV6_V6ONLY, (void*)&v6only,
#@@ -158,2 +159,3 @@
#     }
#+#endif
#EOF
## fix missing ssh_userauth_agent in src/rpc/virnetlibsshsession.c (version >= 4.8.0)
#patch -ulbf src/rpc/virnetlibsshsession.c << EOF
#@@ -857,2 +857,3 @@
#             break;
#+#ifndef _WIN32
#         case VIR_NET_LIBSSH_AUTH_AGENT:
#@@ -867,2 +868,3 @@
#             break;
#+#endif
#         case VIR_NET_LIBSSH_AUTH_PRIVKEY:
#EOF
## fix invalid number of parameters in src/util/virprocess.c (version >= 3.0.0)
#if ! ( grep -q builtin $MINGWPREFIX/var/lib/packages/pthreads/version ); then
# mv src/util/virprocess.c src/util/virprocess.c.bak &&
# sed -e "s/\(sched_setscheduler([^,]*,[^,]*\),[^)]*/\1/" src/util/virprocess.c.bak > src/util/virprocess.c
#fi
### don't use langinfo.h (version >= 1.2.7)
##echo "#error langinfo.h should not be used" > langinfo.h
## fix missing folder (version >= 4.6.0)
#mkdir -p src/lib
### fix for using oncrpc instead of portablexdr
##mv configure configure.bak &&
##sed -e "s/-lportablexdr/-loncrpc/g" configure.bak > configure
## skip building docs (version >= 5.9.0)
#cat > Makefile.in << EOF
#clean:
#all:
#install:
#install-strip:
#EOF
#wl-showstatus configure &&
## to do: at least Xen (--with-xen)
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xen --without-qemu --without-openvz --without-vbox --without-lxc --without-uml --without-test --without-libvirtd --with-remote-pid-file=none --with-init-scripts=none --with-depends --without-sasl --without-polkit CFLAGS="-Drestrict=__restrict -DWSAAPI -Dsiginfo_t=int" LDFLAGS="-lintl -lpthread -Wl,--allow-multiple-definition" LIBS="-lws2_32"
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xen --without-qemu --without-openvz --without-vbox --without-lxc --without-uml --without-test --without-libvirtd --with-remote-pid-file=none --with-init-scripts=none --with-depends --without-sasl --without-polkit CFLAGS="-Drestrict=__restrict -DWSAAPI -Dsiginfo_t=int" LDFLAGS="-lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --without-qemu --without-openvz --without-vbox --without-lxc --without-uml --without-test --without-libvirtd --with-remote-pid-file=none --with-init-scripts=none --with-depends --without-sasl --without-polkit CFLAGS="-Drestrict=__restrict -DWSAAPI -Dsiginfo_t=int" LDFLAGS="-lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --without-qemu --without-openvz --without-vbox --without-lxc --without-uml --without-test --without-libvirtd --with-remote-pid-file=none --with-init-scripts=none --with-depends --without-sasl --without-polkit CFLAGS="-Drestrict=__restrict -DWSAAPI" LDFLAGS="-lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" &&
##PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xen --without-qemu --without-openvz --without-vbox --without-lxc --without-uml --without-test --without-libvirtd --with-remote-pid-file=none --with-init-scripts=none --with-depends --without-sasl --without-polkit CFLAGS="-Drestrict=__restrict -DWSAAPI -Dsiginfo_t=int" LDFLAGS="-lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" &&
#####configure: error: You must install python-devel to build Python bindings
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --without-qemu --without-openvz --without-vbox --without-lxc --without-uml --without-test --without-libvirtd --with-remote-pid-file=none --with-init-scripts=none --with-depends --without-sasl --without-polkit CFLAGS="-Drestrict=__restrict -DWSAAPI -Dsiginfo_t=int" LDFLAGS="-lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" &&
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-python --without-xen --with-qemu --without-openvz --with-vbox --with-lxc --with-uml --without-test --without-libvirtd --without-sasl --without-polkit CFLAGS="-Drestrict=__restrict -DWSAAPI" LDFLAGS="-lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" &&
#####configure: error: You must install python-devel to build Python bindings
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --with-qemu --without-openvz --with-vbox --without-lxc --without-uml --without-test --without-libvirtd --with-sasl --without-polkit CFLAGS="-Drestrict=__restrict -DWSAAPI" LDFLAGS="-Wl,--as-needed -lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import -Wl,--as-needed -lsasl2 -lws2_32 -ladvapi32 -lkernel32 -lcrypto" &&
#if ( echo $RUNPLATFORM | grep -qv x86_64 ); then
# ARCHFLAGS="-march=i686"
#else
# ARCHFLAGS=
#fi &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --with-qemu --without-openvz --with-vbox --with-lxc --with-uml --without-test --without-libvirtd --without-sasl --without-polkit CFLAGS="$ARCHFLAGS -Drestrict=__restrict -DWSAAPI" LDFLAGS="-Wl,--as-needed -lws2_32 -lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --with-qemu --without-openvz --with-vbox --with-lxc --with-uml --without-test --without-libvirtd --without-sasl --without-polkit CFLAGS="$ARCHFLAGS -Drestrict=__restrict -DWSAAPI" LDFLAGS="-Wl,--as-needed -lws2_32 -lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" PYTHON=$PYDIR/python.exe &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --with-qemu --without-openvz --with-vbox --with-lxc --with-uml --without-test --without-libvirtd --without-sasl --without-polkit CFLAGS="$ARCHFLAGS -Drestrict=__restrict -DWSAAPI" LDFLAGS="-Wl,--as-needed -lws2_32 -lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" PYTHON=$PY2DIR/python.exe &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --with-qemu --without-openvz --with-vbox --with-lxc --with-uml --without-test --without-libvirtd --without-sasl --without-polkit --without-jansson CFLAGS="$ARCHFLAGS -Drestrict=__restrict -DWSAAPI" LDFLAGS="-Wl,--as-needed -lws2_32 -lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" PYTHON=$PY2DIR/python.exe &&
# echo "#undef HAVE_SYSLOG_H" >> config.h &&
# #cp -u $(which libtool) . &&
# wl-showstatus build-install &&
# ## fix pthread_sigmask issues (version >= 1.2.7)
# #echo "#undef HAVE_PTHREAD_SIGMASK" >> config.h &&
# # force making missing src/libvirt_lxc.def (version >= 1.0.2)
# make -j1 -Csrc libvirt_lxc.def &&
# #( PATH=$PYDIR:$PATH make -j1 install-strip || PATH=$PYDIR:$PATH make -j1 install-strip APIBUILD="python.exe \$(srcdir)/apibuild.py" || PATH=$PYDIR:$PATH make -j1 install-strip POD2MAN="$PERLDIR/bin/perl.exe -x $PERLDIR/bin/pod2man.bat" PYTHON=$PYDIR/python.exe ) &&
# #( PATH=$PY2DIR:$PATH make -j1 install-strip || PATH=$PY2DIR:$PATH make -j1 install-strip APIBUILD="python.exe \$(srcdir)/apibuild.py" || PATH=$PY2DIR:$PATH make -j1 install-strip POD2MAN="$PERLDIR/bin/perl.exe -x $PERLDIR/bin/pod2man.bat" PYTHON=$PY2DIR/python.exe ) &&
# ( PATH=$PY2DIR:$PATH make -j1 install-strip srcdir=$(pwd) || PATH=$PY2DIR:$PATH make -j1 install-strip APIBUILD="python.exe \$(srcdir)/apibuild.py" srcdir=$(pwd) || PATH=$PY2DIR:$PATH make -j1 install-strip POD2MAN="$PERLDIR/bin/perl.exe -x $PERLDIR/bin/pod2man.bat" PYTHON=$PY2DIR/python.exe srcdir=$(pwd) ) &&
# ## manually build Python module (version <= 1.1.4)
# #PATH=$PYDIR:$PATH make -C python libvirtmod.la &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####Traceback (most recent call last):
#####  File "src/virt-manager.py", line 26, in <module>
#####    import libvirt
#####ImportError: No module named libvirt



## fix missing files
#cp gnulib/lib/alloca.in.h gnulib/lib/c++defs.h gnulib/lib/warn-on-use.h gnulib/lib/arg-nonnull.h gnulib/lib/arpa_inet.in.h gnulib/lib/errno.in.h gnulib/lib/fcntl.in.h gnulib/lib/limits.in.h gnulib/lib/locale.in.h gnulib/lib/net_if.in.h gnulib/lib/netdb.in.h gnulib/lib/netinet_in.in.h gnulib/lib/poll.in.h gnulib/lib/pty.in.h gnulib/lib/signal.in.h gnulib/lib/stdio.in.h gnulib/lib/stdint.in.h gnulib/lib/_Noreturn.h gnulib/lib/stdlib.in.h gnulib/lib/string.in.h gnulib/lib/sys_ioctl.in.h gnulib/lib/sys_select.in.h gnulib/lib/sys_socket.in.h gnulib/lib/sys_stat.in.h gnulib/lib/sys_time.in.h gnulib/lib/sys_types.in.h gnulib/lib/sys_uio.in.h gnulib/lib/sys_utsname.in.h gnulib/lib/sys_wait.in.h gnulib/lib/termios.in.h gnulib/lib/time.in.h gnulib/lib/unistd.in.h gnulib/lib/unitypes.in.h gnulib/lib/uniwidth.in.h gnulib/lib/wchar.in.h gnulib/lib/wctype.in.h gnulib/lib/streq.h include/libvirt/libvirt-common.h.in .
#mkdir -p keycodemapdb/data keycodemapdb/tools rpc remote
#cp src/keycodemapdb/data/keymaps.csv keycodemapdb/data/
#cp src/keycodemapdb/tools/keymap-gen keycodemapdb/tools/
#cp src/rpc/gendispatch.pl rpc/
#cp src/remote/*.x remote/
#mkdir -p src/logging; touch src/logging/log_protocol.h src/logging/log_protocol.c
#mkdir -p logging; touch logging/log_protocol.x
#mkdir -p src/locking; touch src/locking/lock_protocol.h src/locking/lock_protocol.c
#mkdir -p locking; touch locking/lock_protocol.x
#mkdir -p src/admin; touch src/admin/admin_protocol.h src/admin/admin_protocol.c
#mkdir -p admin; touch admin/admin_protocol.x
#mkdir -p src/admin; touch src/rpc/virnetprotocol.h src/rpc/virnetprotocol.c
#mkdir -p rpc; touch rpc/virnetprotocol.x
#mkdir -p src/admin; touch src/rpc/virkeepaliveprotocol.h src/rpc/virkeepaliveprotocol.c
#mkdir -p rpc; touch rpc/virkeepaliveprotocol.x
#mkdir -p esx; touch esx/esx_vi_generator.input
#mkdir -p hyperv; touch hyperv/hyperv_wmi_generator.input
#mkdir -p src/lxc; touch src/lxc/lxc_monitor_protocol.h src/lxc/lxc_monitor_protocol.c
#mkdir -p lxc; touch lxc/lxc_monitor_protocol.x
#mkdir -p src/lxc; touch src/remote/remote_protocol.h src/remote/remote_protocol.c
#mkdir -p remote; touch remote/remote_protocol.x
#mkdir -p src/lxc; touch src/remote/lxc_protocol.h src/remote/lxc_protocol.c
#mkdir -p remote; touch remote/lxc_protocol.x
#mkdir -p src/lxc; touch src/remote/qemu_protocol.h src/remote/qemu_protocol.c
#mkdir -p remote; touch remote/qemu_protocol.x
#touch src/logging/log_protocol.x
#cp src/*.syms .
#cp build/src/*.syms .
#cp build/src/admin/*.syms admin/
#mkdir -p util; cp src/util/glibcompat.h src/util/glibcompat.c util/
#mkdir -p util; cp src/util/viralloc.h src/util/viralloc.c util/
#cp src/internal.h src/util/virlog.h src/util/virbuffer.h .
## fix missing VIR_NET_MESSAGE_LEGACY_PAYLOAD_MAX in src/remote/remote_daemon_stream.c (version >= 6.1.0)
#sed -i.bak -e "s/VIR_NET_MESSAGE_LEGACY_PAYLOAD_MAX/$(sed -ne "s/^.*VIR_NET_MESSAGE_LEGACY_PAYLOAD_MAX\s*=\s*\([0-9]*\).*$/\1/p" src/rpc/virnetprotocol.x)/g" src/remote/remote_daemon_stream.c
#mkdir -p build &&
#wl-showstatus configure &&
# cd build &&
# PATH=$MINGWPREFIX/python/Scripts:$PATH ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --with-qemu --without-openvz --with-vbox --with-lxc --with-uml --without-test --without-libvirtd --without-sasl --without-polkit --without-jansson CFLAGS="$ARCHFLAGS -Drestrict=__restrict -DWSAAPI" LDFLAGS="-Wl,--as-needed -lws2_32 -lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" PYTHON=$PY2DIR/python.exe CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
# echo "#undef HAVE_SYSLOG_H" >> config.h &&
# cd .. &&
# make -j1 -Cbuild/src libvirt_lxc.def &&
# PATH=$PY2DIR:$PATH make -j1 -Cbuild install-strip srcdir=$(pwd) &&
#    echo OK



#export NAME="libvirt"
#export STATUS=
#export URL=http://www.libvirt.org/
#export BASENAME=libvirt
#export DESCRIPTION=
#export CATEGORY=virtualization
#export TYPE=library
#export VERSION=3.9.0
#export VERSIONDATE=20171103
#wl-showstatus --package-version
#export DEPENDANCIES=gettext,readline,libxen,gnutls,libcurl,libgcrypt,portablexdr,libssh,libssh2,libxml2,libyajl,pthreads,dbus
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL2
#export DOWNLOADURL="http://libvirt.org/sources/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://libvirt.org/sources/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix redefinition of struct iovec (already defined in cyrus-sasl's sasl.h) in gnulib/lib/sys_uio.in.h (version >= 4.2.0)
#patch -ulbf gnulib/lib/sys_uio.in.h << EOF
#@@ -27,2 +27,5 @@
# # include <sys/types.h>
#+# ifdef __MINGW32__
#+#  include <sasl/sasl.h>
#+# endif
#
#@@ -45,3 +48,3 @@
#
#-# if !GNULIB_defined_struct_iovec
#+# if !GNULIB_defined_struct_iovec && !defined(__MINGW32__)
# /* All known platforms that lack <sys/uio.h> also lack any declaration
#EOF
## fix invalid number of parameters in src/util/virprocess.c (version >= 3.0.0)
#if ! ( grep -q builtin $MINGWPREFIX/var/lib/packages/pthreads/version ); then
# mv src/util/virprocess.c src/util/virprocess.c.bak &&
# sed -e "s/\(sched_setscheduler([^,]*,[^,]*\),[^)]*/\1/" src/util/virprocess.c.bak > src/util/virprocess.c
#fi
#wl-showstatus configure &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --with-qemu --without-openvz --with-vbox --with-lxc --with-uml --without-test --without-libvirtd --without-sasl --without-udev --without-polkit CFLAGS="$ARCHFLAGS -Drestrict=__restrict -DWSAAPI" LDFLAGS="-Wl,--as-needed -lws2_32 -lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" PYTHON=$PY2DIR/python.exe &&
# echo "#undef HAVE_SYSLOG_H" >> config.h &&
# wl-showstatus build-install &&
# #PATH=$PY2DIR:$PATH make install-strip POD2MAN="$PERLDIR/bin/perl.exe $PERLDIR/bin/pod2man" &&
# ( PATH=$PY2DIR:$PATH make install-strip POD2MAN="$PERLDIR/bin/perl.exe $PERLDIR/bin/pod2man" || PATH=$PY2DIR:$PATH make install-strip POD2MAN="$PERLDIR/bin/perl.exe -x $PERLDIR/bin/pod2man.bat" PYTHON=$PY2DIR/python.exe ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="libvirt"
export STATUS=
export URL=http://www.libvirt.org/
export BASENAME=libvirt
export DESCRIPTION=
export CATEGORY=virtualization
export TYPE=library
export VERSION=4.9.0
export VERSIONDATE=20200609
wl-showstatus --package-version
export DEPENDANCIES=gettext,readline,libxen,gnutls,libcurl,libgcrypt,portablexdr,libssh2,libxml2,libyajl,pthreads
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL2
export DOWNLOADURL="http://libvirt.org/sources/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://libvirt.org/sources/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix redefinition of struct iovec (already defined in cyrus-sasl's sasl.h) in gnulib/lib/sys_uio.in.h (version >= 4.2.0)
patch -ulbf gnulib/lib/sys_uio.in.h << EOF
@@ -27,2 +27,5 @@
 # include <sys/types.h>
+# ifdef __MINGW32__
+#  include <sasl/sasl.h>
+# endif

@@ -45,3 +48,3 @@

-# if !GNULIB_defined_struct_iovec
+# if !GNULIB_defined_struct_iovec && !defined(__MINGW32__)
 /* All known platforms that lack <sys/uio.h> also lack any declaration
EOF
# fix redefinition of struct pollfd in gnulib/lib/poll.h (version >= 4.9.0)
sed -i.bak -e "s?^struct pollfd?#include <winsock2.h>\nstruct pollfd_DUMMY?" gnulib/lib/poll.in.h
# fix missing pod2man (version >= 4.9.0)
sed -i.bak -e "s?\(POD2MAN\s*=\s*\)pod2man\b?\1$PERLDIR/bin/perl.exe $PERLDIR/bin/pod2man.bat?" src/Makefile.in tools/Makefile.in
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-python --without-xen --with-qemu --without-openvz --with-vbox --with-lxc --with-uml --without-test --without-libvirtd --with-sasl --without-polkit --without-udev CFLAGS="$ARCHFLAGS -Drestrict=__restrict -DWSAAPI" LDFLAGS="-Wl,--as-needed -lws2_32 -lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" PYTHON=$PY2DIR/python.exe &&
 echo "#undef HAVE_SYSLOG_H" >> config.h &&
 wl-showstatus build-install &&
 #PATH=$PY2DIR:$PATH make install-strip POD2MAN="$PERLDIR/bin/perl.exe $PERLDIR/bin/pod2man" PYTHON=$PY2DIR/python.exe &&
 ( PATH=$PY2DIR:$PATH make install-strip POD2MAN="$PERLDIR/bin/perl.exe $PERLDIR/bin/pod2man" PYTHON=$PY2DIR/python.exe || PATH=$PY2DIR:$PATH make install-strip POD2MAN="$PERLDIR/bin/perl.exe -x $PERLDIR/bin/pod2man.bat" PYTHON=$PY2DIR/python.exe ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION









#gnulib/lib/getaddrinfo.h
## define EAI_IDN_ENCODE-105
#
## define EAI_IDN_ENCODE -105
#
#
#gnulib/lib/getaddrinfo.c
#DWORD -> uint32_t
#getnameinfo -> _getnameinfo
#
#
## fix for missing definition of u_quad_t
#cat >> config.h << EOF
##ifndef QUAD_T_DEFINED
## ifdef __i386__
#typedef long long           quad_t;
#typedef unsigned long long  u_quad_t;
## elif defined(__x86_64__) || defined(__ia64__)
#typedef long                quad_t;
#typedef unsigned long       u_quad_t;
## endif
## define QUAD_T_DEFINED
##endif
#EOF
#
#
#
#
#gnulib/lib/stdio.h
##if defined __need_FILE || defined __need___FILE
#
##if 0
#
#
#
#
#
#
#
#
#
#
#
#
#
#
##### src/storage_driver.c   TO DO: determine Windows user home directory
#
#
#
#cd python
#
#mv Makefile Makefile.bak
#sed -e "s?^\(PYTHON_INCLUDES *= *.*\)?\1$PYDIR/include?; s?^\(PYTHON_SITE_PACKAGES *= *.*\)?\1$PYDIR/Lib/site-packages?" Makefile.bak > Makefile
#
##echo "int main (int argc, char** argv) { return 0; }" >> libvir.c 
##echo "void initlibvirt () { initlibvirtmod(); }" >> libvir.c 
#
#$PYDIR/python.exe generator.py
#make libvirtmod_la-libvir.lo libvirtmod_la-types.lo libvirtmod_la-libvirt-py.lo
#
## use SWIG to create Python wrapper
#cat > libvirtmod.i << EOF
#%module libvirtmod
#%{
##include "../include/libvirt/libvirt.h"
#%}
#EOF
#sed -e "s/^\(.*libvirt.*\)$/extern \1/" libvirt-py.h >> libvirtmod.i
#../../swigwin-1.3.33/swig -python -I../../swigwin-1.3.33/Lib -I../../swigwin-1.3.33/Lib/python/ libvirtmod.i 
#
## to do: first uncomment some things in Makefile
###make libvirtmod.la
####ld -o test.dll .libs/libvirtmod_la-libvir.o libvirtmod_la-libvirt-py.o libvirtmod_la-types.o ../src/.libs/libvirt.dll.a $PYDIR/libs/libpython24.a -L$MINGWPREFIX/lib -lglib-2.0 -lmsvcrt
###ld -o libvirtmod.dll .libs/libvirtmod.a ../src/.libs/libvirt.dll.a $PYDIR/libs/libpython24.a
##/bin/sh ../libtool --mode=link --tag=CC gcc -no-undefined -o libvirtmod.dll libvirtmod_la-libvir.lo libvirtmod_la-types.lo libvirtmod_la-libvirt-py.lo -lportablexdr -lws2_32 -L$PYDIR/libs -lpython24 -L../src/.libs/ -lvirt
##/bin/sh ../libtool --mode=link --tag=CC gcc -no-undefined -module libvirt_wrap.c -I$PYDIR/include -o _libvirt.dll libvirtmod_la-libvir.lo libvirtmod_la-types.lo libvirtmod_la-libvirt-py.lo -lportablexdr -lws2_32 -L$PYDIR/libs -lpython24 -L../src/.libs/ -lvirt -Wl,--export-all-symbols
#
###gcc -shared -o libvirtmod.dll -Wl,--out-implib,libvirtmod_la-libvir.o,libvirtmod_la-types.o,libvirtmod_la-libvirt-py.o -lportablexdr -lws2_32 -L$PYDIR/libs -lpython24 -L../src/.libs/ -lvirt
#gcc -shared libvirtmod_wrap.c libvirtmod_la-libvir.o libvirtmod_la-types.o libvirtmod_la-libvirt-py.o -lportablexdr -lws2_32 -I$PYDIR/include -L$PYDIR/libs -lpython24 -L../src/.libs/ -lvirt -Wl,--export-all-symbols -o _libvirtmod.dll
#
#
#cp ../src/.libs/libvirt-0.dll .
#$PYDIR/python.exe -c "import libvirt"
#
#cp libvirt.py libvirtmod.py _libvirtmod.dll $PYDIR/Lib/site-packages
#
#cd ..
#
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION
#cd ..



#export NAME="libvirt"
#export STATUS=
#export URL=http://www.libvirt.org/
#export BASENAME=libvirt
#export DESCRIPTION="toolkit to manage virtualization platforms"
#export CATEGORY=virtualization
#export TYPE=library
##export VERSION=6.1.0
##export VERSIONDATE=20200303
##export VERSION=6.2.0
##export VERSIONDATE=20200403
##export VERSION=6.4.0
##export VERSIONDATE=20200610
##export VERSION=6.5.0
##export VERSIONDATE=20200703
##export VERSION=6.6.0
##export VERSIONDATE=20200803
##export VERSION=6.7.0
##export VERSIONDATE=20200901
##export VERSION=6.8.0
##export VERSIONDATE=20201001
##export VERSION=6.9.0
##export VERSIONDATE=20201102
#export VERSION=6.10.0
#export VERSIONDATE=20201201
##export VERSION=7.0.0
##export VERSIONDATE=20210115
##wl-showstatus --package-version
##export DEPENDANCIES=gettext,readline,libxen,gnutls,libcurl,libgcrypt,portablexdr,libssh2,libxml2,libyajl,pthreads
#export DEPENDANCIES=gettext,readline,libxen,gnutls,libcurl,libgcrypt,portablexdr,libssh2,libxml2,libyajl,pthreads,mman-win32
#export OPTIONALDEPENDANCIES=
##export OPTIONALDEPENDANCIES=cyrus-sasl
#export BUILDDEPENDANCIES=docutils
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL2
#export DOWNLOADURL="http://libvirt.org/sources/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://libvirt.org/sources/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://libvirt.org/sources/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix missing VIR_NET_MESSAGE_LEGACY_PAYLOAD_MAX in src/remote/remote_daemon_stream.c (version >= 6.1.0)
#sed -i.bak -e "s/VIR_NET_MESSAGE_LEGACY_PAYLOAD_MAX/$(sed -ne "s/^.*VIR_NET_MESSAGE_LEGACY_PAYLOAD_MAX\s*=\s*\([0-9]*\).*$/\1/p" src/rpc/virnetprotocol.x)/g" src/remote/remote_daemon_stream.c
## fix missing VIR_LOG_MANAGER_PROTOCOL_PROGRAM_VERSION in src/logging/log_daemon.c and src/logging/log_manager.c (version >= 6.1.0)
#sed -i.bak -e "s/VIR_LOG_MANAGER_PROTOCOL_PROGRAM_VERSION/$(sed -ne "s/^.*VIR_LOG_MANAGER_PROTOCOL_PROGRAM_VERSION\s*=\s*\([x0-9]*\).*$/\1/p" src/logging/log_protocol.x)/g" src/logging/log_daemon.c src/logging/log_manager.c
### fix missing VIR_NET_MESSAGE_LEGACY_PAYLOAD_MAX in src/libvirt-stream.c (version >= 6.2.0)
##sed -i.bak -e "s/VIR_NET_MESSAGE_LEGACY_PAYLOAD_MAX/$(sed -ne "s/^.*VIR_NET_MESSAGE_LEGACY_PAYLOAD_MAX\s*=\s*\([0-9]*\).*$/\1/p" src/rpc/virnetprotocol.x)/g" src/libvirt-stream.c
### fix missing libvirt-common.h.in (version >= 6.2.0)
##touch libvirt-common.h.in
## fix src/rpc/virnetmessage.h (version >= 6.2.0)
#patch -ulbf src/rpc/virnetmessage.h << EOF
#@@ -40,3 +40,3 @@
#
#-    virNetMessageHeader header;
#+    virNetMessageHeaderPtr header;
#
#EOF
## fix missing python3
#sed -i.bak -e "s?\(#\!/usr/bin/env python\)3?\1?" scripts/*.py tests/cputestdata/*.py
#sed -i.bak -e "s/python3/python/g" configure
#wl-showstatus configure &&
# mkdir -p build &&
# cd build &&
# PATH=$MINGWPREFIX/python/Scripts:$PYDIR:$PATH ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-static --with-qemu --without-openvz --with-vbox --with-lxc --without-libvirtd --with-sasl --without-udev --with-init-script=none --without-polkit --without-apparmor --disable-expensive-tests --without-test --with-test-suite CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
# #CFLAGS="$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo "-march=i686"; fi) -Drestrict=__restrict -DWSAAPI" LDFLAGS="-Wl,--as-needed -lws2_32 -lintl -lpthread -Wl,--allow-multiple-definition -Wl,--enable-auto-import" PYTHON=$PY2DIR/python.exe &&
# echo "#undef HAVE_SYSLOG_H" >> config.h &&
# cd .. &&
# wl-showstatus build &&
# make -Cbuild &&
# wl-showstatus build-install &&
# make -Cbuild install-strip &&
#    echo OK



## fix missing files
#mkdir -p winfix
#touch winfix/grp.h
## fix missing python3
#sed -i.bak -e "s/python3/python/" configure $(grep -l python3 $(find scripts tests/cputestdata -name '*.py')) src/keycodemapdb/tools/keymap-gen tests/virsh-auth tests/cputestdata/cpu-gather.sh
#mkdir -p build_win &&
# wl-showstatus configure &&
# cd build_win &&
# PATH=$MINGWPREFIX/python/Scripts:$PYDIR:$PATH ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-static --without-sasl --without-polkit --without-libxl --without-qemu --without-lxc --without-openvz --without-libvirtd --without-dbus --without-remote --with-test-suite CFLAGS="-I$(pwd)/../winfix" &&
# echo "#undef HAVE_SYSLOG_H" >> config.h &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_win install-strip &&
#    echo OK



#make srcdir=$(pwd) SED=$(which sed.exe) all



#export NAME="libvirt"
#export STATUS=
#export URL=http://www.libvirt.org/
#export BASENAME=libvirt
#export DESCRIPTION="toolkit to manage virtualization platforms"
#export CATEGORY=virtualization
#export TYPE=library
##export VERSION=7.0.0
##export VERSIONDATE=20210115
##export VERSION=7.1.0
##export VERSIONDATE=20210301
##export VERSION=7.2.0
##export VERSIONDATE=20210401
##export VERSION=7.3.0
##export VERSIONDATE=20210503
##export VERSION=7.4.0
##export VERSIONDATE=20210601
##export VERSION=7.5.0
##export VERSIONDATE=20210702
##export VERSION=7.6.0
##export VERSIONDATE=20210802
##export VERSION=7.7.0
##export VERSIONDATE=20210901
##export VERSION=7.8.0
##export VERSIONDATE=20211001
##export VERSION=7.9.0
##export VERSIONDATE=20211101
##export VERSION=7.10.0
##export VERSIONDATE=20211201
##export VERSION=8.0.0
##export VERSIONDATE=20220114
#export VERSION=8.1.0
#export VERSIONDATE=20220301
#wl-showstatus --package-version
#export DEPENDANCIES=gettext,readline,libxen,gnutls,libcurl,libgcrypt,portablexdr,libssh2,libxml2,libyajl,pthreads,mman-win32
#export OPTIONALDEPENDANCIES=
##export OPTIONALDEPENDANCIES=cyrus-sasl
#export BUILDDEPENDANCIES=docutils
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL2
#export DOWNLOADURL="https://libvirt.org/sources/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://libvirt.org/sources/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix missing virNetMessageHeader in src/rpc/virnetmessage.h (version >= 7.0.0)
#patch -ulbf src/rpc/virnetmessage.h << EOF
#@@ -40,3 +40,3 @@
#
#-    virNetMessageHeader header;
#+    struct virNetMessageHeader header;
#
#EOF
## fix missing python3
#sed -i.bak "s/python3/python/g" $(grep -l python3 $(find -name meson.build))
## fix missing rst2html5 in meson.build (version >= 8.0.0)
#patch -ulbf meson.build << EOF
#@@ -837,5 +837,2 @@
# rst2html5_version = rst2html5_version.stdout().split(' ')
#-if rst2html5_version[1] != '(Docutils'
#-  error('Please uninstall the rst2html5 package and install the docutils package')
#-endif
#
#EOF
#mkdir -p build_both &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib PATH=$PYDIR:$MINGWPREFIX/python/Scripts:$PATH PYTHONIOENCODING=utf-8 $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dno_git=true -Ddriver_secrets=enabled -Ddriver_test=enabled -Ddriver_interface=disabled -Ddriver_libvirtd=disabled -Ddriver_qemu=disabled -Ddriver_bhyve=disabled -Ddriver_esx=disabled -Ddriver_hyperv=disabled -Ddriver_libxl=disabled -Ddriver_lxc=disabled -Ddriver_openvz=disabled -Ddriver_vbox=disabled -Ddriver_vmware=disabled -Ddriver_vz=disabled -Dapparmor=disabled -Dbash_completion=disabled -Dblkid=disabled -Dlibpcap=disabled -Dnetcf=disabled -Dopenwsman=disabled -Dfuse=disabled -Dglusterfs=disabled -Dlibiscsi=disabled -Dudev=disabled -Dsysctl_config=disabled -Ddtrace=disabled -Dselinux=disabled -Dsecdriver_selinux=disabled -Dsecdriver_apparmor=disabled -Dpolkit=disabled -Dpm_utils=disabled -Dfirewalld=disabled -Dfirewalld_zone=disabled -Dnumad=disabled -Dnumactl=disabled -Dtest_coverage=false -Ddocs=disabled -Dtests=disabled -Dc_args="-I$MINGWPREFIX/include/libdl-win32" . build_both &&
# #-Drst2html5_prog="$PYDIR/python.exe $MINGWPREFIX/python/Scripts/rst2html5.py"
# #-Ddriver_qemu=enabled
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## fix Python path issues in meson_exe
# #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
# ## fix executing shell scripts
# #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
# # avoid backslashes in paths (version >= 7.0.0)
# sed -i.bak2 -e "s?\(-D[^ ]*=[^ ]*\)$(cygpath -w $(pwd)|sed -e 's?\\?&&&&?g')\\\\\\\\\([^\\]*\)\\\\\\\\\([^\\]*\)\\\\\\\\?\1/$(pwd)/\2/\3/?g; s?\(-D[^ ]*=[^ ]*\)$(cygpath -w $(pwd)|sed -e 's?\\?&&&&?g')\\\\\\\\\([^\\]*\)\\\\\\\\?\1/$(pwd)/\2/?g" build_both/build.ninja &&
# # fix duplicate python invokations (version >= 7.0.0)
# sed -i.bak3 -e "s?[^ ]*python\.EXE\"\s\([^ ]*python\(\.exe\)*\"*\)?\1?g" build_both/build.ninja &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib PYTHONIOENCODING=utf-8 ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'
