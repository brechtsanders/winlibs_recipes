export NAME="Served"
export STATUS=
export URL=https://github.com/datasift/served
export BASENAME=served
export DESCRIPTION="Served is a C++ library for building high performance RESTful web servers. Served builds upon Boost.ASIO to provide a simple API for developers to create HTTP services in C++."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.4.3
#export VERSIONDATE=20171026
#export VERSION=1.4.4
#export VERSIONDATE=20180628
#export VERSION=1.5.0
#export VERSIONDATE=20181108
#export VERSION=1.5.1
#export VERSIONDATE=20190212
#export VERSION=1.5.2
#export VERSIONDATE=20190315
export VERSION=1.6.0
export VERSIONDATE=20190806
wl-showstatus --package-version
export DEPENDENCIES=pthreads,re2,boost
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/datasift/served/releases"
export DOWNLOADURL="https://github.com/datasift/served/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/datasift/served/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/datasift/served/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix redefinition of DELETE in src/served/methods.hpp
mv src/served/methods.hpp src/served/methods.hpp.bak &&
echo "#undef DELETE" > src/served/methods.hpp &&
cat src/served/methods.hpp.bak >> src/served/methods.hpp
# fix redefinition of ERROR in src/served/request_parser.hpp
mv src/served/request_parser.hpp src/served/request_parser.hpp.bak &&
echo "#undef ERROR" > src/served/request_parser.hpp &&
cat src/served/request_parser.hpp.bak >> src/served/request_parser.hpp
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSERVED_BUILD_STATIC:BOOL=ON -DRE2_INCLUDE_DIR:PATH=$MINGWPREFIX/include/re2 -DRE2_LIBRARY:STRING=-lre2 -DSERVED_BUILD_TESTS:BOOL=OFF -DSERVED_BUILD_EXAMPLES:BOOL=OFF -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_static &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32 -lmswsock/" build_static/build.ninja &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DSERVED_BUILD_STATIC:BOOL=OFF -DRE2_INCLUDE_DIR:PATH=$MINGWPREFIX/include/re2 -DRE2_LIBRARY:STRING=-lre2 -DSERVED_BUILD_TESTS:BOOL=OFF -DSERVED_BUILD_EXAMPLES:BOOL=OFF -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_shared &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32 -lmswsock/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



