export NAME="mruby"
export STATUS=
export URL=https://mruby.org/
export BASENAME=mruby
export DESCRIPTION="mruby is the lightweight implementation of the Ruby language complying with part of the ISO standard. mruby can be linked and embedded within your application."
export CATEGORY=development
export TYPE=application,library
#export VERSION=1.2.0
#export VERSIONDATE=20160215
#export VERSION=1.3.0
#export VERSIONDATE=20170704
#export VERSION=1.4.0
#export VERSIONDATE=20180116
#export VERSION=1.4.1
#export VERSIONDATE=20180427
#export VERSION=2.0.0
#export VERSIONDATE=20181211
#export VERSION=2.0.1
#export VERSIONDATE=20190404
#export VERSION=2.1.0
#export VERSIONDATE=20191119
####src/vm.c:359:1: internal compiler error: SSA corruption
#export VERSION=2.1.1
#export VERSIONDATE=20200604
####Gemfile not found
#export VERSION=2.1.2
#export VERSIONDATE=20200806
#export VERSION=3.0.0
#export VERSIONDATE=20210306
export VERSION=3.1.0
export VERSIONDATE=20220512
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=ruby
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LEGAL
export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/mruby/mruby/releases"
export DOWNLOADURL="https://github.com/mruby/mruby/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/mruby/mruby/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/mruby/mruby/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus build &&
 make &&
 #make test &&
 wl-showstatus install &&
 rm -f build/host/LEGAL &&
 rm -rf build/host/src &&
 mkdir -p $INSTALLPREFIX/include &&
 cp -rf include/* $INSTALLPREFIX/include &&
 cp -rf build/host/* $INSTALLPREFIX/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



