export NAME="AppStream-Glib"
export STATUS=
export URL=http://people.freedesktop.org/~hughsient/appstream-glib/
export BASENAME=appstream-glib
export DESCRIPTION="This library provides GObjects and helper methods to make it easy to read and write AppStream metadata. It also provides a simple DOM implementation that makes it easy to edit nodes and convert to and from the standardized XML representation."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=0.2.7
#export VERSIONDATE=20141111
#export VERSION=0.2.8
#export VERSIONDATE=20141212
#export VERSION=0.3.0
#export VERSIONDATE=20140921
####libappstream-glib/as-app.c:37:21: fatal error: fnmatch.h: No such file or directory
#export VERSION=0.3.1
#export VERSIONDATE=20141021
#export VERSION=0.3.2
#export VERSIONDATE=20141105
#export VERSION=0.3.3
#export VERSIONDATE=20141125
#export VERSION=0.3.4
#export VERSIONDATE=20150117
#export VERSION=0.3.5
#export VERSIONDATE=20150311
####libappstream-builder/plugins/.libs/libasb_plugin_absorb_la-asb-plugin-absorb.o:asb-plugin-absorb.c:(.text+0x5f): undefined reference to `as_app_get_type'
#export DEPENDANCIES=
#export VERSION=0.3.6
#export VERSIONDATE=20150330
#export VERSION=0.4.0
#export VERSIONDATE=20150526
####libappstream-builder/plugins/asb-plugin-absorb.c:(.text+0x177): undefined reference to `asb_app_get_type'
#export VERSION=0.4.1
#export VERSIONDATE=20150721
export VERSION=0.5.0
export VERSIONDATE=20150812
####libappstream-builder/asb-context.c:(.text+0x1cd): undefined reference to `realpath'
#export VERSION=0.5.1
#export VERSIONDATE=20150915
####Requested 'glib-2.0 >= 2.45.8' but version of GLib is 2.44.1
#export VERSION=0.5.2
#export VERSIONDATE=20151031
#export VERSION=0.5.3
#export VERSIONDATE=20151106
####libappstream-builder/plugins/.libs/libasb_plugin_absorb_la-asb-plugin-absorb.o:asb-plugin-absorb.c:(.text+0x41): undefined reference to `asb_app_get_type'
#export VERSION=0.5.4
#export VERSIONDATE=20151119
#export VERSION=0.5.5
#export VERSIONDATE=20151218
#export VERSION=0.5.6
#export VERSIONDATE=20160115
#export VERSION=0.5.7
#export VERSIONDATE=20160122
#export VERSION=0.5.8
#export VERSIONDATE=20160202
#export VERSION=0.5.9
#export VERSIONDATE=20160213
#export VERSION=0.5.10
#export VERSIONDATE=20160227
#export VERSION=0.5.11
#export VERSIONDATE=20160308
#export VERSION=0.5.12
#export VERSIONDATE=20160406
#export VERSION=0.5.13
#export VERSIONDATE=20160407
#export VERSION=0.5.14
#export VERSIONDATE=20160420
#export VERSION=0.5.15
#export VERSIONDATE=20160523
#export VERSION=0.5.16
#export VERSIONDATE=20160613
#export VERSION=0.5.17
#export VERSIONDATE=20160713
#export VERSION=0.5.18
#export VERSIONDATE=20160811
#export VERSION=0.5.19
#export VERSIONDATE=20170117
#export VERSION=0.6.1
#export VERSIONDATE=20160813
#export VERSION=0.6.2
#export VERSIONDATE=20160830
#export VERSION=0.6.3
#export VERSIONDATE=20160907
#export VERSION=0.6.4
#export VERSIONDATE=20161013
#export VERSION=0.6.5
#export VERSIONDATE=20161107
#export VERSION=0.6.5
#export VERSIONDATE=20161216
#export VERSION=0.6.7
#export VERSIONDATE=20170113
#export VERSION=0.6.8
#export VERSIONDATE=20170203
#export VERSION=0.6.9
#export VERSIONDATE=20170228
#export VERSION=0.6.10
#export VERSIONDATE=20170306
#export VERSION=0.6.11
#export VERSIONDATE=20170321
#export VERSION=0.6.12
#export VERSIONDATE=20170412
#export VERSION=0.6.13
#export VERSIONDATE=20170508
####libappstream-glib/as-utils.c:1609:9: error: storage size of 'uu' isn't known
#export VERSION=0.7.0
#export VERSIONDATE=20170623
#export VERSION=0.7.1
#export VERSIONDATE=20170814
#export VERSION=0.7.2
#export VERSIONDATE=20170822
#export VERSION=0.7.3
#export VERSIONDATE=20171024
#export VERSION=0.7.4
#export VERSIONDATE=20171110
#export VERSION=0.7.5
#export VERSIONDATE=20180123
#export VERSION=0.7.6
#export VERSIONDATE=20180209
#export VERSION=0.7.7
#export VERSIONDATE=20180314
#export VERSION=0.7.8
#export VERSIONDATE=20180430
#export VERSION=0.7.9
#export VERSIONDATE=20180604
#export VERSION=0.7.10
#export VERSIONDATE=20180712
#export VERSION=0.7.11
#export VERSIONDATE=20180809
#export VERSION=0.7.12
#export VERSIONDATE=20180813
#export VERSION=0.7.13
#export VERSIONDATE=20180929
#export VERSION=0.7.14
#export VERSIONDATE=20181017
#export VERSION=0.7.15
#export VERSIONDATE=20190301
#export VERSION=0.7.16
#export VERSIONDATE=20191001
#export VERSION=0.7.17
#export VERSIONDATE=20200220
####ERROR: Command 'meson' not found
####Native dependency 'rpm' not found
#export VERSION=0.7.18
#export VERSIONDATE=20200908
#export VERSION=0.8.0
#export VERSIONDATE=20220715
#export VERSION=0.8.1
#export VERSIONDATE=20220810
####libappstream-builder/asb-utils.c:12:10: fatal error: fnmatch.h: No such file or directory
wl-showstatus --package-version
export DEPENDANCIES=gcab,libsoup-2.4,libyaml
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
#export BUILDDEPENDANCIES=meson
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://people.freedesktop.org/~hughsient/appstream-glib/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://people.freedesktop.org/~hughsient/appstream-glib/releases/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
mkdir -p winfix
cat > winfix/fnmatch.h << EOF
#define fnmatch(p,s,f) -1
EOF
#cat > winfix/fnmatch.h << EOF
##include <shlwapi.h>
##define FNM_NOMATCH 1
##define fnmatch(p,s,f) (PathMatchSpec(s,p) ? 0 : FNM_NOMATCH)
#EOF
# fix missing realpath in libappstream-builder/asb-context.c (version >= 0.4.1)
mv libappstream-builder/asb-context.c libappstream-builder/asb-context.c.bak
cat > libappstream-builder/asb-context.c << EOF
#include <ctype.h>
#include <direct.h>
#include <sys/stat.h>
#include <windows.h>

static char* slashify (char* str)
{
  char *p = str;
  while (*p) {
    if (*p == '\\\\')
      *p = '/';
    p++;
  }
  return str;
}

static char* strlower (char* str)
{
  char *p = str;
  while (*p) {
    *p = (char)tolower(*p);
    p++;
  }
  return str;
}

static char* mingw_realpath (const char* name, char* resolved)
{
  char *rpath = NULL;
  if (name == NULL || name[0] == '\\0')
    return NULL;
  if (resolved == NULL) {
    rpath = (char*)malloc(MAX_PATH + 1);
    if (rpath == NULL)
      return NULL;
  } else
    rpath = resolved;
  GetFullPathName(name, MAX_PATH, rpath, NULL);
  strlower(slashify (rpath));
  struct stat st;
  if (stat (rpath, &st) < 0) {
    if (resolved == NULL)
      free (rpath);
    return NULL;
  }
  return rpath;
}

#define realpath(filename,resolved) mingw_realpath(filename, resolved)
EOF
cat libappstream-builder/asb-context.c.bak >> libappstream-builder/asb-context.c
# fix libappstream-glib/as-store-cab.c (version >= 0.5.2)
patch -ulbf libappstream-glib/as-store-cab.c << EOF
--- libappstream-glib/as-store-cab.c  2015-10-16 09:49:14.000000000 +0200
+++ libappstream-glib/as-store-cab.c  2015-10-31 09:40:37.138688400 +0100
@@ -25,3 +25,5 @@
 #include <glib/gstdio.h>
+#ifndef _WIN32
 #include <gio/gunixinputstream.h>
+#endif

@@ -107,3 +109,3 @@
                if (!g_file_get_contents (rel_fn, &data, &len, error))
-                       return NULL;
+                       return FALSE;
                actual = g_compute_checksum_for_data (G_CHECKSUM_SHA1, (guchar *)data, len);
EOF
# fix libappstream-builder/plugins
mv libappstream-builder/plugins/Makefile.in libappstream-builder/plugins/Makefile.in.bak
sed -e "s/^\(GLIB_LIBS = .*\)$/\1 -L..\/..\/libappstream-glib\/.libs -lappstream-glib/" libappstream-builder/plugins/Makefile.in.bak > libappstream-builder/plugins/Makefile.in
# fix missing folders (version >= 0.5.0)
mkdir -p .libs libappstream-builder/.libs
## fix dependancy on gio-unix
#mv configure.ac configure.ac.bak &&
#sed -e "s/gio-unix/gio-windows/g" configure.ac.bak > configure.ac
wl-showstatus configure &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 # fix dependancy on gio-unix
 sed -i.bak -e "s/gio-unix/gio-windows/g" configure &&
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-shared --enable-introspection=no CFLAGS="-I$(pwd)/winfix" &&
 PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no CFLAGS="-I$(pwd)/winfix" &&
 wl-showstatus build-install &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 ( make install-strip || (
  sed -i.bak -e "s?-module -avoid-version?& -L../.libs -lappstream-builder?" libappstream-builder/plugins/Makefile &&
  make install-strip
 )) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



## fix missing gio-unix
#sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
#mkdir -p build_both &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Drpm=false -Dintrospection=false -Dman=false -Dgtk-doc=false -Dc_args="-I$(pwd)/winfix" . build_both &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'

#mkdir -p build_static &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -Drpm=false -Dintrospection=false -Dman=false -Dgtk-doc=false -Dc_args="-I$(pwd)/winfix" . build_static &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_static install &&
#    echo OK && find . -name '*.a'
