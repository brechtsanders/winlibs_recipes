export NAME="ls-qpack"
export STATUS=
export URL=https://github.com/litespeedtech/ls-qpack
export BASENAME=ls-qpack
export DESCRIPTION="QPACK compression library for use with HTTP/3"
export CATEGORY=compression
export TYPE=library
#export VERSION=0.10.0
#export VERSIONDATE=20190929
#export VERSION=0.10.1
#export VERSIONDATE=20191001
#export VERSION=0.10.2
#export VERSIONDATE=20191009
#export VERSION=0.10.3
#export VERSIONDATE=20191019
#export VERSION=0.10.5
#export VERSIONDATE=20191022
#export VERSION=0.10.6
#export VERSIONDATE=20191025
#export VERSION=0.10.7
#export VERSIONDATE=20191030
#export VERSION=0.11.0
#export VERSIONDATE=20191108
#export VERSION=0.11.1
#export VERSIONDATE=20200116
#export VERSION=0.11.2
#export VERSIONDATE=20200117
#export VERSION=0.14.0
#export VERSIONDATE=20200307
#export VERSION=1.0.2
#export VERSIONDATE=20200510
#export VERSION=1.0.3
#export VERSIONDATE=20201015
#export VERSION=2.0.0
#export VERSIONDATE=20200331
#export VERSION=2.0.3
#export VERSIONDATE=20200408
#export VERSION=2.0.4
#export VERSIONDATE=20200409
#export VERSION=2.0.5
#export VERSIONDATE=20200416
#export VERSION=2.1.0
#export VERSIONDATE=20200416
#export VERSION=2.1.1
#export VERSIONDATE=20200423
#export VERSION=2.1.2
#export VERSIONDATE=20200510
#export VERSION=2.2.0
#export VERSIONDATE=20200529
#export VERSION=2.2.1
#export VERSIONDATE=20201015
####lsqpack.c:34:10: fatal error: sys/queue.h: No such file or directory
#export VERSION=2.2.2
#export VERSIONDATE=20211028
#export VERSION=2.2.3
#export VERSIONDATE=20220111
#export VERSION=2.3.0
#export VERSIONDATE=20220506
#export VERSION=2.4.0
#export VERSIONDATE=20220816
#export VERSION=2.5.0
#export VERSIONDATE=20221020
####CMake Error at CMakeLists.txt:60 (MESSAGE): getopt.h was not found
#export VERSION=2.5.1
#export VERSIONDATE=20230105
export VERSION=2.5.2
export VERSIONDATE=20230127
wl-showstatus --package-version
export DEPENDENCIES=sys_queue_h,xxhash
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/litespeedtech/ls-qpack/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/litespeedtech/ls-qpack/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/litespeedtech/ls-qpack/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix using installed xxhash library in CMakeLists.txt (version >= 2.2.1)
patch -ulbf CMakeLists.txt << EOF
@@ -22,6 +22,3 @@

-target_include_directories(ls-qpack PRIVATE deps/xxhash/)
-if(LSQPACK_XXH)
-    target_sources(ls-qpack PRIVATE deps/xxhash/xxhash.c)
-endif()
+target_link_libraries(ls-qpack "-lxxhash")

EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DLSQPACK_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/win32ports/include" -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DLSQPACK_TESTS:BOOL=OFF -DGETOPT_INCLUDE_DIR=$MINGWPREFIX/RUNPLATFORM/include -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/win32ports/include" -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DLSQPACK_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/win32ports/include" -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DLSQPACK_TESTS:BOOL=OFF -DGETOPT_INCLUDE_DIR=$MINGWPREFIX/RUNPLATFORM/include -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/win32ports/include" -S. -Bbuild_shared &&
 wl-showstatus build &&
 ninja -Cbuild_static &&
 wl-showstatus build &&
 ninja -Cbuild_shared &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f ls*.h $INSTALLPREFIX/include/ &&
 cp -f build_static/*.a build_shared/*.dll.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
 strip $INSTALLPREFIX/bin/*.dll &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



