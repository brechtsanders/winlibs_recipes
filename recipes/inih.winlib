export NAME="inih"
export STATUS=
export URL=https://github.com/benhoyt/inih
export BASENAME=inih
export DESCRIPTION="inih (INI Not Invented Here) is a simple .INI file parser written in C. It's only a couple of pages of code, and it was designed to be small and simple, so it's good for embedded systems. It's also more or less compatible with Python's ConfigParser style of .INI files, including RFC 822-style multi-line syntax and name: value entries."
export CATEGORY=configuration,dataprocessing
export TYPE=library
#export VERSION=r33
#export VERSIONDATE=20151229
#export VERSION=r35
#export VERSIONDATE=20160103
#export VERSION=r36
#export VERSIONDATE=20160618
#export VERSION=r37
#export VERSIONDATE=20160913
#export VERSION=r38
#export VERSIONDATE=20161012
#export VERSION=r39
#export VERSIONDATE=20161230
#export VERSION=r40
#export VERSIONDATE=20170601
#export VERSION=r41
#export VERSIONDATE=20180210
#export VERSION=r42
#export VERSIONDATE=20180515
#export VERSION=r43
#export VERSIONDATE=20190412
#export VERSION=r44
#export VERSIONDATE=20190525
#export VERSION=r45
#export VERSIONDATE=20190802
#export VERSION=r46
#export VERSIONDATE=20191006
#export VERSION=r47
#export VERSIONDATE=20191214
#export VERSION=r48
#export VERSIONDATE=20200301
#export VERSION=r49
#export VERSIONDATE=20200422
#export VERSION=r50
#export VERSIONDATE=20200608
#export VERSION=r51
#export VERSIONDATE=20200619
#export VERSION=r52
#export VERSIONDATE=20201013
#export VERSION=r53
#export VERSIONDATE=20210208
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
export VERSION=r54
export VERSIONDATE=20220324
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=meson,ninja
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/benhoyt/inih/releases r"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/benhoyt/inih/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
#wl-showstatus build &&
# gcc -c ini.c -o ini.o &&
# ar cru libinih.a ini.o &&
# g++ -c cpp/INIReader.cpp -o INIReader.o &&
# ar cru libinireader.a INIReader.o &&
# # manually create and install shared libraries
# #echo "LIBRARY inih.dll" > inih.def &&
# #echo "EXPORTS" >> inih.def &&
# #sed -ne "s/^[^ ]* \(ini_[^ ]* *\)(.*/\1/p" ini.h >> inih.def &&
# #dlltool -D inih.dll -l libinih.dll.a -d inih.def libinih.a &&
# #gcc -shared -s -mwindows -def inih.def -o inih.dll libinih.a &&
# ( echo "EXPORTS" && sed -ne "s/^[^ ]* \(ini_[^ ]* *\)(.*/\1/p" ini.h ) > inih.def &&
# gcc -shared -s -mwindows -def inih.def -o inih.dll libinih.a -Wl,--out-implib,libinih.dll.a &&
# ( echo "EXPORTS"; nm -f posix --defined-only -p libinireader.a  | sed -n -e "s/^_*\(_[^_ ]*INIReader[^ ]*\) T .*$/\1/p" ) > inireader.def &&
# #dlltool -D inireader.dll -l libinireader.dll.a -d inireader.def libinireader.a &&
# #g++ -shared -s -mwindows -def inireader.def -o inireader.dll INIReader.o libinireader.a libinih.dll.a &&
# g++ -shared -s -mwindows -def inireader.def -o inireader.dll INIReader.o libinireader.a libinih.dll.a -Wl,--out-implib,libinireader.dll.a &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# cp -f *.h $INSTALLPREFIX/include/ &&
# cp -f *.a $INSTALLPREFIX/lib/ &&
# cp -f *.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -Duse_heap=true -Dallow_realloc=true . build_static &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -Duse_heap=true -Dallow_realloc=true . build_shared &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_static install &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_shared install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



