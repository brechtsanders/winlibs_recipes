export NAME="libLASi"
export STATUS=
export URL=http://unifont.org/lasi/
export BASENAME=liblasi
export DESCRIPTION="libLASi: a library that provides a C++ stream output interface (with operator <<) for creating Postscript documents that can contain characters from any of the scripts and symbol blocks supported in Unicode and by Owen Taylor's Pango layout engine."
export CATEGORY=graphics,fileformat
export TYPE=library
#export VERSION=1.1.0
#export VERSIONDATE=20091214
#export VERSION=1.1.1
#export VERSIONDATE=20110922
####Cannot find library corresponding to linker option -lm
#export VERSION=1.1.2
#export VERSIONDATE=20160105
export VERSION=1.1.3
export VERSIONDATE=20190131
wl-showstatus --package-version
export DEPENDANCIES=pango,glib2,freetype2
export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://sourceforge.net/projects/lasi/files/ libLASi-"
#export DOWNLOADURL="http://sourceforge.net/projects/lasi/files/lasi/ libLASi-"
export DOWNLOADURL="http://sourceforge.net/projects/lasi/files/lasi/ lasi/ %20Source"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/lasi/lasi/$VERSION%20Source/libLASi-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/libLASi-$VERSION.tar.gz
cd libLASi-$VERSION
## fix missing freetype/ftoutln.h (version <= 1.1.1)
#ls -1 $MINGWPREFIX/include/freetype/ftoutln.h &> /dev/null || (
# for F in include/LASi.h src/drawGlyph.cpp src/drawGlyph.h src/glyphMgr.cpp src/glyphMgr.h src/util.cpp src/util.h; do
#  mv $F $F.bak &&
#  sed -e "s?\(#include <freetype\)\(/f.*\.h>\)?\12\2?" $F.bak > $F
# done
#)
# skip making examples (version >= 1.1.3)
sed -i.bak -e "s/add_subdirectory(examples)/#&/" CMakeLists.txt
#make test
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX . &&
# wl-showstatus build-install &&
# PATH=$(pwd)/dll:$PATH make install/strip CXX="g++" &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libLASi-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# PATH=$(pwd)/build_shared/dll:$PATH make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libLASi-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-std=c++11" -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-std=c++11" -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libLASi-$VERSION



