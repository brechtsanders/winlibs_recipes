export NAME="GTK 4"
export STATUS=
export URL=https://www.gtk.org/
#export URL=https://gitlab.gnome.org/GNOME/gtk/
#export URL=https://developer.gnome.org/gtk4/stable/
export BASENAME=gtk4
export DESCRIPTION="GTK is a multi-platform toolkit for creating graphical user interfaces. Offering a complete set of widgets, GTK is suitable for projects ranging from small one-off projects to complete application suites."
export CATEGORY=gui
export TYPE=library
#export VERSION=3.96.0
#export VERSIONDATE=20191230
#export VERSION=3.98.0
#export VERSIONDATE=20200211
#export VERSION=3.99.0
#export VERSIONDATE=20200731
#export VERSION=3.99.5
#export VERSIONDATE=20201208
#export VERSION=4.0.0
#export VERSIONDATE=20201217
#export VERSION=4.0.1
#export VERSIONDATE=20210109
#export VERSION=4.0.2
#export VERSIONDATE=20210119
#export VERSION=4.0.3
#export VERSIONDATE=20210208
#export DEPENDENCIES=gettext,glib2,gobject-introspection,pango,cairo,fribidi,freetype2,gdk-pixbuf,harfbuzz,atk,libepoxy,graphene,ffmpeg4
##export DEPENDENCIES=gettext,glib2,gobject-introspection,pango,cairo,fribidi,freetype2,gdk-pixbuf,harfbuzz,atk,libepoxy,graphene,ffmpeg4,libcloudproviders
#export OPTIONALDEPENDENCIES=xkbcommon
#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=4.1.0
#export VERSIONDATE=20210131
#export VERSION=4.1.1
#export VERSIONDATE=20210224
#export VERSION=4.1.2
#export VERSIONDATE=20210315
#export VERSION=4.2.0
#export VERSIONDATE=20210331
#export VERSION=4.2.1
#export VERSIONDATE=20210504
####undefined reference to `gsk_conic_gradient_node_get_angle'
#export VERSION=4.3.0
#export VERSIONDATE=20210504
####gsk/ngl/fp16.c:157:6: error: 'ifunc' is not supported on this target
#export VERSION=4.3.1
#export VERSIONDATE=20210610
#export VERSION=4.3.2
#export VERSIONDATE=20210725
#export VERSION=4.4.0
#export VERSIONDATE=20210823
#export VERSION=4.4.1
#export VERSIONDATE=20211102
#export VERSION=4.5.0
#export VERSIONDATE=20211030
#export VERSION=4.5.1
#export VERSIONDATE=20211217
#export VERSION=4.6.0
#export VERSIONDATE=20211231
#export VERSION=4.6.1
#export VERSIONDATE=20220212
#export VERSION=4.6.2
#export VERSIONDATE=20220319
#export VERSION=4.6.3
#export VERSIONDATE=20220428
#export VERSION=4.6.4
#export VERSIONDATE=20220514
#export VERSION=4.6.5
#export VERSIONDATE=20220531
#export VERSION=4.6.6
#export VERSIONDATE=20220703
#export VERSION=4.6.7
#export VERSIONDATE=20220818
#export VERSION=4.7.0
#export VERSIONDATE=20220508
#export VERSION=4.7.1
#export VERSIONDATE=20220713
#export VERSION=4.7.2
#export VERSIONDATE=20220812
#export VERSION=4.8.0
#export VERSIONDATE=20220907
#export VERSION=4.8.1
#export VERSIONDATE=20220917
#export VERSION=4.8.2
#export VERSIONDATE=20221025
#export VERSION=4.8.3
#export VERSIONDATE=20221223
#export VERSION=4.9.1
#export VERSIONDATE=20221101
#export VERSION=4.9.2
#export VERSIONDATE=20221226
#export VERSION=4.9.3
#export VERSIONDATE=20230205
#export VERSION=4.9.4
#export VERSIONDATE=20230213
export VERSION=4.10.0
export VERSIONDATE=20230305
wl-showstatus --package-version
export DEPENDENCIES=gettext,glib2,gobject-introspection,pango,cairo,fribidi,freetype2,gdk-pixbuf,harfbuzz,atk,libepoxy,graphene,ffmpeg4,gst-plugins-bad
#export DEPENDENCIES=gettext,glib2,gobject-introspection,pango,cairo,fribidi,freetype2,gdk-pixbuf,harfbuzz,atk,libepoxy,graphene,ffmpeg4,gst-plugins-bad,libcloudproviders
export OPTIONALDEPENDENCIES=xkbcommon
export BUILDDEPENDENCIES=meson,ninja,sassc
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://ftp.gnome.org/pub/gnome/sources/gtk/ gtk-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/gtk/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*/\1/")/gtk-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/gtk-$VERSION.tar.xz
cd gtk-$VERSION
## fix missing semicolon in gtk/gtkimcontextime.c (version = 3.96.0)
#patch -ulbf gtk/gtkimcontextime.c << EOF
#@@ -884 +884 @@
#-    return
#+    return;
#EOF
# fix obsolete find_library() in gdk/broadway/meson.build
sed -i.bak -e "s/find_library/meson.get_compiler('c').find_library/" gdk/broadway/meson.build
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# #PKG_CONFIG= PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -Dwin32-backend=true -Dbroadway-backend=false -Dx11-backend=false -Dwayland-backend=false -Dquartz-backend=false -Dxinerama=no -Dmedia=ffmpeg -Dcloudproviders=true -Dprint-backends=file -Dcolord=no -Dintrospection=false -Dman-pages=false -Dbuild-examples=false -Ddemos=false -Dbuild-tests=false -Dinstall-tests=false . build_static &&
# PKG_CONFIG= PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -Dwin32-backend=true -Dbroadway-backend=false -Dx11-backend=false -Dwayland-backend=false -Dquartz-backend=false -Dxinerama=no -Dmedia=ffmpeg -Dcloudproviders=false -Dprint-backends=file -Dcolord=no -Dintrospection=false -Dman-pages=false -Ddocumentation=false -Dbuild-examples=false -Ddemos=false -Dbuild-tests=false -Dinstall-tests=false . build_static &&
# wl-showstatus configure &&
# #PKG_CONFIG= PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -Dwin32-backend=true -Dbroadway-backend=false -Dx11-backend=false -Dwayland-backend=false -Dquartz-backend=false -Dxinerama=no -Dmedia=ffmpeg -Dcloudproviders=true -Dprint-backends=file -Dcolord=no -Dintrospection=false -Dman-pages=false -Dbuild-examples=false -Ddemos=false -Dbuild-tests=false -Dinstall-tests=false . build_shared &&
# PKG_CONFIG= PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -Dwin32-backend=true -Dbroadway-backend=false -Dx11-backend=false -Dwayland-backend=false -Dquartz-backend=false -Dxinerama=no -Dmedia=ffmpeg -Dcloudproviders=false -Dprint-backends=file -Dcolord=no -Dintrospection=false -Dman-pages=false -Ddocumentation=false -Dbuild-examples=false -Ddemos=false -Dbuild-tests=false -Dinstall-tests=false . build_shared &&
# # fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# sed -i.bak -e "/COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# # fix error calling gtk4-update-icon-cache in build-aux/meson/post-install.py
# sed -i.bak -e "s?\('\)gtk4-update-icon-cache\('\)?\1$(echo $(realpath build_static/gtk/tools/gtk4-update-icon-cache.exe)|sed "s?^/\([a-zA-Z]\)/?\1:/?")\2?" build-aux/meson/post-install.py &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_static install &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_shared install &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gtk-$VERSION
# fix MSVC issue
mkdir -p winfix
cp -rf $PYDIR/lib/distutils winfix/
patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
@@ -85,3 +85,3 @@
         else:
-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
+            return None

EOF
# fix unsupported ifunc in gsk/ngl/fp16.c (version >= 4.3.2)
####gsk/ngl/fp16.c:127:6: error: 'ifunc' is not supported on this target
patch -ulbf gsk/ngl/fp16.c << EOF
@@ -78,3 +78,3 @@

-#if defined(_MSC_VER) && !defined(__clang__)
+#if (defined(_MSC_VER) && !defined(__clang__)) || defined(__MINGW32__)
 /* based on info from https://walbourn.github.io/directxmath-f16c-and-fma/ */
EOF
# fix missing free() in gdk/loaders/gdkjpeg.c (version >= 4.5.0)
mv gdk/loaders/gdkjpeg.c gdk/loaders/gdkjpeg.c.bak &&
echo "#include <stdlib.h>" > gdk/loaders/gdkjpeg.c &&
cat gdk/loaders/gdkjpeg.c.bak >> gdk/loaders/gdkjpeg.c
# fix detection of python3
sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" subprojects/glib/meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dwin32-backend=true -Dbroadway-backend=false -Dx11-backend=false -Dwayland-backend=false -Dquartz-backend=false -Dxinerama=disabled -Dmedia=ffmpeg -Dcloudproviders=disabled -Dprint-backends=file -Dcolord=disabled -Dintrospection=disabled -Dman-pages=false -Ddocumentation=false -Dbuild-examples=false -Ddemos=false -Dbuild-tests=false -Dinstall-tests=false . build_both &&
 #PKG_CONFIG= PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PYTHONPATH=$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dwin32-backend=true -Dbroadway-backend=false -Dx11-backend=false -Dwayland-backend=false -Dquartz-backend=false -Dxinerama=disabled -Dmedia=ffmpeg -Dcloudproviders=disabled -Dprint-backends=file -Dcolord=disabled -Dintrospection=enabled -Dman-pages=false -Ddocumentation=false -Dbuild-examples=false -Ddemos=false -Dbuild-tests=false -Dinstall-tests=false . build_both &&
 #PKG_CONFIG= PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PYTHONPATH=$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dwin32-backend=true -Dbroadway-backend=false -Dx11-backend=false -Dwayland-backend=false -Dmedia-ffmpeg=enabled -Dmedia-gstreamer=enabled -Dcloudproviders=disabled -Dprint-cups=disabled -Dcolord=disabled -Dintrospection=enabled -Dman-pages=false -Dgtk_doc=false -Dbuild-examples=false -Ddemos=false -Dbuild-tests=false -Dinstall-tests=false . build_both &&
 PKG_CONFIG= PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PYTHONPATH=$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dwin32-backend=true -Dbroadway-backend=false -Dx11-backend=false -Dwayland-backend=false -Dmedia-ffmpeg=enabled -Dmedia-gstreamer=enabled -Dcloudproviders=disabled -Dprint-cups=disabled -Dcolord=disabled -Dintrospection=enabled -Dman-pages=false -Dgtk_doc=false -Dbuild-examples=false -Ddemos=false -Dbuild-tests=false . build_both &&
 ## fix slash/backslash path issue when calling Python from Ninja (version <= 4.8.2)
 #sed -i.bak -e "/COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_both/build.ninja &&
 ## fix error calling gtk4-update-icon-cache in build-aux/meson/post-install.py (version <= 4.8.2)
 #sed -i.bak -e "s?\('\)gtk4-update-icon-cache\('\)?\1$(echo $(realpath build_both/gtk/tools/gtk4-update-icon-cache.exe)|sed "s?^/\([a-zA-Z]\)/?\1:/?")\2?" build-aux/meson/post-install.py &&
 ## fix install issues (version >= 4.1.0)
 #sed -i.bak -e "s/\(update_icon_cache\s*=.*'\)\('\)/\1gtk4-update-icon-cache.exe\2/" build-aux/meson/post-install.py &&
 wl-showstatus build &&
 PATH=$PYDIR:$PATH PKG_CONFIG= PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both &&
 wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX/share/icons/hicolor &&
 #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 PATH=$PYDIR:$PATH PKG_CONFIG= PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gtk-$VERSION
####See also: http://dickens.co.in/gtk4-msys2
####-Dvulkan=enabled
####-Dmedia=ffmpeg
####GSK_RENDERER=cairo 



