export NAME="Tk"
export STATUS=
export URL=http://www.tcl.tk/
export BASENAME=tk
export DESCRIPTION="Tk is a graphical user interface toolkit that takes developing desktop applications to a higher level than conventional approaches. Tk is the standard GUI not only for Tcl, but for many other dynamic languages, and can produce rich, native applications that run unchanged across Windows, Mac OS X, Linux and more."
export CATEGORY=development
export TYPE=application
#export VERSION=8.5.10
#export VERSIONDATE=20110825
#export VERSION=8.5.11
#export VERSIONDATE=20120303
#export VERSION=8.5.12
#export VERSIONDATE=20120727
#export VERSION=8.5.13
#export VERSIONDATE=20121113
#export VERSION=8.5.14
#export VERSIONDATE=20130403
#export VERSION=8.5.15
#export VERSIONDATE=20130919
#export VERSION=8.5.16
#export VERSIONDATE=20140823
#export VERSION=8.5.17
#export VERSIONDATE=20141025
#export VERSION=8.5.18
#export VERSIONDATE=20150307
#export VERSION=8.6.0
#export VERSIONDATE=20121220
#export VERSION=8.6.1
#export VERSIONDATE=20130920
#export VERSION=8.6.2
#export VERSIONDATE=20140826
#export VERSION=8.6.3
#export VERSIONDATE=20141112
#export VERSION=8.6.4
#export VERSIONDATE=20150312
#export VERSION=8.6.5
#export VERSIONDATE=20160406
#export VERSION=8.6.6
#export VERSIONDATE=20160801
#export VERSION=8.6.7
#export VERSIONDATE=20170816
#export VERSION=8.6.8
#export VERSIONDATE=20171223
#export VERSION=8.6.9
#export VERSIONDATE=20181115
#export VERSION=8.6.10
#export VERSIONDATE=20181122
#export VERSION=8.6.11
#export VERSIONDATE=20210105
#export VERSION=8.6.11.1
#export VERSIONDATE=20210114
#export VERSION=8.6.12
#export VERSIONDATE=20211106
#export VERSION=8.6.13
#export VERSIONDATE=20211123
#export VERSION=8.6.14
#export VERSIONDATE=20240229
#export VERSION=8.6.15
#export VERSIONDATE=20240917
#export VERSION=8.6.16
#export VERSIONDATE=20241212
#export VERSION=9.0.0
#export VERSIONDATE=20240927
export VERSION=9.0.1
export VERSIONDATE=20241222
wl-showstatus --package-version
export DEPENDENCIES=tcl,zlib
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=zip
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=../doc/license.terms
export LICENSETYPE=
export DOWNLOADURL="http://www.tcl.tk/software/tcltk/download.html tk -src.tar.gz"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://prdownloads.sourceforge.net/tcl/$BASENAME$VERSION-src.tar.gz
export DOWNLOADSOURCEURL=https://prdownloads.sourceforge.net/tcl/$BASENAME$VERSION-src.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME$VERSION-src.tar.gz
#cd $BASENAME$VERSION/win
cd $BASENAME$(echo $VERSION|sed -e "s/^\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\)\..*$/\1/")/win
# fix missing file on 64-bit
touch tclInt.h
# fix missing ANSI and VOID in ../generic/tkIntXlibDecls.h
mv ../generic/tkIntXlibDecls.h ../generic/tkIntXlibDecls.h.bak
#sed -e "s/CONST/const/g; s/VOID/void/g" ../generic/tkIntXlibDecls.h.bak > ../generic/tkIntXlibDecls.h
#echo "#include <ansidecl.h>" > ../generic/tkIntXlibDecls.h
cat > ../generic/tkIntXlibDecls.h << EOF
#ifndef VOID
#define VOID void
#endif
#ifndef CONST
#define CONST const
#endif
#ifndef EXTERN
#define EXTERN extern
#endif
EOF
cat ../generic/tkIntXlibDecls.h.bak >> ../generic/tkIntXlibDecls.h
# fix ../generic/tkMain.c (version >= 8.5.12)
pushd ..
patch -ulbf generic/tkMain.c << EOF
--- ../generic/tkMain.c  2012-07-16 21:37:26 +0200
+++ ../generic/tkMain.c  2012-07-27 23:17:08 +0200
@@ -20,4 +20,6 @@
 #include "tkWinInt.h"
+#ifndef __MINGW32__
 #include "../win/tclWinPort.h"
 #endif
+#endif
 #ifdef MAC_OSX_TK
@@ -60,3 +62,3 @@

-#if !defined(STATIC_BUILD)
+#if !defined(STATIC_BUILD) && !defined(__MINGW32__)
        if (tclStubsPtr->reserved9 && TclpIsAtty) {
EOF
popd
# fix missing types on 64-bit (version >= 8.6.0)
mv tkWinPort.h tkWinPort.h.bak
echo "#include <windows.h>" > tkWinPort.h
cat tkWinPort.h.bak >> tkWinPort.h
# fix already defined SEARCH_ALL in ../generic/tkText.c (version >= 8.5.15)
pushd ..
patch -ulbf generic/tkText.c << EOF
--- ../generic/tkText.c  2013-08-30 18:27:24 +0200
+++ ../generic/tkText.c  2013-09-19 13:46:58 +0200
@@ -20,2 +20,5 @@

+#ifdef SEARCH_ALL
+#undef SEARCH_ALL
+#endif
 #if defined(MAC_OSX_TK)
EOF
popd
# fix missing INPUT in tkWinX.c (version >= 8.6.1)
mv tkWinX.c tkWinX.c.bak
echo "#define _WIN32_WINNT 0x0403" > tkWinX.c
cat tkWinX.c.bak >> tkWinX.c
# fix missing SetLayeredWindowAttributes in tkWinWm.c (version >= 8.6.1)
mv tkWinWm.c tkWinWm.c.bak
cat > tkWinWm.c << EOF
#if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0500
#undef _WIN32_WINNT
#define _WIN32_WINNT 0x0500
#endif
#include "tkWin.h"
EOF
cat tkWinWm.c.bak >> tkWinWm.c
# fix redefinition of EXCEPTION_REGISTRATION (version >= 8.6.1)
if grep -w EXCEPTION_REGISTRATION $MINGWDIR/*mingw32/include/winnt.h > /dev/null; then
 # fix redefinition of EXCEPTION_REGISTRATION in tkWin32Dll.c (version >= 8.6.1)
 mv tkWin32Dll.c tkWin32Dll.c.bak
 echo "#define __MINGW_EXCPT_DEFINE_PSDK 1" > tkWin32Dll.c
 cat tkWin32Dll.c.bak >> tkWin32Dll.c
fi
## fix missing shobjidl.h in tkWinDialog.c (version >= 8.6.4 <= 8.6.15)
#mv tkWinDialog.c tkWinDialog.c.bak
#grep -v "shobjidl\.h" tkWinDialog.c.bak > tkWinDialog.c
# fix undefined SHCreateItemFromParsingName in tkWinDialog.c (version >= 9.0.0)
mv tkWinDialog.c tkWinDialog.c.bak
cat > tkWinDialog.c << EOF
#include <windows.h>
#if !defined(_WIN32_IE) || _WIN32_IE < _WIN32_IE_IE70
#undef _WIN32_IE
#define _WIN32_IE _WIN32_IE_IE70
#endif
EOF
cat tkWinDialog.c.bak >> tkWinDialog.c
# fix tkWin.h (version >= 9.0.0)
patch -ulbf tkWin.h << EOF
@@ -39,3 +39,9 @@
 #define WIN32_LEAN_AND_MEAN
+#undef VOID
+#undef WINAPI_FAMILY
+#define WINAPI_FAMILY WINAPI_FAMILY_DESKTOP_APP
 #include <windows.h>
+#ifndef VOID
+#define VOID void
+#endif
 #undef WIN32_LEAN_AND_MEAN
EOF
# fix winMain.c (version >= 9.0.0)
patch -ulbf winMain.c << EOF
@@ -34,5 +34,3 @@
 #include "tk.h"
-#define WIN32_LEAN_AND_MEAN
-#include <windows.h>
-#undef WIN32_LEAN_AND_MEAN
+#include "tkWin.h"
 #include <locale.h>
EOF
# fix unknown target minizip (version >= 9.0.0)
touch minizip
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-tcl=$MINGWPREFIX/bin --enable-threads --enable-shared &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-tcl=$MINGWPREFIX/bin --enable-threads --enable-shared $(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo --enable-64bit; fi) &&
# ## fix invalid library location (version >= 8.6.10)
# #sed -i.bak -e "s?bin\(/libtcl.*\.a\)?lib\1?" Makefile &&
# # fix invalid library location (version >= 9.0.00)
# sed -i.bak -e "s?bin\(/libtcl[a-z0-9.]*\.a\)?lib\1?" Makefile &&
# wl-showstatus build &&
# #( make || make -j1 ) &&
# #( make || make -j1 TCL_LIB_FILE="-Wl,--as-needed -ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" TCL_STUB_LIB_FILE="-Wl,--as-needed -ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/") -ltclstub$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" ) &&
# ( make || make -j1 TCL_LIB_FILE="-Wl,--as-needed -ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" TCL_STUB_LIB_FILE="-Wl,--as-needed -ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/") -ltclstub$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" || make -j1 TCL_LIB_FILE="-Wl,--as-needed -ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" TCL_STUB_LIB_FILE="-Wl,--as-needed -ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/") -ltclstub" || make NATIVE_ZIP="$(which zip.exe)" ) &&
# wl-showstatus build-install &&
# #( make -j1 install || make -j1 install TCL_LIB_FILE="$MINGWPREFIX/lib/libtclstub$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/").a" TCL_STUB_LIB_FILE="$MINGWPREFIX/lib/libtclstub$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/").a" ) &&
# ( make -j1 install install-private-headers || make -j1 install install-private-headers TCL_LIB_FILE="-Wl,--as-needed -ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" TCL_STUB_LIB_FILE="-Wl,--as-needed -ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/") -ltclstub$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" ) &&
# #sed -e "s?$INSTALLPREFIX?'\"\$(realpath \$(dirname \$0)/..)\"'?g" tkConfig.sh > $INSTALLPREFIX/bin/tkConfig.sh &&
# sed -e "s?$INSTALLPREFIX?'\"\$(realpath \$(dirname \$(if [ \"\${BASH_ARGV[0]}\" == \"\" ]; then echo \$0; else echo \${BASH_ARGV[0]}; fi))/..)\"'?g" tkConfig.sh > $INSTALLPREFIX/bin/tkConfig.sh &&
# # manually install private header
# mkdir -p $INSTALLPREFIX/include/tk-private/generic &&
# cp ../generic/tkInt.h $INSTALLPREFIX/include/tk-private/generic/ &&
# # remove conflicting include/X11 files
# rm -rf $INSTALLPREFIX/include/X11 &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME$(echo $VERSION|sed -e "s/^\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\)\..*$/\1/")
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cd build_static && 
 ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-shared --disable-symbols --enable-zipfs --with-tcl=$MINGWPREFIX/bin $(if ( echo $RUNPLATFORM | grep -q "^[^-]*64" ); then echo --enable-64bit; fi) &&
 cd .. &&
 wl-showstatus configure-shared &&
 cd build_shared &&
 ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --disable-symbols --enable-zipfs --with-tcl=$MINGWPREFIX/bin $(if ( echo $RUNPLATFORM | grep -q "^[^-]*64" ); then echo --enable-64bit; fi) &&
 cd .. &&
 wl-showstatus build-install-static &&
 ( make -Cbuild_static install install-private-headers TCL_LIB_FILE="-ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" TCL_STUB_LIB_FILE="-ltclstub" || make -Cbuild_static install install-private-headers TCL_LIB_FILE="-ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" TCL_STUB_LIB_FILE="-ltclstub" NATIVE_ZIP="$(which zip.exe)" ) &&
 wl-showstatus build-install-shared &&
 ( make -Cbuild_shared install install-private-headers TCL_LIB_FILE="-ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" TCL_STUB_LIB_FILE="-ltclstub" || make -Cbuild_shared install install-private-headers TCL_LIB_FILE="-ltcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/")" TCL_STUB_LIB_FILE="-ltclstub" NATIVE_ZIP="$(which zip.exe)" ) &&
 # copy alternative library names
 cp -u $INSTALLPREFIX/lib/libtcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\..*/\1/")tk$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/").a $INSTALLPREFIX/lib/libtk$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/").a &&
 cp -u $INSTALLPREFIX/lib/libtcl$(echo $VERSION|sed -e "s/^\([0-9]*\)\..*/\1/")tk$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/").dll.a $INSTALLPREFIX/lib/libtk$(echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\).*/\1\2/").dll.a &&
 # fix and install tkConfig.sh
 sed -e "s?$INSTALLPREFIX?'\"\$(realpath \$(dirname \$(if [ \"\${BASH_ARGV[0]}\" == \"\" ]; then echo \$0; else echo \${BASH_ARGV[0]}; fi))/..)\"'?g" build_shared/tkConfig.sh > $INSTALLPREFIX/bin/tkConfig.sh &&
 # manually install private header
 mkdir -p $INSTALLPREFIX/include/tk-private/generic &&
 cp ../generic/tkInt.h $INSTALLPREFIX/include/tk-private/generic/ &&
 # remove conflicting include/X11 files
 rm -rf $INSTALLPREFIX/include/X11 &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME$(echo $VERSION|sed -e "s/^\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\)\..*$/\1/")



