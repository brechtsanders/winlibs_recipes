#export NAME="NetCDF"
#export STATUS=
#export URL=http://www.unidata.ucar.edu/software/netcdf/
#export BASENAME=netcdf
#export DESCRIPTION="NetCDF (network Common Data Form) is a set of software libraries and machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data."
#export CATEGORY=dataprocessing
#export TYPE=library
##export VERSION=4.1.1
##export VERSIONDATE=20101006
##export VERSION=4.1.3
##export VERSIONDATE=20110914
#####oc/oc.c:870: error: 'OCstate' has no member named 'clientparams'
##export VERSION=4.2
##export VERSIONDATE=20120317
##export VERSION=4.2.0
##export VERSIONDATE=20120427
#####ncgen/ncgen.y:1441: undefined reference to `cdChar2Comp'
#####ncgen/ncgen.y:1450: undefined reference to `Cdh2e'
#####libdispatch/dv2i.c:49: undefined reference to `nc_inq_var_ndims'
##export DEPENDENCIES=portablexdr
##export VERSION=4.2.1-rc1
##export VERSIONDATE=20120718
#export VERSION=4.2.1.1
#export VERSIONDATE=20120804
##export VERSION=4.3.0
##export VERSIONDATE=20130430
##export VERSION=4.3.1
##export VERSIONDATE=20140117
##export VERSION=4.3.1.1
##export VERSIONDATE=20140206
#####libsrc4/.libs/libnetcdf4.a(libnetcdf4_la-nc4dispatch.o):nc4dispatch.c:(.data+0x34): undefined reference to `_NC4_inq_type'
##export VERSION=4.3.2
##export VERSIONDATE=20140424
##export VERSION=4.3.3
##export VERSIONDATE=20150213
##export VERSION=4.3.3.1
##export VERSIONDATE=20150228
##export VERSION=4.4.0
##export VERSIONDATE=20160405
##export VERSION=4.4.1
##export VERSIONDATE=20160629
##export VERSION=4.4.1.1
##export VERSIONDATE=20161122
##export VERSION=4.5.0
##export VERSIONDATE=20171021
##export VERSION=4.6.0
##export VERSIONDATE=20180126
##export VERSION=4.6.1
##export VERSIONDATE=20180316
##export VERSION=4.7.4
##export VERSIONDATE=20180316
#####libsrc4/.libs/libnetcdf4.a(libnetcdf4_la-nc4dispatch.o):nc4dispatch.c:(.data+0x38): undefined reference to `NC4_inq_type'
#wl-showstatus --package-version
#export DEPENDENCIES=portablexdr,hdf5,zlib
##export DEPENDENCIES=portablexdr,hdf,hdf5,zlib
#export OPTIONALDEPENDENCIES=libsz
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYRIGHT
#export LICENSETYPE=
##export DOWNLOADURL="http://www.unidata.ucar.edu/downloads/netcdf/index.jsp"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.unidata.ucar.edu/downloads/netcdf/ftp/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
## make sure IGNORE is not defined to avoid errors
#echo "#undef IGNORE" >> oc/ocinternal.h &&
## fix issue with grp1/grp2 in libsrc4/nc4type.c (version >= 4.2.1.1)
#mv libsrc4/nc4type.c libsrc4/nc4type.c.bak
#sed -e "s/grp\([1-9]\)/group\1/g" libsrc4/nc4type.c.bak > libsrc4/nc4type.c
## fix invalid parameters to mkdir in oc2/ocinternal.c (version >= 4.3.3.1)
#sed -i.bak "s/_MSC_VER/_WIN32/" oc2/ocinternal.c
### fix too many arguments for mkdir() in oc2/ocinternal.c (version >= 4.3.3)
##sed -i.orig -e "s/\(mkdir *([^,]*\),[^)]*/\1/" oc2/ocinternal.c
## fix missing H5F_LIBVER_18 in libsrc4/nc4file.c
#patch -ulbf libsrc4/nc4file.c << EOF
#@@ -289,4 +289,6 @@
#
#+#ifdef H5F_LIBVER_18
#    if (H5Pset_libver_bounds(fapl_id, H5F_LIBVER_18, H5F_LIBVER_18) < 0)
#       BAIL(NC_EHDFERR);
#+#endif
#
#EOF
## fix (re)definition of nc4_rec_find_nc_type in libsrc4/nc4internal.c (version >= 4.2.1.1)
#patch -ulbf libsrc4/nc4internal.c << EOF
#@@ -379,3 +379,3 @@
# NC_TYPE_INFO_T *
#-nc4_rec_find_nc_type(NC_GRP_INFO_T *start_grp, nc_type target_nc_typeid)
#+nc4_rec_find_nc_type(NC_GRP_INFO_T *start_grp, hid_t target_nc_typeid)
# {
#EOF
## fix configure to find library containing xdr functions (portablexdr) and to avoid linking with -lzlib instead of -lz
#mv configure configure.bak
#sed -e "s/rpcsvc/portablexdr/g; s/zlib zlib1 z/z/" configure.bak > configure
##sed -e "s/rpcsvc/oncrpc/g; s/zlib zlib1 z/z/" configure.bak > configure
##make check
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-dll --disable-netcdf-4 &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-dll --enable-netcdf-4 &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-dll --enable-netcdf-4 CFLAGS="-DDLL_NETCDF -DDLL_EXPORT" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-static --enable-dll --enable-netcdf-4 &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-static --enable-dll --enable-netcdf-4 --enable-hdf4 CFLAGS="-DDLL_NETCDF -DDLL_EXPORT" &&
# ## fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build-install &&
# make install-strip INCLUDES="-I`pwd`/libsrc" &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="NetCDF"
export STATUS=
export URL=http://www.unidata.ucar.edu/software/netcdf/
export BASENAME=netcdf
export DESCRIPTION="NetCDF (network Common Data Form) is a set of software libraries and machine-independent data formats that support the creation, access, and sharing of array-oriented scientific data."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=4.7.4
#export VERSIONDATE=20180316
####32-bit: Unable to support CDF5 feature because size_t is less than 8 bytes
#export VERSION=4.8.0
#export VERSIONDATE=20210331
#export VERSION=4.8.1
#export VERSIONDATE=20210826
export VERSION=4.9.2
export VERSIONDATE=20241006
wl-showstatus --package-version
export DEPENDENCIES=portablexdr,zlib,hdf,hdf5,libcurl
#export DEPENDENCIES=portablexdr,zlib,hdf,hdf5,libcurl,mman-win32
export OPTIONALDEPENDENCIES=libsz
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYRIGHT
export LICENSETYPE=
#export DOWNLOADURL="ftp://ftp.unidata.ucar.edu/pub/netcdf/ netcdf-c-"
export DOWNLOADURL="https://www.unidata.ucar.edu/downloads/netcdf/ netcdf-c-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-c-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://downloads.unidata.ucar.edu/netcdf-c/$VERSION/src/netcdf-c-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://downloads.unidata.ucar.edu/netcdf-c/$VERSION/netcdf-c-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/netcdf-c-$VERSION.tar.gz
cd netcdf-c-$VERSION
## fix conflicting getopt in include/XGetopt.h (version <= 4.8.1)
#mv include/XGetopt.h include/XGetopt.h.bak &&
#echo "#include <getopt.h>" > include/XGetopt.h
## fix libdispatch/dpathmgr.c (version >= 4.8.0)
#patch -ulbf libdispatch/dpathmgr.c << EOF
#@@ -358,3 +358,3 @@
#     int stat = NC_NOERR;
#-    char* cvtname = NCpathcvt(path);
#+    char* cvtname = NCpathcvt(ent);
#     if(cvtname == NULL) {errno = ENOENT; return -1;}
#EOF
## fix detection of libcurl in CMakeLists.txt (version >= 4.8.0)
#patch -ulbf CMakeLists.txt << EOF
#@@ -892,3 +892,3 @@
# # Define a test flag for have curl library
#-IF(CURL_LIBRARIES OR CURL_LIBRARY)
#+IF(CURL_FOUND)
#   SET(FOUND_CURL TRUE)
#EOF
## fix liblib/CMakeLists.txt (version >= 4.8.0)
#####The "optimized" argument must be followed by a library.
#patch -ulbf liblib/CMakeLists.txt << EOF
#@@ -123,2 +123,3 @@
#
#+LIST(REMOVE_ITEM TLL_LIBS "debug" "optimized")
# TARGET_LINK_LIBRARIES(netcdf \${TLL_LIBS})
#EOF
## fix liblib/CMakeLists.txt (version = 4.8.1)
#patch -ulbf liblib/CMakeLists.txt << EOF
#@@ -123,2 +123,3 @@
#
#+LIST(REMOVE_ITEM TLL_LIBS debug optimized)
# TARGET_LINK_LIBRARIES(netcdf \${TLL_LIBS})
#EOF
# don't include missing fuzz directory in CMakeLists.txt (version >= 4.8.1)
sed -i.bak -e "s/^add_subdirectory(fuzz)/#&/" CMakeLists.txt
## disable m4 for man page generation in CMakeLists.txt (version >= 4.8.1)
#patch -ulbf CMakeLists.txt << EOF
#@@ -1636,3 +1636,3 @@
# # A basic script used to convert m4 files
#-FIND_PROGRAM(NC_M4 NAMES m4 m4.exe)
#+FIND_PROGRAM(NC_M4 NAMES m4_DISABLED)
# IF(NC_M4)
#EOF
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DLL:BOOL=OFF -DENABLE_DLL:BOOL=OFF -DENABLE_CDF5:BOOL=ON -DENABLE_HDF4:BOOL=ON -DENABLE_XGETOPT:BOOL=OFF -DENABLE_MMAP:BOOL=OFF -DENABLE_LOGGING:BOOL=OFF -DENABLE_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTSETS:BOOL=OFF -DENABLE_EXTRA_TESTS:BOOL=OFF -DENABLE_LARGE_FILE_TESTS:BOOL=OFF -DENABLE_FILTER_TESTING:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DLL:BOOL=ON -DENABLE_DLL:BOOL=ON -DENABLE_CDF5:BOOL=ON -DENABLE_HDF4:BOOL=ON -DENABLE_XGETOPT:BOOL=OFF -DENABLE_MMAP:BOOL=OFF -DENABLE_LOGGING:BOOL=OFF -DENABLE_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTSETS:BOOL=OFF -DENABLE_EXTRA_TESTS:BOOL=OFF -DENABLE_LARGE_FILE_TESTS:BOOL=OFF -DENABLE_FILTER_TESTING:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf netcdf-c-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DLL:BOOL=OFF -DENABLE_DLL:BOOL=OFF -DENABLE_CDF5:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "ON"; else echo "OFF"; fi) -DENABLE_HDF4:BOOL=ON -DENABLE_XGETOPT:BOOL=OFF -DENABLE_MMAP:BOOL=OFF -DENABLE_LOGGING:BOOL=OFF -DENABLE_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTSETS:BOOL=OFF -DENABLE_EXTRA_TESTS:BOOL=OFF -DENABLE_LARGE_FILE_TESTS:BOOL=OFF -DENABLE_FILTER_TESTING:BOOL=OFF -DENABLE_HDF4_FILE_TESTS:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-fcommon" -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DLL:BOOL=OFF -DENABLE_DLL:BOOL=OFF -DENABLE_CDF5:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "ON"; else echo "OFF"; fi) -DENABLE_HDF4:BOOL=ON -DCURL_LIBRARY:STRING="-lcurl" -DENABLE_XGETOPT:BOOL=OFF -DENABLE_MMAP:BOOL=OFF -DENABLE_LOGGING:BOOL=OFF -DENABLE_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTSETS:BOOL=OFF -DENABLE_EXTRA_TESTS:BOOL=OFF -DENABLE_LARGE_FILE_TESTS:BOOL=OFF -DENABLE_FILTER_TESTING:BOOL=OFF -DENABLE_HDF4_FILE_TESTS:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-fcommon" -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DLL:BOOL=OFF -DENABLE_DLL:BOOL=OFF -DENABLE_CDF5:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "ON"; else echo "OFF"; fi) -DENABLE_HDF4:BOOL=ON -DCURL_LIBRARY:STRING="-lcurl" -DENABLE_XGETOPT:BOOL=OFF -DENABLE_MMAP:BOOL=OFF -DENABLE_LOGGING:BOOL=OFF -DENABLE_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTSETS:BOOL=OFF -DENABLE_EXTRA_TESTS:BOOL=OFF -DENABLE_LARGE_FILE_TESTS:BOOL=OFF -DENABLE_FILTER_TESTING:BOOL=OFF -DENABLE_HDF4_FILE_TESTS:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-fcommon $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types"; fi)" -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DLL:BOOL=OFF -DENABLE_DLL:BOOL=OFF -DENABLE_CDF5:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "ON"; else echo "OFF"; fi) -DENABLE_HDF4:BOOL=ON -DCURL_LIBRARY:STRING="-lcurl" -DENABLE_XGETOPT:BOOL=OFF -DENABLE_MMAP:BOOL=OFF -DENABLE_LOGGING:BOOL=OFF -DENABLE_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTSETS:BOOL=OFF -DENABLE_EXTRA_TESTS:BOOL=OFF -DENABLE_LARGE_FILE_TESTS:BOOL=OFF -DENABLE_FILTER_TESTING:BOOL=OFF -DENABLE_HDF4_FILE_TESTS:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-fcommon -I$(cygpath -m $MINGWPREFIX/include/mman-win32)" -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DLL:BOOL=ON -DENABLE_DLL:BOOL=ON -DENABLE_CDF5:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "ON"; else echo "OFF"; fi) -DENABLE_HDF4:BOOL=ON -DCURL_LIBRARY:STRING="-lcurl" -DENABLE_XGETOPT:BOOL=OFF -DENABLE_MMAP:BOOL=OFF -DENABLE_LOGGING:BOOL=OFF -DENABLE_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTSETS:BOOL=OFF -DENABLE_EXTRA_TESTS:BOOL=OFF -DENABLE_LARGE_FILE_TESTS:BOOL=OFF -DENABLE_FILTER_TESTING:BOOL=OFF -DENABLE_HDF4_FILE_TESTS:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-fcommon" -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DLL:BOOL=ON -DENABLE_DLL:BOOL=ON -DENABLE_CDF5:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "ON"; else echo "OFF"; fi) -DENABLE_HDF4:BOOL=ON -DCURL_LIBRARY:STRING="-lcurl" -DENABLE_XGETOPT:BOOL=OFF -DENABLE_MMAP:BOOL=OFF -DENABLE_LOGGING:BOOL=OFF -DENABLE_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTSETS:BOOL=OFF -DENABLE_EXTRA_TESTS:BOOL=OFF -DENABLE_LARGE_FILE_TESTS:BOOL=OFF -DENABLE_FILTER_TESTING:BOOL=OFF -DENABLE_HDF4_FILE_TESTS:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-fcommon $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types"; fi)" -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DLL:BOOL=ON -DENABLE_DLL:BOOL=ON -DENABLE_CDF5:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "ON"; else echo "OFF"; fi) -DENABLE_HDF4:BOOL=ON -DCURL_LIBRARY:STRING="-lcurl" -DENABLE_XGETOPT:BOOL=OFF -DENABLE_MMAP:BOOL=OFF -DENABLE_LOGGING:BOOL=OFF -DENABLE_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTSETS:BOOL=OFF -DENABLE_EXTRA_TESTS:BOOL=OFF -DENABLE_LARGE_FILE_TESTS:BOOL=OFF -DENABLE_FILTER_TESTING:BOOL=OFF -DENABLE_HDF4_FILE_TESTS:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DENABLE_UNIT_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-fcommon -I$(cygpath -m $MINGWPREFIX/include/mman-win32)" -S. -Bbuild_shared &&
 # remove single quotes in cmd.exe commands
 #sed -i.bak -e "/COMMAND\s*=\s*cmd\.exe/s/'//g" build_*/build.ninja &&
 sed -i.bak -e "/cmd\.exe/s/'//g" build_*/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf netcdf-c-$VERSION



