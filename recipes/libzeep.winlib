export NAME="libzeep"
export STATUS=
export URL=https://github.com/mhekkel/libzeep
export BASENAME=libzeep
export DESCRIPTION="C++ library for reading and writing XML and creating web and SOAP servers"
export CATEGORY=fileformat,dataprocessing,communication
export TYPE=library
#export VERSION=6.0.1
#export VERSIONDATE=20230707
#export VERSION=6.0.5
#export VERSIONDATE=20230821
export VERSION=6.0.9
export VERSIONDATE=20231127
wl-showstatus --package-version
export DEPENDENCIES=boost,hinnantdate
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,mrc
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE_1_0.txt
export LICENSETYPE=BSL
export DOWNLOADURL="https://github.com/mhekkel/libzeep/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/mhekkel/libzeep/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix assumption only _MSC_VER is defined on Windows (version = 6.0.1)
##### Bug reported: https://github.com/mhekkel/libzeep/issues/14
#sed -i.bak -e "s/_MSC_VER/_WIN32/" lib-http/src/controller-rsrc.cpp lib-http/src/daemon.cpp lib-http/src/signals.cpp
## fix lib-http/src/controller-rsrc.cpp (version = 6.0.1)
#patch -ulbf lib-http/src/controller-rsrc.cpp << EOF
#@@ -36,5 +36,5 @@
#
#-extern "C" const mrsrc::rsrc_imp gResourceIndex[];
#-extern "C" const char gResourceData[];
#-extern "C" const char gResourceName[];
#+extern "C" __attribute__((weak, alias("gResourceIndexDefault"))) const mrsrc::rsrc_imp gResourceIndex[];
#+extern "C" __attribute__((weak, alias("gResourceDataDefault"))) const char gResourceData[];
#+extern "C" __attribute__((weak, alias("gResourceNameDefault"))) const char gResourceName[];
#
#EOF
## fix undefined std::uint8_t in include/zeep/json/element_fwd.hpp (version = 6.0.1)
#mv include/zeep/json/element_fwd.hpp include/zeep/json/element_fwd.hpp.bak &&
#echo "#include <cstdint>" > include/zeep/json/element_fwd.hpp &&
#cat include/zeep/json/element_fwd.hpp.bak >> include/zeep/json/element_fwd.hpp
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32 -lmswsock/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



