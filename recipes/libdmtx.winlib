export NAME="libdmtx"
export STATUS=
#export URL=http://www.libdmtx.org/
export URL=https://github.com/dmtx/libdmtx
export BASENAME=libdmtx
export DESCRIPTION="libdmtx is open source software for reading and writing Data Matrix 2D barcodes on Linux, Unix, OS X, Windows, and mobile devices. At its core libdmtx is a shared library, allowing C/C++ programs to use its capabilities without restrictions or overhead."
export CATEGORY=graphics
export TYPE=library
#export VERSION=0.7.2
#export VERSIONDATE=20110116
#export VERSION=0.7.4
#export VERSIONDATE=20110602
#export VERSION=0.7.5
#export VERSIONDATE=20200406
#export VERSION=0.7.6
#export VERSIONDATE=20220704
export VERSION=0.7.7
export VERSIONDATE=20220704
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/libdmtx/files/libdmtx/"
#export DOWNLOADURL="https://github.com/dmtx/libdmtx/releases"
export DOWNLOADURL="https://github.com/dmtx/libdmtx/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/libdmtx/libdmtx/$VERSION/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://github.com/dmtx/libdmtx/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/dmtx/libdmtx/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus configure &&
 mkdir -p m4 &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-cocoa --disable-java --disable-net --disable-php --disable-python --disable-ruby --disable-vala LDFLAGS="-no-undefined -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-cocoa --disable-java --disable-net --disable-php --disable-python --disable-ruby --disable-vala LDFLAGS="-Wl,-no-undefined" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DDMTX_SHARED:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DDMTX_SHARED:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build &&
# ninja -Cbuild_static &&
# wl-showstatus build &&
# ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK



