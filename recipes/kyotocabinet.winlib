export NAME="Kyoto Cabinet"
export STATUS=
export URL=http://fallabs.com/kyotocabinet/
export BASENAME=kyotocabinet
export DESCRIPTION="Kyoto Cabinet: a straightforward implementation of DBM"
export CATEGORY=database
export TYPE=library
#export VERSION=1.2.76
#export VERSIONDATE=20151010
#export VERSION=1.2.77
#export VERSIONDATE=20181029
#export VERSION=1.2.78
#export VERSIONDATE=20200720
export VERSION=1.2.79
export VERSIONDATE=20201218
wl-showstatus --package-version
export DEPENDENCIES=pcre
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=pexports
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://fallabs.com/kyotocabinet/pkg/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://fallabs.com/kyotocabinet/pkg/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix kcthread.cc for 64-bit
patch -ulbf kcthread.cc << EOF
--- kcthread.cc  2012-05-24 18:27:59.000000000 +0200
+++ kcthread.cc  2015-10-12 09:55:27.078125200 +0200
@@ -1969,3 +1969,3 @@
   _assert_(true);
-  ::DWORD key = ::TlsAlloc();
+  ::uintptr_t key = ::TlsAlloc();
   if (key == 0xFFFFFFFF) throw std::runtime_error("TlsAlloc");
@@ -1988,3 +1988,3 @@
   _assert_(true);
-  ::DWORD key = ::TlsAlloc();
+  ::uintptr_t key = ::TlsAlloc();
   if (key == 0xFFFFFFFF) throw std::runtime_error("TlsAlloc");
@@ -2007,3 +2007,3 @@
   _assert_(true);
-  ::DWORD key = (::DWORD)opq_;
+  ::uintptr_t key = (::uintptr_t)opq_;
   ::TlsFree(key);
@@ -2024,3 +2024,3 @@
   _assert_(true);
-  ::DWORD key = (::DWORD)opq_;
+  ::uintptr_t key = (::uintptr_t)opq_;
   if (!::TlsSetValue(key, ptr)) std::runtime_error("TlsSetValue");
@@ -2041,3 +2041,3 @@
   _assert_(true);
-  ::DWORD key = (::DWORD)opq_;
+  ::uintptr_t key = (::uintptr_t)opq_;
   return ::TlsGetValue(key);
EOF
## fix missing MEMORYSTATUSEX in kcutil.cc
#mv kcutil.cc kcutil.cc.bak &&
#echo "#define _WIN32_WINNT 0x0500" > kcutil.cc &&
#cat kcutil.cc.bak >> kcutil.cc
## fix missing GetFileSizeEx in kcfile.cc
#mv kcfile.cc kcfile.cc.bak &&
#echo "#define _WIN32_WINNT 0x0500" > kcfile.cc &&
#cat kcfile.cc.bak >> kcfile.cc
# fix invalid return type in kcfile.cc (version >= 1.2.76)
patch -ulbf kcfile.cc << EOF
--- kcfile.cc  2012-05-24 18:27:59.000000000 +0200
+++ kcfile.cc  2016-08-19 10:00:33.000610600 +0200
@@ -1521,5 +1521,5 @@
   if (!::GetFileSizeEx(fh, &sbuf)) {
     ::CloseHandle(fh);
-    return false;
+    return NULL;
   }
   if (limit > (int64_t)sbuf.QuadPart) limit = sbuf.QuadPart;
EOF
# fix invalid return type in kcdbext.h (version >= 1.2.76)
patch -ulbf kcdbext.h << EOF
--- kcdbext.h  2012-05-24 18:27:59.000000000 +0200
+++ kcdbext.h  2016-08-19 10:02:03.021611800 +0200
@@ -1279,5 +1279,5 @@
       set_error(_KCCODELINE_, BasicDB::Error::INVALID, "not opened");
       *sp = 0;
-      return false;
+      return NULL;
     }
     if (!cache_) return db_.get(kbuf, ksiz, sp);
EOF
wl-showstatus configure &&
 #autoreconf -f -i -I $MINGWPREFIX/share/aclocal &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 # fix building .dll instead of .so
 mv Makefile Makefile.bak &&
 sed -e "s/-Wl,-soname,\([^ ]*\)\.so\.\(\$(LIBVER)\|[0-9]*\)/-Wl,--out-implib,\1.dll.a/; s/lib\([^ ]*\)\.so\.\(\$(LIBVER)\|[0-9]*\)\.\(\$(LIBREV)\|[0-9]*\).[0-9]*/\1-\$(LIBVER).dll/g; s/lib\([^ ]*\)\.so\.\(\$(LIBVER)\|[0-9]*\)/\1-\$(LIBVER).\$(LIBREV).deleteme.dll/g; s/lib\([^ ]*\)\.so/\1.deleteme.dll/g" Makefile.bak > Makefile &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 make install &&
 cp -f *.dll.a $INSTALLPREFIX/lib/ &&
 rm -f $INSTALLPREFIX/lib/*.deleteme.dll &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 strip $INSTALLPREFIX/bin/*.dll $INSTALLPREFIX/bin/*.exe &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



