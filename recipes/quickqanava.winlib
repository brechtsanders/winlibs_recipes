#export NAME="QuickQanava"
#export STATUS=
#export URL=http://www.destrat.io/quickqanava/
#export BASENAME=quickqanava
#export DESCRIPTION="QuickQanava is a C++14 library designed to display graphs and relational content in a QtQuick application using QML code. QuickQanava provide components and classes to visualize medium-sized directed graphs in a QML application. QuickQanava does not provide advanced layout algorithms, but rather focus on displaying relational content in an advanced dynamic user interface (with DnD support, resizable content, visual connection of nodes)."
#export CATEGORY=graphics
#export TYPE=library
#export VERSION=0.9.4
#export VERSIONDATE=20180417
#wl-showstatus --package-version
#export DEPENDENCIES=qt,protobuf,gtest,pugixml
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=licence.txt
#export LICENSETYPE=BSD
#export DOWNLOADURL="https://github.com/cneben/QuickQanava/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/cneben/QuickQanava/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd QuickQanava-$VERSION
## fix for building DLL
#sed -i.bak -e "s/^\(\s*add_library\s*(\)\([^ ]*\)\( *.*\)$/\1\2 SHARED\3\n\1\2_static STATIC\3\nset_target_properties(\2_static PROPERTIES OUTPUT_NAME \2)\nINSTALL(TARGETS \2 ARCHIVE DESTINATION lib RUNTIME DESTINATION bin)\nINSTALL(TARGETS \2_static ARCHIVE DESTINATION lib RUNTIME DESTINATION bin)/; s/^\(\s*target_[^ ]* *(\)\([^ ]*\)\( *.*\)$/\1\2\3\n\1\2_static\3/" src/CMakeLists.txt QuickContainers/CMakeLists.txt
##sed -i.bak -e "s/^\(\s*add_library\s*(\)\([^ ]*\)\( *.*\)$/\1\2 SHARED\3\n\1\2_static STATIC\3\nset_target_properties(\2_static PROPERTIES OUTPUT_NAME \2)\nINSTALL(TARGETS \2 ARCHIVE DESTINATION lib RUNTIME DESTINATION bin)\nINSTALL(TARGETS \2_static ARCHIVE DESTINATION lib RUNTIME DESTINATION bin)/; s/^\(\s*target_[^ ]* *(\)\([^ ]*\)\( *.*\)$/\1\2\3\n\1\2_static\3/; s/^\s*set\s*(\([^ ]*_header_files\)\b/INSTALL(FILES \${\1} DESTINATION include)\n&/" src/CMakeLists.txt QuickContainers/CMakeLists.txt
##sed -i.bak -e "s/^\s*set\s*(\([^ ]*_header_files\)\b/INSTALL(FILES \${\1} DESTINATION include)\n&/" GTpo/CMakeLists.txt
#wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQt5Core_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Core -DQt5Qml_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Qml -DQt5Widgets_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Widgets -DQt5Quick_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Quick -DQt5QuickControls2_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5QuickControls2 . &&
# wl-showstatus build &&
# ( make || make -j1 ) &&
# wl-showstatus build-install &&
# ( make install/strip || make -j1 install/strip ) &&
# mkdir -p $INSTALLPREFIX/include &&
# cp -f src/*.h QuickContainers/src/*.h GTpo/src/*.h $INSTALLPREFIX/include/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf QuickQanava-$VERSION
##PATH=$(pwd)/src:$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins QML2_IMPORT_PATH=$MINGWPREFIX/qt/qml samples/nodes/sample_nodes.exe



export NAME="QuickQanava"
export STATUS=
#export URL=http://www.destrat.io/quickqanava/
export URL=http://cneben.github.io/QuickQanava/
export BASENAME=quickqanava
export DESCRIPTION="QuickQanava is a C++14 library designed to display graphs and relational content in a QtQuick application using QML code. QuickQanava provide components and classes to visualize medium-sized directed graphs in a QML application. QuickQanava does not provide advanced layout algorithms, but rather focus on displaying relational content in an advanced dynamic user interface (with DnD support, resizable content, visual connection of nodes)."
export CATEGORY=graphics
export TYPE=library
#export VERSION=2.1.0
#export VERSIONDATE=20220818
#export VERSION=2.2.0
#export VERSIONDATE=20221226
#export VERSION=2.3.0
#export VERSIONDATE=20230518
export VERSION=2.4.0
export VERSIONDATE=20240104
#export VERSION=2.4.1qt5
#export VERSIONDATE=20240115
wl-showstatus --package-version
export DEPENDENCIES=qt6,protobuf,gtest,pugixml
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=licence.txt
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/cneben/QuickQanava/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/cneben/QuickQanava/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd QuickQanava-$VERSION
# also allow building shared libraries
sed -i.bak -e "s/^\(add_library([^ ]* \)STATIC /\1/" src/CMakeLists.txt QuickContainers/CMakeLists.txt
# fix QuickContainers/CMakeLists.txt (version >= 2.2.0)
patch -ulbf QuickContainers/CMakeLists.txt << EOF
@@ -72,3 +72,3 @@
 execute_process(COMMAND \${QT_QMAKE_EXECUTABLE} -query QT_INSTALL_QML OUTPUT_VARIABLE QT_INSTALL_QML_RAW)
-string(STRIP \${QT_INSTALL_QML_RAW} QT_INSTALL_QML)
+string(STRIP "\${QT_INSTALL_QML_RAW}" QT_INSTALL_QML)
 set(DESTDIR "\${QT_INSTALL_QML}/\${TARGETPATH}")
EOF
# fix src/CMakeLists.txt (version >= 2.2.0)
patch -ulbf src/CMakeLists.txt << EOF
@@ -139,3 +139,3 @@
 execute_process(COMMAND \${QT_QMAKE_EXECUTABLE} -query QT_INSTALL_QML OUTPUT_VARIABLE QT_INSTALL_QML_RAW)
-string(STRIP \${QT_INSTALL_QML_RAW} QT_INSTALL_QML)
+string(STRIP "\${QT_INSTALL_QML_RAW}" QT_INSTALL_QML)
 set(DESTDIR "\${QT_INSTALL_QML}/\${TARGETPATH}")
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DQUICK_QANAVA_BUILD_STATIC_QRC:BOOL=ON -DQUICK_QANAVA_BUILD_SAMPLES:BOOL=OFF -DQUICK_QANAVA_WINDOWS_DEPLOY:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DQUICK_QANAVA_BUILD_STATIC_QRC:BOOL=OFF -DQUICK_QANAVA_BUILD_SAMPLES:BOOL=OFF -DQUICK_QANAVA_WINDOWS_DEPLOY:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf QuickQanava-$VERSION



