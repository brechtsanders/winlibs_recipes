export NAME="modbuspp"
export STATUS=
export URL=https://www.epsilonrt.fr/modbuspp/
export BASENAME=modbuspp
export DESCRIPTION="A C++ Library for Modbus TCP Client Protocol"
export CATEGORY=communication
export TYPE=library
export VERSION=0.3
export VERSIONDATE=20250713
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=license
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/fz-lyu/modbuspp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/fz-lyu/modbuspp/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix modbus.h (version >= 0.3)
patch -ulbf modbus.h << EOF
@@ -37,5 +37,7 @@
 #include <winsock2.h>
+#ifndef __MINGW32__
 #pragma comment(lib, "Ws2_32.lib")
-using X_SOCKET = SOCKET;
 using ssize_t = int;
+#endif
+using X_SOCKET = SOCKET;

@@ -288,3 +290,3 @@
     int status = 0;
-    uint8_t *to_send;
+    uint8_t *to_send = NULL;
     if (func == WRITE_COIL || func == WRITE_REG)
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_win &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



