export NAME="libzrtpcpp"
export STATUS=
export URL=http://www.gnu.org/software/ccrtp/
export BASENAME=libzrtpcpp
export DESCRIPTION="Provides support for the ZRTP protocol in ccRTP"
export CATEGORY=audio,communication
export TYPE=library
#export VERSION=1.0.0
#export VERSION=1.3.0
#export VERSION=1.4.1
#export VERSION=1.4.3
#export VERSION=1.4.5
#export VERSION=1.4.6
#export VERSIONDATE=20091101
#export VERSION=1.5.2
#export VERSIONDATE=20101205
#export VERSION=1.5.3
#export VERSIONDATE=20101206
export VERSION=1.6.0
export VERSIONDATE=20110115
#export VERSION=2.0.0
#export VERSIONDATE=20110529
####e:/Prog/MinGW-mSys/home/win32/libzrtpcpp-2.0.0/src/libzrtpcpp/ZrtpCallback.h:30:30: error: commoncpp/config.h: No such file or directory
#export VERSION=2.3.2
#export VERSIONDATE=20121121
#export VERSION=2.3.3
#export VERSIONDATE=20130608
#export VERSION=2.3.4
#export VERSIONDATE=20130701
####\include/ucommon/platform.h:174: error: conflicting declaration 'typedef DWORD pthread_t'
####\include/pthread.h:585: error: 'pthread_t' has a previous declaration as 'typedef struct ptw32_handle_t pthread_t'
wl-showstatus --package-version
export DEPENDENCIES=libccrtp,libcommoncpp2,pthreads,libgcrypt,libgpg-error
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="http://ftp.gnu.org/pub/gnu/ccrtp/ libzrtpcpp-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnu.org/pub/gnu/ccrtp/libzrtpcpp-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/libzrtpcpp-$VERSION.tar.gz
cd libzrtpcpp-$VERSION
# fix missing netinet/in.h (used for ntohl and htonl)
mkdir netinet
echo "#include <winsock2.h>" > netinet/in.h
## remove -release from src/Makefile to avoid: "libtool: link: you must specify an output file"
#mv src/Makefile.in src/Makefile.in.bak
#sed -e "s/-release//" src/Makefile.in.bak > src/Makefile.in
# fix detection of libccrtp
mv configure configure.bak
sed -e "s/libccrtp1/libccrtp/" configure.bak > configure
## remove dependancy on dynamic libstdc++ (GCC 4)
#mv libtool libtool.bak &&
#sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
# use make -i to ignore error "install: will not overwrite just-created":
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-ccrtp CXXFLAGS="-Drandom=rand -Dsrandom=srand -DHAVE_LOCALTIME_R" LDFLAGS="-no-undefined -Wl,-no-undefined" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-ccrtp CXXFLAGS="-Drandom=rand -Dsrandom=srand -DHAVE_LOCALTIME_R" LDFLAGS="-Wl,-no-undefined" &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 # remove -llthread from Makefiles
 for F in `find . -iname Makefile` ; do
  mv $F $F.bak
  sed -e 's/-llthread//g' $F.bak > $F
 done &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 ( make install-strip || make -i install-strip ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libzrtpcpp-$VERSION
## use Cmake (version >= 2.0.0) &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
#rm -f CMakeCache.txt &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC:BOOL=ON . &&
# make install &&
#    echo OK


