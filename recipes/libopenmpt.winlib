#export NAME="libopenmpt"
#export STATUS=
#export URL=http://lib.openmpt.org/libopenmpt/
#export BASENAME=libopenmpt
#export DESCRIPTION="libopenmpt is a cross-platform C++ and C library to decode tracked music files (modules) into a raw PCM audio stream."
#export CATEGORY=audio
#export TYPE=library
##export VERSION=0.2.7386-beta20.3
##export VERSIONDATE=20161202
#export VERSION=0.2.7774-beta22
#export VERSIONDATE=20170419
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=BSD
#export DOWNLOADURL="https://lib.openmpt.org/files/libopenmpt/src/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://lib.openmpt.org/files/libopenmpt/src/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$(echo $VERSION|sed -e "s/-beta.*$//")
#wl-showstatus build-install &&
# #make install PREFIX=$INSTALLPREFIX SHARED_LIB=1 STATIC_LIB=1 EXAMPLES=0 TEST=0 EXESUFFIX=.exe SOSUFFIX=.dll.0 LIBOPENMPT_SONAME=libopenmpt.dll &&
# make all bin/libopenmpt.pc install PREFIX=$INSTALLPREFIX CONFIG=mingw64-win$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) OPENMPT123=0 TEST=0 SHARED_LIB=1 STATIC_LIB=1 SOSUFFIX=.dll SHARED_SONAME=0 LIBOPENMPT_SONAME= LIBOPENMPT_LDFLAGS="-Wl,--out-implib,libopenmpt.dll.a" AR=ar INSTALL="install" INSTALL_MAKE_DIR="install -d" INSTALL_DIR="cp -rf" &&
# mkdir -p $INSTALLPREFIX/bin &&
# mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# strip $INSTALLPREFIX/bin/*.dll &&
# ( cp -f libopenmpt.dll.a $INSTALLPREFIX/lib/ || dlltool.exe -D $INSTALLPREFIX/bin/libopenmpt.dll -l INSTALLPREFIX/bin/libopenmpt.dll.a ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION*



export NAME="libopenmpt"
export STATUS=
export URL=http://lib.openmpt.org/libopenmpt/
export BASENAME=libopenmpt
export DESCRIPTION="libopenmpt is a cross-platform C++ and C library to decode tracked music files (modules) into a raw PCM audio stream."
export CATEGORY=audio
export TYPE=library
#export VERSION=0.3.12
#export VERSIONDATE=20180928
#export VERSION=0.3.13
#export VERSIONDATE=20181022
#export VERSION=0.3.14
#export VERSIONDATE=20190107
#export VERSION=0.3.15
#export VERSIONDATE=20190122
#export VERSION=0.3.16
#export VERSIONDATE=20190408
#export VERSION=0.3.17
#export VERSIONDATE=20190811
#export VERSION=0.3.18
#export VERSIONDATE=20190923
#export VERSION=0.3.19
#export VERSIONDATE=20191003
#export VERSION=0.3.20
#export VERSIONDATE=20191030
#export VERSION=0.3.21
#export VERSIONDATE=20200414
#export VERSION=0.3.22
#export VERSIONDATE=20200525
#export VERSION=0.3.23
#export VERSIONDATE=20200727
#export VERSION=0.3.24
#export VERSIONDATE=20200831
#export VERSION=0.3.25
#export VERSIONDATE=20201130
#export VERSION=0.4.0
#export VERSIONDATE=20181224
#export VERSION=0.4.1
#export VERSIONDATE=20190107
#export VERSION=0.4.2
#export VERSIONDATE=20190122
#export VERSION=0.4.3
#export VERSIONDATE=20190211
#export VERSION=0.4.4
#export VERSIONDATE=20190408
#export VERSION=0.4.5
#export VERSIONDATE=20190527
#export VERSION=0.4.6
#export VERSIONDATE=20190811
#export VERSION=0.4.7
#export VERSIONDATE=20190923
#export VERSION=0.4.8
#export VERSIONDATE=20190930
#export VERSION=0.4.9
#export VERSIONDATE=20191003
#export VERSION=0.4.10
#export VERSIONDATE=20191030
#export VERSION=0.4.11
#export VERSIONDATE=20191123
#export VERSION=0.4.12
#export VERSIONDATE=20200414
#export VERSION=0.4.13
#export VERSIONDATE=20200525
#export VERSION=0.4.14
#export VERSIONDATE=20200727
#export VERSION=0.4.15
#export VERSIONDATE=20200831
#export VERSION=0.4.16
#export VERSIONDATE=20201130
#export VERSION=0.5.0
#export VERSIONDATE=20200525
#export VERSION=0.5.1
#export VERSIONDATE=20200727
#export VERSION=0.5.2
#export VERSIONDATE=20200831
#export VERSION=0.5.3
#export VERSIONDATE=20201025
export VERSION=0.5.4
export VERSIONDATE=20201130
wl-showstatus --package-version
export DEPENDENCIES=zlib,libmpg123,libogg,libvorbis,pulseaudio,portaudio,libsndfile,flac,sdl2
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://lib.openmpt.org/files/libopenmpt/src/ libopenmpt- +release.autotools.tar.gz"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://lib.openmpt.org/files/libopenmpt/src/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://lib.openmpt.org/files/libopenmpt/src/$BASENAME-$VERSION+release.autotools.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION+release.autotools.tar.gz
cd $BASENAME-$VERSION+release.autotools
## fix missing std::aligned_alloc in common/mptAlloc.cpp (version >= 0.4.0 <= 0.4.2)
#patch -ulbf common/mptAlloc.cpp << EOF
#@@ -58,3 +58,3 @@
# {
#-       #if MPT_CXX_AT_LEAST(17) && (!MPT_COMPILER_MSVC && !MPT_GCC_BEFORE(8,1,0) && !MPT_CLANG_BEFORE(5,0,0)) && !(MPT_COMPILER_CLANG && defined(__GLIBCXX__)) && !MPT_OS_EMSCRIPTEN
#+       #if MPT_CXX_AT_LEAST(17) && (!MPT_COMPILER_MSVC && !MPT_GCC_BEFORE(8,1,0) && !MPT_CLANG_BEFORE(5,0,0)) && !(MPT_COMPILER_CLANG && defined(__GLIBCXX__)) && !MPT_OS_EMSCRIPTEN && !defined(__MINGW32__)
#                std::size_t space = count * size;
#EOF
## fix missing std::aligned_alloc in common/mptAlloc.cpp (version >= 0.4.3 <= 0.4.12)
#patch -ulbf common/mptAlloc.cpp << EOF
#@@ -58,3 +58,3 @@
# {
#-       #if MPT_CXX_AT_LEAST(17) && (!MPT_COMPILER_MSVC && !MPT_GCC_BEFORE(8,1,0) && !MPT_CLANG_BEFORE(5,0,0)) && !(MPT_COMPILER_CLANG && defined(__GLIBCXX__)) && !(MPT_COMPILER_CLANG && MPT_OS_MACOSX_OR_IOS) && !MPT_OS_EMSCRIPTEN
#+       #if MPT_CXX_AT_LEAST(17) && (!MPT_COMPILER_MSVC && !MPT_GCC_BEFORE(8,1,0) && !MPT_CLANG_BEFORE(5,0,0)) && !(MPT_COMPILER_CLANG && defined(__GLIBCXX__)) && !(MPT_COMPILER_CLANG && MPT_OS_MACOSX_OR_IOS) && !MPT_OS_EMSCRIPTEN && !defined(__MINGW32__)
#                std::size_t space = count * size;
#EOF
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-sdl2 --with-pulseaudio --disable-examples --disable-tests &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION+release.autotools



