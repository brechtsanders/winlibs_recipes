export NAME="G'MIC"
export STATUS=
export URL=https://gmic.eu/
export BASENAME=gmic
export DESCRIPTION="G'MIC is a full-featured open-source framework for digital image processing, distributed under the CeCILL free software licenses (LGPL-like and/or GPL-compatible). It provides several user interfaces to convert / process / visualize generic image datasets, ranging from 1D scalar signals to 3D+t sequences of multi-spectral volumetric images, hence including 2D color images. "
export CATEGORY=graphics
export TYPE=library
#export VERSION=2.9.1
#export VERSIONDATE=20200810
#export VERSION=2.9.2
#export VERSIONDATE=20200904
#export VERSION=2.9.3
#export VERSIONDATE=20201116
#export VERSION=2.9.4
#export VERSIONDATE=20201124
#export VERSION=2.9.5
#export VERSIONDATE=20210206
#export VERSION=2.9.6
#export VERSIONDATE=20210209
#export VERSION=2.9.7
#export VERSIONDATE=20210408
#export VERSION=2.9.8
#export VERSIONDATE=20210716
#export VERSION=2.9.9
#export VERSIONDATE=20210903
#export VERSION=3.0.0
#export VERSIONDATE=20211209
####ld.exe: cannot find -llibgmicstatic
#export VERSION=3.0.1
#export VERSIONDATE=20220114
export VERSION=3.0.2
export VERSIONDATE=20220118
#export VERSION=3.1.0
#export VERSIONDATE=20220427
#export VERSION=3.1.1
#export VERSIONDATE=20220510
#export VERSION=3.1.2
#export VERSIONDATE=20220511
#export VERSION=3.1.3
#export VERSIONDATE=20220617
wl-showstatus --package-version
export DEPENDANCIES=pthreads,zlib,libcurl,libjpeg,libpng,libtiff,fftw,cimg,imath,openexr,graphicsmagick
#export DEPENDANCIES=pthreads,zlib,libcurl,libjpeg,libpng,libtiff,fftw,cimg,imath,openexr,graphicsmagick,gimp
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=CeCILL/LGPL/GPL
export DOWNLOADURL="https://gmic.eu/files/source/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://gmic.eu/files/source/gmic_$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/gmic_$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/gmic_cli.cpp (version >= 3.0.2)
patch -ulbf src/gmic_cli.cpp << EOF
@@ -51,3 +51,2 @@
 #include <signal.h>
-#include "CImg.h"
 #include "gmic.h"
EOF
## fix src/gmic_cli.cpp (version >= 3.1.0)
#patch -ulbf src/gmic_cli.cpp << EOF
#@@ -53,2 +53,3 @@
# #include "gmic.h"
#+#include "CImg.h"
# using namespace cimg_library;
#EOF
## fix src/gmic.h (version >= 3.1.0)
#patch -ulbf src/gmic.h << EOF
#@@ -195,3 +195,3 @@
# #ifdef cimg_version
#-#error "[gmic] *** Error *** File 'CImg.h' has been already included (should have been done first in file 'gmic.h')."
#+#warning "[gmic] *** Error *** File 'CImg.h' has been already included (should have been done first in file 'gmic.h')."
# #endif
#EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_LIB:BOOL=ON -DBUILD_LIB_STATIC:BOOL=OFF -DENABLE_X:BOOL=OFF -DBUILD_MAN:BOOL=OFF -S. -Bbuild_win &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_LIB:BOOL=ON -DBUILD_LIB_STATIC:BOOL=OFF -DENABLE_DYNAMIC_LINKING:BOOL=ON -DENABLE_X:BOOL=OFF -DBUILD_MAN:BOOL=OFF -S. -Bbuild_win &&
 PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_LIB:BOOL=ON -DBUILD_LIB_STATIC:BOOL=ON -DENABLE_DYNAMIC_LINKING:BOOL=ON -DBUILD_BASH_COMPLETION:BOOL=OFF -DENABLE_X:BOOL=OFF -DBUILD_MAN:BOOL=OFF -S. -Bbuild_win &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_LIB:BOOL=ON -DBUILD_LIB_STATIC:BOOL=ON -DENABLE_OPENCV:BOOL=OFF -DENABLE_X:BOOL=OFF -DBUILD_MAN:BOOL=OFF -S. -Bbuild_win &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 sed -i.bak -e "s/-D-Wl,/-Wl,/g" build_win/build.ninja &&
 sed -i.bak2 -e "s/LD_LIBRARY_PATH=[^ ]*//" build_win/build.ninja &&
 wl-showstatus build-install &&
 #LIBRARY_PATH=$MINGWPREFIX/x64/mingw/lib${LIBRARY_PATH:+:$LIBRARY_PATH} ninja -Cbuild_win install/strip &&
 LD_LIBRARY_PATH=$(pwd)/build_win/gmic${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH} ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#wl-showstatus build &&
# PATH=$MINGWPREFIX/qt/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ make &&
# PATH=$MINGWPREFIX/qt/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ make CC="${CC:-gcc} -Dgmic_core" CXX="${CXX:-g++} -Dgmic_core" &&
#    echo OK
