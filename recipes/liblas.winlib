export NAME="libLAS"
export STATUS=
export URL=http://liblas.org/
export BASENAME=liblas
export DESCRIPTION="libLAS is a C/C++ library for reading and writing ASPRS LAS versions 1.0, 1.1 and 1.2 data. The LAS format is a sequential binary format used to store data from sensors and as intermediate processing storage by some LiDAR-related applications."
export CATEGORY=db
export TYPE=library
#export VERSION=1.2.1
#export VERSION=1.6.0
#export VERSIONDATE=20110221
####math cannot parse the expression: " / 100000": syntax error, unexpected
#export VERSION=1.6.1
#export VERSIONDATE=20110406
#export VERSION=1.7.0
#export VERSIONDATE=20130107
#export VERSION=1.8.0
#export VERSIONDATE=20140802
export VERSION=1.8.1
export VERSIONDATE=20160824
wl-showstatus --package-version
export DEPENDENCIES=boost,gdal
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=BSD
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=
#export DOWNLOADURL="http://liblas.org/wiki/Releases"
export DOWNLOADURL="http://liblas.org/download.html libLAS-"
#export DOWNLOADURL="https://github.com/libLAS/libLAS/releases libLAS-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://liblas.org/raw-attachment/wiki/$VERSION/liblas-src-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/liblas-src-$VERSION.tar.bz2
#cd liblas-src-$VERSION
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CXX="${CXX:-g++}" CXXCPP="g++"
## fix missing swprintf and vswprintf
#mv src/Makefile src/Makefile.bak
#sed -e "s/-pedantic -std=c++98//" src/Makefile.bak > src/Makefile
#make install
####undefined reference to `__gxx_personality_v0'
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf liblas-src-$VERSION
#export DOWNLOADSOURCEURL=http://download.osgeo.org/liblas/libLAS-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://download.osgeo.org/liblas/libLAS-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/libLAS-$VERSION.tar.gz
tar xj --force-local -f $TARBALLDIR/$BASENAME/libLAS-$VERSION.tar.bz2
cd libLAS-$VERSION
# fix missing boost/detail/endian.hpp
sed -i.bak -e "s?boost/detail/endian.hpp?boost/endian.hpp?" include/liblas/detail/binary.hpp
# fix undefined _1 in src/header.cpp and src/c_api.cpp (version >= 1.8.1)
sed -i.bak -e "s/\b_1/std::placeholders::&/" src/header.cpp src/c_api.cpp
# fix detections in CMakeLists.txt (version >= 1.8.1)
sed -i.bak -e "s/\(find_package(Boost\) [0-9.]*/\1/; s/cmake_policy/#&/" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -S. -Bbuild_win &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DBoost_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DBoost_LIBRARY_DIRS:PATH=$MINGWPREFIX/lib -S. -Bbuild_win &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DBoost_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DBoost_LIBRARY_DIRS:PATH=$MINGWPREFIX/lib -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_win &&
 #-DWITH_GDAL:BOOL=TRUE -DWITH_GEOTIFF:BOOL=ON -DWITH_LASZIP:BOOL=ON -DWITH_PKGCONFIG:BOOL=ON
 wl-showstatus build-install &&
 #make -Cbuild_win -j1 install/strip &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libLAS-src-$VERSION



