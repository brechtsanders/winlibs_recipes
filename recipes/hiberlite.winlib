export NAME="hiberlite"
export STATUS=
#export URL=https://code.google.com/archive/p/hiberlite/
export URL=https://github.com/paulftw/hiberlite
export BASENAME=hiberlite
export DESCRIPTION="C++ object-relational mapping with API inspired by the Boost.Serialization"
export CATEGORY=database
export TYPE=library
export VERSION=master
export VERSIONDATE=20190704
wl-showstatus --package-version
export DEPENDENCIES=sqlite3
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/paulftw/hiberlite/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/paulftw/hiberlite/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix undefined uint8_t in include/some_types.h
#### Bug reported: https://github.com/paulftw/hiberlite/pull/41
mv include/some_types.h include/some_types.h.bak &&
echo "#include <cstdint>" >> include/some_types.h &&
cat include/some_types.h.bak >> include/some_types.h
# use installed sqlite3
sed -i.bak -e "s/\(OBJS\s*=.*\)\s*sqlite3.o/\1/; s/LDFLAGS\s*=.*/& -lsqlite3/" Makefile
touch sqlite3.o
# use specified compiler
sed -i.bak2 -e "s/\bgcc\b/\$(CC)/; s/\bg++/\$(CXX)/; s/\bar\b/\$(AR)/" Makefile
wl-showstatus build &&
 make CC=${CC:-gcc} CXX=${CXX:-g++} AR=${AR:-ar} &&
 wl-showstatus install &&
 make install INSTALL_PREFIX=$INSTALLPREFIX &&
 # clean up .bak file
 rm -f $INSTALLPREFIX/include/hiberlite/some_types.h.bak &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: build DLL



