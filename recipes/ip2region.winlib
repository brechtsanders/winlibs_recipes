export NAME="Ip2region"
export STATUS=
export URL=https://gitee.com/lionsoul/ip2region
#export URL=https://github.com/lionsoul2014/ip2region/
export BASENAME=ip2region
export DESCRIPTION="Ip2region is a offline IP location library with accuracy rate of 99.9% and 0.0x millseconds searching performance. DB file is ONLY a few megabytes with all IP address stored."
export CATEGORY=geo
export TYPE=library
#export VERSION=20210309
#export VERSIONDATE=20210826
#export VERSION=2.6.1
#export VERSIONDATE=20220627
#export VERSION=2.7.0
#export VERSIONDATE=20220704
#export VERSION=2.8.0
#export VERSIONDATE=20220712
#export VERSION=2.9.0
#export VERSIONDATE=20220718
#export VERSION=2.10.0
#export VERSIONDATE=20220804
#export VERSION=2.11.0
#export VERSIONDATE=20221208
#export VERSION=2.11.1
#export VERSIONDATE=20230205
export VERSION=2.11.2
export VERSIONDATE=20230616
#export VERSION=2.12.0
#export VERSIONDATE=20250807
#export VERSION=3.0.0
#export VERSIONDATE=20250908
#export VERSION=3.1.0
#export VERSIONDATE=20250913
#export VERSION=3.5.1
#export VERSIONDATE=20250930
#export VERSION=3.6.0
#export VERSIONDATE=20251016
#export VERSION=3.7.0
#export VERSIONDATE=20251021
#export VERSION=3.7.1
#export VERSIONDATE=20251021
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE=Apache
#export DOWNLOADURL="https://github.com/lionsoul2014/ip2region/releases"
export DOWNLOADURL="https://github.com/lionsoul2014/ip2region/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/lionsoul2014/ip2region/archive/refs/tags/v$VERSION-release.tar.gz
export DOWNLOADSOURCEURL=https://github.com/lionsoul2014/ip2region/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION-release.tar.gz
#cd $BASENAME-$VERSION-release
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION/v1.0
#cd $BASENAME-$VERSION
## fix missing mktime in binding/c/xdb_searcher.c (version >= 2.12.0)
#sed -i.bak -e "1i #include <time.h>" binding/c/xdb_searcher.c
## fix binding/cpp/xdb_search.cc (version >= 2.12.0)
#patch -ulbf binding/cpp/xdb_search.cc << EOF
#@@ -3,3 +3,51 @@
#
#+#ifdef _WIN32
#+#include <winsock2.h>
#+#include <ws2tcpip.h>
#+#if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600
#+inline int inet_pton (int af, const char * src, void * dst)
#+{
#+  switch (af) {
#+    case AF_INET:
#+    {
#+      int ch;
#+      unsigned char tmp[4];
#+      unsigned char* tp = tmp;
#+      int saw_digit = 0;
#+      int octets = 0;
#+      *tmp = 0;
#+      while ((ch = *src++) != '\\\\0') {
#+        if ('0' <= ch && ch <= '9') {
#+          unsigned octet = *tp * 10 + ch - '0';
#+          if (saw_digit && *tp == 0)
#+            return (0);
#+          if (octet > 255)
#+            return (0);
#+          *tp = octet;
#+          if (!saw_digit) {
#+            if (++octets > 4)
#+              return (0);
#+            saw_digit = 1;
#+          }
#+        } else if (ch == '.' && saw_digit) {
#+          if (octets == 4)
#+            return (0);
#+          *++tp = 0;
#+          saw_digit = 0;
#+        } else
#+          return (0);
#+      }
#+      if (octets < 4)
#+        return (0);
#+      memcpy(dst, tmp, 4);
#+      return (1);
#+    }
#+    default:
#+      return -1;//to do: implement AF_INET6
#+  }
#+}
#+#endif
#+#else
# #include <arpa/inet.h>
#+#endif
# #include <sys/time.h>
#EOF
## fix binding/cpp/xdb_bench.cc (version >= 2.12.0)
#patch -ulbf binding/cpp/xdb_bench.cc << EOF
#@@ -3,3 +3,51 @@
#
#+#ifdef _WIN32
#+#include <winsock2.h>
#+#include <ws2tcpip.h>
#+#if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600
#+inline int inet_pton (int af, const char * src, void * dst)
#+{
#+  switch (af) {
#+    case AF_INET:
#+    {
#+      int ch;
#+      unsigned char tmp[4];
#+      unsigned char* tp = tmp;
#+      int saw_digit = 0;
#+      int octets = 0;
#+      *tmp = 0;
#+      while ((ch = *src++) != '\\\\\\\\0') {
#+        if ('0' <= ch && ch <= '9') {
#+          unsigned octet = *tp * 10 + ch - '0';
#+          if (saw_digit && *tp == 0)
#+            return (0);
#+          if (octet > 255)
#+            return (0);
#+          *tp = octet;
#+          if (!saw_digit) {
#+            if (++octets > 4)
#+              return (0);
#+            saw_digit = 1;
#+          }
#+        } else if (ch == '.' && saw_digit) {
#+          if (octets == 4)
#+            return (0);
#+          *++tp = 0;
#+          saw_digit = 0;
#+        } else
#+          return (0);
#+      }
#+      if (octets < 4)
#+        return (0);
#+      memcpy(dst, tmp, 4);
#+      return (1);
#+    }
#+    default:
#+      return -1;//to do: implement AF_INET6
#+  }
#+}
#+#endif
#+#else
# #include <arpa/inet.h>
#+#endif
# #include <stdio.h>
#EOF
## fix Makefile (version >= 2.12.0)
#sed -i.bak -e "s/gcc \(.* -o.*\)$/\$(CC) \1/; s/ar \(.*\)$/\$(AR) \1/" binding/c/Makefile
#sed -i.bak -e "s/g++ \(.* -o.*\)$/\$(CXX) \1 -lws2_32/" binding/cpp/Makefile
## fix Makefile (version >= 3.7.1)
#sed -i.bak2 -e "s/-o \(xdb_searcher\|test_util\)$/& -lws2_32" binding/c/Makefile
wl-showstatus build &&
 ${CC:-gcc} -c -o binding/c/ip2region.o binding/c/ip2region.c -O3 -Ibinding/c &&
 ${CC:-gcc} -c -o binding/c/testSearcher.o binding/c/testSearcher.c -O3 -Ibinding/c &&
 ${CC:-gcc} -s -o binding/c/ip2region.exe binding/c/ip2region.o binding/c/testSearcher.o &&
 #(echo 127.0.0.1;echo quit)|binding/c/ip2region.exe data/ip2region.db &&
 ${AR:-ar} cru binding/c/libip2region.a binding/c/ip2region.o &&
 ( echo "EXPORTS" && ${NM:-nm} -f posix --defined-only -p binding/c/libip2region.a | sed -n -e "s/^_*\([^ ]*\) T .*$/\1/p" ) > binding/c/ip2region.def &&
 ${CC:-gcc} -shared -s -mwindows -def binding/c/ip2region.def -o binding/c/ip2region.dll binding/c/libip2region.a -Wl,--out-implib,binding/c/libip2region.dll.a &&
 #make -C binding/c CC=${CC:-gcc} AR=${AR:-ar} xdb_searcher_lib all &&
 #make -C binding/cpp CXX=${CXX:-g++} &&
 #( echo "EXPORTS" && ${NM:-nm} -f posix --defined-only -p binding/c/build/lib/libxdb_searcher.a | sed -n -e "s/^_*\([^ ]*\) T .*$/\1/p" ) > binding/c/libxdb_searcher.def &&
 #${CC:-gcc} -shared -s -mwindows -def binding/c/libxdb_searcher.def -o binding/c/libxdb_searcher.dll binding/c/build/lib/libxdb_searcher.a -Wl,--out-implib,binding/c/liblibxdb_searcher.dll.a &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin $INSTALLPREFIX/share/ip2region &&
 cp -f binding/c/*.h $INSTALLPREFIX/include/ &&
 cp -f binding/c/*.a binding/c/*.def $INSTALLPREFIX/lib/ &&
 cp -f binding/c/*.dll binding/c/*.exe $INSTALLPREFIX/bin/ &&
 cp -f data/* $INSTALLPREFIX/share/ip2region/ &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION-release
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####Note: data is in Chinese



