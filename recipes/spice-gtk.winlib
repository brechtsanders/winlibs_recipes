#export NAME="SPICE GTK+ Widget"
#export STATUS=
#export URL=https://cgit.freedesktop.org/spice/spice-gtk
#export BASENAME=spice-gtk
#export DESCRIPTION="spice-gtk is a GTK+3 SPICE widget. It features glib-based objects for SPICE protocol parsing and a gtk widget for embedding the SPICE display into other applications such as virt-manager or Boxes. Python and Vala bindings are available too."
#export CATEGORY=graphics,communication
#export TYPE=application
##export VERSION=0.34
##export VERSIONDATE=20170912
##export VERSION=0.35
##export VERSIONDATE=20180612
##export VERSION=0.36
##export VERSIONDATE=20190117
#export VERSION=0.37
#export VERSIONDATE=20190516
#######warning "You should consider building with libjpeg-turbo"
#wl-showstatus --package-version
#export DEPENDANCIES=spice-protocol,pulseaudio,gstreamer,gst-plugins-base,polkit,dbus,libusb,liblz4,gtk3,libcacard,pyparsing
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="https://www.spice-space.org/download/gtk/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://www.spice-space.org/download/gtk/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
## fix missing ntohl in spice-common/common/canvas_base.c (version >= )
#mv spice-common/common/canvas_base.c spice-common/common/canvas_base.c.bak &&
#echo "#include <winsock2.h>" > spice-common/common/canvas_base.c &&
#cat spice-common/common/canvas_base.c.bak >> spice-common/common/canvas_base.c
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-coroutine=winfiber PYTHON=$PYDIR/python.exe &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-coroutine=winfiber PYTHON=$PY2DIR/python.exe &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-coroutine=winfiber PYTHON=$PY2DIR/python.exe LDFLAGS="-Wl,--as-needed -lws2_32" &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# #make install-strip ASCIIDOC="$PYDIR/python.exe $(which asciidoc)" &&
# make install-strip ASCIIDOC="$PY2DIR/python.exe $(which asciidoc)" &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
##GDK_PIXBUF_MODULEDIR=$MINGWPREFIX/lib/gdk-pixbuf-2.0/2.10.0/loaders gdk-pixbuf-query-loaders > $MINGWPREFIX/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache
##GDK_PIXBUF_MODULE_FILE=$MINGWPREFIX/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache GDK_PIXBUF_MODULEDIR=$MINGWPREFIX/lib/gdk-pixbuf-2.0/2.10.0/loaders spicy
#####Executable (spicy.exe) crashes



export NAME="SPICE GTK+ Widget"
export STATUS=
export URL=https://cgit.freedesktop.org/spice/spice-gtk
export BASENAME=spice-gtk
export DESCRIPTION="spice-gtk is a GTK+3 SPICE widget. It features glib-based objects for SPICE protocol parsing and a gtk widget for embedding the SPICE display into other applications such as virt-manager or Boxes. Python and Vala bindings are available too."
export CATEGORY=graphics,communication
export TYPE=application
#export VERSION=0.38
#export VERSIONDATE=20200316
#export VERSION=0.39
#export VERSIONDATE=20201202
#export VERSION=0.40
#export VERSIONDATE=20220210
export VERSION=0.41
export VERSIONDATE=20220712
wl-showstatus --package-version
export DEPENDANCIES=spice-protocol,pulseaudio,gstreamer,gst-plugins-base,polkit,dbus,libusb,liblz4,gtk3,libcacard,libjpeg,phodav
export OPTIONALDEPENDANCIES=celt
export BUILDDEPENDANCIES=meson,ninja,pyparsing
#export BUILDDEPENDANCIES=meson,ninja,pyparsing,gtk-doc
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://www.spice-space.org/download/gtk/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://www.spice-space.org/download/gtk/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
## fix undefined reference to ntohl in subprojects/spice-common/common/canvas_base.c (version >= 0.38 <= 0.39)
#patch -ulbf subprojects/spice-common/common/canvas_base.c << EOF
#@@ -29,2 +29,4 @@
# #include <arpa/inet.h>
#+#else
#+#include <winsock2.h>
# #endif
#EOF
# fix already defined near/far in src/spice-widget-egl.c (version >= 0.39)
sed -i.bak2 -e "s/\b\(near\|far\)\b/var_&/g" src/spice-widget-egl.c
# fix missing DEVICE_TYPE in src/usb-device-cd.c (version >= 0.39)
patch -ulbf src/usb-device-cd.c << EOF
@@ -34,2 +34,4 @@
 #include <windows.h>
+#include <winternl.h>
+#include <winioctl.h>
 #include <ntddcdrm.h>
EOF
## fix MSVC issue
#mkdir -p winfix
#cp -rf $PYDIR/lib/distutils winfix/
#patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
#@@ -85,3 +85,3 @@
#         else:
#-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
#+            return None
#
#EOF
# skip building man
sed -i.bak -e "s/^subdir('man')/#&/" meson.build
# skip building subprojects/spice-common/docs
sed -i.bak -e "s/^subdir('docs')/#&/" subprojects/spice-common/meson.build
# skip detection of pyparsing in subprojects/spice-common/meson.build (version >= 0.39)
sed -i.bak2 -e "s/error('Python module .* not found/#&/" subprojects/spice-common/meson.build
# fix detection of Python (version >= 0.40)
sed -i.bak3 -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" subprojects/spice-common/meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dcoroutine=winfiber -Dgtk=enabled -Dpulse=enabled -Dwebdav=enabled -Dlz4=enabled -Dsasl=enabled -Dopus=enabled -Dbuiltin-mjpeg=false -Drecorder=false -Dintrospection=disabled -Dvapi=disabled -Dgtk_doc=enabled -Dpolkit=disabled . build_both &&
 #PKG_CONFIG= PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dcoroutine=winfiber -Dgtk=enabled -Dpulse=enabled -Dwebdav=enabled -Dlz4=enabled -Dsasl=enabled -Dopus=enabled -Dbuiltin-mjpeg=false -Drecorder=false -Dintrospection=disabled -Dvapi=disabled -Dgtk_doc=enabled -Dpolkit=disabled . build_both &&
 PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dcoroutine=winfiber -Dgtk=enabled -Dwebdav=enabled -Dlz4=enabled -Dsasl=enabled -Dopus=enabled -Dbuiltin-mjpeg=false -Drecorder=false -Dintrospection=disabled -Dvapi=disabled -Dgtk_doc=enabled -Dpolkit=disabled . build_both &&
 #PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dcoroutine=winfiber -Dgtk=enabled -Dwebdav=enabled -Dlz4=enabled -Dsasl=enabled -Dopus=enabled -Dbuiltin-mjpeg=false -Drecorder=false -Dintrospection=enabled -Dvapi=enabled -Dgtk_doc=enabled -Dpolkit=disabled . build_both &&
 #-Dcelt051=enabled 
 # fix slash/backslash path issue when calling Python from Ninja
 sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 # find Python path issues in meson_exe
 sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 # fix missing undefined references to libepoxy symbols (version >= 0.39)
 sed -i.bak2 -e "s/^\s*LINK_ARGS\s*=.*-Wl,--end-group\(\"*\)/& \1-Wl,--as-needed\1 \1-lepoxy\1/" build_both/build.ninja &&
 # fix issue calling Python (version >= 0.41)
 sed -i.bak3 -e "s/\(python\.exe\" \)\"python\" //g" build_both/build.ninja &&
 # fix issue with Python path (version >= 0.41)
 sed -i.bak4 -e "s/\"$(cygpath -w $PYDIR|sed -e 's/\\/&&/g')\\\\\(\"[^ ]\)/\1/g" build_both/build.ninja &&
 # fix issue with keymap-gen (version >= 0.41)
 sed -i.bak5 -e "s?\(\"--\"\) \(\"[^\"]*keymap-gen\"\)?\1 \"$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&/g')\" \2?g" build_both/build.ninja &&
 wl-showstatus build-install &&
 #PATH=$PATH:$PYDIR PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 PATH=$PATH:$PYDIR PYTHONPATH=$MINGWPREFIX/python:$MINGWPREFIX/python/Lib/site-packages:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 #PATH=$PATH:$PYDIR PKG_CONFIG= PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/python/Lib/site-packages:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: build Windows application (alongside console application)
####spicy.exe



## create standalone package
#mkdir -p spice-gtk/bin spice-gtk/share/icons/Adwaita spice-gtk/share/glib-2.0/schemas &&
#copypedeps -r $MINGWPREFIX/bin/spicy.exe $MINGWPREFIX/bin/spicy-screenshot.exe $MINGWPREFIX/bin/spicy-stats.exe spice-gtk/bin/ &&
##for F in $(cat $C/var/lib/packages/spice-gtk/files); do
## mkdir -p spice-gtk/$(dirname $F)
## echo $MINGWPREFIX/$F spice-gtk/$F
##done &&
##cp -rf $MINGWPREFIX/share/icons/Adwaita/* spice-gtk/share/icons/Adwaita/
##cp -f $C/share/glib-2.0/schemas/org.gtk.Settings.*.gschema.xml spice-gtk/share/glib-2.0/schemas/
##glib-compile-schemas.exe spice-gtk/share/glib-2.0/schemas --targetdir=spice-gtk/share/glib-2.0/schemas
