export NAME="VulkanSceneGraph"
export STATUS=
export URL=https://vsg-dev.github.io/VulkanSceneGraph/
#export URL=https://github.com/vsg-dev/VulkanSceneGraph
export BASENAME=vulkanscenegraph
export DESCRIPTION="VulkanSceneGraph (VSG), is a modern, cross platform, high performance scene graph library built upon Vulkan graphics/compute API. The software is written in C++17, and follows the CppCoreGuidelines and FOSS Best Practices."
export CATEGORY=graphics
export TYPE=library
#export VERSION=0.1.10
#export VERSIONDATE=20220702
#export VERSION=1.0.0
#export VERSIONDATE=20221114
#export VERSION=1.0.1
#export VERSIONDATE=20221205
#export VERSION=1.0.2
#export VERSIONDATE=20221212
#export VERSION=1.0.3
#export VERSIONDATE=20230303
#export VERSION=1.0.4
#export VERSIONDATE=20230321
#export VERSION=1.0.5
#export VERSIONDATE=20230413
#export VERSION=1.0.6
#export VERSIONDATE=20230526
#export VERSION=1.0.7
#export VERSIONDATE=20230620
export VERSION=1.0.8
export VERSIONDATE=20230727
wl-showstatus --package-version
export DEPENDENCIES=vulkan-headers,vulkan-loader,spirv-tools,glslang
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/vsg-dev/VulkanSceneGraph/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/vsg-dev/VulkanSceneGraph/archive/refs/tags/VulkanSceneGraph-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/vsg-dev/VulkanSceneGraph/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/VulkanSceneGraph-$VERSION.tar.gz
#cd VulkanSceneGraph-VulkanSceneGraph-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd VulkanSceneGraph-$VERSION
# fix src/vsg/io/FileSystem.cpp (version >= 1.0.2)
#### Bug reported: https://github.com/vsg-dev/VulkanSceneGraph/pull/646
patch -ulbf src/vsg/io/FileSystem.cpp << EOF
@@ -26,2 +26,5 @@
 #    include <windows.h>
+#    ifdef __MINGW32__
+#        include <sys/stat.h>
+#    endif

EOF
# fix missing constants in src/vsg/platform/win32/Win32_Window.cpp (version >= 1.0.3)
#### Note: this should not be needed if _WIN32_WINNT >= 0x0604
sed -i.bak -e "s/^\s*{\(VK_[^ ]*\).*$/#ifdef \1\n&\n#endif/" src/vsg/platform/win32/Win32_Window.cpp
# use already installed shaderc (version >= 1.0.3)
touch src/glslang/build_vars.cmake
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DVSG_SUPPORTS_ShaderCompiler:STRING=0 -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/glslang" -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DVSG_SUPPORTS_ShaderCompiler:STRING=0 -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/glslang -DGLSLANG_IS_SHARED_LIBRARY" -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/glslang -DGLSLANG_IS_SHARED_LIBRARY -DGLSLANG_EXPORTING" -S. -Bbuild_shared &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lglslang -lglslang-default-resource-limits -lSPIRV/" build_shared/build.ninja &&
 # fix multiple definitions (version >= 1.0.5)
 sed -i.bak2 -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--allow-multiple-definition/" build_shared/build.ninja &&
 # fix undefined uint32_t in src/glslang/glslang/MachineIndependent/SymbolTable.h (version >= 1.0.6)
 mv src/glslang/glslang/MachineIndependent/SymbolTable.h src/glslang/glslang/MachineIndependent/SymbolTable.h.bak &&
 echo "#include <cstdint>" > src/glslang/glslang/MachineIndependent/SymbolTable.h &&
 cat src/glslang/glslang/MachineIndependent/SymbolTable.h.bak >> src/glslang/glslang/MachineIndependent/SymbolTable.h &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf VulkanSceneGraph-VulkanSceneGraph-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf VulkanSceneGraph-$VERSION



