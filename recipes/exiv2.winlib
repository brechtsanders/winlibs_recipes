#export NAME="exiv2"
#export STATUS=
#export URL=http://www.exiv2.org/
#export BASENAME=exiv2
#export DESCRIPTION="Exiv2 is a C++ library and a command line utility to manage image metadata. It provides fast and easy read and write access to the Exif, IPTC and XMP metadata of images in various formats."
#export CATEGORY=metadata
#export TYPE=library
##export VERSION=0.18.2
##export VERSIONDATE=20091125
##export VERSION=0.19
##export VERSIONDATE=20091231
##export VERSION=0.20
##export VERSIONDATE=20100331
##export VERSION=0.21
##export VERSIONDATE=20101101
##export VERSION=0.21.1
##export VERSIONDATE=20110216
##export VERSION=0.22
##export VERSIONDATE=20110918
##export VERSION=0.23
##export VERSIONDATE=20120424
##export VERSION=0.24
##export VERSIONDATE=20131203
##export VERSION=0.25
##export VERSIONDATE=20150622
#####src/taglist.o:taglist.cpp:(.text.startup+0x243): undefined reference to `__imp__ZN5Exiv212IptcDataSets11dataSetListERSo'
#####src/taglist.o:taglist.cpp:(.text.startup+0x272): undefined reference to `__imp__ZN5Exiv28ExifTags7taglistERSo'
##export VERSION=0.26
##export VERSIONDATE=20170508
#####src/exiv2.cpp:(.text$_ZN5Exiv210BasicErrorIcEC1INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiRKT_[__ZN5Exiv210BasicErrorIcEC1INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiRKT_]+0x26e): undefined reference to `_imp___ZN5Exiv210BasicErrorIcE6setMsgEv'
##export VERSION=0.27
##export VERSIONDATE=20181221
##export VERSION=0.27.1
##export VERSIONDATE=20190426
#####src/exiv2.cpp:(.text$_ZN5Exiv210BasicErrorIcEC1INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9ErrorCodeERKT_[_ZN5Exiv210BasicErrorIcEC1INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9ErrorCodeERKT_]+0x7f): undefined reference to `__imp__ZN5Exiv210BasicErrorIcE6setMsgEv'
##export VERSION=0.27.2
##export VERSIONDATE=20190727
##export VERSION=0.27.3
##export VERSIONDATE=20200701
##export VERSION=0.27.4
##export VERSIONDATE=20210616
##export VERSION=0.27.5
##export VERSIONDATE=20211023
##export VERSION=0.27.6
##export VERSIONDATE=20230119
##export VERSION=0.27.7
##export VERSIONDATE=20230514
#export VERSION=0.28.0
#export VERSIONDATE=20230509
#####app/exiv2app.hpp:211:35: error: field 'yodAdjust_' has incomplete type 'std::array<Params::YodAdjust, 3>'
#wl-showstatus --package-version
##export DEPENDENCIES=expat,zlib,libiconv,gettext
#export DEPENDENCIES=pthreads,expat,zlib,libiconv,gettext,libcurl,libssh
#export OPTIONALDEPENDENCIES=xmp
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL2
##export DOWNLOADURL="http://www.exiv2.org/download.html exiv2- -trunk.tar.gz"
##export DOWNLOADURL="http://www.exiv2.org/download.html"
#export DOWNLOADURL="https://github.com/Exiv2/exiv2/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://www.exiv2.org/builds/$BASENAME-$VERSION-trunk.tar.gz
##export DOWNLOADSOURCEURL=http://www.exiv2.org/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://github.com/Exiv2/exiv2/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/Exiv2/exiv2/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION-trunk.tar.gz
##cd exiv2-trunk
### fix missing snprintf
##mv xmpsdk/src/XMPMeta.cpp xmpsdk/src/XMPMeta.cpp.bak
##echo "#include <stdio.h>" > xmpsdk/src/XMPMeta.cpp
##cat xmpsdk/src/XMPMeta.cpp.bak >> xmpsdk/src/XMPMeta.cpp
### fix snprintf problem in xmpsdk/src/XMPIterator.cpp (version >= 0.23)
##mv xmpsdk/src/XMPIterator.cpp xmpsdk/src/XMPIterator.cpp.bak
##echo "#include <stdio.h>" > xmpsdk/src/XMPIterator.cpp
##sed -e "s/\(snprintf\)/::_\1/" xmpsdk/src/XMPIterator.cpp.bak >> xmpsdk/src/XMPIterator.cpp
## fix undefined __MINGW__ in src/http.cpp (version >= 0.25)
#mv src/http.cpp src/http.cpp.bak &&
#sed -e "s/__MINGW__/__MINGW32__/" src/http.cpp.bak > src/http.cpp
## fix missing strcasecmp in samples/geotag.cpp (version >= 0.25)
#mv samples/geotag.cpp samples/geotag.cpp.bak &&
#sed -e "s?^#define\s*stricmp\s*strcasecmp?//&?" samples/geotag.cpp.bak > samples/geotag.cpp
### fix missing localtime_r/gmtime_r in xmpsdk/src/XMPUtils.cpp (version >= 0.26)
##mv xmpsdk/src/XMPUtils.cpp xmpsdk/src/XMPUtils.cpp.bak
##cat > xmpsdk/src/XMPUtils.cpp << EOF
###define localtime_r(clock,result) (*(result) = *localtime(clock),result)
###include <pthread.h>
##//#define gmtime_r( _clock, _result ) ( *(_result) = *gmtime( (_clock) ), (_result) )
##EOF
##cat xmpsdk/src/XMPUtils.cpp.bak >> xmpsdk/src/XMPUtils.cpp
## fix app/exiv2app.hpp (version >= 0.28.0)
#patch -ulbf app/exiv2app.hpp << EOF
#@@ -21,2 +21,3 @@
# #include <set>
#+#include <array>
#
#EOF
### fix invalid -no-undefined in configure
##mv configure configure.bak
##sed -e "s/ -no-undefined/ -Wl,-no-undefined/" configure.bak > configure
#### remove dependancy on dynamic libstdc++ (GCC 4)
###mv libtool libtool.bak &&
###sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
##wl-showstatus configure &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CXX="${CXX:-g++} -static-libstdc++" &&
### make all install
### make all install CXX="${CXX:-g++} -static-libstdc++" &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-static-libstdc++" &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--enable-auto-import" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-visibility LDFLAGS="-Wl,--enable-auto-import -Wl,-no-undefined" &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-visibility CXXFLAGS="-static-libgcc -static-libstdc++" LDFLAGS="-Wl,--enable-auto-import -Wl,-no-undefined" &&
## # fix building DLL
## mv libtool libtool.bak &&
## sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
## wl-showstatus build &&
## make &&
## wl-showstatus build-install &&
## make install &&
## fix missing GetModuleFileNameEx in src/futils.cpp (version >= 0.27)
#mv src/futils.cpp src/futils.cpp.bak
#cat > src/futils.cpp << EOF
##define PSAPI_VERSION 1
##include <windows.h>
##include <psapi.h>
#EOF
#cat src/futils.cpp.bak >> src/futils.cpp
## fix src/image.cpp (version >= 0.27.2)
#sed -i.bak -e "s/#if \(.*\) == 1/#ifdef \1/" src/image.cpp
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DEXIV2_ENABLE_SHARED:BOOL=OFF -S. -Bbuild_static &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DEXIV2_ENABLE_SHARED:BOOL=OFF -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_BUILD_PO:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=OFF -DEXIV2_ENABLE_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_static &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DEXIV2_ENABLE_SHARED:BOOL=OFF -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_BUILD_PO:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_VIDEO:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=OFF -DEXIV2_ENABLE_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_static &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DEXIV2_ENABLE_SHARED:BOOL=OFF -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_BUILD_PO:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_VIDEO:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=OFF -DEXIV2_ENABLE_BUILD_SAMPLES:BOOL=OFF -DEXIV2_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_static &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DEXIV2_ENABLE_SHARED:BOOL=OFF -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_BUILD_PO:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -Dlibssh_DIR:PATH=$MINGWPREFIX/CMake/libssh -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_VIDEO:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=OFF -DEXIV2_ENABLE_BUILD_SAMPLES:BOOL=OFF -DEXIV2_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_static &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -Dlibssh_DIR:PATH=$MINGWPREFIX/CMake/libssh -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_VIDEO:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=OFF -DEXIV2_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_static &&
# cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -Dlibssh_DIR:PATH=$MINGWPREFIX/CMake/libssh -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=ON -DEXIV2_ENABLE_PRINTUCS2:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -DEXIV2_ENABLE_VIDEO:BOOL=ON -DEXIV2_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_static &&
# #sed -i.bak -e "s/^#define EXV_USE_[^ ]*$/& 1/" build_static/exv_conf.h &&
# # fix missing -lssh (version >= 0.27.2)
# echo "-Wl,--as-needed -lssh" >> build_static/src/CMakeFiles/exiv2lib.dir/linklibs.rsp &&
# #echo "-Wl,--as-needed -lssh" >> build_static/src/CMakeFiles/exiv2.dir/linklibs.rsp &&
# #echo "-Wl,--as-needed -lintl -lcurl" >> build_static/src/CMakeFiles/exiv2.dir/linklibs.rsp &&
# wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DEXIV2_ENABLE_SHARED:BOOL=ON -S. -Bbuild_shared &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DEXIV2_ENABLE_SHARED:BOOL=ON -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_BUILD_PO:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=OFF -DEXIV2_ENABLE_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_shared &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DEXIV2_ENABLE_SHARED:BOOL=ON -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_BUILD_PO:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_VIDEO:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=OFF -DEXIV2_ENABLE_BUILD_SAMPLES:BOOL=OFF -DEXIV2_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_shared &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DEXIV2_ENABLE_SHARED:BOOL=ON -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_BUILD_PO:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -Dlibssh_DIR:PATH=$MINGWPREFIX/CMake/libssh -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_VIDEO:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=OFF -DEXIV2_ENABLE_BUILD_SAMPLES:BOOL=OFF -DEXIV2_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_shared &&
# #cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -Dlibssh_DIR:PATH=$MINGWPREFIX/CMake/libssh -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_VIDEO:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=OFF -DEXIV2_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_shared &&
# cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DEXIV2_ENABLE_NLS:BOOL=ON -DEXIV2_ENABLE_CURL:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -Dlibssh_DIR:PATH=$MINGWPREFIX/CMake/libssh -DEXIV2_ENABLE_WEBREADY:BOOL=ON -DEXIV2_ENABLE_WIN_UNICODE:BOOL=ON -DEXIV2_ENABLE_PRINTUCS2:BOOL=ON -DEXIV2_ENABLE_SSH:BOOL=ON -DEXIV2_ENABLE_VIDEO:BOOL=ON -DEXIV2_BUILD_SAMPLES:BOOL=OFF -S. -Bbuild_shared &&
# #sed -i.bak -e "s/^#define EXV_USE_[^ ]*$/& 1/" exv_conf.h &&
# # fix missing -lssh (version >= 0.27.2)
# echo "-Wl,--as-needed -lssh" >> build_shared/src/CMakeFiles/exiv2lib.dir/linklibs.rsp &&
# #echo "-Wl,--as-needed -lssh" >> build_shared/src/CMakeFiles/exiv2.dir/linklibs.rsp &&
# #echo "-Wl,--as-needed -lintl" >> build_shared/src/CMakeFiles/exiv2.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -lintl -lcurl" >> build_shared/src/CMakeFiles/exiv2lib.dir/linklibs.rsp &&
# ## fix missing -lws2_32 (version >= 0.25)
# #(
# # #for F in build_shared/src/CMakeFiles/exiv2lib.dir/linklibs.rsp build_static/src/CMakeFiles/*.dir/linklibs.rsp build_static/samples/CMakeFiles/*.dir/linklibs.rsp; do
# # for F in build_shared/src/CMakeFiles/exiv2lib.dir/linklibs.rsp build_static/src/CMakeFiles/*.dir/linklibs.rsp; do
# #  echo "-Wl,--as-needed -lws2_32" >> $F
# # done
# #) &&
# ## fix missing -lpthread and -lintl (version >= 0.26)
# #(
# # #for F in build_shared/src/CMakeFiles/*.dir/linklibs.rsp build_static/src/CMakeFiles/*.dir/linklibs.rsp build_static/samples/CMakeFiles/*.dir/linklibs.rsp; do
# # for F in build_shared/src/CMakeFiles/*.dir/linklibs.rsp build_static/src/CMakeFiles/*.dir/linklibs.rsp; do
# #  echo "-Wl,--as-needed -lpthread -lintl" >> $F
# # done
# #) &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# #( make install/strip -C build_shared || ( ls -1 build_shared/bin/libexiv2.dll &> /dev/null && make -i install/strip -C build_shared )) &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf exiv2-trunk



export NAME="exiv2"
export STATUS=
export URL=http://www.exiv2.org/
export BASENAME=exiv2
export DESCRIPTION="Exiv2 is a C++ library and a command line utility to manage image metadata. It provides fast and easy read and write access to the Exif, IPTC and XMP metadata of images in various formats."
export CATEGORY=metadata
export TYPE=library
export VERSION=0.28.1
export VERSIONDATE=20231106
wl-showstatus --package-version
export DEPENDENCIES=pthreads,libiconv,gettext,inih,zlib,brotli,libcurl,expat
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL2
#export DOWNLOADURL="http://www.exiv2.org/download.html"
export DOWNLOADURL="https://github.com/Exiv2/exiv2/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/Exiv2/exiv2/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix meson.build (version >= 0.28.1)
patch -ulbf meson.build << EOF
@@ -21,4 +21,2 @@
     add_project_arguments('-DNOMINMAX', language: 'cpp')
-  elif cpp.compiles('#include <time.h>\\n#ifdef _UCRT\\n#error\\n#endif')
-    error('Non UCRT MinGW is unsupported. Please update toolchain')
   endif
EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dpng=enabled -Dinih=enabled -Dcurl=enabled -Dbrotli=enabled -Diconv=enabled -Dnls=enabled -Dxmp=enabled -Dbmff=true -Dlensdata=true -Dvideo=true -DunitTests=disabled . build_both &&
 wl-showstatus build-install &&
 ninja -Cbuild_both install &&
 (
# fix undefined EXIV2API
cat >> $INSTALLPREFIX/include/exiv2/exiv2lib_export.h << EOF
#ifndef EXIV2API
  #if defined(_WIN32) && !defined(exiv2lib_STATIC) && !defined(STATIC)
    #define EXIV2API __declspec(dllimport)
  #else
    #define EXIV2API
  #endif
#endif
#ifndef EXIV2LIB_NO_EXPORT
  #define EXIV2LIB_NO_EXPORT
#endif
EOF
 ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: fix missing lib/cmake/exiv2/exiv2Config.cmake



