export NAME="TeX Live"
export STATUS=
export URL=http://www.tug.org/texlive/
export BASENAME=texlive
export DESCRIPTION="TeX Live is an easy way to get up and running with the TeX document production system. It provides a comprehensive TeX system with binaries for most flavors of Unix, including GNU/Linux, and also Windows. It includes all the major TeX-related programs, macro packages, and fonts that are free software, including support for many languages around the world."
export CATEGORY=fileformat
export TYPE=library
#export VERSION=20170520
#export VERSIONDATE=20180407
#export VERSION=20180414
#export VERSIONDATE=20180501
#export VERSION=20190408
#export VERSIONDATE=20180630
####texk/web2c/pdftexdir/pdftoepdf.cc:97:22: error: 'void Object::free()' is private within this context
#export VERSION=20190410
#export VERSIONDATE=20200308
#export VERSION=20200406
#export VERSIONDATE=20200410
export VERSION=20210325
export VERSIONDATE=20210403
####configure: error: some requested system libraries failed
wl-showstatus --package-version
export DEPENDENCIES=lua,harfbuzz,icu,teckit,graphite2,zziplib,xpdf-utils,poppler,mpfr,gmp,cairo,pixman,potrace,libgd,freetype2,libpng,libpaper,zlib
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=potrace
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://mirror.koddos.net/CTAN/systems/texlive/Source/ texlive- -source.tar.xz"
export DOWNLOADURL="ftp://tug.org/historic/systems/texlive/"
#export DOWNLOADURL="http://ftp.cvut.cz/tex-archive/systems/texlive/Source/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://mirror.koddos.net/CTAN/systems/texlive/Source/texlive-$VERSION-source.tar.xz
export DOWNLOADSOURCEURL=ftp://tug.org/historic/systems/texlive/$(echo $VERSION|sed -e "s/^\([0-9]\{4\}\).*$/\1/")/texlive-$VERSION-source.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/texlive-$VERSION-source.tar.xz
cd texlive-$VERSION-source
## fix texk/web2c/luatexdir/luaffi/ffi.h
#patch -ulbf texk/web2c/luatexdir/luaffi/ffi.h << EOF
#@@ -44,2 +44,6 @@
#
#+#if (( defined( _WIN32) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__bsdi__) || defined(__DragonFly__))) && !defined(__MINGW32__)
#+/* We should include something equivalent to */
#+/* complex.h                                 */
#+#else
# #include <complex.h>
#@@ -47,2 +51,4 @@
# #define HAVE_LONG_DOUBLE
#+#endif
#+
#
#@@ -138,3 +144,3 @@
# #else
#-# error
#+# define UNSUPPORTED_ARCH
# #endif
#@@ -142,2 +148,15 @@
#
#+/* See ffi.c: replace luaopen_ffi with a stub    */
#+/* if FFI_ENABLE_LUATEX_INTERFACE is not defined */
#+#if (defined ARCH_X86 || defined ARCH_X64) && (defined OS_CE || defined OS_WIN
#|| defined OS_LINUX || defined OS_BSD || defined OS_POSIX || defined OS_OSX)
#+#define FFI_ENABLE_LUATEX_INTERFACE
#+#endif
#+/* for the moment */
#+#if (defined __CYGWIN__)
#+#undef FFI_ENABLE_LUATEX_INTERFACE
#+#endif
#+
#+
#+
#+
# #ifdef _WIN32
#@@ -353,5 +372,5 @@
#     const struct ctype type
#-#ifdef __GNUC__
#-      __attribute__ ((aligned(16)))
#-#endif
#+/*#ifdef __GNUC__*/
#+/*      __attribute__ ((aligned(16)))*/
#+/*#endif*/
#       ;
#EOF
# fix texk/web2c/luatexdir/luaffi/ffi.h
patch -ulbf texk/web2c/luatexdir/luaffi/ffi.h << EOF
@@ -44,3 +44,3 @@

-#if ( defined( _WIN32) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__bsdi__) || defined(__DragonFly__))
+#if (( defined( _WIN32) || defined(__FreeBSD__) || defined(__NetBSD__) || defined(__bsdi__) || defined(__DragonFly__))) && !defined(__MINGW32__)
 /* We should include something equivalent to */
EOF
# fix texk/dvisvgm/dvisvgm-src/src/Ghostscript.cpp (version >= 20200406)
patch -ulbf texk/dvisvgm/dvisvgm-src/src/Ghostscript.cpp << EOF
@@ -371,8 +371,8 @@
                return nullptr;
-#if defined(HAVE_LIBGS)
-       // use array defined in libgs to avoid linking the error strings into the binary
-       return gs_error_names[code-1];
-#elif defined(_WIN32)
+#if defined(_WIN32)
        // gs_error_names is private in the Ghostscript DLL so we can't access it here
        return error_names[code-1];
+#elif defined(HAVE_LIBGS)
+       // use array defined in libgs to avoid linking the error strings into the binary
+       return gs_error_names[code-1];
 #else
EOF
# fix error: reference to 'byte' is ambiguous in texk/dvisvgm/dvisvgm-src/src/FileSystem.cpp (version >= 20210325)
mv texk/dvisvgm/dvisvgm-src/src/FileSystem.cpp texk/dvisvgm/dvisvgm-src/src/FileSystem.cpp.bak &&
echo "#include <windows.h>" > texk/dvisvgm/dvisvgm-src/src/FileSystem.cpp &&
cat texk/dvisvgm/dvisvgm-src/src/FileSystem.cpp.bak >> texk/dvisvgm/dvisvgm-src/src/FileSystem.cpp
# fix redefinition of inet_pton in texk/web2c/luatexdir/luasocket/src/inet.h (version >= 20210325)
patch -ulbf texk/web2c/luatexdir/luasocket/src/inet.h << EOF
@@ -24,3 +24,3 @@

-#if defined( __MINGW32__ ) || defined( __MINGW64__ )
+#if (defined( __MINGW32__ ) || defined( __MINGW64__ )) && !defined(InetPtonA)
 #define LUASOCKET_INET_PTON
EOF
mkdir -p winbuild &&
 wl-showstatus configure &&
 cd winbuild &&
 #PATH=$MINGWPREFIX/qt/bin:$PATH 
 ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-native-texlive-build --disable-texlive --with-system-harfbuzz --with-system-icu --with-system-teckit --with-system-graphite2 --with-system-zziplib --with-system-mpfr --with-system-gmp --with-system-cairo --with-system-pixman --with-system-potrace --with-system-gd --with-system-freetype2 --with-system-libpng --with-system-libpaper --with-system-zlib --without-x --without-ln-s &&
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-native-texlive-build --disable-texlive --with-system-harfbuzz --with-system-icu --with-system-teckit --with-system-graphite2 --with-system-zziplib --with-system-xpdf --with-system-poppler --with-system-mpfr --with-system-gmp --with-system-cairo --with-system-pixman --with-system-potrace --with-system-gd --with-system-freetype2 --with-system-libpng --with-system-libpaper --with-system-zlib --without-x --without-ln-s &&
 #--with-system-ptexenc --with-system-kpathsea
 cd .. &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make -Cwinbuild &&
 #make -Cwinbuild LDFLAGS="-Wl,--as-needed -lgs" &&
 wl-showstatus build-install &&
 #make -Cwinbuild install-strip &&
 #make -Cwinbuild install-strip LDFLAGS="-Wl,--as-needed -lgs" &&
 ( make -Cwinbuild install-strip || ( cp -u winbuild/texk/web2c/*.exe winbuild/texk/web2c/.libs/ && make -Cwinbuild install-strip )) &&
 #make -Cwinbuild install-strip CXX="${CXX:-g++} -fpermissive" &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf texlive-$VERSION-source



