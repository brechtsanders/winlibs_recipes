#export NAME="nDPI"
#export STATUS=
#export URL=http://www.ntop.org/products/deep-packet-inspection/ndpi/
#export BASENAME=ndpi
#export DESCRIPTION="Open and Extensible LGPLv3 Deep Packet Inspection Library."
#export CATEGORY=dataprocessing,communication,security
#export TYPE=library
##export VERSION=1.6
##export VERSIONDATE=20170925
##export VERSION=2.0
##export VERSIONDATE=20170926
#####src/lib/ndpi_main.c:2076:8: error: conflicting types for 'strsep'
#####Cannot export ndpi_l4_detection_process_packet: symbol not defined
##export DEPENDANCIES=pthreads,winpcap,json
#export VERSION=2.2
#export VERSIONDATE=20171204
#####Cannot export ndpi_category_str: symbol not defined
#####Cannot export ndpi_find_port_based_protocol: symbol not defined
#####Cannot export ndpi_l4_detection_process_packet: symbol not defined
##export VERSION=2.4
##export VERSIONDATE=20180822
##export VERSION=2.6
##export VERSIONDATE=20181222
##export VERSION=2.8
##export VERSIONDATE=20190330
##export VERSION=3.0
##export VERSIONDATE=20191223
##export VERSION=3.2
##export VERSIONDATE=20200220
#####src/include/ndpi_win32.h:63:34: error: conflicting types for 'HANDLE'
#wl-showstatus --package-version
#export DEPENDANCIES=pthreads,winpcap,json,mman-win32
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/ntop/nDPI/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/ntop/nDPI/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd nDPI-$VERSION
## fix error: multiple storage classes in declaration specifiers  __forceinline static
#sed -i.orig -e "s/\b__forceinline\( static\)\b/\1/" $(grep -l "__forceinline static" $(find -name '*.c'))
## fix missing gettimeofday in src/lib/ndpi_main.c
#patch src/lib/ndpi_main.c << EOF
#@@ -5600,7 +5600,7 @@
#
# /* ****************************************************** */
#
#-#ifdef WIN32
#+#if defined(WIN32) && !defined(__MINGW32__)
#
# /*
#   int pthread_mutex_init(pthread_mutex_t *mutex, void *unused) {
#EOF
## fix example/ndpiReader.c
#patch -ulbf example/ndpiReader.c << EOF
#@@ -28,10 +28,16 @@
# #include <stdlib.h>
# #ifdef WIN32
#+#define _WIN32_WINNT 0x0600
# #include <winsock2.h> /* winsock.h is included automatically */
#+#include <ws2tcpip.h>
# #include <process.h>
# #include <io.h>
# #include <getopt.h>
#+#ifndef __MINGW32__
# #define getopt getopt____
# #else
#+#define localtime_r(clock, result) (*(result) = *localtime((clock)), (result))
#+#endif
#+#else
# #include <unistd.h>
# #include <netinet/in.h>
#@@ -52,5 +58,7 @@
# #include "ndpi_api.h"
#
#+#ifndef WIN32
# #include <sys/socket.h>
#+#endif
#
# #define MAX_NUM_READER_THREADS     16
#@@ -356,5 +364,5 @@
#                         const char *format, ...) {
#   va_list va_ap;
#-#ifndef WIN32
#+#if !defined(WIN32) || defined(__MINGW32__)
#   struct tm result;
# #endif
#@@ -1774,8 +1782,10 @@
# #endif
#
#+#ifndef __MINGW64_VERSION_MAJOR
# struct timezone {
#   int tz_minuteswest; /* minutes W of Greenwich */
#   int tz_dsttime;     /* type of dst correction */
# };
#+#endif
#
# /* ***************************************************** */
#EOF
## fix missing inet_pton in src/lib/ndpi_main.c (version >= 2.2)
#for F in $(grep -l "inet_ntop\|inet_pton" $(find -name '*.c')); do
# mv $F $F.bak &&
# echo "#define _WIN32_WINNT 0x0600" > $F &&
# cat $F.bak >> $F
#done
## fix missing exports (version >= 2.2)
#mv libndpi.sym libndpi.sym.bak &&
#grep -v "ndpi_category_str\|ndpi_find_port_based_protocol\|ndpi_l4_detection_process_packet" libndpi.sym.bak > libndpi.sym
#wl-showstatus configure &&
## fix missing configure.ac (version >= 2.2)
#sed -e "s/^\(autoreconf\|.\/configure\)/#&/" autogen.sh > autogen_fixed.sh
#./autogen_fixed.sh &&
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/pcap" LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed -lws2_32" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/pcap -I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman -lws2_32" &&
# # fix building DLLs
# sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# wl-showstatus build-install &&
# #make install-strip &&
# ( make install-strip || (
#  make -Cexample CFLAGS="-I$MINGWPREFIX/include/pcap -I$MINGWPREFIX/include/json-c -I$MINGWPREFIX/include/mman-win32" LIBS="-Wl,--as-needed -lmman" &&
#  make install-strip
# )) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf nDPI-$VERSION
#
#
#
## fix missing arpa/inet.h in src/lib/protocols/btlib.c (version >= 2.4)
#patch -ulbf src/lib/protocols/btlib.c << EOF
#@@ -41,4 +41,8 @@
# #include <stdlib.h>
#+#ifdef _WIN32
#+#include <winsock2.h>
#+#else
# #include <arpa/inet.h>
# #endif
#+#endif
#
#EOF
## fix missing u_int32_t in src/lib/third_party/include/ndpi_patricia.h (version >= 2.4)
#mv src/lib/third_party/include/ndpi_patricia.h src/lib/third_party/include/ndpi_patricia.h.bak
#cat > src/lib/third_party/include/ndpi_patricia.h << EOF
##include <stdint.h>
##ifndef u_int32_t
##define u_int32_t uint32_t
##endif
#EOF
#cat src/lib/third_party/include/ndpi_patricia.h.bak >> src/lib/third_party/include/ndpi_patricia.h
## fix src/lib/ndpi_main.c (version >= 2.4)
#patch -ulbf src/lib/ndpi_main.c << EOF
#@@ -1,2 +1,3 @@
#+#define _WIN32_WINNT 0x0600
# /*
#  * ndpi_main.c
#@@ -249,5 +250,5 @@
# /* ****************************************** */
#
#-#ifdef WIN32
#+#if defined(WIN32) && !defined(__MINGW32__)
# /* http://opensource.apple.com/source/Libc/Libc-186/string.subproj/strcasecmp.c */
#
#@@ -5805,5 +5806,5 @@
# /* ****************************************************** */
#
#-#ifdef WIN32
#+#if defined(WIN32) && !defined(__MINGW32__)
#
# /*  http://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/port/gettimeofday.c;h=75a91993b74414c0a1c13a2a09ce739cb8aa8a08;hb=HEAD */
#EOF
#
## fix missing types
#sed -i.bak2 -e "s/u_\(int[0-9]*_t\)/u\1/g" $(grep -l "u_int[0-9]*_t" $(find -name '*.h' -or -name '*.c'))
#mv src/lib/third_party/include/ndpi_sha1.h src/lib/third_party/include/ndpi_sha1.h.bak &&
#echo "#include <stdint.h>" > src/lib/third_party/include/ndpi_sha1.h &&
#cat src/lib/third_party/include/ndpi_sha1.h.bak >> src/lib/third_party/include/ndpi_sha1.h
#mv src/lib/third_party/include/actypes.h src/lib/third_party/include/actypes.h.bak &&
#echo "#include <stdint.h>" > src/lib/third_party/include/actypes.h &&
#cat src/lib/third_party/include/actypes.h.bak >> src/lib/third_party/include/actypes.h
## fix missing endianness definitions in src/lib/third_party/src/ndpi_sha1.c
#mv src/lib/third_party/src/ndpi_sha1.c src/lib/third_party/src/ndpi_sha1.c.bak &&
#echo "#define LITTLE_ENDIAN 1234" > src/lib/third_party/src/ndpi_sha1.c &&
#echo "#define BYTE_ORDER LITTLE_ENDIAN" >> src/lib/third_party/src/ndpi_sha1.c &&
#cat src/lib/third_party/src/ndpi_sha1.c.bak >> src/lib/third_party/src/ndpi_sha1.c
## fix missing strsep/getlogin in src/lib/protocols/http.c
#mv src/lib/protocols/http.c src/lib/protocols/http.c.bak
#cat > src/lib/protocols/http.c << EOF
##include <stdlib.h> 
##include <string.h>
#static char* MY_strsep (char** s, const char* delim)
#{
#  char* p = *s;
#  char* q = (p ? strpbrk(p, delim) : NULL);
#  if (q == NULL) {
#    *s = NULL;
#  } else {
#    *q = '\0';
#    *s = q + 1;
#  }
#  return p;
#}
##define getlogin() getenv("USERNAME")
#EOF
#sed -e "s/strsep/MY_&/" src/lib/protocols/http.c.bak >> src/lib/protocols/http.c
## fix missing strsep/getlogin in src/lib/ndpi_main.c
#mv src/lib/ndpi_main.c src/lib/ndpi_main.c.bak
#cat > src/lib/ndpi_main.c << EOF
##include <stdlib.h> 
##include <string.h>
#static char* MY_strsep (char** s, const char* delim)
#{
#  char* p = *s;
#  char* q = (p ? strpbrk(p, delim) : NULL);
#  if (q == NULL) {
#    *s = NULL;
#  } else {
#    *q = '\0';
#    *s = q + 1;
#  }
#  return p;
#}
##define getlogin() getenv("USERNAME")
#EOF
#sed -e "s/strsep/MY_&/" src/lib/ndpi_main.c.bak >> src/lib/ndpi_main.c
## fix missing localtime_r in src/lib/ndpi_classify.c
#mv src/lib/ndpi_classify.c src/lib/ndpi_classify.c.bak &&
#echo "#define _POSIX_THREAD_SAFE_FUNCTIONS 1" > src/lib/ndpi_classify.c &&
#cat src/lib/ndpi_classify.c.bak >> src/lib/ndpi_classify.c
## fix missing strptime/timegm in src/lib/protocols/tls.c (version <= 2.2)
#patch -ulbf src/lib/protocols/tls.c << EOF
#@@ -965,2 +965,3 @@
#          /* 141021000000Z */
#+#ifndef _WIN32
#          if(strptime(utcDate, "%y%m%d%H%M%SZ", &utc) != NULL) {
#@@ -972,2 +973,3 @@
#          }
#+#endif
#        }
#@@ -996,2 +998,3 @@
#              /* 141021000000Z */
#+#ifndef _WIN32
#              if(strptime(utcDate, "%y%m%d%H%M%SZ", &utc) != NULL) {
#@@ -1003,2 +1006,3 @@
#              }
#+#endif
#            }
#EOF
## fix src/lib/ndpi_community_id.c (version >= 3.2)
#patch -ulbf src/lib/ndpi_community_id.c << EOF
#@@ -202,3 +202,5 @@
#   case IPPROTO_ICMPV6:
#+#ifdef IPPROTO_SCTP
#   case IPPROTO_SCTP:
#+#endif
#   case IPPROTO_UDP:
#@@ -283,3 +285,5 @@
#     break;
#+#ifdef IPPROTO_SCTP
#   case IPPROTO_SCTP:
#+#endif
#   case IPPROTO_UDP:
#@@ -342,3 +346,5 @@
#     break;
#+#ifdef IPPROTO_SCTP
#   case IPPROTO_SCTP:
#+#endif
#   case IPPROTO_UDP:
#EOF
## fix linker errors
#sed -i.bak -e "s/ -shared -fPIC.*$/& \$(LIBS)/" src/lib/Makefile.in
#
#make -Csrc/lib CC="gcc -I$MINGWPREFIX/include/mman-win32" LIBS="-Wl,--as-needed -lmman -lws2_32" install &&
#    echo OK



export NAME="nDPI"
export STATUS=
export URL=http://www.ntop.org/products/deep-packet-inspection/ndpi/
export BASENAME=ndpi
export DESCRIPTION="Open and Extensible LGPLv3 Deep Packet Inspection Library."
export CATEGORY=dataprocessing,communication,security
export TYPE=library
#export VERSION=3.4
#export VERSIONDATE=20201019
#export VERSION=4.0
#export VERSIONDATE=20210726
export VERSION=4.2
export VERSIONDATE=20220201
wl-showstatus --package-version
#export DEPENDANCIES=pthreads,winpcap,json,mman-win32
export DEPENDANCIES=pthreads,libpcap,json,mman-win32
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/ntop/nDPI/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/ntop/nDPI/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd nDPI-$VERSION
# fix missing localtime_r in src/lib/ndpi_classify.c (version >= 4.0)
mv src/lib/ndpi_classify.c src/lib/ndpi_classify.c.bak &&
echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > src/lib/ndpi_classify.c &&
cat src/lib/ndpi_classify.c.bak >> src/lib/ndpi_classify.c
# fix missing _snprintf (version >= 4.0)
sed -i.bak -e "s?^#define snprintf _snprintf?//&?" src/include/ndpi_define.h.in
# avoid -fPIC (useless on Windows and not supported by clang) in Makefile.in
sed -i.bak -e "s/-fPIC\( -DPIC\)*//" $(grep -l " -fPIC" $(find -name Makefile.in))
# avoid soft links in Makefile.in
sed -i.bak2 -e "s/ln -fs /cp -f /" src/lib/Makefile.in
wl-showstatus configure &&
 ./autogen.sh &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-only-libndpi --with-pcre CFLAGS="-I$MINGWPREFIX/include/pcap" LDFLAGS="-Wl,--allow-multiple-definition -Wl,--as-needed -lws2_32" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 # fix missing .dll.a file
 pexports src/lib/libndpi*.dll | sed -e "s/^LIBRARY/;&/" > $INSTALLPREFIX/lib/libndpi.def &&
 dlltool --export-all-symbols -D src/lib/libndpi*.dll -d $INSTALLPREFIX/lib/libndpi.def -l $INSTALLPREFIX/lib/libndpi.dll.a &&
 mkdir -p $INSTALLPREFIX/bin &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 rm -f $INSTALLPREFIX/lib/libndpi $INSTALLPREFIX/lib/libndpi.[0-9] &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf nDPI-$VERSION



