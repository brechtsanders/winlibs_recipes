export NAME="SFML"
export STATUS=
export URL=http://www.sfml-dev.org/
export BASENAME=sfml
export DESCRIPTION="SFML is a free multimedia C++ API that provides you low and high level access to graphics, input, audio, etc."
export CATEGORY=graphics,hardware
export TYPE=library
#export VERSION=1.6
#export VERSIONDATE=20121019
#export VERSION=2.1
#export VERSIONDATE=20130922
#export VERSION=2.3
#export VERSIONDATE=20150509
#export VERSION=2.3.1
#export VERSIONDATE=20150710
#export VERSION=2.3.2
#export VERSIONDATE=20150912
#export VERSION=2.4.0
#export VERSIONDATE=20160810
#export VERSION=2.4.1
#export VERSIONDATE=20161104
#export VERSION=2.4.2
#export VERSIONDATE=20170212
#export VERSION=2.5.0
#export VERSIONDATE=20180510
export VERSION=2.5.1
export VERSIONDATE=20181019
wl-showstatus --package-version
export DEPENDANCIES=glew,freetype2,libjpeg,openal,libsndfile,flac,libogg,libvorbis
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
#export LICENSEFILE=license.txt
export LICENSEFILE=license.md
export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/sfml/files/sfml/"
export DOWNLOADURL="http://www.sfml-dev.org/download.php"
#export DOWNLOADURL="https://github.com/SFML/SFML/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.sfml-dev.org/download/sfml/$VERSION/SFML-$VERSION-sources.zip
export DOWNLOADSOURCEURL=https://www.sfml-dev.org/files/SFML-$VERSION-sources.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
unzip -oq $TARBALLDIR/$BASENAME/SFML-$VERSION-sources.zip || "C:\Program Files\7-Zip\7z.exe" x -y -bd $TARBALLDIR/$BASENAME/SFML-$VERSION-sources.zip
cd SFML-$VERSION
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSFML_USE_STATIC_STD_LIBS:BOOL=TRUE -DSFML_BUILD_DOC:BOOL=FALSE -DSFML_BUILD_EXAMPLES:BOOL=FALSE . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DSFML_BUILD_DOC:BOOL=FALSE -DSFML_BUILD_EXAMPLES:BOOL=FALSE . &&
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSFML_BUILD_DOC:BOOL=FALSE -DSFML_BUILD_EXAMPLES:BOOL=FALSE -DFLAC_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DFLAC_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libFLAC.a -DFREETYPE_INCLUDE_DIR_freetype2:PATH=$MINGWPREFIX/include/freetype2 -DFREETYPE_INCLUDE_DIR_ft2build:PATH=$MINGWPREFIX/include/freetype2 -DFREETYPE_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libfreetype.a -DJPEG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DJPEG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libjpeg.a -DOGG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DOGG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libogg.a -DOPENAL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/AL -DOPENAL_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenal.a -DVORBISENC_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbisenc.a -DVORBISFILE_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbisfile.a -DVORBIS_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBIS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbis.a -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DSFML_BUILD_DOC:BOOL=FALSE -DSFML_BUILD_EXAMPLES:BOOL=FALSE -DFLAC_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DFLAC_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libFLAC.dll.a -DFREETYPE_INCLUDE_DIR_freetype2:PATH=$MINGWPREFIX/include/freetype2 -DFREETYPE_INCLUDE_DIR_ft2build:PATH=$MINGWPREFIX/include/freetype2 -DFREETYPE_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libfreetype.dll.a -DJPEG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DJPEG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libjpeg.dll.a -DOGG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DOGG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libogg.dll.a -DOPENAL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/AL -DOPENAL_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenal.dll.a -DVORBISENC_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbisenc.dll.a -DVORBISFILE_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbisfile.dll.a -DVORBIS_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBIS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbis.dll.a -S. -Bbuild_shared &&
# #wl-showstatus build-install &&
# #( make install/strip || make install ) &&
# wl-showstatus build-install &&
# ( make -C build_static install/strip || make -C build_static install ) &&
# wl-showstatus build-install &&
# ( make -C build_shared install/strip || make -C build_shared install ) &&
# rm -f $INSTALLPREFIX/lib/libFLAC.a $INSTALLPREFIX/lib/libfreetype.a $INSTALLPREFIX/lib/libjpeg.a $INSTALLPREFIX/lib/libogg.a $INSTALLPREFIX/lib/libopenal32.a $INSTALLPREFIX/lib/libvorbis*.a $INSTALLPREFIX/bin/openal32.dll &&
# for L in audio graphics network system window; do
#  mv -f $INSTALLPREFIX/lib/libsfml-$L.a $INSTALLPREFIX/lib/libsfml-$L.dll.a &&
#  mv -f $INSTALLPREFIX/lib/libsfml-$L-s.a $INSTALLPREFIX/lib/libsfml-$L.a
# done &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSFML_BUILD_DOC:BOOL=FALSE -DSFML_BUILD_EXAMPLES:BOOL=FALSE -DFLAC_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DFLAC_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libFLAC.a -DFREETYPE_INCLUDE_DIR_freetype2:PATH=$MINGWPREFIX/include/freetype2 -DFREETYPE_INCLUDE_DIR_ft2build:PATH=$MINGWPREFIX/include/freetype2 -DFREETYPE_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libfreetype.a -DJPEG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DJPEG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libjpeg.a -DOGG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DOGG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libogg.a -DOPENAL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/AL -DOPENAL_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenal.a -DVORBISENC_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbisenc.a -DVORBISFILE_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbisfile.a -DVORBIS_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBIS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbis.a -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DSFML_BUILD_DOC:BOOL=FALSE -DSFML_BUILD_EXAMPLES:BOOL=FALSE -DFLAC_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DFLAC_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libFLAC.dll.a -DFREETYPE_INCLUDE_DIR_freetype2:PATH=$MINGWPREFIX/include/freetype2 -DFREETYPE_INCLUDE_DIR_ft2build:PATH=$MINGWPREFIX/include/freetype2 -DFREETYPE_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libfreetype.dll.a -DJPEG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DJPEG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libjpeg.dll.a -DOGG_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DOGG_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libogg.dll.a -DOPENAL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/AL -DOPENAL_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenal.dll.a -DVORBISENC_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbisenc.dll.a -DVORBISFILE_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbisfile.dll.a -DVORBIS_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DVORBIS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libvorbis.dll.a -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 # delete installed dependancy libraries
 for F in $INSTALLPREFIX/lib/*.a $INSTALLPREFIX/bin/*.dll; do
  basename $F | grep -q "^\(lib\)*sfml" || rm -f $F
 done &&
 # delete documentation files in install root
 rm -f $INSTALLPREFIX/*.md &&
 # rename libraries as needed
 for L in audio graphics network system window; do
  mv -f $INSTALLPREFIX/lib/libsfml-$L.a $INSTALLPREFIX/lib/libsfml-$L.dll.a &&
  cp -f $INSTALLPREFIX/lib/libsfml-$L-s.a $INSTALLPREFIX/lib/libsfml-$L.a
 done &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



