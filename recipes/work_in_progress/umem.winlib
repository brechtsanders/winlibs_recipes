export NAME="Portable umem"
export STATUS=
export URL=http://labs.omniti.com/labs/portableumem
export BASENAME=umem
export DESCRIPTION="This is a port of the Solaris umem memory allocator to other popular operating systems, such as Linux, Windows and BSDish systems (including Darwin/OSX)."
export CATEGORY=system
export TYPE=library
export VERSION=1.0.1
export VERSIONDATE=20130128
####umem_update_thread.c:52:2: error: invalid operands to binary == (have 'thread_t' and 'pthread_t')
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=OPENSOLARIS.LICENSE
export LICENSETYPE="Common Development and Distribution License \(CDDL\)"
export DOWNLOADURL="https://labs.omniti.com/portableumem/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://labs.omniti.com/portableumem/releases/`echo $VERSION|sed -e "s/^\([0-9][0-9]*\.[0-9][0-9]*\)\..*$/\1/"`/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix sol_compat.h
mv sol_compat.h sol_compat.h.bak
cat > sol_compat.h << EOF
#include <windows.h>
#define u_int64_t uint64_t
typedef char* caddr_t;
EOF
cat sol_compat.h.bak >> sol_compat.h
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm -f CMakeCache.txt &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX . &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



