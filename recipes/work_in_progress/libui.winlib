export NAME="libui"
export STATUS=
export URL=https://github.com/andlabs/libui
export BASENAME=libui
export DESCRIPTION="Simple and portable (but not inflexible) GUI library in C that uses the native GUI technologies of each platform it supports."
export CATEGORY=portability
export TYPE=library
export VERSION=alpha4.1
export VERSIONDATE=20180910
####Sorry, but libui for Windows can currently only be built as a static library with MinGW.  You will need to either build as a static library or switch to MSVC.
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
#export BUILDDEPENDANCIES=meson
export LICENSEFILE=LICENSE
export LICENSETYPE="MIT/Expat"
export DOWNLOADURL="https://github.com/andlabs/libui/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/andlabs/libui/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix for static and shared libraries on Windows
patch -ulbf ui.h << EOF
@@ -22,3 +22,3 @@
 #ifdef _WIN32
-#define _UI_EXTERN __declspec(dllexport) extern
+#define _UI_EXTERN __declspec(dllexport)
 #else
@@ -27,5 +27,12 @@
 #else
-// TODO add __declspec(dllimport) on windows, but only if not static
+#ifdef _WIN32
+#if !defined(STATIC) && !defined(STATIC_LIBUI)
+#define _UI_EXTERN __declspec(dllimport)
+#else
+#define _UI_EXTERN
+#endif
+#else
 #define _UI_EXTERN extern
 #endif
+#endif

EOF
# allow building shared library on Windows
patch -ulbf windows/CMakeLists.txt << EOF
@@ -89,3 +89,3 @@
        if(BUILD_SHARED_LIBS)
-               message(FATAL_ERROR
+               message(WARNING
                        "Sorry, but libui for Windows can currently only be built as a static library with MinGW. You will need to either build as a static library or switch to MSVC."
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cd build_static &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF .. &&
 cd .. &&
 wl-showstatus configure &&
 cd build_shared &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON .. &&
 cd .. &&
 wl-showstatus build &&
 make -Cbuild_static &&
 #wl-showstatus build-install &&
 #make -Cbuild_static install/strip &&
 wl-showstatus build &&
 make -Cbuild_shared &&
 #wl-showstatus build-install &&
 #make -Cbuild_shared install/strip &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f ui.h ui_windows.h $INSTALLPREFIX/include/ &&
 cp -f build_static/out/libui.a build_shared/out/libui.dll.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/out/libui.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



