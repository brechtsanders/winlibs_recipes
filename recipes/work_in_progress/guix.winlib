export NAME="GuixSD"
export STATUS=
export URL=https://www.gnu.org/software/guix/
export BASENAME=guix
export DESCRIPTION="GNU Guix provides state-of-the-art package management features such as transactional upgrades and roll-backs, reproducible build environments, unprivileged package management, and per-user profiles. It uses low-level mechanisms from the Nix package manager, but packages are defined as native Guile modules, using extensions to the Scheme language-which makes it nicely hackable."
export CATEGORY=
export TYPE=library
#export VERSION=0.11.0
#export VERSIONDATE=20161012
#export VERSION=0.12.0
#export VERSIONDATE=20161221
#export VERSION=0.13.0
#export VERSIONDATE=20170523
#export VERSION=0.14.0
#export VERSIONDATE=20171207
#export VERSION=0.15.0
#export VERSIONDATE=20180706
#export VERSION=0.16.0
#export VERSIONDATE=20181207
#export VERSION=1.0.0
#export VERSIONDATE=20190502
#export VERSION=1.0.1
#export VERSIONDATE=20190520
#export VERSION=1.1.0
#export VERSIONDATE=20200416
#export VERSION=1.2.0
#export VERSIONDATE=20201123
export VERSION=1.3.0
export VERSIONDATE=20210512
####configure: error: Package requirements (guile-2.0 >= 2.0.7) were not met: No package 'guile-2.0' found
wl-showstatus --package-version
export DEPENDANCIES=sqlite3,guile,nix
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://www.gnu.org/software/guix/download/"
#export DOWNLOADURL="https://alpha.gnu.org/gnu/guix/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=ftp://alpha.gnu.org/gnu/guix/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://alpha.gnu.org/gnu/guix/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus configure &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-courage &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



