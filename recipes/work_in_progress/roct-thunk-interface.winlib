export NAME="ROCT-Thunk-Interface"
export STATUS=
export URL=https://github.com/RadeonOpenCompute/ROCT-Thunk-Interface
export BASENAME=roct-thunk-interface
export DESCRIPTION="Radeon Open Compute Thunk Interface"
export CATEGORY=
export TYPE=library
export VERSION=1.5.0
export VERSIONDATE=20211020
wl-showstatus --package-version
export DEPENDANCIES=pciutils
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE.md
export LICENSETYPE=
export DOWNLOADURL="https://github.com/RadeonOpenCompute/ROCT-Thunk-Interface/releases roc-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/RadeonOpenCompute/ROCT-Thunk-Interface/archive/refs/tags/roc-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/roc-$VERSION.tar.gz
cd ROCT-Thunk-Interface-roc-$VERSION
# fix include/hsakmttypes.h (version >= 1.5.0)
patch -ulbf include/hsakmttypes.h << EOF
@@ -37,3 +37,3 @@

-#if defined(_WIN64) || defined(_WINDOWS) || defined(_WIN32)
+#if (defined(_WIN64) || defined(_WINDOWS) || defined(_WIN32)) && !defined(__MINGW32__)

@@ -54,3 +54,3 @@

-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__MINGW32__)

EOF
# fix also building static library
sed -i.bak -e "s/\(add_library\s*(.*\) SHARED/\1/" CMakeLists.txt
# don't build Linux stuff
sed -i.bak2 -e "s/^.*linux/#&/" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
    echo OK

#export BUILDDEPENDANCIES=cmake,ninja
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# ## fix missing link libraries
# #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_win/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ROCT-Thunk-Interface-roc-$VERSION
####Linux only



