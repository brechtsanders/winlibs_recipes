export NAME="GNU Binutils (targetting Windows on ARM)"
export STATUS=
export URL=http://www.gnu.org/software/binutils/
export BASENAME=arm64win-binutils
export DESCRIPTION="The GNU Binutils are a collection of binary tools. This build targets the Windows on ARM platform."
export CATEGORY=development
export TYPE=application
#export VERSION=2.35.1
#export VERSIONDATE=20201123
#export VERSION=2.35.2
#export VERSIONDATE=20210130
#export VERSION=2.36
#export VERSIONDATE=20210124
#export VERSION=2.36.1
#export VERSIONDATE=20210206
#export VERSION=2.37
#export VERSIONDATE=20210719
export VERSION=2.38
export VERSIONDATE=20220209
wl-showstatus --package-version
export DEPENDANCIES=zlib,mpc,mpfr,gmp,cloog,isl
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=texinfo
export LICENSEFILE=COPYING
export LICENSETYPE="GPL/LGPL"
export DOWNLOADURL="http://ftp.gnu.org/gnu/binutils/ binutils-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnu.org/gnu/binutils/binutils-$VERSION.tar.gz
wl-showstatus download
#wl-download -v -d $TARBALLDIR/binutils $DOWNLOADSOURCEURL
wl-wait4deps
mkdir -p $BASENAME-$VERSION
tar xfz $TARBALLDIR/binutils/binutils-$VERSION.tar.gz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/binutils-$VERSION
## fix aarch64 support in bfd/config.bfd (version >= 2.37)
#patch -ulbf bfd/config.bfd << EOF
#@@ -368,2 +368,8 @@
#     ;;
#+  arm64-*-pe* | aarch64-*-pe*)
#+    targ_defvec=aarch64_pe_le_vec
#+    targ_selvecs="aarch64_pe_le_vec aarch64_pe_be_vec aarch64_pei_le_vec aarch64_pei_be_vec"
#+    targ_underscore=no
#+    want64=true
#+    ;;
#   arm-*-pe*)
#EOF
#sed -e "s/arm\([_\-]\)/aarch64\1/" bfd/pe-arm.c > bfd/pe-arm64.c
#sed -e "s/arm\([_\-]\)/aarch64\1/" bfd/pei-arm.c > bfd/pei-arm64.c
# fix aarch64 support in bfd/config.bfd (version >= 2.37)
patch -ulbf bfd/config.bfd << EOF
@@ -232,2 +232,8 @@
     ;;
+  aarch64-*-pe* | aarch64-*-mingw*)
+    targ_defvec=aarch64_pe_le_vec
+    targ_selvecs="aarch64_pe_le_vec aarch64_pe_be_vec aarch64_pei_le_vec aarch64_pei_be_vec"
+    targ_underscore=no
+    want64=true
+    ;;
   aarch64-*-elf | aarch64-*-rtems* | aarch64-*-genode*)
EOF
sed -e "s/arm\([_\-]\)/aarch64\1/" bfd/pe-arm.c > bfd/pe-arm64.c
sed -e "s/arm\([_\-]\)/aarch64\1/" bfd/pei-arm.c > bfd/pei-arm64.c
# fix aarch64 PE support in bfd/targets.c (version >= 2.37)
patch -ulbf bfd/targets.c << EOF
@@ -701,2 +701,4 @@
 extern const bfd_target arm_pe_le_vec;
+extern const bfd_target aarch64_pe_be_vec;
+extern const bfd_target aarch64_pe_le_vec;
 extern const bfd_target arm_pe_wince_be_vec;
@@ -705,2 +707,4 @@
 extern const bfd_target arm_pei_le_vec;
+extern const bfd_target aarch64_pei_be_vec;
+extern const bfd_target aarch64_pei_le_vec;
 extern const bfd_target arm_pei_wince_be_vec;
EOF
# fix aarch64 PE support in bfd/configure (version >= 2.37)
patch -ulbf bfd/configure << EOF
@@ -13280,2 +13280,4 @@
     arm_pe_le_vec)              tb="\$tb pe-arm.lo peigen.lo \$coff" ;;
+    aarch64_pe_le_vec)          tb="\$tb pe-arm64.lo peigen.lo \$coff" ;;
+    aarch64_pe_be_vec)          tb="\$tb pe-arm64.lo peigen.lo \$coff" ;;
     arm_pe_wince_be_vec)        tb="\$tb pe-arm-wince.lo pe-arm.lo peigen.lo \$coff" ;;
@@ -13284,2 +13286,4 @@
     arm_pei_le_vec)             tb="\$tb pei-arm.lo peigen.lo \$coff" ;;
+    aarch64_pei_be_vec)         tb="\$tb pei-arm64.lo peigen.lo \$coff" ;;
+    aarch64_pei_le_vec)         tb="\$tb pei-arm64.lo peigen.lo \$coff" ;;
     arm_pei_wince_be_vec)       tb="\$tb pei-arm-wince.lo pei-arm.lo peigen.lo \$coff" ;;
EOF
# fix aarch64 PE gas/configure.tgt (version >= 2.37)
patch -ulbf gas/configure.tgt << EOF
@@ -126,2 +126,3 @@
   aarch64*-*-elf*)                     fmt=elf;;
+  aarch64*-*-pe | aarch64*-*-mingw*)   fmt=coff em=pep;;
   aarch64*-*-fuchsia*)                 fmt=elf;;
EOF
# fix ld/configure.tgt (version >= 2.37)
patch -ulbf ld/configure.tgt << EOF
@@ -45,2 +45,6 @@
 case "\${targ}" in
+aarch64-*-pe | aarch64-*-mingw*)
+                       targ_emul=aarch64-pe
+                       targ_extra_ofiles="deffilep.o pe-dll.o"
+                       ;;
 aarch64_be-*-elf)      targ_emul=aarch64elfb
EOF
# fix gas/output-file.c (version >= 2.37)
patch -ulbf gas/output-file.c << EOF
@@ -23,2 +23,5 @@

+#ifndef TARGET_FORMAT
+#define TARGET_FORMAT "pe-coff"
+#endif
 #ifndef TARGET_MACH
EOF
# fix missing ld/emulparams/aarch64pe.sh (version >= 2.37)
sed -e "s/arm/aarch64/" ld/emulparams/armpe.sh > ld/emulparams/aarch64pe.sh
# fix missing uint in libiberty/rust-demangle.c (version >= 2.37)
mv libiberty/rust-demangle.c libiberty/rust-demangle.c.bak &&
echo "#define uint unsigned int" > libiberty/rust-demangle.c &&
cat libiberty/rust-demangle.c.bak >> libiberty/rust-demangle.c
# fix error when --with-pkgversion value contains a comma
sed -i.bak -e 's/\(-e "s\),\([^,]*\),\([^,]*\),/\1?\2?\3?/' bfd/Makefile.in
mkdir -p build_winarm64 &&
 wl-showstatus configure &&
 cd build_winarm64 &&
 #../configure --prefix=$INSTALLPREFIX/share/arm64win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=arm-w64-pe --disable-lib32 --disable-lib64 --enable-libarm32 --program-prefix=aarch64- --with-pkgversion="Binutils targetting Windows on ARM, built by Brecht Sanders" --enable-shared --enable-host-shared --disable-bootstrap --enable-serial-configure --enable-{libada,libssp,gold,plugins} --disable-lto --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath} --with-system-zlib --disable-nls --enable-install-libiberty --enable-install-libbfd --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 #../configure --prefix=$INSTALLPREFIX/share/arm64win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=arm-w64-pe --program-prefix=aarch64- --with-pkgversion="Binutils targetting Windows on ARM, built by Brecht Sanders" --enable-shared --enable-host-shared --disable-bootstrap --enable-serial-configure --enable-{libada,libssp,gold,plugins} --disable-lto --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath} --with-system-zlib --disable-nls --enable-install-libiberty --enable-install-libbfd --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 #../configure --prefix=$INSTALLPREFIX/share/arm64win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=aarch64-w64-pe --program-prefix=aarch64- --with-pkgversion="Binutils targetting Windows on ARM, built by Brecht Sanders" --enable-shared --enable-host-shared --disable-bootstrap --enable-serial-configure --enable-{libada,libssp,gold,plugins} --disable-lto --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath} --with-system-zlib --disable-nls --enable-install-libiberty --enable-install-libbfd --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 #../configure --prefix=$INSTALLPREFIX/share/arm64win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=aarch64-pc-windows --program-prefix=aarch64- --with-pkgversion="Binutils targetting Windows on ARM, built by Brecht Sanders" --enable-shared --enable-host-shared --disable-bootstrap --enable-serial-configure --enable-{libada,libssp,gold,plugins} --disable-lto --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath} --with-system-zlib --disable-nls --enable-install-libiberty --enable-install-libbfd --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 #../configure --prefix=$INSTALLPREFIX/share/arm64win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=arm64-w64-pe --program-prefix=aarch64- --with-pkgversion="Binutils targetting Windows on ARM, built by Brecht Sanders" --enable-shared --enable-host-shared --disable-bootstrap --enable-serial-configure --enable-{libada,libssp,gold,plugins} --disable-lto --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath} --with-system-zlib --disable-nls --enable-install-libiberty --enable-install-libbfd --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 #../configure --prefix=$INSTALLPREFIX/share/arm64win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=aarch64-w64-mingw32 --program-prefix=aarch64- --with-pkgversion="Binutils targetting Windows on ARM, built by Brecht Sanders" --enable-shared --enable-host-shared --disable-bootstrap --enable-serial-configure --enable-{libada,libssp,gold,plugins} --disable-lto --enable-64-bit-bfd --enable-64-bit-archive --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath} --with-system-zlib --disable-nls --enable-install-libiberty --enable-install-libbfd --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 #../configure --prefix=$INSTALLPREFIX/share/arm64win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=aarch64-w64-mingw32 --program-prefix=aarch64-w64-mingw32- --with-pkgversion="Binutils for MinGW-W64 aarch64, built by Brecht Sanders" --enable-shared --enable-host-shared --enable-serial-configure --disable-bootstrap --enable-{libada,libssp,lto,gold,plugins,vtable-verify,64-bit-bfd,install-libbfd} --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath} --enable-install-libiberty --with-system-zlib --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 ../configure --prefix=$INSTALLPREFIX/share/arm32win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=aarch64-w64-pe --program-prefix=aarch64-w64-mingw32- --with-pkgversion="Binutils for MinGW-W64 armv7, built by Brecht Sanders" --enable-shared --enable-host-shared --enable-serial-configure --disable-bootstrap --enable-{libada,libssp,gold,plugins,vtable-verify,64-bit-bfd,install-libbfd} --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath,lto} --enable-install-libiberty --with-system-zlib --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" AR=ar &&
 cd .. &&
 wl-showstatus build &&
 #make -Cbuild_winarm64 &&
 # fix missing uint (version >= 2.37)
 ( make -Cbuild_winarm64 || ( echo "#define uint unsigned int" >> build_winarm64/libiberty/config.h && make -Cbuild_winarm64 )) &&
 wl-showstatus build-install &&
 make -Cbuild_winarm64 install-strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && rm -rf $BASENAME-$VERSION



