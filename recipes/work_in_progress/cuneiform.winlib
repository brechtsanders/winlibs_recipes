export NAME="Cuneiform"
export STATUS=
export URL=https://launchpad.net/cuneiform-linux
export BASENAME=cuneiform
export DESCRIPTION="Cuneiform is an OCR system originally developed and open sourced by Cognitive technologies. This project aims to create a fully portable version of Cuneiform."
export CATEGORY=graphics,dataprocessing
export TYPE=library
export VERSION=1.1.0
export VERSIONDATE=20180513
wl-showstatus --package-version
export DEPENDANCIES=imagemagick
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://launchpad.net/cuneiform-linux cuneiform-linux- .tar.bz2"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://launchpad.net/cuneiform-linux/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/")/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/")/+download/cuneiform-linux-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfj $TARBALLDIR/$BASENAME/cuneiform-linux-$VERSION.tar.bz2
cd cuneiform-linux-$VERSION
# fix missing GWL_HINSTANCE in cuneiform_src/Kern/fon/src/fon_snap.c
mv cuneiform_src/Kern/fon/src/fon_snap.c cuneiform_src/Kern/fon/src/fon_snap.c.bak &&
sed -e "s/GWL_HINSTANCE/GWLP_HINSTANCE/g" cuneiform_src/Kern/fon/src/fon_snap.c.bak > cuneiform_src/Kern/fon/src/fon_snap.c
# fix ambigous abs in cuneiform_src/Kern/rimage/sources/main/cricontrol.cpp
mv cuneiform_src/Kern/rimage/sources/main/cricontrol.cpp cuneiform_src/Kern/rimage/sources/main/cricontrol.cpp.bak &&
sed -e "s/abs(/&(long long)/g" cuneiform_src/Kern/rimage/sources/main/cricontrol.cpp.bak > cuneiform_src/Kern/rimage/sources/main/cricontrol.cpp
# fix pointer to integer in cuneiform_src/Kern/ced/sources/main/wrapper.cpp
patch -ulbf cuneiform_src/Kern/ced/sources/main/wrapper.cpp << EOF
@@ -71 +71 @@
-#define pointer_to_num(x) ((unsigned int)reinterpret_cast<unsigned long>(x))
+#define pointer_to_num(x) ((uintptr_t)reinterpret_cast<uintptr_t>(x))
EOF
# fix narrowing conversion issues in cuneiform_src/Kern/include/utf8-tables.h
mv cuneiform_src/Kern/include/utf8-tables.h cuneiform_src/Kern/include/utf8-tables.h.bak &&
sed -e "s/\([0-9]*,\s*\)\([0-9]*,\s*\)\([0-9]*,\s*\)\([0-9]\)/(char)\1(char)\2(char)\3(char)\4/g" cuneiform_src/Kern/include/utf8-tables.h.bak > cuneiform_src/Kern/include/utf8-tables.h
# fix pointer to integer in cuneiform_src/Kern/rout/src/rout_dll.cpp
mv cuneiform_src/Kern/rout/src/rout_dll.cpp cuneiform_src/Kern/rout/src/rout_dll.cpp.bak &&
sed -e "s/long\()\s*pData\)/intptr_t\1/g" cuneiform_src/Kern/rout/src/rout_dll.cpp.bak > cuneiform_src/Kern/rout/src/rout_dll.cpp
# fix min/max in cuneiform_src/Kern/rfrmt/sources/main/*.cpp
for F in cuneiform_src/Kern/rfrmt/sources/main/*.cpp; do
mv $F $F.bak
cat > $F << EOF
#include <../../../include/minmax.h>
#undef min
#undef max
#define min CPPmin
#define max CPPmax
#include <bits/stl_algobase.h>
EOF
cat $F.bak >> $F
done
mv -f cuneiform_src/Kern/rfrmt/sources/main/util_lst.cpp.bak cuneiform_src/Kern/rfrmt/sources/main/util_lst.cpp
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/cuneiform -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_win &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/cuneiform -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-fcommon" -DCMAKE_CXX_FLAGS:STRING="-fcommon -fpermissive" -S. -Bbuild_win &&
 wl-showstatus build-install &&
 make -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf cuneiform-linux-$VERSION
####CF_DATADIR=$MINGWPREFIX/cuneiform/share/cuneiform $MINGWPREFIX/cuneiform/bin/cuneiform.exe
####TO DO: build static libraries
####TO DO: check if installation can be done in normal location (if there are no conflicts)



