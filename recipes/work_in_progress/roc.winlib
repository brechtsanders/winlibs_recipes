export NAME="ROC"
export STATUS=
export URL=https://github.com/ROCm-Developer-Tools/HIP
export BASENAME=roc
export DESCRIPTION="HIP: Convert CUDA to Portable C++ Code"
export CATEGORY=hardware,development
export TYPE=library
export VERSION=1.5.0
export VERSIONDATE=20180923
#export VERSION=1.7.1
#export VERSIONDATE=20180924
#export VERSION=1.9.1
#export VERSIONDATE=20181005
#export VERSION=1.9.2
#export VERSIONDATE=20181120
#export VERSION=2.0.0
#export VERSIONDATE=20181220
#export VERSION=2.1.0
#export VERSIONDATE=20190204
#export VERSION=2.2.0
#export VERSIONDATE=20190304
#export VERSION=2.3.0
#export VERSIONDATE=20190412
#export VERSION=2.4.0
#export VERSIONDATE=20190502
#export VERSION=2.5.0
#export VERSIONDATE=20190603
#export VERSION=2.6.0
#export VERSIONDATE=20190709
#export VERSION=2.7.0
#export VERSIONDATE=20190807
#export VERSION=2.7.2
#export VERSIONDATE=20190911
#export VERSION=2.8.0
#export VERSIONDATE=20190925
#export VERSION=2.9.0
#export VERSIONDATE=20191004
#export VERSION=2.10.0
#export VERSIONDATE=20191122
#export VERSION=3.0.0
#export VERSIONDATE=20191218
#export VERSION=3.1.0
#export VERSIONDATE=20200227
#export VERSION=3.1.1
#export VERSIONDATE=20200313
#export VERSION=4.1.1
#export VERSIONDATE=20210511
wl-showstatus --package-version
export DEPENDANCIES=hip
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="https://github.com/ROCm-Developer-Tools/HIP/releases roc-"
export DOWNLOADURL="https://github.com/ROCm-Developer-Tools/HIP/tags roc-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/ROCm-Developer-Tools/HIP/archive/roc-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/ROCm-Developer-Tools/HIP/archive/refs/tags/roc-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/roc-$VERSION.tar.gz
cd HIP-roc-$VERSION
#mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#rm -rf CMakeCache.txt CMakeFiles; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDANCIES=cmake
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
wl-showstatus configure &&
cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
#-DHIP_BASE_VERSION:STRING="$(bin/hipconfig --version)" 
 wl-showstatus build-install &&
 make install/strip &&
    echo OK

#export BUILDDEPENDANCIES=cmake
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
#    echo OK

#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -D documentation=true . build_static &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -D documentation=true . build_shared &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -C build_static install/strip &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -C build_shared install/strip &&
#    echo OK && find . -name '*.a'

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf HIP-roc-$VERSION



