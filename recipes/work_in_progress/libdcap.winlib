export NAME="libdcap"
export STATUS=
export URL=https://www.dcache.org/manuals/libdcap.shtml
#export URL=https://github.com/dCache/dcap
export BASENAME=libdcap
export DESCRIPTION="The libdcap library provides a POSIX like open, create, read, write and lseek functions to the dCache storage. In addition there are some specific functions for setting debug level, getting error messages and binding the library to a network interface."
export CATEGORY=communication
export TYPE=library
export VERSION=2.47.12
export VERSIONDATE=20180405
####src/system_io.h:26:10: fatal error: sys/uio.h: No such file or directory
wl-showstatus --package-version
export DEPENDANCIES=libgssapi
export OPTIONALDEPENDANCIES=libglobus
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://www.dcache.org/downloads/dcap/"
#export DOWNLOADURL="https://github.com/dCache/dcap/releases"
export DOWNLOADURL="https://github.com/dCache/dcap/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/dCache/dcap/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/dCache/dcap/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd dcap-$VERSION
# fix src/dcap_unix2win.h
patch -ulbf src/dcap_unix2win.h << EOF
@@ -23,2 +23,5 @@
 /* unix types compatibility */
+#ifdef __MINGW32__
+#include <stdint.h>
+#else
 typedef int ssize_t;
@@ -26,2 +29,3 @@
 typedef int mode_t;
+#endif
 typedef __int32 int32_t;
@@ -76,3 +80,5 @@

+#ifndef __MINGW32__
 #define atoll(a) atol(a)
+#endif

EOF
# use _WIN32 instead of WIN32 in header files
sed -i.bak "s/\bWIN32\b/_&/g" $(grep -l "\bWIN32\b" $(find -name '*.h'))
# fix missing files
#mkdir -p winfix
#touch winfix/sys/uio.h
touch NEWS
wl-showstatus configure &&
 mkdir -p m4 &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./autogen.sh &&
#    echo OK
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-DWIN32" &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
    make install-pkgconfigDATA
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf dcap-$VERSION



