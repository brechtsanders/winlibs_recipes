export NAME="QuickQanava"
export STATUS=
export URL=http://www.destrat.io/quickqanava/
export BASENAME=quickqanava
export DESCRIPTION="QuickQanava is a C++14 library designed to display graphs and relational content in a QtQuick application using QML code. QuickQanava provide components and classes to visualize medium-sized directed graphs in a QML application. QuickQanava does not provide advanced layout algorithms, but rather focus on displaying relational content in an advanced dynamic user interface (with DnD support, resizable content, visual connection of nodes)."
export CATEGORY=graphics
export TYPE=library
export VERSION=0.9.4
export VERSIONDATE=20180417
wl-showstatus --package-version
export DEPENDANCIES=qt,protobuf,gtest,pugixml
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=licence.txt
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/cneben/QuickQanava/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/cneben/QuickQanava/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd QuickQanava-$VERSION
# fix for building DLL
sed -i.bak -e "s/^\(\s*add_library\s*(\)\([^ ]*\)\( *.*\)$/\1\2 SHARED\3\n\1\2_static STATIC\3\nset_target_properties(\2_static PROPERTIES OUTPUT_NAME \2)\nINSTALL(TARGETS \2 ARCHIVE DESTINATION lib RUNTIME DESTINATION bin)\nINSTALL(TARGETS \2_static ARCHIVE DESTINATION lib RUNTIME DESTINATION bin)/; s/^\(\s*target_[^ ]* *(\)\([^ ]*\)\( *.*\)$/\1\2\3\n\1\2_static\3/" src/CMakeLists.txt QuickContainers/CMakeLists.txt
#sed -i.bak -e "s/^\(\s*add_library\s*(\)\([^ ]*\)\( *.*\)$/\1\2 SHARED\3\n\1\2_static STATIC\3\nset_target_properties(\2_static PROPERTIES OUTPUT_NAME \2)\nINSTALL(TARGETS \2 ARCHIVE DESTINATION lib RUNTIME DESTINATION bin)\nINSTALL(TARGETS \2_static ARCHIVE DESTINATION lib RUNTIME DESTINATION bin)/; s/^\(\s*target_[^ ]* *(\)\([^ ]*\)\( *.*\)$/\1\2\3\n\1\2_static\3/; s/^\s*set\s*(\([^ ]*_header_files\)\b/INSTALL(FILES \${\1} DESTINATION include)\n&/" src/CMakeLists.txt QuickContainers/CMakeLists.txt
#sed -i.bak -e "s/^\s*set\s*(\([^ ]*_header_files\)\b/INSTALL(FILES \${\1} DESTINATION include)\n&/" GTpo/CMakeLists.txt
wl-showstatus configure &&
cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQt5Core_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Core -DQt5Qml_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Qml -DQt5Widgets_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Widgets -DQt5Quick_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Quick -DQt5QuickControls2_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5QuickControls2 . &&
 wl-showstatus build &&
 ( make || make -j1 ) &&
 wl-showstatus build-install &&
 ( make install/strip || make -j1 install/strip ) &&
 mkdir -p $INSTALLPREFIX/include &&
 cp -f src/*.h QuickContainers/src/*.h GTpo/src/*.h $INSTALLPREFIX/include/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf QuickQanava-$VERSION
#PATH=$(pwd)/src:$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins QML2_IMPORT_PATH=$MINGWPREFIX/qt/qml samples/nodes/sample_nodes.exe



