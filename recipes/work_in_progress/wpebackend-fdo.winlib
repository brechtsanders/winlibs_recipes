export NAME="wpebackend-fdo"
export STATUS=
export URL=https://webkit.org/wpe/
export BASENAME=wpebackend-fdo
export DESCRIPTION="WPE is the reference WebKit port for embedded and low-consumption computer devices. It has been designed from the ground-up with performance, small footprint, accelerated content rendering, and simplicity of deployment in mind, bringing the excellence of the WebKit engine to countless platforms and target devices."
export CATEGORY=graphics
export TYPE=library
#export VERSION=1.0.0
#export VERSIONDATE=20190611
#export VERSION=1.2.1
#export VERSIONDATE=20190701
#export VERSION=1.2.2
#export VERSIONDATE=20190812
#export VERSION=1.2.3
#export VERSIONDATE=20191007
#export VERSION=1.3.0
#export VERSIONDATE=20190612
#export VERSION=1.3.1
#export VERSIONDATE=20190613
#export VERSION=1.4.0
#export VERSIONDATE=20190918
#export VERSION=1.4.1
#export VERSIONDATE=20200204
#export VERSION=1.4.2
#export VERSIONDATE=20200304
#export VERSION=1.6.0
#export VERSIONDATE=20200312
#export VERSION=1.6.1
#export VERSIONDATE=20200526
#export VERSION=1.7.1
#export VERSIONDATE=20200729
#export VERSION=1.8.0
#export VERSIONDATE=20200912
#export VERSION=1.8.1
#export VERSIONDATE=20210310
#export VERSION=1.8.2
#export VERSIONDATE=20210319
#export VERSION=1.8.3
#export VERSIONDATE=20210331
#export VERSION=1.8.4
#export VERSIONDATE=20210513
####Could NOT find EGL (missing: EGL_LIBRARIES)
#export DEPENDANCIES=egl,wpewebkit
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake
#export VERSION=1.9.1
#export VERSIONDATE=20210204
#export VERSION=1.9.90
#export VERSIONDATE=20210401
#export VERSION=1.9.91
#export VERSIONDATE=20210501
#export VERSION=1.9.92
#export VERSIONDATE=20210513
#export VERSION=1.10.0
#export VERSIONDATE=20210608
export VERSION=1.12.0
export VERSIONDATE=20211019
####Build-time dependency wayland-scanner found: NO (tried pkgconfig and cmake)
wl-showstatus --package-version
export DEPENDANCIES=egl,wpewebkit
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=meson,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://wpewebkit.org/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://wpewebkit.org/releases/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
## fix cmake/FindEGL.cmake
#sed -i.bak -e "s/^FIND_PACKAGE_HANDLE_STANDARD_ARGS/#&/" cmake/FindEGL.cmake
#wl-showstatus configure &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DWPE_INCLUDE_DIRS:PATH=$(ls -1d $MINGWPREFIX/include/wpe-*|tail -n1) -DEXPORTABLE_EGL:BOOL=OFF -DBUILD_DOCS:BOOL=OFF . &&
#PKG_CONFIG= cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DEXPORTABLE_EGL:BOOL=OFF -DBUILD_DOCS:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK


#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS
## fix location of Perl
#sed -i.bak -e "s?'perl'?'$(cygpath -w $PERLDIR/bin/perl.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix detection of Python
#sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix missing gio-unix
##sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dbuild_docs=false . build_both &&
 ## fix slash/backslash path issue when calling Python from Ninja
 #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 ## fix Python path issues in meson_exe
 #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
 ## fix executing shell scripts
 #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -Cbuild_both install/strip &&
 #PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -Cbuild_both install &&
 #PATH=$PERLDIR/../c/bin:$PERLDIR/bin:$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -Cbuild_both install &&
    echo OK && find . -name '*.a'

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



