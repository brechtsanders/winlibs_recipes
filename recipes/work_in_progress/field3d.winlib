export NAME="Field3D"
export STATUS=
export URL=https://github.com/imageworks/Field3D
export BASENAME=field3d
export DESCRIPTION="A library for storing voxel data on disk and in memory."
export CATEGORY=graphics
export TYPE=library
export VERSION=1.7.3
export VERSIONDATE=20210505
wl-showstatus --package-version
export DEPENDANCIES=boost
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=BSD
#export DOWNLOADURL="https://github.com/imageworks/Field3D/releases"
export DOWNLOADURL="https://github.com/imageworks/Field3D/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/imageworks/Field3D/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing std::_isnan src/FieldMapping.cpp (version >= 1.7.3)
patch -ulbf src/FieldMapping.cpp << EOF
@@ -51,3 +51,3 @@

-#ifdef WIN32
+#if defined(WIN32) && !defined(__MINGW32__)
 #define isnan(__x__) _isnan(__x__)
EOF
# fix invalid compiler flag -wd4251
sed -i.bak -e "s/SET_TARGET_PROPERTIES( Field3D PROPERTIES COMPILE_FLAGS -wd4251 )//" CMakeLists.txt
# fix invalid compiler flag -wd4251
sed -i.bak2 -e "s/SET_TARGET_PROPERTIES( unitTest PROPERTIES COMPILE_FLAGS -bigobj )//" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DINSTALL_DOCS:BOOL=OFF -S. -Bbuild_static &&
 sed -i.bak -e "s/^\(\s*LINK_LIBRARIES\s*=.*-lz\)dll/\1/" build_static/build.ninja &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DINSTALL_DOCS:BOOL=OFF -S. -Bbuild_shared &&
 sed -i.bak -e "s/^\(\s*LINK_LIBRARIES\s*=.*-lz\)dll/\1/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



