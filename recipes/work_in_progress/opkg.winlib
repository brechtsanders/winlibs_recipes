export NAME="opkg"
export STATUS=
export URL=http://code.google.com/p/opkg/
export BASENAME=opkg
export DESCRIPTION="Opkg is a lightweight package management system. It is written in C and resembles apt/dpkg in operation. It is intended for use on embedded Linux devices and is used in this capacity in the OpenEmbedded and OpenWrt projects."
export CATEGORY=package
export TYPE=application
#export VERSION=0.1.8
#export VERSIONDATE=
#export VERSION=0.2.0
#export VERSIONDATE=20130915
#export VERSION=0.2.1
#export VERSIONDATE=20140219
#export VERSION=0.2.2
#export VERSIONDATE=20140402
#export VERSION=0.2.3
#export VERSIONDATE=20140906
#export VERSION=0.2.4
#export VERSIONDATE=20141114
#export VERSION=0.3.0
#export VERSIONDATE=20150603
#export VERSION=0.3.4
#export VERSIONDATE=20170419
#export VERSION=0.3.5
#export VERSIONDATE=20170616
#export VERSION=0.3.6
#export VERSIONDATE=20180220
#export VERSION=0.4.0
#export VERSIONDATE=20181227
#export VERSION=0.4.1
#export VERSIONDATE=20190613
#export VERSION=0.4.2
#export VERSIONDATE=20191217
#export VERSION=0.4.3
#export VERSIONDATE=20201116
#export VERSION=0.4.4
#export VERSIONDATE=20201202
#export VERSION=0.4.5
#export VERSIONDATE=20210608
export VERSION=0.5.0
export VERSIONDATE=20211203
####libopkg/opkg_cmd.c:23:18: fatal error: glob.h: No such file or directory
wl-showstatus --package-version
export DEPENDANCIES=unixem
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://code.google.com/p/opkg/"
#export DOWNLOADURL="http://downloads.yoctoproject.org/releases/opkg/"
export DOWNLOADURL="http://git.yoctoproject.org/cgit/cgit.cgi/opkg/"
#export DOWNLOADSOURCEURL=http://opkg.googlecode.com/files/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://downloads.yoctoproject.org/releases/opkg/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://www.paulbarker.me.uk/dist/opkg/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://git.yoctoproject.org/cgit/cgit.cgi/opkg/snapshot/$BASENAME-$VERSION.tar.bz2
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix/sys
cat > winfix/netdb.h << EOF
#include <fcntl.h>
#include <windows.h>
#define pipe(fds) _pipe(fds, 4096, _O_BINARY) 
#define fork() -1
#define waitpid(pid,status,options) -1
//#define uid_t unsigned int
//#define gid_t unsigned int
EOF
cat > winfix/sys/wait.h << EOF
cat > winfix/fnmatch.h << EOF
//#define fnmatch(p,s,f) -1
#include <shlwapi.h>
#define fnmatch(p,s,f) (PathMatchSpec(s,p) ? 0 : FNM_NOMATCH)
EOF
#define WEXITSTATUS(status) (((status)  & 0xFF00) >> 8)
#define WIFEXITED(status) (WTERMSIG(status) == 0)
#define WIFSTOPPED(status) (((status) & 0xFF) == 0x7F)
#define WIFSIGNALED(status) (!WIFSTOPPED(status) && !WIFEXITED(status))
//#define WSTOPSIG(status) WEXITSTATUS(status)
#define WTERMSIG(status) ((status) & 0x7F)
#define SIGPIPE 3
EOF
cat > winfix/pwd.h << EOF
//typedef int uid_t;
#define getpwnam(username) NULL
struct passwd {
 int pw_uid;
};
EOF
cat > winfix/grp.h << EOF
#define getgrnam(groupname) NULL
struct group {
 int gr_gid;
};
EOF
# fix missing NOTICE in libopkg/opkg_message.h
patch -ulbf libopkg/opkg_message.h << EOF
--- libopkg/opkg_message.h  2009-12-09 02:17:46 +0100
+++ libopkg/opkg_message.h  2011-09-08 20:03:32 +0200
@@ -22,2 +22,3 @@

+#undef ERROR
 typedef enum {
@@ -36,3 +37,3 @@
        do { \\
-               if (l == NOTICE) \\
+               if (l == 1) \\
                        opkg_message(l, fmt, ##args); \\
EOF
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
#PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
#PYTHON=$PYDIR/python.exe 
#PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
wl-showstatus configure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-Duint=u_int -I$(pwd)/winfix -I$MINGWPREFIX/include/unixemulation" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 wl-showstatus build-install &&
 make install-strip &&
    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
####libbb/unarchive.c:148: warning: implicit declaration of function 'lstat'
####libbb/unarchive.c:178: warning: implicit declaration of function 'link'
####libbb/unarchive.c:198: error: too many arguments to function 'mkdir'
####libbb/unarchive.c:206: error: 'S_IFLNK' undeclared (first use in this function)
    make install-pkgconfigDATA
#    cmake.exe . -LH; rm CMakeCache.txt &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX . &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



