export NAME="Bareflank hypervisor"
export STATUS=
export URL=http://www.bareflank.org/
#export URL=https://github.com/Bareflank/hypervisor
export BASENAME=bareflank-hypervisor
export DESCRIPTION="The Bareflank Hypervisor is an open source, hypervisor Software Development Toolkit (SDK), led by Assured Information Security, Inc. (AIS), that provides a set of APIs needed to rapidly prototype and create new hypervisors. To ease development, Bareflank is written in C/C++, and includes support for C++ exceptions, JSON, the GSL and the C++ Standard Template Library (STL)."
export CATEGORY=virtualization
export TYPE=library
#export VERSION=2.0
#export VERSIONDATE=20201230
#export VERSION=2.1
#export VERSIONDATE=20210129
export VERSION=3.0.0
export VERSIONDATE=20211022
wl-showstatus --package-version
export DEPENDANCIES=include-what-you-use,bsl
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/Bareflank/hypervisor/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/Bareflank/hypervisor/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd hypervisor-$VERSION

mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=OFF -DFETCHCONTENT_QUIET:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DENABLE_BRANCH:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 sed -i.bak -e "s/-Werror\|-Weverything//g; s/-lcmt/-lucrt/" build_win/build.ninja &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 PATH=$PYDIR:$PATH ninja -Cbuild_win &&
    echo OK

#mkdir -p build_static/depend/bsl-src/include
#cp -rf $MINGWPREFIX/include/bsl build_static/depend/bsl-src/include/
#touch build_static/depend/bsl-src/CMakeLists.txt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=OFF -DFETCHCONTENT_QUIET:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DENABLE_BRANCH:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
# sed -i.bak -e "s/-Werror\|-Weverything//g" build_static/build.ninja
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DENABLE_BRANCH:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DENABLE_BRANCH:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# PATH=$PYDIR:$PATH ninja -Cbuild_static
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf hypervisor-$VERSION



