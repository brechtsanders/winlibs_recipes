export NAME="libnana"
export STATUS=
#export URL=http://sourceforge.net/projects/nanapro/
export URL=http://www.nanapro.org/
export BASENAME=libnana
export DESCRIPTION="A modern C++ GUI library"
export CATEGORY=framework
export TYPE=library
#export VERSION=1.0.1
#export VERSIONDATE=20150302
#export VERSION=1.0.2
#export VERSIONDATE=20150504
#export VERSION=1.1
#export VERSIONDATE=20150811
#export VERSION=1.1.1
#export VERSIONDATE=20150811
#export VERSION=1.1.2
#export VERSIONDATE=20150816
#export VERSION=1.1.3
#export VERSIONDATE=20150828
#export VERSION=1.2
#export VERSIONDATE=20151117
####nana/source/filesystem/filesystem.cpp:433:13: error: could not convert '(nana::char_t*)(& buf)' from 'nana::char_t* {aka wchar_t*}' to 'nana::experimental::filesystem::path'
#export VERSION=1.2.1
#export VERSIONDATE=20151208
#export VERSION=1.2.2
#export VERSIONDATE=20151209
#export VERSION=1.3.0
#export VERSIONDATE=20160404
####Cannot find source file: test.cpp
#export VERSION=1.4.0
#export VERSIONDATE=20160720
#export VERSION=1.4.1
#export VERSIONDATE=20160926
#export VERSION=1.5.0
#export VERSIONDATE=20170501
#export VERSION=1.5.1
#export VERSIONDATE=20170512
#export VERSION=1.5.2
#export VERSIONDATE=20170622
#export VERSION=1.5.3
#export VERSIONDATE=20170704
#export VERSION=1.5.4
#export VERSIONDATE=20170727
####g++.exe: error: unrecognized command line option '-std=c++14'
#export VERSION=1.5.5
#export VERSIONDATE=20170906
#export VERSION=1.5.6
#export VERSIONDATE=20171203
#export VERSION=1.6.0
#export VERSIONDATE=20180522
####source/basic_types.cpp:126:13: error: 'stoi' is not a member of 'std'
#export VERSION=1.6.1
#export VERSIONDATE=20180625
#export VERSION=1.6.2
#export VERSIONDATE=20180829
####nana/include/nana/filesystem/filesystem.hpp:125:13: fatal error: experimental/filesystem: No such file or directory
#export VERSION=1.7.0
#export VERSIONDATE=20190312
#export VERSION=1.7.1
#export VERSIONDATE=20190422
export VERSION=1.7.4
export VERSIONDATE=20211209
wl-showstatus --package-version
export DEPENDANCIES=libpng
export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake
export BUILDDEPENDANCIES=cmake,ninja
#export LICENSEFILE=LICENSE_1_0.txt
export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/nanapro/files/Nana/Nana%201.x/ nana%20 .zip"
export DOWNLOADURL="http://sourceforge.net/projects/nanapro/files/Nana/Nana%201.x/ nana_ .zip"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/nanapro/Nana/Nana%201.x/nana%20$VERSION.zip
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/nanapro/Nana/Nana%201.x/nana%20$VERSION.zip
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/nanapro/Nana/Nana%201.x/nana_$VERSION.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
unzip -oq "$TARBALLDIR/$BASENAME/nana $VERSION.zip" -d $BASENAME-$VERSION
#unzip -oq $TARBALLDIR/$BASENAME/nana_$VERSION.zip -d $BASENAME-$VERSION
cd $BASENAME-$VERSION/nana
# fix source/gui/filebox.cpp (version >= 1.6.1)
patch -ulbf source/gui/filebox.cpp << EOF
@@ -1 +1,2 @@
+#      define _WIN32_WINNT 0x0600
 /*
@@ -1009,3 +1010,3 @@
 #if defined(NANA_WINDOWS)
-               auto len = ::GetCurrentDirectory(0, nullptr);
+               auto len = ::GetCurrentDirectoryW(0, nullptr);
                if(len)
@@ -1014,3 +1015,3 @@
                        path.resize(len + 1);
-                       ::GetCurrentDirectory(len, &(path[0]));
+                       ::GetCurrentDirectoryW(len, &(path[0]));
                        path.resize(len);
@@ -1093,3 +1094,3 @@

-               OPENFILENAME ofn;
+               OPENFILENAMEW ofn;
                memset(&ofn, 0, sizeof ofn);
@@ -1159,3 +1160,3 @@
                        internal_revert_guard revert;
-                       if (FALSE == (impl_->open_or_save ? ::GetOpenFileName(&ofn) : ::GetSaveFileName(&ofn)))
+                       if (FALSE == (impl_->open_or_save ? ::GetOpenFileNameW(&ofn) : ::GetSaveFileNameW(&ofn)))
                                return false;
EOF
# fix missing std::runtime_error in source/datetime.cpp
mv source/datetime.cpp source/datetime.cpp.bak &&
echo "#include <stdexcept>" > source/datetime.cpp &&
cat source/datetime.cpp.bak >> source/datetime.cpp
#wl-showstatus configure &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNANA_CMAKE_INSTALL:BOOL=ON . &&
# wl-showstatus build-install &&
# #make install/strip &&
# make install/strip CXX="g++ -std=c++11 -fpermissive" &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#cp CMakeLists.txt CMakeLists.txt.bak
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# sed -e "s/\(add_library\s*([^\s)]*\)/& STATIC/" CMakeLists.txt.bak > CMakeLists.txt &&
# cd build_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNANA_CMAKE_INSTALL:BOOL=ON .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus configure &&
# sed -e "s/\(add_library\s*([^\s)]*\)/& SHARED/" CMakeLists.txt.bak > CMakeLists.txt &&
# cd build_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNANA_CMAKE_INSTALL:BOOL=ON .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DNANA_CMAKE_INSTALL:BOOL=ON -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DNANA_CMAKE_INSTALL:BOOL=ON -S. -Bbuild_shared &&
 # don't link with missing -lstdc++fs
 sed -i.bak -e "s/-lstdc++fs//" build_shared/build.ninja &&
 # fix issue with unquoted $ (version >= 1.7.4)
 sed -i.bak2 -e "s/\$<[^>]*>//g" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



