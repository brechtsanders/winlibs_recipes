#export NAME="Npackd"
#export STATUS=
#export URL=http://code.google.com/p/windows-package-manager/
#export BASENAME=npackd
#export DESCRIPTION="Npackd (pronounced \"unpacked\") is an application store/package manager/marketplace for applications for Windows. It helps you to find and install software, keep your system up-to-date and uninstall it if no longer necessary."
#export CATEGORY=
#export TYPE=library
##export VERSION=1.17
##export VERSIONDATE=20130313
#export VERSION=1.18.7
#export VERSIONDATE=20170830
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
#export DOWNLOADURL="http://code.google.com/p/windows-package-manager/downloads/list"
##export DOWNLOADURL="https://github.com/tim-lebedkov/npackd/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=???
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
##tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
#  ./configure --help
#  head COPYING* LICENSE*
#  ls -l COPYING* LICENSE*
#wl-showstatus configure &&
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "AM_GNU_GETTEXT_VERSION(`gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/"`)" >> configure.ac &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
##fi
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#    make install-pkgconfigDATA
##    cmake.exe . -LH; rm -f CMakeCache.txt &&
##rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
## make install/strip &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



export NAME="Npackd"
export STATUS=
export URL=http://npackd.appspot.com/
export BASENAME=npackd
export DESCRIPTION="Npackd (pronounced \"unpacked\") is an application store/package manager/marketplace for applications for Windows. It helps you to find and install software, keep your system up-to-date and uninstall it if no longer necessary."
export CATEGORY=package
export TYPE=application
#export VERSION=1.22.2
#export VERSIONDATE=20170830
#export VERSION=1.23
#export VERSIONDATE=20170909
#export VERSION=1.23.1
#export VERSIONDATE=20171108
#export VERSION=1.23.2
#export VERSIONDATE=20171128
#export VERSION=1.24
#export VERSIONDATE=20180715
#export VERSION=1.24.1
#export VERSIONDATE=20180811
#export VERSION=1.24.2
#export VERSIONDATE=20180918
#export VERSION=1.24.3
#export VERSIONDATE=20180919
#export VERSION=1.24.5
#export VERSIONDATE=20181006
#export VERSION=1.24.6
#export VERSIONDATE=20181030
#export VERSION=1.24.8
#export VERSIONDATE=20181031
#export VERSION=1.25
#export VERSIONDATE=20190422
#export VERSION=1.26
#export VERSIONDATE=20200113
#export VERSION=1.26.1
#export VERSIONDATE=20200314
#export VERSION=1.26.3
#export VERSIONDATE=20200315
#export VERSION=1.26.5
#export VERSIONDATE=20200912
#export VERSION=1.26.7
#export VERSIONDATE=20200913
#export VERSION=1.26.8
#export VERSIONDATE=20200926
export VERSION=1.26.9
export VERSIONDATE=20201129
wl-showstatus --package-version
export DEPENDANCIES=qt,quazip
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/tim-lebedkov/npackd-cpp/releases version_"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/tim-lebedkov/npackd-cpp/archive/version_$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/version_$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/version_$VERSION.tar.gz
cd npackd-cpp-version_$VERSION
## fix exports in npackdlib/npackdlib.cpp
#sed -i.bak -e "s/^[A-Z]* [a-zA-Z0-9_]*(/NPACKDLIBSHARED_EXPORT &/" npackdlib/npackdlib.cpp
#wl-showstatus build &&
# $MINGWPREFIX/qt/bin/qmake -makefile wpmcpp/src/wpmcpp.pro &&
# g++ -c -municode -Inpackdlib npackdlib/npackdlib.cpp -o npackdlib.o &&
# ar cru libnpackd.a npackdlib.o &&
# g++ -mconsole -municode npackdcl/src/*.cpp -Iwpmcpp/src -I$MINGWPREFIX/qt/include -I$MINGWPREFIX/qt/include/QtCore -I$MINGWPREFIX/qt/include/QtXml -I$MINGWPREFIX/qt/include/QtSql -DNPACKD_VERSION="\"$VERSION\"" libnpackd.a -lole32 &&
#    echo OK
#    
#mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -S. -Bbuild_test -LH && echo OK; rm -rf build_test
# replace lm.h with levmar.h in npackdg/src/wpmutils.cpp (version >= 1.26.9)
#####error lm.h is deprecated, please use levmar.h instead!
patch -ulbf npackdg/src/wpmutils.cpp << EOF
@@ -17 +17,5 @@
-#include <lm.h>
+#include <levmar.h>
+#include <lmcons.h>
+#include <lmshare.h>
+#include <lmerr.h>
+#include <lmapibuf.h>
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 #PATH=$MINGWPREFIX/qt/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQUAZIP_INCLUDE_DIRS:PATH="$(ls -1d $MINGWPREFIX/include/QuaZip-Qt5*|sort -V|tail -n 1):$(ls -1d $MINGWPREFIX/include/QuaZip-Qt5*|sort -V|tail -n 1)/quazip" -DQUAZIP_LIBRARIES:STRING=-lquazip1-qt5 -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
 LIBRARY_PATH=$MINGWPREFIX/qt/plugins/imageformats:$MINGWPREFIX/qt/plugins/sqldrivers:$LIBRARY_PATH PATH=$MINGWPREFIX/qt/bin:$PATH QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQUAZIP_INCLUDE_DIRS:PATH="$(ls -1d $MINGWPREFIX/include/QuaZip-Qt5*|sort -V|tail -n 1):$(ls -1d $MINGWPREFIX/include/QuaZip-Qt5*|sort -V|tail -n 1)/quazip" -DQUAZIP_LIBRARIES:STRING=-lquazip1-qt5 -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
 #-DCMAKE_CXX_FLAGS:STRING=
 #sed -i.bak -e "s/-lqsqlite\|-lqicns\|-lqico\|-lqjpeg\|-lqgif\|-lqtga\|-lqtiff\|-lqwbmp\|-lqwebp\|-lqwindows\|-lQt5VulkanSupport\|-lqwindowsvistastyle\|-lqdirect2d\|-licuin\|-licuuc\|-licudt\|-licutu\|-lqtpcre2\|-lqtharfbuzz\|-lqtfreetype\|-lqtlibpng\|-lqdirect2d\|-licuin\|-licuuc\|-licudt\|-licutu\|-lqtpcre2\|-lqtharfbuzz\|-lqtfreetype\|-lqtlibpng//g" build_win/build.ninja &&
 sed -i.bak -e "s/-lqsqlite/& -lsqlite3/; s?-lqtfreetype?& $(pkg-config --static --libs freetype2|sed -e "s/-[A-Z][^ ]*//g")?; s/-lqtharfbuzz/& -lharfbuzz/; s/-l\(qicns\|qico\|qjpeg\|qgif\|qtga\|qtiff\|qwbmp\|qwebp\|Qt5VulkanSupport\|qdirect2d\|icuin\|icuuc\|icudt\|icutu\|qtpcre2\|qtlibpng\|qdirect2d\|icuin\|icuuc\|icudt\|icutu\|qtpcre2\|qtharfbuzz\|qtfreetype\|qtlibpng\)\b//g" build_win/build.ninja &&
 #ninja -Cbuild_win install/strip &&
 LIBRARY_PATH=$MINGWPREFIX/qt/plugins/platforms:$MINGWPREFIX/qt/plugins/styles:$MINGWPREFIX/qt/plugins/imageformats:$MINGWPREFIX/qt/plugins/sqldrivers:$LIBRARY_PATH ninja -Cbuild_win install/strip &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf npackd-cpp-version_$VERSION



