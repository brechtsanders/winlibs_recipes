export NAME="CVC4"
export STATUS=
export URL=https://cvc4.github.io/
#export URL=https://github.com/CVC4/CVC4/
export BASENAME=cvc4
export DESCRIPTION="CVC4 is an efficient open-source automatic theorem prover for satisfiability modulo theories (SMT) problems. It can be used to prove the validity (or, dually, the satisfiability) of first-order formulas in a large number of built-in logical theories and their combination."
export CATEGORY=
export TYPE=library
export VERSION=1.8
export VERSIONDATE=20210329
wl-showstatus --package-version
export DEPENDANCIES=pytoml,antlr3c
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
#export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://github.com/CVC4/CVC4/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/CVC4/CVC4/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix detection of antlr3c in cmake/FindANTLR.cmake (version >= 1.8)
patch -ulbf cmake/FindANTLR.cmake << EOF
@@ -20,8 +20,8 @@

-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(
-  ANTLR DEFAULT_MSG ANTLR_BINARY ANTLR_INCLUDE_DIR ANTLR_LIBRARIES)
+#include(FindPackageHandleStandardArgs)
+#find_package_handle_standard_args(
+#  ANTLR DEFAULT_MSG ANTLR_BINARY ANTLR_INCLUDE_DIR ANTLR_LIBRARIES)

-mark_as_advanced(ANTLR_BINARY ANTLR_INCLUDE_DIR ANTLR_LIBRARIES
-                 HAVE_ANTLR3_FILE_STREAM_NEW)
+#mark_as_advanced(ANTLR_BINARY ANTLR_INCLUDE_DIR ANTLR_LIBRARIES
+#                 HAVE_ANTLR3_FILE_STREAM_NEW)
 if(ANTLR_LIBRARIES)
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Production -DUSE_READLINE:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #-DANTLR_BINARY:FILEPATH=$MINGWPREFIX/bin/antlr
 #-DENABLE_SHARED:BOOL=OFF -DENABLE_STATIC_BINARY:BOOL=ON
 wl-showstatus build-install &&
 PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages make -Cbuild_win install/strip &&
    echo OK

#export BUILDDEPENDANCIES=cmake,ninja
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



