export NAME="xHarbour"
export STATUS=
export URL=http://www.xharbour.org/
export BASENAME=xharbour
export DESCRIPTION="xHarbour is a practically 100% backwards compatible Clipper Language compiler and preprocessor."
export CATEGORY=database
export TYPE=application
export VERSION=1.2.1
export VERSIONDATE=20101021
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=byacc
#export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.xharbour.org/index.asp?page=download/sources xharbour-.src.tar.gz"
export DOWNLOADURL="http://sourceforge.net/projects/xharbour/files/Source%20distribution/ xharbour-.src.tar.gz"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/xharbour/xharbour-$VERSION.src.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/xharbour-$VERSION.src.tar.gz
cd $BASENAME-$VERSION
# fix source/rtl/dllcall.c for 64-bit
patch -ulbf source/rtl/dllcall.c << EOF
--- source/rtl/dllcall.c  2008-11-22 09:25:23.000000000 +0100
+++ source/rtl/dllcall.c  2015-01-08 13:12:47.504963400 +0100
@@ -70 +70 @@
-#if defined( HB_OS_WIN_32 )
+#if defined( HB_OS_WIN_32 ) && !defined( _WIN64 )
EOF
## fix source/macro/macro.y (version >= 1.2.1)
#patch -ulbf source/macro/macro.y << EOF
#@@ -109,3 +109,3 @@
#
#-extern int yyparse( void * );   /* to make happy some purist compiler */
#+extern int yyparse( void );
#
#EOF
# avoid -mno-cygwin
sed -i.bak -e "s/-mno-cygwin//" config/w32/mingw32.cf
# fix missing hbverbld.h
wl-showstatus build-install &&
 make -j1 all install HB_ARCHITECTURE=w32 HB_COMPILER=mingw32 HB_GPM_MOUSE=no HB_GT_LIB=gtwin HB_MT=MT HB_BIN_INSTALL=$INSTALLPREFIX/bin HB_LIB_INSTALL=$INSTALLPREFIX/lib HB_INC_INSTALL=$INSTALLPREFIX/include || 
 (
  make -j1 -C source/pp pptable.c HB_ARCHITECTURE=w32 HB_COMPILER=mingw32 HB_GPM_MOUSE=no HB_GT_LIB=gtwin HB_MT=MT HB_BIN_INSTALL=$INSTALLPREFIX/bin HB_LIB_INSTALL=$INSTALLPREFIX/lib HB_INC_INSTALL=$INSTALLPREFIX/include &&
  make -j1 all install HB_ARCHITECTURE=w32 HB_COMPILER=mingw32 HB_GPM_MOUSE=no HB_GT_LIB=gtwin HB_MT=MT HB_BIN_INSTALL=$INSTALLPREFIX/bin HB_LIB_INSTALL=$INSTALLPREFIX/lib HB_INC_INSTALL=$INSTALLPREFIX/include
 ) &&
 #CFLAGS="$(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types -Wno-incompatible-function-pointer-types"; fi)"  #make -j1 all install HB_ARCHITECTURE=w32 HB_COMPILER=mingw32 HB_GPM_MOUSE=no HB_GT_LIB=gtwin HB_MT=MT HB_BIN_INSTALL=$INSTALLPREFIX/bin HB_LIB_INSTALL=$INSTALLPREFIX/lib HB_INC_INSTALL=$INSTALLPREFIX/include YACC=byacc || 
 #(
 # make -j1 -C source/pp pptable.c HB_ARCHITECTURE=w32 HB_COMPILER=mingw32 HB_GPM_MOUSE=no HB_GT_LIB=gtwin HB_MT=MT HB_BIN_INSTALL=$INSTALLPREFIX/bin HB_LIB_INSTALL=$INSTALLPREFIX/lib HB_INC_INSTALL=$INSTALLPREFIX/include YACC=byacc &&
 # make -j1 all install HB_ARCHITECTURE=w32 HB_COMPILER=mingw32 HB_GPM_MOUSE=no HB_GT_LIB=gtwin HB_MT=MT HB_BIN_INSTALL=$INSTALLPREFIX/bin HB_LIB_INSTALL=$INSTALLPREFIX/lib HB_INC_INSTALL=$INSTALLPREFIX/include YACC=byacc
 #) &&
 mv $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####../../../../source/rtl/w32/mingw32/librtl.a(win32ole.o):win32ole.c:(.text+0x1e1a): undefined reference to `IID_IDispatch'
####To do: fix assembler on 64-bit (source/rtl/dllcall.c)



