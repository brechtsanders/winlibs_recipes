export NAME="The OpenGL Extension Wrangler Library (GLEW)"
export STATUS=
export URL=http://glew.sourceforge.net/
#export URL=https://github.com/nigels-com/glew
export BASENAME=glew
export DESCRIPTION="The OpenGL Extension Wrangler Library (GLEW) is a cross-platform open-source C/C++ extension loading library. GLEW provides efficient run-time mechanisms for determining which OpenGL extensions are supported on the target platform. OpenGL core and extension functionality is exposed in a single header file."
export CATEGORY=graphics
export TYPE=library
#export VERSION=1.6.0
#export VERSIONDATE=20110814
#export VERSION=1.7.0
#export VERSIONDATE=20110827
#export VERSION=1.8.0
#export VERSIONDATE=20120718
#export VERSION=1.9.0
#export VERSIONDATE=20120807
#export VERSION=1.10.0
#export VERSIONDATE=20130722
#export VERSION=1.11.0
#export VERSIONDATE=20140811
#export VERSION=1.12.0
#export VERSIONDATE=20150128
#export VERSION=1.13.0
#export VERSIONDATE=20150811
#export VERSION=2.0.0
#export VERSIONDATE=20160725
####MX discontinued so no more glew32mx library
#export VERSION=2.1.0
#export VERSIONDATE=20170815
export VERSION=2.2.0
export VERSIONDATE=20200316
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=
export DOWNLOADURL="http://sourceforge.net/projects/glew/files/glew/"
#export DOWNLOADURL="https://github.com/nigels-com/glew/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/glew/glew/$VERSION/$BASENAME-$VERSION.tgz
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/glew/glew/$VERSION/$BASENAME-$VERSION.tgz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tgz
cd $BASENAME-$VERSION
### remove -nostdlib (version >= 2.0.0 <= 2.1.0)
##sed -i.bak -e "s/-nostdlib//" config/Makefile.mingw.bak > config/Makefile.mingw
#wl-showstatus build-install &&
# make SYSTEM=mingw GLEW_DEST=$INSTALLPREFIX install.all &&
# strip $INSTALLPREFIX/bin/*.dll $INSTALLPREFIX/bin/*.exe &&
# # fix invalid prefix in pkg-config .pc files
# for F in $(grep -l "^prefix=/usr$" $INSTALLPREFIX/lib/pkgconfig/*.pc); do
#  mv -f $F $F.bak &&
#  sed -e "s?\(prefix=\)/usr?\1$INSTALLPREFIX?" $F.bak > $F &&
#  rm -f $F.bak
# done &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#wl-showstatus build &&
# ${CC:-gcc} -O2 -Wall -W -Iinclude -DGLEW_BUILD -o src/glew.o -c src/glew.c &&
# #-DGLEW_NO_GLU
# ${CC:-gcc} -fno-builtin -fno-stack-protector -shared -s -Wl,-soname,libglew32.dll -Wl,--out-implib,lib/libglew32.dll.a -o lib/glew32.dll src/glew.o -Wl,--as-needed -lglu32 -lopengl32 -lgdi32 -luser32 -lkernel32 -nostdlib &&
# ${AR:-ar} cr lib/libglew32.a src/glew.o &&
# ${CC:-gcc} -DGLEW_MX -O2 -Wall -W -Iinclude -DGLEW_BUILD -o src/glew.mx.o -c src/glew.c &&
# #-DGLEW_NO_GLU
# ${CC:-gcc} -fno-builtin -fno-stack-protector -shared -s -Wl,-soname,libglew32mx.dll -Wl,--out-implib,lib/libglew32mx.dll.a -o lib/glew32mx.dll src/glew.mx.o -Wl,--as-needed -lglu32 -lopengl32 -lgdi32 -luser32 -lkernel32 -nostdlib &&
# ${AR:-ar} cr lib/libglew32mx.a src/glew.mx.o &&
# ${CC:-gcc} -O2 -c -Iinclude -o src/glewinfo.o src/glewinfo.c &&
# ${CC:-gcc} -s -o src/glewinfo.exe src/glewinfo.o lib/libglew32.dll.a -Wl,--as-needed -lgdi32 -lopengl32 &&
# ${CC:-gcc} -O2 -c -Iinclude -o src/visualinfo.o src/visualinfo.c &&
# ${CC:-gcc} -s -o src/visualinfo.exe src/visualinfo.o lib/libglew32.dll.a -Wl,--as-needed -lgdi32 -lopengl32 -lglu32 &&
# sed -e "s?@prefix@?$INSTALLPREFIX?; s?@libdir@?\$\{prefix\}/lib?; s?@version@?$VERSION?; s?@requireslib@?glu?; s?@cflags@??; s?@libname@?glew32?" glew.pc.in > glew.pc &&
# sed -e "s?@prefix@?$INSTALLPREFIX?; s?@libdir@?\$\{prefix\}/lib?; s?@version@?$VERSION?; s?@requireslib@?glu?; s?@cflags@?-DGLEW_MX?; s?@libname@?glew32mx?" glew.pc.in > glewmx.pc &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/bin $INSTALLPREFIX/cmake &&
# cp -rf include/GL $INSTALLPREFIX/include/ &&
# cp -f lib/*.a $INSTALLPREFIX/lib/ &&
# cp -f *.pc $INSTALLPREFIX/lib/pkgconfig/ &&
# cp -f lib/*.dll src/*.exe $INSTALLPREFIX/bin/ &&
# #cp -f build/cmake/glew-config.cmake build/conan/FindGLEW.cmake $INSTALLPREFIX/cmake/ &&
# #cp -f build/conan/FindGLEW.cmake $INSTALLPREFIX/cmake/ &&
# #cp -f build/cmake/glew-config.cmake $INSTALLPREFIX/cmake/ &&
# cp -f build/cmake/*.cmake $INSTALLPREFIX/cmake/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
## fix missing strlen in src/glew.c (version >= 2.2.0)
#mv src/glew.c src/glew.c.bak &&
#echo "#include <string.h>" > src/glew.c &&
#cat src/glew.c.bak >> src/glew.c
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_UTILS:BOOL=ON -Sbuild/cmake -Bbuild_win &&
 sed -i.bak -e "s/-nostdlib/-Wl,--allow-multiple-definition/" build_win/build.ninja &&
 wl-showstatus build &&
 ninja -Cbuild_win &&
 # manually build libglew32mx
 ${CC:-gcc} -DGLEW_MX -O2 -Wall -W -Iinclude -DGLEW_BUILD -o src/glew.mx.o -c src/glew.c &&
 #gcc -fno-builtin -fno-stack-protector -shared -s -Wl,-soname,libglew32mx.dll -Wl,--out-implib,lib/libglew32mx.dll.a -o lib/glew32mx.dll src/glew.mx.o -Wl,--as-needed -lglu32 -lopengl32 -lgdi32 -luser32 -lkernel32 -nostdlib &&
 #${CC:-gcc} -fno-builtin -fno-stack-protector -shared -s -Wl,-soname,libglew32mx.dll -Wl,--out-implib,lib/libglew32mx.dll.a -o lib/glew32mx.dll src/glew.mx.o -Wl,--as-needed -lglu32 -lopengl32 -lgdi32 -luser32 -lkernel32 -Wl,--allow-multiple-definition &&
 ${CC:-gcc} -fno-builtin -fno-stack-protector -shared -s -o lib/glew32mx.dll -Wl,--out-implib,lib/libglew32mx.dll.a src/glew.mx.o -Wl,--as-needed -lglu32 -lopengl32 -lgdi32 -luser32 -lkernel32 -Wl,--allow-multiple-definition &&
 ${AR:-ar} cr lib/libglew32mx.a src/glew.mx.o &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 # manually install libglew32mx
 cp -f lib/libglew32mx*.a $INSTALLPREFIX/lib/ &&
 cp -f lib/glew32mx.dll $INSTALLPREFIX/bin/ &&
 sed -e "s/-lglew32/-lglew32mx/; s/^Cflags: /&-DGLEW_MX /" $INSTALLPREFIX/lib/pkgconfig/glew.pc > $INSTALLPREFIX/lib/pkgconfig/glewmx.pc &&
 # manually install where needed
 cp -f include/GL/eglew.h $INSTALLPREFIX/include/GL/ &&
 mkdir -p $INSTALLPREFIX/cmake &&
 cp -f build/cmake/*.cmake $INSTALLPREFIX/cmake/ &&
 #cp -f build_win/CMakeFiles/Export/lib/cmake/glew/*.cmake $INSTALLPREFIX/cmake/ &&
 ( cp -f build_win/CMakeFiles/Export/lib/cmake/glew/*.cmake $INSTALLPREFIX/cmake/ || cp -f build_win/CMakeFiles/Export/*/*.cmake $INSTALLPREFIX/cmake/ ) &&
 sed -i -z -e "s/\(get_filename_component(_IMPORT_PREFIX \"\${_IMPORT_PREFIX}\" PATH)\n\)\{3\}/\1/" $INSTALLPREFIX/cmake/glew-targets.cmake &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



