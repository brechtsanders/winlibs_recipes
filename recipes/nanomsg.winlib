export NAME="nanomsg"
export STATUS=
export URL=http://nanomsg.org/
export BASENAME=nanomsg
export DESCRIPTION="nanomsg is a socket library that provides several common communication patterns. It aims to make the networking layer fast, scalable, and easy to use. Implemented in C, it works on a wide range of operating systems with no further dependencies."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.0.0
#export VERSIONDATE=20171009
#export VERSION=1.1.0
#export VERSIONDATE=20171018
#export VERSION=1.1.2
#export VERSIONDATE=20171107
#export VERSION=1.1.3
#export VERSIONDATE=20180524
#export VERSION=1.1.4
#export VERSIONDATE=20180608
#export VERSION=1.1.5
#export VERSIONDATE=20181015
#export VERSION=1.2
#export VERSIONDATE=20220419
export VERSION=1.2.1
export VERSIONDATE=20240204
####Modern Windows API support is missing.  Versions of Windows prior to Vista are not supported.  Further, the 32-bit MinGW environment is not supported. Ensure you have at least Windows Vista or newer, and are using either Visual Studio 2010 or newer or MinGW-W64.
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=MIT
#export DOWNLOADURL="http://nanomsg.org/download.html"
export DOWNLOADURL="https://github.com/nanomsg/nanomsg/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/nanomsg/nanomsg/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNN_STATIC_LIB:BOOL=ON -DNN_TESTS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNN_STATIC_LIB:BOOL=OFF -DNN_TESTS:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNN_STATIC_LIB:BOOL=ON -DNN_TESTS:BOOL=OFF -S. -Bbuild_static &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNN_STATIC_LIB:BOOL=ON -DNN_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-Wno-incompatible-pointer-types" -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNN_STATIC_LIB:BOOL=OFF -DNN_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNN_STATIC_LIB:BOOL=OFF -DNN_TESTS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-Wno-incompatible-pointer-types" -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



