#export NAME="libical"
#export STATUS=
#export URL=http://freeassociation.sourceforge.net/
#export BASENAME=libical
#export DESCRIPTION="libical is an Open Source (MPL/LGPL) implementation of the IETF's iCalendar Calendaring and Scheduling protocols. (RFC 2445, 2446, and 2447). It parses iCal components and provides C/C++/Python/Java APIs for manipulating the component properties, parameters, and subcomponents."
#export CATEGORY=fileformat,dataprocessing
#export TYPE=library
##export VERSION=0.43
##export VERSION=0.44
##export VERSION=0.46
##wl-showstatus configure &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX . && make PATH=$PATH:`pwd`/scripts
##export VERSION=0.47
##export VERSIONDATE=20111004
#export VERSION=0.48
#export VERSIONDATE=20111215
##export VERSION=1.0
##export VERSIONDATE=20130508
#####mv: cannot stat `.deps/icalderivedparameter.Tpo': No such file or directory
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDENCIES=pthreads
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL/MPL
##export DOWNLOADURL="http://sourceforge.net/projects/freeassociation/files/"
#export DOWNLOADURL="http://sourceforge.net/projects/freeassociation/files/libical/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://dl.sourceforge.net/sourceforge/freeassociation/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/freeassociation/libical/$BASENAME-$VERSION/$BASENAME-$VERSION.tar.gz
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
### avoid missing vsnprintf (version <= 0.46)
##patch -ulbf src/libical/vsnprintf.c << EOF
##--- src/libical/vsnprintf.c  Thu Jun 18 17:22:54 2009
##+++ src/libical/vsnprintf.c  Thu Jun 18 17:23:40 2009
##@@ -1,2 +1,2 @@
##-#ifndef WIN32
##+#if !defined(WIN32) || defined(__MINGW32__)
## #include "config.h"
##EOF
### fix duplicate definition of intptr_t (version >= 0.44 <= 0.46)
##patch -ulbf src/libical/icalrecur.c << EOF
##--- src/libical/icalrecur.c  Sun Sep 27 04:38:52 2009
##+++ src/libical/icalrecur.c  Mon Sep 28 11:40:58 2009
##@@ -144,3 +144,3 @@
## #ifndef HAVE_INTPTR_T
##-#if defined (WIN32) || defined (XP_BEOS)
##+#if (defined (WIN32) || defined (XP_BEOS)) && !defined(__MINGW32__)
## typedef long intptr_t;
##EOF
### fix for building .DLL files (version <= 0.46)
##mv configure.in configure.in.bak
##echo "AC_LIBTOOL_WIN32_DLL" > configure.in
##cat configure.in.bak >> configure.in &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared  --disable-java --disable-python --enable-reentrant --enable-cxx LDFLAGS="-static-libgcc -lpthread"
### avoid redefinition of intptr_t in src/libical/icalrecur.h (version <= 0.46)
##echo "#define HAVE_INTPTR_T" >> config.h
### avoid missing definitions of BYTE_ORDER/BIG_ENDIAN/LITTLE_ENDIAN
##echo "#include <sys/param.h>" >> config.h
### avoid missing vsnprintf (version <= 0.46)
##echo "#define HAVE_SNPRINTF" >> config.h
### force creation of DLL by ignoring warning: undefined symbols not allowed in i386-pc-mingw32 shared libraries (version <= 0.46)
##patch -ulbf libtool << EOF
##--- libtool  Wed Jul 15 20:29:42 2009
##+++ libtool  Wed Jul 15 21:13:28 2009
##@@ -3627,3 +3627,3 @@
##            $echo "$modename: warning: undefined symbols not allowed in $host shared libraries" 1>&2
##-           build_libtool_libs=no
##+           build_libtool_libs=yes
##            build_old_libs=yes
##EOF
### fix DLL creation (version <= 0.46)
##mv src/libicalss/Makefile src/libicalss/Makefile.bak
##sed -e "s?^\(LIBS *= *\)?\1-L../libical/.libs/ -lical ?" src/libicalss/Makefile.bak > src/libicalss/Makefile
## fix src/libical/libicals_w32_vsnprintf_replacement.c (version >= 0.47 <= 0.48)
#mv src/libical/libicals_w32_vsnprintf_replacement.c src/libical/libicals_w32_vsnprintf_replacement.c.bak
#cat > src/libical/libicals_w32_vsnprintf_replacement.c << EOF
##define PROT_NONE 0
##define PROT_READ 1
##define PROT_WRITE 2
##define PROT_EXEC 4
#struct sigaction {
#  void* sa_handler;
#  void* sa_mask;
#};
##define sigjmp_buf jmp_buf
##define siglongjmp longjmp
##define sigaction(a,b,c) 0
##ifdef __WIN64
##define sigsetjmp(buf,n) _setjmp(buf,n)
##else
##define sigsetjmp(buf,n) _setjmp(buf)
##endif
##define sigemptyset(p) (*p=0)
#typedef char* caddr_t;
#EOF
#cat src/libical/libicals_w32_vsnprintf_replacement.c.bak >> src/libical/libicals_w32_vsnprintf_replacement.c
## fix src/libical/icaltz-util.c (version = 0.48)
#mv src/libical/icaltz-util.c src/libical/icaltz-util.c.bak
#cat > src/libical/icaltz-util.c << EOF
##define bswap_32(x) ({ \\
# uint32_t __res; \\
# if (__builtin_constant_p(x)) { \\
#  __res = default_swab32(x); \\
# } else { \\
#  __asm__("bswap %0" : "=r" (__res) : "0" ((uint32_t)(x))); \\
# } \\
# __res; })
#EOF
#cat src/libical/icaltz-util.c.bak >> src/libical/icaltz-util.c
### remove dependancy on dynamic libstdc++ (GCC 4)
##mv libtool libtool.bak &&
##sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
##./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared --disable-java --disable-python --enable-reentrant
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-java --disable-python --enable-reentrant
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared --disable-java --disable-python --enable-reentrant LDFLAGS="-lpthread" &&
# #TO DO: --enable-cxx
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# # avoid missing definitions of BYTE_ORDER/BIG_ENDIAN/LITTLE_ENDIAN (version >= 0.44)
# echo "#include <sys/param.h>" >> config.h &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



#export NAME="libical"
#export STATUS=
##export URL=http://freeassociation.sourceforge.net/
#export URL=http://libical.github.io/libical/
#export BASENAME=libical
#export DESCRIPTION="libical is an Open Source (MPL/LGPL) implementation of the IETF's iCalendar Calendaring and Scheduling protocols. (RFC 2445, 2446, and 2447). It parses iCal components and provides C/C++/Python/Java APIs for manipulating the component properties, parameters, and subcomponents."
#export CATEGORY=fileformat,dataprocessing
#export TYPE=library
##export VERSION=1.0
##export VERSIONDATE=20130508
##export VERSION=2.0.0
##export VERSIONDATE=20170609
##export VERSION=3.0.0
##export VERSIONDATE=20171029
##export VERSION=3.0.1
##export VERSIONDATE=20171120
##export VERSION=3.0.2
##export VERSIONDATE=20180218
##export VERSION=3.0.3
##export VERSIONDATE=20180228
##export VERSION=3.0.4
##export VERSIONDATE=20180815
##export VERSION=3.0.5
##export VERSIONDATE=20190515
##export VERSION=3.0.6
##export VERSIONDATE=20190915
##export VERSION=3.0.7
##export VERSIONDATE=20191215
##export VERSION=3.0.8
##export VERSIONDATE=20200308
##export VERSION=3.0.9
##export VERSIONDATE=20210117
##export VERSION=3.0.10
##export VERSIONDATE=20210417
#####You requested to build libical-glib, but the necessary development packages are missing or too low a version (glib 2.32 and libxml 2.7.3 or higher are required)
#export VERSION=3.0.11
#export VERSIONDATE=20211010
#wl-showstatus --package-version
##export DEPENDENCIES=pthreads,bdb
#export DEPENDENCIES=pthreads,bdb,icu,glib2,libxml2
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL/MPL
##export DOWNLOADURL="http://sourceforge.net/projects/freeassociation/files/libical/"
#export DOWNLOADURL="https://github.com/libical/libical/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/freeassociation/libical/$BASENAME-$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/libical/libical/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
### fix src/libical/libical_ical_export.h (version >= 3.0.12)
##patch -ulbf src/libical/libical_ical_export.h << EOF
##@@ -9,3 +9,3 @@
## #else
##-#if defined(_MSC_VER) || defined(__CYGWIN__)
##+#if defined(_MSC_VER) || defined(__CYGWIN__) || defined(__MINGW32__)
## #if defined(libical_ical_EXPORTS)
##EOF
### fix src/libicalvcal/libical_vcal_export.h (version >= 3.0.12)
##patch -ulbf src/libicalvcal/libical_vcal_export.h << EOF
##@@ -9,3 +9,3 @@
## #else
##-#if defined(_MSC_VER) || defined(__CYGWIN__)
##+#if defined(_MSC_VER) || defined(__CYGWIN__) || defined(__MINGW32__)
## #if defined(libical_vcal_EXPORTS)
##EOF
#wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_BUILTIN_TZDATA:BOOL=ON -DWITH_BDB:BOOL=OFF -DWITH_CXX_BINDINGS:BOOL=ON -DICAL_GLIB:BOOL=OFF . &&
# PKG_CONFIG= cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_BUILTIN_TZDATA:BOOL=OFF -DENABLE_GTK_DOC=OFF -DWITH_CXX_BINDINGS:BOOL=ON -DICAL_GLIB_VAPI:BOOL=OFF -DGOBJECT_INTROSPECTION:BOOL=OFF -DLIBICAL_BUILD_TESTING:BOOL=OFF . &&
# # fix gmtime_r issues (version >= 2.0.0)
# mv config.h config.h.bak &&
# echo "#include <time.h>" >> config.h &&
# echo "#undef gmtime_r" >> config.h &&
# echo "#define gmtime_r( _clock, _result ) ( *(_result) = *gmtime( (_clock) ), (_result) )" >> config.h &&
# echo "#define HAVE_GMTIME_R 1" >> config.h &&
# cat config.h.bak >> config.h &&
# #sed -e "s?^#define sleep?//&?" config.h.bak >> config.h &&
# ## fix missing INT_MAX
# #echo "#include <limits.h>" >> config.h &&
# #wl-showstatus build &&
# #make -j1 &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="libical"
export STATUS=
export URL=http://libical.github.io/libical/
export BASENAME=libical
export DESCRIPTION="libical is an Open Source (MPL/LGPL) implementation of the IETF's iCalendar Calendaring and Scheduling protocols. (RFC 2445, 2446, and 2447). It parses iCal components and provides C/C++/Python/Java APIs for manipulating the component properties, parameters, and subcomponents."
export CATEGORY=fileformat,dataprocessing
export TYPE=library
#export VERSION=3.0.12
#export VERSIONDATE=20211209
#export VERSION=3.0.13
#export VERSIONDATE=20220118
#export VERSION=3.0.14
#export VERSIONDATE=20220206
#export VERSION=3.0.15
#export VERSIONDATE=20221007
export VERSION=3.0.16
export VERSIONDATE=20221018
wl-showstatus --package-version
export DEPENDENCIES=pthreads,bdb,icu,glib2,libxml2
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL/MPL
export DOWNLOADURL="https://github.com/libical/libical/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/libical/libical/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_BUILTIN_TZDATA:BOOL=OFF -DWITH_CXX_BINDINGS:BOOL=ON -DICAL_GLIB_VAPI:BOOL=OFF -DGOBJECT_INTROSPECTION:BOOL=OFF -DENABLE_GTK_DOC=OFF -DLIBICAL_BUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\)\( *=.*\)\([^ ]*\)\(g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 # fix missing link library
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -licuin/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



