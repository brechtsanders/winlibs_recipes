#export NAME="ngtcp2"
#export STATUS=
#export URL=https://github.com/ngtcp2/ngtcp2
#export BASENAME=ngtcp2
#export DESCRIPTION="ngtcp2 project is an effort to implement IETF QUIC protocol"
#export CATEGORY=communication
#export TYPE=library
#export VERSION=master
#export VERSIONDATE=20190929
#wl-showstatus --package-version
#export DEPENDANCIES=openssl,libev,nghttp3
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake,cunit
#export LICENSEFILE=COPYING
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/ngtcp2/ngtcp2/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/ngtcp2/ngtcp2/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
##-DCMAKE_MODULE_LINKER_FLAGS:STRING="-Wl,--as-needed -lws2_32"
#sed -i.bak -e "s/^add_subdirectory(examples)/#&/" CMakeLists.txt
#wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="ngtcp2"
#export STATUS=
#export URL=https://github.com/ngtcp2/ngtcp2
#export BASENAME=ngtcp2
#export DESCRIPTION="ngtcp2 project is an effort to implement RFC9000 QUIC protocol."
#export CATEGORY=communication
#export TYPE=library
#export VERSION=main
#export VERSIONDATE=20210905
#wl-showstatus --package-version
#export DEPENDANCIES=libev,nghttp3,openssl
##export DEPENDANCIES=libev,nghttp3,gnutls
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake,ninja
#export LICENSEFILE=COPYING
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/ngtcp2/ngtcp2/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/ngtcp2/ngtcp2/archive/refs/heads/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
#sed -i.bak -e "s/\bWIN32\b/_&/g" lib/includes/ngtcp2/ngtcp2.h lib/ngtcp2_conv.h lib/ngtcp2_addr.c lib/ngtcp2_ringbuf.c third-party/http-parser/http_parser.gyp
## disable testing
#sed -i.bak -e "s/^find_package(CUnit/#&/" lib/CMakeLists.txt
## disable building examples
#sed -i.bak2 -e "s/^add_subdirectory(examples)/#&/" CMakeLists.txt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_GNUTLS:BOOL=OFF -DENABLE_OPENSSL:BOOL=ON -DENABLE_BORINGSSL:BOOL=OFF -S. -Bbuild_static &&
# #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_GNUTLS:BOOL=ON -DENABLE_OPENSSL:BOOL=OFF -DENABLE_BORINGSSL:BOOL=OFF -S. -Bbuild_static &&
# #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_GNUTLS:BOOL=OFF -DENABLE_OPENSSL:BOOL=ON -DENABLE_BORINGSSL:BOOL=OFF -S. -Bbuild_shared &&
# #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_GNUTLS:BOOL=ON -DENABLE_OPENSSL:BOOL=OFF -DENABLE_BORINGSSL:BOOL=OFF -S. -Bbuild_shared &&
# # don't define NGTCP2_STATICLIB when building shared library
# sed -i.bak -e "s/-DNGTCP2_STATICLIB//" build_shared/build.ninja &&
# ## add missing linker flag -lgnutls
# #sed -i.bak2 -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lgnutls/" build_shared/build.ninja &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
# mkdir -p $INSTALLPREFIX/bin &&
# mv -f $INSTALLPREFIX/lib/libngtcp2.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="ngtcp2"
export STATUS=
export URL=https://github.com/ngtcp2/ngtcp2
export BASENAME=ngtcp2
export DESCRIPTION="ngtcp2 project is an effort to implement RFC9000 QUIC protocol."
export CATEGORY=communication
export TYPE=library
#export VERSION=0.1.0
#export VERSIONDATE=20220116
#export VERSION=0.2.0
#export VERSIONDATE=20220220
#export VERSION=0.2.1
#export VERSIONDATE=20220228
#export VERSION=0.3.0
#export VERSIONDATE=20220403
#export VERSION=0.3.1
#export VERSIONDATE=20220410
#export VERSION=0.4.0
#export VERSIONDATE=20220425
#export VERSION=0.5.0
#export VERSIONDATE=20220517
#export VERSION=0.6.0
#export VERSIONDATE=20220620
#export VERSION=0.7.0
#export VERSIONDATE=20220722
#export VERSION=0.8.0
#export VERSIONDATE=20220821
#export VERSION=0.8.1
#export VERSIONDATE=20220901
#export VERSION=0.9.0
#export VERSIONDATE=20220921
export VERSION=0.10.0
export VERSIONDATE=20221018
wl-showstatus --package-version
export DEPENDANCIES=libev,nghttp3,gnutls
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/ngtcp2/ngtcp2/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/ngtcp2/ngtcp2/releases/download/v$VERSION/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
#sed -i.bak -e "s/\bWIN32\b/_&/g" lib/includes/ngtcp2/ngtcp2.h lib/ngtcp2_conv.h lib/ngtcp2_addr.c lib/ngtcp2_ringbuf.c third-party/http-parser/http_parser.gyp
# disable testing and examples
sed -i.bak -e "s/^find_package(CUnit/#&/; s/^add_subdirectory(examples)/#&/" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_STATIC_LIB:BOOL=ON -DENABLE_SHARED_LIB:BOOL=ON -DENABLE_GNUTLS:BOOL=ON -DENABLE_OPENSSL:BOOL=OFF -DENABLE_BORINGSSL:BOOL=OFF -S. -Bbuild_win &&
 ## don't define NGTCP2_STATICLIB when building shared library
 #sed -i.bak -e "s/-DNGTCP2_STATICLIB//" build_shared/build.ninja &&
 ## add missing linker flag -lgnutls
 #sed -i.bak2 -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lgnutls/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 #mkdir -p $INSTALLPREFIX/bin &&
 #mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 cp -u $INSTALLPREFIX/lib/libngtcp2_static.a $INSTALLPREFIX/lib/libngtcp2.a &&
 cp -u $INSTALLPREFIX/lib/libngtcp2_crypto_gnutls_static.a $INSTALLPREFIX/lib/libngtcp2_crypto_gnutls.a &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



