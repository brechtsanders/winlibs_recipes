export NAME="Transmission"
export STATUS=
export URL=http://www.transmissionbt.com/
export BASENAME=transmission
export DESCRIPTION="a fast, easy, and free BitTorrent client"
export CATEGORY=communication
export TYPE=application
#export VERSION=2.84
#export VERSIONDATE=20160220
#export VERSION=2.92
#export VERSIONDATE=20160406
#export VERSION=2.93
#export VERSIONDATE=20180125
####third-party/dht/dht.c:86:20: error: conflicting types for 'inet_ntop'
export VERSION=2.94
export VERSIONDATE=20180502
#export VERSION=3.00
#export VERSIONDATE=20200523
wl-showstatus --package-version
#export DEPENDENCIES=gettext,libiconv,zlib,pcre,libevent,libcurl,openssl,libnatpmp,libb64,libcurl
#export DEPENDENCIES=gettext,libiconv,zlib,pcre,libevent,libcurl,openssl,libnatpmp,libb64,libcurl,qt
export DEPENDENCIES=gettext,libiconv,zlib,pcre,libevent,libcurl,openssl,libnatpmp,miniupnpc,libb64,libcurl,qt
#export DEPENDENCIES=gettext,libiconv,zlib,pcre,libevent,libcurl,openssl,libnatpmp,miniupnpc,libb64,libcurl,qt,libutp
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.transmissionbt.com/download/"
#export DOWNLOADURL="http://download.transmissionbt.com/files/"
#export DOWNLOADURL="https://transmissionbt.com/download"
export DOWNLOADURL="https://github.com/transmission/transmission-releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://download.transmissionbt.com/files/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://github.com/transmission/transmission-releases/raw/master/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix missing win32_inet_ntop.cpp (version >= 3.00)
if [ ! -f win32_inet_ntop.cpp ]; then
cat > win32_inet_ntop.cpp << EOF
#if _WIN32_WINNT < 0x0600
#undef _WIN32_WINNT
#define _WIN32_WINNT >= 0x0600
#endif
#include <winsock2.h>
#include <ws2tcpip.h>
EOF
fi
# also build shared library
#mv libtransmission/CMakeLists.txt libtransmission/CMakeLists.txt.bak &&
#cat libtransmission/CMakeLists.txt.bak > libtransmission/CMakeLists.txt &&
#sed -e '/^add_library/,$!d; s/^\(add_library\s*([^ ]*\)\s\(\s*STATIC\)/\1_shared SHARED /; /^)/q' libtransmission/CMakeLists.txt.bak >> libtransmission/CMakeLists.txt &&
#sed -e '/^add_library/,$!d; s/^add_library\s*(\([^ ]*\)\s\(\s*STATIC\)/set_target_properties(\1_shared PROPERTIES OUTPUT_NAME \1)/; /.*/q' libtransmission/CMakeLists.txt.bak >> libtransmission/CMakeLists.txt
patch -ulbf libtransmission/CMakeLists.txt << EOF
@@ -222,3 +222,3 @@

-add_library(\${TR_NAME} STATIC
+add_library(\${TR_NAME} SHARED
     \${\${PROJECT_NAME}_SOURCES}
@@ -227,2 +227,9 @@
 )
+set_target_properties(\${TR_NAME} PROPERTIES LINK_FLAGS_RELEASE -s)
+add_library(\${TR_NAME}_static STATIC
+    \${\${PROJECT_NAME}_SOURCES}
+    \${\${PROJECT_NAME}_PUBLIC_HEADERS}
+    \${\${PROJECT_NAME}_PRIVATE_HEADERS}
+)
+set_target_properties(\${TR_NAME}_static PROPERTIES OUTPUT_NAME \${TR_NAME})

@@ -293,3 +300,4 @@
 if(INSTALL_LIB)
-    install(TARGETS \${TR_NAME} DESTINATION \${CMAKE_INSTALL_LIBDIR})
+    install(TARGETS \${TR_NAME} DESTINATION \${CMAKE_INSTALL_LIBDIR} RUNTIME DESTINATION \${CMAKE_INSTALL_BINDIR})
+    install(TARGETS \${TR_NAME}_static DESTINATION \${CMAKE_INSTALL_LIBDIR})
     install(FILES \${\${PROJECT_NAME}_PUBLIC_HEADERS} DESTINATION \${CMAKE_INSTALL_INCLUDEDIR}/\${TR_NAME})
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_CLI:BOOL=ON -DENABLE_UTILS:BOOL=ON -DENABLE_DAEMON:BOOL=ON -DENABLE_UTP:BOOL=ON -DINSTALL_LIB:BOOL=ON -DENABLE_GTK:STRING=OFF -DBUILD_TESTING:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -S. -Bbuild_win &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_CLI:BOOL=ON -DENABLE_UTILS:BOOL=ON -DENABLE_DAEMON:BOOL=ON -DENABLE_UTP:BOOL=ON -DINSTALL_LIB:BOOL=ON -DENABLE_QT:STRING=ON -DUSE_QT5:BOOL=ON -DENABLE_GTK:STRING=OFF -DBUILD_TESTING:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -S. -Bbuild_win &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_CLI:BOOL=ON -DENABLE_UTILS:BOOL=ON -DENABLE_DAEMON:BOOL=ON -DENABLE_UTP:BOOL=ON -DINSTALL_LIB:BOOL=ON -DENABLE_QT:STRING=ON -DUSE_QT5:BOOL=ON -DENABLE_GTK:STRING=OFF -DBUILD_TESTING:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DWINSOCK2_LIBRARY:STRING=-lws2_32 -DIPHLPAPI_LIBRARY:STRING=-liphlpapi -S. -Bbuild_win &&
 #-DUSE_SYSTEM_UTP:STRING=ON
 #-DUSE_SYSTEM_MINIUPNPC:STRING=ON
 #-DUSE_SYSTEM_NATPMP:STRING=ON
 #echo "-Wl,--as-needed -levent -levhtp -lcurl -lws2_32 -lintl -lz -lnatpmp -lcrypto -lb64" >> build_win/libtransmission/CMakeFiles/transmission_shared.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lcurl" >> build_win/libtransmission/CMakeFiles/transmission.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lcurl" >> build_win/daemon/CMakeFiles/transmission-remote.dir/linklibs.rsp &&
 echo "-Wl,--as-needed -lcurl" >> build_win/utils/CMakeFiles/transmission-show.dir/linklibs.rsp &&
 wl-showstatus build-install &&
 ( make -Cbuild_win install/strip || make -Cbuild_win -j1 install/strip ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####transmission-cli.exe
####PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins transmission-qt.exe



#mkdir -p build_test && PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -S. -Bbuild_test -LH && echo OK; rm -rf build_test

#mkdir -p build_win &&
# wl-showstatus configure &&
# PKG_CONFIG= PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_GTK:STRING=OFF -DENABLE_QT:STRING=ON -DENABLE_DAEMON:BOOL=OFF -DWITH_SYSTEMD:STRING=OFF -DENABLE_TESTS:BOOL=OFF -S. -Bbuild_win &&
# #PKG_CONFIG= PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_GTK:STRING=OFF -DENABLE_QT:STRING=ON -DENABLE_DAEMON:BOOL=OFF -DWITH_SYSTEMD:STRING=OFF -DENABLE_TESTS:BOOL=OFF -DUSE_SYSTEM_B64:STRING=ON -DUSE_SYSTEM_DHT:STRING=ON -DUSE_SYSTEM_EVENT2:STRING=ON -DUSE_SYSTEM_MINIUPNPC:STRING=ON -DUSE_SYSTEM_NATPMP:STRING=ON -DUSE_SYSTEM_UTP:STRING=ON -S. -Bbuild_win &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK



## make standalone package
#mkdir -p Transmission/plugins &&
#PATH=$MINGWPREFIX/qt/bin:$PATH copypedeps -r $(which transmission-qt.exe) Transmission &&
#cp -rf $MINGWPREFIX/qt/plugins/* Transmission/plugins/
