export NAME="OMPL"
export STATUS=
export URL=https://ompl.kavrakilab.org/
export BASENAME=ompl
export DESCRIPTION="OMPL, the Open Motion Planning Library, consists of many state-of-the-art sampling-based motion planning algorithms. OMPL itself does not contain any code related to, e.g., collision checking or visualization. This is a deliberate design choice, so that OMPL is not tied to a particular collision checker or visualization front end. The library is designed so it can be easily integrated into systems that provide the additional needed components."
export CATEGORY=robotics
export TYPE=library
export VERSION=1.7.0
export VERSIONDATE=20250824
wl-showstatus --package-version
export DEPENDENCIES=boost,eigen,yaml-cpp
export OPTIONALDEPENDENCIES=libspot,flann
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=castxml
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/ompl/ompl/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/ompl/ompl/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# also allow building static library
sed -i.bak -e "s/\(add_library([^ ]*\) SHARED/\1/" src/ompl/CMakeLists.txt
# fix src/ompl/CMakeLists.txt (version >= 1.7.0)
patch -ulbf src/ompl/CMakeLists.txt << EOF
@@ -58,4 +58,3 @@
     if (MINGW)
-        target_link_libraries(ompl psapi ws2_32)
-        set_target_properties(ompl PROPERTIES LINK_FLAGS "-Wl,--export-all-symbols")
+        set_target_properties(ompl PROPERTIES LINK_FLAGS "-lpsapi -lws2_32 -Wl,--export-all-symbols")
     endif (MINGW)
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DOMPL_REGISTRATION:BOOL=OFF -DOMPL_BUILD_DEMOS:BOOL=OFF -DOMPL_BUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOMPL_REGISTRATION:BOOL=OFF -DOMPL_BUILD_DEMOS:BOOL=OFF -DOMPL_BUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 wl-showstatus build-install-static &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install-shared &&
 ninja -Cbuild_shared install/strip &&
 # move .dll to bin folder
 mkdir -p $INSTALLPREFIX/bin &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 sed -i.bak -e "s?lib\(/[^/]*\.dll\"\)?bin\1?" $INSTALLPREFIX/share/ompl/cmake/omplExport-release.cmake &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



