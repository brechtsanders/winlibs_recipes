#export NAME="MAME"
#export STATUS=
#export URL=http://www.mame.net/
#export BASENAME=mame
#export DESCRIPTION="MAME stands for Multiple Arcade Machine Emulator. When used in conjunction with images of the original arcade game's ROM and disk data, MAME attempts to reproduce that game as faithfully as possible on a more modern general-purpose computer. MAME can currently emulate several thousand different classic arcade video games from the late 1970s through the modern era."
#export CATEGORY=
#export TYPE=library
##export VERSION=0.165
##export VERSIONDATE=20150827
##export VERSION=0.166
##export VERSIONDATE=20151001
##export VERSION=0.167
##export VERSIONDATE=20151101
##export VERSION=0.168
##export VERSIONDATE=20151128
##export VERSION=0.169
##export VERSIONDATE=20151230
#####GCC version 4.9 or later needed
#####mingw-gcc/obj/x32/Release/generated/mame/mame/drivlist.o:drivlist.cpp:(.rdata+0xb0): undefined reference to `driver_1on1gov'
##export VERSION=0.171
##export VERSIONDATE=20160405
##export VERSION=0.172
##export VERSIONDATE=20160406
##export VERSION=0.173
##export VERSIONDATE=20160427
##export VERSION=0.174
##export VERSIONDATE=20160525
##export VERSION=0.175
##export VERSIONDATE=20160629
##export VERSION=0.176
##export VERSIONDATE=20160728
##export VERSION=0.177
##export VERSIONDATE=20160831
##export VERSION=0.178
##export VERSIONDATE=20160928
##export VERSION=0179
##export VERSIONDATE=20161026
##export VERSION=0180
##export VERSIONDATE=20161130
##export VERSION=0181
##export VERSIONDATE=20161228
##export VERSION=0182
##export VERSIONDATE=20170125
#####GCC version 4.9 or later needed
#####src/emu/emualloc.h:128:7: error: 'mutex' in namespace 'std' does not name a type
##export VERSION=0183
##export VERSIONDATE=20170222
##export VERSION=0184
##export VERSIONDATE=20170329
##export VERSION=0185
##export VERSIONDATE=20170426
##export VERSION=0186
##export VERSIONDATE=20170531
##export VERSION=0187
##export VERSIONDATE=20170628
##export VERSION=0188
##export VERSIONDATE=20170726
##export VERSION=0189
##export VERSIONDATE=20170830
##export VERSION=0190
##export VERSIONDATE=20170927
##export VERSION=0191
##export VERSIONDATE=20171025
##export VERSION=0192
##export VERSIONDATE=20171129
##export VERSION=0193
##export VERSIONDATE=20171228
##export VERSION=0194
##export VERSIONDATE=20180131
#####GCC version 5.0 or later needed
##export VERSION=0195
##export VERSIONDATE=20180228
##export VERSION=0196
##export VERSIONDATE=20180328
#####src/emu/device.h:593:2: warning: nonnull argument 'this' compared to NULL [-Wnonnull-compare]
##export VERSION=0197
##export VERSIONDATE=20180425
##export VERSION=0198
##export VERSIONDATE=20180530
##export VERSION=0199
##export VERSIONDATE=20180627
##export VERSION=0200
##export VERSIONDATE=20180725
##export VERSION=0201
##export VERSIONDATE=20180830
##export VERSION=0202
##export VERSIONDATE=20180927
#####src/mame/drivers/mpu5.hxx:7194:171: error: 'layout_m5addams' was not declared in this scope
##export VERSION=0203
##export VERSIONDATE=20181101
##export VERSION=0204
##export VERSIONDATE=20181128
##export VERSION=0205
##export VERSIONDATE=20181226
##export VERSION=0206
##export VERSIONDATE=20190130
##export VERSION=0207
##export VERSIONDATE=20190227
##export VERSION=0208
##export VERSIONDATE=20190327
##export VERSION=0209
##export VERSIONDATE=20190424
##export VERSION=0210
##export VERSIONDATE=20190531
##export VERSION=0211
##export VERSIONDATE=20190627
##export VERSION=0212
##export VERSIONDATE=20190803
##export VERSION=0213
##export VERSIONDATE=20190905
#####out of memory: see: https://github.com/mamedev/mame/commit/6e0bf6736a939210b75777ef9097ed778f85e4eb?diff=unified
##export VERSION=0214
##export VERSIONDATE=20190925
##export VERSION=0215
##export VERSIONDATE=20191030
##export VERSION=0216
##export VERSIONDATE=20191127
##export VERSION=0217
##export VERSIONDATE=20191225
##export VERSION=0218
##export VERSIONDATE=20200202
##export VERSION=0219
##export VERSIONDATE=20200229
##export VERSION=0220
##export VERSIONDATE=20200406
##export VERSION=0221
##export VERSIONDATE=20200518
##export VERSION=0222
##export VERSIONDATE=20200626
#####ld.exe: missing --end-group; added as last command line option
#####ld.exe: ../../../../mingw-gcc/bin/x32/Release/mame_mame/liboptional.a(gt.o): could not read symbols: memory exhausted
##export VERSION=0223
##export VERSIONDATE=20200806
##export VERSION=0224
##export VERSIONDATE=20200826
#####src/emu/logmacro.h:4:2: error: #error This file should only be included once per compilation unit after all other headers
#####src/devices/bus/hp9845_io/hp9845_io.h:36:46: error: expected class-name before ',' token
##export VERSION=0225
##export VERSIONDATE=20200929
##export VERSION=0226
##export VERSIONDATE=20201028
##export VERSION=0227
##export VERSIONDATE=20201231
##export VERSION=0228
##export VERSIONDATE=20210126
##export VERSION=0229
##export VERSIONDATE=20210224
##export VERSION=0230
##export VERSIONDATE=20210331
#####src/devices/cpu/tms57002/tms57002.h:209:10: fatal error: ../../emu/cpu/tms57002/tms57002.hxx: No such file or directory
##export VERSION=0231
##export VERSIONDATE=20210428
##export VERSION=0232
##export VERSIONDATE=20210527
#####drivlist.o:drivlist.cpp:(.rdata+0x690): undefined reference to `driver_a1010'
##export VERSION=0233
##export VERSIONDATE=20210701
##export VERSION=0234
##export VERSIONDATE=20210728
##export VERSION=0235
##export VERSIONDATE=20210827
#export VERSION=0236
#export VERSIONDATE=20210929
#wl-showstatus --package-version
#export DEPENDENCIES=asio,expat,zlib,libjpeg,flac,lua,sqlite3,portmidi,portaudio,libutf8proc,glm,rapidjson,pugixml
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
##export LICENSEFILE=docs/mame.txt
##export LICENSETYPE="BSD-like"
##export LICENSEFILE=LICENSE.md
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://www.mame.net/release.html"
#export DOWNLOADURL="https://github.com/mamedev/mame/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/mamedev/mame/archive/mame$(echo $VERSION|sed -e "s/\.//g").tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/mame$(echo $VERSION|sed -e "s/\.//g").tar.gz
#cd mame-mame$(echo $VERSION|sed -e "s/\.//g")
## fix redefinitions in 3rdparty/bgfx/3rdparty/dxsdk/include/dxgitype.h
#patch -ulbf 3rdparty/bgfx/3rdparty/dxsdk/include/dxgitype.h << EOF
#--- 3rdparty/bgfx/3rdparty/dxsdk/include/dxgitype.h  2015-09-30 08:29:01.000000000 +0200
#+++ 3rdparty/bgfx/3rdparty/dxsdk/include/dxgitype.h  2015-10-02 09:24:11.364739200 +0200
#@@ -12,3 +12,3 @@
#
#-#if defined(__MINGW32__) || !defined(DXGI_ERROR_INVALID_CALL)
#+#if !defined(DXGI_ERROR_INVALID_CALL)
# #      define DXGI_STATUS_OCCLUDED                     MAKE_DXGI_STATUS(1)
#EOF
### fix missing std::round in src/mame/drivers/pong.cpp (version >= 0209)
##sed -i.bak -e "s/std::\(round\)/\1/g" src/mame/drivers/pong.cpp
### fix missing FLT_EPSILON in 3rdparty/bgfx/3rdparty/dear-imgui/widgets/gizmo.inl (version >= 0209)
##sed -i.bak -e "s/\bFLT_EPSILON\b/__&__/" 3rdparty/bgfx/3rdparty/dear-imgui/widgets/gizmo.inl
### fix missing FLT_MANT_DIG in 3rdparty/pugixml/src/pugixml.cpp (version >= 0209)
##sed -i.bak -e "s/\bFLT_MANT_DIG\b/__&__/" 3rdparty/pugixml/src/pugixml.cpp
### fix missing get_io_service in src/lib/util/server_ws_impl.hpp for boost >= 1.7 (version >= 217)
##patch -ulbf src/lib/util/server_ws_impl.hpp << EOF
##@@ -9,2 +9,9 @@
## #include <asio/system_timer.hpp>
##+#include <boost/asio.hpp>
##+#include <boost/version.hpp>
##+#if BOOST_VERSION >= 107000
##+#define GET_IO_SERVICE(s) ((boost::asio::io_context&)(s)->get_executor().context())
##+#else
##+#define GET_IO_SERVICE(s) ((s)->get_io_service())
##+#endif
##
##@@ -75,6 +82,6 @@
##                        virtual ~Connection() {}
##-                       explicit Connection(const std::shared_ptr<socket_type> &socket) : super(0), socket(socket), strand(socket->get_io_service()), closed(false) { }
##+                       explicit Connection(const std::shared_ptr<socket_type> &socket) : super(0), socket(socket), strand(GET_IO_SERVICE(socket)), closed(false) { }
##
##                private:
##-                       explicit Connection(socket_type *socket): super(0), socket(socket), strand(socket->get_io_service()), closed(false) { }
##+                       explicit Connection(socket_type *socket): super(0), socket(socket), strand(GET_IO_SERVICE(socket)), closed(false) { }
##
##@@ -362,3 +369,3 @@
##                                return nullptr;
##-                       auto timer = std::make_shared<asio::system_timer>(connection->socket->get_io_service());
##+                       auto timer = std::make_shared<asio::system_timer>(GET_IO_SERVICE(connection->socket));
##                        timer->expires_at(std::chrono::system_clock::now() + std::chrono::seconds(static_cast<long>(seconds)));
##@@ -653,3 +660,3 @@
##                        if(config.timeout_idle>0) {
##-                               connection->timer_idle= std::make_unique<asio::system_timer>(connection->socket->get_io_service());
##+                               connection->timer_idle= std::make_unique<asio::system_timer>(GET_IO_SERVICE(connection->socket));
##                                connection->timer_idle->expires_from_now(std::chrono::seconds(static_cast<unsigned long>(config.timeout_idle)));
##EOF
## avoid using gmake from $PERLDIR/c/bin
#mkdir -p winfix &&
#cp -f $(which mingw32-make.exe|which make.exe) winfix/gmake.exe
### fix missing file when compiling with mingw32-make (note: this does not fix it, but results in numerous undefined reference errors)
##echo ""|gcc -xc -c - -o build/mingw-gcc/bin/x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi)/Release/m
## fix windres issue (version >= 0224)
#sed -i.bak -e "s/\(WINDRES\s*:*=\s*\).*$/\1windres/" makefile
#wl-showstatus build &&
# ## clean up old precompiled headers (see also: https://github.com/mamedev/mame/issues/5484)
# #PATH=$PYDIR:$PATH make clean &&
# #PATH=$PYDIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR &&
# #PATH=$PYDIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow" &&
# #PATH=$PY2DIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" &&
# #PATH=$PY2DIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" PRECOMPILE=0 &&
# #PATH=$PY2DIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" CC="${CC:-gcc} $(if gcc --help -v 2>/dev/null|grep -q " -Wreturn-local-addr"; then echo "-Wno-error=return-local-addr"; fi)" PRECOMPILE=0 &&
# ( PATH=$PY2DIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" CC="${CC:-gcc} $(if gcc --help -v 2>/dev/null|grep -q " -Wreturn-local-addr"; then echo "-Wno-error=return-local-addr"; fi)" PRECOMPILE=0 || PATH=$PY2DIR:$PATH make -j1 windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" CC="${CC:-gcc} $(if gcc --help -v 2>/dev/null|grep -q " -Wreturn-local-addr"; then echo "-Wno-error=return-local-addr"; fi)" PRECOMPILE=0 ) &&
# #PATH=$PY2DIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" CC="${CC:-gcc} $(if gcc --help -v 2>/dev/null|grep -q " -Wreturn-local-addr"; then echo "-Wno-error=return-local-addr"; fi)" PRECOMPILE=0 USE_SYSTEM_LIB_ASIO=0 USE_SYSTEM_LIB_EXPAT=1 USE_SYSTEM_LIB_ZLIB=1 USE_SYSTEM_LIB_JPEG=1 USE_SYSTEM_LIB_FLAC=1 USE_SYSTEM_LIB_LUA=1 USE_SYSTEM_LIB_SQLITE3=1 USE_SYSTEM_LIB_PORTMIDI=1 USE_SYSTEM_LIB_PORTAUDIO=1 USE_SYSTEM_LIB_UTF8PROC=1 USE_SYSTEM_LIB_GLM=1 USE_SYSTEM_LIB_RAPIDJSON=1 USE_SYSTEM_LIB_PUGIXML=1 &&
# #PATH=$PY2DIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wmisleading-indentation"; then echo "-Wno-error=misleading-indentation"; fi) -Wa,-mbig-obj -Wl,--no-keep-memory -Wl,--reduce-memory-overheads -ftrack-macro-expansion=0" PRECOMPILE=0 USE_SYSTEM_LIB_ASIO=0 USE_SYSTEM_LIB_EXPAT=1 USE_SYSTEM_LIB_ZLIB=1 USE_SYSTEM_LIB_JPEG=1 USE_SYSTEM_LIB_FLAC=1 USE_SYSTEM_LIB_LUA=1 USE_SYSTEM_LIB_SQLITE3=1 USE_SYSTEM_LIB_PORTMIDI=1 USE_SYSTEM_LIB_PORTAUDIO=1 USE_SYSTEM_LIB_UTF8PROC=1 USE_SYSTEM_LIB_GLM=1 USE_SYSTEM_LIB_RAPIDJSON=1 USE_SYSTEM_LIB_PUGIXML=1 &&
# #PATH=$PY2DIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi) -Wa,-mbig-obj -Wl,--no-keep-memory -Wl,--reduce-memory-overheads -Os" &&
# #PATH=$(pwd)/winfix:$PY2DIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -g -O2 -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" LD="ld.bfd.exe -s --no-keep-memory --reduce-memory-overheads" &&
# #PATH=$(pwd)/winfix:$PY2DIR:$PATH mingw32-make MAKETYPE=gmake windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Os -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" LD="g++ -s -Wa,-mbig-obj -Wl,--no-keep-memory -Wl,--reduce-memory-overheads" &&
# #PATH=$PY2DIR:$PATH make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow" USE_SYSTEM_LIB_ASIO=1 USE_SYSTEM_LIB_EXPAT=1 USE_SYSTEM_LIB_ZLIB=1 USE_SYSTEM_LIB_JPEG=1 USE_SYSTEM_LIB_FLAC=1 USE_SYSTEM_LIB_LUA=1 USE_SYSTEM_LIB_SQLITE3=1 USE_SYSTEM_LIB_PORTMIDI=1 USE_SYSTEM_LIB_PORTAUDIO=1 USE_SYSTEM_LIB_UTF8PROC=1 USE_SYSTEM_LIB_GLM=1 USE_SYSTEM_LIB_RAPIDJSON=1 USE_SYSTEM_LIB_PUGIXML=1 &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/share/docs/mame &&
# cp -f *.exe $INSTALLPREFIX/bin/ &&
# cp -rf docs/* $INSTALLPREFIX/share/docs/mame/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf mame-mame$(echo $VERSION|sed -e "s/\.//g")



export NAME="MAME"
export STATUS=
export URL=http://www.mame.net/
export BASENAME=mame
export DESCRIPTION="MAME stands for Multiple Arcade Machine Emulator. When used in conjunction with images of the original arcade game's ROM and disk data, MAME attempts to reproduce that game as faithfully as possible on a more modern general-purpose computer. MAME can currently emulate several thousand different classic arcade video games from the late 1970s through the modern era."
export CATEGORY=
export TYPE=library
#export VERSION=0237
#export VERSIONDATE=20211027
#export VERSION=0238
#export VERSIONDATE=20211124
#export VERSION=0239
#export VERSIONDATE=20211229
#export VERSION=0240
#export VERSIONDATE=20220130
#export VERSION=0241
#export VERSIONDATE=20220223
#export VERSION=0242
#export VERSIONDATE=20220401
#export VERSION=0243
#export VERSIONDATE=20220429
#export VERSION=0244
#export VERSIONDATE=20220525
#export VERSION=0245
#export VERSIONDATE=20220630
#export VERSION=0246
#export VERSIONDATE=20220731
#export VERSION=0247
#export VERSIONDATE=20220831
#export VERSION=0248
#export VERSIONDATE=20220928
#export VERSION=0249
#export VERSIONDATE=20221028
####Bug reported: https://github.com/mamedev/mame/issues/10620
#export VERSION=0250
#export VERSIONDATE=20221129
#export VERSION=0251
#export VERSIONDATE=20221231
####Bug reported: https://github.com/mamedev/mame/issues/10768
#export VERSION=0252
#export VERSIONDATE=20230222
#export VERSION=0253
#export VERSIONDATE=20230330
export VERSION=0254
export VERSIONDATE=20230427
wl-showstatus --package-version
export DEPENDENCIES=asio,expat,zlib,libjpeg,flac,lua,sqlite3,portmidi,portaudio,libutf8proc,glm,rapidjson,pugixml
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.mame.net/release.html"
export DOWNLOADURL="https://github.com/mamedev/mame/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/mamedev/mame/archive/mame$(echo $VERSION|sed -e "s/\.//g").tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/mame$(echo $VERSION|sed -e "s/\.//g").tar.gz
cd mame-mame$(echo $VERSION|sed -e "s/\.//g")
## fix redefinitions in 3rdparty/bgfx/3rdparty/dxsdk/include/dxgitype.h
#patch -ulbf 3rdparty/bgfx/3rdparty/dxsdk/include/dxgitype.h << EOF
#--- 3rdparty/bgfx/3rdparty/dxsdk/include/dxgitype.h  2015-09-30 08:29:01.000000000 +0200
#+++ 3rdparty/bgfx/3rdparty/dxsdk/include/dxgitype.h  2015-10-02 09:24:11.364739200 +0200
#@@ -12,3 +12,3 @@
#
#-#if defined(__MINGW32__) || !defined(DXGI_ERROR_INVALID_CALL)
#+#if !defined(DXGI_ERROR_INVALID_CALL)
# #      define DXGI_STATUS_OCCLUDED                     MAKE_DXGI_STATUS(1)
#EOF
## avoid using gmake from $PERLDIR/c/bin
#mkdir -p winfix &&
#cp -f $(which mingw32-make.exe|which make.exe) winfix/gmake.exe
# fix windres issue (version >= 0224)
sed -i.bak -e "s/\(WINDRES\s*:*=\s*\).*$/\1windres/" makefile
# fix missing python3 (version >= 0237)
sed -i.bak2 -e "s/^\(PYTHON\s*\):=\(\s*python\)3/\1=\2/" makefile
wl-showstatus build &&
 #( make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" CC="${CC:-gcc} $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q " -Wreturn-local-addr"; then echo "-Wno-error=return-local-addr"; fi)" PRECOMPILE=0 PYTHON=$PYDIR/python.exe || (
 # # fix missing python3 (version >= 0237)
 # sed -i.bak "s? python3 ? $PYDIR/python.exe ?" build/projects/windows/mame/gmake-mingw64-gcc/*.make
 # make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" CC="${CC:-gcc} $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q " -Wreturn-local-addr"; then echo "-Wno-error=return-local-addr"; fi)" PRECOMPILE=0 PYTHON=$PYDIR/python.exe
 #) || (
 # make -j1 windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" CC="${CC:-gcc} $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q " -Wreturn-local-addr"; then echo "-Wno-error=return-local-addr"; fi)" PRECOMPILE=0 PYTHON=$PYDIR/python.exe
 #)) &&
 #make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" CC="${CC:-gcc} $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q " -Wreturn-local-addr"; then echo "-Wno-error=return-local-addr"; fi)" PRECOMPILE=0 REGENIE=1 PYTHON_EXECUTABLE=$PYDIR/python.exe &&
 (
  make windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" CC="${CC:-gcc} $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q " -Wreturn-local-addr"; then echo "-Wno-error=return-local-addr"; fi)" PRECOMPILE=0 REGENIE=1 PYTHON_EXECUTABLE=$PYDIR/python.exe ||
  make -j1 windows_x$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "86"; fi) TARGETOS=windows MINGW$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi)=$MINGWDIR CXX="${CXX:-g++} -Wno-error=nonnull-compare -Wno-error=strict-overflow -Wno-error=stringop-overflow $(if gcc --help -v 2>/dev/null|grep -q " -Wpessimizing-move"; then echo "-Wno-error=pessimizing-move"; fi) $(if gcc --help -v 2>/dev/null|grep -q " -Wtautological-compare"; then echo "-Wno-error=tautological-compare"; fi)" CC="${CC:-gcc} $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q " -Wreturn-local-addr"; then echo "-Wno-error=return-local-addr"; fi)" PRECOMPILE=0 REGENIE=1 PYTHON_EXECUTABLE=$PYDIR/python.exe
 ) &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/share/docs/mame &&
 cp -f *.exe $INSTALLPREFIX/bin/ &&
 cp -rf docs/* $INSTALLPREFIX/share/docs/mame/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf mame-mame$(echo $VERSION|sed -e "s/\.//g")



