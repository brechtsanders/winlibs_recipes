export NAME="Panorama Tools library"
export STATUS=
export URL=http://panotools.sourceforge.net/
export BASENAME=libpano13
export DESCRIPTION="PanoTools library for panoramic imaging"
export CATEGORY=graphics
export TYPE=library
#export VERSION=2.9.19
#export VERSIONDATE=20170706
#export VERSION=2.9.20
#export VERSIONDATE=20210307
export VERSION=2.9.21
export VERSIONDATE=20211230
wl-showstatus --package-version
export DEPENDENCIES=libjpeg,libpng,libtiff
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://sourceforge.net/projects/panotools/files/"
export DOWNLOADURL="https://sourceforge.net/projects/panotools/files/libpano13/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/panotools/libpano13/$BASENAME-$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix building console version of panoinfo
mv tools/panoinfo.c tools/panoinfo.c.windows &&
cp tools/panoinfo_unix.c tools/panoinfo.c
# fix CMakeLists.txt (version >= 2.9.21)
patch -ulbf CMakeLists.txt << EOF
@@ -472,3 +472,3 @@
 # install necessary DLL for Windows
-IF(WIN32 AND BUILD_DLL)
+IF(MSVC AND BUILD_DLL)
   SET(DLL_SEARCH_PATH \${SOURCE_BASE_DIR}/../bin)
EOF
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DLL:BOOL=OFF -DBUILD_WINGUI:BOOL=OFF -DSUPPORT_JAVA_PROGRAMS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DLL:BOOL=ON -DBUILD_WINGUI:BOOL=OFF -DSUPPORT_JAVA_PROGRAMS:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DLL:BOOL=OFF -DBUILD_WINGUI:BOOL=OFF -DSUPPORT_JAVA_PROGRAMS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_DLL:BOOL=ON -DBUILD_WINGUI:BOOL=OFF -DSUPPORT_JAVA_PROGRAMS:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



