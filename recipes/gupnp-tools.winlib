#export NAME="GUPnP Tools"
#export STATUS=
#export URL=http://www.gupnp.org/
#export BASENAME=gupnp-tools
#export DESCRIPTION="GUPnP is an elegant, object-oriented open source framework for creating UPnP devices and control points, written in C using GObject and libsoup. The GUPnP API is intended to be easy to use, efficient and flexible. It provides the same set of features as libupnp, but shields the developer from most of UPnP's internals."
#export CATEGORY=communication
#export TYPE=library
##export VERSION=0.8.1
##export VERSIONDATE=20101018
##export VERSION=0.8.2
##export VERSIONDATE=20110411
##export VERSION=0.8.3
##export VERSIONDATE=20110415
##export VERSION=0.8.4
##export VERSIONDATE=20111212
##export VERSION=0.8.5
##export VERSIONDATE=20121221
##export VERSION=0.8.6
##export VERSIONDATE=20130320
##export VERSION=0.8.6.1
##export VERSIONDATE=20130403
##export VERSION=0.8.7
##export VERSIONDATE=20130820
##export VERSION=0.8.8
##export VERSIONDATE=20131112
##export VERSION=0.8.9
##export VERSIONDATE=20140204
##export VERSION=0.8.10
##export VERSIONDATE=20150511
##export VERSION=0.8.11
##export VERSIONDATE=20151128
##export VERSION=0.8.12
##export VERSIONDATE=20160426
##export VERSION=0.8.13
##export VERSIONDATE=20161122
#export VERSION=0.8.14
#export VERSIONDATE=20170909
##export VERSION=0.10.2
##export VERSIONDATE=20211117
#export DEPENDANCIES=gupnp,gssdp,glib2,gtk3,gdk-pixbuf,libsoup-2.4,libxml2,gnome-icon-theme,gtksourceview4
#export OPTIONALDEPENDANCIES=
##export BUILDDEPENDANCIES=imagemagick
#export BUILDDEPENDANCIES=graphicsmagick,png2ico
#####crtbegin.o:cygming-crtbegin.c:(.text+0x9a): undefined reference to `_Jv_RegisterClasses'
##export VERSION=0.8.15
##export VERSIONDATE=20181210
##export VERSION=0.10.0
##export VERSIONDATE=20190330
##export VERSION=0.10.1
##export VERSIONDATE=20210622
#wl-showstatus --package-version
##export DEPENDANCIES=gupnp,gssdp,glib2,gtk3,gdk-pixbuf,libsoup-2.4,libxml2,gnome-icon-theme
##export OPTIONALDEPENDANCIES=
##export BUILDDEPENDANCIES=graphicsmagick,png2ico,meson
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://www.gupnp.org/download"
##export DOWNLOADURL="http://www.gupnp.org/download?keys=&tid=9"
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gupnp-tools/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://www.gupnp.org/sites/all/files/sources/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
### fix redefinition of intercace in src/upload/main.c (version >= 0.8.5 <= 0.8.9)
##mv src/upload/main.c src/upload/main.c.bak
##sed -e "s/interface/iface/g" src/upload/main.c.bak > src/upload/main.c
## fix src/network-light/upnp.c for newer gupnp (version >= 0.8.14)
#patch -ulbf src/network-light/upnp.c << EOF
#@@ -384,3 +384,3 @@
#
#-        fdn_node = xml_util_get_element ((xmlNode *) doc->doc,
#+        fdn_node = xml_util_get_element ((xmlNode *) gupnp_xml_doc_get_doc(doc),
#                                           "root",
#@@ -407,3 +407,3 @@
#
#-        uuid_node = xml_util_get_element ((xmlNode *) doc->doc,
#+        uuid_node = xml_util_get_element ((xmlNode *) gupnp_xml_doc_get_doc(doc),
#                                           "root",
#@@ -587,3 +587,3 @@
#                                           desc_location,
#-                                          DATA_DIR);
#+                                          DATA_DIR, &error);
#
#@@ -661,3 +661,3 @@
#
#-        if (xmlSaveFile (desc_location, doc->doc) < 0) {
#+        if (xmlSaveFile (desc_location, gupnp_xml_doc_get_doc(doc)) < 0) {
#                 g_print ("Error saving description file to %s.\\n",
#EOF
## fix src/upload/main.c for newer gupnp (version >= 0.8.14)
#patch -ulbf src/upload/main.c << EOF
#@@ -176,3 +176,3 @@
#         error = NULL;
#-        upnp_context = gupnp_context_new (NULL, interface, 0, &error);
#+        upnp_context = gupnp_context_new (interface, 0, &error);
#         if (error) {
#EOF
## fix src/discover/gssdp-discover.c for newer gupnp (version >= 0.8.14)
#patch -ulbf src/discover/gssdp-discover.c << EOF
#@@ -104,3 +104,3 @@
#
#-        discover.client = gssdp_client_new (NULL, interface, &error);
#+        discover.client = gssdp_client_new (interface, &error);
#         if (error != NULL) {
#EOF
## fix missing icons (use ImageMagick/GraphicsMagick to convert)
#mkdir -p data/pixmaps/win32
#for F in data/pixmaps/*.png ; do
# #$MINGWPREFIX/bin/convert.exe $F -resize 32x32 $(echo $F|sed "s?\(data/pixmaps/\)\(.*\.\)png?\1win32/\2ico?")
# #MAGICK_CODER_MODULE_PATH=$(ls -1d $MINGWPREFIX/lib/ImageMagick-*/modules-Q16HDRI/coders|tail -n1) $MINGWPREFIX/bin/convert.exe $F -resize 32x32 $(echo $F|sed "s?\(data/pixmaps/\)\(.*\.\)png?\1win32/\2ico?")
# MAGICK_CONFIGURE_PATH=$(ls -d1 $MINGWPREFIX/lib/GraphicsMagick-*/config|tail -n1) gm convert $F -resize 32X32 _.png &&
# png2ico.exe $(echo $F|sed "s?\(data/pixmaps/\)\(.*\.\)png?\1win32/\2ico?") _.png &&
# rm -f _png.ico
#done &&
#mv data/pixmaps/win32/network-light-256x256.ico data/pixmaps/win32/network-light.ico &&
## fix detection of newer gssdp
#sed -i.bak -e "s/gssdp-[0-9]\.[0-9]*/$(ls -1 $C/lib/pkgconfig/gssdp-[0-9].*.pc|sed -e "s/^.*\/\([^/]*\)\.pc/\1/"|sort -V|tail -n1)/" configure &&
## fix detection of newer gupnp
#sed -i.bak2 -e "s/gupnp-[0-9]\.[0-9]*/$(ls -1 $C/lib/pkgconfig/gupnp-[0-9].*.pc|sed -e "s/^.*\/\([^/]*\)\.pc/\1/"|sort -V|tail -n1)/" configure &&
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--enable-auto-import" &&
# INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--enable-auto-import" &&
# wl-showstatus build-install &&
# make -j1 install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="GUPnP Tools"
export STATUS=
export URL=http://www.gupnp.org/
export BASENAME=gupnp-tools
export DESCRIPTION="GUPnP is an elegant, object-oriented open source framework for creating UPnP devices and control points, written in C using GObject and libsoup. The GUPnP API is intended to be easy to use, efficient and flexible. It provides the same set of features as libupnp, but shields the developer from most of UPnP's internals."
export CATEGORY=communication
export TYPE=library
#export VERSION=0.10.0
#export VERSIONDATE=20190330
#export VERSION=0.10.1
#export VERSIONDATE=20210622
#export DEPENDANCIES=gupnp,gssdp,glib2,gtk3,gdk-pixbuf,libsoup-2.4,libxml2,gnome-icon-theme,gettext
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=graphicsmagick,png2ico,meson
export VERSION=0.10.2
export VERSIONDATE=20211117
#export VERSION=0.10.3
#export VERSIONDATE=20220520
wl-showstatus --package-version
export DEPENDANCIES=gupnp,gssdp,glib2,gtk3,gdk-pixbuf,libsoup,libxml2,gnome-icon-theme,gettext
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=graphicsmagick,png2ico,meson
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gupnp-tools/"
export DOWNLOADURL="https://download.gnome.org/sources/gupnp-tools/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://download.gnome.org/sources/gupnp-tools/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# copy missing files
cp -u src/av-cp/av-cp.rc src/network-light/
cp -u src/av-cp/av-cp.rc src/universal-cp/
# fix subprojects/gssdp-1.2/libgssdp/gssdp-net-win32.c (version >= 0.10.3)
patch -ulbf subprojects/gssdp-1.2/libgssdp/gssdp-net-win32.c << EOF
@@ -15,2 +15,3 @@
 #include <iphlpapi.h>
+#include <objbase.h>
 typedef int socklen_t;
EOF
mkdir -p build_static &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -Dav-tools=true . build_static &&
 #-Dc_link_args="-lole32" 
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_static install &&
 # remove unnecessary .exe.a files
 rm -f $INSTALLPREFIX/lib/*.exe.a &&
 ( rmdir $INSTALLPREFIX/lib || true ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



