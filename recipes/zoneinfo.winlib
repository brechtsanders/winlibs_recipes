export NAME="zoneinfo (tzcode+tzdata)"
export STATUS=
#export URL=http://www.twinsun.com/tz/tz-link.htm
export URL=https://github.com/eggert/tz
export BASENAME=zoneinfo
export DESCRIPTION="The public-domain time zone database contains code and data that represent the history of local time for many representative locations around the globe."
export CATEGORY=database
export TYPE=library
#export VERSION=2011g_2011h
#export VERSIONDATE=20110728
#export VERSION=2012e_2012e
#export VERSIONDATE=20120826
#export VERSION=2012f
#export VERSIONDATE=20120913
#export VERSION=2012g
#export VERSIONDATE=20121018
#export VERSION=2012h
#export VERSIONDATE=20121027
#export VERSION=2012i
#export VERSIONDATE=20121104
#export VERSION=2012j
#export VERSIONDATE=20121113
#export VERSION=2013a
#export VERSIONDATE=20130302
#export VERSION=2013b
#export VERSIONDATE=20130311
#export VERSION=2013c
#export VERSIONDATE=20130420
#export VERSION=2013d
#export VERSIONDATE=20130706
#export VERSION=2013e
#export VERSIONDATE=20130921
#export VERSION=2013f
#export VERSIONDATE=20130925
#export VERSION=2013g
#export VERSIONDATE=20131002
#export VERSION=2013h
#export VERSIONDATE=20131026
#export VERSION=2013i
#export VERSIONDATE=20131219
#export VERSION=2014a
#export VERSIONDATE=20140309
#export VERSION=2014b
#export VERSIONDATE=20140325
#export VERSION=2014c
#export VERSIONDATE=20140513
#export VERSION=2014d
#export VERSIONDATE=20140529
#export VERSION=2014e
#export VERSIONDATE=20140614
#export VERSION=2014f
#export VERSIONDATE=20140807
####link from E:/Prog/MSYS2-64/home/inst_zoneinfo-2014f/etc/zoneinfo/GMT failed: No such file or directory
#export VERSION=2014g
#export VERSIONDATE=20140831
#export VERSION=2014h
#export VERSIONDATE=20140926
#export VERSION=2014i
#export VERSIONDATE=20141022
#export VERSION=2014j
#export VERSIONDATE=20141111
#export VERSION=2015a
#export VERSIONDATE=20150130
#export VERSION=2015b
#export VERSIONDATE=20150321
#export VERSION=2015c
#export VERSIONDATE=20150414
#export VERSION=2015d
#export VERSIONDATE=20150425
#export VERSION=2015e
#export VERSIONDATE=20150614
#export VERSION=2015f
#export VERSIONDATE=20150811
#export VERSION=2015g
#export VERSIONDATE=20151002
#export VERSION=2016c
#export VERSIONDATE=20160406
#export VERSION=2016d
#export VERSIONDATE=20160420
#export VERSION=2016e
#export VERSIONDATE=20160615
#export VERSION=2016f
#export VERSIONDATE=20160706
#export VERSION=2016g
#export VERSIONDATE=20160929
#export VERSION=2016h
#export VERSIONDATE=20161021
#export VERSION=2016i
#export VERSIONDATE=20161103
#export VERSION=2016j
#export VERSIONDATE=20161124
####zic.exe: Can't create /inst_zoneinfo-2016g/etc/zoneinfo/Arctic/Longyearbyen: No such file or directory
#export VERSION=2017a
#export VERSIONDATE=20170301
#export VERSION=2017b
#export VERSIONDATE=20170321
#export VERSION=2017c
#export VERSIONDATE=20171024
#export VERSION=2018a
#export VERSIONDATE=20180117
#export VERSION=2018b
#export VERSIONDATE=20180119
#export VERSION=2018c
#export VERSIONDATE=20180124
#export VERSION=2018d
#export VERSIONDATE=20180324
#export VERSION=2018e
#export VERSIONDATE=20180504
####"tzdata.zi", line 4146: input line of unknown type
#export VERSION=2018f
#export VERSIONDATE=20181018
#export VERSION=2018g
#export VERSIONDATE=20181027
#export VERSION=2018h
#export VERSIONDATE=20181230
#export VERSION=2018i
#export VERSIONDATE=20181231
#export VERSION=2019a
#export VERSIONDATE=20190326
#export VERSION=2019b
#export VERSIONDATE=20190702
#export VERSION=2019c
#export VERSIONDATE=20190912
#export VERSION=2020a
#export VERSIONDATE=20200424
####zic.exe: Can't create directory R:/x86_64-7.2.0-release-posix-seh-rt_v6-rev0/inst_zoneinfo-2018f/usr/share/zoneinfo/R:: Invalid argument
#export VERSION=2020b
#export VERSIONDATE=20201007
#export VERSION=2020c
#export VERSIONDATE=20201017
#export VERSION=2020d
#export VERSIONDATE=20201022
#export VERSION=2020f
#export VERSIONDATE=20210110
export VERSION=2021a
export VERSIONDATE=20240828
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export VERSION=2024a
#export VERSIONDATE=20240828
wl-showstatus --package-version
#export DEPENDENCIES=gettext
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=
#export LICENSETYPE="Public domain"
export LICENSEFILE=LICENSE
export LICENSETYPE="Public Domain,BSD"
##export DOWNLOADURL="ftp://elsie.nci.nih.gov/pub tzcode"
#export DOWNLOADURL="ftp://elsie.nci.nih.gov/pub tzdata"
##export DOWNLOADURL="ftp://ftp.iana.org/tz/releases/ tzcode"
#export DOWNLOADURL="ftp://ftp.iana.org/tz/releases/ tzdata"
#export DOWNLOADURL="http://www.iana.org/time-zones tzcode"
#export DOWNLOADURL="http://www.iana.org/time-zones tzdata"
export DOWNLOADURL="https://github.com/eggert/tz/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL="ftp://elsie.nci.nih.gov/pub/tzcode`echo $VERSION|sed -e 's/_.*$//'`.tar.gz ftp://elsie.nci.nih.gov/pub/tzdata`echo $VERSION|sed -e 's/^.*_//'`.tar.gz"
#export DOWNLOADSOURCEURL="ftp://ftp.iana.org/tz/releases/tzcode`echo $VERSION|sed -e 's/_.*$//'`.tar.gz ftp://ftp.iana.org/tz/releases/tzdata`echo $VERSION|sed -e 's/^.*_//'`.tar.gz"
#export DOWNLOADSOURCEURL="http://www.iana.org/time-zones/repository/releases/tzcode`echo $VERSION|sed -e 's/_.*$//'`.tar.gz http://www.iana.org/time-zones/repository/releases/tzdata`echo $VERSION|sed -e 's/^.*_//'`.tar.gz"
export DOWNLOADSOURCEURL=https://github.com/eggert/tz/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
mkdir -p $BASENAME-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/tzcode`echo $VERSION|sed -e "s/_.*$//"`.tar.gz -C$BASENAME-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/tzdata`echo $VERSION|sed -e "s/^.*_//"`.tar.gz -C$BASENAME-$VERSION
#cd $BASENAME-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd tz-$VERSION
# fix missing file
mkdir -p winfix/sys
cat > winfix/sys/wait.h << EOF
#define S_IRGRP 0
#define S_IXGRP 0
#define S_IROTH 0
#define S_IXOTH 0
EOF
## fix mkdir and link in zic.c (version <= 2016f)
#mv zic.c zic.c.bak
#sed -e "s/\(mkdir *([^),]*\),[^),]*)/\1)/; s/^extern int\s*link(const char \* fromname, const char \* toname);/#define link(fromname,toname) 0/" zic.c.bak > zic.c
## fix mkdir and link in zic.c (version >= 2016g <= 2017b)
#patch -ulbf zic.c << EOF
#--- zic.c  2017-01-17 23:26:28.000000000 +0100
#+++ zic.c  2017-03-01 14:41:56.987625300 +0100
#@@ -31,3 +31,3 @@
# # undef mkdir
#-# define mkdir(name, mode) _mkdir(name)
#+# define mkdir(name) _mkdir(name)
# #endif
#@@ -111,3 +111,3 @@
#                        const char * options);
#-extern int     link(const char * fromname, const char * toname);
#+#define link(fromname,toname) 0
# extern char *  optarg;
#@@ -884,2 +884,8 @@
#            }
#+           char* fullpath = (char*)malloc(strlen(directory) + strlen(tofield) + 2);
#+           strcpy(fullpath, directory);
#+           strcat(fullpath, "/");
#+           strcat(fullpath, tofield);
#+           mkdirs(fullpath, true);
#+           free(fullpath);
#            tp = fopen(tofield, "wb");
#@@ -3153,3 +3159,3 @@
#                */
#-               if (mkdir(name, MKDIR_UMASK) != 0) {
#+               if (mkdir(name) != 0) {
#                        /* For speed, skip itsdir if errno == EEXIST.  Since
#EOF
## fix mkdir and link in zic.c (version >= 2017c)
#patch -ulbf zic.c << EOF
#@@ -34,3 +34,3 @@
# # undef mkdir
#-# define mkdir(name, mode) _mkdir(name)
#+# define mkdir(name) _mkdir(name)
# #endif
#@@ -138,3 +138,3 @@
#                        const char * options);
#-extern int     link(const char * fromname, const char * toname);
#+#define link(fromname,toname) 0
# extern char *  optarg;
#@@ -917,3 +917,3 @@
#        if (link_errno != 0) {
#-         bool absolute = *fromfield == '/';
#+         bool absolute = *fromfield == '/' || *fromfield == '\\\\' || (*fromfield >= 'A' && *fromfield <= 'Z' && fromfield[1] == ':');
#          char *linkalloc = absolute ? NULL : relname(fromfield, tofield);
#@@ -942,2 +942,12 @@
#            }
#+           char* fullpath = (char*)malloc(strlen(directory) + strlen(tofield) + 2);
#+          if (*tofield == '/' || *tofield == '\\\\' || (*tofield >= 'A' && *tofield <= 'Z' && tofield[1] == ':')) {
#+            strcpy(fullpath, tofield);
#+          } else {
#+             strcpy(fullpath, directory);
#+             strcat(fullpath, "/");
#+             strcat(fullpath, tofield);
#+          }
#+           mkdirs(fullpath, true);
#+           free(fullpath);
#            tp = fopen(tofield, "wb");
#@@ -3268,3 +3278,3 @@
#                */
#-               if (mkdir(name, MKDIR_UMASK) != 0) {
#+               if (mkdir(name) != 0) {
#                        /* For speed, skip itsdir if errno == EEXIST.  Since
#EOF
## fix gmtime_r issues in localtime.c (version >= 2014g <= 2019b)
#patch -ulbf localtime.c << EOF
#--- localtime.c  2014-08-31 09:31:16 +0200
#+++ localtime.c  2014-08-31 09:42:24 +0200
#@@ -1433,4 +1433,5 @@
# }
#
#+#ifndef __MINGW32__
# struct tm *
# gmtime(const time_t *const timep)
#@@ -1450,4 +1451,5 @@
#   return tmp;
# }
#+#endif
#
# #ifdef STD_INSPIRED
#EOF
## fix mkdir and link in localtime.c (version <= 2020a)
#mv localtime.c localtime.c.bak
#echo "#define asctime_r(_tm,_buf ) ( strcpy( (_buf), asctime( (_tm) ) ), (_buf) )" > localtime.c
#cat localtime.c.bak >> localtime.c
## fix missing UINT64_MAX localtime.c (version >= 2013a <= 2020a)
#mv localtime.c localtime.c.bak
#cat > localtime.c << EOF
##include <stdint.h>
##ifndef UINT64_MAX
##define UINT64_MAX 0xFFFFFFFFFFFFFFFFULL
##endif
#EOF
#cat localtime.c.bak >> localtime.c
# fix missing asctime_r in localtime.c (version >= 2020b)
mv localtime.c localtime.c.bak &&
echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > localtime.c &&
cat localtime.c.bak >> localtime.c
# fix missing localtime_r in strftime.c (version >= 2020b)
mv strftime.c strftime.c.bak &&
echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > strftime.c &&
cat strftime.c.bak >> strftime.c
## fix invalid lines in tzdata.zi (version >= 2017c)
#patch -ulbf tzdata.zi << EOF
#@@ -4145,3 +4145 @@
# Z Factory 0 - -00
#-eles US/Pacific-New
#-Z Factory 0 - -00
#EOF

# fix functions that already exist
patch -ulbf private.h << EOF
@@ -480,2 +480,3 @@

+#ifndef __MINGW64_VERSION_MAJOR
 char *ctime(time_t const *);
@@ -483,2 +484,3 @@
 double difftime(time_t, time_t) ATTRIBUTE_CONST;
+#endif
 size_t strftime(char *restrict, size_t, char const *restrict,
@@ -489,2 +491,3 @@
 # endif
+#ifndef __MINGW64_VERSION_MAJOR
 struct tm *gmtime(time_t const *);
@@ -495,2 +498,3 @@
 time_t time(time_t *);
+#endif
 void tzset(void);
EOF
patch -ulbf localtime.c << EOF
@@ -1556,4 +1556,5 @@
 #if NETBSD_INSPIRED

+#ifndef __MINGW64_VERSION_MAJOR
 struct tm *
 localtime_rz(struct state *sp, time_t const *timep, struct tm *tmp)
@@ -1578,5 +1579,7 @@
   return tmp;
 }
+#endif

+#ifndef __MINGW64_VERSION_MAJOR
 struct tm *
 localtime(const time_t *timep)
@@ -1590,4 +1593,5 @@
   return localtime_tzset(timep, tmp, false);
 }
+#endif

 /*
@@ -1614,4 +1618,5 @@
 }

+#ifndef __MINGW64_VERSION_MAJOR
 /*
 * Re-entrant version of gmtime.
@@ -1630,4 +1635,5 @@
   return gmtime_r(timep, &tm);
 }
+#endif

 #ifdef STD_INSPIRED
@@ -1774,4 +1780,5 @@
 }

+#ifndef __MINGW64_VERSION_MAJOR
 char *
 ctime(const time_t *timep)
@@ -1794,4 +1801,5 @@
   return tmp ? asctime_r(tmp, buf) : NULL;
 }
+#endif

 /*
@@ -2205,4 +2213,5 @@
 #endif

+#ifndef __MINGW64_VERSION_MAJOR
 time_t
 mktime(struct tm *tmp)
@@ -2219,4 +2228,5 @@
   return t;
 }
+#endif

 #ifdef STD_INSPIRED
EOF
patch -ulbf difftime.c << EOF
@@ -9,6 +9,7 @@

 #include "private.h"   /* for time_t and TYPE_SIGNED */

+#ifndef __MINGW64_VERSION_MAJOR
 /* Return -X as a double.  Using this avoids casting to 'double'.  */
 static double
 dminus(double x)
@@ -58,3 +59,4 @@
          return t1 - t0;
        }
 }
+#endif
\ No newline at end of file
EOF
# fix already defined tzset() in localtime.c (version >= 2020f)
patch -ulbf localtime.c << EOF
@@ -1380,4 +1380,5 @@
 }

+#ifndef _UCRT
 void
 tzset(void)
@@ -1388,4 +1389,5 @@
   unlock();
 }
+#endif

 static void
EOF
## fix redefinition of ctime (version >= 2024a)
#sed -i.bak2 -e "s/\bctime(/#undef ctime\n#define ctime TZ_RPL_ctime\n&/" private.h asctime.c

## avoid ln -s
#mv Makefile Makefile.bak &&
#sed -e "s/ln \(-s \)*/cp -f /" Makefile.bak > Makefile

## fix Makefile (version >= 2018f)
#sed -i.bak -e "s/\(-[a-z] \)'\([^']*DESTDIR[^']*\)'/\1\"\2\"/" Makefile
#sed -i.bak2 -e "s/\(-t '\)\$(DESTDIR)\(\$(TZDEFAULT)'\)/\1\2/" Makefile
#sed -i.bak2 -e "s?\(-t '\)\$(DESTDIR)\$(TZDEFAULT)\('\)?\1/etc/localtime\2?" Makefile

#wl-showstatus build &&
# make TOPDIR=$INSTALLPREFIX CC=${CC:-gcc} CFLAGS="-I. -DHAVE_STDINT_H -DHAVE_DOS_FILE_NAMES -DHAVE_SYMLINK=0 -DHAVE_LINK=0 -DHAVE_LOCALTIME_R=0" &&
# # fix missing destination folders
# for F in $(sed -n -e "s/^Zone\s\s*\([^ /]*\)\/.*$/\1/p; s/^Link\s\s*[^ ]*\s\s*\([^ /]*\)\/.*$/\1/p" * 2>/dev/null | sort | uniq); do
#  mkdir -p $INSTALLPREFIX/etc/zoneinfo/$F
# done &&
# # fix missing version.out
# echo $VERSION>version.out &&
wl-showstatus build-install &&
 #make TOPDIR=$INSTALLPREFIX CC=${CC:-gcc} CFLAGS="-I$PWD/winfix -DHAVE_SYMLINK=0" install &&
 #make TOPDIR=$INSTALLPREFIX CC=${CC:-gcc} CFLAGS="-I$PWD/winfix -DHAVE_SYMLINK=0 -DHAVE_STDINT_H" install &&
 #make TOPDIR=$INSTALLPREFIX CC=${CC:-gcc} CFLAGS="-I$PWD/winfix -DHAVE_SYMLINK=0 -DHAVE_STDINT_H -DHAVE_DOS_FILE_NAMES" install &&
 #make TOPDIR=$INSTALLPREFIX CC=${CC:-gcc} CFLAGS="-I$PWD/winfix -DHAVE_STDINT_H -DHAVE_DOS_FILE_NAMES -DHAVE_SYMLINK=0 -DHAVE_LINK=0" install &&
 #make TOPDIR=$INSTALLPREFIX CC=${CC:-gcc} CFLAGS="-I$PWD/winfix -DHAVE_STDINT_H -DHAVE_DOS_FILE_NAMES -DHAVE_SYMLINK=0 -DHAVE_LINK=0 -DHAVE_LOCALTIME_R=0" install &&
 #( make TOPDIR=$INSTALLPREFIX CC=${CC:-gcc} CFLAGS="-I. -DHAVE_STDINT_H -DHAVE_DOS_FILE_NAMES -DHAVE_SYMLINK=0 -DHAVE_LINK=0 -DHAVE_LOCALTIME_R=0 -DHAVE_DIRECT_H" install || make TOPDIR=$INSTALLPREFIX CC=${CC:-gcc} CFLAGS="-I. -DHAVE_STDINT_H -DHAVE_DOS_FILE_NAMES -DHAVE_SYMLINK=0 -DHAVE_LINK=0 -DHAVE_LOCALTIME_R=0 -DHAVE_DIRECT_H" install ) &&
 ( make TOPDIR=$INSTALLPREFIX USRDIR= CC=${CC:-gcc} CFLAGS="-I$PWD/winfix -DHAVE_STDINT_H=1 -DHAVE_DOS_FILE_NAMES=1 -DHAVE_SYMLINK=0 -DHAVE_LINK=0 -DHAVE_LOCALTIME_R=0 -DHAVE_DIRECT_H=1" install || make TOPDIR=$INSTALLPREFIX USRDIR= CC=${CC:-gcc} CFLAGS="-I. -DHAVE_STDINT_H=1 -DHAVE_DOS_FILE_NAMES=1 -DHAVE_SYMLINK=0 -DHAVE_LINK=0 -DHAVE_LOCALTIME_R=0 -DHAVE_DIRECT_H=1" install ) &&
 #( make TOPDIR=$INSTALLPREFIX USRDIR= CC=${CC:-gcc} CFLAGS="-I$PWD/winfix -DHAVE_STDINT_H=1 -DHAVE_DOS_FILE_NAMES=1 -DHAVE_SYMLINK=0 -DHAVE_LINK=0 -DHAVE_LOCALTIME_R=0 -DHAVE_DIRECT_H=1" LDLIBS="-lintl" install || make TOPDIR=$INSTALLPREFIX USRDIR= CC=${CC:-gcc} CFLAGS="-I. -DHAVE_STDINT_H=1 -DHAVE_DOS_FILE_NAMES=1 -DHAVE_SYMLINK=0 -DHAVE_LINK=0 -DHAVE_LOCALTIME_R=0 -DHAVE_DIRECT_H=1" LDLIBS="-lintl" install ) &&
 #( make TOPDIR=$INSTALLPREFIX USRDIR= CC=${CC:-gcc} CFLAGS="-I$PWD/winfix -DHAVE_STDINT_H=1 -DHAVE_DOS_FILE_NAMES=1 -DHAVE_SYMLINK=0 -DHAVE_LINK=0 -DHAVE_LOCALTIME_R=0 -DHAVE_DIRECT_H=1 -D_POSIX_THREAD_SAFE_FUNCTIONS" install || make TOPDIR=$INSTALLPREFIX USRDIR= CC=${CC:-gcc} CFLAGS="-I. -DHAVE_STDINT_H=1 -DHAVE_DOS_FILE_NAMES=1 -DHAVE_SYMLINK=0 -DHAVE_LINK=0 -DHAVE_LOCALTIME_R=0 -DHAVE_DIRECT_H=1 -D_POSIX_THREAD_SAFE_FUNCTIONS" install ) &&
 mkdir -p $INSTALLPREFIX/include &&
 cp -f tzfile.h $INSTALLPREFIX/include/ &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf tz-$VERSION
####To do: build DLL?



