export NAME="OpenSceneGraph"
export STATUS=
export URL=http://www.openscenegraph.org/
export BASENAME=openscenegraph
export DESCRIPTION="The OpenSceneGraph is an open source high performance 3D graphics toolkit, used by application developers in fields such as visual simulation, games, virtual reality, scientific visualization and modelling. Written entirely in Standard C++ and OpenGL it runs on all Windows platforms, OSX, GNU/Linux, IRIX, Solaris, HP-Ux, AIX and FreeBSD operating systems. The OpenSceneGraph is now well established as the world leading scene graph technology, used widely in the vis-sim, space, scientific, oil-gas, games and virtual reality industries."
export CATEGORY=graphics
export TYPE=library
#export VERSION=3.0.1
#export VERSIONDATE=20130513
####src/osgPlugins/ogr/ReaderWriterOGR.cpp: undefined reference to `OGRSFDriverRegistrar::GetRegistrar()'
####src/osgPlugins/ogr/ReaderWriterOGR.cpp:141:53: error: 'Open' is not a member of 'OGRSFDriverRegistrar'
#export VERSION=3.2.3
#export VERSIONDATE=20180203
#export VERSION=3.4.1
#export VERSIONDATE=20170926
####src/osgDB/Compressors.cpp:174:30: error: invalid new-expression of abstract class type 'ZLibCompressor'
#export VERSION=3.5.7
#export VERSIONDATE=20171009
#export VERSION=3.5.8
#export VERSIONDATE=20171115
#export VERSION=3.5.9
#export VERSIONDATE=20171130
#export VERSION=3.5.10
#export VERSIONDATE=20180319
#export VERSION=3.6.0
#export VERSIONDATE=20180408
#export VERSION=3.6.1
#export VERSIONDATE=20180528
#export VERSION=3.6.2
#export VERSIONDATE=20180629
#export VERSION=3.6.3
#export VERSIONDATE=20180914
#export VERSION=3.6.4
#export VERSIONDATE=20190727
export VERSION=3.6.5
export VERSIONDATE=20200201
wl-showstatus --package-version
export DEPENDENCIES=cairo,poppler,librsvg,gtk2,gtkglext,pthreads,libxml2,libcurl,openal,boost,openexr,pcre,ffmpeg4,gdal,giflib,freetype2,jasper,libvncserver,libquicktime,sdl,zlib,libgta
export OPTIONALDEPENDENCIES=coin
#export BUILDDEPENDENCIES=cmake,pkg-config
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,pkg-config,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE="OpenSceneGraph Public License \(OSGPL\)"
#export DOWNLOADURL="http://www.openscenegraph.org/index.php/download-section/stable-releases"
#export DOWNLOADURL="http://trac.openscenegraph.org/downloads/stable_releases/ OpenSceneGraph-"
#export DOWNLOADURL="https://github.com/openscenegraph/OpenSceneGraph/releases"
export DOWNLOADURL="https://github.com/openscenegraph/OpenSceneGraph/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.openscenegraph.org/downloads/stable_releases/OpenSceneGraph-$VERSION/source/OpenSceneGraph-$VERSION.zip
#export DOWNLOADSOURCEURL=https://github.com/openscenegraph/OpenSceneGraph/archive/OpenSceneGraph-$VERSION.zip
export DOWNLOADSOURCEURL=https://github.com/openscenegraph/OpenSceneGraph/archive/refs/tags/OpenSceneGraph-$VERSION.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
unzip -oq $TARBALLDIR/$BASENAME/OpenSceneGraph-$VERSION.zip
#cd OpenSceneGraph-$VERSION
cd OpenSceneGraph-OpenSceneGraph-$VERSION
# fix type issues in src/osg/State.cpp (version <= 3.0.1)
patch -ulbf src/osg/State.cpp << EOF
@@ -112 +112 @@
-    _abortRenderingPtr = false;
+    _abortRenderingPtr = NULL;
@@ -692 +692 @@
-    if (unit>=_textureAttributeMapList.size()) return false;
+    if (unit>=_textureAttributeMapList.size()) return NULL;
EOF
# fix type issues in src/osgPlugins/x/directx.cpp
patch -ulbf src/osgPlugins/x/directx.cpp << EOF
+++ src/osgPlugins/x/directx.cpp        2017-07-05 17:35:52.468158200 +0200
@@ -66 +66 @@
-    if (fin.getline(buf, sizeof(buf)) == 0) {
+    if (!fin.getline(buf, sizeof(buf))) {
EOF
# fix type issues in src/osgPlugins/txp/ReaderWriterTXP.cpp
patch -ulbf src/osgPlugins/txp/ReaderWriterTXP.cpp << EOF
@@ -860,3 +860,3 @@
     if ( archive == 0 )
-        return false;
+        return NULL;

@@ -897,3 +897,3 @@
     if ( archive == 0 )
-        return false;
+        return NULL;

EOF
# fix type issues in src/osgPlugins/txp/trpage_managers.cpp
patch -ulbf src/osgPlugins/txp/trpage_managers.cpp << EOF
@@ -1023,5 +1023,5 @@
             return &childRef;
         else
-            return false;
+            return NULL;

     }
EOF
# fix type issues in src/osgPlugins/txp/trpage_material.cpp
patch -ulbf src/osgPlugins/txp/trpage_material.cpp << EOF
@@ -224,7 +224,7 @@
 {
     MaterialMapType::const_iterator itr = materialMap.find((nt*numMat)+nm);
     if(itr == materialMap.end())
-        return false;
+        return NULL;
     return const_cast<trpgMaterial *>(&(*itr).second);
 }

@@ -1744,10 +1744,10 @@
 const trpgTexture *trpgTexTable::GetTextureRef(int id) const
 {
     if (id < 0)
-        return false;
+        return NULL;
     TextureMapType::const_iterator itr = textureMap.find(id);
     if(itr == textureMap.end()) {
-        return false;
+        return NULL;
     }
     const trpgTexture *ret = &(itr->second);
     return ret;
@@ -1766,7 +1766,7 @@
             return &(itr->second);
         }
     }
-    return false;
+    return NULL;

 }

EOF
# fix type issues in src/osgPlugins/txp/trpage_model.cpp
patch -ulbf src/osgPlugins/txp/trpage_model.cpp << EOF
@@ -434,3 +434,3 @@
     if(itr == modelsMap.end())    {
-        return false;
+        return NULL;
     }
EOF
## fix missing DGifOpen/DGifCloseFile parameter in src/osgPlugins/gif/ReaderWriterGIF.cpp (version >= 3.0.1 <= 3.4.1)
#if grep -q "DGifCloseFile(.*ErrorCode)" $MINGWPREFIX/include/gif_lib.h; then
# mv src/osgPlugins/gif/ReaderWriterGIF.cpp src/osgPlugins/gif/ReaderWriterGIF.cpp.bak &&
# sed -e "s/\(DGifOpen\|DGifCloseFile\)\(([^)]*\))/\1\2, NULL)/g" src/osgPlugins/gif/ReaderWriterGIF.cpp.bak > src/osgPlugins/gif/ReaderWriterGIF.cpp
#fi
# fix redefinition of wchar_t in include/osg/GL (version >= 3.0.1)
mv include/osg/GL include/osg/GL.bak &&
sed -e "s?typedef .* wchar_t;?//&?" include/osg/GL.bak > include/osg/GL
# fix redefinition of byte in src/osg/DisplaySettings.cpp (version >= 3.6.5)
patch -ulbf src/osg/DisplaySettings.cpp << EOF
@@ -28,3 +28,5 @@
 #if defined(WIN32) && !defined(__CYGWIN__)
+#define byte CUSTOM_byte
 #include<windows.h>
+#undef byte
 extern "C" { OSG_EXPORT DWORD NvOptimusEnablement=0x00000001; }
EOF
# fix missing OGRSFDriverRegistrar::Open in src/osgPlugins/ogr/ReaderWriterOGR.cpp (version >= 3.0.1)
patch -ulbf src/osgPlugins/ogr/ReaderWriterOGR.cpp << EOF
@@ -141 +141 @@
-        OGRDataSource* file = OGRSFDriverRegistrar::Open(fileName.c_str());
+        OGRDataSource* file = OGROpen(fileName.c_str(), FALSE, NULL);
EOF
# fix src/osgPlugins/svg/ReaderWriterSVG.cpp (version >= 3.6.5)
patch -ulbf src/osgPlugins/svg/ReaderWriterSVG.cpp << EOF
@@ -23,3 +23,2 @@

-extern "C" {
     #include <librsvg/rsvg.h>
@@ -29,3 +28,2 @@
     #endif
-}

EOF
#wl-showstatus configure &&
# #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNVTT_INCLUDE_DIR:PATH= -DNVTT_LIBRARY:FILEPATH= . &&
# C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg4/bin:$PATH cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNVTT_INCLUDE_DIR:PATH= -DNVTT_LIBRARY:FILEPATH= -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) . &&
# #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNVTT_INCLUDE_DIR:PATH= -DNVTT_LIBRARY:FILEPATH= -DGDAL_INCLUDE_DIR:PATH= -DGDAL_LIBRARY:FILEPATH= . &&
# # fix undefined reference to boost::system::generic_category() (version >= 3.5.10)
# ( echo "-Wl,--as-needed -lboost_system" >> src/osgPlugins/las/CMakeFiles/osgdb_las.dir/linklibs.rsp || true ) &&
# #( echo "-Wl,--as-needed -lcryptopp -lxerces-c -lexpat -ljson-c -lgeos_c -lSFCGAL -lproj -lpng -ljpeg -ltiff -lcurl -lpq -ltiledb -ldf -lmfhdf -lhdf5 -lbsoncxx -liodbcinst -liodbc -lgeotiff -lwebp -lopenjp2 -lcfitsio -lfreexl -lxml2 -lmongocxx -lz -lgta -lcharls -liconv -lqhull -lws2_32 -lpsapi" >> src/osgPlugins/gdal/CMakeFiles/osgdb_gdal.dir/linklibs.rsp || true ) &&
# wl-showstatus build &&
# #make &&
# C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} make &&
# wl-showstatus build-install &&
# make -j1 install/strip &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf OpenSceneGraph-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf OpenSceneGraph-OpenSceneGraph-$VERSION
# don't abort on warnings
sed -i.bak -e "s/-Wall\|-pedantic/-Wno-narrowing/g" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg4/bin:$PATH cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNVTT_INCLUDE_DIR:PATH= -DNVTT_LIBRARY:FILEPATH= -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
 #to build without coin support: -DINVENTOR_LIBRARY_RELEASE:FILEPATH= 
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DNVTT_INCLUDE_DIR:PATH= -DNVTT_LIBRARY:FILEPATH= -DGDAL_INCLUDE_DIR:PATH= -DGDAL_LIBRARY:FILEPATH= -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
 ## fix undefined reference to boost::system::generic_category() (version >= 3.5.10)
 #( echo "-Wl,--as-needed -lboost_system" >> src/osgPlugins/las/CMakeFiles/osgdb_las.dir/linklibs.rsp || true ) &&
 # fix missing libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lgta -lcurl -lexpat/" build_win/build.ninja &&
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lgta -lcurl -lexpat -ltiff/" build_win/build.ninja &&
 #wl-showstatus build &&
 #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} ninja -Cbuild_win &&
 wl-showstatus build-install &&
 C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} ninja -Cbuild_win install/strip &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf OpenSceneGraph-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf OpenSceneGraph-OpenSceneGraph-$VERSION
####Superseded by VulkanSceneGraph



