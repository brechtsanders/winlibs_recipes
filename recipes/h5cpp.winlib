export NAME="H5CPP"
export STATUS=
export URL=http://h5cpp.org/
export BASENAME=h5cpp
export DESCRIPTION="H5CPP is a novel approach to persistence in the field of machine learning, it provides high performance sequential and block access to HDF5 containers through modern C++ Download packages from here."
#export DESCRIPTION="C++17 templates between [stl::vector | armadillo | eigen3 | ublas | blitz++] and HDF5 datasets"
export CATEGORY=database
export TYPE=library
#export VERSION=master
#export VERSIONDATE=20191029
#export VERSION=1.10.4-5
#export VERSIONDATE=20200116
export VERSION=1.10.4-6
export VERSIONDATE=20200402
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYRIGHT
#export LICENSEFILE=LICENSE.H5CPP
export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/steven-varga/h5cpp/releases"
export DOWNLOADURL="https://github.com/steven-varga/h5cpp/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/steven-varga/h5cpp/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/steven-varga/h5cpp/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/steven-varga/h5cpp/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix type issue in h5cpp/H5Zall.hpp
patch -ulf h5cpp/H5Zall.hpp << EOF
@@ -50,3 +50,3 @@
        inline size_t gzip( void* dst, const void* src, size_t size, unsigned flags, size_t n, const unsigned params[]){
-               size_t nbytes = size;
+               uLongf nbytes = size;
                int ret = compress2( (unsigned char*)dst, &nbytes, (const unsigned char*)src, size, params[0]);
EOF
#wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DH5CPP_BUILD_TESTS:BOOL=ON . &&
# wl-showstatus build-install &&
# ( make install/strip || make install/strip CXX="${CXX:-g++} -fpermissive" ) &&
# mkdir -p $INSTALLPREFIX/share/h5cpp &&
# mv -f $INSTALLPREFIX/examples $INSTALLPREFIX/share/h5cpp/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DH5CPP_BUILD_TESTS:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 mkdir -p $INSTALLPREFIX/share/h5cpp &&
 mv -f $INSTALLPREFIX/examples $INSTALLPREFIX/share/h5cpp/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



