export NAME="GNU ccRTP"
export STATUS=
export URL=https://www.gnu.org/software/ccrtp/
export BASENAME=ccrtp
export DESCRIPTION="GNU ccRTP is an implementation of RTP, the real-time transport protocol from the IETF (see RFC  3550, RFC 3551 and RFC 3555)."
export CATEGORY=communication
export TYPE=library
export VERSION=2.1.2
export VERSIONDATE=
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://ftp.gnu.org/gnu/ccrtp/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://ftp.gnu.org/gnu/ccrtp/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-demos &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



## fix CMakeLists.txt
#patch -ulbf CMakeLists.txt << EOF
#@@ -65,2 +65,3 @@
#
#+list(APPEND CMAKE_MODULE_PATH "$(cygpath -m $MINGWPREFIX/share/ucommon/cmake)")
# include(CapeConfig)
#EOF
## fix src/CMakeLists.txt
#patch -ulbf src/CMakeLists.txt << EOF
#@@ -64,3 +64,2 @@
# target_link_libraries(ccrtp commoncpp \${LIBS})
#-add_dependencies(ccrtp commoncpp)
#
#EOF
#mkdir -p build_static build_shared &&
# wl-showstatus configure-static &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_STATIC:BOOL=ON -DBUILD_SHARED:BOOL=OFF -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_static &&
# wl-showstatus configure-shared &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_STATIC:BOOL=OFF -DBUILD_SHARED:BOOL=ON -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_shared &&
# wl-showstatus build-install-static &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install-shared &&
# ninja -Cbuild_shared install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



