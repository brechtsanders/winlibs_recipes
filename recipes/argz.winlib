export NAME="argz"
export STATUS=
export URL=http://git.savannah.gnu.org/gitweb/?p=gnulib.git
export BASENAME=argz
export DESCRIPTION="Routines for dealing with '\\0' separated arg vectors (part of gnulib)."
export CATEGORY=development
export TYPE=library
export VERSION=0.1
export VERSIONDATE=20220426
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://git.savannah.gnu.org/cgit/gnulib.git gnulib-"
#export DOWNLOADURL="https://github.com/coreutils/gnulib/tags gnulib-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://git.savannah.gnu.org/cgit/gnulib.git/snapshot/gnulib-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/gnulib $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/gnulib/gnulib-$VERSION.tar.gz
cd gnulib-$VERSION
cp -u lib/argz.in.h lib/argz.h
# fix missing stpcpy/strndup
cat > config.h << EOF
#include <argz.h>
#include <malloc.h>
#include <string.h>
#define strndup MY_strndup
inline char* strndup (const char* s, size_t n)
{
  char* result;
  size_t len = strlen(s);
  if (len > n)
    len = n;
  result = (char*)malloc(len + 1);
  if (!result)
    return 0;
  result[len] = 0;
  return (char*)memcpy(result, s, len);
}
inline char* stpcpy (char *dest, const char *src)
{
  register char *d = dest;
  register const char *s = src;
  do
    *d++ = *s;
  while (*s++);
  return (d - 1);
}
EOF
wl-showstatus build &&
 ${CC:-gcc} -c -o argz.o lib/argz.c -Ilib -I. -O3 &&
 ${AR:-ar} cru libargz.a argz.o &&
 #( echo "EXPORTS"; sed -n -e "s/^.* \**\(argz_.*\) *(.*$/\1/p" argz.h ) > argz.def &&
 #( echo "EXPORTS"; ${CC:-gcc} -E argz.h | sed -n -e "s/(.*//p"|sed -n -e "s/^.*\(argz_[^ *]*\).*/\1/p" ) > argz.def &&
 ( echo "EXPORTS" && ${NM:-nm} -f posix --defined-only -p libargz.a | sed -n -e "s/^_*\([^ ]*\) T .*$/\1/p" ) > argz.def &&
 ${CC:-gcc} -shared -s -mwindows -def argz.def -o argz.dll libargz.a -Wl,--out-implib,libargz.dll.a &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f lib/argz.h $INSTALLPREFIX/include/ &&
 cp -f *.a *.def $INSTALLPREFIX/lib/ &&
 cp -f *.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



