export NAME="ZBar"
export STATUS=
export URL=http://zbar.sourceforge.net/
export BASENAME=zbar
export DESCRIPTION="ZBar is an open source software suite for reading bar codes from various sources, such as video streams, image files and raw intensity sensors. It supports many popular symbologies (types of bar codes) including EAN-13/UPC-A, UPC-E, EAN-8, Code 128, Code 39, Interleaved 2 of 5 and QR Code."
export CATEGORY=graphics,dataprocessing
export TYPE=library,application
export VERSION=0.10
export VERSIONDATE=20120217
wl-showstatus --package-version
export DEPENDANCIES=libjpeg,imagemagick,gtk2,libiconv,libffi
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://sourceforge.net/projects/zbar/files/zbar/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/zbar/zbar/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix zbar/jpeg.c
mv zbar/jpeg.c zbar/jpeg.c.bak
echo "#include <windows.h>" > zbar/jpeg.c
cat zbar/jpeg.c.bak >> zbar/jpeg.c
# fix missing GWL_USERDATA in zbar/processor/win.c on 64-bit
if ( echo $RUNPLATFORM | grep -q x86_64 ); then
mv zbar/processor/win.c zbar/processor/win.c.bak
cat > zbar/processor/win.c << EOF
#include <windows.h>
#define GWL_USERDATA -21
EOF
cat zbar/processor/win.c.bak >> zbar/processor/win.c
fi
# fix missing GetModuleHandleEx in zbar/processor/win.c
mv zbar/processor/win.c zbar/processor/win.c.bak2
cat > zbar/processor/win.c << EOF
#define _WIN32_WINNT 0x0501
#include <windows.h>
EOF
cat zbar/processor/win.c.bak2 >> zbar/processor/win.c
wl-showstatus configure &&
# fix building DLLs on 64-bit
if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 autoreconf -f -i -I $MINGWPREFIX/share/aclocal
fi &&
# fix for newer versions of ImageMagick
( ls -1d $MINGWPREFIX/include/ImageMagick-*/wand &> /dev/null || (
 mv zbarimg/zbarimg.c zbarimg/zbarimg.c.bak &&
 sed -e "s?wand/MagickWand.h?MagickWand/MagickWand.h?g" zbarimg/zbarimg.c.bak > zbarimg/zbarimg.c &&
 mv configure configure.bak &&
 sed -e "s?wand/MagickWand.h?MagickWand/MagickWand.h?g" configure.bak > configure
)) &&
#PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-assert --disable-pthread --with-jpeg --with-imagemagick --disable-video --without-python --without-x --without-xshm --without-xv MOC=$MINGWPREFIX/qt/bin/moc.exe QT_CFLAGS=-I$MINGWPREFIX/qt/include QT_LIBS=-L$MINGWPREFIX/qt/lib &&
#PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-assert --disable-pthread --with-jpeg --with-imagemagick --disable-video --without-gtk --without-python --without-qt --without-x --without-xshm --without-xv &&
PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-assert --disable-pthread --with-jpeg --with-imagemagick --disable-video --without-gtk --without-python --without-qt --without-x --without-xshm --without-xv LDFLAGS="-Wl,--as-needed -lkernel32" &&
 # fix building DLLs on 64-bit
 if ( echo $RUNPLATFORM | grep -q x86_64 ); then
  mv libtool libtool.bak &&
  sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool
 fi &&
 # fix missing clock_gettime
 echo "#define _POSIX_TIMERS 0" >> include/config.h &&
 wl-showstatus build-install &&
 ( make install-strip || make install-strip XMLTO=true ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



