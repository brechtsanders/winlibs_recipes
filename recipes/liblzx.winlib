export NAME="liblzx"
export STATUS=
export URL=https://github.com/jopadan/liblzx/
export BASENAME=liblzx
export DESCRIPTION="LZX decompression algorithm format C++ header library"
export CATEGORY=compression
export TYPE=library,application
export VERSION=main
export VERSIONDATE=20250310
wl-showstatus --package-version
export DEPENDENCIES=portableendian
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE= Unlicense
export DOWNLOADURL="https://github.com/jopadan/liblzx/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/jopadan/liblzx/archive/refs/heads/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix undefined be32toh in include/lzx/lzx.h
sed -i -e "1i #include <portable_endian.h>" include/lzx/lzx.h
# fix examples/unlzx.cpp (version >= main)
patch -ulbf examples/unlzx.cpp << EOF
@@ -563,3 +563,7 @@
                                filename[temp] = 0;
+#ifdef _WIN32
+                               mkdir(filename); /* I don't care if it works or not */
+#else
                                mkdir(filename, 511); /* I don't care if it works or not */
+#endif
                                filename[temp] = '/';
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_FLAGS:STRING="-D_POSIX_THREAD_SAFE_FUNCTIONS" -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



