export NAME="gnupg"
export STATUS=
export URL=http://www.gnupg.org/
export BASENAME=gnupg
export DESCRIPTION="GnuPG itself is a commandline tool without any graphical stuff. It is the real crypto engine which can be used directly from a command prompt, from shell scripts or by other programs. Therefore it can be considered as a backend for other applications."
export CATEGORY=security
export TYPE=library
#export VERSION=2.0.11
#export VERSION=2.0.12
#export VERSION=2.0.13
#export VERSION=2.0.14
#export VERSIONDATE=20091222
#export VERSION=2.0.16
#export VERSIONDATE=20100719
#export VERSION=2.0.17
#export VERSIONDATE=20110115
#export VERSION=2.0.18
#export VERSIONDATE=20110805
#export VERSION=2.0.19
#export VERSIONDATE=20120327
#export VERSION=2.0.20
#export VERSIONDATE=20120511
#export VERSION=2.0.21
#export VERSIONDATE=20120820
#export VERSION=2.0.22
#export VERSIONDATE=20131005
#export VERSION=2.0.23
#export VERSIONDATE=20140603
#export VERSION=2.0.24
#export VERSIONDATE=20140625
#export VERSION=2.0.25
#export VERSIONDATE=20140701
#export VERSION=2.0.26
#export VERSIONDATE=20140813
#export VERSION=2.0.27
#export VERSIONDATE=20150219
#export VERSION=2.0.28
#export VERSIONDATE=20150603
#export VERSION=2.0.29
#export VERSIONDATE=20150909
#export VERSION=2.0.30
#export VERSIONDATE=20160617
#export VERSION=2.0.31
#export VERSIONDATE=20171229
#export DEPENDENCIES=pth,libgcrypt,libassuan,libksba,libgpg-error,pcre,readline,libcurl,zlib
#export VERSION=2.1.0
#export VERSIONDATE=20141106
#export VERSION=2.1.6
#export VERSIONDATE=20161122
####*** It is now required to build with support for the
####*** New Portable Threads Library (nPth). Please install this
####*** library first.  The library is for example available at
####***   ftp://ftp.gnupg.org/gcrypt/npth/
####*** (at least version 0.91 (API 1) is required).
#export VERSION=2.1.1
#export VERSIONDATE=20141217
#export VERSION=2.1.2
#export VERSIONDATE=20150211
#export VERSION=2.1.3
#export VERSIONDATE=20150412
#export VERSION=2.1.4
#export VERSIONDATE=20150513
#export VERSION=2.1.5
#export VERSIONDATE=20150612
#export VERSION=2.1.6
#export VERSIONDATE=20150702
#export VERSION=2.1.7
#export VERSIONDATE=20150812
#export VERSION=2.1.8
#export VERSIONDATE=20150911
#export VERSION=2.1.9
#export VERSIONDATE=20151011
####[hangs] potomo: './po/eo.po' converting from iso-8859-3 to utf-8
#export VERSION=2.1.10
#export VERSIONDATE=20151204
#export VERSION=2.1.13
#export VERSIONDATE=20160617
#export VERSION=2.1.14
#export VERSIONDATE=20160715
####g10/tofu.c:250: undefined reference to `_imp__sched_yield'
#export VERSION=2.1.15
#export VERSIONDATE=20160819
####dirmngr/dns-stuff.c:51:3: error: #error Either getaddrinfo or the ADNS library is required.
#export VERSION=2.1.17
#export VERSIONDATE=20161221
#export VERSION=2.1.18
#export VERSIONDATE=20170126
#export VERSION=2.1.19
#export VERSIONDATE=20170303
#export VERSION=2.1.20
#export VERSIONDATE=20170405
#export VERSION=2.1.21
#export VERSIONDATE=20170517
#export VERSION=2.1.22
#export VERSIONDATE=20170814
#export VERSION=2.1.23
#export VERSIONDATE=20170815
#export VERSION=2.2.0
#export VERSIONDATE=20170829
#export VERSION=2.2.1
#export VERSIONDATE=20170919
#export VERSION=2.2.2
#export VERSIONDATE=20171108
#export VERSION=2.2.3
#export VERSIONDATE=20171121
#export VERSION=2.2.4
#export VERSIONDATE=20171220
#export VERSION=2.2.5
#export VERSIONDATE=20180223
#export VERSION=2.2.6
#export VERSIONDATE=20180501
#export VERSION=2.2.7
#export VERSIONDATE=20180503
#export VERSION=2.2.8
#export VERSIONDATE=20180608
#export VERSION=2.2.9
#export VERSIONDATE=20180713
#export VERSION=2.2.10
#export VERSIONDATE=20180831
#export VERSION=2.2.11
#export VERSIONDATE=20181107
#export VERSION=2.2.12
#export VERSIONDATE=20181215
#export VERSION=2.2.13
#export VERSIONDATE=20190213
#export VERSION=2.2.14
#export VERSIONDATE=20190319
#export VERSION=2.2.15
#export VERSIONDATE=20190327
#export VERSION=2.2.16
#export VERSIONDATE=20190529
#export VERSION=2.2.17
#export VERSIONDATE=20190710
#export VERSION=2.2.18
#export VERSIONDATE=20191126
#export VERSION=2.2.19
#export VERSIONDATE=20191207
#export VERSION=2.2.20
#export VERSIONDATE=20200321
#export VERSION=2.2.21
#export VERSIONDATE=20200709
#export VERSION=2.2.22
#export VERSIONDATE=20200828
#export VERSION=2.2.23
#export VERSIONDATE=20200904
#export DEPENDENCIES=npth,libgcrypt,libassuan,libksba,libgpg-error,pcre,readline,libcurl,zlib
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=2.2.24
#export VERSIONDATE=20201117
#export VERSION=2.2.25
#export VERSIONDATE=20201124
#export VERSION=2.2.26
#export VERSIONDATE=20201222
#export VERSION=2.2.27
#export VERSIONDATE=20210112
#export VERSION=2.2.28
#export VERSIONDATE=20210611
#export VERSION=2.2.29
#export VERSIONDATE=20210705
#export VERSION=2.2.30
#export VERSIONDATE=20210827
#export VERSION=2.2.31
#export VERSIONDATE=20210916
#export VERSION=2.2.32
#export VERSIONDATE=20211007
#export VERSION=2.2.33
#export VERSIONDATE=20211123
#export VERSION=2.2.34
#export VERSIONDATE=20220208
#export VERSION=2.2.35
#export VERSIONDATE=20220426
#export VERSION=2.2.36
#export VERSIONDATE=20220707
#export VERSION=2.2.37
#export VERSIONDATE=20220825
#export VERSION=2.2.38
#export VERSIONDATE=20220902
#export VERSION=2.2.39
#export VERSIONDATE=20220903
#export VERSION=2.2.40
#export VERSIONDATE=20221014
#export VERSION=2.2.41
#export VERSIONDATE=20221220
#export VERSION=2.2.42
#export VERSIONDATE=20231129
#export VERSION=2.2.43
#export VERSIONDATE=20240416
#export VERSION=2.2.44
#export VERSIONDATE=20240817
#export VERSION=2.2.45
#export VERSIONDATE=20241023
#export VERSION=2.3.0
#export VERSIONDATE=20210408
#export VERSION=2.3.1
#export VERSIONDATE=20210421
#export VERSION=2.3.2
#export VERSIONDATE=20210825
#export VERSION=2.3.3
#export VERSIONDATE=20211013
#export VERSION=2.3.4
#export VERSIONDATE=20211221
#export VERSION=2.3.5
#export VERSIONDATE=20220422
#export VERSION=2.3.6
#export VERSIONDATE=20220426
#export VERSION=2.3.7
#export VERSIONDATE=20220712
#export VERSION=2.3.8
#export VERSIONDATE=20221014
#export VERSION=2.4.0
#export VERSIONDATE=20221220
#export VERSION=2.4.1
#export VERSIONDATE=20230429
#export VERSION=2.4.2
#export VERSIONDATE=20230531
#export VERSION=2.4.3
#export VERSIONDATE=20230705
#export VERSION=2.4.4
#export VERSIONDATE=20240125
#export VERSION=2.4.5
#export VERSIONDATE=20240308
#export VERSION=2.4.6
#export VERSIONDATE=20241030
#export VERSION=2.4.7
#export VERSIONDATE=20241125
#export VERSION=2.4.8
#export VERSIONDATE=20250515
#export VERSION=2.5.0
#export VERSIONDATE=20240708
#export VERSION=2.5.1
#export VERSIONDATE=20240912
#export VERSION=2.5.2
#export VERSIONDATE=20241205
#export VERSION=2.5.3
#export VERSIONDATE=20250109
#export VERSION=2.5.4
#export VERSIONDATE=20250212
#export VERSION=2.5.6
#export VERSIONDATE=20250508
#export VERSION=2.5.7
#export VERSIONDATE=20250603
#export VERSION=2.5.8
#export VERSIONDATE=20250621
#export VERSION=2.5.9
#export VERSIONDATE=20250711
#export VERSION=2.5.10
#export VERSIONDATE=20250727
#export VERSION=2.5.11
#export VERSIONDATE=20250730
#export VERSION=2.5.12
#export VERSIONDATE=20250903
export VERSION=2.5.13
export VERSIONDATE=20251023
wl-showstatus --package-version
export DEPENDENCIES=npth,libgcrypt,libassuan,libksba,libgpg-error,pcre,readline,libcurl,zlib,libbz2,sqlite3
export OPTIONALDEPENDENCIES=ntbtls,openldap,tpm2-tss,encfs
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL/LPGL
#export DOWNLOADURL="http://ftp.heanet.ie/mirrors/ftp.gnupg.org/gcrypt/gnupg/ gnupg-"
export DOWNLOADURL="https://gnupg.org/ftp/gcrypt/gnupg/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.heanet.ie/mirrors/ftp.gnupg.org/gcrypt/gnupg/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://gnupg.org/ftp/gcrypt/gnupg/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix missing ETIMEDOUT (version >= 2.0.12)
mv scd/ccid-driver.c scd/ccid-driver.c.bak
echo "#define ETIMEDOUT WSAETIMEDOUT" > scd/ccid-driver.c
cat scd/ccid-driver.c.bak >> scd/ccid-driver.c
## fix missing socklen_t (version >= 2.0.14 <= 2.2.32)
#mv keyserver/ksutil.c keyserver/ksutil.c.bak
#echo "#include <ws2tcpip.h>" > keyserver/ksutil.c
#cat keyserver/ksutil.c.bak >> keyserver/ksutil.c
## fix missing __MINGW_NOTHROW gl/mkdtemp.c (version >= 2.0.25 <= 2.2.32)
#mv gl/mkdtemp.c gl/mkdtemp.c.bak
#cat > gl/mkdtemp.c << EOF
##include <io.h>
##include <wchar.h>
#EOF
#cat gl/mkdtemp.c.bak >> gl/mkdtemp.c
# fix missing __MINGW_NOTHROW common/iobuf.h (version >= 2.0.25)
mv common/iobuf.h common/iobuf.h.bak
cat > common/iobuf.h << EOF
#include <io.h>
#include <wchar.h>
EOF
cat common/iobuf.h.bak >> common/iobuf.h
# fix missing __MINGW_NOTHROW g10/packet.h (version >= 2.0.25)
mv g10/packet.h g10/packet.h.bak
cat > g10/packet.h << EOF
#include <io.h>
#include <wchar.h>
EOF
cat g10/packet.h.bak >> g10/packet.h
# fix missing __MINGW_NOTHROW g10/main.h (version >= 2.0.25)
mv g10/main.h g10/main.h.bak
cat > g10/main.h << EOF
#include <io.h>
#include <wchar.h>
EOF
cat g10/main.h.bak >> g10/main.h
# fix missing __MINGW_NOTHROW g10/options.h (version >= 2.0.25)
mv g10/options.h g10/options.h.bak
cat > g10/options.h << EOF
#include <io.h>
#include <wchar.h>
EOF
cat g10/options.h.bak >> g10/options.h
## fix missing parameters for ldap_start_tls_s in keyserver/gpgkeys_ldap.c on 64-bit (version >= 2.0.19 <= 2.2.32)
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# mv keyserver/gpgkeys_ldap.c keyserver/gpgkeys_ldap.c.bak
# sed -e "s/ldap_start_tls_s(ldap,NULL,NULL)/ldap_start_tls_s(ldap,NULL,NULL,NULL,NULL)/" keyserver/gpgkeys_ldap.c.bak > keyserver/gpgkeys_ldap.c
#fi
# fix missing getnameinfo/getaddrinfo/freeaddrinfo in dirmngr/ks-engine-hkp.c (version >= 2.1.0)
mv dirmngr/ks-engine-hkp.c dirmngr/ks-engine-hkp.c.bak
cat > dirmngr/ks-engine-hkp.c << EOF
#define _WIN32_WINNT 0x0501
#include <ws2tcpip.h>
EOF
cat dirmngr/ks-engine-hkp.c.bak >> dirmngr/ks-engine-hkp.c
# fix missing sigset_t in g13/g13.c (version >= 2.1.0)
patch -ulbf g13/g13.c << EOF
--- g13/g13.c  2014-10-11 19:45:14 +0200
+++ g13/g13.c  2014-11-06 20:42:20 +0100
@@ -932,3 +932,5 @@
   npth_t thread;
+#ifndef HAVE_W32_SYSTEM
   sigset_t sigs;       /* The set of signals we want to catch.  */
+#endif
   int err;
EOF
# fix missing fseeko/ftello in kbx/keybox-search.c on 32-bit (version >= 2.1.18)
if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then
mv kbx/keybox-search.c kbx/keybox-search.c.bak
cat > kbx/keybox-search.c << EOF
#define fseeko(fp,offset,whence) fseeko64(fp, offset, whence)
#define ftello(fp) ftello64(fp)
EOF
cat kbx/keybox-search.c.bak >> kbx/keybox-search.c
fi
# fix missing HCERTSTORE in dirmngr/certcache.c (version >= 2.1.19)
if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then
mv dirmngr/certcache.c dirmngr/certcache.c.bak
cat > dirmngr/certcache.c << EOF
#include <windows.h>
#include <wincrypt.h>
EOF
cat dirmngr/certcache.c.bak >> dirmngr/certcache.c
fi
# fix missing EHOSTUNREACH in dirmngr/http.c (version >= 2.1.19)
if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then
mv dirmngr/http.c dirmngr/http.c.bak &&
sed -e "s/\bEHOSTUNREACH/WSA&/g" dirmngr/http.c.bak > dirmngr/http.c
fi
# fix missing error constants in dirmngr/dns.c (version >= 2.1.19)
if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then
mv dirmngr/dns.c dirmngr/dns.c.bak &&
sed -e "s/\b\(EPROTONOSUPPORT\|ENETDOWN\|ENETUNREACH\|EHOSTUNREACH\|ECONNREFUSED\|ETIMEDOUT\)/WSA\1/g; s/ENOTSUP/WSAEOPNOTSUPP/g; s/EOVERFLOW/ERROR_BUFFER_OVERFLOW/g" dirmngr/dns.c.bak > dirmngr/dns.c
fi
# fix invalid number of parameters to ldap_start_tls_s in dirmngr/ks-engine-ldap.c (version >= 2.1.19)
if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then
patch -ulbf dirmngr/ks-engine-ldap.c << EOF
--- dirmngr/ks-engine-ldap.c.bak        2017-03-01 14:04:33 +0100
+++ dirmngr/ks-engine-ldap.c    2017-03-04 11:27:54 +0100
@@ -540,3 +540,3 @@
       err = ldap_start_tls_s (ldap_conn,
-#ifdef HAVE_W32_SYSTEM
+#if defined(HAVE_W32_SYSTEM) && defined(__MINGW64_VERSION_MAJOR)
                              /* ServerReturnValue, result */
EOF
fi
# fix missing getnameinfo/getaddrinfo/freeaddrinfo function in dirmngr/dns-stuff.c (version >= 2.1.19)
if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then
mv dirmngr/dns-stuff.c dirmngr/dns-stuff.c.bak
cat > dirmngr/dns-stuff.c << EOF
#define _WIN32_WINNT 0x0501
#include <ws2tcpip.h>
EOF
cat dirmngr/dns-stuff.c.bak >> dirmngr/dns-stuff.c
fi
# fix missing SIGINT in g10/cpr.c (version >= 2.2.10)
patch -ulbf g10/cpr.c << EOF
@@ -399,3 +399,3 @@
 #ifdef HAVE_DOSISH_SYSTEM
-#ifndef HAVE_W32CE_SYSTEM
+#if !defined(HAVE_W32CE_SYSTEM) && defined(SIGINT)
           raise (SIGINT); /* Nothing to hangup under DOS.  */
EOF
# fix tpm2d/tpm2.c (version >= 2.3.4)
patch -ulbf tpm2d/tpm2.c << EOF
@@ -29,3 +29,7 @@
 #include <sys/stat.h>
+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <arpa/inet.h>
+#endif

EOF
# fix issues with fseeko64/ftello64 in kbx/keybox-search.c (version >= 2.4.1)
mv kbx/keybox-search.c kbx/keybox-search.c.bak &&
echo "#include <stdio.h>" > kbx/keybox-search.c &&
cat kbx/keybox-search.c.bak >> kbx/keybox-search.c
# skip building doc
cat > doc/Makefile.in << EOF
clean:
all:
install:
install-strip:
EOF
#make check
wl-showstatus configure &&
 ## (version <= 2.0.12)
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM && make install
 ## (version 2.0.13)
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LIBS="-lwldap32" && make install
 # (version >= 2.0.14)
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-scdaemon --disable-ldap --with-libcurl=$MINGWPREFIX LIBS="-lwldap32" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-scdaemon --with-libcurl=$MINGWPREFIX LIBS="-lwldap32" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-scdaemon --with-libcurl=$MINGWPREFIX LDFLAGS="-Wl,--as-needed" LIBS="-lws2_32 -lwldap32" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-libcurl=$MINGWPREFIX LDFLAGS="-Wl,--as-needed" LIBS="-lws2_32 -lwldap32" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-libcurl=$MINGWPREFIX CFLAGS="$(if ${CC:-gcc} --help -v 2>/dev/null | grep -q "\-Wint-conversion" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=int-conversion"; fi) $(if ${CC:-gcc} --help -v 2>/dev/null | grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi) -Wno-incompatible-pointer-types" LDFLAGS="-Wl,--as-needed" LIBS="-lws2_32 -lwldap32" &&
 ## fix already defined isascii
 #echo "#define HAVE_ISASCII 1" >> config.h &&
 ## fix invalid empty include in gl/stdint.h (version >= 2.0.20 <= 2.1.0)
 #make -Cgl stdint.h &&
 #mv gl/stdint.h gl/stdint.h.bak &&
 #echo "#include <wchar.h>" > gl/stdint.h &&
 #echo "#include_next <stdint.h>" >> gl/stdint.h &&
 #sed -e "s/\(# *include\) \"\"/\1_next <stdint.h>/; s/\(#if\)  \(&&\)/\1 0 \2/; s/#elif *$/#else/; s/\(# *include\) <inttypes.h>/\1_next <stdint.h>/" gl/stdint.h.bak >> gl/stdint.h &&
 ## fix missing HAVE_GETADDRINFO (version >= 2.1.14)
 #echo "#define HAVE_GETADDRINFO 1" >> config.h
 #echo "#if _WIN32_WINNT < 0x0501" >> config.h
 #echo "#define _WIN32_WINNT 0x0501" >> config.h
 #echo "#endif" >> config.h
 #echo "#include <ws2tcpip.h>" >> config.h
 wl-showstatus build-install &&
 #( make install-strip || ( touch doc/gpg2.1 doc/gpgv2.1 && make install-strip )) &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####warning, doesn't work with libassuan version 2
#see also: http://www.gpg4win.org/ http://ftp.gpg4win.org/gpg4win-1.1.4.tar.bz2
####keyserver/gpgkeys_ldap.c:2192:6: error: too few arguments to function 'ldap_start_tls_sA'



