export NAME="Soprano"
export STATUS=
export URL=http://soprano.sourceforge.net/
export BASENAME=soprano
export DESCRIPTION="Soprano (formerly known as QRDF) is a library which provides a highly usable object-oriented C++/Qt4 framework for RDF data. It uses different RDF storage solutions as backends through a simple plugin system. Soprano is targetted at desktop applications that need a RDF data storage solution. It has been optimized for easy usage and simplicity."
export CATEGORY=database
export TYPE=library
#export VERSION=2.6.0
#export VERSIONDATE=20110517
#export VERSION=2.7.0
#export VERSIONDATE=20110804
#export VERSION=2.7.1
#export VERSIONDATE=20110924
#export VERSION=2.7.2
#export VERSIONDATE=20111021
#export VERSION=2.7.3
#export VERSIONDATE=20111031
#export VERSION=2.7.4
#export VERSIONDATE=20111202
#export VERSION=2.7.5
#export VERSIONDATE=20120304
#export VERSION=2.7.6
#export VERSIONDATE=20120516
#export VERSION=2.7.57
#export VERSIONDATE=20120610
#export VERSION=2.8.0
#export VERSIONDATE=20120627
#export VERSION=2.9.0
#export VERSIONDATE=20130102
#export VERSION=2.9.1
#export VERSIONDATE=20130502
#export VERSION=2.9.2
#export VERSIONDATE=20130511
export VERSION=2.9.3
export VERSIONDATE=20130711
####server/servercore.cpp:44:25: error: QtDBus/QtDBus: No such file or directory
#export VERSION=2.9.4
#export VERSIONDATE=20131010
####CMake Error: The following variables are used in this project, but they are set to NOTFOUND.
wl-showstatus --package-version
export DEPENDANCIES=qt,libraptor,librasqal,librdf
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://sourceforge.net/projects/soprano/files/Soprano/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/soprano/Soprano/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
mv CMakeLists.txt CMakeLists.txt.bak
sed -e "s/-ansi//" CMakeLists.txt.bak > CMakeLists.txt
wl-showstatus configure &&
#QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ PATH=$PATH:$MINGWPREFIX/qt/bin cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQT_QTCORE_LIBRARY:PATH=$MINGWPREFIX/qt/lib -DQT_QTCORE_INCLUDE_DIR:PATH=$MINGWPREFIX/qt/include -DQT_INSTALL_LIBS:PATH=$MINGWPREFIX/qt/lib . &&
#PATH=$PATH:$MINGWPREFIX/qt/bin cmake.exe -G"MSYS Makefiles" -DQT_INSTALL_LIBS:PATH=$MINGWPREFIX/qt/lib . &&
#PATH=$PATH:$MINGWPREFIX/qt/bin cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_MKSPECS_DIR:PATH=$MINGWPREFIX/qt/mkspecs -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQT_QTCORE_LIBRARY_RELEASE:PATH=$MINGWPREFIX/qt/lib -DQT_INSTALL_LIBS:PATH=$MINGWPREFIX/qt/lib -DQT_QTCORE_LIBRARY:PATH=$MINGWPREFIX/qt/lib -DQT_QTCORE_INCLUDE_DIR:PATH=$MINGWPREFIX/qt/include . -LH &&
#rm CMakeCache.txt; PATH=$PATH:$MINGWPREFIX/qt/bin QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_MKSPECS_DIR:PATH=$MINGWPREFIX/qt/mkspecs -DQT_INSTALL_LIBS:PATH=$MINGWPREFIX/qt/lib -DQMAKE_MOC:PATH=$MINGWPREFIX/qt/bin/moc.exe -DQT_QTCORE_LIBRARY:PATH=$MINGWPREFIX/qt/lib -DQT_QTCORE_INCLUDE_DIR:PATH=$MINGWPREFIX/qt/include . -LH &&
#rm CMakeCache.txt; PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ C_INCLUDE_PATH=$C_INCLUDE_PATH:$MINGWPREFIX/qt/include CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MINGWPREFIX/qt/include cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_MKSPECS_DIR:PATH=$MINGWPREFIX/qt/mkspecs -DQT_LIBRARY_DIR:PATH=$MINGWPREFIX/qt/lib -DQT_INSTALL_LIBS:PATH="-L$MINGWPREFIX/qt/lib" -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQMAKE_MOC:PATH=$MINGWPREFIX/qt/bin/moc.exe -DQT_QTCORE_LIBRARY:PATH="-L$MINGWPREFIX/qt/lib -lQtCore4" -DQT_QTCORE_INCLUDE_DIR:PATH=$MINGWPREFIX/qt/include/QtCore -DQT_MOC_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/moc.exe -DQT_UIC_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/uic.exe -DQT_UIC3_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/uic3.exe -DQT_RCC_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/rcc.exe -DRASQAL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/rasqal . -LH &&
PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ C_INCLUDE_PATH=$C_INCLUDE_PATH:$MINGWPREFIX/qt/include CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MINGWPREFIX/qt/include cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_MKSPECS_DIR:PATH=$MINGWPREFIX/qt/mkspecs -DQT_LIBRARY_DIR:PATH=$MINGWPREFIX/qt/lib -DQT_INSTALL_LIBS:PATH="-L$MINGWPREFIX/qt/lib" -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQMAKE_MOC:PATH=$MINGWPREFIX/qt/bin/moc.exe -DQT_QTCORE_LIBRARY:PATH="-L$MINGWPREFIX/qt/lib -lQtCore4" -DQT_QTCORE_INCLUDE_DIR:PATH=$MINGWPREFIX/qt/include/QtCore -DQT_MOC_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/moc.exe -DQT_UIC_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/uic.exe -DQT_UIC3_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/uic3.exe -DQT_RCC_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/rcc.exe -DRASQAL_INCLUDE_DIR:PATH=$MINGWPREFIX/include/rasqal -DCMAKE_FIND_LIBRARY_SUFFIXES:STRING=".lib .dll" . &&
 wl-showstatus build-install &&
 ( make install/strip || make install ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



