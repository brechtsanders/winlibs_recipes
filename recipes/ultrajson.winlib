export NAME="ultrajson"
export STATUS=
#export URL=https://github.com/esnme/ultrajson
export URL=https://github.com/ultrajson/ultrajson
export BASENAME=ultrajson
export DESCRIPTION="Ultra fast JSON decoder and encoder written in C with Python bindings"
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=1.35
#export VERSIONDATE=20180905
#export VERSION=2.0.0
#export VERSIONDATE=20200307
#export VERSION=2.0.1
#export VERSIONDATE=20200308
####error: Microsoft Visual C++ 9.0 is required. Get it from http://aka.ms/vcpython27
#export VERSION=2.0.2
#export VERSIONDATE=20200315
#export VERSION=2.0.3
#export VERSIONDATE=20200324
#export VERSION=3.0.0
#export VERSIONDATE=20200604
#export VERSION=3.1.0
#export VERSIONDATE=20200803
#export VERSION=3.2.0
#export VERSIONDATE=20200908
#export VERSION=4.0.0
#export VERSIONDATE=20201008
#export VERSION=4.0.1
#export VERSIONDATE=20201010
#export VERSION=4.0.2
#export VERSIONDATE=20210122
#export VERSION=4.1.0
#export VERSIONDATE=20210816
#export VERSION=4.2.0
#export VERSIONDATE=20210922
#export VERSION=4.3.0
#export VERSIONDATE=20211122
####Make sure you're either building from a fully intact git repository or PyPI tarballs. Most other sources (such as GitHub's tarballs, a git checkout without the .git folder) don't contain the necessary metadata and will not work.
#export VERSION=5.0.0
#export VERSIONDATE=20211216
#export VERSION=5.1.0
#export VERSIONDATE=20211220
export VERSION=5.2.0
export VERSIONDATE=20220407
wl-showstatus --package-version
export DEPENDANCIES=doubleconversion
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=
export DOWNLOADURL="https://github.com/esnme/ultrajson/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/esnme/ultrajson/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/ultrajson/ultrajson/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
#wl-showstatus build &&
# $PYDIR/python.exe setup.py build &&
# wl-showstatus install &&
# $PYDIR/python.exe setup.py install --prefix $INSTALLPREFIX --force &&
#    echo OK
# fix lib/ultrajson.h (version >= 4.0.2)
patch -ulbf lib/ultrajson.h << EOF
@@ -54,2 +54,5 @@
 #define __ULTRAJSON_H__
+#ifdef __cplusplus
+extern "C" {
+#endif

@@ -94,3 +97,9 @@

-    #define EXPORTFUNCTION __declspec(dllexport)
+    #ifdef BUILDING_ULTRAJSON_DLL
+        #define EXPORTFUNCTION __declspec(dllexport)
+    #elif !defined(STATIC) && !defined(STATIC_ULTRAJSON)
+        #define EXPORTFUNCTION __declspec(dllimport)
+    #else
+        #define EXPORTFUNCTION
+    #endif

@@ -376,2 +385,5 @@

+#ifdef __cplusplus
+}
+#endif
 #endif
EOF
wl-showstatus build &&
 for F in lib/*.c; do
  echo CC $F &&
  gcc -c -o $F-static.o $F -O3 -DSTATIC_ULTRAJSON &&
  gcc -c -o $F-shared.o $F -O3 -DBUILDING_ULTRAJSON_DLL
 done &&
 for F in lib/*.cc; do
  echo CC $F &&
  g++ -c -o $F-static.o $F -O3 -I$MINGWPREFIX/include/double-conversion -DSTATIC_ULTRAJSON &&
  g++ -c -o $F-shared.o $F -O3 -I$MINGWPREFIX/include/double-conversion -DBUILDING_ULTRAJSON_DLL
 done &&
 ar cru libultrajson.a lib/*-static.o &&
 g++ -shared -s -mwindows -o ultrajson.dll lib/*-shared.o -Wl,--out-implib,libultrajson.dll.a -Wl,--output-def,ultrajson.def -ldouble-conversion &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f lib/*.h $INSTALLPREFIX/include/ &&
 cp -f *.a *.def $INSTALLPREFIX/lib/ &&
 cp -f *.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: also build Python library



