export NAME="zlib"
export STATUS=
export URL=http://www.zlib.net/
export BASENAME=zlib
export DESCRIPTION="zlib is designed to be a free, general-purpose, legally unencumbered -- that is, not covered by any patents -- lossless data-compression library for use on virtually any computer hardware and operating system."
export CATEGORY=compression
export TYPE=library
#export VERSION=1.2.3
#export VERSIONDATE=
#export VERSION=1.2.4
#export VERSIONDATE=20100315
#export VERSION=1.2.5
#export VERSIONDATE=20100420
#export VERSION=1.2.6
#export VERSIONDATE=20120130
#export VERSION=1.2.7
#export VERSIONDATE=20120503
#export VERSION=1.2.8
#export VERSIONDATE=20130429
#export VERSION=1.2.9
#export VERSIONDATE=20170101
#export VERSION=1.2.10
#export VERSIONDATE=20170103
#export VERSION=1.2.11
#export VERSIONDATE=20170116
#export VERSION=1.2.12
#export VERSIONDATE=20220328
#export VERSION=1.2.13
#export VERSIONDATE=20221014
#export VERSION=1.3
#export VERSIONDATE=20230818
export VERSION=1.3.1
export VERSIONDATE=20240123
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=cmake,ninja
export LICENSEFILE=README
export LICENSETYPE=zlib
export DOWNLOADURL="http://www.zlib.net/"
#export DOWNLOADURL="https://github.com/madler/zlib/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://www.zlib.net/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
#mv win32/Makefile.gcc win32/Makefile.gcc.bak &&
#sed -e "s?\(dllwrap\)?$RUNPLATFORM-\1?" win32/Makefile.gcc.bak > win32/Makefile.gcc &&
#make -f win32/Makefile.gcc CC=$RUNPLATFORM-gcc AR="$RUNPLATFORM-ar cru" RC=$RUNPLATFORM-windres &&
#CC=$RUNPLATFORM-gcc AR="$RUNPLATFORM-ar cru" LD=$RUNPLATFORM-ld
## (version <= 1.2.4)
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --shared &&
# mv Makefile Makefile.bak &&
# sed -e "s/-lc/-shared/; s/libz\.so/zlib1\.dll/" Makefile.bak > Makefile &&
# make -f win32/Makefile.gcc &&
# make install &&
# cp libzdll.a $INSTALLPREFIX/lib/libz.dll.a &&
# cp win32/zlib.def $INSTALLPREFIX/lib/ &&
# mkdir -p $INSTALLPREFIX/bin &&
# cp zlib1.dll $INSTALLPREFIX/bin/ &&
# ( rm $INSTALLPREFIX/lib/zlib1.dll* || true ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
# (version >= 1.2.5)
## fix missing off_t in zconf.h
#patch -ulbf zconf.h << EOF
#--- zconf.h  2013-04-29 00:57:12 +0200
#+++ zconf.h  2013-11-15 00:03:24 +0100
#@@ -455,2 +455,5 @@
# #    endif
#+#    ifdef __MINGW32__
#+#      include <sys/types.h>    /* for off_t */
#+#    endif
# #    ifndef z_off_t
#EOF
# manually create .la file
mkdir -p $INSTALLPREFIX/lib
cat > $INSTALLPREFIX/lib/libz.la << EOF
# -lz - a libtool library file
# Generated by hand - GNU libtool 0.0.0
dlname='zlib1.dll'
#library_names='libzdll.a'
library_names='libz.dll.a'
old_library='libz.a'
dependency_libs=''
current=0
age=0
revision=1
installed=yes
shouldnotlink=no
dlopen=''
dlpreopen=''
libdir='$INSTALLPREFIX/lib'
EOF
# set proper library name and make sure .dll file still ha sthe same name (version >= 1.3.1)
sed -i.bak -e "s/^add_library(\([^ ]*\) SHARED.*$/&\nset_target_properties(\1 PROPERTIES PREFIX \"\" ARCHIVE_OUTPUT_NAME z RUNTIME_OUTPUT_NAME zlib1)/; s/^add_library(\([^ ]*\) STATIC.*$/&\nset_target_properties(\1 PROPERTIES PREFIX \"\" ARCHIVE_OUTPUT_NAME libz)/" CMakeLists.txt
#wl-showstatus build &&
# make -f win32/Makefile.gcc &&
# #make -f win32/Makefile.gcc CC=clang RC=llvm-windres -j1 V=1 &&
# wl-showstatus build-install &&
# mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/include &&
# cp zlib1.dll $INSTALLPREFIX/bin/ &&
# cp *.a $INSTALLPREFIX/lib/ &&
# ( cp libz.dll.a $INSTALLPREFIX/lib/libz.dll.a || cp libzdll.a $INSTALLPREFIX/lib/libz.dll.a ) &&
# cp win32/zlib.def $INSTALLPREFIX/lib/ &&
# cp zlib.h zconf.h $INSTALLPREFIX/include/ &&
# sed -e "s?\@\(prefix\)\@?$INSTALLPREFIX?; s?\@\(exec_prefix\)\@?\${prefix}?; s?\@\(shared\)*libdir\@?\${exec_prefix}/lib?; s?\@includedir\@?\${prefix}/include?; s?\@VERSION\@?$VERSION?" zlib.pc.in > $INSTALLPREFIX/lib/pkgconfig/zlib.pc &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
if ! cmake --version &> /dev/null || ! ninja --version &> /dev/null; then
 wl-showstatus build &&
 mingw32-make -f win32/Makefile.gcc all CC=${CC:-gcc} RC=${WINDRES:-windres} AR=${AR:-ar} SHARED_MODE=1 &&
 wl-showstatus build-install &&
 mingw32-make -f win32/Makefile.gcc install SHARED_MODE=1 INCLUDE_PATH=$INSTALLPREFIX/include LIBRARY_PATH=$INSTALLPREFIX/lib BINARY_PATH=$INSTALLPREFIX/bin &&
 mkdir -p $INSTALLPREFIX/bin &&
 cp -u minigzip*.exe $INSTALLPREFIX/bin/ &&
 cp win32/zlib.def $INSTALLPREFIX/lib/ &&
 sed -e "s?\@\(prefix\)\@?$INSTALLPREFIX?; s?\@\(exec_prefix\)\@?\${prefix}?; s?\@\(shared\)*libdir\@?\${exec_prefix}/lib?; s?\@includedir\@?\${prefix}/include?; s?\@VERSION\@?$VERSION?" zlib.pc.in > $INSTALLPREFIX/lib/pkgconfig/zlib.pc &&
 touch SUCCESS
else
 mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DZLIB_BUILD_EXAMPLES:BOOL=ON -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 strip build_win/minigzip*.exe &&
 cp -u build_win/minigzip*.exe $INSTALLPREFIX/bin/ &&
 mkdir -p $INSTALLPREFIX/lib/pkgconfig &&
 cp -u build_win/zlib.pc $INSTALLPREFIX/lib/pkgconfig/ &&
 touch SUCCESS
fi &&
 rm SUCCESS &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION


##export BUILDDEPENDENCIES=cmake,ninja
##export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
# mkdir -p $INSTALLPREFIX/lib/pkgconfig &&
# cp -u $INSTALLPREFIX/lib/libzlibstatic.a $INSTALLPREFIX/lib/libzlib.a &&
# cp -u build_win/zlib.pc $INSTALLPREFIX/lib/pkgconfig &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####TO DO: library should be libz.a instead of libzlib.a



