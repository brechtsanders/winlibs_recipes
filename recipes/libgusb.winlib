#export NAME="libgusb"
#export STATUS=
#export URL=https://gitorious.org/gusb/
#export BASENAME=libgusb
#export DESCRIPTION="The libgusb package contains the GObject wrappers for libusb-1.0 that makes it easy to do asynchronous control, bulk and interrupt transfers with proper cancellation and integration into a mainloop."
#export CATEGORY=hardware
#export TYPE=library
##export VERSION=0.1.6
##export VERSIONDATE=20130328
##export VERSION=0.2.0
##export VERSIONDATE=20141120
#####No package 'gudev-1.0' found
##export VERSION=0.2.1
##export VERSIONDATE=20141124
##export VERSION=0.2.2
##export VERSIONDATE=20141127
##export VERSION=0.2.3
##export VERSIONDATE=20141202
##export VERSION=0.2.4
##export VERSIONDATE=20150109
##export VERSION=0.2.5
##export VERSIONDATE=20150528
##export VERSION=0.2.6
##export VERSIONDATE=20150707
##export VERSION=0.2.7
##export VERSIONDATE=20150915
##export VERSION=0.2.8
##export VERSIONDATE=20151202
##export VERSION=0.2.9
##export VERSIONDATE=20160321
##export VERSION=0.2.10
##export VERSIONDATE=20170411
#export VERSION=0.2.11
#export VERSIONDATE=20170724
#wl-showstatus --package-version
#export DEPENDANCIES=glib2,libusb
#export OPTIONALDEPENDANCIES=vala,gudev
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="http://people.freedesktop.org/~hughsient/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://people.freedesktop.org/~hughsient/releases/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-Wl,--as-needed" &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION




export NAME="libgusb"
export STATUS=
#export URL=https://gitorious.org/gusb/
export URL=https://github.com/hughsie/libgusb
export BASENAME=libgusb
export DESCRIPTION="The libgusb package contains the GObject wrappers for libusb-1.0 that makes it easy to do asynchronous control, bulk and interrupt transfers with proper cancellation and integration into a mainloop."
export CATEGORY=hardware
export TYPE=library
#export VERSION=0.3.0
#export VERSIONDATE=20180216
#####Program g-ir-scanner found: NO
#export VERSION=0.3.1
#export VERSIONDATE=20191117
#export VERSION=0.3.2
#export VERSIONDATE=20200106
#export VERSION=0.3.3
#export VERSIONDATE=20200131
#####gusb\meson.build:128:6: ERROR: Unknown variable "libgusb_girtarget".
#export VERSION=0.3.4
#export VERSIONDATE=20200220
#export VERSION=0.3.5
#export VERSIONDATE=20200730
#export VERSION=0.3.6
#export VERSIONDATE=20210313
#export VERSION=0.3.7
#export VERSIONDATE=20210524
#export VERSION=0.3.8
#export VERSIONDATE=20211006
export VERSION=0.3.10
export VERSIONDATE=20220122
####gcc.exe: error: : linker input file not found: No such file or directory
wl-showstatus --package-version
export DEPENDANCIES=glib2,libusb
#export DEPENDANCIES=glib2,libusb,gobject-introspection,vala
export OPTIONALDEPENDANCIES=gudev
export BUILDDEPENDANCIES=meson
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://people.freedesktop.org/~hughsient/releases/"
#export DOWNLOADURL="https://github.com/hughsie/libgusb/releases"
export DOWNLOADURL="https://github.com/hughsie/libgusb/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://people.freedesktop.org/~hughsient/releases/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/hughsie/libgusb/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/hughsie/libgusb/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix warning Please include winsock2.h before windows.h in gusb/gusb-device.c
mv gusb/gusb-device.c gusb/gusb-device.c.bak &&
echo "#include <winsock2.h>" > gusb/gusb-device.c &&
cat gusb/gusb-device.c.bak >> gusb/gusb-device.c
# fix MSVC issue
mkdir -p winfix
cp -rf $PYDIR/lib/distutils winfix/
patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
@@ -85,3 +85,3 @@
         else:
-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
+            return None

EOF
# fix missing python3
sed -i.bak2 -e "s/python3/python/" winfix/distutils/cygwinccompiler.py gusb/meson.build &&
# don't enable stack protection
sed -i.bak -e "s/-fstack-protector-strong//" meson.build &&
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dintrospection=false -Dvapi=false -Ddocs=false -Dtests=false -Dc_link_args="-fstack-protector" . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dintrospection=true -Dvapi=true -Ddocs=false -Dtests=false -Dc_args="-D_FORTIFY_SOURCE=1" -Dc_link_args="-fstack-protector -Wl,--as-needed -lssp" . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib PATH=$PYDIR:$PATH $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dintrospection=true -Dvapi=true -Ddocs=false -Dtests=false -Dc_link_args="-fno-stack-protector -Wl,--as-needed -lssp" . build_both &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 #PKG_CONFIG= PATH=$PATH:$PYDIR PKG_CONFIG= PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib:${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



