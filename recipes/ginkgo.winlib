export NAME="Ginkgo"
export STATUS=
export URL=https://ginkgo-project.github.io/
export BASENAME=ginkgo
export DESCRIPTION="Ginkgo is a high-performance linear algebra library for manycore systems, with a focus on solution of sparse linear systems. It is implemented using modern C++ (you will need at least a C++14 compliant compiler to build it), with GPU kernels implemented in CUDA (for NVIDIA devices), HIP (for AMD devices) and SYCL/DPC++ (for Intel devices and other supported hardware)."
export CATEGORY=math
export TYPE=library
#export VERSION=1.5.0
#export VERSIONDATE=20221220
export VERSION=1.6.0
export VERSIONDATE=20230616
wl-showstatus --package-version
export DEPENDENCIES=pthreads
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/ginkgo-project/ginkgo/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/ginkgo-project/ginkgo/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DGINKGO_BUILD_EXAMPLES:BOOL=OFF -DGINKGO_BUILD_BENCHMARKS:BOOL=OFF -DGINKGO_BUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DGINKGO_BUILD_EXAMPLES:BOOL=OFF -DGINKGO_BUILD_BENCHMARKS:BOOL=OFF -DGINKGO_BUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build &&
 ( ninja -Cbuild_static || ninja -j1 -Cbuild_static ) &&
 wl-showstatus build &&
 ( ninja -Cbuild_shared || ninja -j1 -Cbuild_shared ) &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



