export NAME="c3c"
export STATUS=
export URL=https://c3-lang.org/
#export URL=https://github.com/c3lang/c3c
export BASENAME=c3c
export DESCRIPTION="Compiler for the C3 language"
export CATEGORY=development
export TYPE=application
#export VERSION=0.6.1
#export VERSIONDATE=20240731
#export VERSION=0.6.2
#export VERSIONDATE=20240903
#export VERSION=0.6.3
#export VERSIONDATE=20241003
#export VERSION=0.6.4
#export VERSIONDATE=20241109
#export VERSION=0.6.5
#export VERSIONDATE=20241215
#export VERSION=0.6.6
#export VERSIONDATE=20250116
#export VERSION=0.6.7
#export VERSIONDATE=20250217
#export VERSION=0.6.8
#export VERSIONDATE=20250302
#export VERSION=0.7.0
#export VERSIONDATE=20250330
#export VERSION=0.7.1
#export VERSIONDATE=20250501
#export VERSION=0.7.2
#export VERSIONDATE=20250602
#export VERSION=0.7.3
#export VERSIONDATE=20250701
#export VERSION=0.7.4
#export VERSIONDATE=20250801
export VERSION=0.7.5
export VERSIONDATE=20250906
wl-showstatus --package-version
export DEPENDENCIES=llvm-project
export OPTIONALDEPENDENCIES=zlib,zstd,libxml2,libffi
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/c3lang/c3c/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/c3lang/c3c/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/utils/find_msvc.c (version >= 0.6.5)
patch -ulbf src/utils/find_msvc.c << EOF
@@ -21,3 +21,7 @@
        {
+#ifdef __MINGW32__
+               return out;
+#else
                error_exit("Failed to find windows kit root.");
+#endif
        }
EOF
# fix src/compiler/linker.c (version >= 0.6.5)
patch -ulbf src/compiler/linker.c << EOF
@@ -134,2 +134,3 @@
        {
+#ifndef __MINGW32__
                WindowsSDK *windows_sdk = windows_get_sdk();
@@ -142,2 +143,3 @@
                add_concat_quote_arg("/LIBPATH:", windows_sdk->vs_library_path);
+#endif
        }
@@ -466,2 +468,12 @@
                {
+#ifdef __MINGW32__
+                       if (str_has_suffix(lib, ".dll.a") || str_has_suffix(lib, ".a"))
+                       {
+                               add_plain_arg(lib);
+                       }
+                       else
+                       {
+                               add_concat_quote_arg("/implib:", lib);
+                       }
+#else
                        if (str_has_suffix(lib, ".lib"))
@@ -474,2 +486,3 @@
                        }
+#endif
                }
EOF
# fix src/compiler/target.c (version >= 0.6.5)
patch -ulbf src/compiler/target.c << EOF
@@ -1823,3 +1823,5 @@
                INITIALIZE_TARGET(AArch64);
+#ifndef __MINGW32__
                INITIALIZE_TARGET(RISCV);
+#endif
                INITIALIZE_TARGET(WebAssembly);
EOF
# fix error: 'count' may be used uninitialized in src/compiler/sema_stmts.c (version >= 0.6.6)
patch -ulbf src/compiler/sema_stmts.c << EOF
@@ -2708,3 +2708,3 @@
        if (!expr_is_const(collection)) goto FAILED_NO_LIST;
-       unsigned count;
+       unsigned count = 0;
        ConstInitializer *initializer = NULL;
EOF
# support shared LLVM libraries
####Bug reported: https://github.com/c3lang/c3c/pull/1682
sed -i.bak -e "s/\(liblld[^ .]*\)\.a/\1.dll.a &/g" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DLLVM_DIR:PATH=$MINGWPREFIX/share/llvm/lib/cmake/llvm -S. -Bbuild_win &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lLLVMPasses -lLLVMInstrumentation/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####PATH=$PATH:$MINGWPREFIX/share/llvm/bin $MINGWPREFIX/bin/c3c.exe help
####echo -e "import std::io;\nfn void main()\n{\nio::printn(\"Test\");\n}" | PATH=$PATH:$MINGWPREFIX/share/llvm/bin $MINGWPREFIX/bin/c3c.exe compile -



