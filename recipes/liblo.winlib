export NAME="liblo"
export STATUS=
export URL=http://liblo.sourceforge.net/
export BASENAME=liblo
export DESCRIPTION="liblo is a simple, lightweight implementation of the OSC (Open Sound Control) protocol. Current features include a nonblocking message dispatcher (which is useful for single GUI-thread applications like Qt and GTK+), UNIX domain (FIFO) socket server/client support, TCP domain socket server/client support, the ability to stop server threads, and better regression tests."
export CATEGORY=audio
export TYPE=library
#export VERSION=0.26
#export VERSIONDATE=
#export VERSION=0.27
#export VERSIONDATE=20130523
#export VERSION=0.28
#export VERSIONDATE=20140128
#export VERSION=0.29
#export VERSIONDATE=20170815
#export VERSION=0.30
#export VERSIONDATE=20190304
export VERSION=0.31
export VERSIONDATE=20200229
####/include/c++/bits/atomic_base.h:369: undefined reference to `___atomic_fetch_add_4'
wl-showstatus --package-version
export DEPENDANCIES=pthreads
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://sourceforge.net/projects/liblo/files/"
export DOWNLOADURL="http://sourceforge.net/projects/liblo/files/liblo/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/liblo/liblo/$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix "is not a direct base of" errors in lo/lo_cpp.h (version >= 0.28)
#patch -ulbf lo/lo_cpp.h << EOF
#--- lo/lo_cpp.h  2014-01-27 18:30:50 +0100
#+++ lo/lo_cpp.h  2014-03-05 09:56:10 +0100
#@@ -429,6 +429,6 @@
#         Server(const num_string_type &port, lo_err_handler err_h=0)
#-            : Server(lo_server_new(port, err_h)) {}
#+            : server(lo_server_new(port, err_h)) {}
#
#         Server(const num_string_type &port, int proto, lo_err_handler err_h=0)
#-            : Server(lo_server_new_with_proto(port, proto, err_h)) {}
#+            : server(lo_server_new_with_proto(port, proto, err_h)) {}
#
#@@ -436,3 +436,3 @@
#                const string_type &iface="", const string_type &ip="", lo_err_handler err_h=0)
#-            : Server((iface._s || ip._s)
#+            : server((iface._s || ip._s)
#                      ? lo_server_new_multicast_iface(group, port,
#@@ -737,3 +737,3 @@
#         Bundle(const Bundle &b)
#-            : Bundle((lo_bundle)b) {}
#+            : bundle((lo_bundle)b) { if (b) { lo_bundle_incref(b); } }
#
#EOF
## fix missing strtok_r in src/tools/oscsendfile.c (version >= 0.29)
#mv src/tools/oscsendfile.c src/tools/oscsendfile.c.bak &&
#echo "#define strtok_r(_s,_sep,_lasts) (*(_lasts)=strtok((_s),(_sep)))" > src/tools/oscsendfile.c &&
#cat src/tools/oscsendfile.c.bak >> src/tools/oscsendfile.c
wl-showstatus configure &&
# fix building DLLs
autoreconf -f -i -I $MINGWPREFIX/share/aclocal
#make test
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-ipv6 &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-ipv6 &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-ipv6 --enable-static --enable-shared &&
 wl-showstatus build-install &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



