export NAME="TermCap (is being phased out in favor of the terminfo-based ncurses library)"
export STATUS=
export URL=http://gnuwin32.sourceforge.net/packages/termcap.htm
export BASENAME=termcap
export DESCRIPTION='TermCap: terminal-capability library'
export CATEGORY=console
export TYPE=library
export VERSION=1.3.1
export VERSIONDATE=
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="http://ftp.gnu.org/gnu/termcap/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnu.org/gnu/termcap/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix termcap.c (version >= 1.3.1)
patch -ulbf termcap.c << EOF
@@ -128,3 +128,3 @@

-static char *tgetst1 ();
+static char *tgetst1 (char *ptr, char **area);

@@ -319,3 +319,3 @@
      int nlines;
-     register int (*outfun) ();
+     register int (*outfun) (char);
 {
@@ -391,6 +391,6 @@

-static int scan_file ();
-static char *gobble_line ();
-static int compare_contin ();
-static int name_match ();
+static int scan_file (char *str, int fd, register struct termcap_buffer *bufp);
+static char *gobble_line (int fd, register struct termcap_buffer *bufp, char *append_end);
+static int compare_contin (register char *str1, register char *str2);
+static int name_match (char *line, char *name);

EOF
# fix tparam.c (version >= 1.3.1)
patch -ulbf tparam.c << EOF
@@ -90,3 +90,3 @@

-static char *tparam1 ();
+static char *tparam1 (char *string, char *outstring, int len, char *up, char *left, register int *argp);

EOF
#cat > config.h << EOF
##include <unistd.h>
##include <fcntl.h>
##include <string.h>
##define STDC_HEADERS 1
##define HAVE_UNISTD_H 1
##define HAVE_FCNTL_H 1
##define HAVE_STRING_H 1
#EOF
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-install-termcap &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-install-termcap &&
 wl-showstatus build-install &&
 #make install &&
 #make install CFLAGS="$(if ${CC:-gcc} --help -v 2>/dev/null | grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" &&
 make install CFLAGS="-DSTDC_HEADERS $(if ${CC:-gcc} --help -v 2>/dev/null | grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" &&
 # manually install shared library
 mkdir -p $INSTALLPREFIX/bin &&
 #echo "EXPORTS" > termcap.def &&
 #sed -n -e "s/^.* \**\(t.\{1,8\}\) *(.*$/\1/p" termcap.h >> termcap.def &&
 #dlltool -D $INSTALLPREFIX/bin/termcap.dll -l $INSTALLPREFIX/lib/libtermcap.dll.a -d termcap.def $INSTALLPREFIX/lib/libtermcap.a && 
 #ranlib $INSTALLPREFIX/lib/libtermcap.dll.a &&
 #gcc -shared -s -mwindows -def termcap.def -o $INSTALLPREFIX/bin/termcap.dll $INSTALLPREFIX/lib/libtermcap.a &&
 ( echo "EXPORTS" && sed -n -e "s/^.* \**\(t.\{1,8\}\) *(.*$/\1/p" termcap.h ) > termcap.def &&
 ${CC:-gcc} -shared -s -mwindows -def termcap.def -o $INSTALLPREFIX/bin/termcap.dll $INSTALLPREFIX/lib/libtermcap.a -Wl,--out-implib,$INSTALLPREFIX/lib/libtermcap.dll.a &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION




