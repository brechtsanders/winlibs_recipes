#export NAME="libchamplain"
#export STATUS=
#export URL=http://projects.gnome.org/libchamplain/
#export BASENAME=libchamplain
#export DESCRIPTION="libchamplain is a C library providing a ClutterActor to display maps. It also provides a Gtk+ widget to display maps in Gtk+ applications."
#export CATEGORY=
#export TYPE=library
##export VERSION=0.8.0
##export VERSIONDATE=20101008
##export VERSION=0.8.1
##export VERSIONDATE=20110122
##export VERSION=0.8.2
##export VERSIONDATE=20110320
##export VERSION=0.8.3
##export VERSIONDATE=20110331
##export VERSION=0.9.0
##export VERSIONDATE=20110221
##export VERSION=0.9.1
##export VERSIONDATE=20110328
##export VERSION=0.10.0
##export VERSIONDATE=20110404
##export VERSION=0.10.1
##export VERSIONDATE=20110918
##export VERSION=0.11.0
##export VERSIONDATE=20110903
##export VERSION=0.12.0
##export VERSIONDATE=20110918
##export VERSION=0.12.1
##export VERSIONDATE=20120117
##export VERSION=0.12.2
##export VERSIONDATE=20120312
##export VERSION=0.12.3
##export VERSIONDATE=20120715
##export VERSION=0.12.4
##export VERSIONDATE=20130517
##export VERSION=0.12.5
##export VERSIONDATE=20130917
##export VERSION=0.12.6
##export VERSIONDATE=20140205
##export VERSION=0.12.7
##export VERSIONDATE=20140207
##export VERSION=0.12.8
##export VERSIONDATE=20140702
##export VERSION=0.12.9
##export VERSIONDATE=20140918
#####/include/clutter-1.0/clutter/clutter-paint-nodes.h:77: error: expected ')' before '*' token
##export VERSION=0.12.10
##export VERSIONDATE=20150318
##export VERSION=0.12.11
##export VERSIONDATE=20150919
##export VERSION=0.12.12
##export VERSIONDATE=20151203
##export VERSION=0.12.13
##export VERSIONDATE=20160226
##export VERSION=0.12.14
##export VERSIONDATE=20160907
##export VERSION=0.12.15
##export VERSIONDATE=20170308
#export VERSION=0.12.16
#export VERSIONDATE=20170907
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,cairo,sqlite3,gtk3,clutter,clutter-gtk,libmemphis
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/libchamplain/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix missing sys/socket.h
#mkdir -p sys
#echo "#include <winsock2.h>" > sys/socket.h
## fix error (version >= 0.12.1): /include/objidl.h:2477:5: error: expected identifier or '(' before string constant
#for F in champlain/*.c ; do
# mv $F $F.bak &&
# echo "#undef DATADIR" > $F &&
# cat $F.bak >> $F
#done &&
### fix error (version >= 0.12.2)
##mv champlain/champlain-enum-types.c.in champlain/champlain-enum-types.c.in.bak
##echo "#undef DATADIR" > champlain/champlain-enum-types.c.in
##cat champlain/champlain-enum-types.c.in.bak >> champlain/champlain-enum-types.c.in
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-Wl,-no-undefined" &&
# wl-showstatus build-install &&
# # fix champlain/Makefile (version 0.12.2)
# sed -i.orig "s/^\(GLIB_GENMARSHAL *= *\).*$/\1glib-genmarshal/; s/^\(GLIB_MKENUMS *= *\).*$/\1glib-mkenums/" champlain/Makefile &&
# ( make install-strip || (
#  # fix champlain/champlain-enum-types.c (version >= 0.12.2)
#  mv champlain/champlain-enum-types.c champlain/champlain-enum-types.c.bak &&
#  echo "#undef DATADIR" > champlain/champlain-enum-types.c &&
#  cat champlain/champlain-enum-types.c.bak >> champlain/champlain-enum-types.c
# ) ) &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="libchamplain"
export STATUS=
export URL=http://projects.gnome.org/libchamplain/
export BASENAME=libchamplain
export DESCRIPTION="libchamplain is a C library providing a ClutterActor to display maps. It also provides a Gtk+ widget to display maps in Gtk+ applications."
export CATEGORY=
export TYPE=library
#export VERSION=0.12.17
#export VERSIONDATE=20190221
#export VERSION=0.12.18
#export VERSIONDATE=20190221
#export VERSION=0.12.19
#export VERSIONDATE=20190304
export VERSION=0.12.20
export VERSIONDATE=20191029
wl-showstatus --package-version
export DEPENDENCIES=glib2,cairo,cogl,sqlite3,gtk3,gdk-pixbuf,clutter,clutter-gtk,libmemphis,libsoup-2.4
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/libchamplain/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -D memphis=true -D introspection=false -D vapi=true -D widgetry=true -D gtk_doc=false -D demos=false . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



