export NAME="KHelpCenter"
export STATUS=
export URL=https://userbase.kde.org/KHelpCenter
#export URL=https://github.com/KDE/khelpcenter
export BASENAME=khelpcenter
export DESCRIPTION="Software documentation viewer"
export CATEGORY=fileformat
export TYPE=application
#export VERSION=20.12.3
#export VERSIONDATE=20210311
#export VERSION=21.03.80
#export VERSIONDATE=20210321
#export VERSION=21.03.90
#export VERSIONDATE=20210410
#export VERSION=21.04.0
#export VERSIONDATE=20210423
#export VERSION=21.04.1
#export VERSIONDATE=20210514
#export VERSION=21.04.2
#export VERSIONDATE=20210610
#export VERSION=21.04.3
#export VERSIONDATE=20210708
#export VERSION=21.07.80
#export VERSIONDATE=20210717
#export VERSION=21.07.90
#export VERSIONDATE=20210730
#export VERSION=21.08.0
#export VERSIONDATE=20210812
#export VERSION=21.08.1
#export VERSIONDATE=20210902
#export VERSION=21.08.2
#export VERSIONDATE=20211008
#export VERSION=21.12.1
#export VERSIONDATE=20220122
#export VERSION=21.12.2
#export VERSIONDATE=20220203
#export VERSION=21.12.3
#export VERSIONDATE=20220303
#export VERSION=22.03.80
#export VERSIONDATE=20220319
#export VERSION=22.04.0
#export VERSIONDATE=20220421
#export VERSION=22.04.1
#export VERSIONDATE=20220512
#export VERSION=22.04.2
#export VERSIONDATE=20220609
#export VERSION=22.04.3
#export VERSIONDATE=20220707
#export VERSION=22.07.80
#export VERSIONDATE=20220718
#export VERSION=22.07.90
#export VERSIONDATE=20220805
#export VERSION=22.08.0
#export VERSIONDATE=20220819
#export VERSION=22.08.1
#export VERSIONDATE=20220908
#export VERSION=22.08.2
#export VERSIONDATE=20221014
#export VERSION=22.08.3
#export VERSIONDATE=20221103
#export VERSION=22.11.80
#export VERSIONDATE=20221112
#export VERSION=22.11.90
#export VERSIONDATE=20221126
#export VERSION=22.12.0
#export VERSIONDATE=20221208
#export VERSION=22.12.1
#export VERSIONDATE=20230106
#export VERSION=22.12.2
#export VERSIONDATE=20230202
#export VERSION=22.12.3
#export VERSIONDATE=20230302
#export VERSION=23.03.80
#export VERSIONDATE=20230317
#export VERSION=23.03.90
#export VERSIONDATE=20230413
#export VERSION=23.04.0
#export VERSIONDATE=20230420
#export VERSION=23.04.1
#export VERSIONDATE=20230511
#export VERSION=23.04.2
#export VERSIONDATE=20230608
#export VERSION=23.04.3
#export VERSIONDATE=20230706
#export VERSION=23.07.80
#export VERSIONDATE=20230724
#export VERSION=23.07.90
#export VERSIONDATE=20230812
#export VERSION=23.08.0
#export VERSIONDATE=20230824
#export VERSION=23.08.1
#export VERSIONDATE=20230915
#export VERSION=23.08.2
#export VERSIONDATE=20231012
#export VERSION=23.08.3
#export VERSIONDATE=20231109
#export VERSION=23.08.4
#export VERSIONDATE=20231208
export VERSION=23.08.5
export VERSIONDATE=20240215
wl-showstatus --package-version
export DEPENDENCIES=gettext,grantlee,xapian,qt,libkf5archive,libkf5bookmarks,libkf5config,libkf5coreaddons,libkf5dbusaddons,libkf5service,libkf5i18n,libkf5init,libkf5windowsystem,libkf5html,libkf5doctools
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,extra-cmake-modules
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/KDE/khelpcenter/releases"
export DOWNLOADURL="https://github.com/KDE/khelpcenter/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/KDE/khelpcenter/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/KDE/khelpcenter/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 #PKG_CONFIG= PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DKI18N_PYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DKI18N_PYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 sed -i.bak -e "s?bin\(/libxapian\)[^ ]*\(\.dll\.a\)?lib\1\2?" build_win/build.ninja &&
 wl-showstatus build-install &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_win install/strip &&
 XML_CATALOG_FILES=$MINGWPREFIX/bin/data/kf5/kdoctools/customization/catalog.xml PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DKI18N_PYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DKI18N_PYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: build both static and shared library
####TO DO: embed logo icon (based on logo.png?)
####PATH=$PATH:$MINGWPREFIX/qt/bin khelpcenter.exe



#export NAME="KHelpCenter"
#export STATUS=
#export URL=https://userbase.kde.org/KHelpCenter
##export URL=https://github.com/KDE/khelpcenter
#export BASENAME=khelpcenter
#export DESCRIPTION="Software documentation viewer"
#export CATEGORY=fileformat
#export TYPE=application
##export VERSION=24.01.75
##export VERSIONDATE=20231108
##export VERSION=24.01.80
##export VERSIONDATE=20231129
##export VERSION=24.01.85
##export VERSIONDATE=20231220
##export VERSION=24.01.90
##export VERSIONDATE=20240110
##export VERSION=24.01.95
##export VERSIONDATE=20240131
##export VERSION=24.02.0
##export VERSIONDATE=20240228
##export VERSION=24.02.1
##export VERSIONDATE=20240321
#export VERSION=24.02.2
#export VERSIONDATE=20240402
##export VERSION=24.04.80
##export VERSIONDATE=20240426
##export VERSION=24.04.90
##export VERSIONDATE=20240511
##export VERSION=24.05.0
##export VERSIONDATE=20240523
##export VERSION=24.05.1
##export VERSIONDATE=20240613
##export VERSION=24.05.2
##export VERSIONDATE=20240704
#####Failed to find required Qt component "WebEngineWidgets".
#wl-showstatus --package-version
#export DEPENDENCIES=gettext,grantlee,xapian,qt6,libkf6archive,libkf6bookmarks,libkf6config,libkf6coreaddons,libkf6dbusaddons,libkf6service,libkf6i18n,libkf6windowsystem,libkf6doctools
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja,extra-cmake-modules
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="https://github.com/KDE/khelpcenter/releases"
#export DOWNLOADURL="https://github.com/KDE/khelpcenter/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/KDE/khelpcenter/archive/v$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/KDE/khelpcenter/archive/refs/tags/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
#mkdir -p build_win &&
# wl-showstatus configure &&
# #PKG_CONFIG= PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DKI18N_PYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
# PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DKI18N_PYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_WITH_QT6:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
# sed -i.bak -e "s?bin\(/libxapian\)[^ ]*\(\.dll\.a\)?lib\1\2?" build_win/build.ninja &&
# wl-showstatus build-install &&
# #PATH=$PATH:$MINGWPREFIX/qt6/bin ninja -Cbuild_win install/strip &&
# XML_CATALOG_FILES=$MINGWPREFIX/bin/data/kf5/kdoctools/customization/catalog.xml PATH=$PATH:$MINGWPREFIX/qt6/bin ninja -Cbuild_win install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
##mkdir -p build_static build_shared &&
## wl-showstatus configure &&
## PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DKI18N_PYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
## wl-showstatus configure &&
## PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DKI18N_PYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
## wl-showstatus build-install &&
## PATH=$PATH:$MINGWPREFIX/qt6/bin ninja -Cbuild_static install/strip &&
## wl-showstatus build-install &&
## PATH=$PATH:$MINGWPREFIX/qt6/bin ninja -Cbuild_shared install/strip &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####TO DO: build both static and shared library
#####TO DO: embed logo icon (based on logo.png?)
#####PATH=$PATH:$MINGWPREFIX/qt6/bin khelpcenter.exe



