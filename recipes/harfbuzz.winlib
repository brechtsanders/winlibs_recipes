#export NAME="HarfBuzz"
#export STATUS=
##export URL=http://www.freedesktop.org/wiki/Software/HarfBuzz
#export URL=http://harfbuzz.org/
#export BASENAME=harfbuzz
#export DESCRIPTION="HarfBuzz is an OpenType text shaping engine."
#export CATEGORY=graphics
#export TYPE=library
##export VERSION=0.9.11
##export VERSIONDATE=20130112
##export VERSION=0.9.12
##export VERSIONDATE=20130119
##export VERSION=0.9.13
##export VERSIONDATE=20130226
##export VERSION=0.9.14
##export VERSIONDATE=20130322
#####configure.ac:16: error: possibly undefined macro: AM_PROG_AR
#####hb-common.cc:213:59: error: 'MemoryBarrier' was not declared in this scope
##export VERSION=0.9.15
##export VERSIONDATE=20130406
##export VERSION=0.9.16
##export VERSIONDATE=20130420
##export VERSION=0.9.17
##export VERSIONDATE=20130520
##export VERSION=0.9.18
##export VERSIONDATE=20130529
##export VERSION=0.9.19
##export VERSIONDATE=20130717
##export VERSION=0.9.20
##export VERSIONDATE=20130830
##export VERSION=0.9.21
##export VERSIONDATE=20130917
##export VERSION=0.9.22
##export VERSIONDATE=20131004
##export VERSION=0.9.23
##export VERSIONDATE=20131029
##export VERSION=0.9.24
##export VERSIONDATE=20131114
##export VERSION=0.9.25
##export VERSIONDATE=20131205
##export VERSION=0.9.26
##export VERSIONDATE=20140131
##export VERSION=0.9.27
##export VERSIONDATE=20140319
##export VERSION=0.9.28
##export VERSIONDATE=20140429
##export VERSION=0.9.29
##export VERSIONDATE=20140530
##export VERSION=0.9.30
##export VERSIONDATE=20140711
##export VERSION=0.9.31
##export VERSIONDATE=20140717
##export VERSION=0.9.32
##export VERSIONDATE=20140718
##export VERSION=0.9.33
##export VERSIONDATE=20140723
##export VERSION=0.9.34
##export VERSIONDATE=20140803
##export VERSION=0.9.35
##export VERSIONDATE=20140814
##export VERSION=0.9.36
##export VERSIONDATE=20141121
##export VERSION=0.9.37
##export VERSIONDATE=20141218
##export VERSION=0.9.38
##export VERSIONDATE=20150124
##export VERSION=0.9.39
##export VERSIONDATE=20150305
##export VERSION=0.9.40
##export VERSIONDATE=20150321
##export VERSION=0.9.41
##export VERSIONDATE=20150619
##export VERSION=0.9.42
##export VERSIONDATE=20150727
##export VERSION=1.0.0
##export VERSIONDATE=20150727
##export VERSION=1.0.1
##export VERSIONDATE=20150727
##export VERSION=1.0.2
##export VERSIONDATE=20150819
##export VERSION=1.0.3
##export VERSIONDATE=20150902
##export VERSION=1.0.4
##export VERSIONDATE=20151001
##export VERSION=1.0.5
##export VERSIONDATE=20151013
##export VERSION=1.0.6
##export VERSIONDATE=20151016
##export VERSION=1.1.0
##export VERSIONDATE=20151119
##export VERSION=1.1.1
##export VERSIONDATE=20151127
##export VERSION=1.1.2
##export VERSIONDATE=20151128
##export VERSION=1.1.3
##export VERSIONDATE=20160111
##export VERSION=1.2.0
##export VERSIONDATE=20160220
##export VERSION=1.2.1
##export VERSIONDATE=20160223
##export VERSION=1.2.2
##export VERSIONDATE=20160225
##export VERSION=1.2.3
##export VERSIONDATE=20160225
##export VERSION=1.2.4
##export VERSIONDATE=20160317
##export VERSION=1.2.5
##export VERSIONDATE=20160406
##export VERSION=1.2.6
##export VERSIONDATE=20160409
##export VERSION=1.2.7
##export VERSIONDATE=20160502
##export VERSION=1.3.0
##export VERSIONDATE=20160721
##export VERSION=1.3.1
##export VERSIONDATE=20160908
##export VERSION=1.3.2
##export VERSIONDATE=20160927
##export VERSION=1.3.3
##export VERSIONDATE=20161027
##export VERSION=1.3.4
##export VERSIONDATE=20161206
##export VERSION=1.4.0
##export VERSIONDATE=20170106
##export VERSION=1.4.1
##export VERSIONDATE=20170106
##export VERSION=1.4.2
##export VERSIONDATE=20170124
##export VERSION=1.4.3
##export VERSIONDATE=20170226
##export VERSION=1.4.4
##export VERSIONDATE=20170306
##export VERSION=1.4.5
##export VERSIONDATE=20170311
##export VERSION=1.4.6
##export VERSIONDATE=20170424
##export VERSION=1.4.7
##export VERSIONDATE=20170719
##export VERSION=1.4.8
##export VERSIONDATE=20170815
##export VERSION=1.5.0
##export VERSIONDATE=20170824
##export VERSION=1.5.1
##export VERSIONDATE=20170906
##export VERSION=1.6.0
##export VERSIONDATE=20171014
#####src/hb-atomic-private.hh:75:44: error: cannot convert 'volatile LONG* {aka volatile OT::IntType<int, 4u>*}' to 'volatile LONG* {aka volatile long int*}' for argument '1' to 'LONG InterlockedCompareExchange(volatile LONG*, LONG, LONG)'
##export VERSION=1.6.1
##export VERSIONDATE=20171023
##export VERSION=1.6.2
##export VERSIONDATE=20171024
##export VERSION=1.6.3
##export VERSIONDATE=20171027
##export VERSION=1.7.0
##export VERSIONDATE=20171114
##export VERSION=1.7.1
##export VERSIONDATE=20171115
##export VERSION=1.7.2
##export VERSIONDATE=20171205
##export VERSION=1.7.3
##export VERSIONDATE=20171219
##export VERSION=1.7.4
##export VERSIONDATE=20171221
##export VERSION=1.7.5
##export VERSIONDATE=20180131
#####include/stdlib.h:640:69: error: '_exit' was not declared in this scope
##export VERSION=1.7.6
##export VERSIONDATE=20180307
##export VERSION=1.7.7
##export VERSIONDATE=20180605
#####UnicodeDecodeError: 'utf8' codec can't decode byte 0xa9 in position 228: invalid start byte
##export VERSION=1.8.0
##export VERSIONDATE=20180606
##export VERSION=1.8.1
##export VERSIONDATE=20180613
##export VERSION=1.8.2
##export VERSIONDATE=20180703
##export VERSION=1.8.3
##export VERSIONDATE=20180712
##export VERSION=1.8.4
##export VERSIONDATE=20180717
##export VERSION=1.8.5
##export VERSIONDATE=20180802
##export VERSION=1.8.6
##export VERSIONDATE=20180808
##export VERSION=1.8.7
##export VERSIONDATE=20180809
##export VERSION=1.8.8
##export VERSIONDATE=20180815
##export VERSION=1.9.0
##export VERSIONDATE=20180910
##export VERSION=2.0.0
##export VERSIONDATE=20181019
##export VERSION=2.0.1
##export VERSIONDATE=20181020
##export VERSION=2.0.2
##export VERSIONDATE=20181021
##export VERSION=2.1.0
##export VERSIONDATE=20181031
##export VERSION=2.1.1
##export VERSIONDATE=20181106
##export VERSION=2.1.3
##export VERSIONDATE=20181117
##export VERSION=2.2.0
##export VERSIONDATE=20181130
##export VERSION=2.3.0
##export VERSIONDATE=20181221
##export VERSION=2.3.1
##export VERSIONDATE=20190131
##export VERSION=2.4.0
##export VERSIONDATE=20190329
##export VERSION=2.5.0
##export VERSIONDATE=20190525
##export VERSION=2.5.1
##export VERSIONDATE=20190601
##export VERSION=2.5.2
##export VERSIONDATE=20190621
##export VERSION=2.5.3
##export VERSIONDATE=20190627
##export VERSION=2.6.0
##export VERSIONDATE=20190814
##export VERSION=2.6.1
##export VERSIONDATE=20190823
##export VERSION=2.6.2
##export VERSIONDATE=20191001
##export VERSION=2.6.3
##export VERSIONDATE=20191029
##export VERSION=2.6.4
##export VERSIONDATE=20191030
##export VERSION=2.6.7
##export VERSIONDATE=20200606
#export VERSION=2.6.8
#export VERSIONDATE=20200624
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,cairo,freetype2,icu,gettext
##export DEPENDENCIES=glib2,cairo,freetype2,icu,gettext,gobject-introspection
#export OPTIONALDEPENDENCIES=graphite2
##export BUILDDEPENDENCIES=
##export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE="Old MIT"
##export DOWNLOADURL="http://www.freedesktop.org/software/harfbuzz/release/"
#export DOWNLOADURL="https://github.com/harfbuzz/harfbuzz/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://www.freedesktop.org/software/harfbuzz/release/$BASENAME-$VERSION.tar.bz2
##export DOWNLOADSOURCEURL=https://www.freedesktop.org/software/harfbuzz/release/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/harfbuzz/harfbuzz/releases/download/$VERSION/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2 --no-same-owner --no-same-permissions
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
### fix src/hb-graphite2.cc for static linking
##mv src/hb-graphite2.cc src/hb-graphite2.cc.bak
##cat > src/hb-graphite2.cc << EOF
###ifndef DLL_EXPORT
###define GRAPHITE2_STATIC
###endif
##EOF
##cat src/hb-graphite2.cc.bak >> src/hb-graphite2.cc
## fix missing MemoryBarrier in src/hb-atomic-private.hh for 32-bit (version >= 0.9.14)
#if ( echo $RUNPLATFORM | grep -qv x86_64 ); then
#mv src/hb-atomic-private.hh src/hb-atomic-private.hh.bak
##cat > src/hb-atomic-private.hh << EOF
###ifdef __GNUC__
###define MemoryBarrier __sync_synchronize
###endif
##EOF
#cat > src/hb-atomic-private.hh << EOF
##ifndef __MINGW64__
##include <windows.h>
##undef MemoryBarrier
##define MemoryBarrier __sync_synchronize
##endif
#EOF
#cat src/hb-atomic-private.hh.bak >> src/hb-atomic-private.hh
#fi
### fix src/hb-uniscribe.cc for 64-bit (version >= 0.9.25 <= 0.9.34)
##patch -ulbf src/hb-uniscribe.cc << EOF
##--- src/hb-uniscribe.cc  2013-11-20 20:18:32 +0100
##+++ src/hb-uniscribe.cc  2013-12-06 10:15:24 +0100
##@@ -711,3 +711,3 @@
##       range_record_t *range = &range_records[i];
##-      range->props.potfRecords = feature_records.array + reinterpret_cast<unsigned int> (range->props.potfRecords);
##+      range->props.potfRecords = feature_records.array + reinterpret_cast<uintptr_t> (range->props.potfRecords);
##     }
##EOF
## fix missing E_NOT_SUFFICIENT_BUFFER in src/hb-uniscribe.cc (version >= 1.1.3)
#mv src/hb-uniscribe.cc src/hb-uniscribe.cc.bak
#cat > src/hb-uniscribe.cc << EOF
##include <winerror.h>
##ifndef E_NOT_SUFFICIENT_BUFFER
##define E_NOT_SUFFICIENT_BUFFER E_OUTOFMEMORY
##endif
#EOF
#cat src/hb-uniscribe.cc.bak >> src/hb-uniscribe.cc
## fix missing standard functions (version >= 1.6.1)
#####/include/stdlib.h:640:69: error: '_exit' was not declared in this scope
#if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then 
# for F in src/*.cc; do
#  mv $F $F.bak &&
#  echo "#undef __STRICT_ANSI__" > $F &&
#  cat $F.bak >> $F
# done
#fi
#### skip making test/api (version <= 0.9.13)
###cat > test/api/Makefile.am << EOF
###clean:
###all:
###install:
###install-strip:
###EOF
#### reconfigure (version <= 0.9.13)
###autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#### remove dependancy on dynamic libstdc++ (GCC 4)
###mv libtool libtool.bak &&
###sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
##wl-showstatus configure &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static --enable-shared ICU_LIBS="-Wl,--as-needed -licuuc -licudt" ICU_LE_LIBS="-Wl,--as-needed -licule -licuuc -licudt" &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --disable-shared ICU_LIBS="-Wl,--as-needed -licuuc -licudt" ICU_LE_LIBS="-Wl,--as-needed -licule -licuuc -licudt" CFLAGS"-DGRAPHITE2_STATIC" CXXFLAGS"-DGRAPHITE2_STATIC" LDFLAGS="-Wl,--enable-auto-import" &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared ICU_LIBS="-Wl,--as-needed -licuuc -licudt" ICU_LE_LIBS="-Wl,--as-needed -licule -licuuc -licudt" &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared FREETYPE_CFLAGS="-I$MINGWPREFIX/include/freetype2 -I$MINGWPREFIX/include/freetype2/freetype" &&
##PKG_CONFIG= ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-gobject=yes --with-graphite2=auto --with-freetype=auto --with-uniscribe=auto FREETYPE_CFLAGS="-I$MINGWPREFIX/include/freetype2 -I$MINGWPREFIX/include/freetype2/freetype" &&
## wl-showstatus build-install &&
## # fix building DLLs
## mv libtool libtool.bak &&
## sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
## #echo "#undef HAVE_GRAPHITE2" >> config.h &&
## ## fix missing strdup
## ( make -j1 -Csrc libharfbuzz_la-hb-common.lo || (
##  mv src/Makefile src/Makefile.bak &&
##  sed -e "s/--std=c++0x//" src/Makefile.bak > src/Makefile
## )) &&
## ( make -j1 -Cutil hb-view.o  || (
##  mv util/Makefile util/Makefile.bak &&
##  sed -e "s/--std=c++0x//" util/Makefile.bak > util/Makefile
## ) ) &&
## PATH=$PYDIR:$PATH make -Csrc harfbuzz.def &&
## #make install-strip &&
## PATH=$PYDIR:$PATH make install-strip &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
## manually generate .pc files
#for F in src/*.pc.in; do
# sed -e "s?%prefix%?$INSTALLPREFIX?; s?%exec_prefix%?\$\{prefix\}?; s?%libdir%?\$\{prefix\}/lib?; s?%includedir%?\$\{prefix\}/include?; s?%VERSION%?$VERSION?; s?^.*\.private:?#&?" $F > $(basename $F|sed -e "s/\.in$//")
#done
### fix src/hb.hh (version >= 2.6.7)
##patch -ulbf src/hb.hh << EOF
##@@ -165,3 +165,3 @@
##
##-#if defined (_MSC_VER) && defined (HB_DLL_EXPORT)
##+#if defined(_WIN32) && (defined(HB_DLL_EXPORT) || defined(harfbuzz_EXPORTS) || defined(harfbuzz_gobject_EXPORTS) || defined(harfbuzz_icu_EXPORTS) || defined(harfbuzz_subset_EXPORTS))
## #define HB_EXTERN __declspec (dllexport) extern
##EOF
## fix MSVC issue
#mkdir -p winfix
#cp -rf $PYDIR/lib/distutils winfix/
#patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
#@@ -85,3 +85,3 @@
#         else:
#-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
#+            return None
#
#EOF
## fix CMakeLists.txt (version >= 2.6.7)
#patch -ulbf CMakeLists.txt << EOF
#@@ -515,3 +515,3 @@
#
#-if (BUILD_SHARED_LIBS AND WIN32 AND NOT MINGW)
#+if (BUILD_SHARED_LIBS AND WIN32)
#   add_definitions("-DHB_DLL_EXPORT")
#EOF
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DHB_HAVE_FREETYPE:BOOL=ON -DHB_HAVE_DIRECTWRITE:BOOL=ON -DHB_HAVE_GDI:BOOL=ON -DHB_HAVE_UNISCRIBE:BOOL=ON -DHB_HAVE_GRAPHITE2:BOOL=ON -DHB_HAVE_ICU:BOOL=ON -DHB_HAVE_GLIB:BOOL=ON -DHB_HAVE_GOBJECT:BOOL=ON -DHB_HAVE_INTROSPECTION:BOOL=OFF -DHB_BUILD_SUBSET:BOOL=ON -DHB_BUILD_UTILS:BOOL=ON -DHB_BUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
# #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DHB_HAVE_FREETYPE:BOOL=ON -DHB_HAVE_DIRECTWRITE:BOOL=ON -DHB_HAVE_GDI:BOOL=ON -DHB_HAVE_UNISCRIBE:BOOL=ON -DHB_HAVE_GRAPHITE2:BOOL=ON -DHB_HAVE_ICU:BOOL=ON -DHB_HAVE_GLIB:BOOL=ON -DHB_HAVE_GOBJECT:BOOL=ON -DHB_HAVE_INTROSPECTION:BOOL=ON -DHB_BUILD_SUBSET:BOOL=ON -DHB_BUILD_UTILS:BOOL=ON -DHB_BUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_C_FLAGS="-I$MINGWPREFIX/include/freetype2" -DCMAKE_CXX_FLAGS="-I$MINGWPREFIX/include/freetype2" -S. -Bbuild_static &&
# wl-showstatus configure &&
# PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DHB_HAVE_FREETYPE:BOOL=ON -DHB_HAVE_DIRECTWRITE:BOOL=ON -DHB_HAVE_GDI:BOOL=ON -DHB_HAVE_UNISCRIBE:BOOL=ON -DHB_HAVE_GRAPHITE2:BOOL=ON -DHB_HAVE_ICU:BOOL=ON -DHB_HAVE_GLIB:BOOL=ON -DHB_HAVE_GOBJECT:BOOL=ON -DHB_HAVE_INTROSPECTION:BOOL=OFF -DHB_BUILD_UTILS:BOOL=ON -DHB_BUILD_SUBSET:BOOL=ON -DHB_BUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
# #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DHB_HAVE_FREETYPE:BOOL=ON -DHB_HAVE_DIRECTWRITE:BOOL=ON -DHB_HAVE_GDI:BOOL=ON -DHB_HAVE_UNISCRIBE:BOOL=ON -DHB_HAVE_GRAPHITE2:BOOL=ON -DHB_HAVE_ICU:BOOL=ON -DHB_HAVE_GLIB:BOOL=ON -DHB_HAVE_GOBJECT:BOOL=ON -DHB_HAVE_INTROSPECTION:BOOL=ON -DHB_BUILD_UTILS:BOOL=ON -DHB_BUILD_SUBSET:BOOL=ON -DHB_BUILD_TESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DCMAKE_C_FLAGS="-I$MINGWPREFIX/include/freetype2 -Wno-error=attributes" -DCMAKE_CXX_FLAGS="-I$MINGWPREFIX/include/freetype2 -Wno-error=attributes" -S. -Bbuild_shared &&
# # fix execution of Python scripts
# sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# #PKG_CONFIG= PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
# #PKG_CONFIG= PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} C_INCLUDE_PATH=$MINGWPREFIX/include/freetype2${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} ninja -Cbuild_shared install/strip &&
# # manually install .pc files
# mkdir -p $INSTALLPREFIX/lib/pkgconfig &&
# cp -u *.pc $INSTALLPREFIX/lib/pkgconfig/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



## fix DLL import
#sed -i.bak2 -e "s/-DHB_EXTERN= /-DHB_DLL_IMPORT /" build_shared/build.ninja
## fix DLL export in src/hb.hh
#mv src/hb.hh src/hb.hh.bak
#cat > src/hb.hh << EOF
##ifdef __MINGW32__
##undef HB_EXTERN
##ifdef HB_DLL_EXPORT
##define HB_EXTERN __declspec (dllexport)
##else
##define HB_EXTERN __declspec (dllimport)
##endif
##endif
#EOF
#cat src/hb.hh.bak >> src/hb.hh
## fix DLL export in src/hb-common.h
#mv src/hb-common.h src/hb-common.h.bak
#cat > src/hb-common.h << EOF
##ifdef __MINGW32__
##undef HB_EXTERN
##ifdef HB_DLL_EXPORT
##define HB_EXTERN __declspec (dllexport)
##else
##define HB_EXTERN __declspec (dllimport)
##endif
##endif
#EOF
#cat src/hb-common.h.bak >> src/hb-common.h
## fix missing HB_BEGIN_DECLS in src/hb-aat-layout.h
#mv src/hb-aat-layout.h src/hb-aat-layout.h.bak &&
#echo "#include <hb-common.h>" > src/hb-aat-layout.h &&
#cat src/hb-aat-layout.h.bak >> src/hb-aat-layout.h



export NAME="HarfBuzz"
export STATUS=
#export URL=http://www.freedesktop.org/wiki/Software/HarfBuzz
export URL=http://harfbuzz.org/
export BASENAME=harfbuzz
export DESCRIPTION="HarfBuzz is an OpenType text shaping engine."
export CATEGORY=graphics
export TYPE=library
#export VERSION=2.6.7
#export VERSIONDATE=20200624
#export VERSION=2.6.8
#export VERSIONDATE=20200624
#export VERSION=2.7.0
#export VERSIONDATE=20200726
#export VERSION=2.7.1
#export VERSIONDATE=20200814
#export VERSION=2.7.2
#export VERSIONDATE=20200829
#export VERSION=2.7.3
#export VERSIONDATE=20201224
#export VERSION=2.7.4
#export VERSIONDATE=20201227
#export VERSION=2.8.0
#export VERSIONDATE=20210317
#export VERSION=2.8.1
#export VERSIONDATE=20210504
#export VERSION=2.8.2
#export VERSIONDATE=20210709
#export VERSION=2.9.0
#export VERSIONDATE=20210818
#export VERSION=2.9.1
#export VERSIONDATE=20210907
#export VERSION=3.0.0
#export VERSIONDATE=20210918
#export VERSION=3.1.0
#export VERSIONDATE=20211104
#export VERSION=3.1.1
#export VERSIONDATE=20211108
#export VERSION=3.1.2
#export VERSIONDATE=20211127
#export VERSION=3.2.0
#export VERSIONDATE=20211212
#export VERSION=3.3.1
#export VERSIONDATE=20220201
#export VERSION=3.3.2
#export VERSIONDATE=20220206
#export VERSION=3.4.0
#export VERSIONDATE=20220213
#export VERSION=4.0.0
#export VERSIONDATE=20220302
#export VERSION=4.0.1
#export VERSIONDATE=20220312
#export VERSION=4.1.0
#export VERSIONDATE=20220323
#export VERSION=4.2.0
#export VERSIONDATE=20220331
#export VERSION=4.2.1
#export VERSIONDATE=20220424
#export VERSION=4.3.0
#export VERSIONDATE=20220521
#export VERSION=4.4.0
#export VERSIONDATE=20220628
#export VERSION=4.4.1
#export VERSIONDATE=20220629
#export VERSION=5.0.1
#export VERSIONDATE=20220724
#export VERSION=5.1.0
#export VERSIONDATE=20220801
#export VERSION=5.2.0
#export VERSIONDATE=20220917
#export VERSION=5.3.0
#export VERSIONDATE=20221009
#export VERSION=5.3.1
#export VERSIONDATE=20221020
#export VERSION=6.0.0
#export VERSIONDATE=20221217
#export VERSION=7.0.0
#export VERSIONDATE=20230212
#export VERSION=7.0.1
#export VERSIONDATE=20230220
#export VERSION=7.1.0
#export VERSIONDATE=20230303
#export VERSION=7.2.0
#export VERSIONDATE=20230427
export VERSION=7.3.0
export VERSIONDATE=20230510
#### Bug reported: https://github.com/harfbuzz/harfbuzz/issues/3776
wl-showstatus --package-version
#export DEPENDENCIES=glib2,cairo,freetype2,icu,graphite2,gettext
export DEPENDENCIES=glib2,cairo,freetype2,icu,graphite2,gettext,gobject-introspection
export OPTIONALDEPENDENCIES=chafa
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="Old MIT"
#export DOWNLOADURL="http://www.freedesktop.org/software/harfbuzz/release/"
export DOWNLOADURL="https://github.com/harfbuzz/harfbuzz/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://www.freedesktop.org/software/harfbuzz/release/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/harfbuzz/harfbuzz/releases/download/$VERSION/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://github.com/harfbuzz/harfbuzz/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2 --no-same-owner --no-same-permissions
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix missing HB_BEGIN_DECLS in src/hb-aat-layout.h (version >= 2.6.7)
#patch -ulbf src/hb-aat-layout.h << EOF
#@@ -34,4 +34,15 @@
# #include "hb-ot.h"
#+#include "hb-common.h"
#+#include "hb-face.h"
#+#include "hb-ot-name.h"
#+#include "hb-set.h"
#+#include "hb-buffer.h"
#+#include "hb-shape-plan.h"
#
#+#ifdef HB_BEGIN_DECLS
# HB_BEGIN_DECLS
#+#endif
#+#ifndef HB_EXTERN
#+#define HB_EXTERN
#+#endif
#
#@@ -483,3 +494,5 @@
#
#+#ifdef HB_END_DECLS
# HB_END_DECLS
#+#endif
#
#EOF
# work around build issue in util/hb-info.cc (version >= 7.0.0)
patch -ulbf util/hb-info.cc << EOF
@@ -1254,3 +1254,3 @@
                             //
-    gchar **environ = g_get_environ ();
+    gchar **environ = (char***)g_get_environ ();
     ChafaTermInfo *term_info = chafa_term_db_detect (chafa_term_db_get_default (),
EOF
# fix src/gen-harfbuzzcc.py (version = 5.1.0)
####OSError: [WinError 1] Incorrect function: '..\\src\\hb-aat-layout.cc'
patch -ulbf src/gen-harfbuzzcc.py << EOF
@@ -4,6 +4,3 @@

-import shutil
-import sys
-
-from pathlib import Path
+import os, sys, shutil

@@ -12,14 +9,16 @@

-OUTPUT = Path (sys.argv[1])
-CURRENT_SOURCE_DIR = Path (sys.argv[2])
+OUTPUT = sys.argv[1]
+CURRENT_SOURCE_DIR = sys.argv[2]

 # make sure input files are unique
-sources = [Path(x) for x in sorted(set(sys.argv[3:]))]
+sources = sorted(set(sys.argv[3:]))

 with open (OUTPUT, "wb") as f:
-       f.write ("".join ('#include "{}"\\n'.format (p.resolve ().relative_to (CURRENT_SOURCE_DIR)) for p in sources if p.suffix == ".cc").encode ())
+       f.write ("".join ('#include "{}"\\n'.format (os.path.relpath (os.path.abspath (x), CURRENT_SOURCE_DIR)) for x in sources if x.endswith (".cc")).encode ())

 # copy it also to the source tree, but only if it has changed
-baseline = CURRENT_SOURCE_DIR / OUTPUT.name
-if baseline.read_bytes() != OUTPUT.read_bytes():
-       shutil.copyfile (OUTPUT, baseline)
+baseline_filename = os.path.join (CURRENT_SOURCE_DIR, os.path.basename (OUTPUT))
+with open(baseline_filename, "rb") as baseline:
+       with open(OUTPUT, "rb") as generated:
+               if baseline.read() != generated.read():
+                       shutil.copyfile (OUTPUT, baseline_filename)
EOF
# fix MSVC issue
mkdir -p winfix
cp -rf $PYDIR/lib/distutils winfix/
patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
@@ -85,3 +85,3 @@
         else:
-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
+            return None

EOF
# fix util/hb-info.cc (version >= 7.1.0)
patch -ulbf util/hb-info.cc << EOF
@@ -1254,3 +1254,4 @@
                             //
-    gchar **environ = (char***)g_get_environ ();
+#undef environ
+    gchar **environ = g_get_environ ();
     ChafaTermInfo *term_info = chafa_term_db_detect (chafa_term_db_get_default (),
EOF
#sed -i.bak -e "s/ -lm / /" src/harfbuzz.pc.in
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dglib=enabled -Dgobject=enabled -Dintrospection=disabled -Dcairo=enabled -Dgraphite=enabled -Dfreetype=enabled -Dfontconfig=enabled -Dicu=enabled -Dgdi=enabled -Dgtk_doc=disabled -Dtests=disabled . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dglib=enabled -Dgobject=enabled -Dintrospection=enabled -Dcairo=enabled -Dgraphite=enabled -Dfreetype=enabled -Dfontconfig=enabled -Dicu=enabled -Dgdi=enabled -Dgtk_doc=disabled -Dtests=disabled . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dglib=enabled -Dgobject=enabled -Dintrospection=enabled -Dcairo=enabled -Dgraphite=enabled -Dfreetype=enabled -Dicu=enabled -Dgdi=enabled -Ddocs=disabled -Dtests=disabled . build_both &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dglib=enabled -Dgobject=enabled -Dintrospection=enabled -Dcairo=enabled -Dgraphite=enabled -Dfreetype=enabled -Dicu=enabled -Dgdi=enabled -Ddocs=disabled -Dtests=disabled . build_both &&
 #sed -i.bak -e "s/[^ ]*\/libm\.a//; s/ -lm / /g; s/ \"-lm\" / /g" build_both/build.ninja &&
 #sed -i.bak -e "s?[^ ]*/libm\.a??g; s?\"-lm\"??g; s? -lm ? ?g" build_both/build.ninja &&
 #sed -i.bak -e "s/ \"-lm\",//" build_both/meson-info/intro-targets.json &&
 ## fix Python path issues in meson_exe
 #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 wl-showstatus build-install &&
 #PKG_CONFIG= PATH=$PYDIR:$PATH PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 #PATH=$PYDIR:$PATH PYTHONPATH=$PWD/winfix${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
 PATH=$PYDIR:$PATH PYTHONPATH=$PWD/winfix${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib:$MINGWPREFIX/lib/gobject-introspection ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



