export NAME="CryptoMiniSat"
export STATUS=
export URL=https://www.msoos.org/
#export URL=https://github.com/msoos/cryptominisat
export BASENAME=cryptominisat
export DESCRIPTION="Advanced incremental SAT solver"
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=5.8.0
#export VERSIONDATE=20210324
#export VERSION=5.11.2
#export VERSIONDATE=20220927
####src/picosat/picosat.c:8149:10: fatal error: sys/resource.h: No such file or directory
#export VERSION=5.11.4
#export VERSIONDATE=20221104
#export VERSION=5.11.11
#export VERSIONDATE=20230626
#export VERSION=5.11.12
#export VERSIONDATE=20230812
#export VERSION=5.11.14
#export VERSIONDATE=20230924
#export VERSION=5.11.15
#export VERSIONDATE=20231012
export VERSION=5.11.21
export VERSIONDATE=20240209
export DEPENDENCIES=zlib,sqlite3,boost
#export DEPENDENCIES=zlib,sqlite3,boost,m4ri
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
#export VERSION=5.11.22
#export VERSIONDATE=20240714
#export VERSION=5.12.1
#export VERSIONDATE=20250211
#wl-showstatus --package-version
#export DEPENDENCIES=zlib,sqlite3,boost,cadiback
##export DEPENDENCIES=zlib,sqlite3,boost,cadiback,m4ri
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=MIT/GPL
export DOWNLOADURL="https://github.com/msoos/cryptominisat/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/msoos/cryptominisat/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
patch -ulbf src/packedmatrix.h << EOF
@@ -64,3 +64,3 @@
             size_t size = sizeof(int64_t) * num_rows*(num_cols+1);
-            #ifdef _MSC_VER
+            #ifdef _WIN32
             _aligned_free((void*)mp);
@@ -87,3 +87,3 @@
             size_t size = sizeof(int64_t) * b.numRows*(b.numCols+1);
-            #ifdef _MSC_VER
+            #ifdef _WIN32
             _aligned_free((void*)mp);
EOF
# fix undefined struct rusage in src/picosat/picosat.c (version >= 5.11.15)
patch -ulbf src/picosat/picosat.c << EOF
@@ -8156,7 +8156,6 @@
 {
-  double res = -1;
-  struct rusage u;
-  res = 0;
+  double res = 0;
 #if defined (_MSC_VER) || defined (__MINGW32__) || defined(_WIN32) || defined(EMSCRIPTEN)
 #else
+  struct rusage u;
   if (!getrusage (RUSAGE_SELF, &u))
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DEXTFEAT:BOOL=OFF -DENABLE_ASSERTIONS:BOOL=OFF -DNOM4RI:BOOL=ON -DENABLE_PYTHON_INTERFACE:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DENABLE_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DEXTFEAT:BOOL=OFF -DENABLE_ASSERTIONS:BOOL=OFF -DNOM4RI:BOOL=ON -DENABLE_PYTHON_INTERFACE:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DENABLE_TESTING:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DNGETRUSAGE" -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DEXTFEAT:BOOL=OFF -DENABLE_ASSERTIONS:BOOL=OFF -DNOM4RI:BOOL=ON -DENABLE_PYTHON_INTERFACE:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DENABLE_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DEXTFEAT:BOOL=OFF -DENABLE_ASSERTIONS:BOOL=OFF -DNOM4RI:BOOL=ON -DENABLE_PYTHON_INTERFACE:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DENABLE_TESTING:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DNGETRUSAGE" -DCMAKE_CXX_FLAGS:STRING="-fpermissive" -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: build against m4ri



