export NAME="FNV"
export STATUS=
export URL=http://www.isthe.com/chongo/tech/comp/fnv/
export BASENAME=fnv
export DESCRIPTION="FNV hash algorithm (reference source)"
export CATEGORY=security
export TYPE=library
export VERSION=5.0.3
export VERSIONDATE=20170616
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="http://www.isthe.com/chongo/tech/comp/fnv/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://www.isthe.com/chongo/src/fnv/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION
# fix undefined u_int32_t/u_int64_t in fnv.h
mv fnv.h fnv.h.bak &&
echo "#include <stdint.h>" > fnv.h &&
sed -e "s/u_\(int[0-9]*_t\)/u\1/g; s/const fnv1_64_init/const Fnv64_t fnv1_64_init/" fnv.h.bak >> fnv.h
wl-showstatus build &&
 #make CC=${CC:-gcc} &&
 make CC=${CC:-gcc} CFLAGS="-O3 $(if ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" &&
 strip *.exe &&
 echo "EXPORTS" > libfnv.def &&
 sed -ne "s/^\s*extern.*\s\([^ ()[]*\)\(\[\]\)*;$/\1 DATA/p; s/^\s*extern.* \([^ ()]*\)(.*$/\1/p" fnv.h | grep -v "init\b" >> libfnv.def &&
 ${CC:-gcc} -shared -s -mwindows -def libfnv.def -o libfnv.dll libfnv.a -Wl,--out-implib,libfnv.dll.a &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f *.h $INSTALLPREFIX/include/ &&
 cp -f *.a $INSTALLPREFIX/lib/ &&
 cp -f *.dll *.exe $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



