export NAME="pcaudiolib"
export STATUS=
export URL=https://github.com/rhdunn/pcaudiolib
export BASENAME=pcaudiolib
export DESCRIPTION="Portable C Audio Library"
export CATEGORY=audio
export TYPE=library
#export VERSION=1.0
#export VERSIONDATE=20170612
export VERSION=1.1
export VERSIONDATE=20180227
wl-showstatus --package-version
export DEPENDENCIES=pulseaudio
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/rhdunn/pcaudiolib/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/rhdunn/pcaudiolib/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix already defined self in xaudio2.cpp and use C instead of C++
sed -e "s/self/myself/g" src/xaudio2.cpp > src/xaudio2.c
# fix pointer error in src/windows.c
patch -ulbf src/windows.c << EOF
@@ -86,3 +86,3 @@
        DWORD result = FormatMessageA(FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,
-               NULL, error, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), &msg, 256, NULL);
+               NULL, error, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), msg, 256, NULL);
        if (!result)
EOF
# fix missing create_xaudio2_object in src/audio.c
patch -ulbf src/audio.c << EOF
@@ -89,3 +89,3 @@
        struct audio_object *object;
-#if defined(_WIN32) || defined(_WIN64)
+#if (defined(_WIN32) || defined(_WIN64)) && !defined(__MINGW32__)
        if ((object = create_xaudio2_object(device, application_name, description)) != NULL)
EOF
## fix building for Windows
#mv Makefile.am Makefile.am.bak &&
##sed -e "s?src_libpcaudio_la_SOURCES =?& src/xaudio2.c src/windows.c?" Makefile.am.bak > Makefile.am
#sed -e "s?src_libpcaudio_la_SOURCES =?& src/windows.c?" Makefile.am.bak > Makefile.am
# fix missing files
mv CHANGELOG.md CHANGELOG.md.bak
touch NEWS README ChangeLog.md
wl-showstatus configure &&
 mkdir -p m4 &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lole32" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-Wno-int-conversion" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="$(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wint-conversion" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=int-conversion"; fi) $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



