export NAME="libheif"
export STATUS=
export URL=https://github.com/strukturag/libheif
export BASENAME=libheif
export DESCRIPTION="libheif is an ISO/IEC 23008-12:2017 HEIF and AVIF (AV1 Image File Format) file format decoder and encoder."
export CATEGORY=video,fileformat
export TYPE=library
#export VERSION=1.11.0
#export VERSIONDATE=20210307
#export VERSION=1.12.0
#export VERSIONDATE=20210505
#export VERSION=1.13.0
#export VERSIONDATE=20220902
#export VERSION=1.14.0
#export VERSIONDATE=20221116
#export VERSION=1.14.1
#export VERSIONDATE=20230103
#export VERSION=1.14.2
#export VERSIONDATE=20230107
#export VERSION=1.15.1
#export VERSIONDATE=20230217
#export VERSION=1.15.2
#export VERSIONDATE=20230331
#export VERSION=1.16.1
#export VERSIONDATE=20230503
#export VERSION=1.16.2
#export VERSIONDATE=20230523
#export VERSION=1.17.0
#export VERSIONDATE=20231016
#export VERSION=1.17.1
#export VERSIONDATE=20231019
export VERSION=1.17.3
export VERSIONDATE=20231103
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/strukturag/libheif/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/strukturag/libheif/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix libheif/plugins_windows.cc (version >= 1.15.1)
#### Bug reported: https://github.com/strukturag/libheif/pull/786
patch -ulbf libheif/plugins_windows.cc << EOF
@@ -64,4 +64,2 @@

-  int nPlugins = 0;
-
   if ((hFind = FindFirstFile(findPattern.c_str(), &FindFileData)) != INVALID_HANDLE_VALUE) {
EOF
## avoid obsolete Doxygen flags (version >= 1.17.3)
#sed -i.bak -e "s/^\(OUTPUT_TEXT_DIRECTION\|CLANG_ASSISTED_PARSING\)/#&/" libheif/Doxyfile.in
# avoid Doxygen because of obsolete flags (version >= 1.17.3)
sed -i.bak -e "s/find_package(Doxygen)/set(DOXYGEN_FOUND FALSE)/" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DWITH_EXAMPLES:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-D_WIN32_WINNT=0x0600 $(if ${CC:-gcc} --version|grep -q clang; then echo "-femulated-tls"; fi)" -S. -Bbuild_static &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -pthread/" build_static/build.ninja &&
 #doxygen -u build_static/Doxyfile &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DWITH_EXAMPLES:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-D_WIN32_WINNT=0x0600 $(if ${CC:-gcc} --version|grep -q clang; then echo "-femulated-tls"; fi)" -S. -Bbuild_shared &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -pthread/" build_shared/build.ninja &&
 #doxygen -u build_shared/Doxyfile &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



