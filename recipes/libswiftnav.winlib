export NAME="libswiftnav"
export STATUS=
export URL=https://github.com/swift-nav/libswiftnav
export BASENAME=libswiftnav
export DESCRIPTION="Libswiftnav is a platform independent library that implements GNSS functions and algorithms for use by software-defined GNSS receivers or software requiring GNNS functionality. It is intended to be as portable as possible and is written in standards compliant C with no dependancies other than the standard C libraries."
export CATEGORY=communication
export TYPE=library
#export VERSION=0.21
#export VERSIONDATE=20180703
#export VERSION=0.1.0
#export VERSIONDATE=20180831
#export VERSION=0.1.1
#export VERSIONDATE=20180901
#export VERSION=0.1.2
#export VERSIONDATE=20180912
#export VERSION=0.1.3
#export VERSIONDATE=20181019
#export VERSION=0.1.4
#export VERSIONDATE=20181114
#export VERSION=0.1.5
#export VERSIONDATE=20190226
#export VERSION=0.1.6
#export VERSIONDATE=20190402
#export VERSION=0.1.7
#export VERSIONDATE=20190604
##export DEPENDENCIES=lapack
#export DEPENDENCIES=openblas
#export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=cmake,imagemagick
##export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja,imagemagick
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=0.1.8
#export VERSIONDATE=20190702
export VERSION=2.4.2
export VERSIONDATE=20200307
####CMake Error at CMakeLists.txt:10 (include): include could not find load file: CCache
####CMake Error at CMakeLists.txt:11 (include): include could not find load file: SwiftCmakeOptions
wl-showstatus --package-version
export DEPENDENCIES=openblas
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,swift-cmake,imagemagick
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.GPLv3
#export LICENSETYPE=GPL
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/swift-nav/libswiftnav/releases"
export DOWNLOADURL="https://github.com/swift-nav/libswiftnav/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/swift-nav/libswiftnav/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/swift-nav/libswiftnav/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix redeclaration of memcpy_s in include/swiftnav/memcpy_s.h (version >= 0.1.0)
mv include/swiftnav/memcpy_s.h include/swiftnav/memcpy_s.h.bak &&
echo "#define memcpy_s SWIFT_memcpy_s" > include/swiftnav/memcpy_s.h &&
cat include/swiftnav/memcpy_s.h.bak >> include/swiftnav/memcpy_s.h
## fix building both static and shared library (version <= 0.1.1)
#sed -i.bak -e "s/^\s*\(add_library\s*(\)\([^ ]*\)\( *.*\)$/\1\2 STATIC\3\n\1\2_shared SHARED\3\nset_target_properties(\2_shared PROPERTIES OUTPUT_NAME \2)/; s/^\s*\(set_target_properties\|target_link_libraries\)\(\s*([^ ]*\)\( *.*\)$/&\n\1\2_shared\3/" CBLAS/src/CMakeLists.txt
#sed -i.bak -e "s/^\s*\(add_library\s*(\)\([^ ]*\)\( *.*\)$/\1\2 STATIC\3\n\1\2_shared SHARED\3\nset_target_properties(\2_shared PROPERTIES OUTPUT_NAME \2)/; s/^\s*\(set_target_properties\|target_link_libraries\)\(\s*([^ ]*\)\( *.*\)$/&\n\1\2_shared\3/" clapack-3.2.1-CMAKE/BLAS/SRC/CMakeLists.txt
## fix building both static and shared library (version >= 0.1.2)
#sed -i.bak -e "s/^\s*\(add_library\s*(\)\([^ ]*\)\( *.*\)$/\1\2 STATIC\3\n\1\2_shared SHARED\3\nset_target_properties(\2_shared PROPERTIES OUTPUT_NAME \2)/; s/^\s*\(set_target_properties\|target_link_libraries\)\(\s*([^ ]*\)\( *.*\)$/&\n\1\2_shared\3/" CMakeLists.txt
## avoid -Wfloat-conversion in CMakeLists.txt (version >= 0.1.5)
#sed -i.bak2 -e "s/-Wfloat-conversion//" CMakeLists.txt
# don't abort on warnings in CMakeLists.txt (version >= 0.1.7)
sed -i.bak3 -e "s/-Werror//" CMakeLists.txt
# skip building tests in CMakeLists.txt (version >= 0.1.7)
sed -i.bak4 -e "s/add_subdirectory(tests)/#&/" CMakeLists.txt
#wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DTARGET_ARCHITECTURE:STRING=generic . &&
# ##echo "-Wl,--as-needed -lblas" >> src/CMakeFiles/swiftnav.dir/linklibs.rsp &&
# #sed -i.bak -e "s/\(libcblas\|libblas\)\.a/\1.dll.a/" src/CMakeFiles/swiftnav.dir/linklibs.rsp &&
# #echo "../../SRC/liblapack.a ../../../CBLAS/src/libcblas.dll.a" >> clapack-3.2.1-CMAKE/BLAS/SRC/CMakeFiles/blas_shared.dir/linklibs.rsp &&
# #echo "../../clapack-3.2.1-CMAKE/SRC/liblapack.a" >> CBLAS/src/CMakeFiles/cblas_shared.dir/linklibs.rsp &&
# wl-showstatus build-install &&
# make install/strip &&
# # move include files to include/swiftnav (version = 0.1.0)
# #mkdir -p $INSTALLPREFIX/include/swiftnav &&
# #mv -f $INSTALLPREFIX/include/*.h $INSTALLPREFIX/include/swiftnav/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####TO DO: build DLL
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
# mkdir -p $INSTALLPREFIX/bin &&
# strip $INSTALLPREFIX/lib/*.dll &&
# mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
# fix missing swift includes
sed -i.bak5 -e "s?\(set(CMAKE_MODULE_PATH .*\)\()\)?\1 \"$(cygpath -m $MINGWPREFIX/cmake/swift)\"\2?; s/^include(SwiftCmakeOptions)$/&\ninclude(OldClangTidy)/" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/cmake/swift -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/cmake/swift -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/bin &&
 strip $INSTALLPREFIX/lib/*.dll &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



