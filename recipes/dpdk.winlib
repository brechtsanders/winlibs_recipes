export NAME="DPDK (Data Plane Development Kit)"
export STATUS=
export URL=http://dpdk.org/
export BASENAME=dpdk
export DESCRIPTION="DPDK is a set of libraries and drivers for fast packet processing."
export CATEGORY=communications
export TYPE=library
#export VERSION=16.11.4
#export VERSIONDATE=20171209
#export VERSION=16.11.5
#export VERSIONDATE=20180307
#export VERSION=16.11.7
#export VERSIONDATE=20180614
#export VERSION=16.11.8
#export VERSIONDATE=20180830
#export VERSION=16.11.9
#export VERSIONDATE=20190320
#export VERSION=16.11.10
#export VERSIONDATE=20191113
#export VERSION=16.11.11
#export VERSIONDATE=20191116
#export VERSION=17.08
#export VERSIONDATE=20170922
#export VERSION=17.08.1
#export VERSIONDATE=20171208
####build/include/rte_pci.h:52:10: fatal error: sys/queue.h: No such file or directory
#export VERSION=17.02
#export VERSIONDATE=20180215
#export VERSION=17.11
#export VERSIONDATE=20171116
#export VERSION=17.11.1
#export VERSIONDATE=20180227
#export VERSION=17.11.2
#export VERSIONDATE=20180424
#export VERSION=17.11.3
#export VERSIONDATE=20180616
#export VERSION=17.11.4
#export VERSIONDATE=20180903
#export VERSION=17.11.5
#export VERSIONDATE=20190216
#export VERSION=17.11.6
#export VERSIONDATE=20190522
#export VERSION=17.11.7
#export VERSIONDATE=20190927
#export VERSION=17.11.8
#export VERSIONDATE=20191113
#export VERSION=17.11.9
#export VERSIONDATE=20191116
#export VERSION=17.11.10
#export VERSIONDATE=20200227
#export VERSION=18.02.1
#export VERSIONDATE=20180424
#export VERSION=18.02.2
#export VERSIONDATE=20180616
#export VERSION=18.05
#export VERSIONDATE=20180531
#export VERSION=18.05.1
#export VERSIONDATE=20180906
#export VERSION=18.08
#export VERSIONDATE=20180810
#export VERSION=18.08.1
#export VERSIONDATE=20190402
#export VERSION=18.11
#export VERSIONDATE=20181127
#export VERSION=18.11.1
#export VERSIONDATE=20190412
#export VERSION=18.11.2
#export VERSIONDATE=20190612
#export VERSION=18.11.3
#export VERSIONDATE=20191026
#export VERSION=18.11.4
#export VERSIONDATE=20191113
#export VERSION=18.11.5
#export VERSIONDATE=20191116
#export VERSION=18.11.6
#export VERSIONDATE=20200201
#export VERSION=18.11.7
#export VERSIONDATE=20200416
#export VERSION=18.11.8
#export VERSIONDATE=20200519
#export VERSION=18.11.9
#export VERSIONDATE=20200710
#export VERSION=18.11.10
#export VERSIONDATE=20200929
#export VERSION=18.11.11
#export VERSIONDATE=20210120
#export VERSION=19.02
#export VERSIONDATE=20190202
#export VERSION=19.05
#export VERSIONDATE=20190514
#export VERSION=19.08
#export VERSIONDATE=20190811
#export VERSION=19.08.1
#export VERSIONDATE=20191113
#export VERSION=19.08.2
#export VERSIONDATE=20191116
#export VERSION=19.11
#export VERSIONDATE=20191129
#export VERSION=19.11.1
#export VERSIONDATE=20200317
#export VERSION=19.11.2
#export VERSIONDATE=20200519
#export VERSION=19.11.3
#export VERSIONDATE=20200619
#export VERSION=19.11.4
#export VERSIONDATE=20200908
#export VERSION=19.11.5
#export VERSIONDATE=20200929
#export VERSION=19.11.6
#export VERSIONDATE=20201218
#export VERSION=19.11.7
#export VERSIONDATE=20210319
#export VERSION=19.11.8
#export VERSIONDATE=20210416
#export VERSION=19.11.9
#export VERSIONDATE=20210720
#export VERSION=19.11.10
#export VERSIONDATE=20210906
#export VERSION=19.11.11
#export VERSIONDATE=20220107
#export VERSION=19.11.13
#export VERSIONDATE=20220830
#export VERSION=19.11.14
#export VERSIONDATE=20221216
#export VERSION=20.02
#export VERSIONDATE=20200226
#export VERSION=20.02.1
#export VERSIONDATE=20200519
#export VERSION=20.05
#export VERSIONDATE=20200527
####lib/librte_eal/linuxapp/eal/eal.c:50:10: fatal error: sys/queue.h: No such file or directory
#export DEPENDENCIES=mman-win32
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=20.08
#export VERSIONDATE=20200809
#export VERSION=20.11
#export VERSIONDATE=20201128
#export VERSION=20.11.1
#export VERSIONDATE=20210309
#export VERSION=20.11.2
#export VERSIONDATE=20210707
#export VERSION=20.11.3
#export VERSIONDATE=20210906
#export VERSION=20.11.4
#export VERSIONDATE=20220117
#export VERSION=20.11.5
#export VERSIONDATE=20220404
#export VERSION=20.11.6
#export VERSIONDATE=20220829
#export VERSION=20.11.7
#export VERSIONDATE=20221214
#export VERSION=20.11.10
#export VERSIONDATE=20231214
#export DEPENDENCIES=sys_queue_h
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=21.02
#export VERSIONDATE=20210215
#export VERSION=21.05
#export VERSIONDATE=20210522
#export VERSION=21.08
#export VERSIONDATE=20210809
#export VERSION=21.11
#export VERSIONDATE=20211127
#export VERSION=21.11.1
#export VERSIONDATE=20220427
#export VERSION=21.11.2
#export VERSIONDATE=20220830
#export VERSION=22.11.3
#export VERSIONDATE=20221221
#export VERSION=22.11.9
#export VERSIONDATE=20230816
#export VERSION=22.03
#export VERSIONDATE=20220318
####/include/pcap/pcap.h:41:12: fatal error: pcap-stdinc.h: No such file or directory
#export VERSION=22.07
#export VERSIONDATE=20220718
#export VERSION=22.11
#export VERSIONDATE=20221127
#export VERSION=22.11.1
#export VERSIONDATE=20221202
#export VERSION=22.11.2
#export VERSIONDATE=20230506
#export VERSION=22.11.3
#export VERSIONDATE=20230912
#export VERSION=22.11.4
#export VERSIONDATE=20230519
#export VERSION=21.11.5
#export VERSIONDATE=20230825
#export VERSION=21.11.6
#export VERSIONDATE=20240115
#export VERSION=22.11.8
#export VERSIONDATE=20230428
#export VERSION=23.03
#export VERSIONDATE=20230401
#export VERSION=23.07
#export VERSIONDATE=20230729
#export VERSION=23.11
#export VERSIONDATE=20231129
#export VERSION=23.11.5
#export VERSIONDATE=20240423
#export VERSION=23.11.7
#export VERSIONDATE=20240501
export VERSION=24.03
export VERSIONDATE=20240329
wl-showstatus --package-version
#export DEPENDENCIES=sys_queue_h
#export DEPENDENCIES=sys_queue_h,winpcap
#export DEPENDENCIES=
export DEPENDENCIES=libpcap
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.GPL
#export LICENSETYPE=GPL
#export LICENSEFILE=LICENSE.LGPL
#export LICENSETYPE=LGPL
export LICENSEFILE=license/README
export LICENSETYPE="BSD/GPL"
#export DOWNLOADURL="http://dpdk.org/download"
#export DOWNLOADURL="http://fast.dpdk.org/rel/"
export DOWNLOADURL="https://fast.dpdk.org/rel/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://fast.dpdk.org/rel/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://fast.dpdk.org/rel/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME*-$VERSION
#wl-showstatus configure &&
# #make config T=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "x86_64"; else echo "i686"; fi)-native-linuxapp-gcc CC=${CC:-gcc} &&
# make config T=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "x86_64"; else echo "i686"; fi)-native-linuxapp-gcc CC="${CC:-gcc} -I$MINGWPREFIX/include/mman-win32" &&
# wl-showstatus build &&
# make prefix=$INSTALLPREFIX CC="${CC:-gcc} -I$MINGWPREFIX/include/mman-win32" &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME*-$VERSION
# fix drivers/net/pcap/pcap_ethdev.c (version >= 21.05)
patch -ulbf drivers/net/pcap/pcap_ethdev.c << EOF
@@ -543,4 +543,8 @@
         */
+#ifndef PCAP_TSTAMP_PRECISION_NANO
+       tx_pcap = NULL;
+#else
        tx_pcap = pcap_open_dead_with_tstamp_precision(DLT_EN10MB,
                        RTE_ETH_PCAP_SNAPSHOT_LEN, PCAP_TSTAMP_PRECISION_NANO);
+#endif
        if (tx_pcap == NULL) {
EOF
# fix buildtools/symlink-drivers-solibs.sh (version >= 20.08)
patch -ulbf buildtools/symlink-drivers-solibs.sh << EOF
@@ -12,2 +12,2 @@

-cd \${MESON_INSTALL_DESTDIR_PREFIX}/\$1 && ln -sfv \$2/librte_*.so* .
+cd \${MESON_INSTALL_DESTDIR_PREFIX}/\$1 && cp -f \$2/librte_*.dll* .
EOF
# skip building test programs (version >= 21.08)
sed -i.bak -e "s/'test-[^']*',//g" app/meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Denable_docs=false -Dexamples= -Dtests=false . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Denable_docs=false -Dexamples= -Dtests=false -Dc_args="-I$MINGWPREFIX/win32ports/include" . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -Denable_docs=false -Dexamples= -Dtests=false . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -Denable_docs=false -Dexamples= -Dtests=false -Dc_args="-I$MINGWPREFIX/include/pcap" . build_both &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -Denable_docs=false -Dexamples= -Dtests=false -Dc_args="-I$MINGWPREFIX/include/pcap" . build_both &&
 ## fix exporting usual_optarg/usual_opterr/usual_optind/usual_optopt/usual_getopt/usual_getopt_long (version >= 21.08)
 #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both lib/rte_eal_exports.def &&
 #sed -ne "s/^.*\b\(usual_[^(]*\).*$/\1/p" lib/eal/windows/include/getopt.h >> build_both/lib/rte_eal_exports.def &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME*-$VERSION



