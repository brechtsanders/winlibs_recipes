#export NAME="YAML"
#export STATUS=
#export URL=http://yaml.org/
#export BASENAME=libyaml
#export DESCRIPTION="YAML is a human friendly data serialization standard for all programming languages."
#export CATEGORY=dataprocessing
#export TYPE=library
##export VERSION=0.1.4
##export VERSIONDATE=20120518
##export VERSION=0.1.5
##export VERSIONDATE=20140204
##export VERSION=0.1.6
##export VERSIONDATE=20140327
##export VERSION=0.1.7
##export VERSIONDATE=20160829
##export VERSION=0.2.1
##export VERSIONDATE=20180706
##export VERSION=0.2.2
##export VERSIONDATE=20190326
##export VERSION=0.2.3
##export VERSIONDATE=20200412
#export VERSION=0.2.4
#export VERSIONDATE=20200419
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=
##export DOWNLOADURL="http://pyyaml.org/download/libyaml/ yaml-"
#export DOWNLOADURL="https://github.com/yaml/libyaml/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://pyyaml.org/download/libyaml/yaml-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/yaml/libyaml/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xz --force-local -f $TARBALLDIR/$BASENAME/yaml-$VERSION.tar.gz
##cd yaml-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
#wl-showstatus configure &&
#mkdir -p m4 &&
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# wl-showstatus build-install &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# make install-strip CFLAGS="-O3 -DYAML_DECLARE_EXPORT" &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf yaml-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="YAML"
export STATUS=
export URL=http://yaml.org/
export BASENAME=libyaml
export DESCRIPTION="YAML is a human friendly data serialization standard for all programming languages."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=0.2.2
#export VERSIONDATE=20190326
#export VERSION=0.2.3
#export VERSIONDATE=20200412
#export VERSION=0.2.4
#export VERSIONDATE=20200419
export VERSION=0.2.5
export VERSIONDATE=20200602
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
export DOWNLOADURL="https://github.com/yaml/libyaml/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/yaml/libyaml/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# manually generate .pc file
for F in *.pc.in; do
 sed -e "s?@prefix@?$INSTALLPREFIX?; s?@exec_prefix@?\${prefix}?; s?@includedir@?\${prefix}/include?; s?@libdir@?\${exec_prefix}/lib?; s?@PACKAGE_VERSION@?$VERSION?" $F > $(echo $F|sed -e "s/\.in$//")
done
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/lib/pkgconfig &&
 cp -u *.pc $INSTALLPREFIX/lib/pkgconfig/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



