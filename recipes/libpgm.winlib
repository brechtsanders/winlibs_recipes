export NAME="OpenPGM"
export STATUS=
export URL=https://code.google.com/archive/p/openpgm/
export BASENAME=libpgm
export DESCRIPTION="An implementation of the PGM reliable multicast protocol."
export CATEGORY=communication
export TYPE=library
export VERSION=5.2.122
export VERSIONDATE=20190106
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
export DOWNLOADURL="https://code.google.com/archive/p/openpgm/downloads"
#export DOWNLOADURL="https://github.com/steve-o/openpgm/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/openpgm/libpgm-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION/openpgm/pgm
# fix missing AI_ADDRCONFIG
sed -i.bak -e "s/AI_ADDRCONFIG/0/" if.c getnodeaddr.c
# fix version_generator.py
sed -i.bak -e "s?/usr/bin/python?python?" version_generator.py
wl-showstatus configure &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -lws2_32 -liphlpapi -lwinmm" &&
 echo "#define AI_ADDRCONFIG 0" >> config.h &&
 echo "#define HAVE_WSACMSGHDR 0" >> config.h &&
 echo "#define HAVE_GETTIMEOFDAY 0" >> config.h &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build-install &&
 PATH=$PY2DIR:$PATH make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe .. &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
#    echo OK



