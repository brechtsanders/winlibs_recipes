export NAME="Vulkan-ValidationLayers"
export STATUS=
export URL=https://github.com/KhronosGroup/Vulkan-ValidationLayers
export BASENAME=vulkan-validationlayers
export DESCRIPTION="This project provides the Khronos official Vulkan validation layers for Windows, Linux, Android, and MacOS."
export CATEGORY=development
export TYPE=library
#export VERSION=1.2.182
#export VERSIONDATE=20210623
####layers/shader_validation.cpp: In function 'void AdjustValidatorOptions(const DeviceExtensions&, const DeviceFeatures&, spvtools::ValidatorOptions&)': ../layers/shader_validation.cpp:2469:17: error: 'class spvtools::ValidatorOptions' has no member named 'SetWorkgroupScalarBlockLayout'
#export VERSION=1.2.184
#export VERSIONDATE=20210707
#export VERSION=1.2.187
#export VERSIONDATE=20210805
#export VERSION=1.2.188
#export VERSIONDATE=20210811
#export VERSION=1.2.189
#export VERSIONDATE=20210818
#export VERSION=1.2.190
#export VERSIONDATE=20210831
#export VERSION=1.2.191
#export VERSIONDATE=20210910
#export VERSION=1.2.192
#export VERSIONDATE=20210916
#export VERSION=1.2.193
#export VERSIONDATE=20210922
#export VERSION=1.2.194
#export VERSIONDATE=20210930
#export VERSION=1.2.195
#export VERSIONDATE=20211006
#export VERSION=1.2.196
#export VERSIONDATE=20211015
#export VERSION=1.2.203
#export VERSIONDATE=20220122
#export VERSION=1.3.204
#export VERSIONDATE=20220129
#export VERSION=1.3.205
#export VERSIONDATE=20220209
#export VERSION=1.3.206
#export VERSIONDATE=20220219
#export VERSION=1.3.208
#export VERSIONDATE=20220316
#export VERSION=1.3.209
#export VERSIONDATE=20220325
#export VERSION=1.3.210
#export VERSIONDATE=20220402
#export VERSION=1.3.211
#export VERSIONDATE=20220407
#export VERSION=1.3.212
#export VERSIONDATE=20220422
#export VERSION=1.3.213
#export VERSIONDATE=20220512
#export VERSION=1.3.214
#export VERSIONDATE=20220518
#export VERSION=1.3.215
#export VERSIONDATE=20220525
#export VERSION=1.3.216
#export VERSIONDATE=20220525
#export VERSION=1.3.217
#export VERSIONDATE=20220614
#export VERSION=1.3.218
#export VERSIONDATE=20220618
#export VERSION=1.3.219
#export VERSIONDATE=20220702
#export VERSION=1.3.221
#export VERSIONDATE=20220715
#export VERSION=1.3.222
#export VERSIONDATE=20220722
#export VERSION=1.3.223
#export VERSIONDATE=20220728
#export VERSION=1.3.224
#export VERSIONDATE=20220805
#export VERSION=1.3.225
#export VERSIONDATE=20220819
#export VERSION=1.3.226
#export VERSIONDATE=20220903
#export VERSION=1.3.227
#export VERSIONDATE=20220909
#export VERSION=1.3.228
#export VERSIONDATE=20220916
#export VERSION=1.3.229
#export VERSIONDATE=20220923
#export VERSION=1.3.230
#export VERSIONDATE=20221001
#export VERSION=1.3.231
#export VERSIONDATE=20221014
#export VERSION=sdk-1.3.231.1
#export VERSIONDATE=20221019
#export VERSION=1.3.232
#export VERSIONDATE=20221028
#export VERSION=1.3.233
#export VERSIONDATE=20221104
#export VERSION=1.3.234
#export VERSIONDATE=20221111
#export VERSION=1.3.235
#export VERSIONDATE=20221118
#export VERSION=1.3.236
#export VERSIONDATE=20221207
#export VERSION=sdk-1.3.236.0
#export VERSIONDATE=20230617
#export VERSION=sdk-1.3.239.0
#export VERSIONDATE=20230617
#export VERSION=sdk-1.3.243.0
#export VERSIONDATE=20230617
#export VERSION=sdk-1.3.250.0
#export VERSIONDATE=20230617
export VERSION=sdk-1.3.250.1
export VERSIONDATE=20230630
#export VERSION=1.3.253
#export VERSIONDATE=20230613
#export VERSION=1.3.254
#export VERSIONDATE=20230617
wl-showstatus --package-version
export DEPENDENCIES=glslang,vulkan-headers,vulkan-loader,spirv-headers,robin-hood-hashing
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/KhronosGroup/Vulkan-ValidationLayers/releases sdk-"
#export DOWNLOADURL="https://github.com/KhronosGroup/Vulkan-ValidationLayers/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/KhronosGroup/Vulkan-ValidationLayers/archive/refs/tags/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/KhronosGroup/Vulkan-ValidationLayers/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd Vulkan-ValidationLayers-$VERSION
# fix layers/shader_validation.cpp (version >= 1.3.235)
#### Bug reported: https://github.com/KhronosGroup/Vulkan-ValidationLayers/issues/4826
patch -ulbf layers/shader_validation.cpp << EOF
@@ -3959,3 +3959,3 @@
     // Faster validation without friendly names.
-    options.SetFriendlyNames(false);
+    //options.SetFriendlyNames(false);
 }
EOF
## fix undefined DEFAULT_VK_REGISTRY_HIVE/SECONDARY_VK_REGISTRY_HIVE in layers/vk_layer_config.cpp (version >= 1.3.236)
#patch -ulbf layers/vk_layer_config.cpp << EOF
#@@ -40,2 +40,8 @@
# #define GetCurrentDir _getcwd
#+#ifndef DEFAULT_VK_REGISTRY_HIVE
#+#define DEFAULT_VK_REGISTRY_HIVE HKEY_LOCAL_MACHINE
#+#endif
#+#ifndef SECONDARY_VK_REGISTRY_HIVE
#+#define SECONDARY_VK_REGISTRY_HIVE HKEY_CURRENT_USER
#+#endif
# #else
#EOF
## fix invalid %zu printf format in layers/gpu_validation.cpp (version >= 1.3.236)
#patch -ulbf layers/gpu_validation.cpp << EOF
#@@ -909,4 +909,4 @@
#             case SPV_MSG_ERROR:
#-                this->LogError(this->device, "UNASSIGNED-GPU-Assisted", "Error during shader instrumentation: line %zu: %s",
#-                               position.index, message);
#+                this->LogError(this->device, "UNASSIGNED-GPU-Assisted", "Error during shader instrumentation: line %lu: %s",
#+                               (unsigned long)position.index, message);
#                 break;
#EOF
## avoid unsipported TARGET_PDB_FILE in layers/CMakeLists.txt (version >= 1.3.236)
#patch -ulbf layers/CMakeLists.txt << EOF
#@@ -335,2 +335,4 @@
#     install(FILES \${INTERMEDIATE_FILE} DESTINATION \${LAYER_INSTALL_DIR} RENAME \${OUTPUT_FILE_FINAL_NAME})
#+endif()
#+if (MSVC)
#     install(FILES \$<TARGET_PDB_FILE:VkLayer_khronos_validation> DESTINATION \${LAYER_INSTALL_DIR})
#EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_LAYERS:BOOL=OFF -DUSE_ROBIN_HOOD_HASHING:BOOL=OFF -DVULKAN_HEADERS_INSTALL_DIR:PATH=$MINGWPREFIX -DSPIRV_HEADERS_INSTALL_DIR:PATH=$MINGWPREFIX -DSPIRV_TOOLS_INSTALL_DIR:PATH=$MINGWPREFIX -DGLSLANG_INSTALL_DIR:PATH=$MINGWPREFIX -DBUILD_WERROR:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_win &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_LAYERS:BOOL=ON -DBUILD_LAYER_SUPPORT_FILES:BOOL=ON -DUSE_ROBIN_HOOD_HASHING:BOOL=ON -DVULKAN_HEADERS_INSTALL_DIR:PATH=$MINGWPREFIX -DSPIRV_HEADERS_INSTALL_DIR:PATH=$MINGWPREFIX -DSPIRV_TOOLS_INSTALL_DIR:PATH=$MINGWPREFIX -DGLSLANG_INSTALL_DIR:PATH=$MINGWPREFIX -DBUILD_WERROR:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf Vulkan-ValidationLayers-$VERSION



