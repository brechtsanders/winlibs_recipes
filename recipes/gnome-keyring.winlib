export NAME="gnome-keyring"
export STATUS=
export URL=http://live.gnome.org/GnomeKeyring
export BASENAME=gnome-keyring
export DESCRIPTION="GNOME Keyring is a collection of components in GNOME that store secrets, passwords, keys, certificates and make them available to applications."
export CATEGORY=security
export TYPE=library
#export VERSION=2.27.5
#export VERSION=2.27.90
#export VERSION=2.27.92
#export VERSION=2.28.0
#export VERSION=2.28.1
#export VERSION=2.28.2
#export VERSION=2.29.4
#export VERSION=2.29.5
#export VERSION=2.29.90
####No package 'eggdbus-1' found
#export VERSION=2.29.92
####egg-mkdtemp.c:171: error: too many arguments to function 'mkdir'
#export VERSION=2.30.0
#export VERSION=2.30.1
#export VERSION=2.30.2
#export VERSION=2.30.3
#export VERSION=2.31.4
#export VERSION=2.31.91
#export VERSION=2.31.92
#export VERSION=2.32.0
#export VERSIONDATE=20100928
#export VERSION=2.32.1
#export VERSIONDATE=20101026
####egg/egg-asn1x.c:1691:8: warning: no previous prototype for 'timegm'
#export DEPENDENCIES=gconf,libtasn1,libgcrypt,dbus,glib2,gtk2,pango,gettext,plibc
#export VERSION=2.91.0
#export VERSIONDATE=20101004
#export VERSION=2.91.1
#export VERSIONDATE=20101008
#export DEPENDENCIES=gconf,libtasn1,libgcrypt,dbus,glib2,gtk3,pango,gettext,plibc
#export VERSION=3.0.0
#export VERSIONDATE=20110404
#export VERSION=3.0.1
#export VERSIONDATE=20110425
#export VERSION=3.0.2
#export VERSIONDATE=20110520
#export VERSION=3.0.3
#export VERSIONDATE=20110527
#export VERSION=3.1.1
#export VERSIONDATE=20110509
#export VERSION=3.1.4
#export VERSIONDATE=20110725
####gcr-gnupg-process.c:694:3: warning: passing argument 1 of '_win_kill' makes integer from pointer without a cast
####/include/plibc.h:375:5: note: expected 'int' but argument is of type 'GPid'
#export VERSION=3.2.0
#export VERSIONDATE=20110926
#export VERSION=3.2.1
#export VERSIONDATE=20111018
#export VERSION=3.2.2
#export VERSIONDATE=20111114
#export DEPENDENCIES=gconf,libtasn1,libgcrypt,dbus,glib2,gtk3,pango,gettext,plibc,p11-kit
#export VERSION=3.3.1
#export VERSIONDATE=20111024
#export VERSION=3.3.1.1
#export VERSIONDATE=20111026
#export VERSION=3.3.2
#export VERSIONDATE=20111121
#export VERSION=3.3.3
#export VERSIONDATE=20111219
#export VERSION=3.3.3.1
#export VERSIONDATE=20111221
#export VERSION=3.3.4
#export VERSIONDATE=20120116
#export VERSION=3.3.5
#export VERSIONDATE=20120204
#export VERSION=3.4.0
#export VERSIONDATE=20120326
#export VERSION=3.4.1
#export VERSIONDATE=20120416
#export VERSION=3.5.3
#export VERSIONDATE=20120716
#export VERSION=3.5.4
#export VERSIONDATE=20120806
#export VERSION=3.5.5
#export VERSIONDATE=20120806
#export VERSION=3.5.91
#export VERSIONDATE=20120903
#export VERSION=3.5.92
#export VERSIONDATE=20120918
#export VERSION=3.6.0
#export VERSIONDATE=20120927
#export VERSION=3.6.1
#export VERSIONDATE=20121016
#export VERSION=3.6.2
#export VERSIONDATE=20121112
#export VERSION=3.6.3
#export VERSIONDATE=20130301
#export VERSION=3.7.2
#export VERSIONDATE=20121122
#export VERSION=3.7.5
#export VERSIONDATE=20130204
#export VERSION=3.8.0
#export VERSIONDATE=20130325
#export VERSION=3.8.1
#export VERSIONDATE=20130416
#export VERSION=3.8.2
#export VERSIONDATE=20130505
#export VERSION=3.9.1
#export VERSIONDATE=20130501
#export VERSION=3.10.0
#export VERSIONDATE=20130924
#export VERSION=3.10.1
#export VERSIONDATE=20131017
#export VERSION=3.12.0
#export VERSIONDATE=20140323
#export VERSION=3.12.2
#export VERSIONDATE=20140514
#export VERSION=3.14.0
#export VERSIONDATE=20140924
####tool/pkcs11/gkm/gkm-transaction.c:190:3: error: too few arguments to function 'g_open'
#export VERSION=3.16.0
#export VERSIONDATE=20150411
#export VERSION=3.17.4
#export VERSIONDATE=20150811
#export VERSION=3.18.0
#export VERSIONDATE=20150929
#export VERSION=3.18.1
#export VERSIONDATE=20151017
#export VERSION=3.18.2
#export VERSIONDATE=20151020
####pkcs11/gkm/gkm-transaction.c:190:3: error: too few arguments to function 'g_open'
#export VERSION=3.18.3
#export VERSIONDATE=20151031
#export VERSION=3.19.4
#export VERSIONDATE=20160121
####No package 'gcr-3' found
#export DEPENDENCIES=gconf,libtasn1,libgcrypt,dbus,glib2,gtk3,pango,gettext,plibc,p11-kit,gcr,pthreads
#export VERSION=3.20.0
#export VERSIONDATE=20160325
#export VERSION=3.20.1
#export VERSIONDATE=20170704
#export VERSION=3.27.2
#export VERSIONDATE=20171111
#export VERSION=3.27.4
#export VERSIONDATE=20180108
#export VERSION=3.28.0
#export VERSIONDATE=20180312
####daemon/control/gkd-control-server.c:404:21: error: storage size of 'addr' isn't known
#export VERSION=3.28.0.1
#export VERSIONDATE=20180313
#export VERSION=3.28.0.2
#export VERSIONDATE=20180325
#export VERSION=3.28.2
#export VERSIONDATE=20180507
#export VERSION=3.31.91
#export VERSIONDATE=20190302
####Requested 'gcr-3 >= 3.27.90' but version of gcr-3 is 3.20.0
#export VERSION=3.34.0
#export VERSIONDATE=20190930
#export VERSION=3.35.1
#export VERSIONDATE=20200113
#export VERSION=3.36.0
#export VERSIONDATE=20200311
#export VERSION=40.0
#export VERSIONDATE=20200326
#export VERSION=42.0
#export VERSIONDATE=20220522
export VERSION=46.0
export VERSIONDATE=20240211
####daemon/gkd-main.c:61:10: fatal error: gio/gunixinputstream.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=gconf,libtasn1,libgcrypt,dbus,glib2,gtk3,pango,gettext,p11-kit,gcr,pthreads
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
export DOWNLOADURL="http://ftp.gnome.org/pub/gnome/sources/gnome-keyring/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/gnome-keyring/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/gnome-keyring/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/gnome-keyring/$(echo $VERSION|sed 's/^\([0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix egg/egg-unix-credentials.c
patch -ulbf egg/egg-unix-credentials.c << EOF
--- egg/egg-unix-credentials.c  Mon Aug 10 17:53:40 2009
+++ egg/egg-unix-credentials.c  Tue Aug 25 11:59:58 2009
@@ -28,2 +28,3 @@
 #include <sys/types.h>
+#ifndef __MINGW32__
 #include <sys/socket.h>
@@ -31,2 +32,3 @@
 #include <sys/un.h>
+#endif
 #include <errno.h>
@@ -42,2 +44,3 @@
 {
+#ifndef __MINGW32__
        struct msghdr msg;
@@ -159,2 +162,6 @@
        return 0;
+#else
+       fprintf (stderr, "socket credentials not supported on this OS\n");
+       return -1;
+#endif
 }
EOF
# fix egg/egg-mkdtemp.c (version >= 2.29.92)
patch -ulbf egg/egg-mkdtemp.c << EOF
--- egg/egg-mkdtemp.c  2009-12-22 14:30:54 +0100
+++ egg/egg-mkdtemp.c  2010-03-31 09:40:00 +0200
@@ -170,3 +170,7 @@

+#ifdef __MINGW32__
+      fd = __mkdir (tmpl);
+#else
       fd = __mkdir (tmpl, S_IRUSR | S_IWUSR | S_IXUSR);
+#endif
EOF
# fix missing files
mkdir sys
touch sys/uio.h sys/un.h sys/times.h
cat > sys/socket.h << EOF
#include <winsock2.h>
#define SHUT_RDWR SD_BOTH
EOF
# fix missing sys/wait.h in gcr/gcr-gnupg-collection.c (version >= 3.1.1)
cat > sys/wait.h << EOF
#define WINDOWS
//#define kill(pid,sig) 0
//#include <plibc.h>
#define kill(pid,sig) (sig ? _win_kill(pid,sig) : -1)
/*
#include <windows.h>
static int kill (GPid pid, int sig)
{
 BOOL status;
 HANDLE hProcess;
 if ((hProcess = OpenProcess(PROCESS_TERMINATE, FALSE, (DWORD)pid)) == NULL || hProcess == INVALID_HANDLE_VALUE)
  return -1;
 status = TerminateProcess(hProcess, ~0);
 CloseHandle(hProcess);
 return (status ? 0 : -1);
}
*/
#define SIGHUP 0
#define WIFEXITED(stat_val) (((stat_val) &255) == 0)
#ifndef WEXITSTATUS
#define WEXITSTATUS(stat_val) (((unsigned)(stat_val) >> 8) & 255)
#endif
#define WIFSIGNALED(stat_val) 0
#define WTERMSIG(stat_val) (int)stat_val
EOF
# fix missing syslog.h in ui/gku-prompt-tool.c (version >= 3.1.1)
cat > syslog.h << EOF
#define LOG_CRIT    2
#define LOG_ERR     3
#define LOG_WARNING 4
#define LOG_NOTICE  5
#define LOG_INFO    6
#define LOG_DEBUG   7
#define LOG_AUTH    (4<<3)
#define LOG_PID 0x01
static void openlog (const char *ident, int option, int facility) {}
static void syslog (int priority, const char *format, ...) {}
//static void closelog (void) {}
EOF
## fix missing files (version >= 2.30.0)
#echo "#include <winsock2.h>" > sys/select.h
#echo "#include <plibc.h>" > sys/wait.h
# fix egg/egg-spawn.c (version >= 2.30.0)
patch -ulbf egg/egg-spawn.c << EOF
--- egg/egg-spawn.c  2009-12-22 14:30:54 +0100
+++ egg/egg-spawn.c  2010-03-31 10:05:28 +0200
@@ -31,4 +31,9 @@

+#ifdef __MINGW32__
+#include <winsock2.h>
+#define waitpid(p,s,o) 0       //to do: find proper waitpid() for Windows
+#else
 #include <sys/select.h>
 #include <sys/wait.h>
+#endif
EOF
# fix socket stuff in library/gnome-keyring-socket.c
patch -ulbf library/gnome-keyring-socket.c << EOF
--- library/gnome-keyring-socket.c  Tue Sep  8 09:27:56 2009
+++ library/gnome-keyring-socket.c  Tue Sep  8 09:33:50 2009
@@ -33,2 +33,12 @@
 
+#ifdef __WIN32__
+#include <winsock2.h>
+struct sockaddr_un
+{
+  short          sun_family;
+  unsigned short sun_port;
+  struct         in_addr sun_addr;
+  char           sun_path[108-2-4]; 
+};
+#else
 #include <sys/socket.h>
@@ -36,2 +46,3 @@
 #include <sys/un.h>
+#endif
 
@@ -111,2 +122,3 @@
 
+#ifndef __WIN32__
        /* close on exec */
@@ -116,2 +128,3 @@
        }
+#endif
 
@@ -160,2 +173,10 @@
        if (non_blocking) {
+#ifdef __WIN32__
+               unsigned long flags = 1;
+               val = ioctlsocket(sock, FIONBIO, &flags);
+               if (val < 0) {
+                       close (sock);
+                       return -1;
+               }
+#else
                val = fcntl (sock, F_GETFL, 0);
@@ -170,2 +191,3 @@
                }
+#endif
        }
EOF
# fix mman stuff in egg/egg-secure-memory.c
patch -ulbf egg/egg-secure-memory.c << EOF
--- egg/egg-secure-memory.c  Mon Dec 14 15:38:06 2009
+++ egg/egg-secure-memory.c  Tue Dec 15 08:59:42 2009
@@ -34,3 +34,7 @@
 #include <sys/types.h>
+#ifndef __MINGW32__
 #include <sys/mman.h>
+#else
+#include <windows.h>
+#endif
 #include <stddef.h>
@@ -186,2 +190,3 @@
        if (pool == NULL) {
+#ifndef __MINGW32__
                len = getpagesize () * 2;
@@ -190,2 +195,8 @@
                        return NULL;
+#else
+               SYSTEM_INFO sysinfo;
+               GetSystemInfo(&sysinfo);
+               len = sysinfo.dwPageSize * 2;
+               pages = VirtualAlloc(NULL, len, 0, PAGE_READWRITE);
+#endif
 
@@ -217,3 +228,7 @@
        
+#ifndef __MINGW32__
        return memset (item, 0, sizeof (Item));
+#else
+       return item;
+#endif
 }
@@ -250,3 +265,7 @@
                
+#ifndef __MINGW32__
                munmap (pool, pool->length);
+#else
+               VirtualFree (pool, 0, MEM_RELEASE);
+#endif
                return;
EOF
# fix missing gmtime_r in egg/egg-asn1.c
mv egg/egg-asn1.c egg/egg-asn1.c.bak
echo "#include <pthread.h>" > egg/egg-asn1.c
cat egg/egg-asn1.c.bak >> egg/egg-asn1.c
# fix missing gmtime_r in egg/egg-asn1x.c (version >= 2.32.0)
mv egg/egg-asn1x.c egg/egg-asn1x.c.bak
echo "#include <pthread.h>" > egg/egg-asn1x.c
cat egg/egg-asn1x.c.bak >> egg/egg-asn1x.c
# fix missing gmtime_r in pkcs11/gck/gck-transaction.c
mv pkcs11/gck/gck-transaction.c pkcs11/gck/gck-transaction.c.bak
cat > pkcs11/gck/gck-transaction.c << EOF
#include <time.h>
struct tm* gmtime_r (const time_t* timer, struct tm* result)
{
  struct tm* local_result;
  if ((local_result = gmtime (timer)) == NULL || result == NULL)
    return NULL;
  memcpy (result, local_result, sizeof (result));
  return result;
} 
EOF
cat pkcs11/gck/gck-transaction.c.bak >> pkcs11/gck/gck-transaction.c
# fix redefinition of CreateMutex in pkcs11/gck/gck-module-ep.h (version < 3.0.0)
patch -ulbf pkcs11/gck/gck-module-ep.h << EOF
--- pkcs11/gck/gck-module-ep.h  Mon Dec 14 15:38:08 2009
+++ pkcs11/gck/gck-module-ep.h  Tue Dec 15 09:10:42 2009
@@ -24,3 +24,8 @@
 #include "gck-session.h"
-
+#ifdef CreateMutex
+#undef CreateMutex
+#endif
+#ifdef __MINGW32__
+#define sleep(t) _sleep((t) * 1000)
+#endif
 #include "pkcs11/pkcs11.h"
EOF
# fix redefinition of CreateMutex in pkcs11/gkm/gkm-module-ep.h (version >= 3.1.1)
patch -ulbf pkcs11/gkm/gkm-module-ep.h << EOF
--- pkcs11/gkm/gkm-module-ep.h  2011-04-28 22:38:32 +0200
+++ pkcs11/gkm/gkm-module-ep.h  2011-06-13 20:39:44 +0200
@@ -24,3 +24,8 @@
 #include "gkm-session.h"
-
+#ifdef CreateMutex
+#undef CreateMutex
+#endif
+#ifdef __MINGW32__
+#define sleep(t) _sleep((t) * 1000)
+#endif
 #include "pkcs11/pkcs11.h"
EOF
# fix missing gmtime_r in pkcs11/gkm/gkm-attributes.c (version >= 3.1.1)
mv pkcs11/gkm/gkm-attributes.c pkcs11/gkm/gkm-attributes.c.bak
echo "#include <pthread.h>" > pkcs11/gkm/gkm-attributes.c
cat pkcs11/gkm/gkm-attributes.c.bak >> pkcs11/gkm/gkm-attributes.c
# fix missing gmtime_r in gck/gck-slot.c (version >= 3.1.4)
mv gck/gck-slot.c gck/gck-slot.c.bak
cat > gck/gck-slot.c << EOF
#include <stdlib.h>
#include <string.h>
#include <time.h>
struct tm* gmtime_r (const time_t* timer, struct tm* result)
{
  struct tm* local_result;
  if ((local_result = gmtime (timer)) == NULL || result == NULL)
    return NULL;
  memcpy (result, local_result, sizeof (result));
  return result;
} 
EOF
cat gck/gck-slot.c.bak >> gck/gck-slot.c
# fix gcr/gcr-gnupg-process.c (version >= 3.1.4)
patch -ulbf gcr/gcr-gnupg-process.c << EOF
--- gcr/gcr-gnupg-process.c  2011-07-25 11:12:52 +0200
+++ gcr/gcr-gnupg-process.c  2011-11-30 10:05:02 +0100
@@ -37,2 +37,17 @@
 #include <string.h>
+#ifdef __MINGW32__
+#include <windows.h>
+#undef kill
+static int kill (GPid pid, int sig)
+{
+ BOOL status;
+ HANDLE hProcess;
+ if ((hProcess = OpenProcess(PROCESS_TERMINATE, FALSE, (DWORD)pid)) == NULL || hProcess == INVALID_HANDLE_VALUE)
+  return -1;
+ status = TerminateProcess(hProcess, ~0);
+ CloseHandle(hProcess);
+ return (status ? 0 : -1);
+}
+#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
+#endif

@@ -669,4 +684,8 @@
                if (child_fds[i] >= 0) {
+#ifndef __MINGW32__
                        val = fcntl (child_fds[i], F_GETFD);
                        fcntl (child_fds[i], F_SETFD, val & ~FD_CLOEXEC);
+#else
+                       SetHandleInformation(_get_osfhandle(child_fds[i]), HANDLE_FLAG_INHERIT, 1);
+#endif
                }
@@ -798,7 +817,7 @@
                gchar *command = g_strjoinv (" ", (gchar**)args->pdata);
-               gchar *environ = g_strjoinv (", ", (gchar**)envs->pdata);
+               gchar *environment = g_strjoinv (", ", (gchar**)envs->pdata);
                _gcr_debug ("running command: %s", command);
-               _gcr_debug ("process environment: %s", environ);
+               _gcr_debug ("process environment: %s", environment);
                g_free (command);
-               g_free (environ);
+               g_free (environment);
        }
EOF
# fix missing link in pkcs11/gkm/gkm-transaction.c
mv pkcs11/gkm/gkm-transaction.c pkcs11/gkm/gkm-transaction.c.bak
echo "#define link(src,dst) -1" > pkcs11/gkm/gkm-transaction.c
cat pkcs11/gkm/gkm-transaction.c.bak >> pkcs11/gkm/gkm-transaction.c
## fix missing parameter to g_open in pkcs11/gkm/gkm-transaction.c (version >= 3.20.0)
#patch -ulbf pkcs11/gkm/gkm-transaction.c << EOF
#--- pkcs11/gkm/gkm-transaction.c  2016-03-25 21:32:56.317315700 +0100
#+++ pkcs11/gkm/gkm-transaction.c  2016-03-25 21:49:45.534237500 +0100
#@@ -189,3 +189,3 @@
#        do {
#-               srcfd = g_open (srcname, (O_RDONLY | O_BINARY));
#+               srcfd = g_open (srcname, (O_RDONLY | O_BINARY), 0);
#        } while (srcfd == -1 && errno == EINTR);
#EOF
# fix pkcs11/rpc-layer/gkm-rpc-module.c (version >= 3.2.2)
patch -ulbf pkcs11/rpc-layer/gkm-rpc-module.c << EOF
--- pkcs11/rpc-layer/gkm-rpc-module.c  2011-10-14 20:45:24 +0200
+++ pkcs11/rpc-layer/gkm-rpc-module.c  2011-11-30 11:14:46 +0100
@@ -48,2 +48,14 @@
 #include <string.h>
+#ifdef __MINGW32__
+#include <winsock2.h>
+#include <ws2tcpip.h>
+struct sockaddr_un
+{
+  short          sun_family;
+  unsigned short sun_port;
+  struct         in_addr sun_addr;
+  char           sun_path[108-2-4];
+};
+#undef CreateMutex
+#endif

@@ -246,2 +258,3 @@

+#ifndef __MINGW32__
        /* close on exec */
@@ -252,2 +265,3 @@
        }
+#endif

EOF
# fix pkcs11/rpc-layer/gkm-rpc-dispatch.c (version >= 3.2.2)
patch -ulbf pkcs11/rpc-layer/gkm-rpc-dispatch.c << EOF
--- pkcs11/rpc-layer/gkm-rpc-dispatch.c  2011-10-14 20:45:24 +0200
+++ pkcs11/rpc-layer/gkm-rpc-dispatch.c  2011-11-30 11:21:00 +0100
@@ -47,2 +47,13 @@
 #include <glib.h>
+#ifdef __MINGW32__
+#include <winsock2.h>
+#include <ws2tcpip.h>
+struct sockaddr_un
+{
+  short          sun_family;
+  unsigned short sun_port;
+  struct         in_addr sun_addr;
+  char           sun_path[108-2-4];
+};
+#endif

EOF
# fix pkcs11/rpc-layer/gkm-rpc-daemon-standalone.c (version >= 3.2.2)
mv pkcs11/rpc-layer/gkm-rpc-daemon-standalone.c pkcs11/rpc-layer/gkm-rpc-daemon-standalone.c.bak
echo "#include <winsock2.h>" > pkcs11/rpc-layer/gkm-rpc-daemon-standalone.c
cat pkcs11/rpc-layer/gkm-rpc-daemon-standalone.c.bak >> pkcs11/rpc-layer/gkm-rpc-daemon-standalone.c
# fix pkcs11/gnome2-store/gkm-gnome2-storage.c (version >= 3.2.2)
mv pkcs11/gnome2-store/gkm-gnome2-storage.c pkcs11/gnome2-store/gkm-gnome2-storage.c.bak
cat > pkcs11/gnome2-store/gkm-gnome2-storage.c << EOF
#define F_SETLKW 0
#define F_SETLK  1
#define F_RDLCK  2
#define F_WRLCK  3
#define F_UNLCK  4
EOF
cat pkcs11/gnome2-store/gkm-gnome2-storage.c.bak >> pkcs11/gnome2-store/gkm-gnome2-storage.c
# fix missing memrchr in egg/egg-armor.c
mv egg/egg-armor.c egg/egg-armor.c.bak
cat > egg/egg-armor.c << EOF
#include <string.h>
inline void* memrchr (const void* buf, int c, size_t num)
{
  unsigned char* p;
  if (num == 0)
    return NULL;
  for (p = (unsigned char*)buf + num - 1; p >= (unsigned char*)buf; p--) {
    if (*p == (unsigned char)c)
      break;
  }
  if (p >= (unsigned char*)buf)
    return ((void*)p);
  return NULL;
}
EOF
cat egg/egg-armor.c.bak >> egg/egg-armor.c
# fix missing w32_strerror and stpcpy in egg/dotlock.c
mv egg/dotlock.c egg/dotlock.c.bak
cat > egg/dotlock.c << EOF
//#define w32_strerror(errnr) "Error "#errnr
#define w32_strerror(errnr) "ERROR"
static char* stpcpy (char *dest, const char *src)
{
  register char *d = dest;
  register const char *s = src;
  do
    *d++ = *s;
  while (*s++);
  return (d - 1);
}
EOF
cat egg/dotlock.c.bak >> egg/dotlock.c
# fix missing getpass in pkcs11/secret-store/tests/dump-keyring0-format.c
mv pkcs11/secret-store/tests/dump-keyring0-format.c pkcs11/secret-store/tests/dump-keyring0-format.c.bak
cat > pkcs11/secret-store/tests/dump-keyring0-format.c << EOF
char* getpass (const char* prompt) {
 struct strbuf buf = STRBUF_INIT;
 fputs(prompt, stderr);
 for (;;) {
  char c = _getch();
  if (c == '\r' || c == '\n')
   break;
  strbuf_addch(&buf, c);
 }
 fputs("\n", stderr);
 return strbuf_detach(&buf, NULL);
}
EOF
cat pkcs11/secret-store/tests/dump-keyring0-format.c.bak >> pkcs11/secret-store/tests/dump-keyring0-format.c
## fix invalid number of parameters to g_open in pkcs11/gkm/gkm-transaction.c (version >= 3.20.1)
#patch -ulbf pkcs11/gkm/gkm-transaction.c << EOF
#@@ -189,3 +189,3 @@
#        do {
#-               srcfd = g_open (srcname, (O_RDONLY | O_BINARY));
#+               srcfd = g_open (srcname, (O_RDONLY | O_BINARY), 0);
#        } while (srcfd == -1 && errno == EINTR);
#EOF
## fix missing gmtime_r in pkcs11/gkm/gkm-attributes.c (version >= 3.20.1)
#mv pkcs11/gkm/gkm-attributes.c pkcs11/gkm/gkm-attributes.c.bak &&
#echo "#define strptime(s,dmt,tm) NULL" > pkcs11/gkm/gkm-attributes.c &&
#cat pkcs11/gkm/gkm-attributes.c.bak >> pkcs11/gkm/gkm-attributes.c
## fix missing  g_open() parameter in pkcs11/gkm/gkm-transaction.c (version >= 3.27.2)
#mv pkcs11/gkm/gkm-transaction.c pkcs11/gkm/gkm-transaction.c.bak &&
#sed -e "s/\(g_open[^,]*,[^,]*\)\();\)/\1, 0\2/g" pkcs11/gkm/gkm-transaction.c.bak > pkcs11/gkm/gkm-transaction.c
## fix missing pwd.h (version 3.0.1)
#touch egg/tests/pwd.h
# avoid making egg/tests (version 3.0.1)
cat > egg/tests/Makefile.in << EOF
clean:
all:
install:
install-strip:
EOF
# avoid making gcr/tests (version 3.0.1)
cat > gcr/tests/Makefile.in << EOF
clean:
all:
install:
install-strip:
EOF
# avoid making pkcs11/gkm/tests (version >= 3.3.3)
cat > pkcs11/gkm/tests/Makefile.in << EOF
clean:
all:
install:
install-strip:
EOF
# avoid making pkcs11/wrap-layer/tests (version >= 3.3.5)
cat > pkcs11/wrap-layer/tests/Makefile.in << EOF
clean:
all:
install:
install-strip:
EOF
# fix problem detecting GNU gettext tools on 64-bit
if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 mv configure configure.bak
 sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
fi
# fix missing gio-unix in configure (version >= 3.18.0)
mv configure configure.bak2
sed -e "s/gio-unix-/gio-windows-/" configure.bak2 > configure
wl-showstatus configure &&
 # use strptime from plibc
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lplibc" &&
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-root-certs --with-gtk=3.0 LDFLAGS="-Wl,--as-needed -lplibc" &&
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-root-certs --with-gtk=3.0 --disable-gpg-agent --enable-debug=no --enable-tests=no --disable-p11-tests LDFLAGS="-Wl,--as-needed -lplibc" &&
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-root-certs --with-gtk=3.0 --disable-gpg-agent --enable-debug=no --enable-tests=no --disable-p11-tests LDFLAGS="-Wl,--as-needed -lplibc -lpthread" &&
 #PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-root-certs --with-gtk=3.0 --disable-gpg-agent --enable-debug=no --enable-tests=no --disable-p11-tests LDFLAGS="-Wl,--as-needed -lplibc -lpthread" &&
 #PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-root-certs --with-gtk=3.0 --disable-gpg-agent --enable-debug=no --enable-tests=no --disable-p11-tests LDFLAGS="-Wl,--as-needed -lpthread" &&
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-root-certs --with-gtk=3.0 --disable-gpg-agent --enable-debug=no --enable-tests=no --disable-p11-tests LDFLAGS="-Wl,--as-needed -lpthread" &&
 PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --without-root-certs --with-gtk=3.0 --disable-gpg-agent --disable-pam --without-systemd --disable-selinux --disable-p11-tests --disable-debug --disable-tests LDFLAGS="-Wl,--as-needed -lpthread" &&
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-debug=no --disable-p11-tests --without-libcap-ng LDFLAGS="-Wl,--as-needed -lpthread" &&
 # fix incorrect library in all Makefiles
 for F in $(find . -name Makefile); do
  sed -i.orig -e "s/-lgcr-3/-lgcr-base-3/" $F
 done &&
 #( make install-strip || make -C library install-strip ) &&
 #( make install-strip || ( make -C gck install-strip && make -C gcr install-strip && make -C tool install-strip && ( make -i install-strip || true))) &&
 #( make install-strip || ( make -C tool install-strip && ( make -i install-strip || true))) &&
 ( make install-strip || ( make gnome-keyring-3.exe && ( make -i install-strip || true))) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####gck/gck-attributes.c:1258: undefined reference to `__sync_fetch_and_sub_4'
#make clean; make CFLAGS="-march=i686" CXXFLAGS="-march=i686" && echo OK



