#export NAME="Artistic Style"
#export STATUS=
#export URL=http://astyle.sourceforge.net/
#export BASENAME=astyle
#export DESCRIPTION="A Free, Fast and Small Automatic Formatter for C, C++, C#, and Java Source Code"
#export CATEGORY=development
#export TYPE=application
##export VERSION=2.02.1
##export VERSIONDATE=20111208
##export VERSION=2.03
##export VERSIONDATE=20130414
##export VERSION=2.04
##export VERSIONDATE=20131102
##export VERSION=2.05
##export VERSIONDATE=20141118
##export VERSION=2.05.1
##export VERSIONDATE=20141211
##export VERSION=2.06
##export VERSIONDATE=20161228
##export VERSION=3.0
##export VERSIONDATE=20170403
##export VERSION=3.0.1
##export VERSIONDATE=20170531
#export VERSION=3.1
#export VERSIONDATE=20180112
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=pexports
##export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
##export LICENSEFILE=doc/license.html
##export LICENSETYPE=LGPL
#export LICENSEFILE=LICENSE.md
#export LICENSETYPE=MIT
#export DOWNLOADURL="http://sourceforge.net/projects/astyle/files/astyle/ astyle%20"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/astyle/astyle/astyle%20$VERSION/astyle_$VERSION\_linux.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#mkdir -p $BASENAME-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/astyle_$VERSION\_linux.tar.gz -C$BASENAME-$VERSION
#cd $BASENAME-$VERSION/astyle
### fix src/astyle_main.h for 64-bit (version <= 2.02.1)
##patch -ulbf src/astyle_main.h << EOF
##--- src/astyle_main.h  2011-11-21 16:15:44 +0100
##+++ src/astyle_main.h  2011-12-08 08:33:52 +0100
##@@ -70,3 +70,3 @@
## // for mingw BOM, UTF-16, and Unicode functions
##-#if defined(__MINGW32__)
##+#if defined(__MINGW32__) && !defined(__MINGW64__)
## #if (__MINGW32_MAJOR_VERSION > 3)  || ((__MINGW32_MAJOR_VERSION == 3) && (__MINGW32_MINOR_VERSION < 16))
##EOF
## fix build/gcc/Makefile (version >= 3.0.0)
#sed -i.bak -e "s/-soname\(,lib[^ ]*\)\.so\.\$(MAJORVER)/--out-implib\1.dll.a/; s/\.so\.\$(SOLIBVER)/.dll/; s/\.so\b/.dll/g" build/gcc/Makefile
## avoid -fPIC (useless on Windows and not supported by clang) in build/gcc/Makefile
#sed -i.bak2 -e "s/-fPIC//" build/gcc/Makefile
#make -C build/gcc release shared static prefix=$INSTALLPREFIX &&
# make -C build/gcc install prefix=$INSTALLPREFIX USER=0 &&
# mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/lib $INSTALLPREFIX/include &&
# cp -f src/astyle*.h $INSTALLPREFIX/include/ &&
# cp -f build/gcc/bin/libastyle.a $INSTALLPREFIX/lib/ &&
# #( cp -f build/gcc/bin/libastyle.so $INSTALLPREFIX/bin/libastyle.dll || cp -f build/gcc/bin/libastyle*.so $INSTALLPREFIX/bin/libastyle.dll ) &&
# #pexports -o $INSTALLPREFIX/bin/libastyle.dll > libastyle.def &&
# #dlltool --def libastyle.def --dllname $INSTALLPREFIX/bin/libastyle.dll --output-lib $INSTALLPREFIX/lib/libastyle.dll.a &&
# cp -f build/gcc/libastyle.dll.a $INSTALLPREFIX/lib/ &&
# cp -f build/gcc/bin/libastyle.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="Artistic Style"
#export STATUS=
#export URL=http://astyle.sourceforge.net/
#export BASENAME=astyle
#export DESCRIPTION="A Free, Fast and Small Automatic Formatter for C, C++, C#, and Java Source Code"
#export CATEGORY=development
#export TYPE=application
##export VERSION=2.02.1
##export VERSIONDATE=20111208
##export VERSION=2.03
##export VERSIONDATE=20130414
##export VERSION=2.04
##export VERSIONDATE=20131102
##export VERSION=2.05
##export VERSIONDATE=20141118
##export VERSION=2.05.1
##export VERSIONDATE=20141211
##export VERSION=2.06
##export VERSIONDATE=20161228
##export VERSION=3.0
##export VERSIONDATE=20170403
##export VERSION=3.0.1
##export VERSIONDATE=20170531
#export VERSION=3.1
#export VERSIONDATE=20180112
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=pexports
##export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
##export LICENSEFILE=doc/license.html
##export LICENSETYPE=LGPL
#export LICENSEFILE=LICENSE.md
#export LICENSETYPE=MIT
#export DOWNLOADURL="http://sourceforge.net/projects/astyle/files/astyle/ astyle%20"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/astyle/astyle/astyle%20$VERSION/astyle_$VERSION\_linux.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#mkdir -p $BASENAME-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/astyle_$VERSION\_linux.tar.gz -C$BASENAME-$VERSION
#cd $BASENAME-$VERSION/astyle
### fix src/astyle_main.h for 64-bit (version <= 2.02.1)
##patch -ulbf src/astyle_main.h << EOF
##--- src/astyle_main.h  2011-11-21 16:15:44 +0100
##+++ src/astyle_main.h  2011-12-08 08:33:52 +0100
##@@ -70,3 +70,3 @@
## // for mingw BOM, UTF-16, and Unicode functions
##-#if defined(__MINGW32__)
##+#if defined(__MINGW32__) && !defined(__MINGW64__)
## #if (__MINGW32_MAJOR_VERSION > 3)  || ((__MINGW32_MAJOR_VERSION == 3) && (__MINGW32_MINOR_VERSION < 16))
##EOF
## fix build/gcc/Makefile (version >= 3.0.0)
#sed -i.bak -e "s/-soname\(,lib[^ ]*\)\.so\.\$(MAJORVER)/--out-implib\1.dll.a/; s/\.so\.\$(SOLIBVER)/.dll/; s/\.so\b/.dll/g" build/gcc/Makefile
## avoid -fPIC (useless on Windows and not supported by clang) in build/gcc/Makefile
#sed -i.bak2 -e "s/-fPIC//" build/gcc/Makefile
#make -C build/gcc release shared static prefix=$INSTALLPREFIX &&
# make -C build/gcc install prefix=$INSTALLPREFIX USER=0 &&
# mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/lib $INSTALLPREFIX/include &&
# cp -f src/astyle*.h $INSTALLPREFIX/include/ &&
# cp -f build/gcc/bin/libastyle.a $INSTALLPREFIX/lib/ &&
# #( cp -f build/gcc/bin/libastyle.so $INSTALLPREFIX/bin/libastyle.dll || cp -f build/gcc/bin/libastyle*.so $INSTALLPREFIX/bin/libastyle.dll ) &&
# #pexports -o $INSTALLPREFIX/bin/libastyle.dll > libastyle.def &&
# #dlltool --def libastyle.def --dllname $INSTALLPREFIX/bin/libastyle.dll --output-lib $INSTALLPREFIX/lib/libastyle.dll.a &&
# cp -f build/gcc/libastyle.dll.a $INSTALLPREFIX/lib/ &&
# cp -f build/gcc/bin/libastyle.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="Artistic Style"
#export STATUS=
#export URL=http://astyle.sourceforge.net/
#export BASENAME=astyle
#export DESCRIPTION="A Free, Fast and Small Automatic Formatter for C, C++, C#, and Java Source Code"
#export CATEGORY=development
#export TYPE=application
##export VERSION=3.2.1
##export VERSIONDATE=20230402
##export VERSION=3.3
##export VERSIONDATE=20230519
##export VERSION=3.3.1
##export VERSIONDATE=20230525
##export VERSION=3.4
##export VERSIONDATE=20230618
##export VERSION=3.4.6
##export VERSIONDATE=20230829
##export VERSION=3.4.8
##export VERSIONDATE=20230924
##export VERSION=3.4.9
##export VERSIONDATE=20231019
##export VERSION=3.4.10
##export VERSIONDATE=20231022
##export VERSION=3.4.11
##export VERSIONDATE=20240110
##export VERSION=3.4.12
##export VERSIONDATE=20240206
##export VERSION=3.4.13
##export VERSIONDATE=20240313
##export VERSION=3.4.14
##export VERSIONDATE=20240424
##export VERSION=3.4.15
##export VERSIONDATE=20240510
##export VERSION=3.4.16
##export VERSIONDATE=20240521
##export VERSION=3.5
##export VERSIONDATE=20240606
##export VERSION=3.5.1
##export VERSIONDATE=20240701
#####src/astyle_main.cpp:4216:39: error: no matching function for call to 'astyle::ASOptions::parseOptions(std::vector<std::__cxx11::basic_string<char> >&, const char [32])'
##export VERSION=3.5.2
##export VERSIONDATE=20240708
##export VERSION=3.6
##export VERSIONDATE=20240810
##export VERSION=3.6.1
##export VERSIONDATE=20240906
##export VERSION=3.6.2
##export VERSIONDATE=20240912
##export VERSION=3.6.3
##export VERSIONDATE=20241001
##export VERSION=3.6.4
##export VERSIONDATE=20241101
#export VERSION=3.6.5
#export VERSIONDATE=20241207
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.md
#export LICENSETYPE=MIT
#export DOWNLOADURL="http://sourceforge.net/projects/astyle/files/astyle/ astyle%20"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/astyle/astyle/astyle%20$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/astyle-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#mkdir -p $BASENAME-$VERSION
#tar xj --force-local -f $TARBALLDIR/$BASENAME/astyle-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
## avoid --add-stdcall-alias/--dll linker flags which are not supported in LLVM/LLD (version >= 3.4.10)
#sed -i.bak -e "s/-Wl,--add-stdcall-alias -Wl,--dll//" build/cmake/LinkerOptions.cmake
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_STATIC_LIBS:BOOL=ON -DBUILD_JAVA_LIBS:BOOL=OFF -S. -Bbuild_static &&
# #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_STATIC_LIBS:BOOL=OFF -DBUILD_JAVA_LIBS:BOOL=OFF -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# ## fix missing link libraries
# #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
# wl-showstatus build &&
# ninja -Cbuild_static &&
# wl-showstatus build &&
# ninja -Cbuild_shared &&
# #wl-showstatus build-install &&
# #ninja -Cbuild_static install/strip &&
# #wl-showstatus build-install &&
# #ninja -Cbuild_shared install/strip &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/lib $INSTALLPREFIX/include &&
# cp -f src/astyle*.h $INSTALLPREFIX/include/ &&
# cp -f build_static/*.a build_shared/*.a $INSTALLPREFIX/lib/ &&
# cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Artistic Style"
export STATUS=
export URL=http://astyle.sourceforge.net/
export BASENAME=astyle
export DESCRIPTION="A Free, Fast and Small Automatic Formatter for C, C++, C#, and Java Source Code"
export CATEGORY=development
export TYPE=application
#export VERSION=3.6.6
#export VERSIONDATE=20241216
#export VERSION=3.6.7
#export VERSIONDATE=20250228
export VERSION=3.6.8
export VERSIONDATE=20250327
wl-showstatus --package-version
export DEPENDENCIES=
#export DEPENDENCIES=wxwidgets
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE=MIT
#export DOWNLOADURL="https://sourceforge.net/projects/astyle/files/astyle/ astyle%20"
export DOWNLOADURL="https://gitlab.com/saalen/astyle/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/astyle/astyle/astyle%20$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/astyle-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://gitlab.com/saalen/astyle/-/archive/$VERSION/astyle-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
mkdir -p $BASENAME-$VERSION
tar xj --force-local -f $TARBALLDIR/$BASENAME/astyle-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# disable building against wxWidgets in CMakeLists.txt (version >= 3.6.6)
patch -ulbf CMakeLists.txt << EOF
@@ -7,3 +7,3 @@
 find_package(wxWidgets)
-if (wxWidgets_FOUND)
+if (FALSE)
     add_subdirectory( AStyleWx )
EOF
# fix library file names AStyle/CMakeLists.txt (version >= 3.6.6)
patch -ulbf AStyle/CMakeLists.txt << EOF
@@ -174,3 +174,3 @@
 if(BUILD_JAVA_LIBS)
-    if(WIN32)
+    if(MSVC)
         set_property(TARGET astyle PROPERTY OUTPUT_NAME AStyle32j)
@@ -181,3 +181,3 @@
 elseif(BUILD_SHARED_LIBS)
-    if(WIN32)
+    if(MSVC)
         set_property(TARGET astyle PROPERTY OUTPUT_NAME AStyle32)
@@ -186,3 +186,3 @@
 elseif(BUILD_STATIC_LIBS)
-    if(WIN32)
+    if(MSVC)
         set_property(TARGET astyle PROPERTY OUTPUT_NAME AStyleLib)
@@ -191,3 +191,3 @@
 else()
-    if(WIN32)
+    if(MSVC)
         set_property(TARGET astyle PROPERTY OUTPUT_NAME AStyle)
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_STATIC_LIBS:BOOL=ON -DWXSHARED:BOOL=OFF -DwxWidgets_CONFIGURATION:STRING=mswu -D-DWXWIN:PATH=$MINGWPREFIX/wx/lib/cmake/wxWidgets -DBUILD_JAVA_LIBS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_STATIC_LIBS:BOOL=OFF -DWXSHARED:BOOL=ON -DwxWidgets_CONFIGURATION:STRING=mswu -D-DWXWIN:PATH=$MINGWPREFIX/wx/lib/cmake/wxWidgets -DBUILD_JAVA_LIBS:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build &&
 ninja -Cbuild_static &&
 wl-showstatus build &&
 ninja -Cbuild_shared &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/lib $INSTALLPREFIX/include &&
 cp -f AStyle/src/*.h $INSTALLPREFIX/include/ &&
 cp -f build_static/AStyle/*.a build_shared/AStyle/*.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/AStyle/*.dll $INSTALLPREFIX/bin/ &&
 cp -u $INSTALLPREFIX/lib/libastyle.a $INSTALLPREFIX/lib/libAStyleLib.a &&
 cp -u $INSTALLPREFIX/lib/libastyle.dll.a $INSTALLPREFIX/lib/libAStyle32.dll.a &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



