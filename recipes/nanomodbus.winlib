export NAME="nanoMODBUS"
export STATUS=
export URL=https://github.com/debevv/nanoMODBUS
export BASENAME=nanomodbus
export DESCRIPTION="A compact MODBUS RTU/TCP C library for embedded/microcontrollers"
export CATEGORY=communication
export TYPE=library
#export VERSION=1.21.0
#export VERSIONDATE=20250707
export VERSION=1.22.0
export VERSIONDATE=20250923
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/debevv/nanoMODBUS/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/debevv/nanoMODBUS/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix examples/win32/comm.h (version >= 1.21.0)
patch -ulbf examples/win32/comm.h << EOF
@@ -10,3 +10,3 @@
 bool CloseCommPort(HANDLE* hComm);
-int32_t WriteToCommPort(HANDLE hComm, uint8_t* data_ptr, int data_length);
+int32_t WriteToCommPort(HANDLE hComm, const uint8_t* data_ptr, int data_length);
 int32_t ReadCommPort(HANDLE hComm, uint8_t* buf, uint16_t count, int32_t byte_timeout_ms);
\\ No newline at end of file
EOF
# fix examples/win32/comm.c (version >= 1.21.0)
patch -ulbf examples/win32/comm.c << EOF
@@ -5,5 +5,5 @@

-UINT WriteToCommPort(HANDLE hComm, uint8_t* data_ptr, int data_length) {
+UINT WriteToCommPort(HANDLE hComm, const uint8_t* data_ptr, int data_length) {

-    int actual_length;
+    DWORD actual_length;

@@ -108,3 +108,3 @@
     uint8_t b;
-    int tmpByteCount;
+    DWORD tmpByteCount;

EOF
# fix undefined GetTickCount64 in examples/win32/comm.c (version >= 1.21.0)
if echo $RUNPLATFORM|grep -q "^i.86"; then
 sed -i.bak -e "s/\(GetTickCount\)64/\1/" examples/win32/comm.c
fi
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 wl-showstatus build-static &&
 ninja -Cbuild_static &&
 wl-showstatus build-shared &&
 ninja -Cbuild_shared &&
 ${CC:-gcc} -c -o examples/win32/comm.o examples/win32/comm.c -I examples/win32 &&
 ${CC:-gcc} -c -o examples/win32/modbus_cli.o examples/win32/modbus_cli.c -I examples/win32 &&
 ${CC:-gcc} -s -o build_shared/nanomodbus_cli.exe examples/win32/modbus_cli.o examples/win32/comm.o build_shared/libnanomodbus.dll.a &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f *.h $INSTALLPREFIX/include/ &&
 cp -f build_static/*.a build_shared/*.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/*.dll build_shared/*.exe $INSTALLPREFIX/bin/ &&
 #wl-showstatus build-install-static &&
 #ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install-shared &&
 #ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



