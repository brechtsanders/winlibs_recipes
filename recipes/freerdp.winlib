#export NAME="FreeRDP"
#export STATUS=
#export URL=http://www.freerdp.com/
#export BASENAME=freerdp
#export DESCRIPTION="FreeRDP is a free implementation of the Remote Desktop Protocol (RDP), released under the Apache license."
#export CATEGORY=communication
#export TYPE=library
##export VERSION=1.0-beta4
##export VERSIONDATE=20111226
##export VERSION=1.0.0
##export VERSIONDATE=20120117
##export DEPENDENCIES=openssl,pthreads
##export VERSION=1.0.1
##export VERSIONDATE=20120210
#export VERSION=1.0.2
#export VERSIONDATE=20151006
##export VERSION=2.0.0-rc1
##export VERSIONDATE=20180326
##export VERSION=2.0.0-rc3
##export VERSIONDATE=20181012
##export VERSION=2.0.0-rc4
##export VERSIONDATE=20190120
##export VERSION=2.0.0
##export VERSIONDATE=20200410
##export VERSION=2.1.0
##export VERSIONDATE=20200508
##export VERSION=2.1.1
##export VERSIONDATE=20200521
##export VERSION=2.1.2
##export VERSIONDATE=20200622
##export VERSION=2.2.0
##export VERSIONDATE=20200721
##export VERSION=2.3.0
##export VERSIONDATE=20210225
##export VERSION=2.3.2
##export VERSIONDATE=20210315
##export VERSION=2.4.0
##export VERSIONDATE=20210727
##export VERSION=2.4.1
##export VERSIONDATE=20211021
##export VERSION=2.5.0
##export VERSIONDATE=20220112
##export VERSION=2.6.0
##export VERSIONDATE=20220222
##export VERSION=2.6.1
##export VERSIONDATE=20220308
##export VERSION=2.7.0
##export VERSIONDATE=20220426
##export VERSION=2.8.0
##export VERSIONDATE=20220729
##export VERSION=2.8.1
##export VERSIONDATE=20221012
##export VERSION=2.9.0
##export VERSIONDATE=20221117
##export VERSION=2.10.0
##export VERSIONDATE=20230216
##export VERSION=2.11.0
##export VERSIONDATE=20230828
##export VERSION=2.11.1
##export VERSIONDATE=20230904
##export VERSION=2.11.2
##export VERSIONDATE=20230920
##export VERSION=2.11.5
##export VERSIONDATE=20240119
##export VERSION=2.11.6
##export VERSIONDATE=20240417
##export VERSION=3.0.0
##export VERSIONDATE=20231213
##export VERSION=3.2.0
##export VERSIONDATE=20240119
##export VERSION=3.3.0
##export VERSIONDATE=20240223
#wl-showstatus --package-version
#export DEPENDENCIES=openssl,pthreads,libxkbfile,libx11
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
##export BUILDDEPENDENCIES=cmake,ninja
##export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE="Apache License"
##export DOWNLOADURL="https://github.com/FreeRDP/FreeRDP/downloads FreeRDP-"
##export DOWNLOADURL="https://github.com/FreeRDP/FreeRDP/downloads"
#export DOWNLOADURL="https://github.com/FreeRDP/FreeRDP/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/downloads/FreeRDP/FreeRDP/FreeRDP-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://github.com/downloads/FreeRDP/FreeRDP/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/FreeRDP/FreeRDP/archive/$VERSION.tar.gz
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/FreeRDP-$VERSION.tar.gz
#wl-wait4deps
##tar xz --force-local -f $TARBALLDIR/$BASENAME/FreeRDP-$VERSION.tar.gz
##mv FreeRDP-* $BASENAME-$VERSION
#wl-showstatus download
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd FreeRDP-$VERSION
## fix definition of boolean in include/freerdp/types.h
#patch -ulbf include/freerdp/types.h << EOF
#--- include/freerdp/types.h  2012-02-10 03:01:42 +0100
#+++ include/freerdp/types.h  2012-03-06 23:59:32 +0100
#@@ -67,3 +67,3 @@
#
#-#ifdef HAVE_STDBOOL_H
#+#if defined(HAVE_STDBOOL_H) && !defined(_WIN32)
#
#EOF
## fix define conflicts
#cat >> libfreerdp-core/tcp.h << EOF
##undef X509_NAME
##undef X509_EXTENSIONS
#EOF
## fix missing struct timeval on 32-bit in libfreerdp-utils/pcap.c
#patch -ulbf libfreerdp-utils/pcap.c << EOF
#--- libfreerdp-utils/pcap.c  2012-02-10 03:01:42 +0100
#+++ libfreerdp-utils/pcap.c  2012-03-08 22:53:22 +0100
#@@ -28,3 +28,3 @@
#
#-#if !defined(__MINGW32__) && !defined(__MINGW64__)
#+#if defined(__MINGW32__) && !defined(__MINGW64__) && !`if ${CC:-gcc} --version|grep "MinGW-W64">/dev/null; then echo 1; else echo 0; fi`
# struct timeval
#EOF
### fix libfreerdp-core/listener.c
##patch -ulbf libfreerdp-core/listener.c << EOF
##--- libfreerdp-core/listener.c  2012-03-08 22:57:30 +0100
##+++ libfreerdp-core/listener.c  2012-03-08 22:57:36 +0100
##@@ -34,2 +34,6 @@
## #else
##+#if _WIN32_WINNT < 0x0501
##+#define _WIN32_WINNT 0x0501
##+#endif
##+#include <ws2tcpip.h>
## #define close(_fd) closesocket(_fd)
##EOF
## fix missing inet_ntop in libfreerdp-core/listener.c
#mv libfreerdp-core/listener.c libfreerdp-core/listener.c.bak
#cat > libfreerdp-core/listener.c << EOF
##include <io.h>
##include <stdio.h>
##define _WIN32_WINNT 0x0501
##include <winsock2.h>
##include <ws2tcpip.h>
##define close(_fd) closesocket(_fd)
#inline const char* inet_ntop (int af, void const *src, char *dst, size_t dstlen)
#{
#  struct sockaddr_in srcaddr;
#  memset(&srcaddr, 0, sizeof(struct sockaddr_in));
#  memcpy(&(srcaddr.sin_addr), src, sizeof(srcaddr.sin_addr));
#  srcaddr.sin_family = af;
#  if (WSAAddressToString((struct sockaddr*)&srcaddr, sizeof(struct sockaddr_in), 0, dst, (LPDWORD)&dstlen) != 0) {
#    DWORD rv = WSAGetLastError();
#    fprintf(stderr, "WSAAddressToString() : %d\n",rv);
#    return NULL;
#  }
#  return dst;
#}
#EOF
#cat libfreerdp-core/listener.c.bak >> libfreerdp-core/listener.c
## fix missing GetConsoleWindow in client/Windows/wfreerdp.c (version <= 1.0.1)
#mv client/Windows/wfreerdp.c client/Windows/wfreerdp.c.bak
#echo "#define _WIN32_WINNT 0x0500" > client/Windows/wfreerdp.c
#cat client/Windows/wfreerdp.c.bak >> client/Windows/wfreerdp.c
## fix invalid parameters
#mv CMakeLists.txt CMakeLists.txt.bak
#sed -e "s/ -Wno-unused-result\| -Wno-unused-but-set-variable//g" CMakeLists.txt.bak > CMakeLists.txt
##cat >> CMakeLists.txt << EOF
##if(WIN32)
##  find_required_package(ZLIB)
##  find_optional_package(PulseAudio)
##  find_optional_package(PCSC)
##  find_optional_package(FFmpeg)
##  add_subdirectory(libfreerdp-kbd)
##  #add_subdirectory(channels)
##endif()
##EOF
#cat >> CMakeLists.txt << EOF
#if(WIN32)
#  find_package(ZLIB REQUIRED)
#  find_package(PulseAudio)
#  find_package(PCSC)
#  find_package(FFmpeg)
#  add_subdirectory(libfreerdp-kbd)
#  #add_subdirectory(channels)
#endif()
#EOF
### fix winpr/include/winpr/nt.h (version >= 2.0.0)
##patch -ulbf winpr/include/winpr/nt.h << EOF
##@@ -1288,2 +1288,3 @@
##
##+#ifndef __MINGW32__
## typedef enum _FILE_INFORMATION_CLASS
##@@ -1331,2 +1332,3 @@
## } FILE_INFORMATION_CLASS;
##+#endif
##
##EOF
### fix winpr/libwinpr/sspi/NTLM/ntlm.h (version >= 2.0.0)
##patch -ulbf winpr/libwinpr/sspi/NTLM/ntlm.h << EOF
##@@ -79,2 +79,3 @@
##
##+#ifndef __MINGW32__
## enum _NTLM_AV_ID
##@@ -94,2 +95,3 @@
## typedef enum _NTLM_AV_ID NTLM_AV_ID;
##+#endif
##
##EOF
### fix missing MsvAvTimestamp in winpr/libwinpr/sspi/NTLM/ntlm.h (version >= 2.0.0-rc4)
##mv winpr/libwinpr/sspi/NTLM/ntlm.h winpr/libwinpr/sspi/NTLM/ntlm.h.bak
##cat > winpr/libwinpr/sspi/NTLM/ntlm.h << EOF
###if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0602
###undef _WIN32_WINNT
###define _WIN32_WINNT 0x0602
###endif
###define InterlockedAdd64 dummyInterlockedAdd64
###define _InterlockedAdd64 dummy_InterlockedAdd64
###include <intrin.h>
###undef InterlockedAdd64
###undef _InterlockedAdd64
###include <ntifs.h>
##EOF
##cat winpr/libwinpr/sspi/NTLM/ntlm.h.bak >> winpr/libwinpr/sspi/NTLM/ntlm.h
### fix winpr/include/winpr/spec.h (version >= 2.1.2)
##patch -ulbf winpr/include/winpr/spec.h << EOF
##@@ -961,2 +961,3 @@
## #define DECLSPEC_EXPORT __attribute__((dllexport))
##+#undef DECLSPEC_IMPORT
## #define DECLSPEC_IMPORT __attribute__((dllimport))
##EOF
## fix winpr/include/winpr/spec.h (version >= 2.7.0)
#patch -ulbf winpr/include/winpr/spec.h << EOF
#@@ -960,4 +960,8 @@
# #ifdef __GNUC__
#+#ifndef DECLSPEC_EXPORT
# #define DECLSPEC_EXPORT __attribute__((dllexport))
#+#endif
#+#ifndef DECLSPEC_IMPORT
# #define DECLSPEC_IMPORT __attribute__((dllimport))
#+#endif
# #else
#EOF
### fix cmake/FindOpenSSL.cmake (version >= 2.0.0)
##patch -ulbf cmake/FindOpenSSL.cmake << EOF
##@@ -65,3 +65,3 @@
##
##-IF(WIN32)
##+IF(MSVC)
##   if(${MSVC_RUNTIME} STREQUAL "static")
##EOF
### fix cmake/FindOpenSSL.cmake (version >= 2.0.0-rc3)
##sed -i.bak -e "s/(WIN32)/(MSVC)/" cmake/FindOpenSSL.cmake
### fix error: Unknown generator (version >= 2.0.0-rc3)
##sed -i.bak -e "s/Ninja/MSYS/" CMakeLists.txt
### fix missing find_required_package/find_optional_package (version >= 2.0.0-rc3)
##sed -i.bak2 -e "s/find_\(required\|optional\)_package/find_package/" CMakeLists.txt
#mkdir -Cbuild_win
# wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_LINKER:FILEPATH="ld -Wl,--enable-auto-import" -S. -Bbuild_win &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_C_FLAGS="-DFREERDP_EXPORTS -Dsprintf_s=snprintf" -DWITH_SSE2=OFF -DWITH_SSE2_TARGET=OFF -S. -Bbuild_win &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=OFF -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=ON -DWITH_NEON:BOOL=OFF -DWITH_SSE2=ON -DWITH_SSE2_TARGET=ON -DCMAKE_C_FLAGS="-DFREERDP_EXPORTS -Dsprintf_s=snprintf" -S. -Bbuild_win &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=ON -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=OFF -DWITH_NEON:BOOL=OFF -DWITH_SSE2=ON -DWITH_SSE2_TARGET=ON -DCMAKE_C_FLAGS="-DFREERDP_EXPORTS -Dsprintf_s=snprintf" -S. -Bbuild_win &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=ON -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=ON -DWITH_NEON:BOOL=OFF -DWITH_SSE2:BOOL=ON -DWITH_SSE2_TARGET:BOOL=ON -DCMAKE_C_FLAGS="-DFREERDP_EXPORTS -Dsprintf_s=snprintf" -S. -Bbuild_win &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=ON -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=ON -DWITH_NEON:BOOL=OFF -DWITH_SSE2:BOOL=ON -DWITH_SSE2_TARGET:BOOL=ON -DCMAKE_C_FLAGS="-DFREERDP_EXPORTS" -S. -Bbuild_win &&
# #PKG_CONFIG= cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=ON -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=ON -DWITH_NEON:BOOL=OFF -DWITH_SSE2:BOOL=ON -DWITH_SSE2_TARGET:BOOL=ON -DCMAKE_C_FLAGS="-DFREERDP_EXPORTS" -S. -Bbuild_win &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=ON -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=ON -DWITH_NEON:BOOL=OFF -DWITH_SSE2:BOOL=ON -DWITH_SSE2_TARGET:BOOL=ON -DCMAKE_C_FLAGS="-DFREERDP_EXPORTS" -S. -Bbuild_win &&
# #PKG_CONFIG= cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=OFF -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=ON -DWITH_NEON:BOOL=OFF -DWITH_SSE2:BOOL=ON -DWITH_SSE2_TARGET:BOOL=ON -DWITH_NATIVE_SSPI:BOOL=ON -DCHANNEL_SMARTCARD:BOOL=OFF -DWITH_MBEDTLS=ON -DWITH_JPEG=ON -DWITH_X264=ON -DWITH_GSM=ON -DWITH_GSSAPI=OFF -DWITH_ICU:BOOL=ON -DWITH_OPENH264:BOOL=ON -DWITH_X264:BOOL=ON -DWITH_WINMM:BOOL=ON -DCMAKE_C_FLAGS="-I$(dirname $(find $MINGWDIR -name ntddk.h))" -S. -Bbuild_win &&
# #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=OFF -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=ON -DWITH_NEON:BOOL=OFF -DWITH_SSE2:BOOL=ON -DWITH_SSE2_TARGET:BOOL=ON -DWITH_NATIVE_SSPI:BOOL=ON -DCHANNEL_SMARTCARD:BOOL=OFF -DWITH_MBEDTLS=ON -DWITH_JPEG=ON -DWITH_X264=ON -DWITH_GSM=ON -DWITH_GSSAPI=OFF -DWITH_ICU:BOOL=ON -DWITH_OPENH264:BOOL=ON -DWITH_X264:BOOL=ON -DWITH_WINMM:BOOL=ON -DCMAKE_C_FLAGS="-I$(dirname $(find $MINGWDIR -name ntddk.h))" -S. -Bbuild_win &&
# #echo "-I$(dirname $(find $MINGWDIR -name ntddk.h))" >> build_win/winpr/libwinpr/CMakeFiles/winpr.dir/includes_C.rsp &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
# #ninja -Cbuild_win install/strip &&
# mv $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf FreeRDP-$VERSION



##sed -i.bak -e "s/add_subdirectory(libfreerdp-kbd)/#&/" CMakeLists.txt
#mkdir -Cbuild_win
# wl-showstatus configure &&
# #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=ON -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=ON -DWITH_NEON:BOOL=OFF -DWITH_SSE2:BOOL=ON -DWITH_SSE2_TARGET:BOOL=ON -DCMAKE_C_FLAGS="-DFREERDP_EXPORTS" -S. -Bbuild_win &&
# C_INCLUDE_PATH=$MINGWPREFIX/libav/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/libav/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} LIBRARY_PATH=$MINGWPREFIX/libav/lib${LIBRARY_PATH:+:$LIBRARY_PATH} LD_RUN_PATH=$MINGWPREFIX/libav/lib${LD_RUN_PATH:+:$LD_RUN_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/libav/bin:$PATH PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=ON -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=ON -DWITH_NEON:BOOL=OFF -DWITH_SSE2:BOOL=ON -DWITH_SSE2_TARGET:BOOL=ON -D_OPENSSL_VERSION:STRING=3.0.0 -DCMAKE_C_FLAGS="-DFREERDP_EXPORTS" -S. -Bbuild_win &&
# #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SYSTEM_NAME="Windows" -DBUILD_SHARED_LIBS:BOOL=OFF -DWITH_CLIENT:BOOL=ON -DWITH_SERVER:BOOL=ON -DWITH_NEON:BOOL=OFF -DWITH_SSE2:BOOL=ON -DWITH_SSE2_TARGET:BOOL=ON -DWITH_NATIVE_SSPI:BOOL=ON -DCHANNEL_SMARTCARD:BOOL=OFF -DWITH_MBEDTLS=ON -DWITH_JPEG=ON -DWITH_X264=ON -DWITH_GSM=ON -DWITH_GSSAPI=OFF -DWITH_ICU:BOOL=ON -DWITH_OPENH264:BOOL=ON -DWITH_X264:BOOL=ON -DWITH_WINMM:BOOL=ON -DCMAKE_C_FLAGS="-I$(dirname $(find $MINGWDIR -name ntddk.h))" -S. -Bbuild_win &&
# #echo "-I$(dirname $(find $MINGWDIR -name ntddk.h))" >> build_win/winpr/libwinpr/CMakeFiles/winpr.dir/includes_C.rsp &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
# mv $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf FreeRDP-$VERSION
####See also: http://www.mail-archive.com/freerdp-devel@lists.sourceforge.net/msg01729.html



#### See also: https://github.com/msys2/MINGW-packages/tree/master/mingw-w64-freerdp



export NAME="FreeRDP"
export STATUS=
export URL=http://www.freerdp.com/
export BASENAME=freerdp
export DESCRIPTION="FreeRDP is a free implementation of the Remote Desktop Protocol (RDP), released under the Apache license."
export CATEGORY=communication
export TYPE=library
#export VERSION=3.3.0
#export VERSIONDATE=20240311
#export VERSION=3.4.0
#export VERSIONDATE=20240314
export VERSION=3.5.0
export VERSIONDATE=20240417
wl-showstatus --package-version
export DEPENDENCIES=openssl,pthreads,libxkbfile,libx11
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE="Apache License"
export DOWNLOADURL="https://github.com/FreeRDP/FreeRDP/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/FreeRDP/FreeRDP/archive/$VERSION.tar.gz
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus download
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd FreeRDP-$VERSION
## fix redefinitions in winpr/include/winpr/nt.h
#mv winpr/include/winpr/nt.h winpr/include/winpr/nt.h.bak &&
#echo "#include <windows.h>" > winpr/include/winpr/nt.h &&
#cat winpr/include/winpr/nt.h.bak >> winpr/include/winpr/nt.h
##grep "#define STATUS_" winpr/include/winpr/nt.h.bak >> winpr/include/winpr/nt.h
## fix winpr/include/winpr/spec.h (version >= 2.2.0)
#patch -ulbf winpr/include/winpr/spec.h << EOF
#@@ -958,2 +958,3 @@
#
#+#if !defined(DECLSPEC_EXPORT) && !defined(DECLSPEC_IMPORT)
# #if defined(_WIN32) || defined(__CYGWIN__)
#@@ -974,2 +975,3 @@
# #endif
#+#endif
# #endif
#EOF
## fix winpr/include/winpr/nt.h (version >= 2.6.0)
#patch -ulbf winpr/include/winpr/nt.h << EOF
#@@ -1269,2 +1269,5 @@
#
#+#ifdef __MINGW32__
#+#include <winternl.h>
#+#else
# #ifdef _WIN32
#@@ -1335,2 +1338,3 @@
# } FILE_INFORMATION_CLASS;
#+#endif
#
#EOF
## fix winpr/libwinpr/sspi/NTLM/ntlm.h (version >= 2.6.0)
#patch -ulbf winpr/libwinpr/sspi/NTLM/ntlm.h << EOF
#@@ -81,12 +81,23 @@
# {
#+#define MsvAvEOL FREERDP_MsvAvEOL
#        MsvAvEOL,
#+#define MsvAvNbComputerName FREERDP_MsvAvNbComputerName
#        MsvAvNbComputerName,
#+#define MsvAvNbDomainName FREERDP_MsvAvNbDomainName
#        MsvAvNbDomainName,
#+#define MsvAvDnsComputerName FREERDP_MsvAvDnsComputerName
#        MsvAvDnsComputerName,
#+#define MsvAvDnsDomainName FREERDP_MsvAvDnsDomainName
#        MsvAvDnsDomainName,
#+#define MsvAvDnsTreeName FREERDP_MsvAvDnsTreeName
#        MsvAvDnsTreeName,
#+#define MsvAvFlags FREERDP_MsvAvFlags
#        MsvAvFlags,
#+#define MsvAvTimestamp FREERDP_MsvAvTimestamp
#        MsvAvTimestamp,
#+#define MsvAvSingleHost FREERDP_MsvAvSingleHost
#        MsvAvSingleHost,
#+#define MsvAvTargetName FREERDP_MsvAvTargetName
#        MsvAvTargetName,
#+#define MsvChannelBindings FREERDP_MsvChannelBindings
#        MsvChannelBindings
#EOF
#mkdir -p libfreerdp-kbd; touch libfreerdp-kbd/CMakeLists.txt
#sed -i.bak -e "s/find_required_package/find_package/; s/find_optional_package/#&/" CMakeLists.txt
# fix errors: IMPORTED_IMPLIB not set
echo 'set_property(TARGET cjson PROPERTY IMPORTED_IMPLIB "-lcjson")' >> CMakeLists.txt
echo 'set_property(TARGET cjson_utils PROPERTY IMPORTED_IMPLIB "-lcjson_utils")' >> CMakeLists.txt
mkdir -p build_win
touch build_win/-lcjson build_win/-lcjson_utils &&
mkdir -p build_win &&
 wl-showstatus configure &&
 C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg5/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg5/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg5/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} PATH=$MINGWPREFIX/ffmpeg5/bin:$PATH \
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -D_OPENSSL_VERSION:STRING=$(openssl version|sed -n -e "s/^OpenSSL \([^ ]*\)* .*$/\1/p") -DWITH_WEBVIEW:BOOL=OFF -DWITH_SHADOW:BOOL=OFF -DCHANNEL_DRIVE:BOOL=OFF -DCHANNEL_PRINTER:BOOL=OFF -DCHANNEL_RAIL:BOOL=ON -DCHANNEL_RDPDR:BOOL=OFF -DCHANNEL_RDPGFX:BOOL=OFF -DCHANNEL_RDPSND:BOOL=OFF -DCHANNEL_SMARTCARD:BOOL=OFF -DCHANNEL_SERIAL:BOOL=OFF -DWITH_SERVER:BOOL=OFF -DWITH_WINPR_TOOLS:BOOL=OFF -DWITH_CLANG_FORMAT:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DCMAKE_PREFIX_PATH=$MINGWPREFIX/lib/cmake -DCMAKE_C_FLAGS:STRING="-D_IME_CMODES_ -D_IMM_ -I$(cygpath -m $MINGWPREFIX/include/libdl-win32) -I$(cygpath -m $MINGWPREFIX/ffmpeg5/include)" -S. -Bbuild_win &&
 #-DWITH_NATIVE_SSPI:BOOL=OFF
 # add linker flag
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -ldl/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf FreeRDP-$VERSION
####PATH=$MINGWPREFIX/ffmpeg5/bin:$PATH wfreerdp.exe
####PATH=$MINGWPREFIX/ffmpeg5/bin:$PATH sdl-freerdp.exe
####TO DO: application exits on startup



