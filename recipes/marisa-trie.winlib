#export NAME="marisa-trie"
#export STATUS=
#export URL=https://github.com/s-yata/marisa-trie
#export BASENAME=marisa-trie
#export DESCRIPTION="MARISA: Matching Algorithm with Recursively Implemented StorAge"
#export CATEGORY=development
#export TYPE=library
##export VERSION=0.2.6
##export VERSIONDATE=20240108
#export VERSION=0.2.7
#export VERSIONDATE=20250517
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING.md
#export LICENSETYPE=BSD
#export DOWNLOADURL="https://github.com/s-yata/marisa-trie/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/s-yata/marisa-trie/archive/refs/tags/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
#wl-showstatus preconfigure &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# wl-showstatus configure &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-sse2 &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="marisa-trie"
export STATUS=
export URL=https://github.com/s-yata/marisa-trie
export BASENAME=marisa-trie
export DESCRIPTION="MARISA: Matching Algorithm with Recursively Implemented StorAge"
export CATEGORY=development
export TYPE=library
export VERSION=0.3.0
export VERSIONDATE=20250527
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.md
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/s-yata/marisa-trie/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/s-yata/marisa-trie/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix undefined WIN32_MEMORY_RANGE_ENTRY in lib/marisa/grimoire/io/mapper.cc (version >= 0.3.0)
sed -i.bak -e "1i #if \!defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0602\n#undef _WIN32_WINNT\n#define _WIN32_WINNT 0x0602\n#endif" lib/marisa/grimoire/io/mapper.cc
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install-static &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install-shared &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



