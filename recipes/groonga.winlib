export NAME="Groonga"
export STATUS=
export URL=http://groonga.org/
export BASENAME=groonga
export DESCRIPTION="Groonga is an open-source fulltext search engine and column store. It lets you write high-performance applications that requires fulltext search."
export CATEGORY=database
export TYPE=application,library
#export VERSION=5.1.2
#export VERSIONDATE=20160215
#export VERSION=6.0.0
#export VERSIONDATE=20160227
#export VERSION=6.0.1
#export VERSIONDATE=20160328
#export VERSION=6.0.2
#export VERSIONDATE=20160427
#export VERSION=6.0.3
#export VERSIONDATE=20160529
#export VERSION=6.0.4
#export VERSIONDATE=20160606
#export VERSION=6.0.5
#export VERSIONDATE=20160629
#export VERSION=6.0.7
#export VERSIONDATE=20160729
#export VERSION=6.0.8
#export VERSIONDATE=20160829
#export VERSION=6.0.9
#export VERSIONDATE=20160929
#export VERSION=6.1.0
#export VERSIONDATE=20161029
#export VERSION=6.1.1
#export VERSIONDATE=20161128
#export VERSION=6.1.2
#export VERSIONDATE=20161231
#export VERSION=6.1.3
#export VERSIONDATE=20170106
#export VERSION=6.1.4
#export VERSIONDATE=20170119
#export VERSION=6.1.5
#export VERSIONDATE=20170123
#export VERSION=7.0.0
#export VERSIONDATE=20170209
#export VERSION=7.0.1
#export VERSIONDATE=20170328
#export VERSION=7.0.2
#export VERSIONDATE=20170428
#export VERSION=7.0.3
#export VERSIONDATE=20170529
#export VERSION=7.0.4
#export VERSIONDATE=20170629
#export VERSION=7.0.5
#export VERSIONDATE=20170728
#export VERSION=7.0.6
#export VERSIONDATE=20170829
#export VERSION=7.0.7
#export VERSIONDATE=20170929
#export VERSION=7.0.8
#export VERSIONDATE=20171029
#export VERSION=7.0.9
#export VERSIONDATE=20171129
#export VERSION=7.1.0
#export VERSIONDATE=20171229
#export VERSION=7.1.1
#export VERSIONDATE=20180129
#export VERSION=8.0.0
#export VERSIONDATE=20180209
#export VERSION=8.0.1
#export VERSIONDATE=20180330
#export VERSION=8.0.2
#export VERSIONDATE=20180427
#export VERSION=8.0.2.1
#export VERSIONDATE=20180429
#export VERSION=8.0.3
#export VERSIONDATE=20180529
#export VERSION=8.0.4
#export VERSIONDATE=20180629
#export VERSION=8.0.5
#export VERSIONDATE=20180727
#export VERSION=8.0.6
#export VERSIONDATE=20180828
#export VERSION=8.0.7
#export VERSIONDATE=20180928
#export VERSION=8.0.8
#export VERSIONDATE=20180929
#export VERSION=8.0.9
#export VERSIONDATE=20181128
#export VERSION=8.1.0
#export VERSIONDATE=20181227
#export VERSION=8.1.1
#export VERSIONDATE=20190129
#export VERSION=9.0.0
#export VERSIONDATE=20190208
#export VERSION=9.0.1
#export VERSIONDATE=20190328
#export VERSION=9.0.2
#export VERSIONDATE=20190426
#export VERSION=9.0.3
#export VERSIONDATE=20190529
#export VERSION=9.0.4
#export VERSIONDATE=20190629
#export VERSION=9.0.5
#export VERSIONDATE=20190730
#export VERSION=9.0.6
#export VERSIONDATE=20190805
#export VERSION=9.0.7
#export VERSIONDATE=20190829
#export VERSION=9.0.8
#export VERSIONDATE=20190927
#export VERSION=9.0.9
#export VERSIONDATE=20191030
#export VERSION=9.1.0
#export VERSIONDATE=20191127
#export VERSION=9.1.1
#export VERSIONDATE=20200107
#export VERSION=9.1.2
#export VERSIONDATE=20200129
#export VERSION=10.0.0
#export VERSIONDATE=20200328
#export VERSION=10.0.1
#export VERSIONDATE=20200330
#export VERSION=10.0.2
#export VERSIONDATE=20200429
#export VERSION=10.0.3
#export VERSIONDATE=20200529
#export VERSION=10.0.4
#export VERSIONDATE=20200627
#export VERSION=10.0.5
#export VERSIONDATE=20200730
#export VERSION=10.0.6
#export VERSIONDATE=20200828
#export VERSION=10.0.7
#export VERSIONDATE=20200930
#export VERSION=10.0.8
#export VERSIONDATE=20201030
##export DEPENDANCIES=zlib,liblz4,libevent
#export DEPENDANCIES=zlib,liblz4,libevent,msgpack-cxx,mecab
#export OPTIONALDEPENDANCIES=libstemmer,liblinear,kytea,mruby
#export BUILDDEPENDANCIES=cmake
#export VERSION=10.0.9
#export VERSIONDATE=20201202
#export VERSION=10.1.0
#export VERSIONDATE=20201224
#export VERSION=10.1.1
#export VERSIONDATE=20210124
#export VERSION=11.0.0
#export VERSIONDATE=20210208
#export VERSION=11.0.1
#export VERSIONDATE=20210401
#export VERSION=11.0.2
#export VERSIONDATE=20210511
#export VERSION=11.0.3
#export VERSIONDATE=20210528
#export VERSION=11.0.4
#export VERSIONDATE=20210628
#export VERSION=11.0.5
#export VERSIONDATE=20210802
#export VERSION=11.0.6
#export VERSIONDATE=20210831
#export VERSION=11.0.7
#export VERSIONDATE=20210930
#export VERSION=11.0.9
#export VERSIONDATE=20211104
#export VERSION=11.1.0
#export VERSIONDATE=20211129
#export VERSION=11.1.1
#export VERSIONDATE=20211228
#export VERSION=11.1.2
#export VERSIONDATE=20220128
#export VERSION=11.1.3
#export VERSIONDATE=20220131
#export VERSION=12.0.0
#export VERSIONDATE=20220209
#export VERSION=12.0.1
#export VERSIONDATE=20220301
#export VERSION=12.0.2
#export VERSIONDATE=20220329
#export VERSION=12.0.3
#export VERSIONDATE=20220429
#export VERSION=12.0.4
#export VERSIONDATE=20220606
#export VERSION=12.0.5
#export VERSIONDATE=20220630
#export VERSION=12.0.6
#export VERSIONDATE=20220804
#export VERSION=12.0.7
#export VERSIONDATE=20220829
export VERSION=12.0.8
export VERSIONDATE=20221003
wl-showstatus --package-version
export DEPENDANCIES=zlib,liblz4
export OPTIONALDEPENDANCIES=snowball,kytea,mruby
#export OPTIONALDEPENDANCIES=snowball,liblinear,kytea,mruby,mecab,xxhash
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://packages.groonga.org/source/groonga/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://packages.groonga.org/source/groonga/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://packages.groonga.org/source/groonga/$BASENAME-$VERSION.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#unzip -oq $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.zip
cd $BASENAME-$VERSION
## fix missing memcpy_s in lib/dat/dat.hpp (version >= 6.0.8)
#mv lib/dat/dat.hpp lib/dat/dat.hpp.bak &&
#sed -e "s/\(\# *define grn_memcpy(dest, src, n) *\)::memcpy_s((dest), (n), (src), (n))/\1 ::memcpy((dest), (src), (n))/" lib/dat/dat.hpp.bak > lib/dat/dat.hpp
## fix missing memcpy_s in include/groonga/portability.h (version >= 6.0.8)
#mv include/groonga/portability.h include/groonga/portability.h.bak &&
#sed -e "s/\(\# *define grn_memcpy(dest, src, n) *\)::memcpy_s((dest), (n), (src), (n))/\1 ::memcpy((dest), (src), (n))/" include/groonga/portability.h.bak > include/groonga/portability.h
## fix missing _snprintf_s in include/groonga/portability.h (version >= 7.0.0)
#mv include/groonga/portability.h include/groonga/portability.h.bak &&
#sed -e "s/_snprintf_s\( *([^,]*,[^,]*,\)[^,]*,/snprintf\1/" include/groonga/portability.h.bak > include/groonga/portability.h
## fix type issue in vendor/mecab-0.996/src/feature_index.cpp (version >= 9.0.3)
#patch -ulbf vendor/mecab-0.996/src/feature_index.cpp << EOF
#@@ -356 +356 @@
#-            case 't':  os_ << (size_t)path->rnode->char_type;     break;
#+            case 't':  os_ << (unsigned long)path->rnode->char_type;     break;
#EOF
## fix type issue in vendor/mecab-0.996/src/writer.cpp (version >= 9.0.3)
#patch -ulbf vendor/mecab-0.996/src/writer.cpp << EOF
#@@ -260 +260 @@
#-          case 'L': *os << lattice->size(); break;
#+          case 'L': *os << (unsigned long)lattice->size(); break;
#EOF
## fix missing bundled_rapidjson_version (version >= 9.0.4)
#touch bundled_rapidjson_version
#wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DGRN_WITH_BUNDLED_LZ4:BOOL=OFF -DGRN_WITH_BUNDLED_MECAB:BOOL=OFF -DGRN_WITH_BUNDLED_MESSAGE_PACK:BOOL=OFF . &&
# #-DGRN_EMBED:BOOL=ON
# # fix invalid windres parameters (version >= 6.0.2)
# sed -i.bak -e "s/\(windres.*\)-std=gnu99\( -[Wf][^ ]*\)*/\1/" lib/CMakeFiles/libgroonga.dir/build.make &&
# # fix missing HAVE_WINDOWS_H
# ( grep -q HAVE_WINDOWS_H vendor/mecab-0.996/config.h || echo "#define HAVE_WINDOWS_H 1" >> vendor/mecab-0.996/config.h ) &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####TO DO: don't install dependancies (like liblz4.dll)
# fix plugins/tokenizers/kytea.cpp (version >= 10.0.9)
patch -ulbf plugins/tokenizers/kytea.cpp << EOF
@@ -257,5 +257,5 @@
           const int char_length =
-              grn_tokenizer_charlen(ctx, ptr, left, encoding);
+              grn_plugin_charlen(ctx, ptr, left, encoding);
           if ((char_length == 0) ||
-              (grn_tokenizer_isspace(ctx, ptr, left, encoding) != 0)) {
+              (grn_plugin_isspace(ctx, ptr, left, encoding) != 0)) {
             break;
EOF
mkdir -p build_shared build_static &&
 wl-showstatus configure &&
 PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DGRN_EMBED:BOOL=ON -DGRN_WITH_LZ4:STRING=yes -DGRN_WITH_MECAB:STRING=no -DGRN_WITH_XXHASH:STRING=no -DGRN_WITH_RAPIDJSON:STRING=yes -DGRN_WITH_ZLIB:STRING=yes -DGRN_WITH_LIBSTEMMER:STRING=yes -DGRN_WITH_MESSAGE_PACK:STRING=no -DGRN_WITH_LIBEVENT:STRING=no -DGRN_WITH_ZEROMQ:STRING=no -S. -Bbuild_static &&
 wl-showstatus configure &&
 PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DGRN_EMBED:BOOL=OFF -DGRN_WITH_LZ4:STRING=yes -DGRN_WITH_MECAB:STRING=no -DGRN_WITH_XXHASH:STRING=no -DGRN_WITH_RAPIDJSON:STRING=yes -DGRN_WITH_ZLIB:STRING=yes -DGRN_WITH_LIBSTEMMER:STRING=yes -DGRN_WITH_MESSAGE_PACK:STRING=no -DGRN_WITH_LIBEVENT:STRING=no -DGRN_WITH_ZEROMQ:STRING=no -S. -Bbuild_shared &&
 # fix missing link libraries (version >= 12.0.2)
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -ldl/" build_shared/build.ninja &&
 wl-showstatus build &&
 ninja -Cbuild_static lib/libgroonga.a &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/lib &&
 cp -f build_static/lib/*.a $INSTALLPREFIX/lib/ &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



