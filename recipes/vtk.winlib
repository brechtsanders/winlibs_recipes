export NAME="VTK"
export STATUS=
export URL=http://www.vtk.org/
export BASENAME=vtk
export DESCRIPTION="The Visualization ToolKit (VTK) is an open source, freely available software system for 3D computer graphics, image processing, and visualization used by thousands of researchers and developers around the world."
export CATEGORY=graphics
export TYPE=library
#export VERSION=5.6.0
#export VERSIONDATE=20100422
#export VERSION=5.6.1
#export VERSIONDATE=20100929
#export VERSION=5.8.0
#export VERSIONDATE=20110901
#export VERSION=5.10.0
#export VERSIONDATE=20120515
####Utilities/vtklibxml2/threads.c:399: error: incompatible types in assignment
#export VERSION=5.10.1
#export VERSIONDATE=20121017
#export VERSION=6.0.0
#export VERSIONDATE=20130621
#export VERSION=6.2.0
#export VERSIONDATE=20150629
#export VERSION=6.3.0
#export VERSIONDATE=20160406
#export VERSION=7.0.0
#export VERSIONDATE=20160406
#export VERSION=7.1.0
#export VERSIONDATE=20161123
#export VERSION=7.1.1
#export VERSIONDATE=20170321
#export VERSION=8.0.0
#export VERSIONDATE=20170627
#export VERSION=8.0.1
#export VERSIONDATE=20170831
#export DEPENDENCIES=pthreads,libharu
#export OPTIONALDEPENDENCIES=hdf5
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=8.1.0
#export VERSIONDATE=20171223
#export VERSION=8.1.1
#export VERSIONDATE=20180511
#export VERSION=8.1.2
#export VERSIONDATE=20181105
#export VERSION=8.2.0
####/tmp/ccyMJwbU.s: Fatal error: can't write CMakeFiles/vtkCommonCore.dir/vtkDataArray.cxx.obj: File too big
#export VERSIONDATE=20190131
#export DEPENDENCIES=pthreads
#export OPTIONALDEPENDENCIES=hdf5
#export BUILDDEPENDENCIES=cmake,pexports
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=9.0.0
#export VERSIONDATE=20200505
#export VERSION=9.0.1
#export VERSIONDATE=20200626
#export VERSION=9.0.2
#export VERSIONDATE=20210701
####The following modules were requested or required, but not found: VTK::vtksys;VTK::opengl;VTK::octree;VTK::zlib;VTK::ViewsCore;VTK::DICOMParser;VTK::metaio;VTK::kwiml;VTK::WrappingTools;VTK::Python;VTK::Java;VTK::mpi.
#export VERSION=9.0.3
#export VERSIONDATE=20210703
#export VERSION=9.1.0
#export VERSIONDATE=20211105
#export VERSION=9.2.2
#export VERSIONDATE=20221004
#export VERSION=9.2.5
#export VERSIONDATE=20230107
#export VERSION=9.2.6
#export VERSIONDATE=20230218
#export VERSION=9.3.0
#export VERSIONDATE=20231115
#export VERSION=9.3.1
#export VERSIONDATE=20240703
#export VERSION=9.4.0
#export VERSIONDATE=20241126
#export VERSION=9.4.1
#export VERSIONDATE=20241228
#export VERSION=9.4.2
#export VERSIONDATE=20250401
export VERSION=9.5.0
export VERSIONDATE=20250625
wl-showstatus --package-version
export DEPENDENCIES=pthreads
export OPTIONALDEPENDENCIES=hdf5
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=Copyright.txt
export LICENSETYPE=
#export DOWNLOADURL="http://www.vtk.org/files/release/"
export DOWNLOADURL="http://www.vtk.org/download/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.vtk.org/files/release/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/vtk-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://www.vtk.org/files/release/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/VTK-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/vtk-$VERSION.tar.gz
#cd VTK$VERSION || cd VTK
tar xz --force-local -f $TARBALLDIR/$BASENAME/VTK-$VERSION.tar.gz
cd VTK-$VERSION || cd VTK$VERSION
## avoid using pthreads (version <= 5.10.1)
#patch -ulbf CMake/CMakeBackwardCompatibilityC.cmake << EOF
#--- CMake/CMakeBackwardCompatibilityC.cmake  Fri Jun  5 15:39:22 2009
#+++ CMake/CMakeBackwardCompatibilityC.cmake  Fri Jun  5 15:40:14 2009
#@@ -53,4 +53,4 @@
# 
#-  SET (CMAKE_USE_PTHREADS       "\${CMAKE_USE_PTHREADS_INIT}" CACHE BOOL
#-     "Use the pthreads library.")
#+  #SET (CMAKE_USE_PTHREADS       "\${CMAKE_USE_PTHREADS_INIT}" CACHE BOOL
#+  #   "Use the pthreads library.")
#
#EOF
## fix Hybrid/vtkWin32VideoSource.cxx for 64-bit (version <= 5.10.1)
#patch -ulbf Hybrid/vtkWin32VideoSource.cxx << EOF
#--- Hybrid/vtkWin32VideoSource.cxx  2012-05-12 13:59:28 +0200
#+++ Hybrid/vtkWin32VideoSource.cxx  2012-05-15 18:05:02 +0200
#@@ -104,3 +104,3 @@
#   vtkWin32VideoSource *self = (vtkWin32VideoSource *)\\
#-    (vtkGetWindowLong(hwnd,vtkGWL_USERDATA));
#+    ((intptr_t)vtkGetWindowLong(hwnd,vtkGWL_USERDATA));
#
#@@ -276,3 +276,3 @@
#   // set the user data to 'this'
#-  vtkSetWindowLong(this->Internal->ParentWnd,vtkGWL_USERDATA,(vtkLONG)this);
#+  vtkSetWindowLong(this->Internal->ParentWnd,vtkGWL_USERDATA,(intptr_t)this);
#
#@@ -341,3 +341,3 @@
#   // set user data for callbacks
#-  if (!capSetUserData(this->Internal->CapWnd,(long)this))
#+  if (!capSetUserData(this->Internal->CapWnd,(intptr_t)this))
#     {
#EOF
## fix Common/Core/vtkWin32Header.h for 64-bit (version = 6.0.0)
#patch -ulbf Common/Core/vtkWin32Header.h << EOF
#--- Common/Core/vtkWin32Header.h  2013-06-12 21:47:10 +0200
#+++ Common/Core/vtkWin32Header.h  2013-06-24 14:10:16 +0200
#@@ -97,4 +97,11 @@
# #  define vtkGWL_HINSTANCE GWLP_HINSTANCE
# #  define vtkGWL_USERDATA GWLP_USERDATA
#+#elif defined(__MINGW32__)
#+#  define vtkGetWindowLong GetWindowLongPtr
#+#  define vtkSetWindowLong SetWindowLongPtr
#+#  define vtkLONG intptr_t
#+#  define vtkGWL_WNDPROC GWLP_WNDPROC
#+#  define vtkGWL_HINSTANCE GWLP_HINSTANCE
#+#  define vtkGWL_USERDATA GWLP_USERDATA
# #else // non-Visual studio
# #  define vtkGetWindowLong GetWindowLong
#EOF
## fix IO/Video/vtkWin32VideoSource.cxx for 64-bit (version >= 6.0.0 <= 8.2.0)
#patch -ulbf IO/Video/vtkWin32VideoSource.cxx << EOF
#--- IO/Video/vtkWin32VideoSource.cxx  2013-06-12 21:47:10 +0200
#+++ IO/Video/vtkWin32VideoSource.cxx  2013-06-24 15:10:22 +0200
#@@ -341,3 +341,3 @@
#   // set user data for callbacks
#-  if (!capSetUserData(this->Internal->CapWnd,(long)this))
#+  if (!capSetUserData(this->Internal->CapWnd,(vtkLONG)this))
#     {
#EOF
## fix missing strcasecmp in Utilities/KWSys/vtksys/SystemTools.cxx (version >= 7.1.0 <= 7.1.1)
#mv Utilities/KWSys/vtksys/SystemTools.cxx Utilities/KWSys/vtksys/SystemTools.cxx.bak &&
#sed -e "s/strcasecmp/stricmp/g" Utilities/KWSys/vtksys/SystemTools.cxx.bak > Utilities/KWSys/vtksys/SystemTools.cxx
# fix for GCC 11 in Common/Core/vtkGenericDataArrayLookupHelper.h (version >= 9.0.0)
mv Common/Core/vtkGenericDataArrayLookupHelper.h Common/Core/vtkGenericDataArrayLookupHelper.h.bak &&
echo "#include <limits>" > Common/Core/vtkGenericDataArrayLookupHelper.h &&
cat Common/Core/vtkGenericDataArrayLookupHelper.h.bak >> Common/Core/vtkGenericDataArrayLookupHelper.h
# fix for GCC 11 in Common/DataModel/vtkPiecewiseFunction.cxx (version >= 9.0.0)
mv Common/DataModel/vtkPiecewiseFunction.cxx Common/DataModel/vtkPiecewiseFunction.cxx.bak &&
echo "#include <limits>" > Common/DataModel/vtkPiecewiseFunction.cxx &&
cat Common/DataModel/vtkPiecewiseFunction.cxx.bak >> Common/DataModel/vtkPiecewiseFunction.cxx
# fix for GCC 11 in Rendering/Core/vtkColorTransferFunction.cxx (version >= 9.0.0)
mv Rendering/Core/vtkColorTransferFunction.cxx Rendering/Core/vtkColorTransferFunction.cxx.bak &&
echo "#include <limits>" > Rendering/Core/vtkColorTransferFunction.cxx &&
cat Rendering/Core/vtkColorTransferFunction.cxx.bak >> Rendering/Core/vtkColorTransferFunction.cxx
# fix for GCC 11 in Filters/HyperTree/vtkHyperTreeGridThreshold.cxx (version >= 9.0.0)
mv Filters/HyperTree/vtkHyperTreeGridThreshold.cxx Filters/HyperTree/vtkHyperTreeGridThreshold.cxx.bak &&
echo "#include <limits>" > Filters/HyperTree/vtkHyperTreeGridThreshold.cxx &&
cat Filters/HyperTree/vtkHyperTreeGridThreshold.cxx.bak >> Filters/HyperTree/vtkHyperTreeGridThreshold.cxx
## fix ThirdParty/hdf5/vtkhdf5/src/H5public.h (version >= 9.2.5)
#patch -ulbf ThirdParty/hdf5/vtkhdf5/src/H5public.h << EOF
#@@ -271,3 +271,3 @@
#  */
#-#if H5_SIZEOF_SSIZE_T == 0
#+#if H5_SIZEOF_SSIZE_T == 0 && !defined(__MINGW32__)
# /* Undefine this size, we will re-define it in one of the sections below */
#EOF
## fix missing fstat/ftruncate in ThirdParty/hdf5/vtkhdf5/src/H5private.h (version >= 9.2.5)
#mv ThirdParty/hdf5/vtkhdf5/src/H5private.h ThirdParty/hdf5/vtkhdf5/src/H5private.h.bak &&
#echo "#include <sys/stat.h>" > ThirdParty/hdf5/vtkhdf5/src/H5private.h &&
#echo "#include <unistd.h>" >> ThirdParty/hdf5/vtkhdf5/src/H5private.h &&
#cat ThirdParty/hdf5/vtkhdf5/src/H5private.h.bak >> ThirdParty/hdf5/vtkhdf5/src/H5private.h
# fix undefined int8_t in ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/collectives.cpp (version >= 9.3.1)
mv ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/collectives.cpp ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/collectives.cpp.bak &&
echo "#include <cstdint>" > ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/collectives.cpp &&
cat ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/collectives.cpp.bak >> ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/collectives.cpp
# fix undefined int8_t in ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/window.cpp (version >= 9.3.1)
mv ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/window.cpp ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/window.cpp.bak &&
echo "#include <cstdint>" > ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/window.cpp &&
cat ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/window.cpp.bak >> ThirdParty/vtkm/vtkvtkm/vtk-m/vtkm/thirdparty/diy/vtkmdiy/include/vtkmdiy/mpi/window.cpp
# fix undefined uint32_t in ThirdParty/libproj/vtklibproj/src/filemanager.cpp (version >= 9.5.0)
sed -i.bak -e "1i #include <cstdint>" ThirdParty/libproj/vtklibproj/src/filemanager.cpp
## fix detection of gcc versions above 5 (version <= 7.0.0)
#mv CMake/vtkCompilerExtras.cmake CMake/vtkCompilerExtras.cmake.bak &&
#sed -e "s/345/3-9/" CMake/vtkCompilerExtras.cmake.bak > CMake/vtkCompilerExtras.cmake
#mv CMake/GenerateExportHeader.cmake CMake/GenerateExportHeader.cmake.bak &&
#sed -e "s/345/3-9/" CMake/GenerateExportHeader.cmake.bak > CMake/GenerateExportHeader.cmake
#make test
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DBUILD_SHARED_LIBS:BOOL=OFF -DVTK_USE_SYSTEM_LIBHARU:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-DGLEW_STATIC" .. &&
# # fix empty _FILE_OFFSET_BITS in ThirdParty/tiff/vtktiff/libtiff/tif_config.h (version >= 8.0.0)
# #sed -i.bak -e "s/^#define _FILE_OFFSET_BITS *$/& 64/" ThirdParty/tiff/vtktiff/libtiff/tif_config.h &&
# sed -i.bak -e "s/^#define _FILE_OFFSET_BITS *$/\/\/&/" ThirdParty/tiff/vtktiff/libtiff/tif_config.h &&
# # fix errors: too many sections / file too big
# echo "-Wa,-mbig-obj -Og" >> Common/Core/CMakeFiles/vtkCommonCore.dir/includes_CXX.rsp &&
# echo "-Wa,-mbig-obj -Og" >> Filters/Statistics/CMakeFiles/vtkFiltersStatistics.dir/includes_CXX.rsp &&
# #echo "-Wl,--as-needed -Wl,-Bstatic -lglew32" >> Rendering/OpenGL2/CMakeFiles/vtkProbeOpenGLVersion.dir/linklibs.rsp &&
# #echo "-DGLEW_STATIC" >> Rendering/OpenGL2/CMakeFiles/vtkProbeOpenGLVersion.dir/includes_CXX.rsp &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX .. &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF .. &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DBUILD_SHARED_LIBS:BOOL=ON -DVTK_USE_SYSTEM_LIBHARU:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF .. &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DBUILD_SHARED_LIBS:BOOL=ON -DVTK_USE_SYSTEM_LIBHARU:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF .. &&
# # fix empty _FILE_OFFSET_BITS in ThirdParty/tiff/vtktiff/libtiff/tif_config.h (version >= 8.0.0)
# #sed -i.bak -e "s/^#define _FILE_OFFSET_BITS *$/& 64/" ThirdParty/tiff/vtktiff/libtiff/tif_config.h &&
# sed -i.bak -e "s/^#define _FILE_OFFSET_BITS *$/\/\/&/" ThirdParty/tiff/vtktiff/libtiff/tif_config.h &&
# # fix errors: too many sections / file too big
# echo "-Wa,-mbig-obj -Og" >> Common/Core/CMakeFiles/vtkCommonCore.dir/includes_CXX.rsp &&
# echo "-Wa,-mbig-obj -Og" >> Filters/Statistics/CMakeFiles/vtkFiltersStatistics.dir/includes_CXX.rsp &&
# cd .. &&
# wl-showstatus build-install &&
# ( make -Cbuild_static install/strip || make -Cbuild_static -j1 install/strip ) &&
# wl-showstatus build-install &&
# ( make -Cbuild_shared install/strip || make -Cbuild_shared -j1 install/strip || (
#  # fix missing vtk_haru_HPDF_Shading_AddVertexRGB in ThirdParty/libharu/vtklibharu/include/vtk_haru_mangle.h (version >= 8.1.2)
#  pexports build_shared/bin/libvtklibharu-8.1.dll | grep -v ^LIBRARY | sed -e "s/@[0-9]*$//" > libvtklibharu.def &&
#  dlltool -D pexport build_shared/bin/libvtklibharu-8.1.dll -d libvtklibharu.def -l build_shared/lib/libvtklibharu-8.1.dll.a &&
#  make -Cbuild_shared install/strip
# )) &&
# # fix absolute link in .cmake file(s)
# sed -i -e "s?$(echo $INSTALLPREFIX|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?\${CMAKE_CURRENT_LIST_FILE}/../../../..?g" $INSTALLPREFIX/lib/cmake/vtk-*/VTKConfig.cmake &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && ( rm -rf VTK$VERSION || rm -rf VTK )
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && ( rm -rf VTK-$VERSION || rm -rf VTK*$VERSION)
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DHDF5_ENABLE_HDFS:BOOL=OFF -DVTK_USE_MPI:BOOL=OFF -DINSTALL_PKG_CONFIG_MODULE:BOOL=ON -DVTK_WRAP_JAVA:BOOL=OFF -DVTK_WRAP_PYTHON:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DVTK_BUILD_EXAMPLES:BOOL=OFF -DINSTALL_DOCS:BOOL=ON -DVTK_BUILD_TESTING:STRING=OFF -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DHDF5_ENABLE_HDFS:BOOL=OFF -DVTK_USE_MPI:BOOL=OFF -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=OpenMP -DINSTALL_PKG_CONFIG_MODULE:BOOL=ON -DVTK_WRAP_JAVA:BOOL=OFF -DVTK_WRAP_PYTHON:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DVTK_BUILD_EXAMPLES:BOOL=OFF -DINSTALL_DOCS:BOOL=ON -DVTK_BUILD_TESTING:STRING=OFF -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DHDF5_ENABLE_HDFS:BOOL=OFF -DVTK_USE_MPI:BOOL=OFF -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=OpenMP -DINSTALL_PKG_CONFIG_MODULE:BOOL=ON -DVTK_WRAP_JAVA:BOOL=OFF -DVTK_WRAP_PYTHON:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DVTK_BUILD_EXAMPLES:BOOL=OFF -DINSTALL_DOCS:BOOL=ON -DVTK_BUILD_TESTING:STRING=OFF -DCMAKE_C_FLAGS:STRING="-fcommon" -DCMAKE_CXX_FLAGS:STRING="-fcommon" -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DHDF5_ENABLE_HDFS:BOOL=OFF -DVTK_USE_MPI:BOOL=OFF -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=OpenMP -DINSTALL_PKG_CONFIG_MODULE:BOOL=ON -DVTK_WRAP_JAVA:BOOL=OFF -DVTK_WRAP_PYTHON:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DVTK_BUILD_EXAMPLES:BOOL=OFF -DINSTALL_DOCS:BOOL=ON -DVTK_BUILD_TESTING:STRING=OFF -DCMAKE_C_FLAGS:STRING="-fcommon $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi) $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types -Wno-incompatible-function-pointer-types"; fi)" -DCMAKE_CXX_FLAGS:STRING="-fcommon" -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DHDF5_ENABLE_HDFS:BOOL=OFF -DVTK_USE_MPI:BOOL=OFF -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=OpenMP -DINSTALL_PKG_CONFIG_MODULE:BOOL=ON -DVTK_WRAP_JAVA:BOOL=OFF -DVTK_WRAP_PYTHON:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DVTK_MODULE_ENABLE_VTK_AcceleratorsVTKmFilters:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOXdmf2:STRING=WANT -DVTK_MODULE_ENABLE_VTK_FiltersParallelDIY2:STRING=WANT -DVTK_MODULE_ENABLE_VTK_FiltersParallelVerdict:STRING=WANT -DVTK_MODULE_ENABLE_VTK_FiltersTemporal:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOVPIC:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOERF:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOFDS:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOH5part:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOH5Rage:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOOMF:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOParallelExodus:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOParallelLSDyna:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOPIO:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOTRUCHAS:STRING=WANT -DVTK_MODULE_ENABLE_VTK_FiltersParallelStatistics:STRING=WANT -DVTK_MODULE_ENABLE_VTK_GUISupportQt:STRING=WANT -DVTK_MODULE_ENABLE_VTK_cli11:STRING=WANT -DVTK_MODULE_ENABLE_VTK_RenderingParallel:STRING=WANT -DVTK_MODULE_ENABLE_VTK_RenderingVolumeAMR:STRING=WANT -DVTK_BUILD_EXAMPLES:BOOL=OFF -DINSTALL_DOCS:BOOL=ON -DVTK_BUILD_TESTING:STRING=OFF -DCMAKE_C_FLAGS:STRING="-fcommon $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi) $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types -Wno-incompatible-function-pointer-types"; fi)" -DCMAKE_CXX_FLAGS:STRING="-fcommon" -S. -Bbuild_static &&
 ## fix crash in vtkH5detect.exe (version >= 9.0.0 <= 9.0.3)
 #( echo "#undef H5_HAVE_LONGJMP" >> build_static/ThirdParty/hdf5/vtkhdf5/H5pubconf.h || true ) &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DHDF5_ENABLE_HDFS:BOOL=OFF -DVTK_USE_MPI:BOOL=OFF -DINSTALL_PKG_CONFIG_MODULE:BOOL=ON -DVTK_WRAP_JAVA:BOOL=OFF -DVTK_WRAP_PYTHON:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DVTK_BUILD_EXAMPLES:BOOL=OFF -DINSTALL_DOCS:BOOL=ON -DVTK_BUILD_TESTING:STRING=OFF -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DHDF5_ENABLE_HDFS:BOOL=OFF -DVTK_USE_MPI:BOOL=OFF -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=OpenMP -DINSTALL_PKG_CONFIG_MODULE:BOOL=ON -DVTK_WRAP_JAVA:BOOL=OFF -DVTK_WRAP_PYTHON:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DVTK_BUILD_EXAMPLES:BOOL=OFF -DINSTALL_DOCS:BOOL=ON -DVTK_BUILD_TESTING:STRING=OFF -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DHDF5_ENABLE_HDFS:BOOL=OFF -DVTK_USE_MPI:BOOL=OFF -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=OpenMP -DINSTALL_PKG_CONFIG_MODULE:BOOL=ON -DVTK_WRAP_JAVA:BOOL=OFF -DVTK_WRAP_PYTHON:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DVTK_BUILD_EXAMPLES:BOOL=OFF -DINSTALL_DOCS:BOOL=ON -DVTK_BUILD_TESTING:STRING=OFF -DCMAKE_C_FLAGS:STRING="-fcommon" -DCMAKE_CXX_FLAGS:STRING="-fcommon" -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DHDF5_ENABLE_HDFS:BOOL=OFF -DVTK_USE_MPI:BOOL=OFF -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=OpenMP -DINSTALL_PKG_CONFIG_MODULE:BOOL=ON -DVTK_WRAP_JAVA:BOOL=OFF -DVTK_WRAP_PYTHON:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DVTK_BUILD_EXAMPLES:BOOL=OFF -DINSTALL_DOCS:BOOL=ON -DVTK_BUILD_TESTING:STRING=OFF -DCMAKE_C_FLAGS:STRING="-fcommon $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi) $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types -Wno-incompatible-function-pointer-types"; fi)" -DCMAKE_CXX_FLAGS:STRING="-fcommon" -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DHDF5_ENABLE_HDFS:BOOL=OFF -DVTK_USE_MPI:BOOL=OFF -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=OpenMP -DINSTALL_PKG_CONFIG_MODULE:BOOL=ON -DVTK_WRAP_JAVA:BOOL=OFF -DVTK_WRAP_PYTHON:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DVTK_MODULE_ENABLE_VTK_AcceleratorsVTKmFilters:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOXdmf2:STRING=WANT -DVTK_MODULE_ENABLE_VTK_FiltersParallelDIY2:STRING=WANT -DVTK_MODULE_ENABLE_VTK_FiltersParallelVerdict:STRING=WANT -DVTK_MODULE_ENABLE_VTK_FiltersTemporal:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOVPIC:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOERF:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOFDS:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOH5part:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOH5Rage:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOOMF:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOParallelExodus:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOParallelLSDyna:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOPIO:STRING=WANT -DVTK_MODULE_ENABLE_VTK_IOTRUCHAS:STRING=WANT -DVTK_MODULE_ENABLE_VTK_FiltersParallelStatistics:STRING=WANT -DVTK_MODULE_ENABLE_VTK_GUISupportQt:STRING=WANT -DVTK_MODULE_ENABLE_VTK_cli11:STRING=WANT -DVTK_MODULE_ENABLE_VTK_RenderingParallel:STRING=WANT -DVTK_MODULE_ENABLE_VTK_RenderingVolumeAMR:STRING=WANT -DVTK_BUILD_EXAMPLES:BOOL=OFF -DINSTALL_DOCS:BOOL=ON -DVTK_BUILD_TESTING:STRING=OFF -DCMAKE_C_FLAGS:STRING="-fcommon $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi) $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types -Wno-incompatible-function-pointer-types"; fi)" -DCMAKE_CXX_FLAGS:STRING="-fcommon" -S. -Bbuild_shared &&
 ## fix crash in vtkH5detect.exe (version >= 9.0.0 <= 9.0.3)
 #( echo "#undef H5_HAVE_LONGJMP" >> build_shared/ThirdParty/hdf5/vtkhdf5/H5pubconf.h || true ) &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && ( rm -rf VTK-$VERSION || rm -rf VTK*$VERSION)
####vtkProbeOpenGLVersion-9.0.exe



