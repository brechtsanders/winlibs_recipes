#export NAME="GUPnP"
#export STATUS=
#export URL=http://www.gupnp.org/
#export BASENAME=gupnp
#export DESCRIPTION="GUPnP is an elegant, object-oriented open source framework for creating UPnP devices and control points, written in C using GObject and libsoup. The GUPnP API is intended to be easy to use, efficient and flexible. It provides the same set of features as libupnp, but shields the developer from most of UPnP's internals."
#export CATEGORY=communication
#export TYPE=library
##export VERSION=0.14.1
##export VERSIONDATE=20101231
##export VERSION=0.15.0
##export VERSIONDATE=20101231
##export VERSION=0.15.1
##export VERSIONDATE=20110128
##export VERSION=0.16.0
##export VERSIONDATE=20110408
##export VERSION=0.16.1
##export VERSIONDATE=20110501
##export VERSION=0.18.0
##export VERSIONDATE=20111108
##export VERSION=0.18.1
##export VERSIONDATE=20111209
##export VERSION=0.18.2
##export VERSIONDATE=20120317
##export VERSION=0.18.3
##export VERSIONDATE=20120503
##export VERSION=0.19.0
##export VERSIONDATE=20121007
##export VERSION=0.19.1
##export VERSIONDATE=20121025
##export VERSION=0.19.2
##export VERSIONDATE=20121201
##export VERSION=0.19.3
##export VERSIONDATE=20121205
##export VERSION=0.19.4
##export VERSIONDATE=20130112
##export VERSION=0.20.0
##export VERSIONDATE=20130220
##export VERSION=0.20.1
##export VERSIONDATE=20130306
##export VERSION=0.20.2
##export VERSIONDATE=20130406
##export VERSION=0.20.3
##export VERSIONDATE=20130529
##export VERSION=0.20.4
##export VERSIONDATE=20130730
##export VERSION=0.20.5
##export VERSIONDATE=20130820
##export VERSION=0.20.6
##export VERSIONDATE=20130903
##export VERSION=0.20.7
##export VERSIONDATE=20131016
##export VERSION=0.20.8
##export VERSIONDATE=20131031
##export VERSION=0.20.9
##export VERSIONDATE=20131214
##export VERSION=0.20.10
##export VERSIONDATE=20140204
##export VERSION=0.20.11
##export VERSIONDATE=20140504
##export VERSION=0.20.12
##export VERSIONDATE=20140601
##export VERSION=0.20.13
##export VERSIONDATE=20150105
##export VERSION=0.20.14
##export VERSIONDATE=20150511
##export VERSION=0.20.15
##export VERSIONDATE=20160101
##export VERSION=0.20.16
##export VERSIONDATE=20160209
##export VERSION=0.20.17
##export VERSIONDATE=20160426
##export VERSION=0.20.18
##export VERSIONDATE=20160621
##export VERSION=0.99.0
##export VERSIONDATE=20160816
#####libgupnp/gupnp-white-list.c:365:21: error: expected identifier or '(' before 'struct'
##export VERSION=1.0.0
##export VERSIONDATE=20160920
##export VERSION=1.0.1
##export VERSIONDATE=20161016
##export VERSION=1.0.2
##export VERSIONDATE=20170321
##export VERSION=1.0.3
##export VERSIONDATE=20180731
##export VERSION=1.0.4
##export VERSIONDATE=20190528
#export VERSION=1.0.5
#export VERSIONDATE=20200623
##export VERSION=1.0.6
##export VERSIONDATE=20200810
#export DEPENDANCIES=gssdp,libsoup-2.4,libgcrypt,glib2,libxml2,gnutls,libgpg-error,zlib,gettext
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
##export VERSION=1.1.0
##export VERSIONDATE=20181213
##export VERSION=1.1.1
##export VERSIONDATE=20181211
##export VERSION=1.1.2
##export VERSIONDATE=20190206
##export VERSION=1.2.0
##export VERSIONDATE=20190312
##export VERSION=1.2.1
##export VERSIONDATE=20190502
##export VERSION=1.2.2
##export VERSIONDATE=20200102
##export VERSION=1.2.3
##export VERSIONDATE=20200623
#####meson.build:21:0: ERROR: Dependency "gssdp-1.2" not found, tried pkgconfig and cmake
#wl-showstatus --package-version
##export DEPENDANCIES=gssdp,libsoup-2.4,libgcrypt,glib2,libxml2,gnutls,libgpg-error,zlib,gettext
##export OPTIONALDEPENDANCIES=
##export BUILDDEPENDANCIES=meson
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://www.gupnp.org/download"
##export DOWNLOADURL="http://www.gupnp.org/download?keys=&tid=11"
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gupnp/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://www.gupnp.org/sites/all/files/sources/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix missing files
#mkdir -p win32fix/sys win32fix/arpa win32fix/net
#touch win32fix/sys/utsname.h win32fix/sys/ioctl.h win32fix/sys/socket.h win32fix/arpa/inet.h win32fix/net/if.h
#cat > win32fix/ifaddrs.h << EOF
#struct ifaddrs
#{
#  struct ifaddrs *ifa_next;
#  char *ifa_name;
#  unsigned int ifa_flags;
#  struct sockaddr *ifa_addr;
#  struct sockaddr *ifa_netmask;
#  union
#  {
#    struct sockaddr *ifu_broadaddr;
#    struct sockaddr *ifu_dstaddr;
#  } ifa_ifu;
#/*
## ifndef ifa_broadaddr
##  define ifa_broadaddr ifa_ifu.ifu_broadaddr
## endif
## ifndef ifa_dstaddr
##  define ifa_dstaddr ifa_ifu.ifu_dstaddr
## endif
#*/
#  void *ifa_data;
#};
#/*
#extern int getifaddrs (struct ifaddrs **__ifap);
#extern void freeifaddrs (struct ifaddrs *__ifa);
#*/
##ifndef IFF_POINTOPOINT
##define IFF_POINTOPOINT 0
##endif
#EOF
## fix missing uuid/uuid.h
#mkdir -p uuid
#cat > uuid/uuid.h << EOF
##include <windows.h>
##define uuid_generate(uuid) UuidCreate(&uuid)
#//#define uuid_generate_random(uuid) UuidCreate(&uuid)
##define uuid_unparse(uuid,uuid_string) { UCHAR* buf = NULL; UuidToString(&uuid, &buf); strcpy(uuid_string, (char*)buf); RpcStringFree(&buf); }
#EOF
### fix invalid use of uname and interface in libgupnp/gupnp-context.c (version <= 0.16.1)
##patch -ulbf libgupnp/gupnp-context.c << EOF
##--- libgupnp/gupnp-context.c  2010-12-01 13:32:36 +0100
##+++ libgupnp/gupnp-context.c  2010-12-01 13:32:46 +0100
##@@ -100,2 +100,12 @@
## {
##+#ifdef _WIN32
##+       char hostname[128];
##+       OSVERSIONINFO ver;
##+       gethostname(hostname, 128);
##+       GetVersionEx(&ver);
##+        return g_strdup_printf ("%s/Windows %u.%u UPnP/1.0 GUPnP/%s",
##+                               hostname,
##+                               ver.dwMajorVersion, ver.dwMinorVersion,
##+                               VERSION);
##+#else
##         struct utsname sysinfo;
##@@ -108,2 +118,3 @@
##                                 VERSION);
##+#endif
## }
##@@ -470,3 +481,3 @@
## gupnp_context_new (GMainContext *main_context,
##-                   const char   *interface,
##+                   const char   *iface,
##                    guint         port,
##@@ -476,3 +487,3 @@
##                              "main-context", main_context,
##-                             "interface", interface,
##+                             "interface", iface,
##                              "port", port,
##EOF
### fix invalid use of uname and interface in libgupnp/gupnp-context.c (version >= 0.18.0 <= 0.19.1)
##patch -ulbf libgupnp/gupnp-context.c << EOF
##--- libgupnp/gupnp-context.c  2012-03-17 12:50:58 +0100
##+++ libgupnp/gupnp-context.c  2012-03-17 20:24:50 +0100
##@@ -42,2 +42,5 @@
## #include <stdio.h>
##+#ifdef __MINGW32__
##+#include <winsock2.h>
##+#else
## #include <sys/utsname.h>
##@@ -45,2 +48,3 @@
## #include <sys/socket.h>
##+#endif
## #include <sys/types.h>
##@@ -117,2 +121,12 @@
## {
##+#ifdef _WIN32
##+       char hostname[128];
##+       OSVERSIONINFO ver;
##+       gethostname(hostname, 128);
##+       GetVersionEx(&ver);
##+        return g_strdup_printf ("%s/Windows %u.%u UPnP/1.0 GUPnP/%s",
##+                               hostname,
##+                               ver.dwMajorVersion, ver.dwMinorVersion,
##+                               VERSION);
##+#else
##         struct utsname sysinfo;
##@@ -125,2 +139,3 @@
##                                 VERSION);
##+#endif
## }
##@@ -560,3 +575,3 @@
## gupnp_context_new (GMainContext *main_context,
##-                   const char   *interface,
##+                   const char   *iface,
##                    guint         port,
##@@ -572,3 +587,3 @@
##                                error,
##-                               "interface", interface,
##+                               "interface", iface,
##                                "port", port,
##EOF
## fix missing OSVERSIONINFO in libgupnp/gupnp-context.c (version >= 0.20.5)
#mv libgupnp/gupnp-context.c libgupnp/gupnp-context.c.bak
#echo "#include <windows.h>" > libgupnp/gupnp-context.c
#cat libgupnp/gupnp-context.c.bak >> libgupnp/gupnp-context.c
### fix use of already defined interface in libgupnp/gupnp-context.h (version >= 0.19.0 <= 0.20.4)
##patch -ulbf libgupnp/gupnp-context.h << EOF
##--- libgupnp/gupnp-context.h  2010-04-07 15:31:36 +0200
##+++ libgupnp/gupnp-context.h  2010-12-01 13:19:46 +0100
##@@ -80,3 +80,3 @@
## gupnp_context_new                      (GMainContext *main_context,
##-                                        const char   *interface,
##+                                        const char   *iface,
##                                         guint         port,
##EOF
## fix use of already defined interface in libgupnp/gupnp-white-list.c (version >= 0.20.5)
#patch -ulbf libgupnp/gupnp-white-list.c << EOF
#--- libgupnp/gupnp-white-list.c  2013-08-20 10:05:56 +0200
#+++ libgupnp/gupnp-white-list.c  2013-08-21 09:28:34 +0200
#@@ -364,3 +364,3 @@
#         GList *l;
#-        const char *interface;
#+        const char *iface;
#         const char *host_ip;
#@@ -374,3 +374,3 @@
#
#-        interface = gssdp_client_get_interface (client);
#+        iface = gssdp_client_get_interface (client);
#         host_ip = gssdp_client_get_host_ip (client);
#@@ -381,3 +381,3 @@
#         while (l && !match) {
#-                match = (interface && !strcmp (l->data, interface)) ||
#+                match = (iface && !strcmp (l->data, iface)) ||
#                         (host_ip && !strcmp (l->data, host_ip)) ||
#EOF
### fix network adapter detection in libgupnp/gupnp-unix-context-manager.c (version <= 0.16.1)
##patch -ulbf libgupnp/gupnp-unix-context-manager.c << EOF
##--- libgupnp/gupnp-unix-context-manager.c  2011-08-29 18:05:24 +0200
##+++ libgupnp/gupnp-unix-context-manager.c  2011-11-08 08:15:04 +0100
##@@ -47,2 +47,6 @@
## #include <libgssdp/gssdp-error.h>
##+#ifdef _WIN32
##+//#include <winsock2.h>
##+#include <iphlpapi.h>
##+#endif
##
##@@ -63,3 +67,3 @@
## create_and_signal_context (GUPnPUnixContextManager *manager,
##-                           const char              *interface)
##+                           const char              *iface)
## {
##@@ -78,3 +82,3 @@
##                                   &error,
##-                                  "interface", interface,
##+                                  "interface", iface,
##                                   "port", port,
##@@ -86,3 +90,3 @@
##                            ("Failed to create context for interface '%s': %s",
##-                            interface,
##+                            iface,
##                             error->message);
##@@ -109,2 +113,22 @@
##         GUPnPUnixContextManager *manager = (GUPnPUnixContextManager *) data;
##+#ifdef _WIN32
##+        PIP_ADAPTER_INFO pAdapter;
##+        PIP_ADAPTER_INFO pAdapterInfo = NULL;
##+        ULONG ulOutBufLen = 0;
##+        if (GetAdaptersInfo(pAdapterInfo, &ulOutBufLen) != ERROR_BUFFER_OVERFLOW)
##+               return FALSE;
##+        if ((pAdapterInfo = (IP_ADAPTER_INFO*)malloc(ulOutBufLen)) == NULL)
##+               return FALSE;
##+        if (GetAdaptersInfo(pAdapterInfo, &ulOutBufLen) != NO_ERROR)
##+               return FALSE;
##+        pAdapter = pAdapterInfo;
##+       while (pAdapter) {
##+              if (pAdapter->Type == MIB_IF_TYPE_PPP)
##+                        continue;
##+               /* to do: check if interface is up */
##+              create_and_signal_context (manager, pAdapter->AdapterName);
##+               pAdapter = pAdapter->Next;
##+        }
##+        free(pAdapterInfo);
##+#else
##         struct ifaddrs *ifa_list, *ifa;
##@@ -146,3 +170,3 @@
##         freeifaddrs (ifa_list);
##-
##+#endif
##         return FALSE;
##EOF
### fix network adapter detection in libgupnp/gupnp-unix-context-manager.c (version = 0.18.0)
##patch -ulbf libgupnp/gupnp-unix-context-manager.c << EOF
##--- libgupnp/gupnp-unix-context-manager.c  2012-03-17 12:39:46 +0100
##+++ libgupnp/gupnp-unix-context-manager.c  2012-03-17 20:28:50 +0100
##@@ -36,2 +36,5 @@
## #include <stdio.h>
##+#ifdef __MINGW32__
##+#include <winsock2.h>
##+#else
## #include <sys/utsname.h>
##@@ -39,2 +42,3 @@
## #include <sys/socket.h>
##+#endif
## #include <sys/types.h>
##@@ -47,2 +51,6 @@
## #include <libgssdp/gssdp-error.h>
##+#ifdef _WIN32
##+//#include <winsock2.h>
##+#include <iphlpapi.h>
##+#endif
## 
##@@ -63,3 +71,3 @@
## create_and_signal_context (GUPnPUnixContextManager *manager,
##-                           const char              *interface)
##+                           const char              *iface)
## {
##@@ -78,3 +86,3 @@
##                                   &error,
##-                                  "interface", interface,
##+                                  "interface", iface,
##                                   "port", port,
##@@ -86,3 +94,3 @@
##                            ("Failed to create context for interface '%s': %s",
##-                            interface,
##+                            iface,
##                             error->message);
##@@ -109,2 +117,22 @@
##         GUPnPUnixContextManager *manager = (GUPnPUnixContextManager *) data;
##+#ifdef _WIN32
##+        PIP_ADAPTER_INFO pAdapter;
##+        PIP_ADAPTER_INFO pAdapterInfo = NULL;
##+        ULONG ulOutBufLen = 0;
##+        if (GetAdaptersInfo(pAdapterInfo, &ulOutBufLen) != ERROR_BUFFER_OVERFLOW)
##+               return FALSE;
##+        if ((pAdapterInfo = (IP_ADAPTER_INFO*)malloc(ulOutBufLen)) == NULL)
##+               return FALSE;
##+        if (GetAdaptersInfo(pAdapterInfo, &ulOutBufLen) != NO_ERROR)
##+               return FALSE;
##+        pAdapter = pAdapterInfo;
##+       while (pAdapter) {
##+              if (pAdapter->Type == MIB_IF_TYPE_PPP)
##+                        continue;
##+               /* to do: check if interface is up */
##+              create_and_signal_context (manager, pAdapter->AdapterName);
##+               pAdapter = pAdapter->Next;
##+        }
##+        free(pAdapterInfo);
##+#else
##         struct ifaddrs *ifa_list, *ifa;
##@@ -146,3 +174,3 @@
##         freeifaddrs (ifa_list);
##-
##+#endif
##         return FALSE;
##EOF
## fix network adapter detection in libgupnp/gupnp-unix-context-manager.c (version >= 0.19.0)
#patch -ulbf libgupnp/gupnp-unix-context-manager.c << EOF
#--- libgupnp/gupnp-unix-context-manager.c  2012-10-06 13:03:12 +0200
#+++ libgupnp/gupnp-unix-context-manager.c  2012-10-07 13:41:34 +0200
#@@ -60,4 +60,8 @@
# gupnp_unix_context_manager_get_interfaces (GUPnPSimpleContextManager *manager)
# {
#+#ifdef __MINGW32__
#+        g_warning ("Not able to retrieve list of network interfaces on Windows\n");
#+        return FALSE;
#+#else
#         struct ifaddrs *ifa_list, *ifa;
#         GList *processed;
#@@ -90,4 +94,5 @@
#
#         return processed;
#+#endif
# }
#EOF
## fix use of interface libgupnp/gupnp-simple-context-manager.c (version >= 0.19.0)
#patch -ulbf libgupnp/gupnp-simple-context-manager.c << EOF
#--- libgupnp/gupnp-simple-context-manager.c  2012-10-06 13:03:12 +0200
#+++ libgupnp/gupnp-simple-context-manager.c  2012-10-07 08:37:06 +0200
#@@ -58,3 +58,3 @@
# static void
#-create_and_signal_context (const char                *interface,
#+create_and_signal_context (const char                *iface,
#                            GUPnPSimpleContextManager *manager)
#@@ -74,3 +74,3 @@
#                                   &error,
#-                                  "interface", interface,
#+                                  "interface", iface,
#                                   "port", port,
#@@ -82,3 +82,3 @@
#                            ("Failed to create context for interface '%s': %s",
#-                            interface,
#+                            iface,
#                             error->message);
#EOF
## fix missing GAA_FLAG_INCLUDE_PREFIX in libgupnp/gupnp-windows-context-manager.c (version >= 0.20.8)
#mv libgupnp/gupnp-windows-context-manager.c libgupnp/gupnp-windows-context-manager.c.bak
#echo "#define _WIN32_WINNT 0x0501" > libgupnp/gupnp-windows-context-manager.c
#cat libgupnp/gupnp-windows-context-manager.c.bak >> libgupnp/gupnp-windows-context-manager.c
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
## fix making tests
#cat > tests/Makefile.in << EOF
#all:
#install:
#install-strip:
#clean:
#EOF
## fix making examples
#cat > examples/Makefile.in << EOF
#all:
#install:
#install-strip:
#clean:
#EOF
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I`pwd`/win32fix" LDFLAGS="-Wl,--enable-auto-import -Wl,--as-needed -lrpcrt4 -lws2_32 -liphlpapi -no-undefined -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no CFLAGS="-I`pwd`/win32fix" LDFLAGS="-Wl,--enable-auto-import -Wl,--as-needed -lrpcrt4 -lws2_32 -liphlpapi -no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no CFLAGS="-I`pwd`/win32fix" LDFLAGS="-Wl,--enable-auto-import -Wl,--as-needed -lrpcrt4 -lws2_32 -liphlpapi -Wl,-no-undefined" &&
# wl-showstatus build-install &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# mv libgupnp/Makefile libgupnp/Makefile.bak &&
# sed -e "s/-luuid//g" libgupnp/Makefile.bak > libgupnp/Makefile &&
# make install-strip install-pkgconfigDATA &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####libgupnp/.libs/gupnp-service.o:gupnp-service.c:(.text+0x3e1): undefined reference to `__sync_fetch_and_sub_4'
##make clean; make CFLAGS="-march=i686" CXXFLAGS="-march=i686" && echo OK
#####.libs/gupnp-unix-context-manager.o:gupnp-unix-context-manager.c:(.text+0x235): undefined reference to `getifaddrs'
#####.libs/gupnp-unix-context-manager.o:gupnp-unix-context-manager.c:(.text+0x304): undefined reference to `freeifaddrs'
## see also: http://jensge.org/gupnp-on-win32/
## To do: make DLL (libtool: link: warning: undefined symbols not allowed in i686-pc-mingw32 shared libraries)



export NAME="GUPnP"
export STATUS=
export URL=http://www.gupnp.org/
export BASENAME=gupnp
export DESCRIPTION="GUPnP is an elegant, object-oriented open source framework for creating UPnP devices and control points, written in C using GObject and libsoup. The GUPnP API is intended to be easy to use, efficient and flexible. It provides the same set of features as libupnp, but shields the developer from most of UPnP's internals."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.2.2
#export VERSIONDATE=20200102
#export VERSION=1.2.3
#export VERSIONDATE=20200623
#export VERSION=1.2.4
#export VERSIONDATE=20200810
#export VERSION=1.2.5
#export VERSIONDATE=20210524
#export VERSION=1.2.6
#export VERSIONDATE=20210525
#export VERSION=1.2.7
#export VERSIONDATE=20210606
#export VERSION=1.3.0
#export VERSIONDATE=20210704
#export VERSION=1.3.1
#export VERSIONDATE=20210814
#export VERSION=1.4.0
#export VERSIONDATE=20210919
#export VERSION=1.4.1
#export VERSIONDATE=20211207
#export VERSION=1.4.2
#export VERSIONDATE=20220108
#export VERSION=1.4.3
#export VERSIONDATE=20220114
#export VERSION=1.5.0
#export VERSIONDATE=20220425
#export VERSION=1.5.1
#export VERSIONDATE=20220604
#export VERSION=1.5.2
#export VERSIONDATE=20220702
#export VERSION=1.5.3
#export VERSIONDATE=20220808
#export VERSION=1.5.4
#export VERSIONDATE=20220903
#export VERSION=1.6.0
#export VERSIONDATE=20220917
#export VERSION=1.6.1
#export VERSIONDATE=20221108
export VERSION=1.6.2
export VERSIONDATE=20221121
wl-showstatus --package-version
#export DEPENDANCIES=gssdp,libsoup-2.4,libgcrypt,glib2,libxml2,gnutls,libgpg-error,zlib,gettext
export DEPENDANCIES=gssdp,libsoup-2.4,libgcrypt,glib2,libxml2,gnutls,libgpg-error,zlib,gettext,vala,gobject-introspection
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=meson,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gupnp/"
export DOWNLOADURL="https://download.gnome.org/sources/gupnp/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/$BASENAME/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://download.gnome.org/sources/gupnp/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix MSVC issue
mkdir -p winfix
cp -rf $PYDIR/lib/distutils winfix/
patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
@@ -85,3 +85,3 @@
         else:
-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
+            return None

EOF
## fix error: required keyword argument must be boolean or a feature option in libgupnp/meson.build (version <= 1.2.5 <= 1.4.3)
#patch -ulbf libgupnp/meson.build << EOF
#@@ -7,2 +7,2 @@
#-    system_deps += cc.find_library('ws2_32', required : 'true')
#-    system_deps += cc.find_library('iphlpapi', required : 'true')
#+    system_deps += cc.find_library('ws2_32', required : true)
#+    system_deps += cc.find_library('iphlpapi', required : true)
#EOF
## skip making doc (version >= 1.2.3)
#sed -i.bak -e "s/^subdir('doc')//#&/" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dcontext_manager=system -Dintrospection=false -Dvapi=false -Dgtk_doc=false -Dexamples=false . build_both &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dcontext_manager=system -Dintrospection=true -Dvapi=true -Dgtk_doc=false -Dexamples=false . build_both &&
 # fix slash/backslash path issue when calling Python from Ninja
 #sed -i.bak -e "/COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 # don't run xsltproc with --nonet parameter (version >= 1.2.3)
 ####I/O error : Attempt to load network entity http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl
 ####warning: failed to load external entity "http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl"
 ####cannot parse http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl
 sed -i.bak2 -e "s/ \"--nonet\"//" build_both/build.ninja &&
 wl-showstatus build-install &&
 #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 PKG_CONFIG= PATH=$PATH:$PYDIR PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



