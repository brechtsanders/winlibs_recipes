export NAME="libiscsi"
export STATUS=
export URL=https://github.com/sahlberg/libiscsi
export BASENAME=libiscsi
export DESCRIPTION="Libiscsi is a clientside library to implement the iSCSI protocol that can be used to access resource of an iSCSI Target."
export CATEGORY=system,communication
export TYPE=library
#export VERSION=fa4d3aa
#export VERSIONDATE=20111202
#export VERSION=1.1.0
#export VERSIONDATE=20111225
#export VERSION=1.2.0
#export VERSIONDATE=20120307
#export VERSION=1.3.0
#export VERSIONDATE=20120423
#export VERSION=1.4.0
#export VERSIONDATE=20120503
####In file included from E:\Prog\MinGW-mSys\include/fcntl.h:20, from lib/socket.c:44:
####/include/io.h:443: error: conflicting types for 'closesocket'
#export VERSION=1.5.0
#export VERSIONDATE=20120709
####./win32/win32_compat.h:32:22: error: Ws2ipdef.h: No such file or directory
export VERSION=1.6.0
export VERSIONDATE=20120904
#export VERSION=1.7.0
#export VERSIONDATE=20121107
####lib/connect.c:18:32: error: win32/win32_compat.h: No such file or directory
####lib/connect.c:259: warning: implicit declaration of function 'sleep'
####lib/connect.c:315: warning: implicit declaration of function 'dup2'
####lib/connect.c:327: warning: implicit declaration of function 'close'
#export VERSION=1.19.0
#export VERSIONDATE=20201201
#export VERSION=1.20.0
#export VERSIONDATE=20240321
wl-showstatus --package-version
export DEPENDENCIES=popt,libdl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="GPL/LGPL"
#export DOWNLOADURL="https://github.com/sahlberg/libiscsi/downloads"
#export DOWNLOADURL="https://github.com/sahlberg/libiscsi/releases/"
export DOWNLOADURL="https://github.com/sahlberg/libiscsi/tags/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
wl-wait4deps
#export DOWNLOADSOURCEURL=https://nodeload.github.com/sahlberg/libiscsi/tarball/master
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#tar xz --force-local -f $TARBALLDIR/$BASENAME/sahlberg-libiscsi-$VERSION.tar.gz
#mv sahlberg-libiscsi-$VERSION $BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://nodeload.github.com/sahlberg/libiscsi/tarball/master
#export DOWNLOADSOURCEURL=https://github.com/downloads/sahlberg/libiscsi/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/sahlberg/libiscsi/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/sahlberg/libiscsi/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/master $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#mv sahlberg-libiscsi-* $BASENAME-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix win32/win32_compat.h
patch -ulbf win32/win32_compat.h << EOF
--- win32/win32_compat.h  2012-09-03 19:17:44 +0200
+++ win32/win32_compat.h  2012-09-04 20:43:56 +0200
@@ -31,3 +31,19 @@
 #include <ws2tcpip.h>
+#ifndef __MINGW32__
 #include <Ws2ipdef.h>
+#else
+typedef struct pollfd {
+  int fd;
+  short events;
+  short revents;
+} pollfd_t;
+#if defined(__MINGW64__) || `if gcc --version|grep -q "MinGW-W64"; then echo 1; else echo 0; fi`
+#include <time.h>
+#else
+struct timezone {
+  int tz_minuteswest;
+  int tz_dsttime;
+};
+#endif
+#endif
 #include <basetsd.h>
EOF
# fix win32/win32_compat.c
patch -ulbf win32/win32_compat.c << EOF
--- win32/win32_compat.c  2012-09-03 19:17:44 +0200
+++ win32/win32_compat.c  2012-09-04 21:27:06 +0200
@@ -31,3 +31,9 @@
 #include <stdio.h>
-#include < time.h >
+#include <time.h>
+#ifdef __MINGW32__
+#define POLLIN   0x0001
+#define POLLPRI  0x0002
+#define POLLOUT  0x0004
+#define POLLHUP  0x0010
+#endif

@@ -159,2 +165,3 @@

+#if !defined(__MINGW32__)
 struct timezone
@@ -164,2 +171,3 @@
 };
+#endif
EOF
# fix lib/socket.c
patch -ulbf lib/socket.c << EOF
--- lib/socket.c  2012-09-03 19:17:44 +0200
+++ lib/socket.c  2012-09-04 20:52:26 +0200
@@ -18,2 +18,15 @@
 #if defined(WIN32)
+#ifdef __MINGW32__
+#include <io.h>
+#define EINPROGRESS WSAEINPROGRESS
+#define EWOULDBLOCK WSAEWOULDBLOCK
+#define SOL_TCP IPPROTO_TCP
+#define POLLIN   0x0001
+#define POLLPRI  0x0002
+#define POLLOUT  0x0004
+#define POLLERR  0x0008
+#define POLLHUP  0x0010
+#define POLLNVAL 0x0020
+#define _WIN32_WINNT 0x0501
+#endif
 #include <winsock2.h>
EOF
# fix lib/login.c
patch -ulbf lib/login.c << EOF
--- lib/login.c  2012-09-03 19:17:44 +0200
+++ lib/login.c  2012-09-04 21:12:10 +0200
@@ -46,3 +46,3 @@
        str = malloc(1024);
-#if defined(WIN32)
+#if defined(WIN32) && !defined(__MINGW32__)
        if (_snprintf_s(str, 1024, 1024, "InitiatorName=%s", iscsi->initiator_name) == -1) {
@@ -77,3 +77,3 @@
        str = malloc(1024);
-#if defined(WIN32)
+#if defined(WIN32) && !defined(__MINGW32__)
        if (_snprintf_s(str, 1024, 1024, "InitiatorAlias=%s", iscsi->alias) == -1) {
@@ -115,3 +115,3 @@
        str = malloc(1024);
-#if defined(WIN32)
+#if defined(WIN32) && !defined(__MINGW32__)
        if (_snprintf_s(str, 1024, 1024, "TargetName=%s", iscsi->target_name) == -1) {
@@ -235,3 +235,3 @@
        str = malloc(1024);
-#if defined(WIN32)
+#if defined(WIN32) && !defined(__MINGW32__)
        if (_snprintf_s(str, 1024, 1024, "InitialR2T=%s", iscsi->want_initial_r2t == ISCSI_INITIAL_R2T_NO ?
@@ -268,3 +268,3 @@
        str = malloc(1024);
-#if defined(WIN32)
+#if defined(WIN32) && !defined(__MINGW32__)
        if (_snprintf_s(str, 1024, 1024, "ImmediateData=%s", iscsi->want_immediate_data == ISCSI_IMMEDIATE_DATA_NO ?
@@ -301,3 +301,3 @@
        str = malloc(1024);
-#if defined(WIN32)
+#if defined(WIN32) && !defined(__MINGW32__)
        if (_snprintf_s(str, 1024, 1024, "MaxBurstLength=%d", iscsi->max_burst_length) == -1) {
@@ -332,3 +332,3 @@
        str = malloc(1024);
-#if defined(WIN32)
+#if defined(WIN32) && !defined(__MINGW32__)
        if (_snprintf_s(str, 1024, 1024, "FirstBurstLength=%d", iscsi->first_burst_length) == -1) {
@@ -363,3 +363,3 @@
        str = malloc(1024);
-#if defined(WIN32)
+#if defined(WIN32) && !defined(__MINGW32__)
        if (_snprintf_s(str, 1024, 1024, "MaxRecvDataSegmentLength=%d", iscsi->initiator_max_recv_data_segment_length) == -1) {
EOF
# fix lib/task_mgmt.c
patch -ulbf lib/task_mgmt.c << EOF
--- lib/task_mgmt.c  2012-09-03 19:17:44 +0200
+++ lib/task_mgmt.c  2012-09-04 21:17:54 +0200
@@ -23,3 +23,7 @@
 #include <stdio.h>
+#if defined(__MINGW32__)
+#include <winsock2.h>
+#else
 #include <arpa/inet.h>
+#endif
 #include "iscsi.h"
EOF
# fix src/iscsi-inq.c
patch -ulbf src/iscsi-inq.c << EOF
--- src/iscsi-inq.c  2012-09-03 19:17:44 +0200
+++ src/iscsi-inq.c  2012-09-04 21:44:52 +0200
@@ -21,3 +21,5 @@
 #include <string.h>
+#ifndef __MINGW32__
 #include <poll.h>
+#endif
 #include <popt.h>
EOF
# fix src/iscsi-ls.c
patch -ulbf src/iscsi-ls.c << EOF
--- src/iscsi-ls.c  2012-09-03 19:17:44 +0200
+++ src/iscsi-ls.c  2012-09-04 21:44:46 +0200
@@ -21,3 +21,7 @@
 #include <string.h>
+#ifdef __MINGW32__
+#include "win32/win32_compat.h"
+#else
 #include <poll.h>
+#endif
 #include <popt.h>
EOF
# fix test-tool/iscsi-test.c
patch -ulbf test-tool/iscsi-test.c << EOF
--- test-tool/iscsi-test.c  2012-09-03 19:17:44 +0200
+++ test-tool/iscsi-test.c  2012-09-04 22:05:56 +0200
@@ -20,3 +20,5 @@
 #define _GNU_SOURCE
+#if !defined(__MINGW32__)
 #include <sys/syscall.h>
+#endif
 #include <dlfcn.h>
@@ -27,5 +29,13 @@
 #include <string.h>
+#if defined(__MINGW32__)
+#include "win32/win32_compat.h"
+#else
 #include <poll.h>
+#endif
 #include <popt.h>
+#if defined(__MINGW32__)
+#define fnmatch(p,s,f) 0
+#else
 #include <fnmatch.h>
+#endif
 #include "slist.h"
EOF
# fix test-tool/0383_preventallow_target_warm_reset.c
patch -ulbf test-tool/0383_preventallow_target_warm_reset.c << EOF
--- test-tool/0383_preventallow_target_warm_reset.c  2012-09-04 22:11:58 +0200
+++ test-tool/0383_preventallow_target_warm_reset.c  2012-09-04 22:12:06 +0200
@@ -19,3 +19,7 @@
 #include <string.h>
+#if defined(__MINGW32__)
+#include "win32/win32_compat.h"
+#else
 #include <poll.h>
+#endif
 #include "iscsi.h"
EOF
# fix test-tool/0384_preventallow_target_cold_reset.c
patch -ulbf test-tool/0384_preventallow_target_cold_reset.c << EOF
--- test-tool/0384_preventallow_target_cold_reset.c  2012-09-04 22:12:22 +0200
+++ test-tool/0384_preventallow_target_cold_reset.c  2012-09-04 22:13:40 +0200
@@ -19,3 +19,7 @@
 #include <string.h>
+#if defined(__MINGW32__)
+#include "win32/win32_compat.h"
+#else
 #include <poll.h>
+#endif
 #include "iscsi.h"
EOF
# fix test-tool/0385_preventallow_lun_reset.c
patch -ulbf test-tool/0385_preventallow_lun_reset.c << EOF
--- test-tool/0385_preventallow_lun_reset.c  2012-09-04 22:14:42 +0200
+++ test-tool/0385_preventallow_lun_reset.c  2012-09-04 22:15:04 +0200
@@ -19,3 +19,7 @@
 #include <string.h>
+#if defined(__MINGW32__)
+#include "win32/win32_compat.h"
+#else
 #include <poll.h>
+#endif
 #include "iscsi.h"
EOF
# fix test-tool/1000_cmdsn_invalid.c
patch -ulbf test-tool/1000_cmdsn_invalid.c << EOF
--- test-tool/1000_cmdsn_invalid.c  2012-09-03 19:17:44 +0200
+++ test-tool/1000_cmdsn_invalid.c  2012-09-04 22:15:54 +0200
@@ -18,3 +18,7 @@
 #include <stdio.h>
+#if defined(__MINGW32__)
+#include <winsock2.h>
+#else
 #include <arpa/inet.h>
+#endif
 #include "iscsi.h"
EOF
# fix test-tool/1010_datasn_invalid.c
patch -ulbf test-tool/1010_datasn_invalid.c << EOF
--- test-tool/1010_datasn_invalid.c  2012-09-03 19:17:44 +0200
+++ test-tool/1010_datasn_invalid.c  2012-09-04 22:17:58 +0200
@@ -18,3 +18,7 @@
 #include <stdio.h>
+#if defined(__MINGW32__)
+#include <winsock2.h>
+#else
 #include <arpa/inet.h>
+#endif
 #include "iscsi.h"
EOF
# fix test-tool/1020_bufferoffset_invalid.c
patch -ulbf test-tool/1020_bufferoffset_invalid.c << EOF
--- test-tool/1020_bufferoffset_invalid.c  2012-09-03 19:17:44 +0200
+++ test-tool/1020_bufferoffset_invalid.c  2012-09-04 22:17:58 +0200
@@ -18,3 +18,7 @@
 #include <stdio.h>
+#if defined(__MINGW32__)
+#include <winsock2.h>
+#else
 #include <arpa/inet.h>
+#endif
 #include "iscsi.h"
EOF
# fix missing definition of WIN32 (version >= 1.6.0)
sed -i.bak2 -e "s/\b\(WIN32\)\b/_&/" $(grep -l WIN32 $(find -name '*.h' -or -name '*.c'))
# also compile win32/win32_compat.c
sed -i.bak -e "s/^\(lib_libiscsi_la_SOURCES *= *\)/\1win32\/win32_compat.c /; s/^\(bin_iscsi_test_CPPFLAGS *= *\)/\1-Drandom=rand /" Makefile.am
# fix win32/win32_compat.h (version >= 1.6.0)
patch -ulbf win32/win32_compat.h << EOF
@@ -31,4 +31,5 @@
 #include <ws2tcpip.h>
-#ifndef __MINGW32__
+#if !defined(__MINGW32__) || defined(POLLIN)
 #include <Ws2ipdef.h>
+#include <time.h>
 #else
EOF
# also export win32_poll
echo "win32_poll" >> lib/libiscsi.syms
# configure
#./autogen.sh &&
# work around invalid AS_SET_STATUS
mv configure.ac configure.ac.bak
#grep -v "LD_ISCSI\|AS_SET_STATUS" configure.ac.bak >> configure.ac
#grep -v "AS_SET_STATUS" configure.ac.bak | sed -e "s/^.*LD_ISCSI.*$/LD_ISCSI=/" >> configure.ac
sed -e "s/^.*host_os in linux.*$/0)/" configure.ac.bak >> configure.ac
wl-showstatus configure &&
 mkdir -p m4 &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,--allow-multiple-definition" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/libdl-win32 $(if ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,--allow-multiple-definition" &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: not tested yet, probably not functional



