export NAME="preCICE"
export STATUS=
export URL=https://precice.org/
export BASENAME=precice
export DESCRIPTION="preCICE is an open-source coupling library for partitioned multi-physics simulations, including, but not restricted to fluid-structure interaction and conjugate heat transfer simulations."
export CATEGORY=science
export TYPE=library
#export VERSION=2.5.0
#export VERSIONDATE=20230503
####No package 'mpi-cxx' found
export VERSION=2.5.1
export VERSIONDATE=20240131
#export VERSION=3.0.0
#export VERSIONDATE=20240201
#export VERSION=3.1.0
#export VERSIONDATE=20240406
#export VERSION=3.1.1
#export VERSIONDATE=20240413
#export VERSION=3.1.2
#export VERSIONDATE=20240607
#export VERSION=3.2.0
#export VERSIONDATE=20250402
#export VERSION=3.3.0
#export VERSIONDATE=20251008
####No package 'mpi-cxx' found
wl-showstatus --package-version
export DEPENDENCIES=eigen,libxml2,json,fmt
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/precice/precice/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/precice/precice/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix CMakeLists.txt (version = 2.5.1)
patch -ulbf CMakeLists.txt << EOF
@@ -357,13 +357,2 @@
     )
-
-  # Add link for backwards compatibility
-  # TODO remove in 3.0.0
-  add_custom_target(
-    binprecice
-    ALL
-    COMMAND \${CMAKE_COMMAND} -E create_symlink precice-tools binprecice
-    DEPENDS precice-tools
-    WORKING_DIRECTORY \${CMAKE_CURRENT_BINARY_DIR}
-    BYPRODUCTS binprecice
-    )
 endif()
@@ -453,6 +442,2 @@
     )
-
-  # Install the binprecice link for backwards compatibility
-  # TODO remove in 3.0.0
-  install(FILES \${CMAKE_CURRENT_BINARY_DIR}/binprecice DESTINATION \${CMAKE_INSTALL_BINDIR})
 endif()
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPRECICE_PETScMapping:BOOL=OFF -DPRECICE_MPICommunication:BOOL=OFF -DPRECICE_PythonActions:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPRECICE_PETScMapping:BOOL=OFF -DPRECICE_MPICommunication:BOOL=OFF -DPRECICE_FEATURE_PYTHON_ACTIONS:BOOL=OFF -DPRECICE_FEATURE_MPI_COMMUNICATION:BOOL=OFF -DPRECICE_FEATURE_PETSC_MAPPING:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPRECICE_FEATURE_PETSC_MAPPING:BOOL=OFF -DPRECICE_FEATURE_MPI_COMMUNICATION:BOOL=OFF -DPRECICE_FEATURE_PYTHON_ACTIONS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 # avoid ninja error: multiple rules generate binprecice
 sed -i.bak -e "s/^build binprecice: phony/#&/" build_static/build.ninja &&
 # fix missing link libraries
 sed -i.bak2 -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_static/build.ninja &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPRECICE_PETScMapping:BOOL=OFF -DPRECICE_MPICommunication:BOOL=OFF -DPRECICE_PythonActions:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPRECICE_PETScMapping:BOOL=OFF -DPRECICE_MPICommunication:BOOL=OFF -DPRECICE_FEATURE_PYTHON_ACTIONS:BOOL=OFF -DPRECICE_FEATURE_MPI_COMMUNICATION:BOOL=OFF -DPRECICE_FEATURE_PETSC_MAPPING:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPRECICE_FEATURE_PETSC_MAPPING:BOOL=OFF -DPRECICE_FEATURE_MPI_COMMUNICATION:BOOL=OFF -DPRECICE_FEATURE_PYTHON_ACTIONS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 # avoid ninja error: multiple rules generate binprecice
 sed -i.bak -e "s/^build binprecice: phony/#&/" build_shared/build.ninja &&
 # fix missing link libraries
 sed -i.bak2 -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 strip build_shared/*.dll &&
 cp -u build_shared/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



