export NAME="Expat"
export STATUS=
export URL=http://www.libexpat.org/
#export URL=https://libexpat.github.io/
export BASENAME=expat
export DESCRIPTION="Expat is an XML parser library written in C. It is a stream-oriented parser in which an application registers handlers for things the parser might find in the XML document (like start tags)."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=2.0.1
#export VERSIONDATE=
#export VERSION=2.1.0
#export VERSIONDATE=20120325
#export VERSION=2.1.1
#export VERSIONDATE=20160312
#export VERSION=2.2.0
#export VERSIONDATE=20160622
#export VERSION=2.2.1
#export VERSIONDATE=20170626
#export VERSION=2.2.2
#export VERSIONDATE=20170714
#export VERSION=2.2.3
#export VERSIONDATE=20170815
#export VERSION=2.2.4
#export VERSIONDATE=20170821
#export VERSION=2.2.5
#export VERSIONDATE=20171102
#export VERSION=2.2.6
#export VERSIONDATE=20180816
#export VERSION=2.2.7
#export VERSIONDATE=20190620
#export VERSION=2.2.8
#export VERSIONDATE=20190914
#export VERSION=2.2.9
#export VERSIONDATE=20190926
#export VERSION=2.2.10
#export VERSIONDATE=20201004
#export VERSION=2.3.0
#export VERSIONDATE=20210325
#export VERSION=2.4.0
#export VERSIONDATE=20210523
#export VERSION=2.4.1
#export VERSIONDATE=20210524
#export VERSION=2.4.2
#export VERSIONDATE=20211220
#export VERSION=2.4.3
#export VERSIONDATE=20220117
#export VERSION=2.4.4
#export VERSIONDATE=20220130
#export VERSION=2.4.5
#export VERSIONDATE=20220219
#export VERSION=2.4.6
#export VERSIONDATE=20220221
#export VERSION=2.4.7
#export VERSIONDATE=20220305
#export VERSION=2.4.8
#export VERSIONDATE=20220329
#export VERSION=2.4.9
#export VERSIONDATE=20220921
#export VERSION=2.5.0
#export VERSIONDATE=20221026
#export VERSION=2.6.0
#export VERSIONDATE=20240207
#export VERSION=2.6.1
#export VERSIONDATE=20240301
export VERSION=2.6.2
export VERSIONDATE=20240314
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="MIT License"
#export DOWNLOADURL="http://sourceforge.net/projects/expat/files/"
#export DOWNLOADURL="http://sourceforge.net/projects/expat/files/expat/"
export DOWNLOADURL="https://github.com/libexpat/libexpat/releases R_"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/expat/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/expat/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://github.com/libexpat/libexpat/archive/R_$(echo $VERSION|tr . _).tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/R_$(echo $VERSION|tr . _).tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
### fix .cmake files (version >= 2.3.0)
######bug reported: https://github.com/libexpat/libexpat/issues/485
## fix cmake/autotools/expat-config-version.cmake.in (version = 2.3.0)
#patch -ulbf cmake/autotools/expat-config-version.cmake.in << EOF
#@@ -57,3 +57,3 @@
# # if the installed or the using project don't have CMAKE_SIZEOF_VOID_P set, ignore it:
#-if("\${CMAKE_SIZEOF_VOID_P}" STREQUAL "" OR "8" STREQUAL "")
#+if("\${CMAKE_SIZEOF_VOID_P}" STREQUAL "" OR "4" STREQUAL "")
#   return()
#@@ -62,4 +62,4 @@
# # check that the installed version has the same 32/64bit-ness as the one which is currently searching:
#-if(NOT CMAKE_SIZEOF_VOID_P STREQUAL "8")
#-  math(EXPR installedBits "8 * 8")
#+if(NOT CMAKE_SIZEOF_VOID_P STREQUAL "4")
#+  math(EXPR installedBits "4 * 8")
#   set(PACKAGE_VERSION "\${PACKAGE_VERSION} (\${installedBits}bit)")
#EOF
## fix cmake/autotools/expat-noconfig.cmake.in (version = 2.3.0)
#patch -ulbf cmake/autotools/expat-noconfig.cmake.in << EOF
#@@ -10,4 +10,4 @@
# set_target_properties(expat::expat PROPERTIES
#-  IMPORTED_LOCATION_NOCONFIG "\${_IMPORT_PREFIX}/@LIBDIR_BASENAME@/libexpat.so.@SO_MAJOR@.@SO_MINOR@.@SO_PATCH@"
#-  IMPORTED_SONAME_NOCONFIG "libexpat.so.@SO_MAJOR@"
#+  IMPORTED_IMPLIB_NOCONFIG "\${_IMPORT_PREFIX}/lib/libexpat.dll.a"
#+  IMPORTED_LOCATION_NOCONFIG "\${_IMPORT_PREFIX}/bin/libexpat.dll"
#   )
#@@ -15,3 +15,3 @@
# list(APPEND _IMPORT_CHECK_TARGETS expat::expat )
#-list(APPEND _IMPORT_CHECK_FILES_FOR_expat::expat "\${_IMPORT_PREFIX}/@LIBDIR_BASENAME@/libexpat.so.@SO_MAJOR@.@SO_MINOR@.@SO_PATCH@" )
#+list(APPEND _IMPORT_CHECK_FILES_FOR_expat::expat "\${_IMPORT_PREFIX}/lib/libexpat.dll.a" "\${_IMPORT_PREFIX}/bin/libexpat.dll" )
#
#EOF
mkdir -p build_normal build_utf16 build_unsignedshort &&
 wl-showstatus preconfigure &&
 aclocal &&
 automake -a -c -f &&
 #mkdir -p m4 &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 # allow building shared libraries when using clang
 if ${CC:-gcc} --version|grep -q "^clang" && ! ${CC:-gcc} --help|grep auto-import; then
  sed -i.bak -e "s/\$LD --help 2>&1 | \$GREP 'auto-import'/true/" configure
 fi &&
 wl-showstatus configure normal &&
 cd build_normal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM && make install || ( ln -s $INSTALLPREFIX/bin/xmlwf.exe $INSTALLPREFIX/bin/xmlwf && make install && rm $INSTALLPREFIX/bin/xmlwf )
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--export-all" && make install || ( ln -s $INSTALLPREFIX/bin/xmlwf.exe $INSTALLPREFIX/bin/xmlwf && make install && rm $INSTALLPREFIX/bin/xmlwf )
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-xmlwf .. &&
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-xmlwf .. LDFLAGS="-s" &&
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-xmlwf --without-docbook LDFLAGS="-s" .. &&
 ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-xmlwf --without-docbook CFLAGS="-Wno-incompatible-pointer-types" LDFLAGS="-s" .. &&
 # fix .exe extension for xmlwf
 sed -i.bak -e "s?\(xmlwf/xmlwf\)\( .*/xmlwf\)?\1.exe\2.exe?" Makefile &&
 cd .. &&
 wl-showstatus build-install normal &&
 make -Cbuild_normal install &&
 #( cp $INSTALLPREFIX/bin/libexpat-1.dll $INSTALLPREFIX/bin/libexpat.dll || true ) &&
 # build version for UTF-16 output as wchar_t
 wl-showstatus configure utf16 &&
 for F in $(find -name Makefile.am); do
  sed -i.bak1 -e "s/\(libexpat\)\([._]la\)/\1w\2/g" $F
 done &&
 cd build_utf16 &&
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xmlwf CFLAGS="-g -O2 -fshort-wchar" CPPFLAGS="-DXML_UNICODE_WCHAR_T" .. &&
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xmlwf CFLAGS="-g -O2 -fshort-wchar" CPPFLAGS="-DXML_UNICODE_WCHAR_T" LDFLAGS="-s" .. &&
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xmlwf --without-docbook CFLAGS="-g -O2 -fshort-wchar" CPPFLAGS="-DXML_UNICODE_WCHAR_T" LDFLAGS="-s" .. &&
 ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xmlwf --without-docbook CFLAGS="-g -O2 -fshort-wchar -Wno-incompatible-pointer-types" CPPFLAGS="-DXML_UNICODE_WCHAR_T" LDFLAGS="-s" .. &&
 cd .. &&
 #aclocal &&
 #automake -a -c -f &&
 wl-showstatus build-install utf16 &&
 make -Cbuild_utf16 install &&
 # build version for UTF-16 output as unsigned short
 wl-showstatus configure unsignedshort &&
 for F in $(find -name Makefile.am); do
  sed -i.bak2 -e "s/\(libexpat\)w\([._]la\)/\1u\2/g" $F
 done &&
 cd build_unsignedshort &&
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xmlwf CPPFLAGS="-DXML_UNICODE" .. &&
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xmlwf CPPFLAGS="-DXML_UNICODE" LDFLAGS="-s" .. &&
 #../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xmlwf --without-docbook CPPFLAGS="-DXML_UNICODE" LDFLAGS="-s" .. &&
 ../configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-xmlwf --without-docbook CFLAGS="-Wno-incompatible-pointer-types" CPPFLAGS="-DXML_UNICODE" LDFLAGS="-s" .. &&
 cd .. &&
 #aclocal &&
 #automake -a -c -f &&
 wl-showstatus build-install unsignedshort &&
 make -Cbuild_unsignedshort install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
# for T in char wchar_t ushort; do
#  if [ "$T" == "ushort" ]; then
#   sed -i.bak "s/\(set(_POSTFIX_WIDE \"\)w/\1u/" CMakeLists.txt
#  fi &&
#  mkdir -p build_static_$T build_shared_$T &&
#   wl-showstatus configure &&
#   cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DEXPAT_SHARED_LIBS:BOOL=OFF -DEXPAT_CHAR_TYPE:STRING=$T -DEXPAT_BUILD_TOOLS=$(if [ "$T" == "ushort" ]; then echo "OFF"; else echo "ON"; fi) -DEXPAT_BUILD_DOCS:BOOL=OFF -DEXPAT_BUILD_EXAMPLES:BOOL=OFF -DEXPAT_BUILD_TESTS:BOOL=OFF -S. -Bbuild_static_$T &&
#   #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
#   wl-showstatus configure &&
#   cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DEXPAT_SHARED_LIBS:BOOL=ON -DEXPAT_CHAR_TYPE:STRING=$T -DEXPAT_BUILD_TOOLS=$(if [ "$T" == "ushort" ]; then echo "OFF"; else echo "ON"; fi) -DEXPAT_BUILD_DOCS:BOOL=OFF -DEXPAT_BUILD_EXAMPLES:BOOL=OFF -DEXPAT_BUILD_TESTS:BOOL=OFF -S. -Bbuild_shared_$T &&
#   ## fix execution of Python scripts
#   #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
#   ## fix missing link libraries
#   #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
#   #wl-showstatus build &&
#   #ninja -Cbuild_static &&
#   #wl-showstatus build &&
#   #ninja -Cbuild_shared &&
#   wl-showstatus build-install &&
#   ninja -Cbuild_static_$T install/strip &&
#   wl-showstatus build-install &&
#   ninja -Cbuild_shared_$T install/strip || break
# done &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
