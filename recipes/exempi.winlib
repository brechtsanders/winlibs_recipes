export NAME="Exempi"
export STATUS=
export URL=http://libopenraw.freedesktop.org/wiki/Exempi
export BASENAME=exempi
export DESCRIPTION="Exempi is an implementation of XMP (Extensible Metadata Platform). Version 2.x is based on Adobe XMP SDK 4.1.1 and released under a BSD-style license like Adobe's."
export CATEGORY=
export TYPE=library
#export VERSION=2.1.1
#export VERSIONDATE=20111104
####MOV_Handler.hpp:20:18: error: QTML.h: No such file or directory
####MOV_Handler.hpp:21:20: error: Movies.h: No such file or directory
####MOV_Handler.cpp:21:33: error: QuickTimeComponents.h: No such file or directory
####MOV_Handler.hpp:80: error: 'Handle' does not name a type
####MOV_Handler.hpp:81: error: 'DataHandler' does not name a type
#export VERSION=2.2.0
#export VERSIONDATE=20120222
#export VERSION=2.2.1
#export VERSIONDATE=20130701
#export VERSION=2.2.2
#export VERSIONDATE=20140901
export VERSION=2.3.0
export VERSIONDATE=20160316
#export VERSION=2.4.0
#export VERSIONDATE=20170108
#export VERSION=2.4.1
#export VERSIONDATE=20170123
#export VERSION=2.4.2
#export VERSIONDATE=20170130
#export VERSION=2.4.3
#export VERSIONDATE=20170815
#export VERSION=2.4.4
#export VERSIONDATE=20180205
#export VERSION=2.4.5
#export VERSIONDATE=20180308
#export VERSION=2.5.0
#export VERSIONDATE=20190106
####configure: error: conditional "WIN_ENV" was never defined. Usually this means the macro was only invoked conditionally.
wl-showstatus --package-version
export DEPENDENCIES=boost
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="New-BSD, compatible with GPL"
export DOWNLOADURL="http://libopenraw.freedesktop.org/wiki/Exempi"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://libopenraw.freedesktop.org/download/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://libopenraw.freedesktop.org/download/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix missing GetFileSizeEx in source/common/LargeFileAccess.cpp
mv source/common/LargeFileAccess.cpp source/common/LargeFileAccess.cpp.bak
cat > source/common/LargeFileAccess.cpp << EOF
#define _WIN32_WINNT 0x0500
EOF
cat source/common/LargeFileAccess.cpp.bak >> source/common/LargeFileAccess.cpp
# fix source/XMPFiles/FileHandlers/MOV_Handler.cpp
mv source/XMPFiles/FileHandlers/MOV_Handler.cpp source/XMPFiles/FileHandlers/MOV_Handler.cpp.bak
echo "#include <windows.h>" > source/XMPFiles/FileHandlers/MOV_Handler.cpp
cat source/XMPFiles/FileHandlers/MOV_Handler.cpp.bak >> source/XMPFiles/FileHandlers/MOV_Handler.cpp
# fix missing int8_t in public/include/XMP_Const.h (version >= 2.2.0)
mv public/include/XMP_Const.h public/include/XMP_Const.h.bak
echo "#include <stdint.h>" > public/include/XMP_Const.h
cat public/include/XMP_Const.h.bak >> public/include/XMP_Const.h
# fix unicode problem in source/XMPFiles/XMPFiles_Impl.cpp (version >= 2.2.0)
mv source/XMPFiles/XMPFiles_Impl.cpp source/XMPFiles/XMPFiles_Impl.cpp.bak
echo "#define UNICODE" > source/XMPFiles/XMPFiles_Impl.cpp
cat source/XMPFiles/XMPFiles_Impl.cpp.bak >> source/XMPFiles/XMPFiles_Impl.cpp
# fix snprintf issues
mv public/include/XMP_Environment.h public/include/XMP_Environment.h.bak
echo "#include <stdio.h>  //for snprintf" > public/include/XMP_Environment.h
cat public/include/XMP_Environment.h.bak >> public/include/XMP_Environment.h
## fix missing gmtime_r/readdir_r/realpath in source/Host_IO-POSIX.cpp (version >= 2.4.0)
#mv source/Host_IO-POSIX.cpp source/Host_IO-POSIX.cpp.bak
#if ( gcc --version | grep -q "MinGW-W64" ); then
#cat > source/Host_IO-POSIX.cpp << EOF
##include <pthread.h>
##define gmtime_r( _clock, _result ) ( *(_result) = *gmtime( (_clock) ), (_result) )
#EOF
#else
#echo "#include <pthread.h>" > source/Host_IO-POSIX.cpp
#fi
#cat >> source/Host_IO-POSIX.cpp << EOF
##include <dirent.h>
#static int readdir_r (DIR *dirp, struct dirent *entry, struct dirent **result)
#{
#  errno = 0;
#  entry = readdir (dirp);
#  *result = entry;
#  if (entry == NULL && errno != 0)
#    return -1;
#  return 0;
#}
##define realpath(N,R) _fullpath((R),(N),_MAX_PATH)
#EOF
#cat source/Host_IO-POSIX.cpp.bak >> source/Host_IO-POSIX.cpp
# fix detection of Windows environment (version <= 2.3.0)
mv configure configure.bak
sed -e "s/UNIX_ENV/WIN_ENV/" configure.bak > configure
## remove dependancy on dynamic libstdc++ (GCC 4)
#mv libtool libtool.bak &&
#sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
## fix configure: error: conditional "WIN_ENV" was never defined (version >= 2.4.0)
#sed -i.bak -e "s/as_fn_error\(.*conditional.*WIN_ENV.*was never defined\)/echo\1/" configure
wl-showstatus configure &&
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
####configure: error: conditional "WIN_ENV" was never defined. Usually this means the macro was only invoked conditionally.
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-boost=$MINGWPREFIX &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-boost=$MINGWPREFIX LDFLAGS="-Wl,--as-needed -luuid -Wl,-no-undefined" &&
 wl-showstatus build-install &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 ( make install-strip || make install-strip LIBS="-Wl,--as-needed -luuid" ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



