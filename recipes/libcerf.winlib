#export NAME="libcerf"
#export STATUS=
##export URL=http://apps.jcns.fz-juelich.de/doku/sc/libcerf
#export URL=https://jugit.fz-juelich.de/mlz/libcerf
#export BASENAME=libcerf
#export DESCRIPTION="A self-contained C library providing complex error functions, based on Faddeeva's plasma dispersion function w(z). Also provides Dawson's integral and Voigt's convolution of a Gaussian and a Lorentzian."
#export CATEGORY=
#export TYPE=library
##export VERSION=1.4
##export VERSIONDATE=20150608
##export VERSION=1.5
##export VERSIONDATE=20161013
##export DEPENDENCIES=
##export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=
##export OPTIONALBUILDDEPENDENCIES=
##export VERSION=1.6
##export VERSIONDATE=20180920
##export VERSION=1.7
##export VERSIONDATE=20180927
##export VERSION=1.8
##export VERSIONDATE=20181003
##export VERSION=1.9
##export VERSIONDATE=20181016
##export VERSION=1.10
##export VERSIONDATE=20181221
#export VERSION=1.11
#export VERSIONDATE=20181229
##export VERSION=1.13
##export VERSIONDATE=20190301
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
##export DOWNLOADURL="http://sourceforge.net/projects/libcerf/files/"
##export DOWNLOADURL="http://apps.jcns.fz-juelich.de/src/libcerf/"
#export DOWNLOADURL="https://jugit.fz-juelich.de/mlz/libcerf/-/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/libcerf/$BASENAME-$VERSION.tgz
#export DOWNLOADSOURCEURL=http://apps.jcns.fz-juelich.de/src/libcerf/$BASENAME-$VERSION.tgz
##export DOWNLOADSOURCEURL=https://jugit.fz-juelich.de/mlz/libcerf/uploads/924b8d245ad3461107ec630734dfc781/libcerf-1.13.tgz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tgz
#cd $BASENAME-$VERSION
##wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared &&
## # fix building DLLs
## mv libtool libtool.bak &&
## sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
## wl-showstatus build-install &&
## ( make install-strip || ( make -Clib && make -i install-strip )) &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
## fix for building both shared and static libraries (version >= 1.6 <= 1.7)
##patch -ulbf lib/CMakeLists.txt << EOF
##@@ -8,2 +8,4 @@
## add_library(\${library_name} SHARED \${src_files})
##+add_library(\${library_name}_static STATIC \${src_files})
##+set_target_properties(\${library_name}_static PROPERTIES OUTPUT_NAME \${library_name})
##
##@@ -17,6 +19,4 @@
##
##-install(
##-    TARGETS \${library_name} LIBRARY
##-    DESTINATION \${destination}/lib
##-    COMPONENT Libraries)
##+install(TARGETS \${library_name} DESTINATION \${destination}/lib RUNTIME DESTINATION \${destination}/bin)
##+install(TARGETS \${library_name}_static DESTINATION \${destination}/lib)
## install(
##EOF
### fix for building both shared and static libraries (version = 1.8)
##patch -ulbf lib/CMakeLists.txt << EOF
##@@ -19,2 +19,4 @@
##     add_library(\${lib} SHARED \${src_files})
##+    add_library(\${lib}_static STATIC \${src_files})
##+    set_target_properties(\${lib}_static PROPERTIES OUTPUT_NAME \${lib})
## endif()
##@@ -36,3 +38,8 @@
##     install(
##-        TARGETS \${lib} LIBRARY
##+        TARGETS \${lib}
##+        DESTINATION \${destination}/lib
##+       RUNTIME DESTINATION \${destination}/bin
##+        COMPONENT Libraries)
##+    install(
##+        TARGETS \${lib}_static
##         DESTINATION \${destination}/lib
##EOF
### fix for building both shared and static libraries (version = 1.9)
##patch -ulbf lib/CMakeLists.txt << EOF
##@@ -16,2 +16,4 @@
## add_library(\${lib} \${src_files})
##+add_library(\${lib}_static STATIC \${src_files})
##+set_target_properties(\${lib}_static PROPERTIES OUTPUT_NAME \${lib})
##
##@@ -32,3 +34,8 @@
##     install(
##-        TARGETS \${lib} LIBRARY
##+        TARGETS \${lib}
##+        DESTINATION \${destination}/lib
##+        RUNTIME DESTINATION \${destination}/bin
##+        COMPONENT Libraries)
##+    install(
##+        TARGETS \${lib}_static
##         DESTINATION \${destination}/lib
##EOF
## fix for building both shared and static libraries (version >= 1.10)
#patch -ulbf lib/CMakeLists.txt << EOF
#@@ -19,2 +19,4 @@
#     add_library(\${lib} SHARED \${src_files})
#+    add_library(\${lib}_static STATIC \${src_files})
#+    set_target_properties(\${lib}_static PROPERTIES OUTPUT_NAME \${lib})
# endif()
#@@ -38,2 +40,9 @@
#         DESTINATION \${destination}/lib
#+        ARCHIVE DESTINATION \${destination}/lib
#+        RUNTIME DESTINATION \${destination}/bin
#+        COMPONENT Libraries)
#+    install(
#+        TARGETS \${lib}_static LIBRARY
#+        DESTINATION \${destination}/lib
#+        ARCHIVE DESTINATION \${destination}/lib
#         COMPONENT Libraries)
#EOF
### fix for building both shared and static libraries (version >= 1.13)
##patch -ulbf lib/CMakeLists.txt << EOF
##@@ -16,3 +16,5 @@
##
##-add_library(\${lib} \${src_files})
##+add_library(\${lib} SHARED \${src_files})
##+add_library(\${lib}_static STATIC \${src_files})
##+set_target_properties(\${lib}_static PROPERTIES OUTPUT_NAME \${lib})
##
##@@ -35,2 +37,9 @@
##         DESTINATION \${destination}/lib
##+        ARCHIVE DESTINATION \${destination}/lib
##+        RUNTIME DESTINATION \${destination}/bin
##+        COMPONENT Libraries)
##+    install(
##+        TARGETS \${lib}_static LIBRARY
##+        DESTINATION \${destination}/lib
##+        ARCHIVE DESTINATION \${destination}/lib
##         COMPONENT Libraries)
##EOF
## skip building man to avoid missing pod2html/pod2man (version >= 1.6)
#sed -i.bak -e "s/^add_subdirectory(man)/#&/" CMakeLists.txt
#mkdir -p build &&
# wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLIB_MAN:BOOL=OFF -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild &&
# wl-showstatus build-install &&
# make -Cbuild install/strip &&
# strip $INSTALLPREFIX/bin/*.dll &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#sed -i.bak -e "s/^#if _WIN32/#if defined(_WIN32) \&\& \!defined(STATIC)/" lib/w_of_z.c run/run_w_of_z.c
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCERF_CPP:BOOL=ON -DPEDANTIC:BOOL=OFF -DLIB_MAN:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-DSTATIC" -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DCERF_CPP:BOOL=ON -DPEDANTIC:BOOL=OFF -DLIB_MAN:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DLIB_RUN:BOOL=OFF -S. -Bbuild_shared &&
# #wl-showstatus build &&
# #make -Cbuild_static &&
# #wl-showstatus build &&
# #make -Cbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
#    echo OK




export NAME="libcerf"
export STATUS=
export URL=https://jugit.fz-juelich.de/mlz/libcerf
export BASENAME=libcerf
export DESCRIPTION="A self-contained C library providing complex error functions, based on Faddeeva's plasma dispersion function w(z). Also provides Dawson's integral and Voigt's convolution of a Gaussian and a Lorentzian."
export CATEGORY=
export TYPE=library
export VERSION=3.0
export VERSIONDATE=20250610
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MOT
export DOWNLOADURL="https://jugit.fz-juelich.de/mlz/libcerf/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://jugit.fz-juelich.de/mlz/libcerf/-/archive/v$VERSION/$BASENAME-v$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-v$VERSION.tar.bz2
cd $BASENAME-v$VERSION
# fix C support in lib/cerf.h (version >= 3.0)
patch -ulbf lib/cerf.h << EOF
@@ -54,3 +54,3 @@
 #    include <complex.h>
-#    if _WIN32
+#    if defined(_WIN32) && !defined(__MINGW32__)
 #      error Compilation under C not supported by MSVC (arithmetic operators missing)
EOF
# fix C support in CMakeLists.txt (version >= 3.0)
patch -ulbf CMakeLists.txt << EOF
@@ -28,3 +28,3 @@
 if (CERF_C)
-    if(WIN32)
+    if(MSVC)
         message(FATAL_ERROR "Compilation as C not supported by MSVC, use -DCERF_C=OFF")
EOF
# fix location of .dll file in cmake/buildLib.cmake (version >= 3.0)
patch -ulbf cmake/buildLib.cmake << EOF
@@ -33,3 +33,3 @@
     EXPORT interface
-    RUNTIME DESTINATION \${CMAKE_INSTALL_LIBDIR}
+    RUNTIME DESTINATION \${CMAKE_INSTALL_BINDIR}
     LIBRARY DESTINATION \${CMAKE_INSTALL_LIBDIR}
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DLIB_MAN:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DLIB_MAN:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install-static &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install-shared &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



