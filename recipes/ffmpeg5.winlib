export NAME="FFmpeg 5"
export STATUS=
export URL=http://ffmpeg.org/
export BASENAME=ffmpeg5
export DESCRIPTION="FFmpeg is a complete solution to record, convert and stream audio and video. It includes libavcodec, the leading audio/video codec library."
export CATEGORY=video,codec
export TYPE=library
#export VERSION=5.0
#export VERSIONDATE=20220115
#export VERSION=5.0.1
#export VERSIONDATE=20220405
#export VERSION=5.0.2
#export VERSIONDATE=20221104
#export VERSION=5.0.3
#export VERSIONDATE=20230403
#export VERSION=5.1
#export VERSIONDATE=20220723
#export VERSION=5.1.1
#export VERSIONDATE=20220901
#export VERSION=5.1.2
#export VERSIONDATE=20220925
#export VERSION=5.1.3
#export VERSIONDATE=20230327
#export VERSION=5.1.4
#export VERSIONDATE=20231110
#export VERSION=5.1.5
#export VERSIONDATE=20240615
export VERSION=5.1.7
export VERSIONDATE=20250814
wl-showstatus --package-version
export DEPENDENCIES=zlib,libbz2,libdl,freetype2,libgsm,lame,libogg,libvorbis,libtheora,opencore-amr,librtmp,schroedinger,libspeex,x264,libxavs,libvpx,frei0r,xvidcore,celt
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=nasm
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.md
export LICENSETYPE="mostly LGPL, some parts MIT/X11/BSD-style, optional modules under GPL"
export DOWNLOADURL="http://ffmpeg.org/releases/ ffmpeg-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ffmpeg.org/releases/ffmpeg-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xJ --force-local -f $TARBALLDIR/$BASENAME/ffmpeg-$VERSION.tar.xz
cd ffmpeg-$VERSION
## fix deprecated x264_bit_depth in recent ffmpeg
#sed -i.bak -e "s/x264_bit_depth/X264_BIT_DEPTH/" libavcodec/libx264.c
## fix for building on MSYS (version >= 3.1.2)
#patch -ulbf configure << EOF
#--- configure  2016-08-09 08:25:30.501073500 +0200
#+++ configure  2016-08-09 08:27:32.111881100 +0200
#@@ -4671,6 +4671,3 @@
#         ;;
#-    msys*)
#-        die "Native MSYS builds are discouraged, please use the MINGW environment."
#-        ;;
#-    mingw32*|mingw64*)
#+    mingw32*|mingw64*|msys*)
#         if test \$target_os = "mingw32ce"; then
#EOF
# fix error when building with binutils 2.41 (version >= 5.1.3)
#### operandtype mismatch for `shr'
#### See also: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=108941
#### See also: https://gitweb.gentoo.org/repo/gentoo.git/commit/?id=1deddd92c7791033da96aff0c8f9098c0ae95e15
patch -ulbf libavcodec/x86/mathops.h << EOF
@@ -35,12 +35,20 @@
 static av_always_inline av_const int MULL(int a, int b, unsigned shift)
 {
     int rt, dummy;
+    if (__builtin_constant_p(shift))
     __asm__ (
         "imull %3               \n\t"
         "shrdl %4, %%edx, %%eax \n\t"
         :"=a"(rt), "=d"(dummy)
-        :"a"(a), "rm"(b), "ci"((uint8_t)shift)
+        :"a"(a), "rm"(b), "i"(shift & 0x1F)
     );
+    else
+        __asm__ (
+            "imull %3               \n\t"
+            "shrdl %4, %%edx, %%eax \n\t"
+            :"=a"(rt), "=d"(dummy)
+            :"a"(a), "rm"(b), "c"((uint8_t)shift)
+        );
     return rt;
 }
 
@@ -113,19 +121,31 @@ __asm__ volatile(\
 // avoid +32 for shift optimization (gcc should do that ...)
 #define NEG_SSR32 NEG_SSR32
 static inline  int32_t NEG_SSR32( int32_t a, int8_t s){
+    if (__builtin_constant_p(s))
     __asm__ ("sarl %1, %0\n\t"
          : "+r" (a)
-         : "ic" ((uint8_t)(-s))
+         : "i" (-s & 0x1F)
     );
+    else
+        __asm__ ("sarl %1, %0\n\t"
+               : "+r" (a)
+               : "c" ((uint8_t)(-s))
+        );
     return a;
 }
 
 #define NEG_USR32 NEG_USR32
 static inline uint32_t NEG_USR32(uint32_t a, int8_t s){
+    if (__builtin_constant_p(s))
     __asm__ ("shrl %1, %0\n\t"
          : "+r" (a)
-         : "ic" ((uint8_t)(-s))
+         : "i" (-s & 0x1F)
     );
+    else
+        __asm__ ("shrl %1, %0\n\t"
+               : "+r" (a)
+               : "c" ((uint8_t)(-s))
+        );
     return a;
 }
EOF
# build both static and shared libraries
sed -i.bak -e "s/^\(\s*\)\(disable static\)/\1echo \2/" configure
## disable invalid linker flag -framework (version >= 5.1.4)
#sed -i.bak2 -e "s/-framework/-l/" configure
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX/ffmpeg5 --arch=$(echo $RUNPLATFORM|sed -e "s/^i.86/i586/; s/-.*$//") --enable-static --enable-shared --enable-w32threads --enable-gpl --enable-version3 --enable-postproc --enable-swscale --enable-avfilter --disable-devices --enable-runtime-cpudetect --disable-debug --enable-zlib --enable-bzlib --disable-avisynth --disable-libflite --enable-frei0r --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfreetype --enable-libgsm --enable-libmp3lame --enable-librtmp --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libxavs --enable-libcelt --enable-libxvid --disable-doc --extra-cflags="-I$MINGWPREFIX/include/libdl-win32" &&
 #./configure --prefix=$INSTALLPREFIX/ffmpeg5 --arch=$(echo $RUNPLATFORM|sed -e "s/^i.86/i586/; s/-.*$//") --enable-static --enable-shared --enable-w32threads --enable-gpl --enable-version3 --enable-postproc --enable-swscale --enable-avfilter --disable-devices --enable-runtime-cpudetect --disable-debug --enable-zlib --enable-bzlib --disable-avisynth --disable-libflite --enable-frei0r --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfreetype --enable-libgsm --enable-libmp3lame --enable-librtmp --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libxavs --enable-libcelt --enable-libxvid --extra-cflags="-I$MINGWPREFIX/include/libdl-win32" &&
 # --enable-libaacplus 
 # --enable-nonfree --enable-libfaac
 # --enable-libnut --enable-libdc1394 --enable-libdirac --enable-libopenjpeg --enable-libopencv --enable-libvo-amrwbenc 
 # avoid -framework linker flag (version >= 5.1.3)
 ####gcc.exe: error: unrecognized command-line option '-framework'
 sed -i.bak -e "s/-framework /-l/" ffbuild/config.mak &&
 wl-showstatus build-install &&
 #PERLLIB=$PWD:${PERLLIB:+:$PERLLIB} 
 make all install EXESUF=".exe" &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ffmpeg-$VERSION



