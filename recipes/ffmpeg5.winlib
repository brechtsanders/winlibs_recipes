export NAME="FFmpeg 5"
export STATUS=
export URL=http://ffmpeg.org/
export BASENAME=ffmpeg5
export DESCRIPTION="FFmpeg is a complete solution to record, convert and stream audio and video. It includes libavcodec, the leading audio/video codec library."
export CATEGORY=video,codec
export TYPE=library
#export VERSION=5.0
#export VERSIONDATE=20220115
#export VERSION=5.0.1
#export VERSIONDATE=20220405
#export VERSION=5.1
#export VERSIONDATE=20220723
export VERSION=5.1.1
export VERSIONDATE=20220901
wl-showstatus --package-version
export DEPENDANCIES=zlib,libbz2,libdl,freetype2,libgsm,lame,libogg,libvorbis,libtheora,opencore-amr,librtmp,schroedinger,libspeex,x264,libxavs,libvpx,frei0r,xvidcore,celt
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=nasm
export LICENSEFILE=LICENSE.md
export LICENSETYPE="mostly LGPL, some parts MIT/X11/BSD-style, optional modules under GPL"
export DOWNLOADURL="http://ffmpeg.org/releases/ ffmpeg-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ffmpeg.org/releases/ffmpeg-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/ffmpeg-$VERSION.tar.xz
cd ffmpeg-$VERSION
## fix deprecated x264_bit_depth in recent ffmpeg
#sed -i.bak -e "s/x264_bit_depth/X264_BIT_DEPTH/" libavcodec/libx264.c
## fix for building on MSYS (version >= 3.1.2)
#patch -ulbf configure << EOF
#--- configure  2016-08-09 08:25:30.501073500 +0200
#+++ configure  2016-08-09 08:27:32.111881100 +0200
#@@ -4671,6 +4671,3 @@
#         ;;
#-    msys*)
#-        die "Native MSYS builds are discouraged, please use the MINGW environment."
#-        ;;
#-    mingw32*|mingw64*)
#+    mingw32*|mingw64*|msys*)
#         if test \$target_os = "mingw32ce"; then
#EOF
# build both static and shared libraries
sed -i.bak -e "s/^\(\s*\)\(disable static\)/\1echo \2/" configure
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX/ffmpeg5 --arch=$(if ( echo $RUNPLATFORM | grep -qv x86_64 ); then echo i586; else echo x86_64; fi) --enable-static --enable-shared --enable-w32threads --enable-gpl --enable-version3 --enable-postproc --enable-swscale --enable-avfilter --disable-devices --enable-runtime-cpudetect --disable-debug --enable-zlib --enable-bzlib --disable-avisynth --disable-libflite --enable-frei0r --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libfreetype --enable-libgsm --enable-libmp3lame --enable-librtmp --enable-libspeex --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libxavs --enable-libcelt --enable-libxvid --extra-cflags="-I$MINGWPREFIX/include/libdl-win32" &&
 # --enable-libaacplus 
 # --enable-nonfree --enable-libfaac
 # --enable-libnut --enable-libdc1394 --enable-libdirac --enable-libopenjpeg --enable-libopencv --enable-libvo-amrwbenc 
 wl-showstatus build-install &&
 make all install EXESUF=".exe" &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ffmpeg-$VERSION



