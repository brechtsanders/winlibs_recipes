#export NAME="Harbour"
#export STATUS=
#export URL=https://harbour.github.io/
#export BASENAME=harbour
#export DESCRIPTION="Harbour is the open/free software implementation of a cross-platform, multi-threading, object-oriented, scriptable programming language, backwards compatible with xBase languages. Harbour consists of a compiler and runtime libraries with multiple UI, database and I/O backends, its own build system and a collection of libraries and bindings for popular APIs. With Harbour, you can build apps running on GNU/Linux, Windows (32/64-bit), macOS, iOS, Android, *BSD, *nix, and more."
#export CATEGORY=database
#export TYPE=application
#export VERSION=3.0.0
#export VERSIONDATE=20200523
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
#export DOWNLOADURL="https://sourceforge.net/projects/harbour-project/files/source/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/harbour-project/source/$VERSION/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
### fix src/rtl/gtcrs/gtcrs.h (version >= 3.0.0)
##patch -ulbf src/rtl/gtcrs/gtcrs.h << EOF
##@@ -79,3 +79,5 @@
## #include <string.h>
##+#ifndef _WIN32
## #include <sys/ioctl.h>
##+#endif
## #include <sys/time.h>
##@@ -83,4 +85,5 @@
## #include <sys/types.h>
##+#ifndef _WIN32
## #include <sys/wait.h>
##-#include <sys/ioctl.h>
##+#endif
## #include <signal.h>
##@@ -88,3 +91,5 @@
## #include <unistd.h>
##+#ifndef _WIN32
## #include <termios.h>
##+#endif
## #include <fcntl.h>
##EOF
## fix detection of libraries
#sed -i.bak -e "s?/usr/local/include?$MINGWPREFIX/include?g" config/detect.mk
## fix linking with dependancies
#sed -i.bak -e "s/-Wl,--out-implib.*$/& -Wl,--as-needed -lz -lpcre/" config/win/mingw.mk
#wl-showstatus build &&
# #make HB_PLATFORM=win HB_WITH_SLANG=yes HB_WITH_CURSES=no HB_WITH_X11=no HB_WITH_EXPAT=$MINGWPREFIX/lib HB_WITH_GS=$MINGWPREFIX HB_WITH_GS_BIN=$MINGWPREFIX/bin/gs.exe &&
# #make HB_INSTALL_PREFIX=$INSTALLPREFIX HB_PLATFORM=win HB_BUILD_SHARED=no HB_BUILD_DYN=no HB_BUILD_CONTRIB_DYN=yes HB_BUILD_DEBUG=no HB_BUILD_STRIP=all HB_BUILD_PARTS=all \
# make HB_INSTALL_PREFIX=$INSTALLPREFIX HB_PLATFORM=win HB_BUILD_SHARED=yes HB_BUILD_DYN=yes HB_BUILD_CONTRIB_DYN=yes HB_BUILD_DEBUG=no HB_BUILD_STRIP=all HB_BUILD_PARTS=all \
#  HB_WITH_ADS=no \
#  HB_WITH_ALLEGRO=$MINGWPREFIX/include \
#  HB_WITH_BLAT=no \
#  HB_WITH_BZIP2=$MINGWPREFIX \
#  HB_WITH_CAIRO=$MINGWPREFIX/include/cairo \
#  HB_WITH_CUPS=no \
#  HB_WITH_CURL=$MINGWPREFIX/include \
#  HB_WITH_CURSES=no \
#  HB_WITH_EXPAT=$MINGWPREFIX/lib \
#  HB_WITH_FIREBIRD=no \
#  HB_WITH_FREEIMAGE=$MINGWPREFIX \
#  HB_WITH_GD=$MINGWPREFIX/include \
#  HB_WITH_GPM=no \
#  HB_WITH_GS=$MINGWPREFIX \
#  HB_WITH_GS_BIN=$MINGWPREFIX/bin \
#  HB_WITH_JPEG=$MINGWPREFIX \
#  HB_WITH_LIBHARU=$MINGWPREFIX/include \
#  HB_WITH_LIBMAGIC=$MINGWPREFIX \
#  HB_WITH_LZF=$MINGWPREFIX \
#  HB_WITH_MINILZO=$MINGWPREFIX \
#  HB_WITH_MINIZIP=$MINGWPREFIX/include/minizip \
#  HB_WITH_MXML=$MINGWPREFIX \
#  HB_WITH_MYSQL=$MINGWPREFIX/include \
#  HB_WITH_OCILIB=$MINGWPREFIX/include \
#  HB_WITH_OPENSSL=no \
#  HB_WITH_PCRE=yes \
#  HB_WITH_PGSQL=$MINGWPREFIX/include \
#  HB_WITH_PNG=$MINGWPREFIX \
#  HB_WITH_QT=no \
#  HB_WITH_SLANG=no \
#  HB_WITH_SQLITE3=$MINGWPREFIX/ \
#  HB_WITH_WATT=no \
#  HB_WITH_X11=no \
#  HB_WITH_XDIFF=$MINGWPREFIX \
#  HB_WITH_ZLIB=$MINGWPREFIX/include &&
#    echo OK
##  HB_WITH_OPENSSL=$MINGWPREFIX/include \
##  HB_WITH_QT=$MINGWPREFIX/qt/include \
##LDFLAGS="-s -Wl,--as-needed -lz -lpcre" \
##LDSTRIP="-s -Wl,--as-needed -lz -lpcre" \
##DYSTRIP="-s -Wl,--as-needed -lz -lpcre" \
##HB_USER_LDFLAGS="________________HB_USER_LDFLAGS -Wl,--as-needed -lz -lpcre" \
##HB_USER_AFLAGS="________________HB_USER_DFLAGS -Wl,--as-needed -lz -lpcre" \
##HB_USER_DFLAGS="________________HB_USER_DFLAGS -Wl,--as-needed -lz -lpcre" \
##DYNFIX="________________DYNFIX" &&
##HB_USER_CFLAGS=
##HB_USER_LIBS="z pcre" &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="Harbour"
#export STATUS=
#export URL=https://harbour.github.io/
##export URL=https://github.com/harbour/core/
#export BASENAME=harbour
#export DESCRIPTION="Harbour is the open/free software implementation of a cross-platform, multi-threading, object-oriented, scriptable programming language, backwards compatible with xBase languages. Harbour consists of a compiler and runtime libraries with multiple UI, database and I/O backends, its own build system and a collection of libraries and bindings for popular APIs. With Harbour, you can build apps running on GNU/Linux, Windows (32/64-bit), macOS, iOS, Android, *BSD, *nix, and more."
#export CATEGORY=database
#export TYPE=application
#export VERSION=master
#export VERSIONDATE=20210420
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.txt
#export LICENSETYPE=GPL
##export DOWNLOADURL="https://sourceforge.net/projects/harbour-project/files/source/"
#export DOWNLOADURL="https://github.com/harbour/core/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/harbour-project/source/$VERSION/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/harbour/core/archive/refs/heads/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#mkdir -p $BASENAME-$VERSION
#tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz -C$BASENAME-$VERSION
#cd $BASENAME-$VERSION/core-$VERSION
#wl-showstatus build-install &&
# make install \
#  HB_INSTALL_PREFIX=$INSTALLPREFIX/share/harbour \
#  HB_BUILD_SHARED=yes \
#  HB_WITH_MINIZIP=local \
#  HB_WITH_MINILZO=local \
#  HB_WITH_ALLEGRO=no \
#  HB_WITH_CAIRO=no \
#  HB_BUILD_3RDEXT=no \
#  HB_BUILD_VERBOSE=yes \
#  HB_IMPLIB=yes \
#  HB_BUILD_DYN=no \
#  HB_BUILD_CONTRIB_DYN=no \
#  HB_BUILD_SHARED=no \
#  HB_BUILD_STRIP=all \
#  HB_WITH_ZLIB=local \
#  HB_WITH_BZIP2=local \
#  HB_WITH_MXML=local \
#  HB_WITH_LZF=local \
#  HB_WITH_CURL=$MINGWPREFIX\include \
#  HB_WITH_CURL=yes \
#  HB_WITH_OPENSSL=yes \
#  HB_STATIC_CURL=yes \
#  HB_STATIC_OPENSSL=yes &&
##    HB_WITH_ADS=C:\ads\acesdk
##    HB_WITH_ALLEGRO=C:\allegro\include
##    HB_WITH_BLAT=C:\blat\full\source
##    HB_WITH_BZIP2=C:\bzip2 (defaults to locally hosted version if not found)
##    HB_WITH_CAIRO=C:\cairo\include\cairo
##    HB_WITH_CURL=C:\curl\include
##    HB_WITH_CURSES= (on *nix systems and DJGPP, where it's autodetected)
##    HB_WITH_EXPAT=C:\expat\lib (defaults to locally hosted version)
##    HB_WITH_FIREBIRD=C:\Firebird\include
##    HB_WITH_FREEIMAGE=C:\FreeImage\Dist
##    HB_WITH_GD=C:\gd\include
##    HB_WITH_GS=C:\ghostscript-9.01\psi
##    HB_WITH_GS_BIN=C:\ghostscript-9.01\bin (on Windows)
##    HB_WITH_JPEG=C:\jpeglib (defaults to locally hosted version if not found)
##    HB_WITH_LIBHARU=C:\libharu\include (defaults to locally hosted version)
##    HB_WITH_LIBMAGIC= (currently on *nix systems)
##    HB_WITH_LZF=C:\liblzf (defaults to locally hosted version if not found)
##    HB_WITH_MINILZO=C:\minilzo\ (defaults to locally hosted version if not found)
##    HB_WITH_MINIZIP=C:\zlib\contrib\minizip (defaults to locally hosted version if not found)
##    HB_WITH_MXML=C:\minixml (defaults to locally hosted version if not found)
##    HB_WITH_MYSQL=C:\mysql\include
##    HB_WITH_OCILIB=C:\ocilib\include
##    HB_WITH_ODBC= (may only be needed on non-Windows systems)
##    HB_WITH_OPENSSL=C:\openssl\inc32 OR C:\openssl\include
##    HB_WITH_PCRE=C:\pcre (defaults to locally hosted version if not found)
##    HB_WITH_PGSQL=C:\pgsql\include
##    HB_WITH_PNG=C:\libpng (defaults to locally hosted version if not found)
##    HB_WITH_QT=C:\Qt\include (version 4.5.0 or upper is required)
##    HB_WITH_SLANG= (on *nix systems)
##    HB_WITH_SQLITE3=C:\sqlite3 (defaults to locally hosted version if not found)
##    HB_WITH_TIFF=C:\libtiff (defaults to locally hosted version if not found)
##    HB_WITH_TINYMT=C:\tinymt\tinymt (defaults to locally hosted version)
##    HB_WITH_WATT= (on MS-DOS systems)
##    HB_WITH_XDIFF=C:\libxdiff-0.23\xdiff (defaults to locally hosted version if not found)
##    HB_WITH_ZLIB=C:\zlib (defaults to locally hosted version if not found)
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Harbour"
export STATUS=
export URL=https://harbour.github.io/
#export URL=https://github.com/harbour/core/
export BASENAME=harbour
export DESCRIPTION="Harbour is the open/free software implementation of a cross-platform, multi-threading, object-oriented, scriptable programming language, backwards compatible with xBase languages. Harbour consists of a compiler and runtime libraries with multiple UI, database and I/O backends, its own build system and a collection of libraries and bindings for popular APIs. With Harbour, you can build apps running on GNU/Linux, Windows (32/64-bit), macOS, iOS, Android, *BSD, *nix, and more. This is a fork with updates and fixes."
export CATEGORY=database
export TYPE=application
export VERSION=3.4.0dev
export VERSIONDATE=20211117
wl-showstatus --package-version
export DEPENDENCIES=zlib,libbz2,mxml,liblzf,openssl,libcurl,ocilib
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/vszakats/hb/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/vszakats/hb/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/*-$VERSION
wl-showstatus build-install &&
 make install \
  HB_INSTALL_PREFIX=$INSTALLPREFIX/share/harbour \
  HB_PLATFORM=win HB_COMPILER=mingw$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; fi) \
  HB_BUILD_SHARED=yes \
  HB_WITH_MINIZIP=local \
  HB_WITH_MINILZO=local \
  HB_WITH_ALLEGRO=no \
  HB_WITH_CAIRO=no \
  HB_BUILD_3RDEXT=no \
  HB_BUILD_VERBOSE=yes \
  HB_IMPLIB=yes \
  HB_BUILD_DYN=yes \
  HB_BUILD_CONTRIB_DYN=yes \
  HB_BUILD_SHARED=yes \
  HB_BUILD_STRIP=all \
  HB_TRACE=yes \
  HB_WITH_ZLIB=local \
  HB_WITH_BZIP2=local \
  HB_WITH_MXML=local \
  HB_WITH_LZF=local \
  HB_WITH_PNG=$MINGWPREFIX\include \
  HB_WITH_CURL=$MINGWPREFIX\include \
  HB_WITH_CURL=yes \
  HB_STATIC_CURL=yes \
  HB_WITH_OPENSSL=yes \
  HB_STATIC_OPENSSL=yes \
  HB_WITH_OCILIB=$MINGWPREFIX\include \
  &&
#  HB_WITH_CURSES=$MINGWPREFIX\include \
#  HB_WITH_PCRE=$MINGWPREFIX\include \
#  HB_WITH_PCRE2=$MINGWPREFIX\include \
#  HB_WITH_SLANG=$MINGWPREFIX\include \
#    HB_WITH_ADS=C:\ads\acesdk
#    HB_WITH_ALLEGRO=C:\allegro\include
#    HB_WITH_BLAT=C:\blat\full\source
#    HB_WITH_BZIP2=C:\bzip2 (defaults to locally hosted version if not found)
#    HB_WITH_CAIRO=C:\cairo\include\cairo
#    HB_WITH_CURL=C:\curl\include
#    HB_WITH_CURSES= (on *nix systems and DJGPP, where it's autodetected)
#    HB_WITH_EXPAT=C:\expat\lib (defaults to locally hosted version)
#    HB_WITH_FIREBIRD=C:\Firebird\include
#    HB_WITH_FREEIMAGE=C:\FreeImage\Dist
#    HB_WITH_GD=C:\gd\include
#    HB_WITH_GS=C:\ghostscript-9.01\psi
#    HB_WITH_GS_BIN=C:\ghostscript-9.01\bin (on Windows)
#    HB_WITH_JPEG=C:\jpeglib (defaults to locally hosted version if not found)
#    HB_WITH_LIBHARU=C:\libharu\include (defaults to locally hosted version)
#    HB_WITH_LIBMAGIC= (currently on *nix systems)
#    HB_WITH_LZF=C:\liblzf (defaults to locally hosted version if not found)
#    HB_WITH_MINILZO=C:\minilzo\ (defaults to locally hosted version if not found)
#    HB_WITH_MINIZIP=C:\zlib\contrib\minizip (defaults to locally hosted version if not found)
#    HB_WITH_MXML=C:\minixml (defaults to locally hosted version if not found)
#    HB_WITH_MYSQL=C:\mysql\include
#    HB_WITH_OCILIB=C:\ocilib\include
#    HB_WITH_ODBC= (may only be needed on non-Windows systems)
#    HB_WITH_OPENSSL=C:\openssl\inc32 OR C:\openssl\include
#    HB_WITH_PCRE=C:\pcre (defaults to locally hosted version if not found)
#    HB_WITH_PGSQL=C:\pgsql\include
#    HB_WITH_PNG=C:\libpng (defaults to locally hosted version if not found)
#    HB_WITH_QT=C:\Qt\include (version 4.5.0 or upper is required)
#    HB_WITH_SLANG= (on *nix systems)
#    HB_WITH_SQLITE3=C:\sqlite3 (defaults to locally hosted version if not found)
#    HB_WITH_TIFF=C:\libtiff (defaults to locally hosted version if not found)
#    HB_WITH_TINYMT=C:\tinymt\tinymt (defaults to locally hosted version)
#    HB_WITH_WATT= (on MS-DOS systems)
#    HB_WITH_XDIFF=C:\libxdiff-0.23\xdiff (defaults to locally hosted version if not found)
#    HB_WITH_ZLIB=C:\zlib (defaults to locally hosted version if not found)
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



####See also: https://github.com/alencar/harbour-core-3.4
