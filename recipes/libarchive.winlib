#export NAME="libarchive"
#export STATUS=
#export URL=http://people.freebsd.org/~kientzle/libarchive/
#export BASENAME=libarchive
#export DESCRIPTION="The libarchive library provides a flexible interface for reading and writing streaming archive files such as tar and cpio. The library is inherently stream-oriented; readers serially iterate through the archive, writers serially add things to the archive.  In particular, note that there is no built-in support for random access nor for in-place modification."
#export CATEGORY=compression
#export TYPE=library
#export VERSION=2.6.0
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDENCIES=zlib,libbz2,liblzmadec
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
#export DOWNLOADURL="http://people.freebsd.org/~kientzle/libarchive/src/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://people.freebsd.org/~kientzle/libarchive/src/$BASENAME-$VERSION.tar.gz
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix definition problems
#cat > win_fixes.h << EOF
##undef uid_t
##undef gid_t
##define uid_t unsigned int
##define gid_t unsigned int
##define S_ISGID 0
##define S_ISUID 0
##define S_ISVTX 0
##define S_IFLNK 0
##define S_IFSOCK 0
##define S_ISLNK(m) 0
##define SIGUSR1 30
##define geteuid() 0
##define lstat(path, sb) stat((path), (sb))
##ifndef major
#  #define major(device) (((device) >> 8) & 0xff)
#  #define minor(device) ((device) & 0xff)
#  #define makedev(major, minor) (((major) << 8) | (minor))
##endif
#EOF
## fix libarchive/archive_write_disk.c for Windows (mkdir having only one parameter, no symlinks)
#patch -ulbf libarchive/archive_write_disk.c << EOF
#--- libarchive/archive_write_disk.c  Fri Apr 17 09:44:06 2009
#+++ libarchive/archive_write_disk.c  Fri Apr 17 09:48:35 2009
#@@ -1033,2 +1033,5 @@
#        if (linkname != NULL) {
#+#ifdef __MINGW32__
#+               return -1;
#+#else
#                r = link(linkname, a->name) ? errno : 0;
#@@ -1055,2 +1058,3 @@
#                return (r);
#+#endif
#        }
#@@ -1058,3 +1062,7 @@
#        if (linkname != NULL)
#+#ifdef __MINGW32__
#+               return -1;
#+#else
#                return symlink(linkname, a->name) ? errno : 0;
#+#endif
# 
#@@ -1108,3 +1116,3 @@
#                mode = (mode | MINIMUM_DIR_MODE) & MAXIMUM_DIR_MODE;
#-               r = mkdir(a->name, mode);
#+               r = mkdir(a->name/*, mode*/);
#                if (r == 0) {
#@@ -1631,3 +1639,3 @@
#        mode &= MAXIMUM_DIR_MODE;
#-       if (mkdir(path, mode) == 0) {
#+       if (mkdir(path/*, mode*/) == 0) {
#                if (mode != mode_final) {
#EOF
## fix tar/write.c
#patch -ulbf tar/write.c << EOF
#--- tar/write.c  Sun Dec 28 21:08:12 2008
#+++ tar/write.c  Thu Apr 16 17:26:48 2009
#@@ -1286,2 +1286,5 @@
# {
#+#ifdef __MINGW32__
#+       return -1;
#+#else
#        struct passwd   *pwent;
#@@ -1301,2 +1304,3 @@
#        return (0);
#+#endif
# }
#@@ -1313,2 +1317,5 @@
# {
#+#ifdef __MINGW32__
#+       return -1;
#+#else
#        struct group    *grent;
#@@ -1328,2 +1335,3 @@
#        return (0);
#+#endif
# }
#EOF
## fix missing libraries
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# echo "#include <win_fixes.h>" >> config.h &&
# mv Makefile Makefile.bak &&
# sed -e "s/^\(libarchive_la_LIBADD *= *.*\)$/\1 -lbz2/; s/^\(bsdtar_LDFLAGS *= *.*\)$/\1 -lregex/" Makefile.bak > Makefile &&
# make install-libLTLIBRARIES install-includeHEADERS &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



export NAME="libarchive"
export STATUS=
#export URL=http://libarchive.googlecode.com/
export URL=http://www.libarchive.org/
#export URL=https://github.com/libarchive/libarchive
export BASENAME=libarchive
export DESCRIPTION="The libarchive library provides a flexible interface for reading and writing streaming archive files such as tar and cpio. The library is inherently stream-oriented; readers serially iterate through the archive, writers serially add things to the archive. In particular, note that there is no built-in support for random access nor for in-place modification."
export CATEGORY=compression
export TYPE=library
#export VERSION=2.8.4
#export VERSION=2.8.5
#export VERSIONDATE=20110904
#export DEPENDENCIES=zlib,libbz2,liblzmadec,openssl,libxml2,expat,pcre
#export VERSION=3.0.2
#export VERSIONDATE=20111225
#export DEPENDENCIES=zlib,libbz2,xz,openssl,libxml2,expat,pcre,libnettle,libiconv
#export VERSION=3.0.3
#export VERSIONDATE=20120113
#export VERSION=3.1.2
#export VERSIONDATE=20160105
#export VERSION=3.2.0
#export VERSIONDATE=20160503
#export VERSION=3.2.1
#export VERSIONDATE=20160623
#export VERSION=3.2.2
#export VERSIONDATE=20161025
#export VERSION=3.3.1
#export VERSIONDATE=20170303
#export VERSION=3.3.2
#export VERSIONDATE=20170711
#export DEPENDENCIES=zlib,libbz2,xz,libnettle,libxml2,expat,pcre,libiconv
##export DEPENDENCIES=zlib,libbz2,xz,liblz4,openssl,libcrypt,libnettle,expat,pcre,libiconv
#export VERSION=3.3.3
#export VERSIONDATE=20180905
#export VERSION=3.4.0
#export VERSIONDATE=20190826
#export VERSION=3.4.1
#export VERSIONDATE=20191231
#export VERSION=3.4.2
#export VERSIONDATE=20200213
#export VERSION=3.4.3
#export VERSIONDATE=20200520
#export VERSION=3.5.1
#export VERSIONDATE=20201226
#export VERSION=3.5.2
#export VERSIONDATE=20210824
#export VERSION=3.5.3
#export VERSIONDATE=20220408
#export VERSION=3.6.1
#export VERSIONDATE=20220408
export VERSION=3.6.2
export VERSIONDATE=20221210
wl-showstatus --package-version
export DEPENDENCIES=zlib,libbz2,xz,liblz4,lzo,liblzmadec,openssl,libnettle,expat,pcre,libiconv,gettext
export OPTIONALDEPENDENCIES=zstd
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=BSD
#export DOWNLOADURL="http://code.google.com/p/libarchive/downloads/list"
#export DOWNLOADURL="http://www.libarchive.org/downloads/"
export DOWNLOADURL="https://github.com/libarchive/libarchive/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://libarchive.googlecode.com/files/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://www.libarchive.org/downloads/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/libarchive/libarchive/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix libarchive/archive_windows.h for 64-bit (version <= 3.0.2)
#patch -ulbf libarchive/archive_windows.h << EOF
#@@ -108,3 +108,5 @@
# #define        fstat           __la_fstat
#+#ifndef __MINGW64__
# #define        ftruncate       __la_ftruncate
#+#endif
# #define        futimes         __la_futimes
#@@ -112,3 +114,5 @@
# #define link           __la_link
#+#ifndef __MINGW64__
# #define        lseek           __la_lseek
#+#endif
# #define        lstat           __la_stat
#EOF
# fix ssize_t issue in libarchive/archive.h (version >= 3.2.1)
patch -ulbf libarchive/archive.h << EOF
@@ -85,3 +85,3 @@
 # if defined(_WIN32) && !defined(__CYGWIN__) && !defined(__WATCOMC__)
-#  if defined(_SSIZE_T_DEFINED) || defined(_SSIZE_T_)
+#  if defined(_SSIZE_T_DEFINED) || defined(_SSIZE_T_) || defined(__MINGW32__)
 typedef ssize_t la_ssize_t;
EOF
# fix missing export of archive_write_set_format_cpio (breaks gnome-autoar) in libarchive/archive_write_set_format_cpio.c (version >= 3.5.2)
patch -ulbf libarchive/archive_write_set_format_cpio.c << EOF
@@ -5,2 +5,5 @@
  */
+#ifndef LIBARCHIVE_STATIC
+__declspec(dllexport)
+#endif
 int
EOF
## allow building shared libraries when using clang
#sed -i.bak -e "s/\$LD --help 2>&1 | \$GREP 'auto-import'/true/" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib --with-bz2lib --with-lzmadec --with-lzma --with-openssl --with-xml2 --with-expat &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib --with-bz2lib --with-lzmadec --with-lzma --with-nettle --without-openssl --with-xml2 --with-expat &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-zlib --with-bz2lib --with-lzmadec --with-lzma --with-lz4 --with-nettle --with-openssl --without-xml2 --with-expat &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-bsdtar --enable-bsdcpio --with-zlib --with-bz2lib --with-lzmadec --with-lzma --with-lz4 --with-zstd --with-lzo2 --with-nettle --with-openssl --without-xml2 --with-expat --enable-posix-regex-lib=libpcreposix &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-bsdtar --enable-bsdcpio --with-zlib --with-bz2lib --with-lzma --with-lz4 --with-lzo2 --with-nettle --with-openssl --without-xml2 --with-expat --enable-posix-regex-lib=libpcreposix &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-bsdtar --enable-bsdcpio --with-zlib --with-bz2lib --with-lzma --with-lz4 --with-lzo2 --with-nettle --with-openssl --without-xml2 --with-expat --enable-posix-regex-lib=libpcreposix CFLAGS="-D_POSIX" &&
 # fix detection of shared libraries
 sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 # avoid missing BCryptDeriveKeyPBKDF2 (version >= 3.3.2)
 echo "#undef HAVE_BCRYPT_H" >> config.h &&
 #sed -i.bak "s?^#define u*intmax_t?//&?; s?^#define u*int[0-9]*_t?//&?" config.h &&
 #echo "#define uid_t unsigned int" >> config.h &&
 wl-showstatus build-install &&
 #( make install || make install LIBS="-Wl,--as-needed -lpcreposix" || make install LIBS="-Wl,--as-needed -lz -lbz2 -llzma -lxml2 -lcrypto -leay32 -lregex" ) &&
 ( make install-strip || make install-strip LIBS="-Wl,--as-needed -lz -lbz2 -llzma -lxml2 -lregex -lnettle -Wl,--enable-auto-import" || make install-strip ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#### bug reported (.7z issue with backslashes): https://github.com/libarchive/libarchive/issues/1833



#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DWINDOWS_VERSION:STRING=WIN7 -DENABLE_ZLIB:BOOL=ON -DENABLE_BZip2:BOOL=ON -DENABLE_LZMA:BOOL=ON -DENABLE_LZ4:BOOL=ON -DENABLE_LZO:BOOL=OFF -DENABLE_CAT_SHARED:BOOL=ON -DENABLE_TAR_SHARED:BOOL=ON -DENABLE_OPENSSL:BOOL=ON -DENABLE_NETTLE:BOOL=OFF -DENABLE_MBEDTLS:BOOL=OFF -DENABLE_TEST:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
# cp -u $INSTALLPREFIX/lib/libarchive_static.a $INSTALLPREFIX/lib/libarchive.a &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
