export NAME="MQTT-C"
export STATUS=
export URL=https://liambindle.ca/MQTT-C/
#export URL=https://github.com/LiamBindle/MQTT-C
export BASENAME=mqtt-c
export DESCRIPTION="A portable MQTT C client for embedded systems and PCs alike."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.1.5
#export VERSIONDATE=20220217
export VERSION=1.1.6
export VERSIONDATE=20220525
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/LiamBindle/MQTT-C/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/LiamBindle/MQTT-C/archive/refs/tags/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/LiamBindle/MQTT-C/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix include/mqtt.h (version = 1.1.5)
#patch -ulbf include/mqtt.h << EOF
#@@ -3,2 +3,4 @@
#
#+#include <stdint.h>
#+
# /*
#EOF
## fix include/mqtt_pal.h (version = 1.1.5)
#patch -ulbf include/mqtt_pal.h << EOF
#@@ -120,3 +120,3 @@
#     #endif
#-#elif defined(_MSC_VER)
#+#elif defined(_WIN32)
#     #include <limits.h>
#@@ -127,3 +127,5 @@
#
#+#if !defined(_SSIZE_T_DEFINED)
#     typedef SSIZE_T ssize_t;
#+#endif
#     #define MQTT_PAL_HTONS(s) htons(s)
#EOF
# also allow building shared library
sed -i.bak -e "s/^\(add_library(.*\) STATIC/\1/" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DMQTT_C_OpenSSL_SUPPORT:BOOL=ON -DMQTT_C_EXAMPLES:BOOL=OFF -DMQTT_C_TESTS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DMQTT_C_OpenSSL_SUPPORT:BOOL=ON -DMQTT_C_EXAMPLES:BOOL=OFF -DMQTT_C_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32 -lcrypto/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/bin &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



