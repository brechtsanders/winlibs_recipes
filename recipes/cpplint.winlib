export NAME="cpplint"
export STATUS=
#export URL=https://google.github.io/styleguide/
export URL=https://github.com/google/styleguide/tree/gh-pages/cpplint
#export URL=https://pypi.org/project/cpplint/
export BASENAME=cpplint
#export DESCRIPTION="Style guides for Google-originated open-source projects - contains cpplint"
export DESCRIPTION="Automated checker to make sure a C++ file follows Google's C++ style guide"
export CATEGORY=development
export TYPE=application
#export VERSION=1.6.1
#export VERSIONDATE=20240123
#export VERSION=2.0.0
#export VERSIONDATE=20241007
#export VERSION=2.0.1
#export VERSIONDATE=20250402
export VERSION=2.0.2
export VERSIONDATE=20250408
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
#export DOWNLOADURL="https://github.com/google/styleguide/tags"
export DOWNLOADURL="https://github.com/cpplint/cpplint/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/cpplint/cpplint/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
#mkdir -p $INSTALLPREFIX/python/Lib/site-packages
##wl-showstatus build &&
# PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=$PWD/winfix:$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$INSTALLPREFIX/python/Lib/site-packages:$PYDIR/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe setup.py build --compiler=mingw32 &&
#wl-showstatus build-install &&
# PATH=$PYDIR:$PATH PYTHON=$PYDIR/python.exe PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python:$PYDIR/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages PYTHONDONTWRITEBYTECODE=1 $PYDIR/python.exe setup.py install --prefix=$(cygpath -w $INSTALLPREFIX/python) &&
# ## delete any __pycache__ folder(s)
# #find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
#    echo OK
wl-showstatus build-install &&
 $PYDIR/python.exe -m pip install --target $INSTALLPREFIX/python/Lib/site-packages --disable-pip-version-check --no-compile . &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



