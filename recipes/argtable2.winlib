export NAME="argtable2"
export STATUS=
export URL=http://argtable.sourceforge.net/
export BASENAME=argtable2
export DESCRIPTION="Argtable is an ANSI C library for parsing GNU style command line options with a minimum of fuss. It enables a program's command line syntax to be defined in the source code as an array of argtable structs. The command line is then parsed according to that specification and the resulting values are returned in those same structs where they are accessible to the main program. Both tagged (-v, --verbose, --foo=bar) and untagged arguments are supported, as are multiple instances of each argument. Syntax error handling is automatic and the library also provides the means for generating a textual description of the command line syntax."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=2.7
#export VERSION=2.8
#export VERSION=2.9
#export VERSION=2.10
#export VERSION=2.11
#export VERSION=2.12
#export VERSIONDATE=20100213
export VERSION=2.13
export VERSIONDATE=20110110
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://sourceforge.net/projects/argtable/files/"
#export DOWNLOADURL="http://sourceforge.net/projects/argtable/files/argtable/"
#export DOWNLOADURL="http://sourceforge.net/projects/argtable/files/argtable/"
export DOWNLOADURL="https://sourceforge.net/projects/argtable/files/argtable/ argtable-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-`echo $VERSION|sed -e 's/\./-/'`
export DOWNLOADSOURCEURL=http://prdownloads.sourceforge.net/argtable/argtable$(echo $VERSION|sed -e 's/\./-/').tar.gz
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/argtable/argtable/argtable-$VERSION/argtable$(echo $VERSION|sed -e 's/\./-/').tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/argtable$(echo $VERSION|sed -e 's/\./-/').tar.gz
cd argtable$(echo $VERSION|sed -e 's/\./-/')
# fix redefinition of EOVERFLOW in src/arg_int.c (version >= 2.13)
patch -ulbf src/arg_int.c << EOF
@@ -34,2 +34,3 @@
 /* local error codes */
+#undef EOVERFLOW
 enum {EMINCOUNT=1,EMAXCOUNT,EBADINT,EOVERFLOW};
EOF
# support ARM64 in config.sub
sed -i.bak -e "s/| x86_64-\* /&| aarch64-\* /" config.sub
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="$(if ${CC:-gcc} --help -v 2>/dev/null | grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" LDFLAGS="-Wl,-no-undefined" &&
 wl-showstatus build-install &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf argtable$(echo $VERSION|sed -e 's/\./-/')



#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
# mkdir -p $INSTALLPREFIX/include &&
# cp -u src/argtable2.h $INSTALLPREFIX/include/ &&
#    echo OK
