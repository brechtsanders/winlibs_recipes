#export NAME="gnome-autoar"
#export STATUS=
#export URL=https://developer.gnome.org/gnome-autoar/
#export BASENAME=gnome-autoar
#export DESCRIPTION="gnome-autoar provides functions, widgets, and gschemas for GNOME applications which want to use archives as a convenient method to transfer directories over the internet."
#export CATEGORY=
#export TYPE=library
##export VERSION=0.3.1
##export VERSIONDATE=20210319
##export VERSION=0.3.2
##export VERSIONDATE=20210430
#export VERSION=0.3.3
#export VERSIONDATE=20210604
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,gettext,gtk3,libarchive,gobject-introspection,vala
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="https://gitlab.gnome.org/GNOME/gnome-autoar/-/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://gitlab.gnome.org/GNOME/gnome-autoar/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
## fix MSVC issue
#mkdir -p winfix
#cp -rf $PYDIR/lib/distutils winfix/
#patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
#@@ -85,3 +85,3 @@
#         else:
#-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
#+            return None
#
#EOF
## fix gnome-autoar/autoar-extractor.c
#patch -ulbf gnome-autoar/autoar-extractor.c << EOF
#@@ -973,5 +973,3 @@
#   mode_t filetype;
#-#if defined HAVE_LINK || defined HAVE_MKNOD || defined HAVE_MKFIFO
#   int r;
#-#endif
#
#EOF
## fix missing file
#touch gtk-doc.make
#wl-showstatus configure &&
# mkdir -p m4 &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-gtk --enable-introspection --enable-vala PKG_CONFIG=$(which pkg-config.exe) &&
# # fix building DLLs
# sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# wl-showstatus build-install &&
# PATH=$PYDIR:$PATH PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="gnome-autoar"
export STATUS=
export URL=https://developer.gnome.org/gnome-autoar/
export BASENAME=gnome-autoar
export DESCRIPTION="gnome-autoar provides functions, widgets, and gschemas for GNOME applications which want to use archives as a convenient method to transfer directories over the internet."
export CATEGORY=
export TYPE=library
#export VERSION=0.4.0
#export VERSIONDATE=20210810
#export VERSION=0.4.1
#export VERSIONDATE=20211030
#export VERSION=0.4.2
#export VERSIONDATE=20220107
#export VERSION=0.4.3
#export VERSIONDATE=20220211
export VERSION=0.4.4
export VERSIONDATE=20230317
wl-showstatus --package-version
export DEPENDENCIES=glib2,gettext,gtk3,libarchive,gobject-introspection,vala
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://gitlab.gnome.org/GNOME/gnome-autoar/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://gitlab.gnome.org/GNOME/gnome-autoar/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix gnome-autoar/autoar-extractor.c
patch -ulbf gnome-autoar/autoar-extractor.c << EOF
@@ -973,5 +973,3 @@
   mode_t filetype;
-#if defined HAVE_LINK || defined HAVE_MKNOD || defined HAVE_MKFIFO
   int r;
-#endif

EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgtk=true -Dintrospection=enabled -Dvapi=true -Dtests=false . build_both &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgtk=true -Dintrospection=enabled -Dvapi=true -Dtests=false . build_both &&
 wl-showstatus build-install &&
 #PKG_CONFIG= PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



