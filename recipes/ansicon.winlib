export NAME="ANSICON"
export STATUS=
export URL=http://adoxa.altervista.org/ansicon/
export BASENAME=ansicon
export DESCRIPTION="ANSICON provides ANSI escape sequence recognition for Windows console programs (both 32- (x86) and 64-bit (x64)). It is basically the Windows equivalent of ANSI.SYS."
export CATEGORY=system
export TYPE=library
#export VERSION=1.66
#export VERSIONDATE=20141215
#export VERSION=1.71
#export VERSIONDATE=20160116
#export VERSION=1.72
#export VERSIONDATE=20170725
#export VERSION=1.80-1
#export VERSIONDATE=20171224
#export VERSION=1.81
#export VERSIONDATE=20171230
#export VERSION=1.82
#export VERSIONDATE=20180213
#export VERSION=1.83
#export VERSIONDATE=20180216
#export VERSION=1.84
#export VERSIONDATE=20180512
#export VERSION=1.85
#export VERSIONDATE=20180823
#export VERSION=1.86
#export VERSIONDATE=20181004
#export VERSION=1.87
#export VERSIONDATE=20190203
#export VERSION=1.88
#export VERSIONDATE=20190301
export VERSION=1.89
export VERSIONDATE=20190429
####ansicon.c:238:26: error: 'TH32CS_SNAPMODULE32' undeclared (first use in this function)
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=
export DOWNLOADURL="https://github.com/adoxa/ansicon/releases v"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/adoxa/ansicon/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing memmove/strcmp/strlen
sed -i.bak -e "s/-nostdlib//" makefile.gcc
wl-showstatus build &&
 #make -f makefile.gcc ARCH=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) &&
 make -f makefile.gcc CC=gcc ARCH=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo 64; else echo 32; fi) &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin &&
 cp -f $(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo x64; else echo x86; fi)/*.dll $INSTALLPREFIX/bin/ &&
 cp -f $(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo x64; else echo x86; fi)/*.exe $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



