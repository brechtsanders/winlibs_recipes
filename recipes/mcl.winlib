export NAME="merry's common library (MCL)"
export STATUS=
export URL=https://github.com/merryhime/mcl
export BASENAME=mcl
export DESCRIPTION="A collection of C++20 utilities which is common to a number of merry's projects."
export CATEGORY=
export TYPE=library
#export VERSION=0.1
#export VERSIONDATE=20220728
export VERSION=0.1.12
export VERSIONDATE=20221229
wl-showstatus --package-version
#export DEPENDENCIES=fmt
export DEPENDENCIES=fmt,catch2
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/merryhime/mcl/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/merryhime/mcl/archive/refs/tags/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/merryhime/mcl/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# skip building tests
sed -i.bak -e "s/^\(\s*\)\(add_subdirectory(tests)\)/\1#\2/" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build &&
 ninja -Cbuild_static &&
 wl-showstatus build &&
 ninja -Cbuild_shared &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 strip build_shared/src/*.dll &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -rf include/* $INSTALLPREFIX/include/ &&
 cp -f build_static/src/*.a build_shared/src/*.dll.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/src/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



