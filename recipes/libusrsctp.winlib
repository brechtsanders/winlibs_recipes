#export NAME="usrsctp"
#export STATUS=
#export URL=https://github.com/sctplab/usrsctp
#export BASENAME=usrsctp
#export DESCRIPTION="A portable SCTP userland stack"
#export CATEGORY=communication
#export TYPE=library
#export VERSION=0.9.3.0
#export VERSIONDATE=20191030
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake
#export LICENSEFILE=LICENSE.md
#export LICENSETYPE=BSD
#export DOWNLOADURL="https://github.com/sctplab/usrsctp/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/sctplab/usrsctp/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix redefinition of pid_t in usrsctplib/user_socketvar.h (version >= 0.9.3.0)
#patch -ulbf usrsctplib/user_socketvar.h << EOF
#@@ -104,3 +104,7 @@
# #define AF_ROUTE  17
#+#ifdef __MINGW32__
#+#include <sys/types.h>
#+#else
# typedef __int32 pid_t;
#+#endif
# typedef unsigned __int32 uid_t;
#EOF
## fix missing uint64_t in usrsctplib/usrsctp.h (version >= 0.9.3.0)
#mv usrsctplib/usrsctp.h usrsctplib/usrsctp.h.bak &&
#echo "#include <stdint.h>" > usrsctplib/usrsctp.h &&
#cat usrsctplib/usrsctp.h.bak >> usrsctplib/usrsctp.h
## fix missing gets_s in programs/rtcweb.c (version >= 0.9.3.0)
#patch -ulbf programs/rtcweb.c << EOF
#@@ -1428,3 +1428,3 @@
#        for (;;) {
#-#ifdef _WIN32
#+#if defined(_WIN32) && !defined(__MINGW32__)
#                if (gets_s(line, LINE_LENGTH) == NULL) {
#EOF
## fix missing gets_s in programs/ekr_peer.c (version >= 0.9.3.0)
#patch -ulbf programs/ekr_peer.c << EOF
#@@ -485,3 +485,3 @@
#        for (;;) {
#-#ifdef _WIN32
#+#if defined(_WIN32) && !defined(__MINGW32__)
#                if (gets_s(line, LINE_LENGTH) == NULL) {
#EOF
## fix missing inet_pton in src/lib/ndpi_main.c (version >= 0.9.3.0)
#for F in $(grep -l "inet_ntop\|inet_pton" $(find -name '*.c')); do
# mv $F $F.bak &&
# echo "#define _WIN32_WINNT 0x0600" > $F &&
# cat $F.bak >> $F
#done
#mkdir -p build &&
# wl-showstatus configure &&
# cd build &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLINK_STATIC:BOOL=ON -DWERROR:BOOL=OFF .. &&
# echo "-Wl,--as-needed -liphlpapi" >> usrsctplib/CMakeFiles/usrsctp.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/echo_server.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/ekr_loop.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/discard_server.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/ekr_client.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/client.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/ekr_server.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/daytime_server.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/test_libmgmt.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/datachan_serv.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/rtcweb.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/tsctp.dir/linklibs.rsp &&
# echo "-Wl,--as-needed -liphlpapi" >> programs/CMakeFiles/ekr_peer.dir/linklibs.rsp &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild install/strip &&
# mkdir -p $INSTALLPREFIX/bin &&
# mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# mv -f $INSTALLPREFIX/lib/libusrsctp_import.lib $INSTALLPREFIX/lib/libusrsctp.dll.a &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="libusrsctp"
#export STATUS=
#export URL=https://github.com/sctplab/usrsctp
#export BASENAME=libusrsctp
#export DESCRIPTION="A portable SCTP userland stack"
#export CATEGORY=communication
#export TYPE=library
#export VERSION=0.9.3.0
#export VERSIONDATE=20170725
#wl-showstatus --package-version
#export DEPENDANCIES=pthreads
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=LICENSE.md
#export LICENSETYPE=BSD-2
#export DOWNLOADURL="https://github.com/sctplab/usrsctp/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/sctplab/usrsctp/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd usrsctp-$VERSION
## fix redefinition of pid_t in usrsctplib/user_socketvar.h
#patch -ulbf usrsctplib/user_socketvar.h << EOF
#@@ -104,3 +104,7 @@
# #define AF_ROUTE  17
#+#ifdef __MINGW32__
#+#include <sys/types.h>
#+#else
# typedef __int32 pid_t;
#+#endif
# typedef unsigned __int32 uid_t;
#EOF
## fix missing uint64_t in usrsctplib/usrsctp.h
#mv usrsctplib/usrsctp.h usrsctplib/usrsctp.h.bak &&
#echo "#include <stdint.h>" > usrsctplib/usrsctp.h &&
#cat usrsctplib/usrsctp.h.bak >> usrsctplib/usrsctp.h
## fix missing inet_ntop in programs/echo_server.c
#mv programs/echo_server.c programs/echo_server.c.bak &&
#echo "#include <ws2tcpip.h>" > programs/echo_server.c &&
#cat programs/echo_server.c.bak >> programs/echo_server.c
## fix missing inet_ntop
#for F in $(grep -l "inet_ntop\|inet_pton" $(find . -name '*.c')); do
# mv $F $F.bak &&
# echo "#undef _WIN32_WINNT" > $F &&
# echo "#define _WIN32_WINNT 0x0600" >> $F &&
# cat $F.bak >> $F
#done
## fix missing gets_s
#for F in $(grep -l gets_s programs/*.c); do
# mv $F $F.bak &&
# echo "#include <stdio.h>" > $F &&
# echo "#define gets_s(x,len) fgets((x), (len) + 1, stdin)" >> $F &&
# cat $F.bak >> $F
#done
### fix missing files
##touch NEWS README AUTHORS ChangeLog
##wl-showstatus configure &&
##mkdir -p m4 &&
##autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-D__Userspace_os_Windows" &&
## ## fix building DLLs
## #mv libtool libtool.bak &&
## #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
## #wl-showstatus build &&
## #make &&
## wl-showstatus build-install &&
## make install-strip &&
##    echo OK
#mkdir -p build &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLINK_STATIC:BOOL=ON -DWERROR:BOOL=OFF -S. -Bbuild_win &&
# for F in build_win/usrsctplib/CMakeFiles/usrsctp.dir build_win/programs/CMakeFiles/*.dir; do
#  echo "-Wl,--as-needed -liphlpapi" >> $F/linklibs.rsp
# done &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
# cp -f $INSTALLPREFIX/lib/libusrsctp_import.lib $INSTALLPREFIX/lib/libusrsctp.dll.a &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf usrsctp-$VERSION



export NAME="libusrsctp"
export STATUS=
export URL=https://github.com/sctplab/usrsctp
export BASENAME=libusrsctp
export DESCRIPTION="A portable SCTP userland stack"
export CATEGORY=communication
export TYPE=library
#export VERSION=0.9.4.0
#export VERSIONDATE=20210110
export VERSION=0.9.5.0
export VERSIONDATE=20210114
wl-showstatus --package-version
export DEPENDANCIES=pthreads
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE.md
export LICENSETYPE=BSD-2
export DOWNLOADURL="https://github.com/sctplab/usrsctp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/sctplab/usrsctp/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd usrsctp-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 cp -f $INSTALLPREFIX/lib/libusrsctp_import.lib $INSTALLPREFIX/lib/libusrsctp.dll.a &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf usrsctp-$VERSION



