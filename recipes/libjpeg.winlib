#export NAME="libjpeg"
#export STATUS=
#export URL=http://www.ijg.org/
#export BASENAME=libjpeg
#export DESCRIPTION='This package contains C software to implement JPEG image compression and decompression.  JPEG (pronounced \"jay-peg\") is a standardized compression method for full-color and gray-scale images.  JPEG is intended for compressing \"real-world\" scenes; line drawings, cartoons and other non-realistic images are not its strong suit.  JPEG is lossy, meaning that the output image is not exactly identical to the input image.'
#export CATEGORY=graphics
#export TYPE=library
#export VERSION=6b
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=
#export LICENSETYPE=
#export DOWNLOADURL="http://site.n.ml.org/info/libjpeg/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd jpeg-$VERSION
#mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin
## some minor changes (to do: define HAVE_BOOLEAN, see: http://www.libgd.org/Buildusingmingw)
#mv jmorecfg.h jmorecfg.h.bak
#sed -e "s/typedef int boolean;/typedef char boolean;/; s/typedef long INT32;/#include <basetsd.h>/" jmorecfg.h.bak > jmorecfg.h
##$RUNPLATFORM-dlltool --export-all-symbols -D jpeg.dll -l libjpeg.dll.a -z in.def .libs/libjpeg.a && 
## build and manually create DLL
## see also: http://johnnypops.demon.co.uk/mingw-old/index.html#libjpeg
#wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared && 
# wl-showstatus build-install &&
# make install-lib && 
# dlltool --export-all-symbols -D jpeg.dll -l libjpeg.dll.a -z in.def .libs/libjpeg.a && 
# ranlib libjpeg.dll.a && 
# gcc -shared -s -mwindows -def in.def -o jpeg.dll .libs/libjpeg.a && 
# cp jpeg.dll $INSTALLPREFIX/bin/ && 
# cp libjpeg.dll.a $INSTALLPREFIX/lib/ && 
# sed -e "s/^\(dlname=\)''/\1'jpeg.dll'/; s/^\(library_names=\)''/\1'libjpeg.dll.a'/" .libs/libjpeg.la > $INSTALLPREFIX/lib/libjpeg.la && 
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf jpeg-$VERSION



export NAME="libjpeg"
export STATUS=
#export URL=http://www.infai.org/jpeg
export URL=http://www.ijg.org/
export BASENAME=libjpeg
export DESCRIPTION='This package contains C software to implement JPEG image compression and decompression.  JPEG (pronounced \"jay-peg\") is a standardized compression method for full-color and gray-scale images.  JPEG is intended for compressing \"real-world\" scenes; line drawings, cartoons and other non-realistic images are not its strong suit.  JPEG is lossy, meaning that the output image is not exactly identical to the input image.'
export CATEGORY=graphics
export TYPE=library
#export VERSION=8b
#export VERSIONDATE=20100909
#export VERSION=8c
#export VERSIONDATE=20110116
#export VERSION=8d
#export VERSIONDATE=20120115
#export VERSION=9
#export VERSIONDATE=20130113
#export VERSION=9a
#export VERSIONDATE=20140120
#export VERSION=9b
#export VERSIONDATE=20160117
export VERSION=9d
export VERSIONDATE=20200803
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=
export LICENSETYPE=
#export DOWNLOADURL="http://www.infai.org/jpeg jpegsrc.v"
export DOWNLOADURL="http://www.ijg.org/files/ jpegsrc.v"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://www.ijg.org/files/jpegsrc.v$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://www.infai.org/jpeg/files?get=jpegsrc.v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/jpegsrc.v$VERSION.tar.gz
cd jpeg-$VERSION
## fix redefinitions of UINT8/UINT16/INT16/INT32 in jmorecfg.h (version = 9)
#patch -ulbf jmorecfg.h << EOF
#--- jmorecfg.h  2012-08-08 16:23:20 +0200
#+++ jmorecfg.h  2013-04-01 14:33:22 +0200
#@@ -130,4 +130,7 @@
#  * typedefs live at a different point on the speed/space tradeoff curve.)
#  */
#+#ifdef __MINGW32__
#+#include <basetsd.h>
#+#else
#
# /* UINT8 must hold at least the values 0..255. */
#@@ -169,4 +172,6 @@
# #endif
#
#+#endif //__MINGW32__
#+
# /* Datatype used for image dimensions.  The JPEG standard only supports
#  * images up to 64K*64K due to 16-bit fields in SOF markers.  Therefore
#EOF
# fix redefinitions of UINT8/UINT16/INT16/INT32/boolean in jmorecfg.h (version >= 9a)
patch -ulbf jmorecfg.h << EOF
--- jmorecfg.h  2013-09-17 09:20:20.000000000 +0200
+++ jmorecfg.h  2015-07-24 09:21:05.254996500 +0200
@@ -181,4 +181,7 @@
  * typedefs live at a different point on the speed/space tradeoff curve.)
  */
+#ifdef __MINGW32__
+#include <basetsd.h>
+#else

 /* UINT8 must hold at least the values 0..255. */
@@ -220,4 +223,6 @@
 #endif

+#endif //__MINGW32__
+
 /* Datatype used for image dimensions.  The JPEG standard only supports
  * images up to 64K*64K due to 16-bit fields in SOF markers.  Therefore
@@ -307,5 +312,9 @@
 #if defined FALSE || defined TRUE || defined QGLOBAL_H
 /* Qt3 defines FALSE and TRUE as "const" variables in qglobal.h */
+#ifdef __MINGW32__
+#include <rpcndr.h>
+#else
 typedef int boolean;
+#endif
 #ifndef FALSE                  /* in case these macros already exist */
 #define FALSE  0               /* values of boolean */
EOF
## fix missing libjpeg.pc (version <= 9b)
#cat > libjpeg.pc << EOF
#prefix=$INSTALLPREFIX
#exec_prefix=\${prefix}
#libdir=\${prefix}/lib
#includedir=\${prefix}/include
#
#Name: libjpeg
#Description: Reads and writes JPEG files
#Version: $VERSION
#Libs: -L\${libdir} -ljpeg
#Cflags: -I\${includedir}
#EOF
## fix -no-undefined linker flag
#sed -i.bak -e "s/ \(-no-undefined\)/ -Wl,\1/" Makefile.in
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build-install &&
 make install-strip &&
 #make install LIBTOOL=$(which jlibtool.exe) &&
 ## manually install libjpeg.pc (version <= 9b)
 #mkdir -p $INSTALLPREFIX/lib/pkgconfig &&
 #cp -u libjpeg.pc $INSTALLPREFIX/lib/pkgconfig/ &&
 cp -u jpegint.h $INSTALLPREFIX/include/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf jpeg-$VERSION



