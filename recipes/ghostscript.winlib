export NAME="ghostscript"
export STATUS=
export URL=http://www.ghostscript.com/
export BASENAME=ghostscript
export DESCRIPTION="Ghostscript is a package of software that provides: * An interpreter for the PostScript (TM) language, with the ability to convert PostScript language files to many raster formats, view them on displays, and print them on printers that don't have PostScript language capability built in; * An interpreter for Portable Document Format (PDF) files, with the same abilities; * The ability to convert PostScript language files to PDF (with some limitations) and vice versa; and * A set of C procedures (the Ghostscript library) that implement the graphics and filtering (data compression / decompression / conversion) capabilities that appear as primitive operations in the PostScript language and in PDF."
export CATEGORY=graphics
export TYPE=library
#export VERSION=8.62
#export VERSION=8.64
####./obj/gdevpipe.o:gdevpipe.c:(.text+0x4b): undefined reference to `mswin_popen'
####./obj/gdevsgi.o:gdevsgi.c:(.text+0x7e4): undefined reference to `bzero'
####-> base/gp_mswin.c
#export VERSION=8.70
####configure hangs after: checking for X... disabled
#export VERSION=9.00
#export VERSION=9.01
#export VERSIONDATE=20110209
####./base/gp_psync.c:285: error: cannot convert to a pointer type
####./base/gp_psync.c:293: error: conversion to non-scalar type requested
#export VERSION=9.04
#export VERSIONDATE=20111229
####base/gp_unifs.c:157:5: error: unknown type name 'DIR'
#export VERSION=9.05
#export VERSIONDATE=20120208
#export VERSION=9.06
#export VERSIONDATE=20120808
####base/gp_psync.c:282: error: cannot convert to a pointer type
#export VERSION=9.07
#export VERSIONDATE=20130214
#export VERSION=9.09
#export VERSIONDATE=20130822
#export VERSION=9.10
#export VERSIONDATE=20130902
####soobj/gconfig_.h:24:2: error: #endif without #if
#export VERSION=9.14
#export VERSIONDATE=20140326
#export VERSION=9.15
#export VERSIONDATE=20140923
#export VERSION=9.16
#export VERSIONDATE=20150331
#export VERSION=9.18
#export VERSIONDATE=20151005
#export VERSION=9.21
#export VERSIONDATE=20170419
####base/gp_psync.c:284:5: error: cannot convert to a pointer type
#export VERSION=9.22
#export VERSIONDATE=20171005
#export VERSION=9.23
#export VERSIONDATE=20180322
#export VERSION=9.24
#export VERSIONDATE=20180904
#export VERSION=9.25
#export VERSIONDATE=20180914
#export VERSION=9.26
#export VERSIONDATE=20181121
#export VERSION=9.27
#export VERSIONDATE=20190404
#export VERSION=9.50
#export VERSIONDATE=20191015
#export VERSION=9.51
#export VERSIONDATE=20200313
#export VERSION=9.52
#export VERSIONDATE=20200320
#export VERSION=9.53.0
#export VERSIONDATE=20200911
#export VERSION=9.53.1
#export VERSIONDATE=20200915
#export VERSION=9.53.2
#export VERSIONDATE=20200926
#export VERSION=9.53.3
#export VERSIONDATE=20201001
#export VERSION=9.55.0
#export VERSIONDATE=20210927
#export VERSION=9.56.0
#export VERSIONDATE=20220329
#export VERSION=9.56.1
#export VERSIONDATE=20220405
#export VERSION=10.0.0
#export VERSIONDATE=20220921
#export VERSION=10.01.0
#export VERSIONDATE=20230323
#export VERSION=10.01.1
#export VERSIONDATE=20230327
#export VERSION=10.01.2
#export VERSIONDATE=20230622
#export VERSION=10.02.0
#export VERSIONDATE=20230913
####obj/gscdefs.c:90:41: error: incomplete universal character name \u
#export VERSION=10.02.1
#export VERSIONDATE=20231102
#export VERSION=10.03.0
#export VERSIONDATE=20240307
#export VERSION=10.03.1
#export VERSIONDATE=20240519
#export VERSION=10.04.0
#export VERSIONDATE=20240919
#export VERSION=10.05.0
#export VERSIONDATE=20250312
#export VERSION=10.05.1
#export VERSIONDATE=20250429
export VERSION=10.06.0
export VERSIONDATE=20250909
wl-showstatus --package-version
export DEPENDENCIES=zlib,libjpeg,libpng,libopenjpeg,jbig2dec,freetype2,libpaper
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE="AGPL/Commercial"
#export DOWNLOADURL="http://ghostscript.com/releases/ ghostscript-"
#export DOWNLOADURL="http://downloads.ghostscript.com/public/ ghostscript-"
#export DOWNLOADURL="https://github.com/ArtifexSoftware/ghostpdl-downloads/releases ghostscript-"
export DOWNLOADURL="https://github.com/ArtifexSoftware/ghostpdl-downloads/releases gs"
#export DOWNLOADURL="https://ghostscript.com/releases/gsdnld.html"
#export DOWNLOADSOURCEURL=http://ghostscript.com/releases/ghostscript-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ghostscript.com/releases/ghostscript-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://downloads.ghostscript.com/public/ghostscript-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs$(echo $VERSION|sed -e "s/\.//g")/ghostscript-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/ArtifexSoftware/ghostpdl-downloads/archive/refs/tags/gs$(echo $VERSION|sed -e "s/\.//g").tar.gz
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/ghostscript-$VERSION.tar.bz2
#tar xz --force-local -f $TARBALLDIR/$BASENAME/ghostscript-$VERSION.tar.gz
#tar xj --force-local -f $TARBALLDIR/$BASENAME/ghostscript-$VERSION.tar.bz2
tar xJ --force-local -f $TARBALLDIR/$BASENAME/ghostscript-$VERSION.tar.xz
cd ghostscript-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/gs$(echo $VERSION|sed -e "s/\.//g").tar.gz
#cd ghostpdl-downloads-gs$(echo $VERSION|sed -e "s/\.//g")
## fix pthread_t 0 assignment problem (pthread is a structure on Windows) (version >= 8.64)
#patch -ulbf base/gp_psync.c << EOF
#--- base/gp_psync.c  Thu May  8 21:10:40 2008
#+++ base/gp_psync.c  Mon Mar 30 13:56:21 2009
#@@ -153,3 +153,8 @@
#        return -1;              /* monitors are not movable */
#+#ifdef __MINGW32__
#+    ((gp_pthread_recursive_t *)mona)->self_id.p = NULL;        /* Not valid unless mutex is locked */
#+    ((gp_pthread_recursive_t *)mona)->self_id.x = 0;   /* Not valid unless mutex is locked */
#+#else
#     ((gp_pthread_recursive_t *)mona)->self_id = 0;     /* Not valid unless mutex is locked */
#+#endif
#     scode = pthread_mutex_init(mon, NULL);
#@@ -196,3 +201,8 @@
#     scode = pthread_mutex_unlock(mon);
#+#ifdef __MINGW32__
#+    ((gp_pthread_recursive_t *)mona)->self_id.p = NULL;        /* Not valid unless mutex is locked */
#+    ((gp_pthread_recursive_t *)mona)->self_id.x = 0;   /* Not valid unless mutex is locked */
#+#else
#     ((gp_pthread_recursive_t *)mona)->self_id = 0;     /* Not valid unless mutex is locked */
#+#endif
#     return SEM_ERROR_CODE(scode);
#EOF
# fix missing mswin_popen (version >= 8.71.1)
patch -ulbf base/pipe_.h << EOF
--- base/pipe_.h  2010-07-11 00:02:22 +0200
+++ base/pipe_.h  2010-09-09 10:36:42 +0200
@@ -22 +22 @@
-#ifdef __WIN32__
+#if defined(__WIN32__) && !defined(__MINGW32__)
EOF
# fix base/gscdef.c (version >= 10.02.1)
patch -ulbf base/gscdef.c << EOF
@@ -72,3 +72,3 @@
 /* Define the default library search path. */
-const char *const gs_lib_default_path = GS_LIB_DEFAULT;
+const char *const gs_lib_default_path = ".";

EOF
# fix base/gp_mswin.c (version >= 10.02.1)
patch -ulbf base/gp_mswin.c << EOF
@@ -108,2 +108,3 @@
 #ifndef METRO
+FILE *mswin_popen(const char *cmd, const char *mode);
 static int gp_printfile(const gs_memory_t *mem, const char *, const char *);
@@ -744,2 +745,3 @@
 #  define STDC99
+#elif defined(__MINGW32__) /* MinGW-w64 has snprintf */
 #else
EOF
# fix base/mkromfs.c (version >= 10.02.1)
patch -ulbf base/mkromfs.c << EOF
@@ -167,4 +167,5 @@
  */
 #ifdef _WIN32
+#ifndef __MINGW32__
 int gp_stat_impl(const gs_memory_t *mem, const char *path, struct _stat64 *buf)
 {
@@ -174,4 +175,5 @@
     return 0;
 }
+#endif
 #ifdef MEMENTO
 #undef malloc
EOF
# use Windows instead of Unix sources (version >= 9.52)
mv base/gp_unix.c base/gp_unix.c.bak &&
#echo '#include "gp_win32.c"' > base/gp_unix.c
echo -e '#include "gp_win32.c"\n#include "gssprintf.c"\n#include "gp_mswin.c"\n#include "gp_wgetv.c"\n' > base/gp_unix.c
#cat base/gp_mswin.c base/gp_win32.c > base/gp_unix.c
mv base/gp_unifs.c base/gp_unifs.c.bak &&
#cat base/gp_wutf8.c base/gp_winfs.c base/gp_ntfs.c > base/gp_unifs.c
echo -e '#include "gp_utf8.c"\n#include "gp_winfs.c"\n#include "gp_ntfs.c"\n' > base/gp_unifs.c
mv base/gp_unifn.c base/gp_unifn.c.bak &&
touch base/gp_unifn.c
## fix missing base/gp_unix.c (version >= 9.53.0)
#cp base/gp_win32.c base/gp_unix.c
# fix base/stdpre.h (version >= 10.05.1)
patch -ulbf base/stdpre.h << EOF
@@ -346,2 +346,4 @@
 typedef unsigned char bool;
+#elif defined(__STDC_VERSION__) && __STDC_VERSION__ >= 202311L
+#include <stdbool.h>
 #else
EOF
# don't build included libraries
rm -rf zlib jpeg libpng tiff freetype jbig2dec openjpeg ijs
# fix error: Mixing local libtiff with shared libjpeg not supported
sed -i.bak -e "s/as_fn_error\( .*Mixing local libtiff with shared libjpeg not supported\)/echo \1/" configure
#./autogen
#./autogen.sh --prefix=$INSTALLPREFIX/share/ghostscript --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-cups --disable-gtk --without-ijs --without-jasper --without-x --with-drivers=FILES LDFLAGS="-Wl,--enable-auto-import" &&
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX/share/ghostscript --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-cups --disable-gtk --without-ijs --without-jasper --without-x --with-drivers=FILES LDFLAGS="-Wl,--enable-auto-import" &&
 #./configure --prefix=$INSTALLPREFIX/share/ghostscript --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-threading --enable-gtk --enable-fontconfig --enable-freetype --enable-openjpeg --with-libtiff --with-system-libtiff --with-jbig2dec --with-libpaper --with-libidn --with-libiconv=native --disable-dbus --without-x --disable-cups --without-ijs --with-drivers=FILES LDFLAGS="-Wl,--enable-auto-import -Wl,--allow-multiple-definition" &&
 #./configure --prefix=$INSTALLPREFIX/share/ghostscript --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-threading --enable-gtk --enable-fontconfig --enable-freetype --enable-openjpeg --with-libtiff --with-system-libtiff --with-jbig2dec --with-libpaper --with-libidn --with-libiconv=native --disable-dbus --without-x --disable-cups --without-ijs --without-local-zlib --with-drivers=FILES LDFLAGS="-Wl,--enable-auto-import -Wl,--allow-multiple-definition" &&
 ./configure --prefix=$INSTALLPREFIX/share/ghostscript --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-threading --enable-gtk --enable-fontconfig --enable-freetype --enable-openjpeg --with-libtiff --with-system-libtiff --with-jbig2dec --with-libpaper --with-libidn --with-libiconv=native --disable-dbus --without-x --disable-cups --without-ijs --without-local-zlib --with-drivers=FILES --without-tesseract CFLAGS="-I$PWD/base" LDFLAGS="-Wl,--enable-auto-import -Wl,--allow-multiple-definition" &&
 # remove static paths with backslashes from obj/gconfigd.h (version >= 9.52)
 ( make obj/gconfigd.h; sed -i.bak -e "s?^\(#define GS_LIB_DEFAULT \).*\$?\1\"\"?; s?^\(#define GS_CACHE_DIR \).*\$?\1\".ghostscript/cache/\"?; s?^\(#define GS_DOCDIR \).*\$?\1\"\"?" obj/gconfigd.h ) &&
 #( make soobj/gconfigd.h SHARED=1 GS=gs GS_SOEXT=dll; sed -i.bak -e "s?^\(#define GS_LIB_DEFAULT \).*\$?\1\"\"?; s?^\(#define GS_CACHE_DIR \).*\$?\1\".ghostscript/cache/\"?; s?^\(#define GS_DOCDIR \).*\$?\1\"\"?" soobj/gconfigd.h ) &&
 wl-showstatus build-install &&
 # redefine AUXDIR because aux is a reserved device name in Windows
 make all install AUXDIR=$PWD/obj/auxdir XTRALIBS="-Wl,--as-needed -lwinspool -Wl,--allow-multiple-definition" &&
 #make so soinstall GS=gs GS_SOEXT=dll AUXDIR=$PWD/obj/auxdir XTRALIBS="-Wl,--as-needed -lwinspool -Wl,--allow-multiple-definition" &&
 #mv -f $INSTALLPREFIX/share/ghostscript/lib/*-$(echo $VERSION|sed -e "s/^\([0-9]*\)\..*/\1/").dll $INSTALLPREFIX/share/ghostscript/bin/ &&
 #rm -rf $INSTALLPREFIX/share/ghostscript/lib/*.dll &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ghostscript-$VERSION
####$MINGWPREFIX/share/ghostscript/bin/gs.exe --version
####TO DO: build shared version
####See also: gnu-ghostscript



# fix base/gp.h (version >= 10.05.1)
patch -ulbf base/gp.h << EOF
@@ -648,3 +648,3 @@
 
-int gp_fseekable_impl(FILE *f);
+bool gp_fseekable_impl(FILE *f);
 
EOF
# fix base/gximag3x.c (version >= 10.05.1)
patch -ulbf base/gximag3x.c << EOF
@@ -120,3 +120,3 @@
 } image3x_channel_values_t;
-static int check_image3x_mask(const gs_image3x_t *pim,
+static bool check_image3x_mask(const gs_image3x_t *pim,
                                const gs_image3x_mask_t *pimm,
EOF
# fix base/gdevkrnlsclass.h (version >= 10.05.1)
patch -ulbf base/gdevkrnlsclass.h << EOF
@@ -31,3 +31,3 @@
 
-int install_internal_subclass_devices(gx_device **ppdev, int *devices_loaded);
+bool install_internal_subclass_devices(gx_device **ppdev, bool *devices_loaded);
 
EOF
# fix base/gsparam.h (version >= 10.05.1)
patch -ulbf base/gsparam.h << EOF
@@ -409,3 +409,3 @@
 int param_read_bool(gs_param_list *, gs_param_name, bool *);
-int param_write_bool(gs_param_list *, gs_param_name, const bool *);
+bool param_write_bool(gs_param_list *, gs_param_name, const bool *);
 int param_read_int(gs_param_list *, gs_param_name, int *);
EOF
# fix base/gxdownscale.c (version >= 10.05.1)
patch -ulbf base/gxdownscale.c << EOF
@@ -3378,3 +3378,4 @@
     int code;
-    int downscale, mfs, ets, deskew;
+    int downscale, mfs, ets;
+    bool deskew;
     int trap_w, trap_h;
EOF
# fix base/gxdownscale.h (version >= 10.05.1)
patch -ulbf base/gxdownscale.h << EOF
@@ -110,3 +110,3 @@
 
-    int                   do_skew_detection;
+    bool                  do_skew_detection;
     int                   skew_detected;
@@ -126,3 +126,3 @@
     int ets;
-    int do_skew_detection;
+    bool do_skew_detection;
 } gx_downscaler_params;
EOF
# fix base/gdevnup.c (version >= 10.05.1)
patch -ulbf base/gdevnup.c << EOF
@@ -684,3 +684,3 @@
                 dev_param_req_t *request = (dev_param_req_t *)data;
-                int code = false;
+                bool code = false;
 
EOF
# fix devices/gdevpdfimg.h (version >= 10.05.1)
patch -ulbf devices/gdevpdfimg.h << EOF
@@ -76,4 +76,4 @@
 
-    int Tumble;
-    int Tumble2;
+    bool Tumble;
+    bool Tumble2;
 
EOF
# fix devices/vector/gdevpdtt.c (version >= 10.05.1)
patch -ulbf devices/vector/gdevpdtt.c << EOF
@@ -3274,3 +3274,3 @@
 
-static int pdf_query_purge_cached_char(const gs_memory_t *mem, cached_char *cc, void *data)
+static bool pdf_query_purge_cached_char(const gs_memory_t *mem, cached_char *cc, void *data)
 {
EOF
# fix base/gdevkrnlsclass.c (version >= 10.05.1)
patch -ulbf base/gdevkrnlsclass.c << EOF
@@ -31,3 +31,3 @@
  */
-int install_internal_subclass_devices(gx_device **ppdev, int *devices_loaded)
+bool install_internal_subclass_devices(gx_device **ppdev, bool *devices_loaded)
 {
EOF
# fix base/gsovrc.c (version >= 10.05.1)
patch -ulbf base/gsovrc.c << EOF
@@ -299,3 +299,3 @@
  */
-int
+bool
 gs_is_overprint_compositor(const gs_composite_t * pct)
EOF
# fix base/gsparam.c (version >= 10.05.1)
patch -ulbf base/gsparam.c << EOF
@@ -636,3 +636,3 @@
 }
-int
+bool
 param_write_bool(gs_param_list * plist, gs_param_name pkey, const bool * pvalue)
EOF
# fix base/gsstate.c (version >= 10.05.1)
patch -ulbf base/gsstate.c << EOF
@@ -825,3 +825,3 @@
 int
-gs_setblackptcomp(gs_gstate *pgs, bool bkpt) {
+gs_setblackptcomp(gs_gstate *pgs, int bkpt) {
     pgs->blackptcomp = bkpt;
@@ -831,3 +831,3 @@
 /* currentrenderingintent */
-bool
+int
 gs_currentblackptcomp(const gs_gstate * pgs)
EOF
# fix base/fapi_ft.c (version >= 10.05.1)
patch -ulbf base/fapi_ft.c << EOF
@@ -1529,3 +1529,3 @@
  */
-static gs_fapi_retcode
+static int
 gs_fapi_ft_can_replace_metrics(gs_fapi_server * a_server, gs_fapi_font * a_font,
EOF
# fix base/gxfapi.h (version >= 10.05.1)
patch -ulbf base/gxfapi.h << EOF
@@ -350,3 +350,3 @@
     gs_fapi_retcode(*get_font_proportional_feature) (gs_fapi_server *server, gs_fapi_font *ff, bool *bProportional);
-    gs_fapi_retcode(*can_retrieve_char_by_name) (gs_fapi_server *server, gs_fapi_font *ff, gs_fapi_char_ref *c, int *result);
+    gs_fapi_retcode(*can_retrieve_char_by_name) (gs_fapi_server *server, gs_fapi_font *ff, gs_fapi_char_ref *c, bool *result);
     gs_fapi_retcode(*can_replace_metrics) (gs_fapi_server *server, gs_fapi_font *ff, gs_fapi_char_ref *c, int *result);
EOF
# fix base/gxcmap.c (version >= 10.05.1)
patch -ulbf base/gxcmap.c << EOF
@@ -603,3 +603,3 @@
    here */
-bool
+int
 gx_remap_named_color(const gs_client_color * pcc, const gs_color_space * pcs,
EOF
# fix base/gxiscale.c (version >= 10.05.1)
patch -ulbf base/gxiscale.c << EOF
@@ -114,3 +114,3 @@
     gs_c_param_list list;
-    int nointerpolate = 0;
+    bool nointerpolate = false;
     int code;
EOF
