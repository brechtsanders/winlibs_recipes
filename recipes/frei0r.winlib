export NAME="Frei0r"
export STATUS=
#export URL=http://piksel.org/frei0r
export URL=https://frei0r.dyne.org/
export BASENAME=frei0r
export DESCRIPTION="Frei0r is a minimalistic plugin API for video sources and filters. The behaviour of the effects can be controlled from the host by simple parameters. The intent is to solve the recurring reimplementation or adaptation issue of standard effects."
export CATEGORY=video,dataprocessing
export TYPE=library
#export VERSION=1.3
#export VERSIONDATE=20120303
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=1.6.1
#export VERSIONDATE=20180501
#export VERSION=1.7.0
#export VERSIONDATE=20191207
#export VERSION=1.8.0
#export VERSIONDATE=20220328
#export VERSION=1.9.5
#export VERSIONDATE=20221228
#export VERSION=1.9.6
#export VERSIONDATE=20221228
#export VERSION=1.10.0
#export VERSIONDATE=20221228
#export VERSION=2.0.0
#export VERSIONDATE=20221230
#export VERSION=2.1.0
#export VERSIONDATE=20230101
#export VERSION=2.2.0
#export VERSIONDATE=20230103
#export VERSION=2.3.0
#export VERSIONDATE=20230518
#export VERSION=2.3.1
#export VERSIONDATE=20230805
export VERSION=2.3.2
export VERSIONDATE=20231208
wl-showstatus --package-version
export DEPENDENCIES=cairo
export OPTIONALDEPENDENCIES=opencv,gavl
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.piksel.no/frei0r/releases/ frei0r-plugins-"
#export DOWNLOADURL="https://github.com/dyne/frei0r/releases"
export DOWNLOADURL="https://github.com/dyne/frei0r/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.piksel.no/frei0r/releases/frei0r-plugins-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/dyne/frei0r/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/dyne/frei0r/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/frei0r-plugins-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix src/Makefile
#mv src/Makefile.in src/Makefile.in.bak
#sed -e "s?\$(DESTDIR)/\(\$(plugindir)\)?\1?g; s?\.so?.dll?" src/Makefile.in.bak > src/Makefile.in
### remove dependancy on dynamic libstdc++ (GCC 4)
##mv libtool libtool.bak &&
##sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
#wl-showstatus configure &&
##mkdir -p m4 &&
##autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared &&
# wl-showstatus build-install &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# ( make install-strip || make -j1 install-strip ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DWITHOUT_OPENCV:BOOL=ON -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
 #-DOpenCV_DIR:PATH=$MINGWPREFIX 
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



