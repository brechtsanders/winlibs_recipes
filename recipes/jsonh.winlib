export NAME="json.h"
export STATUS=
export URL=https://github.com/sheredom/json.h
export BASENAME=jsonh
export DESCRIPTION="json parser for C and C++ "
export CATEGORY=dataprocessing
export TYPE=library
export VERSION=master
export VERSIONDATE=20180905
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE="public domain"
export DOWNLOADURL="https://github.com/sheredom/json.h/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/sheredom/json.h/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd json.h-$VERSION
## fix missing PRIu64 in test/utest.h
#mv test/utest.h test/utest.h.bak &&
#echo "#define __STDC_FORMAT_MACROS" > test/utest.h &&
#cat test/utest.h.bak >> test/utest.h
#sed -i.bak -e "s/\(-Wall\|-Wextra\|-Werror\)//g" test/CMakeLists.txt
#wl-showstatus configure &&
# mkdir -p test/build &&
# cd test/build &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release .. &&
# cd ../.. &&
# wl-showstatus build &&
# make -Ctest/build &&
#    echo OK
#wl-showstatus build &&
# gcc -c -O3 -o json.o -I. json.c &&
# ar cru libjsonh.a json.o &&
# ( echo EXPORTS; gcc -E json.h  | sed -n -e "s/(.*//p"|sed -n -e "s/^.*\(json_[^ *]*\).*/\1/p" ) > jsonh.def &&
# gcc -shared -s -mwindows -def jsonh.def -o jsonh.dll libjsonh.a -Wl,--out-implib,libjsonh.dll.a &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/include/jsonh $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# cp -f *.h $INSTALLPREFIX/include/jsonh/ &&
# cp -f *.a $INSTALLPREFIX/lib/ &&
# cp -f *.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf json.h-$VERSION
wl-showstatus build &&
 gcc -c -O3 -o json.o json.h &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include/jsonh &&
 cp -f *.h $INSTALLPREFIX/include/jsonh/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf json.h-$VERSION



#export BUILDDEPENDANCIES=cmake,ninja
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DBUILD_SHARED_LIBS:BOOL=OFF -Stest -Bbuild_win &&
# wl-showstatus build &&
# ninja -Cbuild_win &&
#    echo OK
