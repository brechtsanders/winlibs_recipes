#export NAME="GtkSourceView"
#export STATUS=
#export URL=http://projects.gnome.org/gtksourceview/
#export BASENAME=gtksourceview4
#export DESCRIPTION="GtkSourceView is a portable C library that extends the standard GTK+ framework for multiline text editing with support for configurable syntax highlighting, unlimited undo/redo, UTF-8 compliant caseless searching, printing and other features typical of a source code editor."
#export CATEGORY=gui
#export TYPE=library
##export VERSION=4.0.0
##export VERSIONDATE=20180310
##export VERSION=4.0.3
##export VERSIONDATE=20181102
#export VERSION=4.2.0
#export VERSIONDATE=20190316
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,gtk3,gdk-pixbuf,gettext,pango,cairo,libxml2
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gtksourceview/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/gtksourceview/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/gtksourceview-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/gtksourceview-$VERSION.tar.xz
#cd gtksourceview-$VERSION
## skip making tests
#cat > tests/Makefile.in << EOF
#clean:
#all:
#install:
#install-strip:
#EOF
### fix problem detecting GNU gettext tools on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## mv configure configure.bak
## sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
##fi
#wl-showstatus configure &&
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-Wl,-no-undefined" --enable-static --enable-shared &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gtksourceview-$VERSION



export NAME="GtkSourceView"
export STATUS=
export URL=http://projects.gnome.org/gtksourceview/
export BASENAME=gtksourceview4
export DESCRIPTION="GtkSourceView is a portable C library that extends the standard GTK+ framework for multiline text editing with support for configurable syntax highlighting, unlimited undo/redo, UTF-8 compliant caseless searching, printing and other features typical of a source code editor."
export CATEGORY=gui
export TYPE=library
#export VERSION=4.3.1
#export VERSIONDATE=20190424
#export VERSION=4.4.0
#export VERSIONDATE=20190910
#export VERSION=4.6.0
#export VERSIONDATE=20200307
export VERSION=4.8.0
export VERSIONDATE=20200913
wl-showstatus --package-version
export DEPENDENCIES=glib2,gtk3,gdk-pixbuf,gettext,pango,cairo,libxml2,fribidi,vala,gobject-introspection
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gtksourceview/ gtksourceview-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/gtksourceview/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/gtksourceview-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xJ --force-local -f $TARBALLDIR/$BASENAME/gtksourceview-$VERSION.tar.xz
cd gtksourceview-$VERSION
# fix MSVC issue
mkdir -p winfix
cp -rf $PYDIR/lib/distutils winfix/
patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
@@ -85,3 +85,3 @@
         else:
-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
+            return None

EOF
# fix missing stack protection library in gtksourceview/meson.build
sed -i.bak -e "s/extra_args: \[/& '--extra-library=ssp',/" gtksourceview/meson.build
# don't use -Werror=array-bounds compiler flag (version >= 4.8.0)
sed -i.bak -e "s/'-Werror=array-bounds',//" meson.build
# don't use -fstack-protector-strong compiler flag (version >= 4.8.0)
sed -i.bak2 -e "s/test_c_args += '-fstack-protector-strong'//" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -D vapi=true -D gir=true -D gtk_doc=false -D install_tests=false -Dc_link_args="-fstack-protector" . build_both &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -D vapi=true -D gir=true -D gtk_doc=false -D install_tests=false -Dc_link_args="-fstack-protector" . build_both &&
 # fix slash/backslash path issue when calling Python from Ninja
 sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 # fix Python path issues in meson_exe
 sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
 wl-showstatus build-install &&
 #PKG_CONFIG= PATH=$PATH:$PYDIR PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 PATH=$PATH:$PYDIR PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gtksourceview-$VERSION



