#export NAME="wayland-protocols"
#export STATUS=
#export URL=https://gitlab.freedesktop.org/wayland/wayland-protocols
#export BASENAME=wayland-protocols
#export DESCRIPTION="wayland-protocols contains Wayland protocols that add functionality not available in the Wayland core protocol. Such protocols either add completely new functionality, or extend the functionality of some other protocol either in Wayland core, or some other protocol in wayland-protocols."
#export CATEGORY=
#export TYPE=library
##export VERSION=1.22
##export VERSIONDATE=20210901
#export VERSION=1.23
#export VERSIONDATE=20210915
#####No package 'wayland-scanner' found
#####Build-time dependency wayland-scanner found: NO (tried pkgconfig and cmake)
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
#export DOWNLOADURL="https://wayland.freedesktop.org/releases.html"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://wayland.freedesktop.org/releases/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
#wl-showstatus configure &&
# #mkdir -p m4 &&
# #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# #./autogen.sh &&
# #    echo OK
# ## fix building DLLs on 64-bit
# #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
# # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
# #fi
# #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
# #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
# #PYTHON=$PYDIR/python.exe 
# #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# ## fix building DLLs
# #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# ## fix detection of shared libraries
# #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
# #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="wayland-protocols"
export STATUS=
export URL=https://gitlab.freedesktop.org/wayland/wayland-protocols
export BASENAME=wayland-protocols
export DESCRIPTION="wayland-protocols contains Wayland protocols that add functionality not available in the Wayland core protocol. Such protocols either add completely new functionality, or extend the functionality of some other protocol either in Wayland core, or some other protocol in wayland-protocols."
export CATEGORY=
export TYPE=library
#export VERSION=1.24
#export VERSIONDATE=20211124
#export VERSION=1.25
#export VERSIONDATE=20220129
#export VERSION=1.26
#export VERSIONDATE=20220708
#export VERSION=1.27
#export VERSIONDATE=20221010
#export VERSION=1.28
#export VERSIONDATE=20221105
#export VERSION=1.29
#export VERSIONDATE=20221115
#export VERSION=1.30
#export VERSIONDATE=20221122
export VERSION=1.31
export VERSIONDATE=20221129
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://wayland.freedesktop.org/releases.html"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://wayland.freedesktop.org/releases/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://gitlab.freedesktop.org/wayland/wayland-protocols/-/releases/$VERSION/downloads/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dtests=false . build_both &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dtests=false . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



