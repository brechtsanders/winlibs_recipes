#export NAME="mlpack"
#export STATUS=
#export URL=http://mlpack.org/
#export BASENAME=mlpack
#export DESCRIPTION="a scalable C++ machine learning library"
#export CATEGORY=dataprocessing
#export TYPE=library
##export VERSION=1.0.7
##export VERSIONDATE=20131122
##export VERSION=1.0.8
##export VERSIONDATE=20140107
##export VERSION=1.0.9
##export VERSIONDATE=20140729
##export VERSION=1.0.10
##export VERSIONDATE=20140830
#####CMakeFiles/cf.dir/objects.a(cf_main.cpp.obj):cf_main.cpp:(.text$_ZNK5boost15program_options11typed_valueISscE6xparseERNS_3anyERKSt6vectorISsSaISsEE[__ZNK5boost15program_options11typed_valueISscE6xparseERNS_3anyERKSt6vectorISsSaISsEE]+0x2b): undefined reference to `boost::program_options::validate(boost::any&, std::vector<std::string, std::allocator<std::string> > const&, std::string*, int)'
##export VERSION=1.0.11
##export VERSIONDATE=20141212
##export VERSION=1.0.12
##export VERSIONDATE=20150108
#####E:\Prog\MSYS2-64\custombuilt\include/armadillo_bits/arma_static_check.hpp:23:5:error: size of array is negative     junk[ ERROR___INCORRECT_OR_UNSUPPORTED_TYPE ? -1 : +1 ];
##export VERSION=2.0.0
##export VERSIONDATE=20151224
##export VERSION=2.0.1
##export VERSIONDATE=20160405
##export VERSION=2.0.2
##export VERSIONDATE=20160621
##export VERSION=2.0.3
##export VERSIONDATE=20160722
##export VERSION=2.1.0
##export VERSIONDATE=20161101
##export VERSION=2.1.1
##export VERSIONDATE=20161223
#####src/mlpack/methods/kmeans/kmeans_impl.hpp:178:20: error: there are no arguments to 'isnan' that depend on a template parameter, so a declaration of 'isnan' must be available [-fpermissive]
##export VERSION=2.2.0
##export VERSIONDATE=20170322
##export VERSION=2.2.1
##export VERSIONDATE=20170414
#####preprocess_describe_main.cpp:(.text+0xbfc): undefined reference to `mlpack::util::PrefixedOutStream::operator<<(std::ostream& (*)(std::ostream&))'
##export VERSION=2.2.2
##export VERSIONDATE=20170505
##export VERSION=2.2.3
##export VERSIONDATE=20170525
##export VERSION=2.2.4
##export VERSIONDATE=20170719
##export VERSION=2.2.5
##export VERSIONDATE=20170827
##export VERSION=3.0.0
##export VERSIONDATE=20180331
##export VERSION=3.0.1
##export VERSIONDATE=20180511
##export VERSION=3.0.2
##export VERSIONDATE=20180609
##export VERSION=3.0.3
##export VERSIONDATE=20180728
##export VERSION=3.0.4
##export VERSIONDATE=20181114
##export VERSION=3.1.0
##export VERSIONDATE=20190426
#export VERSION=3.1.1
#export VERSIONDATE=20190527
#####src/mlpack/core/data/load.cpp:22:114: error: duplicate explicit instantiation of 'bool mlpack::data::Load(const string&, arma::Mat<eT>&, bool, bool) [with eT = long long unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>]' [-fpermissive]
##export VERSION=3.2.0
##export VERSIONDATE=20190926
##export VERSION=3.2.1
##export VERSIONDATE=20191002
##export VERSION=3.2.2
##export VERSIONDATE=20200130
##export VERSION=3.3.0
##export VERSIONDATE=20200408
##export VERSION=3.3.1
##export VERSIONDATE=20200430
##export VERSION=3.3.2
##export VERSIONDATE=20200619
##export VERSION=3.4.0
##export VERSIONDATE=20200902
##export VERSION=3.4.1
##export VERSIONDATE=20200908
##export VERSION=3.4.2
##export VERSIONDATE=20201029
##export VERSION=4.0.0
##export VERSIONDATE=20221025
##export VERSION=4.0.1
##export VERSIONDATE=20221230
#####g++ crashes without error message when compiling src/mlpack/bindings/cli/print_help.cpp
#wl-showstatus --package-version
##export DEPENDENCIES=lapack,boost,armadillo,zlib,libiconv,libxml2,ensmallen
#export DEPENDENCIES=openblas,boost,armadillo,zlib,libiconv,libxml2,ensmallen
#export OPTIONALDEPENDENCIES=hdf5
#export BUILDDEPENDENCIES=cmake,doxygen
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.txt
#export LICENSETYPE=LGPL
#export DOWNLOADURL="http://www.mlpack.org/files/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.mlpack.org/files/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
### fix missing Log in src/mlpack/methods/matrix_completion/matrix_completion.cpp (version >= 3.3.0)
##mv src/mlpack/methods/matrix_completion/matrix_completion.cpp src/mlpack/methods/matrix_completion/matrix_completion.cpp.bak &&
##echo "#include <mlpack/core/util/log.hpp>" > src/mlpack/methods/matrix_completion/matrix_completion.cpp &&
##cat src/mlpack/methods/matrix_completion/matrix_completion.cpp.bak >> src/mlpack/methods/matrix_completion/matrix_completion.cpp
### disable cotire to avoid issues with precompiled headers (version >= 3.3.0)
##sed -i.bak -e "s/^include(CMake\/cotire\.cmake)/#&/" CMakeLists.txt
##sed -i.bak -e "s/^cotire(mlpack)/#&/" src/mlpack/CMakeLists.txt
### fix error: file too big (version >= 3.3.0)
##sed -i.bak2 -e "s/-O3/-Os/" CMakeLists.txt
##sed -i.bak2 -e "s/-O3/-Wa,-mbig-obj -Og/" CMakeLists.txt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBOOST_ROOT:PATH=$MINGWPREFIX -DDOWNLOAD_ENSMALLEN:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBLAS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.a -DLAPACK_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.a -S. -Bbuild_static &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBoost_USE_STATIC_LIBS=ON -DBoost_USE_STATIC_RUNTIME:BOOL=ON -DBOOST_ROOT:PATH=$MINGWPREFIX -DDOWNLOAD_ENSMALLEN:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBLAS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.a -DLAPACK_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.a -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
# ## fix multiple definitions (version >= 3.2.0)
# #for F in $(find build_static -name linklibs.rsp); do
# # echo "-Wl,--allow-multiple-definition" >> $F
# #done &&
# #sed -i.bak -e "s/ -O3 / /" $(grep -l " -O3 " $(find build_static -name '*.make')) &&
# #wl-showstatus configure &&
# ##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBOOST_ROOT:PATH=$MINGWPREFIX -DDOWNLOAD_ENSMALLEN:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBLAS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.dll.a -DLAPACK_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.dll.a -S. -Bbuild_shared  &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBoost_USE_STATIC_LIBS=OFF -DBoost_USE_STATIC_RUNTIME:BOOL=OFF -DBOOST_ROOT:PATH=$MINGWPREFIX -DDOWNLOAD_ENSMALLEN:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBLAS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.dll.a -DLAPACK_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.dll.a -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
# ## fix multiple definitions (version >= 3.2.0)
# #for F in $(find build_shared -name linklibs.rsp); do
# # echo "-Wl,--allow-multiple-definition" >> $F
# #done &&
# wl-showstatus build-install &&
# ( make -j1 -Cbuild_static install/strip || make -j1 -Cbuild_static install/strip CXX="${CXX:-g++} -fpermissive" ) &&
# #wl-showstatus build-install &&
# #( make -j1 -Cbuild_shared install/strip || make -j1 -Cbuild_shared install/strip CXX="${CXX:-g++} -fpermissive" ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
#####To do: build DLL



export NAME="mlpack"
export STATUS=
export URL=http://mlpack.org/
export BASENAME=mlpack
export DESCRIPTION="a scalable C++ machine learning library"
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=3.4.2
#export VERSIONDATE=20201029
#export VERSION=4.0.1
#export VERSIONDATE=20221230
#export VERSION=4.1.0
#export VERSIONDATE=20230428
#export VERSION=4.2.0
#export VERSIONDATE=20230617
#export VERSION=4.2.1
#export VERSIONDATE=20230907
#export VERSION=4.3.0
#export VERSIONDATE=20231128
#export VERSION=4.4.0
#export VERSIONDATE=20240529
#export VERSION=4.5.0
#export VERSIONDATE=20240919
#export VERSION=4.5.1
#export VERSIONDATE=20241205
export VERSION=4.6.0
export VERSIONDATE=20250404
wl-showstatus --package-version
#export DEPENDENCIES=lapack,boost,armadillo,zlib,libiconv,libxml2,ensmallen
export DEPENDENCIES=openblas,boost,armadillo,zlib,libiconv,libxml2,ensmallen
export OPTIONALDEPENDENCIES=hdf5
export BUILDDEPENDENCIES=cmake,ninja,doxygen
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=LGPL
export DOWNLOADURL="http://www.mlpack.org/files/"
#export DOWNLOADURL="https://github.com/mlpack/mlpack/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://www.mlpack.org/files/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 #wl-showstatus configure &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_GO_SHLIB:BOOL=OFF -DBoost_USE_STATIC_LIBS=ON -DBoost_USE_STATIC_RUNTIME:BOOL=ON -DBOOST_ROOT:PATH=$MINGWPREFIX -DDOWNLOAD_ENSMALLEN:BOOL=OFF -DCOTIRE_MINIMUM_NUMBER_OF_TARGET_SOURCES:STRING=9999 -DBUILD_TESTS:BOOL=OFF -DBLAS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.a -DLAPACK_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.a -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DGO_EXECUTABLE:FILEPATH=$MINGWPREFIX/go/bin/go.exe -DCMAKE_CXX_FLAGS_RELEASE:STRING="-Wa,-mbig-obj -Os -DNDEBUG" -S. -Bbuild_static &&
 #sed -i.bak -e "s/-O3/-Os/g" build_static/build.ninja &&
 wl-showstatus configure &&
 #PKG_CONFIG= cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_GO_SHLIB:BOOL=ON -DBoost_USE_STATIC_LIBS=OFF -DBoost_USE_STATIC_RUNTIME:BOOL=OFF -DBOOST_ROOT:PATH=$MINGWPREFIX -DDOWNLOAD_ENSMALLEN:BOOL=OFF -DCOTIRE_MINIMUM_NUMBER_OF_TARGET_SOURCES:STRING=9999 -DBUILD_TESTS:BOOL=OFF -DBLAS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.dll.a -DLAPACK_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.dll.a -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DGO_EXECUTABLE:FILEPATH=$MINGWPREFIX/go/bin/go.exe -DCMAKE_CXX_FLAGS_RELEASE:STRING="-Wa,-mbig-obj -Os -DNDEBUG" -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_GO_SHLIB:BOOL=ON -DBoost_USE_STATIC_LIBS=OFF -DBoost_USE_STATIC_RUNTIME:BOOL=OFF -DBOOST_ROOT:PATH=$MINGWPREFIX -DDOWNLOAD_ENSMALLEN:BOOL=OFF -DCOTIRE_MINIMUM_NUMBER_OF_TARGET_SOURCES:STRING=9999 -DBUILD_TESTS:BOOL=OFF -DBLAS_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.dll.a -DLAPACK_LIBRARY:FILEPATH=$MINGWPREFIX/lib/libopenblas.dll.a -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DGO_EXECUTABLE:FILEPATH=$MINGWPREFIX/go/bin/go.exe -DCMAKE_CXX_FLAGS_RELEASE:STRING="-Wa,-mbig-obj -Os -DNDEBUG" -S. -Bbuild_shared &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
####TO DO: also build static library



