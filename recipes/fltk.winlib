export NAME="FLTK"
export STATUS=
export URL=http://www.fltk.org/
export BASENAME=fltk
export DESCRIPTION="FLTK (pronounced \"fulltick\") is a cross-platform C++ GUI toolkit for UNIX/Linux (X11), Microsoft Windows, and MacOS(R) X. FLTK provides modern GUI functionality without the bloat and supports 3D graphics via OpenGL and its built-in GLUT emulation."
export CATEGORY=gui,portability
export TYPE=library
#export VERSION=1.1.9
#export VERSION=1.1.10
#export VERSIONDATE=20091228
#export VERSION=1.3.0
#export VERSIONDATE=20110901
#export VERSION=1.3.1
#export VERSIONDATE=20121107
#export VERSION=1.3.2
#export VERSIONDATE=20121210
#export VERSION=1.3.3
#export VERSIONDATE=20141104
#export VERSION=1.3.4
#export VERSIONDATE=20161112
#export VERSION=1.3.4-1
#export VERSIONDATE=20161115
#export VERSION=1.3.4-2
#export VERSIONDATE=20170918
#export VERSION=1.3.5
#export VERSIONDATE=20190303
#export VERSION=1.3.6
#export VERSIONDATE=20210515
#export VERSION=1.3.7
#export VERSIONDATE=20210726
#export VERSION=1.3.8
#export VERSIONDATE=20211121
export VERSION=1.3.9
export VERSIONDATE=20231210
####configure: error: Configure could not find required X11 libraries
wl-showstatus --package-version
export DEPENDENCIES=libjpeg,libpng
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL-based
#export DOWNLOADURL="http://www.fltk.org/software.php fltk- -source.tar.bz2"
export DOWNLOADURL="http://www.fltk.org/software.php fltk- -source.tar.gz"
#export DOWNLOADURL="https://github.com/fltk/fltk/tags release-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.rz.tu-bs.de/pub/mirror/ftp.easysw.com/ftp/pub/fltk/$VERSION/$BASENAME-$VERSION-source.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.easysw.com/pub/fltk/$VERSION/$BASENAME-$VERSION-source.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.easysw.com/pub/fltk/$VERSION/$BASENAME-$VERSION-source.tar.gz
#export DOWNLOADSOURCEURL=http://fltk.org/pub/fltk/$VERSION/$BASENAME-$VERSION-source.tar.gz
#export DOWNLOADSOURCEURL=http://fltk.org/pub/fltk/$(echo $VERSION|sed -e "s/-.*$//")/$BASENAME-$VERSION-source.tar.gz
export DOWNLOADSOURCEURL=https://www.fltk.org/pub/fltk/$VERSION/$BASENAME-$VERSION-source.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION-source.tar.gz
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION-source.tar.bz2
cd $BASENAME-$VERSION
## fix redefinition of strcasecmp in src/flstring.h
#patch -ulbf src/flstring.h << EOF
#--- src/flstring.h2012-06-06 05:38:02 +0200
#+++ src/flstring.h  2013-11-18 00:36:12 +0100
#@@ -41,3 +41,3 @@
#
#-#  if defined(WIN32) && !defined(__CYGWIN__)
#+#  if defined(WIN32) && !defined(__CYGWIN__) && !defined(__MINGW32__)
# #    define strcasecmp(s,t)    _stricmp((s), (t))
#EOF
## fix redefinition of strcasecmp in fluid/factory.cxx
#patch -ulbf fluid/factory.cxx << EOF
#--- fluid/factory.cxx  2011-07-19 06:49:30 +0200
#+++ fluid/factory.cxx  2013-11-18 19:54:02 +0100
#@@ -44,21 +44,3 @@
#
#-static int
#-strcasecmp(const char *s, const char *t) {
#-  while (*s != '\0' && *t != '\0') {
#-    if (tolower(*s) < tolower(*t))
#-      return (-1);
#-    else if (tolower(*s) > tolower(*t))
#-      return (1);
#-
#-    s ++;
#-    t ++;
#-  }
#-
#-  if (*s == '\0' && *t == '\0')
#-    return (0);
#-  else if (*s != '\0')
#-    return (1);
#-  else
#-    return (-1);
#-}
#+#define strcasecmp(s,t) _stricmp((s), (t))
# #endif // !HAVE_STRCASECMP
#EOF
# fix error: narrowing conversion of '-1' from 'int' to 'long unsigned int' in fluid/ExternalCodeEditor_WIN32.cxx (version >= 1.3.5)
patch -ulbf fluid/ExternalCodeEditor_WIN32.cxx << EOF
@@ -139,3 +139,3 @@
   while ( is_editing() ) {
-    switch ( reap_editor() ) {
+    switch ( (int)reap_editor() ) {
       case -1:  // error
@@ -510,3 +510,3 @@
       DWORD wpid = reap_editor();
-      switch (wpid) {
+      switch ((int)wpid) {
         case -1:        // wait failed
EOF
# fix narrowing conversion error in fluid/ExternalCodeEditor_WIN32.cxx (version >= 1.3.8)
####bug reported: https://github.com/fltk/fltk/issues/445
patch -ulbf fluid/ExternalCodeEditor_WIN32.cxx << EOF
@@ -476,5 +476,4 @@
   if ( !is_editing() ) return -2;
-  int err;
   DWORD msecs_wait = 50;   // .05 sec
-  switch ( err = WaitForSingleObject(pinfo_.hProcess, msecs_wait) ) {
+  switch ( WaitForSingleObject(pinfo_.hProcess, msecs_wait) ) {
     case WAIT_TIMEOUT: {   // process didn't reap, still running
EOF
#make -C src install && make -C fluid install
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM && 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-static-libstdc++" && 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-gl --without-x LDFLAGS="-static-libstdc++" && 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-gl --disable-x11 --with-x=no LDFLAGS="-static-libstdc++" && 
# wl-showstatus build-install &&
# ( make install || make -C src install && make -C fluid install ) && 
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOPTION_BUILD_SHARED_LIBS:BOOL=ON -DOPTION_CAIRO:BOOL=OFF -DOPTION_CAIROEXT:BOOL=OFF -DOPTION_BUILD_HTML_DOCUMENTATION:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -S. -Bbuild_win &&
 #PKG_CONFIG= cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOPTION_BUILD_SHARED_LIBS:BOOL=ON -DOPTION_CAIRO:BOOL=OFF -DOPTION_CAIROEXT:BOOL=OFF -DOPTION_BUILD_HTML_DOCUMENTATION:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -S. -Bbuild_win &&
 cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOPTION_BUILD_SHARED_LIBS:BOOL=ON -DOPTION_CAIRO:BOOL=OFF -DOPTION_CAIROEXT:BOOL=OFF -DOPTION_BUILD_HTML_DOCUMENTATION:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build-install &&
 make -Cbuild_win install/strip &&
 ## also copy shared library archives without _SHARED suffix (version <= 1.3.5)
 #for F in $INSTALLPREFIX/lib/*_SHARED.dll.a; do
 # cp -f $F $(echo $F|sed -e "s/_SHARED\(\.dll\.a\)$/\1/")
 #done &&
 # fix absolute link in .cmake file(s)
 #sed -i -e "s?$(echo $INSTALLPREFIX|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?\${CMAKE_CURRENT_LIST_FILE}/../..?g" $INSTALLPREFIX/CMake/FLTKConfig.cmake $INSTALLPREFIX/CMake/UseFLTK.cmake &&
 sed -i -e "s?$(cygpath -m $INSTALLPREFIX)?\${CMAKE_CURRENT_LIST_FILE}/../..?g" $INSTALLPREFIX/CMake/FLTKConfig.cmake $INSTALLPREFIX/CMake/UseFLTK.cmake &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOPTION_BUILD_SHARED_LIBS:BOOL=ON -DOPTION_CAIRO:BOOL=OFF -DOPTION_CAIROEXT:BOOL=OFF -DOPTION_BUILD_HTML_DOCUMENTATION:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -DFLTK_BUILD_TEST:BOOL=OFF -S. -Bbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
# # fix absolute link in .cmake file(s)
# sed -i -e "s?$(cygpath -m $INSTALLPREFIX)?\${CMAKE_CURRENT_LIST_FILE}/../..?g" $INSTALLPREFIX/CMake/FLTKConfig.cmake $INSTALLPREFIX/CMake/UseFLTK.cmake &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



