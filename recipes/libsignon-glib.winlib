#export NAME="libsignon-glib"
#export STATUS=
##export URL=http://code.google.com/p/accounts-sso/
#export URL=https://gitlab.com/accounts-sso
#export BASENAME=libsignon-glib
#export DESCRIPTION="The Accounts & SSO framework consists of a set of components and libraries which implement an account manager for a user's online accounts and a single-sign-on daemon which handles the authentication to the remote services on behalf of the client applications. The API to perform the authentication is provided by libsignon."
#export CATEGORY=security
#export TYPE=library
##export VERSION=1.9
##export VERSIONDATE=20130324
##export VERSION=1.10
##export VERSIONDATE=20130605
##export VERSION=1.23
##export VERSIONDATE=20170419
#export VERSION=1.24
#export VERSIONDATE=20181102
#####No package 'signond' found
#wl-showstatus --package-version
#export DEPENDANCIES=glib2,signon
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
##export DOWNLOADURL="http://code.google.com/p/accounts-sso/downloads/list VERSION_"
#export DOWNLOADURL="https://gitlab.com/accounts-sso/libaccounts-glib/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://accounts-sso.googlecode.com/files/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://gitlab.com/accounts-sso/libaccounts-glib/repository/archive.tar.bz2?ref=VERSION_$VERSION
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/archive.tar.bz2@ref=VERSION_$VERSION $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#wl-wait4deps
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
#cd libaccounts-glib-VERSION_$VERSION*
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "AM_GNU_GETTEXT_VERSION(`gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/"`)" >> configure.ac &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
##fi
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
## fix dependancy on gio-unix
#mv configure configure.bak
#sed -e "s/gio-unix/gio-windows/g" configure.bak > configure
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection=no LDFLAGS="-Wl,--as-needed" &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#    make install-pkgconfigDATA
##    cmake.exe . -LH; rm -f CMakeCache.txt &&
##rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
## make install/strip &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



export NAME="libsignon-glib"
export STATUS=
#export URL=http://code.google.com/p/accounts-sso/
export URL=https://gitlab.com/accounts-sso
export BASENAME=libsignon-glib
export DESCRIPTION="The Accounts & SSO framework consists of a set of components and libraries which implement an account manager for a user's online accounts and a single-sign-on daemon which handles the authentication to the remote services on behalf of the client applications. The API to perform the authentication is provided by libsignon."
export CATEGORY=security
export TYPE=library
#export VERSION=1.25
#export VERSIONDATE=20200421
export VERSION=1.26
export VERSIONDATE=20220904
wl-showstatus --package-version
export DEPENDANCIES=glib2,gettext,sqlite3,libxml2
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=meson,ninja,cmake,vala
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://gitlab.com/accounts-sso/libaccounts-glib/-/tags?sort=updated_desc"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://gitlab.com/accounts-sso/libaccounts-glib/-/archive/VERSION_$VERSION/libaccounts-glib-VERSION_$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfj $TARBALLDIR/$BASENAME/libaccounts-glib-VERSION_$VERSION.tar.bz2
cd libaccounts-glib-VERSION_$VERSION*
# fix MSVC issue
mkdir -p winfix
cp -rf $PYDIR/lib/distutils winfix/
patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
@@ -85,3 +85,3 @@
         else:
-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
+            return None

EOF
# skip building tests and docs
sed -i.bak2 -e "s/^subdir('tests')/#&/; s/^subdir('docs')/#&/" meson.build
# fix missing gio-unix
sed -i.bak -e "s/gio-unix-/gio-/" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dpy-overrides-dir=$MINGWPREFIX -Dc_args="-I$MINGWPREFIX/include/gio-win32-2.0" . build_both &&
 # fix slash/backslash path issue when calling Python from Ninja
 sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 wl-showstatus build-install &&
 PKG_CONFIG= PATH=$PYDIR:$PATH PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf libaccounts-glib-VERSION_$VERSION*



