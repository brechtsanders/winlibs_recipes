export NAME="Pragtical"
export STATUS=
export URL=https://pragtical.dev/
export BASENAME=pragtical
export DESCRIPTION="The practical and pragmatic code editor"
export CATEGORY=office
export TYPE=application
#export VERSION=3.3.0
#export VERSIONDATE=20240407
#export VERSION=3.3.1
#export VERSIONDATE=20240419
#export VERSION=3.4.0
#export VERSIONDATE=20240625
#export VERSION=3.4.1
#export VERSIONDATE=20240629
#export VERSION=3.4.2
#export VERSIONDATE=20240812
#export VERSION=3.4.3
#export VERSIONDATE=20240826
#export VERSION=3.4.4
#export VERSIONDATE=20240828
#export VERSION=3.5.0
#export VERSIONDATE=20240916
#export VERSION=3.5.1
#export VERSIONDATE=20241010
#export VERSION=3.5.2
#export VERSIONDATE=20250315
#export VERSION=3.6.0
#export VERSIONDATE=20250701
export VERSION=3.7.0
export VERSIONDATE=20250813
wl-showstatus --package-version
export DEPENDENCIES=luajit,sdl2,pcre2,freetype2,uchardet
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/pragtical/pragtical/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/pragtical/pragtical/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/meson.build (version >= 3.3.1)
#### Bug reported here: https://github.com/pragtical/pragtical/pull/83
patch -ulbf src/meson.build << EOF
@@ -46,2 +46,3 @@
     dirmonitor_backend = get_option('dirmonitor_backend')
+    pragtical_sources += 'api/dirmonitor/' + dirmonitor_backend + '.c'
 endif
EOF
# fix install location
sed -i.bak -e "s?\(dir = '\)/?\1$(cygpath -m $INSTALLPREFIX/share/pragtical)/?" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX/share/pragtical --backend ninja --buildtype release --strip --default-library both -Dportable=true -Ddirmonitor_backend=win32 -Dextra_colors=true -Dextra_languages=true -Dppm=false -Djit=true -Duse_system_lua=true -Dc_args="-I$MINGWPREFIX/include/uchardet" . build_both &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX/share/pragtical --backend ninja --buildtype release --strip --default-library both -Dportable=true -Ddirmonitor_backends=win32 -Dextra_colors=true -Dextra_languages=true -Dppm=false -Djit=true -Duse_system_lua=true -Dc_args="-I$MINGWPREFIX/include/uchardet $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types -Wno-incompatible-function-pointer-types"; fi)" . build_both &&
 wl-showstatus build-install &&
 ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####$MINGWPREFIX/share/pragtical/pragtical.exe



## Create standalone package
#mkdir -p pragtical &&
# cp -r $MINGWPREFIX/share/pragtical/* pragtical &&
# copypedeps -r -n pragtical/*.exe pragtical/ &&
#    echo OK
