export NAME="hyprutils"
export STATUS=
export URL=https://github.com/hyprwm/hyprutils
export BASENAME=hyprutils
export DESCRIPTION="Hyprutils is a small C++ library for utilities used across the Hypr* ecosystem."
export CATEGORY=
export TYPE=library
#export VERSION=0.2.3
#export VERSIONDATE=20241006
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export VERSION=0.2.4
#export VERSIONDATE=20241110
#export VERSION=0.2.5
#export VERSIONDATE=20241112
export VERSION=0.2.6
export VERSIONDATE=20241116
#export VERSION=0.3.0
#export VERSIONDATE=20241223
#export VERSION=0.3.1
#export VERSIONDATE=20250101
#export VERSION=0.3.2
#export VERSIONDATE=20250102
#export VERSION=0.3.3
#export VERSIONDATE=20250106
#export VERSION=0.4.0
#export VERSIONDATE=20250123
#export VERSION=0.5.0
#export VERSIONDATE=20250127
#export VERSION=0.5.1
#export VERSIONDATE=20250219
####src/os/FileDescriptor.cpp:4:10: fatal error: sys/poll.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=
#export DEPENDENCIES=sys_wait_h,win32-fork
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/hyprwm/hyprutils/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/hyprwm/hyprutils/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix src/os/Process.cpp (version = 0.2.4)
#####Bug reported here: https://github.com/hyprwm/hyprutils/issues/18
#patch -ulf src/os/Process.cpp << EOF
#@@ -8,3 +8,5 @@
#
#+#ifndef _WIN32
# #include <sys/wait.h>
#+#endif
#
#@@ -15,2 +17,5 @@
# bool Hyprutils::OS::CProcess::runSync() {
#+#ifdef _WIN32
#+    return false;
#+#else
#     int outPipe[2], errPipe[2];
#@@ -86,2 +91,3 @@
#     return true;
#+#endif
# }
#@@ -89,2 +95,5 @@
# bool Hyprutils::OS::CProcess::runAsync() {
#+#ifdef _WIN32
#+    return false;
#+#else
#     int socket[2];
#@@ -140,2 +149,3 @@
#     return true;
#+#endif
# }
#EOF
# fix src/os/Process.cpp (version >= 0.2.5)
####Bug reported here: https://github.com/hyprwm/hyprutils/issues/18
patch -ulbf src/os/Process.cpp << EOF
@@ -11,4 +11,6 @@
 #include <sys/fcntl.h>
+#ifndef _WIN32
 #include <sys/wait.h>
 #include <sys/poll.h>
+#endif

@@ -19,2 +21,5 @@
 bool Hyprutils::OS::CProcess::runSync() {
+#ifdef _WIN32
+    return false;
+#else
     int outPipe[2], errPipe[2];
@@ -148,2 +153,3 @@
     return true;
+#endif
 }
@@ -151,2 +157,5 @@
 bool Hyprutils::OS::CProcess::runAsync() {
+#ifdef _WIN32
+    return false;
+#else
     int socket[2];
@@ -202,2 +211,3 @@
     return true;
+#endif
 }
EOF
## fix src/os/Process.cpp (version >= 0.2.4)
#patch -ulbf src/os/Process.cpp << EOF
#@@ -8,2 +8,7 @@
#
#+#ifdef _WIN32
#+#include <win32fork.h>
#+#include <fcntl.h>
#+#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
#+#endif
# #include <sys/wait.h>
#@@ -103,2 +108,3 @@
#         // run in child
#+#ifndef _WIN32
#         sigset_t set;
#@@ -106,2 +112,3 @@
#         sigprocmask(SIG_SETMASK, &set, NULL);
#+#endif
#
#EOF
# also allow building static library
sed -i.bak -e "s/\(add_library([^ ]*\) SHARED/\1/" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-D_XOPEN_SOURCE -I$(cygpath -m $MINGWPREFIX/win32ports/include)" -S. -Bbuild_static &&
 ## add linker flag
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lwin32fork/" build_static/build.ninja &&
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-D_XOPEN_SOURCE -I$(cygpath -m $MINGWPREFIX/win32ports/include)" -S. -Bbuild_shared &&
 ## add linker flag
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lwin32fork/" build_shared/build.ninja &&
 wl-showstatus build-install-static &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install-shared &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



