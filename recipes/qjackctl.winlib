#export NAME="QjackCtl"
#export STATUS=
#export URL=https://qjackctl.sourceforge.io/
#export BASENAME=qjackctl
#export DESCRIPTION="QjackCtl is a simple Qt application to control the JACK sound server daemon, specific for the Linux Audio Desktop infrastructure."
#export CATEGORY=audio
#export TYPE=application
##export VERSION=0.9.7
##export VERSIONDATE=20220830
##export VERSION=0.9.8
##export VERSIONDATE=20221003
##export VERSION=0.9.9
##export VERSIONDATE=20221228
#####ninja: error: manifest 'build.ninja' still dirty after 100 tries, perhaps system time is not set
#export VERSION=0.9.10
#export VERSIONDATE=20230323
#wl-showstatus --package-version
#export DEPENDENCIES=qt,jack,portaudio
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
##export BUILDDEPENDENCIES=cmake,ninja
##export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=GPL
#export DOWNLOADURL="https://sourceforge.net/projects/qjackctl/files/qjackctl/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/qjackctl/qjackctl/$VERSION/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
#mkdir -p build_win &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCONFIG_QT6:BOOL=OFF -DCONFIG_WAYLAND:BOOL=OFF -S. -Bbuild_win &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
##mkdir -p build_win &&
## wl-showstatus configure &&
## PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCONFIG_QT6:BOOL=OFF -DCONFIG_WAYLAND:BOOL=OFF -S. -Bbuild_win &&
## wl-showstatus build-install &&
## ninja -Cbuild_win install/strip &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####PATH=$PATH:$MINGWPREFIX/qt/bin qjackctl.exe



export NAME="QjackCtl"
export STATUS=
export URL=https://qjackctl.sourceforge.io/
export BASENAME=qjackctl
export DESCRIPTION="QjackCtl is a simple Qt application to control the JACK sound server daemon, specific for the Linux Audio Desktop infrastructure."
export CATEGORY=audio
export TYPE=application
#export VERSION=0.9.10
#export VERSIONDATE=20230323
#export VERSION=0.9.11
#export VERSIONDATE=20230601
export VERSION=0.9.12
export VERSIONDATE=20230908
wl-showstatus --package-version
export DEPENDENCIES=qt6,jack,portaudio
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
export DOWNLOADURL="https://sourceforge.net/projects/qjackctl/files/qjackctl/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/qjackctl/qjackctl/$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCONFIG_QT6:BOOL=ON -DCONFIG_WAYLAND:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####PATH=$PATH:$MINGWPREFIX/qt6/bin qjackctl.exe



