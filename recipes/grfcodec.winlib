export NAME="grfcodec"
export STATUS=
export URL=https://github.com/OpenTTD/grfcodec
export BASENAME=grfcodec
export DESCRIPTION="nfo (de-)compiler for NewGRFs"
export CATEGORY=fileformat
export TYPE=application
export VERSION=6.0.6
export VERSIONDATE=20230611
wl-showstatus --package-version
export DEPENDENCIES=libpng
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/OpenTTD/grfcodec/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/OpenTTD/grfcodec/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/command.cpp (version >= 6.0.6)
patch -ulbf src/command.cpp << EOF
@@ -305,3 +305,3 @@
                switch(val){
-               case -1:
+               case (uint)-1:
                        IssueMessage(0,COMMAND_INVALID_ARG,gen[BEAUTIFY].name);
EOF
# fix ambiguous data in src/data.cpp (version >= 6.0.6)
sed -i.bak -e "s/\([^.]\)\(data\[\)/\1GRF_\2/g" src/data.cpp
# don't abort on warnings
sed -i.bak -e "s/-Wall -Wextra//" Makefile
wl-showstatus build &&
 (
  make CXX=${CXX:-g++} MACHINE=mingw32 ENDIAN_PARAMS=LE TYPESIZE=WIN32 BOOST_INCLUDE=$MINGWPREFIX/include
  make grfcodec.exe grfid.exe grfstrip.exe CXX=${CXX:-g++} MACHINE=mingw32 ENDIAN_PARAMS=LE TYPESIZE=WIN32 BOOST_INCLUDE= LDOPT="-lssp"
 ) &&
 strip *.exe &&
 wl-showstatus install &&
 #make install prefix=$INSTALLPREFIX DO_NOT_INSTALL_MAN=1 DO_NOT_INSTALL_DOCS=1 &&
 mkdir -p $INSTALLPREFIX/bin &&
 cp -f *.exe $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: also build nforenum.exe



