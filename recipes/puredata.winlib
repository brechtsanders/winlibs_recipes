export NAME="Pure Data"
export STATUS=
export URL=http://puredata.info/
export BASENAME=puredata
export DESCRIPTION="Pure Data (aka Pd) is an open source visual programming language. Pd enables musicians, visual artists, performers, researchers, and developers to create software graphically, without writing lines of code. Pd is used to process and generate sound, video, 2D/3D graphics, and interface sensors, input devices, and MIDI. Pd can easily work over local and remote networks to integrate wearable technology, motor systems, lighting rigs, and other equipment. Pd is suitable for learning basic multimedia processing and visual programming methods as well as for realizing complex systems for large-scale projects."
export CATEGORY=development
export TYPE=application
#export VERSION=0.43.4
#export VERSIONDATE=20150301
#export VERSION=0.53.0
#export VERSIONDATE=20221216
#export VERSION=0.53.1
#export VERSIONDATE=20230130
#export VERSION=0.53.2
#export VERSIONDATE=20230316
#export VERSION=0.54.0
#export VERSIONDATE=20230704
export VERSION=0.54.1
export VERSIONDATE=20231225
wl-showstatus --package-version
export DEPENDENCIES=libdl
#export DEPENDENCIES=libdl,fftw,asio
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=BSD
#export DOWNLOADURL="http://sourceforge.net/projects/pure-data/files/pd-extended/ Pd-extended_ -source.tar.bz2"
export DOWNLOADURL="http://puredata.info/downloads/pure-data pd- .src.tar.gz"
#export DOWNLOADURL="http://msp.ucsd.edu/software.html"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/pure-data/pd-extended/$VERSION/Pd-extended_$VERSION-source.tar.bz2
export DOWNLOADSOURCEURL=https://msp.puredata.info/Software/pd-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\.\([0-9]*\)/\1-\2/").src.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#mkdir -p $BASENAME-$VERSION
#tar xj --force-local -f $TARBALLDIR/$BASENAME/Pd-extended_$VERSION-source.tar.bz2 -C$BASENAME-$VERSION
#cd $BASENAME-$VERSION/pd-extended/pd
tar xz --force-local -f $TARBALLDIR/$BASENAME/pd-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\.\([0-9]*\)/\1-\2/").src.tar.gz
cd pd-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\.\([0-9]*\)/\1-\2/")
# avoid undefined reference to sys_gui_midipreferences in src/s_main.c (version >= 0.54.0)
patch -ulbf src/s_main.c << EOF
@@ -1573,3 +1573,2 @@
 void sys_gui_audiopreferences(void);
-void sys_gui_midipreferences(void);
 void glob_start_preference_dialog(t_pd *dummy, t_symbol*s)
@@ -1578,3 +1577,2 @@
     sys_gui_audiopreferences();
-    sys_gui_midipreferences();
     pdgui_vmess("::dialog_preferences::create", "");
EOF
#make -Csrc -fmakefile.mingw
# fix missing folder
mkdir -p m4/generated
wl-showstatus preconfigure &&
 aclocal --force -I m4/generated -I m4 &&
 libtoolize --install --force &&
 autoconf --force &&
 automake --add-missing --copy --force-missing &&
 wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-fcommon" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-fcommon -I$MINGWPREFIX/include/libdl-win32" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-libpd --enable-libpd-utils --enable-fftw --enable-asio --enable-portmidi CFLAGS="-fcommon -I$MINGWPREFIX/include/libdl-win32" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-libpd --enable-libpd-utils --enable-fftw --enable-asio --enable-portmidi CFLAGS="-fcommon -I$MINGWPREFIX/include/libdl-win32 $(if ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-libpd --enable-libpd-utils --enable-fftw --enable-asio --enable-portmidi CFLAGS="-fcommon -I$MINGWPREFIX/include/libdl-win32 $(if ${CC:-gcc} --version|grep -q "^clang" || ${CC:-gcc} --help -v|grep -q "\-Wimplicit-function-declaration"; then echo "-Wno-error=implicit-function-declaration"; fi) -Wno-incompatible-pointer-types" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build-install &&
 ( make install-strip || ( make -j1 install && ${STRIP:-strip} $INSTALLPREFIX/bin/*.{dll,exe} )) &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf pd-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\.\([0-9]*\)/\1-\2/")



