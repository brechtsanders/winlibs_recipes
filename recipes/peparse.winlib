#export NAME="pe-parse"
#export STATUS=
#export URL=https://github.com/trailofbits/pe-parse
#export BASENAME=peparse
#export DESCRIPTION="Principled, lightweight C/C++ PE parser"
#export CATEGORY=development
#export TYPE=library
##export VERSION=master
##export VERSIONDATE=20170720
##export VERSION=1.0.0
##export VERSIONDATE=20200318
##export VERSION=1.0.1
##export VERSIONDATE=20200319
##export VERSION=1.0.2
##export VERSIONDATE=20200326
##export VERSION=1.1.0
##export VERSIONDATE=20200421
##export VERSION=1.2.0
##export VERSIONDATE=20200425
#export VERSION=1.3.0
#export VERSIONDATE=20210430
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
##export LICENSEFILE=LICENSE.txt
#export LICENSEFILE=LICENSE
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/trailofbits/pe-parse/releases pe-parse-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/trailofbits/pe-parse/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/trailofbits/pe-parse/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd pe-parse-$VERSION
## fix pe-parser-library/src/unicode_icu.cpp (version >= 1.0.0)
#patch -ulbf pe-parser-library/src/unicode_icu.cpp << EOF
#@@ -29,3 +29,3 @@
# std::string from_utf16(const UCharString &u) {
#-  icu::UnicodeString utf16_string = icu::UnicodeString(u.data(), u.length());
#+  icu::UnicodeString utf16_string = icu::UnicodeString(u.data(), static_cast<int>(u.length()));
#   std::string result;
#EOF
### remove invalid compiler parameters /W4 /WX
##sed -i.bak -e "s?/W4\|/WX??g" cmake/compilation_flags.cmake
### fix for building both static and shared library
##mv parser-library/CMakeLists.txt parser-library/CMakeLists.txt.bak &&
##sed -e "s/\(add_library\s*(\s*[^ ]*\)/\1 SHARED/" parser-library/CMakeLists.txt.bak > parser-library/CMakeLists.txt &&
##echo "add_library(pe-parser-library_s STATIC buffer.cpp parse.cpp)" >> parser-library/CMakeLists.txt &&
##echo "set_target_properties(pe-parser-library_s PROPERTIES OUTPUT_NAME pe-parser-library)" >> parser-library/CMakeLists.txt
## fix for building both static and shared library
#mv pe-parser-library/CMakeLists.txt pe-parser-library/CMakeLists.txt.bak &&
#sed -e "s/\(add_library\s*(\s*\)\([^ ]*\)\s\(.*\)$/\1\2 SHARED \3\n\1\2_s STATIC \3\nset_target_properties(\2_s PROPERTIES OUTPUT_NAME \2)/" pe-parser-library/CMakeLists.txt.bak > pe-parser-library/CMakeLists.txt &&
##echo "add_library(pe-pe-parser-library_s STATIC buffer.cpp parse.cpp)" >> pe-parser-library/CMakeLists.txt &&
##echo "set_target_properties(pe-pe-parser-library_s PROPERTIES OUTPUT_NAME pe-pe-parser-library)" >> pe-parser-library/CMakeLists.txt
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_FLAGS:STRING="-Wno-error=redundant-decls -Wno-error=ignored-qualifiers -I$(pwd)/pe-parser-library/include" . &&
# wl-showstatus build &&
# ( make || (
#  echo "-Wno-error=redundant-decls -Wno-error=ignored-qualifiers" >> pe-parser-library/CMakeFiles/pe-parser-library.dir/includes_CXX.rsp &&
#  echo "-I$(pwd)/pe-parser-library/include" >> pe-parser-library/CMakeFiles/pe-parser-library.dir/includes_CXX.rsp &&
#  echo "-Wno-error=ignored-qualifiers" >> dump-pe/CMakeFiles/dump-pe.dir/includes_CXX.rsp &&
#  make
# )) &&
# strip */*.dll */*.exe &&
# wl-showstatus install &&
# #mkdir -p $INSTALLPREFIX/include/pe-parse $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# #cp -f parser-library/*.h $INSTALLPREFIX/include/pe-parse &&
# #cp -f parser-library/*.a $INSTALLPREFIX/lib/ &&
# mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# cp -rf pe-parser-library/include/* $INSTALLPREFIX/include/ &&
# cp -f pe-parser-library/*.a $INSTALLPREFIX/lib/ &&
# cp -f */*.dll */*.exe $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf pe-parse-$VERSION



export NAME="pe-parse"
export STATUS=
export URL=https://github.com/trailofbits/pe-parse
export BASENAME=peparse
export DESCRIPTION="Principled, lightweight C/C++ PE parser"
export CATEGORY=development
export TYPE=library
#export VERSION=2.0.0
#export VERSIONDATE=20220226
export VERSION=2.1.1
export VERSIONDATE=20221115
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/trailofbits/pe-parse/releases pe-parse-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/trailofbits/pe-parse/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd pe-parse-$VERSION
# fix pe-parser-library/src/parse.cpp (version >= 2.0.0)
patch -ulbf pe-parser-library/src/parse.cpp << EOF
@@ -1779,3 +1779,3 @@
         // Mask out the offset and assign
-        offset = entry & ~0xf000;
+        offset = entry & static_cast<uint16_t>(~0xf000);

EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf pe-parse-$VERSION



