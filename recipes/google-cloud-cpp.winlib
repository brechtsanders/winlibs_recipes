export NAME="Google Cloud Platform C++ Client Libraries"
export STATUS=
export URL=https://github.com/googleapis/google-cloud-cpp/
export BASENAME=google-cloud-cpp
export DESCRIPTION="C++ client libraries for the following Google Cloud Platform services: Google Cloud BigQuery, Google Cloud Bigtable, Google Cloud IAM, Google Cloud Spanner, Google Cloud Pub/Sub, Google Cloud Storage"
export CATEGORY=communication
export TYPE=library
#export VERSION=1.31.1
#export VERSIONDATE=20210903
#export VERSION=1.32.0
#export VERSIONDATE=20211002
#export VERSION=1.32.1
#export VERSIONDATE=20211007
#export VERSION=1.33.0
#export VERSIONDATE=20211102
#export VERSION=1.34.0
#export VERSIONDATE=20211202
#export VERSION=1.34.1
#export VERSIONDATE=20211208
#export VERSION=1.35.0
#export VERSIONDATE=20220105
#export VERSION=1.36.0
#export VERSIONDATE=20220202
#export VERSION=1.37.0
#export VERSIONDATE=20220302
#export VERSION=1.38.0
#export VERSIONDATE=20220304
#export VERSION=1.39.0
#export VERSIONDATE=20220408
#export VERSION=1.39.1
#export VERSIONDATE=20220412
#export VERSION=1.39.2
#export VERSIONDATE=20220518
#export VERSION=1.40.1
#export VERSIONDATE=20220503
#export VERSION=1.40.2
#export VERSIONDATE=20220518
#export VERSION=1.41.0
#export VERSIONDATE=20220602
#export VERSION=1.42.0
#export VERSIONDATE=20220622
#export VERSION=1.42.1
#export VERSIONDATE=20220916
#export VERSION=1.42.2
#export VERSIONDATE=20230216
####google/cloud/internal/pagination_range.h:151:50: error: template argument 1 is invalid
#export VERSION=2.0.0
#export VERSIONDATE=20220707
#export VERSION=2.0.1
#export VERSIONDATE=20220721
#export VERSION=2.1.0
#export VERSIONDATE=20220802
#export VERSION=2.2.0
#export VERSIONDATE=20220902
#export VERSION=2.2.1
#export VERSIONDATE=20220916
#export VERSION=2.3.0
#export VERSIONDATE=20221002
#export VERSION=2.4.0
#export VERSIONDATE=20221102
#export VERSION=2.5.0
#export VERSIONDATE=20221202
#export VERSION=2.6.0
#export VERSIONDATE=20230105
#export VERSION=2.7.0
#export VERSIONDATE=20230202
export VERSION=2.8.0
export VERSIONDATE=20230302
wl-showstatus --package-version
export DEPENDENCIES=zlib,openssl,c-ares,protobuf,crc32c,nlohmann-json,abseil,grpc,libcurl,re2
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/googleapis/google-cloud-cpp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/googleapis/google-cloud-cpp/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix unresolved _dupenv_s in google/cloud/internal/getenv.cc (version >= 1.31.1 <= 1.42.0)
#patch -ulbf google/cloud/internal/getenv.cc << EOF
#@@ -30,3 +30,3 @@
# absl::optional<std::string> GetEnv(char const* variable) {
#-#if _WIN32
#+#if defined(_WIN32) && !defined(__MINGW32__)
#   // On Windows, std::getenv() is not thread-safe. It returns a pointer that
#EOF
## fix ambiguous ExtractPageToken() in google/cloud/internal/pagination_range.h (version >= 1.31.1 <= 1.42.0)
#patch -ulbf google/cloud/internal/pagination_range.h << EOF
#@@ -121,4 +121,5 @@
#     return std::move(*u.mutable_next_page_token());
#   }
#+/*
#   template <typename U>
#   static constexpr auto ExtractPageToken(U& u)
#@@ -126,4 +127,5 @@
#     return std::move(u.next_page_token);
#   }
#+*/
#
#   Request request_;
#EOF
# don't abort on warnings (version >= 2.0.0)
sed -i.bak -e "s/^include(EnableWerror)/#&/" external/googleapis/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DGOOGLE_CLOUD_CPP_ENABLE_CCACHE:BOOL=OFF -DGOOGLE_CLOUD_CPP_ENABLE_GENERATOR:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DGOOGLE_CLOUD_CPP_ENABLE:STRING="bigtable;bigquery;iam;pubsub;spanner;storage" -DGOOGLE_CLOUD_CPP_ENABLE_CCACHE:BOOL=OFF -DGOOGLE_CLOUD_CPP_ENABLE_GENERATOR:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 #-DGOOGLE_CLOUD_CPP_ENABLE:STRING="bigtable;bigquery;iam;logging;pubsub;spanner;storage"
 # don't force older C++ standard and don't treat warnings as errors
 sed -i.bak -e "s/-std=gnu++11//; s/-Werror//" build_static/build.ninja &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DGOOGLE_CLOUD_CPP_ENABLE_CCACHE:BOOL=OFF -DGOOGLE_CLOUD_CPP_ENABLE_GENERATOR:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DGOOGLE_CLOUD_CPP_ENABLE:STRING="bigtable;bigquery;iam;pubsub;spanner;storage" -DGOOGLE_CLOUD_CPP_ENABLE_CCACHE:BOOL=OFF -DGOOGLE_CLOUD_CPP_ENABLE_GENERATOR:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 # don't force older C++ standard and don't treat warnings as errors
 sed -i.bak -e "s/-std=gnu++11//; s/-Werror//" build_shared/build.ninja &&
 wl-showstatus build &&
 ( ninja -Cbuild_static || (
  # fix already defined OPTIONAL
  sed -i.bak -e "s/^\s*\(OPTIONAL\) =/#undef \1\n&/" build_static/external/googleapis/google/api/field_behavior.pb.h &&
  ninja -Cbuild_static
 ) || ninja -j1 -Cbuild_static ) &&
 wl-showstatus build &&
 ( ninja -Cbuild_shared || (
  # fix already defined OPTIONAL
  sed -i.bak -e "s/^\s*\(OPTIONAL\) =/#undef \1\n&/" build_shared/external/googleapis/google/api/field_behavior.pb.h &&
  ninja -Cbuild_shared
 ) || ninja -j1 -Cbuild_shared ) &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: shared CURL linkage for shared build



