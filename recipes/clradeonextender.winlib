export NAME="CLRadeonExtender"
export STATUS=
export URL=http://clrx.nativeboinc.org/
export BASENAME=clradeonextender
export DESCRIPTION="Currently, this project is low-level development tools (assembler, disassembler) for Radeon GPU's. Only Radeon with GCN architecture will be supported."
export CATEGORY=
export TYPE=library
export VERSION=0.1.9
export VERSIONDATE=20201206
wl-showstatus --package-version
export DEPENDENCIES=zlib,libpng,pthreads
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
#export LICENSEFILE=LICENSE
export LICENSETYPE=
#export DOWNLOADURL="https://repo1.mydevil.net/svn/pub/matszpk/clrx/CLRadeonExtender/tags/"
export DOWNLOADURL="http://clrx.nativeboinc.org/wiki2/wiki/wiki/ClrxDownloads"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://clrx.nativeboinc.org/downloads/CLRadeonExtender-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/CLRadeonExtender-$VERSION.tar.bz2
cd CLRadeonExtender-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_EXE:BOOL=OFF -DBUILD_32BIT:BOOL=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "OFF"; else echo "ON"; fi) -DBUILD_SAMPLES:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf CLRadeonExtender-$VERSION



