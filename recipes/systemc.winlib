export NAME="SystemC"
export STATUS=
export URL=https://systemc.org/about/systemc/overview/
export BASENAME=systemc
export DESCRIPTION="SystemC - The language for System-level design, modeling and verification"
export CATEGORY=
export TYPE=library
#export VERSION=2.3.4_pub_rev_20190614
#export VERSIONDATE=20220824
export VERSION=2.3.4
export VERSIONDATE=20221202
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/accellera-official/systemc/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/accellera-official/systemc/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/sysc/packages/qt/md/i386.s (version >= 2.3.4_pub_rev_20190614)
patch -ulbf src/sysc/packages/qt/md/i386.s << EOF
@@ -121,3 +121,2 @@
 #if defined(__linux__) && defined(__ELF__)
-.section .note.GNU-stack,"",%progbits
 #endif
EOF
# fix src/sysc/packages/qt/md/iX86_64.s (version >= 2.3.4_pub_rev_20190614)
patch -ulbf src/sysc/packages/qt/md/iX86_64.s << EOF
@@ -76,3 +76,2 @@
 #if defined(__linux__) && defined(__ELF__)
-.section .note.GNU-stack,"",%progbits
 #endif
EOF
# fix missing docs/tlm/ChangeLog
touch docs/tlm/ChangeLog
## also allow building shared library in CMakeLists.txt (version >= 2.3.4_pub_rev_20190614)
#patch -ulbf CMakeLists.txt << EOF
#@@ -286,6 +286,2 @@
# endif (NOT (WIN32 OR CYGWIN))
#-if (BUILD_SHARED_LIBS AND (WIN32 OR CYGWIN))
#-  message (WARNING "The compilation of SystemC as a DLL on Windows is currently not supported!")
#-  set (BUILD_SHARED_LIBS CACHE BOOL "Build shared libraries." OFF FORCE)
#-endif (BUILD_SHARED_LIBS AND (WIN32 OR CYGWIN))
#
#EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_SOURCE_DOCUMENTATION:BOOL=OFF -DCMAKE_CXX_STANDARD:STRING="98" -DCMAKE_CXX_FLAGS:STRING="-DSC_CPLUSPLUS=199701L" -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_SOURCE_DOCUMENTATION:BOOL=OFF -DCMAKE_CXX_STANDARD:STRING="98" -S. -Bbuild_static &&
 #wl-showstatus configure &&
 ##cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_SOURCE_DOCUMENTATION:BOOL=OFF -DCMAKE_CXX_STANDARD:STRING="98" -DCMAKE_CXX_FLAGS:STRING="-DSC_CPLUSPLUS=199701L" -S. -Bbuild_shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_SOURCE_DOCUMENTATION:BOOL=OFF -DCMAKE_CXX_STANDARD:STRING="98" -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: also build shared library



