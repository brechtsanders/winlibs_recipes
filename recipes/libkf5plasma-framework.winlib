export NAME="Plasma"
export STATUS=
export URL=https://api.kde.org/frameworks/plasma-framework/html/index.html
export BASENAME=libkf5plasma-framework
export DESCRIPTION="Plugin based UI runtime used to write primary user interfaces (KDE Frameworks 5 (KDF5) Tier 3 framework)"
export CATEGORY=framework
export TYPE=library
#export VERSION=5.64.0
#export VERSIONDATE=20191111
#export VERSION=5.65.0
#export VERSIONDATE=20191214
#export VERSION=5.66.0
#export VERSIONDATE=20200111
#export VERSION=5.67.0
#export VERSIONDATE=20200209
#export VERSION=5.68.0
#export VERSIONDATE=20200315
#export VERSION=5.70.0
#export VERSIONDATE=20200509
#export VERSION=5.70.1
#export VERSIONDATE=20200515
#export VERSION=5.71.0
#export VERSIONDATE=20200613
#export VERSION=5.72.0
#export VERSIONDATE=20200711
####Target "KF5Plasma" links to target "Qt5::TextToSpeech" but the target was not found.  Perhaps a find_package() call is missing for an IMPORTED target, or an ALIAS target is missing?
#export VERSION=5.73.0
#export VERSIONDATE=20200808
#export VERSION=5.74.0
#export VERSIONDATE=20200912
#export VERSION=5.75.0
#export VERSIONDATE=20201010
#export VERSION=5.76.0
#export VERSIONDATE=20201114
#export VERSION=5.77.0
#export VERSIONDATE=20201212
#export VERSION=5.78.0
#export VERSIONDATE=20210109
#export VERSION=5.79.0
#export VERSIONDATE=20210213
#export VERSION=5.80.0
#export VERSIONDATE=20210313
#export VERSION=5.81.0
#export VERSIONDATE=20210410
#export VERSION=5.82.0
#export VERSIONDATE=20210508
#export VERSION=5.83.0
#export VERSIONDATE=20210613
#export VERSION=5.84.0
#export VERSIONDATE=20210710
#export VERSION=5.85.0
#export VERSIONDATE=20210814
#export VERSION=5.86.0
#export VERSIONDATE=20210911
#export VERSION=5.87.0
#export VERSIONDATE=20211009
#export VERSION=5.88.0
#export VERSIONDATE=20211113
#export VERSION=5.89.0
#export VERSIONDATE=20211212
#export VERSION=5.90.0
#export VERSIONDATE=20220108
#export VERSION=5.91.0
#export VERSIONDATE=20220214
#export VERSION=5.92.0
#export VERSIONDATE=20220313
#export VERSION=5.93.0
#export VERSIONDATE=20220410
#export VERSION=5.94.0
#export VERSIONDATE=20220514
#export VERSION=5.95.0
#export VERSIONDATE=20220613
#export VERSION=5.96.0
#export VERSIONDATE=20220718
export VERSION=5.97.0
export VERSIONDATE=20220814
wl-showstatus --package-version
export DEPENDANCIES=qt,libkf5activities,libkf5archive,libkf5auth,libkf5bookmarks,libkf5codecs,libkf5completion,libkf5configwidgets,libkf5config,libkf5coreaddons,libkf5dbusaddons,libkf5declarative,libkf5guiaddons,libkf5i18n,libkf5iconthemes,libkf5itemviews,libkf5jobwidgets,libkf5kio,libkf5kirigami2,libkf5notifications,libkf5package,libkf5service,libkf5solid,libkf5widgetsaddons,libkf5windowsystem,libkf5xmlgui
export OPTIONALDEPENDANCIES=libkf5doctools,libkf5wayland
export BUILDDEPENDANCIES=cmake,extra-cmake-modules
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://cgit.kde.org/plasma-framework.git/refs/ ?h=v"
#export DOWNLOADURL="https://kde.org/announcements/ kde-frameworks- .php"
export DOWNLOADURL="https://download.kde.org/stable/frameworks/ plasma-framework-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://download.kde.org/stable/frameworks/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/plasma-framework-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/plasma-framework-$VERSION.tar.xz
cd plasma-framework-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -D7z_EXECUTABLE="/C/Program Files/7-Zip/7z.exe" -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -D7z_EXECUTABLE="/C/Program Files/7-Zip/7z.exe" -D_tar_executable:FILEPATH=false -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 # fix multiple definition errors
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=\s*/&-Wl,--allow-multiple-definition /" build_static/build.ninja &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -D7z_EXECUTABLE="/C/Program Files/7-Zip/7z.exe" -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -D7z_EXECUTABLE="/C/Program Files/7-Zip/7z.exe" -D_tar_executable:FILEPATH=false -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 # fix Windows path issue (version >= 5.78.0)
 sed -i.bak2 -e "s?\(tar\.exe -c \)\([A-Za-z]\):/\(.* -f \)\([A-Za-z]\):/?\1/\2/\3/\4/?" build_*/build.ninja &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf plasma-framework-$VERSION
####PATH=$PATH:$MINGWPREFIX/qt/bin plasmapkg2.exe
####Require 7-Zip to be installed in C:\Program Files\7-Zip




