export NAME="Libinfinity"
export STATUS=
export URL=http://gobby.0x539.de/trac/wiki/Infinote/Libinfinity
export BASENAME=libinfinity
export DESCRIPTION="libinfinity is an implementation of the Infinote protocol written in GObject-based C."
export CATEGORY=communication
export TYPE=library
#export VERSION=0.5.1
#export VERSIONDATE=20110826
#export VERSION=0.5.2
#export VERSIONDATE=20120325
#export VERSION=0.5.3
#export VERSIONDATE=20121022
#export VERSION=0.5.4
#export VERSIONDATE=20130720
#export VERSION=0.5.5
#export VERSIONDATE=20140113
#export VERSION=0.6.0
#export VERSIONDATE=20140824
#export VERSION=0.6.1
#export VERSIONDATE=20140825
####libinfinity/common/inf-name-resolver.c:457:27: error: 'DnsFreeRecordListDeep' undeclared (first use in this function)
#export VERSION=0.6.2
#export VERSIONDATE=20140913
#export VERSION=0.6.3
#export VERSIONDATE=20141010
#export VERSION=0.6.4
#export VERSIONDATE=20141019
#export VERSION=0.6.5
#export VERSIONDATE=20150118
#export VERSION=0.6.6
#export VERSIONDATE=20150513
#export VERSION=0.6.7
#export VERSIONDATE=20151014
#export VERSION=0.6.8
#export VERSIONDATE=20170228
#export VERSION=0.7.0
#export VERSIONDATE=20170109
#export VERSION=0.7.1
#export VERSIONDATE=20170228
####libinfinity/common/inf-keepalive.c:46:22: fatal error: in6addr.h: No such file or directory
####test/inf-test-traffic-replay.c:198: undefined reference to `strptime'
export VERSION=0.7.2
export VERSIONDATE=20201126
####Couldn't find include 'InfGnutls-3.0.gir'
wl-showstatus --package-version
#export DEPENDANCIES=glib2,gtk3,libgpg-error,libiconv,pango,cairo,gnutls,libgsasl,libxml2
export DEPENDANCIES=glib2,gtk3,libgpg-error,libiconv,pango,cairo,gnutls,libgsasl,libxml2,gobject-introspection
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://releases.0x539.de/libinfinity/"
#export DOWNLOADURL="https://github.com/gobby/libinfinity/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://releases.0x539.de/libinfinity/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/gobby/libinfinity/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/gobby/libinfinity/releases/download/$VERSION/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL="https://github.com/gobby/libinfinity/releases/download/$VERSION/$BASENAME-$VERSION.tar.gz https://github.com/gobby/libinfinity/archive/$VERSION.tar.gz"
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
# unzip both archives to fix missing .gir files (version >= 0.7.2)
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix direct glib includes in libinfinity/common/inf-xml-util.h (version <= 0.5.5)
#patch -ulbf libinfinity/common/inf-xml-util.h << EOF
#--- libinfinity/common/inf-xml-util.h  2010-11-23 20:37:32 +0100
#+++ libinfinity/common/inf-xml-util.h  2012-01-09 13:54:30 +0100
#@@ -22,4 +22,3 @@
#
#-#include <glib/gtypes.h>
#-#include <glib/gerror.h>
#+#include <glib.h>
# #include <libxml/tree.h>
#EOF
## fix direct glib includes in infinoted/infinoted-creds.h (version <= 0.5.5)
#patch -ulbf infinoted/infinoted-creds.h << EOF
#--- infinoted/infinoted-creds.h  2010-11-23 20:37:32 +0100
#+++ infinoted/infinoted-creds.h  2012-01-09 18:01:46 +0100
#@@ -24,4 +24,3 @@
#
#-#include <glib/gtypes.h>
#-#include <glib/gerror.h>
#+#include <glib.h>
#
#EOF
## fix direct glib includes in infinoted/infinoted-util.h (version <= 0.5.5)
#patch -ulbf infinoted/infinoted-util.h << EOF
#--- infinoted/infinoted-util.h  2010-11-23 20:37:32 +0100
#+++ infinoted/infinoted-util.h  2012-01-09 18:03:32 +0100
#@@ -24,4 +24,3 @@
#
#-#include <glib/gtypes.h>
#-#include <glib/gerror.h>
#+#include <glib.h>
#
#EOF
# fix missing wspiapi.h in libinfinity/common/inf-name-resolver.c (version >= 0.6.0)
mv libinfinity/common/inf-name-resolver.c libinfinity/common/inf-name-resolver.c.bak
#echo "#include <winsock2.h>" > libinfinity/common/inf-name-resolver.c
cat > libinfinity/common/inf-name-resolver.c << EOF
#define _WIN32_WINNT 0x0501
#include <ws2tcpip.h>
EOF
sed -e "s/wspiapi\.h/ws2spi.h/" libinfinity/common/inf-name-resolver.c.bak >> libinfinity/common/inf-name-resolver.c
## fix missing DnsFreeRecordListDeep in libinfinity/common/inf-name-resolver.c (version >= 0.6.1)
#mv libinfinity/common/inf-name-resolver.c libinfinity/common/inf-name-resolver.c.bak2
#sed -e "s/DnsFreeRecordListDeep/DnsFreeRecordList/" libinfinity/common/inf-name-resolver.c.bak2 > libinfinity/common/inf-name-resolver.c
## fix missing in6addr.h in libinfinity/common/inf-keepalive.c (version = 0.7.0)
#mv libinfinity/common/inf-keepalive.c libinfinity/common/inf-keepalive.c.bak &&
#sed -e "s?^.*\(in6addr\|mstcpip\)\.h?//&?" libinfinity/common/inf-keepalive.c.bak > libinfinity/common/inf-keepalive.c
##sed -e "s?^\(#\s*include \)<in6addr\.h>?\1<winsock2.h>?; s?^\(#\s*include \)<mstcpip\.h>?\1<ws2tcpip.h>?" libinfinity/common/inf-keepalive.c.bak > libinfinity/common/inf-keepalive.c
## fix libinfinity/common/inf-keepalive.c (version >= 0.7.1)
#patch -ulbf libinfinity/common/inf-keepalive.c << EOF
#--- libinfinity/common/inf-keepalive.c  2017-01-08 05:51:22 +0100
#+++ libinfinity/common/inf-keepalive.c  2017-02-28 18:35:11 +0100
#@@ -45,4 +45,3 @@
# #if defined(G_OS_WIN32)
#-# include <in6addr.h>
#-# include <mstcpip.h>
#+# include <winsock2.h>
# #elif defined(__linux__)
#@@ -126,43 +125,4 @@
# {
#-  InfKeepalive resolved;
#-  struct tcp_keepalive keep;
#-  DWORD bytes_returned;
#-  int result;
#-  int code;
#-
#-  /* Nothing to do */
#-  if(keepalive->mask == 0)
#-    return TRUE;
#-
#-  /* If we change something, we need to set all values... we cannot set only
#-   * the time but not the interval, for example. */
#-  /* Resolve defaults */
#-  resolved = *keepalive;
#-  if(~resolved.mask & INF_KEEPALIVE_ALL != 0)
#-    inf_keepalive_load_default(&resolved, ~resolved.mask & INF_KEEPALIVE_ALL);
#-
#-  keep.onoff = resolved.enabled;
#-  keep.keepalivetime = resolved.time * 1000;
#-  keep.keepaliveinterval = resolved.interval * 1000;
#-
#-  result = WSAIoctl(
#-    *socket,
#-    SIO_KEEPALIVE_VALS,
#-    &keep,
#-    sizeof(keep),
#-    NULL,
#-    0,
#-    &bytes_returned,
#-    NULL,
#-    NULL
#-  );
#-
#-  if(result != 0)
#-  {
#-    code = WSAGetLastError();
#-    inf_native_socket_make_error(code, error);
#-    return FALSE;
#-  }
#-
#-  return TRUE;
#+  inf_native_socket_make_error(WSAEOPNOTSUPP, error);
#+  return FALSE;
# }
#EOF
# fix missing getline/strptime in test/inf-test-traffic-replay.c (version >= 0.7.0)
mv test/inf-test-traffic-replay.c test/inf-test-traffic-replay.c.bak
cat > test/inf-test-traffic-replay.c << EOF
#include <stdio.h>
#include <stdlib.h>
#define GETLINE_BUFLEN 128
size_t getline(char** lineptr, size_t* n, FILE* stream)
{
  char* bufptr;
  char* p;
  size_t size;
  int c;
  if (!lineptr || !n || !stream)
    return -1;
  bufptr = *lineptr;
  size = *n;
  c = fgetc(stream);
  if (c == EOF)
    return -1;
  if (!bufptr) {
    if ((bufptr = (char*)malloc(GETLINE_BUFLEN)) == NULL)
      return -1;
    size = GETLINE_BUFLEN;
  }
  p = bufptr;
  while (c != EOF) {
    if ((p - bufptr) > (size - 1)) {
      size = size + GETLINE_BUFLEN;
      if ((bufptr = (char*)realloc(bufptr, size)) == NULL)
        return -1;
    }
    *p++ = c;
    if (c == '\n') {
      break;
    }
    c = fgetc(stream);
  }
  *p++ = 0;
  *lineptr = bufptr;
  *n = size;
  return p - bufptr - 1;
}
#define strptime(s,f,t) NULL
EOF
cat test/inf-test-traffic-replay.c.bak >> test/inf-test-traffic-replay.c
# fix MSVC issue
mkdir -p winfix
cp -rf $PYDIR/lib/distutils winfix/
patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
@@ -85,3 +85,3 @@
         else:
-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
+            return None

EOF
#touch gtk-doc.make
#sed -i.bak -e "s/^EXTRA_DIST\s*+=\s*$//" $(grep -l "^EXTRA_DIST\s*+=\s*$" $(find -name Makefile.am))
#autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
# don't enable PAM support (version >= 0.7.1)
sed -i.bak -e "s/\(use_pam=\)yes/\1no/; s/#define \(LIBINFINITY_HAVE_PAM\) 1/#undef \1/" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gtk3 &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gtk3 --disable-introspection PKG_CONFIG=$(which pkg-config.exe) &&
 PATH=$PATH:$PYDIR ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gtk3 --enable-introspection PKG_CONFIG=$(which pkg-config.exe) &&
 #wl-showstatus build-install &&
 #make install-strip &&
 #PATH=$PYDIR:$PATH make install-strip &&
 # fix libinfinity/Infinity-0.7.gir (version >= 0.7.1)
 PATH=$PYDIR:$PATH PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib:${PYTHONPATH:+:$PYTHONPATH} make -Clibinfinity Infinity-0.7.gir &&
 sed -i.bak -e "s/\(<type \)\(c:type=\"SOCKET\"\/>\)/\1name=\"SOCKET\" \2/" libinfinity/Infinity-0.7.gir &&
 PATH=$PYDIR:$PATH PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib:${PYTHONPATH:+:$PYTHONPATH} make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



