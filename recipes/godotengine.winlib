export NAME="Godot Engine"
export STATUS=
export URL=https://godotengine.org/
export BASENAME=godotengine
export DESCRIPTION="Godot Engine - Godot provides a huge set of common tools, so you can just focus on making your game without reinventing the wheel."
export CATEGORY=games
export TYPE=library
#export VERSION=3.2.3
#export VERSIONDATE=20210329
#export VERSION=3.4.3
#export VERSIONDATE=20220311
#export VERSION=3.5
#export VERSIONDATE=20220805
#export VERSION=3.5.1
#export VERSIONDATE=20220929
#export VERSION=3.5.2
#export VERSIONDATE=20230307
#export VERSION=4.0
#export VERSIONDATE=20230301
#export VERSION=4.0.1
#export VERSIONDATE=20230321
#export VERSION=4.0.2
#export VERSIONDATE=20230404
#export VERSION=4.0.3
#export VERSIONDATE=20230519
export VERSION=4.1
export VERSIONDATE=20230706
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=scons
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=MIT
export DOWNLOADURL="https://downloads.tuxfamily.org/godotengine/ godot- -stable.tar.xz"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://downloads.tuxfamily.org/godotengine/$VERSION/godot-$VERSION-stable.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/godot-$VERSION-stable.tar.xz
cd godot-$VERSION-stable
#cat > custom_mingw.py << EOF
#optimize = "size"
#module_mono_enabled = "no"
#use_mingw = "yes"
#use_llvm = "no"
#use_lto = "yes"
##builtin_bullet = "no"
#builtin_certs = "no"
##builtin_enet = "no"
##builtin_freetype = "no"
##builtin_libogg = "no"
##builtin_libpng = "no"
##builtin_libtheora = "no"
##builtin_libvorbis = "no"
##builtin_libvpx = "no"
##builtin_libwebp = "no"
##builtin_wslay = "no"
##builtin_mbedtls = "no"
##builtin_miniupnpc = "no"
##builtin_opus = "no"
##builtin_pcre2 = "no"
##builtin_pcre2_with_jit = "no"
##builtin_recast = "no"
##builtin_squish = "no"
##builtin_xatlas = "no"
##builtin_zlib = "no"
##builtin_zstd = "no"
#EOF
# fix missing mbedtls/config.h (version >= 4.0)
mkdir -p winfix/mbedtls
touch winfix/mbedtls/config.h
wl-showstatus configure-build &&
 #PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $MINGWPREFIX/python/Scripts/scons-script.py target=release_debug profile=custom_mingw.py platform=windows bits=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi) tools=yes CXXFLAGS="-I$MINGWPREFIX/include/freetype2" &&
 #PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $MINGWPREFIX/python/Scripts/scons-script.py target=release_debug production=yes optimize=size platform=windows use_mingw=yes use_llvm=no module_mono_enabled=no arch=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "x64"; else echo "x86"; fi) bits=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi) tools=yes builtin_bullet=yes builtin_certs=no builtin_embree=no builtin_enet=no builtin_freetype=yes builtin_libogg=no builtin_libpng=yes builtin_libtheora=no builtin_libvorbis=no builtin_libvpx=no builtin_libwebp=no builtin_wslay=no builtin_mbedtls=no builtin_miniupnpc=yes builtin_opus=no builtin_pcre2=no builtin_pcre2_with_jit=no builtin_recast=yes builtin_squish=no builtin_xatlas=no builtin_zlib=no builtin_zstd=no CXXFLAGS="-I$MINGWPREFIX/include/freetype2" &&
 PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $MINGWPREFIX/python/Scripts/scons-script.py target=template_release profile=custom_mingw.py platform=windows bits=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi) tools=yes use_mingw=yes use_llvm=$(if ${CC:-gcc} --version|grep -q clang; then echo "yes"; else echo "no"; fi) CXXFLAGS="-I$MINGWPREFIX/include/freetype2 -I$PWD/winfix" &&
 #PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$INSTALLPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $MINGWPREFIX/python/Scripts/scons-script.py target=template_release profile=custom_mingw.py platform=windows bits=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "64"; else echo "32"; fi) tools=yes use_mingw=yes use_llvm=$(if ${CC:-gcc} --version|grep -q clang; then echo "yes"; else echo "no"; fi) module_mono_enabled=no builtin_bullet=yes builtin_certs=no builtin_embree=yes builtin_enet=no builtin_freetype=yes builtin_libogg=no builtin_libpng=yes builtin_libtheora=no builtin_libvorbis=no builtin_libvpx=no builtin_libwebp=no builtin_wslay=no builtin_mbedtls=yes builtin_miniupnpc=yes builtin_opus=no builtin_pcre2=no builtin_pcre2_with_jit=no builtin_recast=yes builtin_squish=no builtin_xatlas=no builtin_zlib=yes builtin_zstd=yes CXXFLAGS="-I$MINGWPREFIX/include/freetype2 -I$PWD/winfix" &&
 #install PREFIX=$INSTALLPREFIX/share/godot 
 #-j$NUMBER_OF_PROCESSORS 
 strip bin/*.exe &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin &&
 cp -f bin/*.exe $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf godot-$VERSION-stable
####godot.windows.opt.tools.64.exe



