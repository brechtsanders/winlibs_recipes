export NAME="libupnpp"
export STATUS=
export URL=http://www.lesbonscomptes.com/upmpdcli/downloads.html
export BASENAME=libupnpp
export DESCRIPTION="a C++ wrapper for libupnp"
export CATEGORY=audio
export TYPE=library
#export VERSION=0.14.1
#export VERSIONDATE=20160606
#export VERSION=0.15.0
#export VERSIONDATE=20160910
#export VERSION=0.15.1
#export VERSIONDATE=20161003
#export VERSION=0.15.2
#export VERSIONDATE=20170519
#export VERSION=0.15.3
#export VERSIONDATE=20170621
####<command-line>:0:9: error: expected unqualified-id before string constant
#export VERSION=0.16.0
#export VERSIONDATE=20170919
####libupnpp/device/device.cxx:204: undefined reference to `__imp_UpnpUnRegisterRootDevice'
#export VERSION=0.16.1
#export VERSIONDATE=20171129
####configure: error: "OS mingw32 is not supported"
#export VERSION=0.16.2
#export VERSIONDATE=20181215
#export VERSION=0.17.0
#export VERSIONDATE=20180926
#export VERSION=0.17.1
#export VERSIONDATE=20190328
#export VERSION=0.17.2
#export VERSIONDATE=20200207
#export VERSION=0.18.0
#export VERSIONDATE=20200207
#wl-showstatus --package-version
#export DEPENDANCIES=libupnp,expat,poco,libcurl,pthreads
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export VERSION=0.19.0
#export VERSIONDATE=20200508
#export VERSION=0.19.1
#export VERSIONDATE=20200509
####libupnpp/control/service.cxx:178:38: error: cannot convert 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}' to 'const char*' for argument '3' to 'int UpnpSendAction(UpnpClient_Handle, const char*, const char*, const char*, IXML_Document*, IXML_Document**)'
export VERSION=0.19.2
export VERSIONDATE=20200622
#export VERSION=0.19.3
#export VERSIONDATE=20200705
#####libupnpp/upnpplib.cxx:35:10: fatal error: upnp/netif.h: No such file or directory
#export VERSION=0.19.4
#export VERSIONDATE=20200903
#####configure: error: Vdir cookie test compiles all failed ! Check config.log
#export VERSION=0.20.0
#export VERSIONDATE=20201115
#export VERSION=0.20.1
#export VERSIONDATE=20201127
#export VERSION=0.20.2
#export VERSIONDATE=20201231
#export VERSION=0.21.0
#export VERSIONDATE=20210313
wl-showstatus --package-version
export DEPENDANCIES=libnpupnp,expat,poco,libcurl,pthreads
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://www.lesbonscomptes.com/upmpdcli/downloads/"
#export DOWNLOADURL="https://github.com/medoc92/libupnpp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://www.lesbonscomptes.com/upmpdcli/downloads/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
#patch -ulbf libupnpp/log.h << EOF
#--- libupnpp/log.h  2016-07-14 10:02:38.000000000 +0200
#+++ libupnpp/log.h  2016-09-10 11:11:27.780126000 +0200
#@@ -24,3 +24,3 @@
#
#-#ifndef LOGGER_THREADSAFE
#+#if !defined(LOGGER_THREADSAFE) && !defined(__MINGW32__)
# #define LOGGER_THREADSAFE 1
#EOF
## fix including windows.h before winsock2.h in libupnpp/control/avtransport.hxx (version >= 0.15.3)
#mv libupnpp/control/avtransport.hxx libupnpp/control/avtransport.hxx.bak &&
#echo "#include <winsock2.h>" > libupnpp/control/avtransport.hxx &&
#sed -e "s/^\s*struct \(DeviceCapabilities\) /#undef \1\n&/" libupnpp/control/avtransport.hxx.bak >> libupnpp/control/avtransport.hxx
## fix missing localtime_r in libupnpp/smallut.cpp (version <= 0.17.0 <= 0.17.2)
#mv libupnpp/smallut.cpp libupnpp/smallut.cpp.bak &&
#echo '#define localtime_r(clock,result) (*(result) = *localtime((clock)), (result))' > libupnpp/smallut.cpp &&
#cat libupnpp/smallut.cpp.bak >> libupnpp/smallut.cpp
## fix missing UpnpUnRegisterRootDevice in libupnpp/device/device.cxx (version <= 0.17.0)
#mv libupnpp/device/device.cxx libupnpp/device/device.cxx.bak &&
#echo "#include <upnp/upnp.h>" > libupnpp/device/device.cxx
#cat libupnpp/device/device.cxx.bak >> libupnpp/device/device.cxx
## fix missing UpnpUnRegisterRootDevice in libupnpp/device/device.cxx (version = 0.17.1)
#patch -ulbf libupnpp/device/device.cxx << EOF
#@@ -18,2 +18,3 @@
# #include "libupnpp/config.h"
#+#include <upnp/upnp.h>
#
#EOF
## don't require special Windows config file in libupnpp/conf_post.h (version = 0.17.1)
#patch -ulbf libupnpp/conf_post.h << EOF
#@@ -23,5 +22,0 @@
#-#ifdef _WIN32
#-#ifndef CONFIG_WINDOWS_INCLUDED
#-#error Need to copy the Windows config file. Also adjust the version in there !
#-#endif
#-#endif
#EOF
# fix missing files
mkdir -p winfix/netinet
echo "#include <winsock2.h>" > winfix/netinet/in.h
#touch winfix/safeunistd.h
# fix libupnpp/netif.cpp (version >= 0.19.0)
patch -ulbf libupnpp/netif.cpp << EOF
@@ -501,3 +501,3 @@
                char tmpnm[256];
-               wcstombs(tmpIfName, adapts_item->FriendlyName, sizeof(tmpnm));
+               wcstombs(tmpnm, adapts_item->FriendlyName, sizeof(tmpnm));
                ifit->m->friendlyname = tmpnm;
EOF
# fix missing inet_pton.h (version >= 0.19.0)
cat > inet_pton.h << EOF
#if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600
#undef _WIN32_WINNT
#define _WIN32_WINNT 0x0600
#include <winsock2.h>
#include <ws2tcpip.h>
#define HAVE_INET_PTON 1
#define HAVE_INET_NTOP 1
#endif
EOF
## fix missing localtime_r in libupnpp/log.cpp (version >= 0.20.0)
#mv libupnpp/log.cpp libupnpp/log.cpp.bak &&
#echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > libupnpp/log.cpp &&
#cat libupnpp/log.cpp.bak >> libupnpp/log.cpp
## fix missing localtime_r in libupnpp/smallut.cpp (version >= 0.20.1)
#mv libupnpp/smallut.cpp libupnpp/smallut.cpp.bak &&
#echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > libupnpp/smallut.cpp &&
#cat libupnpp/smallut.cpp.bak >> libupnpp/smallut.cpp
# avoid quote issues with DATADIR/CONFIGDIR when defined via -D flag and avoid -Wl,-zdefs
#sed -i.bak -e 's?\(DIR=\)\\"\([^"]*\)\\"?\1""?g; s/-Wl,-zdefs//' Makefile.in
#sed -i.bak -e 's?\(DIR=\)\\"\([^"]*\)\\"?\1""?g; s/-Wl,-zdefs//' Makefile.am
#sed -i.bak -e 's?\(-D[^ ]*=\)\(\\"[^\\\\]*\\"\)?\1"\2"?g' Makefile.am
sed -i.bak -e 's?\(-D[^ ]*=\)\(\\"[^\\\\]*\\"\)?\1"\2"?g' Makefile.in
## fix exporting symbols when building DLL (version >= 0.20.2)
#sed -i.bak2 -e 's?libupnpp_la_CXXFLAGS\s*=\s*?&-DUPNPP_DLL_EXPORTS ?' Makefile.in
wl-showstatus configure &&
 #mkdir -p m4 &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 # fix unsupported OS (version >= 0.17.0)
 sed -i.bak -e "s/|uclinux*/&|mingw*|msys*/" configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --disable-shared CFLAGS="-DWIN32" CXXFLAGS="-DWIN32" LDFLAGS="-Wl,--as-needed -lws2_32 -liphlpapi" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared CFLAGS="-DWIN32" CXXFLAGS="-DWIN32" LDFLAGS="-Wl,--enable-auto-import -Wl,--as-needed -lws2_32 -liphlpapi" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared CFLAGS="-DWIN32" CXXFLAGS="-DWIN32" LDFLAGS="-Wl,--as-needed -lws2_32 -liphlpapi" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared CFLAGS="-DWIN32" CXXFLAGS="-DWIN32 -I$MINGWPREFIX/include/Poco" LDFLAGS="-Wl,--as-needed -lws2_32 -liphlpapi" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared CFLAGS="-DWIN32 -DCONFIG_WINDOWS_INCLUDED -I$(pwd)/winfix" CXXFLAGS="-DWIN32 -DCONFIG_WINDOWS_INCLUDED -I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32 -liphlpapi" &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix exporting symbols in DLL
 #echo "#define UPNPP_DLL_EXPORTS" >> libupnpp/config.h &&
 # fix missing localtime_r
 echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" >> libupnpp/config.h &&
 # avoid quotes issues in -D compile flags
 sed -i.bak -e "s/-D[^ ]*DIR=[^ ]*//g; s/-Wl,-zdefs//" Makefile &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 ( make install-strip || make install-strip CXX="${CXX:-g++} -fpermissive" ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#make libupnpputil.a
#g++ -shared -s -mwindows -o libupnpputil.dll libupnpputil.a -Wl,--out-implib,libupnpputil.dll.a -Wl,--export-all-symbols
