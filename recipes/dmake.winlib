export NAME="dmake"
export STATUS=
export URL=http://www.openoffice.org/tools/dmake/
#export URL=https://github.com/mohawk2/dmake
export BASENAME=dmake
export DESCRIPTION="Dmake is a make utility similar to GNU make or the Workshop dmake."
export CATEGORY=
export TYPE=library
#export VERSION=4.11
#export VERSIONDATE=20120521
export VERSION=4.12.2.2
export VERSIONDATE=20171207
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.openoffice.org/tools/dmake/ dmake_"
#export DOWNLOADURL="http://www.openoffice.org/tools/dmake/ dmake_ .html"
#export DOWNLOADURL="https://github.com/mohawk2/dmake/releases DMAKE_"
#export DOWNLOADURL="https://github.com/mohawk2/dmake/tags DMAKE_"
export DOWNLOADURL="https://github.com/jimjag/dmake/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://tools.openoffice.org/dmake/dmake_$VERSION.zip
#export DOWNLOADSOURCEURL=https://github.com/mohawk2/dmake/archive/DMAKE_$(echo $VERSION|tr . _).tar.gz
export DOWNLOADSOURCEURL=https://github.com/mohawk2/dmake/archive/refs/tags/DMAKE_$(echo $VERSION|tr . _).tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#unzip -oq $TARBALLDIR/$BASENAME/dmake_$VERSION.zip
tar xz --force-local -f $TARBALLDIR/$BASENAME/DMAKE_$(echo $VERSION|tr . _).tar.gz
#cd dmake
cd dmake-DMAKE_$(echo $VERSION|tr . _)
# fix platform detection in configure
patch -ulbf configure << EOF
--- configure  2007-10-14 01:39:00 +0200
+++ configure  2012-05-21 22:02:32 +0200
@@ -4051,3 +4051,3 @@
          ;;
-       "MINGW")
+       MINGW*|MSYS*)
          OS_VERSION=mingw
EOF
# support ARM64 in config.sub
sed -i.bak -e "s/| x86_64-\* /&| aarch64-\* /" config.sub
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="$(if ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-int -Wno-error=implicit-function-declaration"; fi)" &&
 wl-showstatus build-install &&
 make install-strip &&
 mv -f $INSTALLPREFIX/share/startup $INSTALLPREFIX/bin &&
 rmdir $INSTALLPREFIX/share &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf dmake
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf dmake-DMAKE_$(echo $VERSION|tr . _)



#export NAME="dmake"
#export STATUS=
#export URL=http://www.openoffice.org/tools/dmake/
##export URL=https://github.com/jimjag/dmake/
#export BASENAME=dmake
#export DESCRIPTION="Dmake is a make utility similar to GNU make or the Workshop dmake."
#export CATEGORY=
#export TYPE=library
#export VERSION=4.13.1
#export VERSIONDATE=20251024
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://www.openoffice.org/tools/dmake/ dmake_"
##export DOWNLOADURL="http://www.openoffice.org/tools/dmake/ dmake_ .html"
#export DOWNLOADURL="https://github.com/jimjag/dmake/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://tools.openoffice.org/dmake/dmake_$VERSION.zip
#export DOWNLOADSOURCEURL=https://github.com/jimjag/dmake/archive/refs/tags/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##unzip -oq $TARBALLDIR/$BASENAME/dmake_$VERSION.zip
##tar xz --force-local -f $TARBALLDIR/$BASENAME/DMAKE_$(echo $VERSION|tr . _).tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
##cd dmake
##cd dmake-DMAKE_$(echo $VERSION|tr . _)
#cd $BASENAME-$VERSION
## fix winnt/mingw/sysintf.h (version >= 4.13.1)
#patch -ulbf winnt/mingw/sysintf.h << EOF
#@@ -30,4 +30,4 @@
#
#-extern char * tempnam();
#-extern char * getcwd();
#+extern char * tempnam(const char *, const char *);
#+extern char * getcwd(char *, int);
#
#EOF
## fix function.c (version >= 4.13.1)
#patch -ulbf function.c << EOF
#@@ -547,3 +547,3 @@
# {
#-   extern char *tempnam();
#+   extern char *tempnam(const char *_Directory,const char *_FilePrefix);
#    int  bsize;
#EOF
## fix win95/switchar.c (version >= 4.13.1)
#patch -ulbf win95/switchar.c << EOF
#@@ -29,3 +29,3 @@
#
#-getswitchar()/*
#+char getswitchar()/*
# ===============
#EOF
## fix dmake.c (version >= 4.13.1)
#patch -ulbf dmake.c << EOF
#@@ -142,3 +142,3 @@
#
#-#ifdef _WIN32
#+#if defined(_WIN32) && !defined(__MINGW32__)
#    dm_set_new_handler(dm_malloc_handler);
#EOF
## fix platform detection in configure
#patch -ulbf configure << EOF
#@@ -4483,3 +4483,3 @@
#          ;;
#-       "MINGW")
#+       MINGW*|mingw*|MSYS*)
#          OS_VERSION=mingw
#EOF
## support ARM64 in config.sub
#sed -i.bak -e "s/| x86_64-\* /&| aarch64-\* /" config.sub
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="$(if ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-int -Wno-error=implicit-function-declaration"; fi)" &&
# wl-showstatus build-install &&
# make install-strip &&
# mv -f $INSTALLPREFIX/share/startup $INSTALLPREFIX/bin &&
# rmdir $INSTALLPREFIX/share &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf dmake
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf dmake-DMAKE_$(echo $VERSION|tr . _)
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



