#export NAME="Ganv"
#export STATUS=
#export URL=https://drobilla.net/software/ganv/
#export BASENAME=ganv
#export DESCRIPTION="Ganv is an interactive Gtk widget for interactive \"boxes and lines\" or graph-like environments (e.g. modular synths or finite state machine diagrams)."
#export CATEGORY=gui
#export TYPE=library
##export VERSION=1.4.2
##export VERSIONDATE=20160606
#export VERSION=1.8.0
#export VERSIONDATE=20220719
#####/include/c++/bits/c++0x_warning.h:32:2: error: #error This file requires compiler and library support for the ISO C++ 2011 standard. This support is currently experimental, and must be enabled with the -std=c++11 or -std=gnu++11 compiler options.
#wl-showstatus --package-version
#export DEPENDANCIES=gettext,glib2,glibmm-2.4,gtk2,gtkmm2,cairo,pango,graphviz,libsigcplusplus2
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="https://drobilla.net/software/ganv/"
#export DOWNLOADURL="https://drobilla.net/category/ganv/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://download.drobilla.net/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
#wl-showstatus configure &&
# $PY2DIR/python.exe waf configure --prefix=$INSTALLPREFIX &&
# sed -i.bak -e "s?glib-genmarshal?python.exe $(cygpath -m $(which glib-genmarshal))?" wscript &&
# #wl-showstatus build &&
# #PATH=$PY2DIR:$PATH $PY2DIR/python.exe waf build &&
# wl-showstatus install &&
# #$PY2DIR/python.exe waf install &&
# PATH=$PY2DIR:$PATH $PY2DIR/python.exe waf install &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####TO DO: also build static library



export NAME="Ganv"
export STATUS=
export URL=https://drobilla.net/category/ganv/
export BASENAME=ganv
export DESCRIPTION="Ganv is an interactive Gtk widget for interactive \"boxes and lines\" or graph-like environments (e.g. modular synths or finite state machine diagrams)."
export CATEGORY=gui
export TYPE=library
export VERSION=1.8.2
export VERSIONDATE=20220814
wl-showstatus --package-version
export DEPENDANCIES=gettext,glib2,glibmm-2.4,gtk2,gtkmm2,cairo,pango,graphviz,libsigcplusplus2
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=meson,ninja
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://drobilla.net/category/ganv/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://download.drobilla.net/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix meson/library/meson.build (version >= 1.8.2)
patch -ulbf meson/library/meson.build << EOF
@@ -19,3 +19,3 @@
 if host_system == 'windows' and default_library == 'both'
-  error('default_library=both is not supported on Windows')
+  warning('default_library=both is not supported on Windows')
 endif
EOF
#patch -ulbf meson/library/meson.build << EOF
#@@ -19,3 +19,3 @@
# if host_system == 'windows' and default_library == 'both'
#-  error('default_library=both is not supported on Windows')
#+  warning('default_library=both is not supported on Windows')
# endif
#@@ -23,3 +23,3 @@
# # Set library_suffix to the suffix for libraries
#-if host_system == 'windows' and default_library == 'shared'
#+if host_system == 'windows' and default_library == 'shared' and false
#   # Meson appends a version to the name only for DLLs, which leads to
#EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgir=disabled . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



