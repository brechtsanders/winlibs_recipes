export NAME="SoX"
export STATUS=
export URL=http://sox.sourceforge.net/
export BASENAME=sox
export DESCRIPTION="SoX is a cross-platform command line utility that can convert various formats of computer audio files in to other formats. It can also apply various effects to these sound files, and, as an added bonus, SoX can play and record audio files on most platforms."
export CATEGORY=audio
export TYPE=library,application
#export VERSION=14.4.1
#export VERSIONDATE=20130322
####*** Warning: linker path does not have real file for library -lm.
export VERSION=14.4.2
export VERSIONDATE=20150223
####src/sox.c:3037:11: warning: ISO C does not support the 'I64' ms_printf length modifier [-Wformat=]
wl-showstatus --package-version
export DEPENDENCIES=file,zlib,flac,libao,libgsm,libid3tag,libmad,lame,libogg,libvorbis,opencore-amr,libpng,pulseaudio,libsndfile,wavpack
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="LGPL/GPL"
export DOWNLOADURL="http://sourceforge.net/projects/sox/files/sox/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/sox/sox/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix UCRT issue in src/formats.c (version >= 14.4.2)
patch -ulbf src/formats.c << EOF
@@ -417,4 +417,4 @@
   fp->_IO_read_ptr = fp->_IO_read_base;
-#elif defined _MSC_VER || defined _WIN32 || defined _WIN64 || \\
-      defined _ISO_STDIO_ISO_H || defined __sgi
+#elif (defined _MSC_VER || defined _WIN32 || defined _WIN64 || \\
+      defined _ISO_STDIO_ISO_H || defined __sgi) && !defined _UCRT
   fp->_ptr = fp->_base;
@@ -424,3 +424,3 @@
    * lines above.  Test with cat monkey.wav | ./sox --info - */
-  #error FIX NEEDED HERE
+  #warning FIX NEEDED HERE
   #define NO_REWIND_PIPE
EOF
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# echo "AM_GNU_GETTEXT_VERSION(`gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/"`)" >> configure.ac &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi
# remove -lm
sed -i.bak -e "s/-lm / /" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-gomp --disable-symlinks LDFLAGS="-Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-symlinks LDFLAGS="-Wl,--as-needed" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export DEPENDENCIES=file,zlib,flac,libao,libgsm,libid3tag,libmad,lame,libogg,libvorbis,opencore-amr,libpng,pulseaudio,libsndfile,wavpack,ctags
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#    cmake.exe . -LH; rm -f CMakeCache.txt &&
#mkdir -p build_test && cmake.exe -Wno-dev -G"MSYS Makefiles" -S. -Bbuild_test -LH && echo OK; rm -rf build_test
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# #wl-showstatus build &&
# #ninja -Cbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



