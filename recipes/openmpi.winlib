export NAME="Open MPI"
export STATUS=
export URL=http://www.open-mpi.org/
export BASENAME=openmpi
export DESCRIPTION="A High Performance Message Passing Library. The Open MPI Project is an open source MPI-2 implementation that is developed and maintained by a consortium of academic, research, and industry partners. Open MPI is therefore able to combine the expertise, technologies, and resources from all across the High Performance Computing community in order to build the best MPI library available. Open MPI offers advantages for system and software vendors, application developers and computer science researchers."
export CATEGORY=development
export TYPE=library
#export VERSION=1.4.3
#export VERSIONDATE=20101208
####orte/runtime/orte_data_server.c:71: error: initializer element is not constant
####orte/runtime/orte_data_server.c:71: error: (near initialization for 'orte_data_object_t_class.cls_parent')
#export VERSION=1.4.4
#export VERSIONDATE=20111012
####orte/runtime/orte_data_server.c:71: error: initializer element is not constant
#export VERSION=1.4.5
#export VERSIONDATE=20120215
#export VERSION=1.6
#export VERSIONDATE=20120514
#export VERSION=1.6.1
#export VERSIONDATE=20120824
#export VERSION=1.6.2
#export VERSIONDATE=20120927
#export VERSION=1.6.3
#export VERSIONDATE=20121031
#export VERSION=1.6.4
#export VERSIONDATE=20130222
export VERSION=1.6.5
export VERSIONDATE=20130627
####64-bit: opal/include/opal/sys/atomic.h:577:2: error: #error Atomic arithmetic on pointers not supported
#export VERSION=1.8
#export VERSIONDATE=20140401
####I could not find a recent enough copy of automake. I need at least 1.12.2
#export VERSION=1.8.1
#export VERSIONDATE=20140423
####configure: WARNING: neither statfs() and statvfs() were found
####configure: error: Cannot continue
#export VERSION=1.8.2
#export VERSIONDATE=20140826
#export VERSION=1.8.3
#export VERSIONDATE=20140926
####configure: WARNING: neither statfs() and statvfs() were found
####configure: error: Cannot continue
#export VERSION=1.8.4
#export VERSIONDATE=20141220
#export VERSION=1.8.5
#export VERSIONDATE=20150506
#export VERSION=1.8.6
#export VERSIONDATE=20150618
#export VERSION=1.8.7
#export VERSIONDATE=20150716
#export VERSION=1.8.8
#export VERSIONDATE=20150811
####checking for C type corresponding to LOGICAL*2... not found
####configure: WARNING: *** Did not find corresponding C type
####configure: error: Cannot continue
#export VERSION=1.10.0
#export VERSIONDATE=20150826
#export VERSION=1.10.1
#export VERSIONDATE=20151105
#export VERSION=1.10.2
#export VERSIONDATE=20160405
#export VERSION=1.10.3
#export VERSIONDATE=20160616
#export VERSION=2.0.0
#export VERSIONDATE=20160713
#export VERSION=2.0.1
#export VERSIONDATE=20160903
#export VERSION=2.0.2
#export VERSIONDATE=20170201
#export VERSION=2.1.0
#export VERSIONDATE=20170322
#export VERSION=2.1.1
#export VERSIONDATE=20170511
#export VERSION=3.0.0
#export VERSIONDATE=20170913
#export VERSION=3.0.1
#export VERSIONDATE=20180330
#export VERSION=3.1.0
#export VERSIONDATE=20180508
#export VERSION=3.1.1
#export VERSIONDATE=20180630
#export VERSION=3.1.2
#export VERSIONDATE=20180823
#export VERSION=3.1.3
#export VERSIONDATE=20181030
#export VERSION=4.0.0
#export VERSIONDATE=20181113
#export VERSION=4.0.1
#export VERSIONDATE=20190328
#export VERSION=4.0.2
#export VERSIONDATE=20191008
#export VERSION=4.0.3
#export VERSIONDATE=20200305
#export VERSION=4.0.4
#export VERSIONDATE=20200612
#export VERSION=4.0.5
#export VERSIONDATE=20200827
#export VERSION=4.0.6
#export VERSIONDATE=20210616
####configure: WARNING: neither statfs() and statvfs() were found
####configure: error: Cannot continue
#export VERSION=4.1.0
#export VERSIONDATE=20201219
#export VERSION=4.1.1
#export VERSIONDATE=20210425
#export VERSION=4.1.2
#export VERSIONDATE=20211125
#export VERSION=4.1.3
#export VERSIONDATE=20220401
#export VERSION=4.1.4
#export VERSIONDATE=20220527
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
export DOWNLOADURL="http://www.open-mpi.org/software/"
#export DOWNLOADURL="https://www.open-mpi.org/software/ompi/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://www.open-mpi.org/software/ompi/v`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*/\1/"`/downloads/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
## fix redefines in opal/win32/win_compat.h
#patch -ulbf opal/win32/win_compat.h << EOF
#--- opal/win32/win_compat.h  2010-08-24 23:00:32 +0200
#+++ opal/win32/win_compat.h  2011-04-30 08:50:52 +0200
#@@ -107,2 +107,3 @@
# /* Defines for the access functions */
#+#ifndef __MINGW32__
# #define F_OK  0x00
#@@ -111,2 +112,3 @@
# #define X_OK  R_OK  /* no execution right on Windows */
#+#endif
# #define S_IRWXU (_S_IREAD | _S_IWRITE | _S_IEXEC)
#@@ -142,3 +144,5 @@
# #define read                      _read
#+#ifndef __MINGW32__
# #define fileno                    _fileno
#+#endif
# #define isatty                    _isatty
#EOF
## fix redefines in opal/win32/win_compat.h (version >= 1.6.1rc2 <= 1.6.4)
#patch -ulbf opal/win32/win_compat.h << EOF
#--- opal/win32/win_compat.h  2012-04-03 16:29:52 +0200
#+++ opal/win32/win_compat.h  2012-07-31 10:00:46 +0200
#@@ -92,3 +92,7 @@
# typedef unsigned short mode_t;
#+#ifdef __MINGW32__
#+#include <sys/types.h>
#+#else
# typedef long ssize_t;
#+#endif
# typedef DWORD in_port_t;
#@@ -108,2 +112,3 @@
# /* Defines for the access functions */
#+#ifndef __MINGW32__
# #define F_OK  0x00
#@@ -112,2 +117,3 @@
# #define X_OK  R_OK  /* no execution right on Windows */
#+#endif
# #define S_IRWXU (_S_IREAD | _S_IWRITE | _S_IEXEC)
#@@ -136,3 +142,5 @@
# #define read                      _read
#+#ifndef __MINGW32__
# #define fileno                    _fileno
#+#endif
# #define isatty                    _isatty
#EOF
# fix redefines in opal/win32/win_compat.h (version >= 1.6.5)
patch -ulbf opal/win32/win_compat.h << EOF
@@ -92,3 +92,7 @@
 typedef unsigned short mode_t;
+#ifdef __MINGW32__
+#include <sys/types.h>
+#else
 typedef long ssize_t;
+#endif
 typedef DWORD in_port_t;
@@ -108,2 +112,3 @@
 /* Defines for the access functions */
+#ifndef __MINGW32__
 #define F_OK  0x00
@@ -112,2 +117,3 @@
 #define X_OK  R_OK  /* no execution right on Windows */
+#endif
 #define S_IRWXU (_S_IREAD | _S_IWRITE | _S_IEXEC)
@@ -136,3 +142,5 @@
 #define read                      _read
+#ifndef __MINGW32__
 #define fileno                    _fileno
+#endif
 #define isatty                    _isatty
@@ -149,3 +157,3 @@
 #define lrand48                   rand
-#define usleep(t)                 Sleep(t/1000)
+#define usleep(t)                 _sleep(t/1000)
 #define posix_memalign(p, a, s)   *p=_aligned_malloc(s,a)
@@ -174,3 +182,5 @@
 #define MAXHOSTNAMELEN _MAX_PATH
+#ifndef PATH_MAX
 #define PATH_MAX _MAX_PATH
+#endif
 #define WTERMSIG(EXIT_CODE)    (1)
@@ -183,3 +193,3 @@
 #define mkdir(PATH, MODE)         _mkdir((PATH))
-#define nanosleep(tp, rem)        Sleep(*tp.tv_sec*1000+*tp.tv_nsec/1000000)
+//#define nanosleep(tp, rem)        _sleep(*tp.tv_sec*1000+*tp.tv_nsec/1000000)
 #define pipe(array_fd)            _pipe(array_fd, 1024, O_BINARY )
EOF
## fix opal/event/WIN32-Code/win32.c (version <= 1.6.3)
#patch -ulbf opal/event/WIN32-Code/win32.c << EOF
#--- opal/event/WIN32-Code/win32.c  2009-12-08 21:36:02 +0100
#+++ opal/event/WIN32-Code/win32.c  2011-04-30 08:52:56 +0200
#@@ -30,3 +30,3 @@
# #include "./config.h"
#-#else
#+#elsifndef __MINGW32__
# /* Avoid the windows/msvc thing. */
#@@ -129,3 +129,3 @@
# void *
#-win32_init(void)
#+win32_init(struct event_base *base)
# {
#@@ -302,3 +302,3 @@
# int
#-win32_insert(struct win32op *win32op, opal_event_t *ev)
#+win32_insert(void *win32op, opal_event_t *ev)
# {
#@@ -320,5 +320,5 @@
#      */
#-    for( i = 0; i < win32op->n_events; ++i ) {
#-        if( win32op->events[i]->ev_fd != ev->ev_fd ) continue;
#-        master = win32op->events[i];
#+    for( i = 0; i < ((struct win32op*)win32op)->n_events; ++i ) {
#+        if( ((struct win32op*)win32op)->events[i]->ev_fd != ev->ev_fd ) continue;
#+        master = ((struct win32op*)win32op)->events[i];
#         if( master == ev ) {
#@@ -340,10 +340,10 @@
#
#-        if (win32op->n_events_alloc == win32op->n_events) {
#+        if (((struct win32op*)win32op)->n_events_alloc == ((struct win32op*)win32op)->n_events) {
#             size_t sz;
#-            win32op->n_events_alloc *= 2;
#-            sz = sizeof(opal_event_t*) * win32op->n_events_alloc;
#-            if (!(win32op->events = (opal_event_t**)realloc(win32op->events, sz)))
#+            ((struct win32op*)win32op)->n_events_alloc *= 2;
#+            sz = sizeof(opal_event_t*) * ((struct win32op*)win32op)->n_events_alloc;
#+            if (!(((struct win32op*)win32op)->events = (opal_event_t**)realloc(((struct win32op*)win32op)->events, sz)))
#                 return (-1);
#         }
#-        win32op->events[win32op->n_events++] = ev;
#+        ((struct win32op*)win32op)->events[((struct win32op*)win32op)->n_events++] = ev;
#         ev->ev_similar = ev;
#@@ -378,3 +378,3 @@
# int
#-win32_del(struct win32op *win32op, opal_event_t *ev)
#+win32_del(void *win32op, opal_event_t *ev)
# {
#@@ -386,5 +386,5 @@
#
#-    for( i = 0; i < win32op->n_events; ++i ) {
#-        if( win32op->events[i]->ev_fd != ev->ev_fd ) continue;
#-        master = win32op->events[i];
#+    for( i = 0; i < ((struct win32op*)win32op)->n_events; ++i ) {
#+        if( ((struct win32op*)win32op)->events[i]->ev_fd != ev->ev_fd ) continue;
#+        master = ((struct win32op*)win32op)->events[i];
#         break;
#@@ -424,4 +424,4 @@
#
#-            if (i != --win32op->n_events) {
#-                win32op->events[i] = win32op->events[win32op->n_events];
#+            if (i != --((struct win32op*)win32op)->n_events) {
#+                ((struct win32op*)win32op)->events[i] = ((struct win32op*)win32op)->events[((struct win32op*)win32op)->n_events];
#             }
#@@ -433,3 +433,3 @@
#         master->registered_handle = ev->registered_handle;
#-        win32op->events[i] = master;
#+        ((struct win32op*)win32op)->events[i] = master;
#         temp = master;
#@@ -453,3 +453,3 @@
# int
#-win32_dispatch( struct event_base *base, struct win32op *win32op,
#+win32_dispatch( struct event_base *base, void *win32op,
#                 struct timeval *tv )
#@@ -503,3 +503,3 @@
# int
#-signal_recalc(struct event_base base)
#+signal_recalc(struct event_base* base)
# {
#@@ -508,3 +508,3 @@
#     /* Reinstall our signal handler. */
#-    TAILQ_FOREACH(ev, &base.sig.signalqueue, ev_signal_next) {
#+    TAILQ_FOREACH(ev, &base->sig.signalqueue, ev_signal_next) {
#         if((int)signal(EVENT_SIGNAL(ev), signal_handler) == -1)
#@@ -516,3 +516,3 @@
# void
#-signal_process(struct event_base base)
#+signal_process(struct event_base* base)
# {
#@@ -521,3 +521,3 @@
#
#-    TAILQ_FOREACH(ev, &base.sig.signalqueue, ev_signal_next) {
#+    TAILQ_FOREACH(ev, &base->sig.signalqueue, ev_signal_next) {
#         ncalls = evsigcaught[EVENT_SIGNAL(ev)];
#EOF
# fix opal/win32/ompi_time.h
patch -ulbf opal/win32/ompi_time.h << EOF
--- opal/win32/ompi_time.h  2009-12-08 21:36:08 +0100
+++ opal/win32/ompi_time.h  2011-04-30 08:56:28 +0200
@@ -167,2 +167,3 @@
 fact that if you expect to pass anything here, then you are DEAD :-D */
+#ifndef __MINGW32__
 struct timezone
@@ -172,2 +173,3 @@
 };
+#endif

@@ -178,3 +180,5 @@

+#ifndef __MINGW32__
 OPAL_DECLSPEC int gettimeofday (struct timeval *tv, struct timezone *tz);
+#endif
EOF
# fix opal/util/net.c
patch -ulbf opal/util/net.c << EOF
--- opal/util/net.c  2011-04-30 09:51:06 +0200
+++ opal/util/net.c  2011-04-30 09:50:48 +0200
@@ -73,4 +73,4 @@
 #include "opal/class/opal_list.h"
-#include "opal/util/net.h"
 #include "opal/util/output.h"
+#include "opal/util/net.h"
 #include "opal/util/strncpy.h"
EOF
# fix opal/util/net.c
patch -ulbf opal/util/if.c << EOF
--- opal/util/if.c  2011-02-04 14:38:16 +0100
+++ opal/util/if.c  2013-02-01 15:52:00 +0100
@@ -71,6 +71,6 @@

 #include "opal/class/opal_list.h"
-#include "opal/util/if.h"
 #include "opal/util/output.h"
+#include "opal/util/if.h"
 #include "opal/util/argv.h"
 #include "opal/constants.h"
@@ -82,4 +82,7 @@
 #  define MIN(a,b)                ((a) < (b) ? (a) : (b))
 #endif
+#ifndef IN6_ARE_ADDR_EQUAL
+#  define IN6_ARE_ADDR_EQUAL(a,b) (!memcmp((const void*)(a), (const void*)(b), sizeof (struct in6_addr)))
+#endif

 /*
EOF
# fix for mingw-w64 in contrib/platform/win32/CMakeModules/ompi_check_MinGW.cmake
patch -ulbf contrib/platform/win32/CMakeModules/ompi_check_MinGW.cmake << EOF
--- contrib/platform/win32/CMakeModules/ompi_check_MinGW.cmake  2012-04-03 16:29:52 +0200
+++ contrib/platform/win32/CMakeModules/ompi_check_MinGW.cmake  2013-01-31 14:25:40 +0100
@@ -36,3 +36,3 @@
 EXECUTE_PROCESS(COMMAND ${CC:-gcc} --version OUTPUT_VARIABLE GCC_VERSION)
-STRING (REGEX MATCH [.0-9]*\\n GCC_VERSION \${GCC_VERSION})
+STRING (REGEX MATCH [.0-9]*[^\\n]*\\n GCC_VERSION \${GCC_VERSION})
 STRING (REPLACE "\\n" "" GCC_VERSION \${GCC_VERSION})
EOF
# fix opal/util/os_dirpath.c
mv opal/util/os_dirpath.c opal/util/os_dirpath.c.bak
echo "#define __MSVCRT_VERSION__ 0x0601" > opal/util/os_dirpath.c
cat opal/util/os_dirpath.c.bak >> opal/util/os_dirpath.c
# fix for 64-bit in opal/tools/opal-restart/opal-restart.c
patch -ulbf opal/tools/opal-restart/opal-restart.c << EOF
--- opal/tools/opal-restart/opal-restart.c  2012-04-03 16:29:50 +0200
+++ opal/tools/opal-restart/opal-restart.c  2013-02-01 15:56:18 +0100
@@ -138,3 +138,3 @@
     int ret, exit_status = OPAL_SUCCESS;
-    int child_pid;
+    pid_t child_pid;
     int prev_pid = 0;
EOF
# fix for missing min on 64-bit in ompi/mca/coll/sm/coll_sm_reduce.c
patch -ulbf ompi/mca/coll/sm/coll_sm_reduce.c << EOF
--- ompi/mca/coll/sm/coll_sm_reduce.c  2012-04-03 16:30:16 +0200
+++ ompi/mca/coll/sm/coll_sm_reduce.c  2013-02-01 16:00:52 +0100
@@ -32,3 +32,5 @@
 #include "coll_sm.h"
-
+#ifndef min
+#define min(a,b) ((a)<(b)?(a):(b))
+#endif

EOF
# fix "error: declaration does not declare anything" in ompi/debuggers/debuggers.h
patch -ulbf ompi/debuggers/debuggers.h << EOF
--- ompi/debuggers/debuggers.h  2012-04-03 16:30:26 +0200
+++ ompi/debuggers/debuggers.h  2013-02-01 16:27:14 +0100
@@ -37,3 +37,5 @@
  */
+#ifndef ompi_wait_for_debugger
 extern void ompi_wait_for_debugger(void);
+#endif

@@ -42,3 +44,5 @@
  */
+#ifndef ompi_debugger_notify_abort
 extern void ompi_debugger_notify_abort(char *string);
+#endif

EOF
## fix issue with Sleep in opal/win32/win_compat.h (version >= 1.6.5)
#mv opal/win32/win_compat.h opal/win32/win_compat.h.bak &&
#sed -e "s/\bSleep\b/_sleep/g; s/#define nanosleep/\/\/&/" opal/win32/win_compat.h.bak > opal/win32/win_compat.h
# fix nanosleep in opal/mca/memory/linux/sysdeps/pthread/malloc-machine.h (versio >= 1.6.5)
patch -ulbf opal/mca/memory/linux/sysdeps/pthread/malloc-machine.h << EOF
@@ -46,5 +46,7 @@
 static inline int mutex_lock(mutex_t *m) {
   int cnt = 0, r;
+#ifndef _WIN32
   struct timespec tm;
+#endif

   for(;;) {
@@ -60,7 +62,11 @@
       cnt++;
     } else {
+#ifdef _WIN32
+      _sleep(2);
+#else
       tm.tv_sec = 0;
       tm.tv_nsec = 2000001;
       nanosleep(&tm, NULL);
+#endif
       cnt = 0;
     }
EOF
# fix issue with empty GCC_VERSION
sed -i.bak "s/\([^\"]\)\(\${GCC_VERSION}\)/\1\"\2\"/" contrib/platform/win32/CMakeModules/ompi_check_MinGW.cmake
# fix wrong link libraries (version >= 1.8)
sed -i.bak -e "s/Ws2_32\.lib/-lws2_32/g; s/shlwapi\.lib/-lshlwapi/g" $(grep -l \.lib $(find . -iname CMakeLists.txt))
wl-showstatus configure &&
if ( echo $RUNPLATFORM | grep -vq x86_64 ); then
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release .
 cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_C_FLAGS:STRING="-DWIN32" -DCMAKE_CXX_FLAGS:STRING="-DWIN32" .
else
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOMPI_RELEASE_BUILD:BOOL=ON -DOMPI_ENABLE_MPI_PROFILING:BOOL=OFF -DOMPI_ENABLE_THREAD_MULTIPLE:BOOL=ON -DOPAL_ENABLE_MULTI_THREADS:BOOL=ON -DCMAKE_C_FLAGS:STRING="-fpermissive" -DCMAKE_CXX_FLAGS:STRING="-fpermissive" .
 cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOMPI_RELEASE_BUILD:BOOL=ON -DOMPI_ENABLE_MPI_PROFILING:BOOL=OFF -DOMPI_ENABLE_THREAD_MULTIPLE:BOOL=ON -DOPAL_ENABLE_MULTI_THREADS:BOOL=ON -DCMAKE_C_FLAGS:STRING="-fpermissive -DWIN32" -DCMAKE_CXX_FLAGS:STRING="-fpermissive -DWIN32" .
fi &&
 wl-showstatus build-install &&
 # fix invalid link parameter
 ( sed -i.bak -e "s?/TP??g" $(grep -l " /TP" $(find . -iname build.make)) || true ) &&
 # fix redefinition of pid_t
 mv opal/include/opal_config.h opal/include/opal_config.h.bak &&
 sed -e "s/^\(#define pid_t int\)/\/\/\1/; s/^\(#define SIZEOF_PID_T \)int/\1SIZEOF_INT/" opal/include/opal_config.h.bak > opal/include/opal_config.h &&
 # fix for 64-bit
 if ( echo $RUNPLATFORM | grep -q x86_64 ); then
  echo "#define HAVE_INTERLOCKEDCOMPAREEXCHANGE64 1" >> opal/include/opal_config.h
  echo "#define OMPI_TIMESPEC 1" >> opal/include/opal_config.h
 fi &&
 # fix undefined WIN32 (version >= 1.6.5)
 echo "#define WIN32" >> opal/include/opal_config.h &&
 make install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#sed -i.bak -e "s/as_fn_error\(.*Cannot continue\)/echo\1/" configure
#wl-showstatus configure &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-shared --enable-static --enable-mpi --enable-mpi-cxx --disable-ipv6 --enable-mmap-shmem --disable-posix-shmem --disable-oshmem --disable-mpi-fortran --disable-mpi-java --disable-event-select --disable-event-poll --disable-event-devpoll --disable-event-kqueue --disable-event-epoll --enable-event-evport --disable-event-signal  CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
# #--disable-event-evport
# #--enable-mpi1-compatibility
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
####Windows port no longer supported, see also: https://github.com/open-mpi/ompi/wiki/WindowsPort




