export NAME="kdewin"
export STATUS=
export URL=http://windows.kde.org/
#export URL=https://github.com/KDE/kdewin
export BASENAME=kdewin
export DESCRIPTION="This project is an auxiliary project for the Windows port of KDE - the K Desktop Environment from http://www.kde.org. It provides binaries and/or sources not located in the main KDE repositories."
export CATEGORY=
export TYPE=library
#export VERSION=0.3.9
#export VERSIONDATE=20131105
#export VERSION=0.5.11
#export VERSIONDATE=20160827
#export VERSION=0.6.1
#export VERSIONDATE=20171218
#export VERSION=0.6.3
#export VERSIONDATE=20181127
#export VERSION=0.6.4
#export VERSIONDATE=20190504
#export VERSION=0.6.5
#export VERSIONDATE=20210706
export VERSION=0.6.6
export VERSIONDATE=20210709
wl-showstatus --package-version
export DEPENDENCIES=zlib,libpng,qt
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/kde-windows/files/kdewin32/ kdewin32-mingw-"
#export DOWNLOADURL="https://github.com/KDE/kdewin/releases"
export DOWNLOADURL="https://github.com/KDE/kdewin/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/kde-windows/kdewin32/$VERSION/kdewin32-mingw-$VERSION-src.tar.bz2
#export DOWNLOADSOURCEURL=https://github.com/KDE/kdewin/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/KDE/kdewin/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
mkdir -p $BASENAME-$VERSION
#tar xj --force-local -f $TARBALLDIR/$BASENAME/kdewin32-mingw-$VERSION-src.tar.bz2 -C$BASENAME-$VERSION
#cd $BASENAME-$VERSION/src/kdewin32-mingw-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix redefinition of usleep in include/mingw/unistd.h and src/unistd.c
#mv include/mingw/unistd.h include/mingw/unistd.h.bak
#sed -e "s/^\(.*usleep(\)/\/\/\1/" include/mingw/unistd.h.bak > include/mingw/unistd.h
#mv src/unistd.c src/unistd.c.bak
#sed -e "s/KDEWIN32_EXPORT\( void \)\(usleep(\)/inline\1MY_\2/" src/unistd.c.bak > src/unistd.c
## fix redefinition of sleep in include/mingw/unistd.h and src/unistd.c
#mv include/mingw/unistd.h include/mingw/unistd.h.bak2
#sed -e "s/^\(.* sleep(\)/\/\/\1/" include/mingw/unistd.h.bak2 > include/mingw/unistd.h
#mv src/unistd.c src/unistd.c.bak2
#sed -e "s/KDEWIN32_EXPORT\( void \)\(sleep(\)/inline\1MY_\2/" src/unistd.c.bak2 > src/unistd.c
# fix src/mmap.c (version >= 0.6.6)
patch -ulbf src/mmap.c << EOF
@@ -54,4 +54,4 @@

-static g_curMMapInfos = 0;
-static g_maxMMapInfos = -1;
+static int g_curMMapInfos = 0;
+static int g_maxMMapInfos = -1;
 static struct mmapInfos *g_mmapInfos = NULL;
EOF
# fix src/uname.c (version >= 0.6.6)
patch -ulbf src/uname.c << EOF
@@ -94,3 +94,3 @@
 {
-  OSVERSIONINFO version;
+  OSVERSIONINFOA version;
   const char *super_version;
@@ -98,3 +98,3 @@
 #ifndef _WIN32_WCE
-  OSVERSIONINFOEX versionex;
+  OSVERSIONINFOEXA versionex;
   BOOL have_versionex; /* indicates whether versionex is filled */
@@ -103,7 +103,7 @@
   versionex.dwOSVersionInfoSize = sizeof (OSVERSIONINFOEX);
-  have_versionex = GetVersionEx ((OSVERSIONINFO *) &versionex);
+  have_versionex = GetVersionExA ((OSVERSIONINFOA *) &versionex);
   if (have_versionex)
     {
-      /* We know that OSVERSIONINFO is a subset of OSVERSIONINFOEX.  */
-      memcpy (&version, &versionex, sizeof (OSVERSIONINFO));
+      /* We know that OSVERSIONINFOA is a subset of OSVERSIONINFOEXA.  */
+      memcpy (&version, &versionex, sizeof (OSVERSIONINFOA));
     }
@@ -111,4 +111,4 @@
     {
-      version.dwOSVersionInfoSize = sizeof (OSVERSIONINFO);
-      if (!GetVersionEx (&version))
+      version.dwOSVersionInfoSize = sizeof (OSVERSIONINFOA);
+      if (!GetVersionExA (&version))
         abort ();
@@ -116,4 +116,4 @@
 #else
-  version.dwOSVersionInfoSize = sizeof (OSVERSIONINFO);
-  if (!GetVersionEx (&version))
+  version.dwOSVersionInfoSize = sizeof (OSVERSIONINFOA);
+  if (!GetVersionExA (&version))
     abort ();
EOF
#wl-showstatus configure &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DWIN32LIBS_DIR:FILEPATH=$MINGWDIR/lib . &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DMINGW_W32:BOOL=ON . &&
#cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_LIBRARY:BOOL=OFF -DMINGW_W32:BOOL=ON -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQt5Gui_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Gui -DQt5Core_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Core -DQt5Widgets_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Widgets -DQt5PrintSupport_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5PrintSupport -DQt5Svg_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Svg . &&
# ( make install/strip || make install ) &&
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_LIBRARY:BOOL=ON -DMINGW_W32:BOOL=ON -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQt5Gui_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Gui -DQt5Core_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Core -DQt5Widgets_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Widgets -DQt5PrintSupport_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5PrintSupport -DQt5Svg_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Svg .. &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_LIBRARY:BOOL=OFF -DMINGW_W32:BOOL=ON -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQt5Gui_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Gui -DQt5Core_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Core -DQt5Widgets_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Widgets -DQt5PrintSupport_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5PrintSupport -DQt5Svg_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Svg .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_LIBRARY:BOOL=ON -DMINGW_W32:BOOL=ON -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQt5Gui_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Gui -DQt5Core_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Core -DQt5Widgets_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Widgets -DQt5PrintSupport_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5PrintSupport -DQt5Svg_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Svg -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSTATIC_LIBRARY:BOOL=OFF -DMINGW_W32:BOOL=ON -DQT_QMAKE_EXECUTABLE:PATH=$MINGWPREFIX/qt/bin/qmake.exe -DQt5Gui_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Gui -DQt5Core_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Core -DQt5Widgets_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Widgets -DQt5PrintSupport_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5PrintSupport -DQt5Svg_DIR:PATH=$MINGWPREFIX/qt/lib/cmake/Qt5Svg -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####see also: http://download.kde.org/stable/4.10.2/win32/



