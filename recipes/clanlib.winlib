export NAME="clanlib"
export STATUS=
export URL=http://clanlib.org/
export BASENAME=clanlib
export DESCRIPTION="ClanLib is a cross platform C++ toolkit library. Essentially the library offers a series of different functionality under a streamlined API. Its primary focus is on games, although not limited for that usage only."
export CATEGORY=games,gui
export TYPE=library
#export VERSION=2.1.1
#export VERSIONDATE=20091211
#export VERSION=2.1.2
#export VERSIONDATE=20100720
#export VERSION=2.2.0
#export VERSIONDATE=20100720
#export VERSION=2.2.1
#export VERSIONDATE=20100805
#export VERSION=2.2.2
#export VERSIONDATE=20100824
#export VERSION=2.2.3
#export VERSIONDATE=20100921
#export VERSION=2.2.4
#export VERSIONDATE=20101006
#export VERSION=2.2.5
#export VERSIONDATE=20101106
#export VERSION=2.2.6
#export VERSIONDATE=20110115
####Sources/Core/IOData/directory.cpp:85: error: cannot convert 'const wchar_t*' to 'const CHAR*' for argument '1' to 'DWORD GetFullPathNameA(const CHAR*, DWORD, CHAR*, CHAR**)'
#export VERSION=2.2.7
#export VERSIONDATE=20110321
####E:\Prog\MinGW-mSys\include\w32api/shlobj.h:560: error: expected identifier before numeric constant
#export VERSION=2.2.8
#export VERSIONDATE=20110408
#export VERSION=2.2.9
#export VERSIONDATE=20110613
#export VERSION=2.2.10
#export VERSIONDATE=20110720
export VERSION=2.2.12
export VERSIONDATE=20110819
#export VERSION=2.3.0
#export VERSIONDATE=20110727
#export VERSION=2.3.1
#export VERSIONDATE=20110730
#export VERSION=2.3.2
#export VERSIONDATE=20110819
#export VERSION=2.3.3
#export VERSIONDATE=20110905
####../../Sources/API/Core/System/thread_local_storage.h:71: error: ISO C++ forbids declaration of 'shared_ptr' with no type
#export VERSION=2.3.4
#export VERSIONDATE=20111202
####configure: error: conditional "ALSA" was never defined.
#export VERSION=2.3.5
#export VERSIONDATE=20120224
#export VERSION=2.3.6
#export VERSIONDATE=20120326
#export VERSION=2.3.7
#export VERSIONDATE=20120614
#export VERSION=3.0.0.10049
#export VERSIONDATE=20130611
#export VERSION=3.0.0.10056
#export VERSIONDATE=20130614
#export VERSION=3.0.0.10142
#export VERSIONDATE=20130621
#export VERSION=3.0.0.10212
#export VERSIONDATE=20130628
####missing SecureZeroMemory
#export VERSION=3.0.0.10247
#export VERSIONDATE=20130715
#export VERSION=3.0.0.20130917
#export VERSIONDATE=20130918
#export VERSION=3.0.0.20130919
#export VERSIONDATE=20130919
#export VERSION=3.0.0
#export VERSIONDATE=20130924
#export VERSION=3.0.1
#export VERSIONDATE=20131210
#export VERSION=4.0.0
#export VERSIONDATE=20160104
#export VERSION=4.1.0
#export VERSIONDATE=20210401
####Sources/API/Core/IOData/iodevice.h:318:2: error: 'shared_ptr' in namespace 'std' does not name a type
wl-showstatus --package-version
export DEPENDENCIES=zlib,libjpeg,libpng,libmikmod,libogg,libvorbis,fontconfig,freetype2,pcre,sdl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://clanlib.org/download.html ClanLib- .tgz"
export DOWNLOADURL="https://github.com/sphair/ClanLib/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://clanlib.org/download/releases-2.0/ClanLib-$VERSION.tgz
#export DOWNLOADSOURCEURL=http://clanlib.org/download/releases-`echo $VERSION|sed -e "s/^\([0-9]*\)\..*$/\1/"`.0/ClanLib-$VERSION.tgz
export DOWNLOADSOURCEURL=http://ftp.ubuntu-tw.org/mirror/FreeBSD/ports/distfiles/ClanLib-$VERSION.tgz
#export DOWNLOADSOURCEURL=https://github.com/sphair/ClanLib/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/ClanLib-$VERSION.tgz
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/ClanLib-$VERSION.tgz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd ClanLib-`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/"`
# fix missing definition of size_type
mv Sources/API/Core/System/system.h Sources/API/Core/System/system.h.bak
echo "typedef size_t size_type;" > Sources/API/Core/System/system.h
cat Sources/API/Core/System/system.h.bak >> Sources/API/Core/System/system.h
# fix missing definition of iterator
#echo "#undef WIN32" >> Sources/API/Core/Text/string_data.h
mv Sources/API/Core/Text/string_container.h Sources/API/Core/Text/string_container.h.bak
sed -e "s/^#ifndef WIN32/#if \!defined(WIN32) || defined(__MINGW32__)/" Sources/API/Core/Text/string_container.h.bak > Sources/API/Core/Text/string_container.h
mv Sources/API/Core/Text/string_reference.h Sources/API/Core/Text/string_reference.h.bak
sed -e "s/^#ifndef WIN32/#if \!defined(WIN32) || defined(__MINGW32__)/" Sources/API/Core/Text/string_reference.h.bak > Sources/API/Core/Text/string_reference.h
mv Sources/API/Core/Text/temp_string_container.h Sources/API/Core/Text/temp_string_container.h.bak
sed -e "s/^#ifndef WIN32/#if \!defined(WIN32) || defined(__MINGW32__)/" Sources/API/Core/Text/temp_string_container.h.bak > Sources/API/Core/Text/temp_string_container.h
# fix missing definition of SHGFP_TYPE_DEFAULT
mv Sources/Core/IOData/directory.cpp Sources/Core/IOData/directory.cpp.bak
cat > Sources/Core/IOData/directory.cpp << EOF
#include <shlobj.h>
#define SHGFP_TYPE_DEFAULT 1
//#define UNICODE
EOF
cat Sources/Core/IOData/directory.cpp.bak >> Sources/Core/IOData/directory.cpp
#sed -e "s/TCHAR cwd_buffer/char cwd_buffer/" Sources/Core/IOData/directory.cpp.bak >> Sources/Core/IOData/directory.cpp
# fix Sources/Core/System/datetime.cpp
HAVE_LOCALTIME_R=0
(
cat << EOF
#define _POSIX_THREAD_SAFE_FUNCTIONS
#include <time.h>
int main () {
 struct tm* t;
 t = localtime_r(NULL,NULL);
 t = gmtime_r(NULL,NULL);
 return 0;
}
EOF
) | ${CC:-gcc} -S -xc - && HAVE_LOCALTIME_R=1
patch -ulbf Sources/Core/System/datetime.cpp << EOF
@@ -40,2 +40,21 @@
 
+#include <time.h>
+#if defined(__MINGW32__) && !$HAVE_LOCALTIME_R
+struct tm* localtime_r (const time_t* timer, struct tm* result)
+{
+  struct tm* local_result;
+  if ((local_result = localtime(timer)) == NULL || result == NULL)
+    return NULL;
+  memcpy(result, local_result, sizeof (result));
+  return result;
+}
+struct tm* gmtime_r (const time_t* timer, struct tm* result)
+{
+  struct tm* local_result;
+  if ((local_result = gmtime (timer)) == NULL || result == NULL)
+    return NULL;
+  memcpy (result, local_result, sizeof (result));
+  return result;
+} 
+#endif
 
@@ -236,3 +255,3 @@
        {
-       #ifdef WIN32
+       #if defined(WIN32) && !defined(__MINGW32__)
                SYSTEMTIME local_time;
EOF
# fix missing dbghelp.h Sources/Core/System/system.cpp
patch -ulbf Sources/Core/System/system.cpp << EOF
@@ -59,2 +59,3 @@
 #endif
+#ifndef __MINGW32__
 #include <dbghelp.h>
@@ -62,2 +63,3 @@
 #endif
+#endif
 
@@ -100,2 +102,6 @@
 #ifdef WIN32
+#ifdef __MINGW32__
+       std::vector<CL_String> backtrace_text;
+       backtrace_text.push_back("(sorry, no backtrace available when compiled with MinGW");
+#else
        static CL_Mutex mutex;
@@ -142,2 +148,3 @@
        SymCleanup(GetCurrentProcess());
+#endif
        return backtrace_text;
EOF
# fix missing _snprintf, sscanf in Sources/Core/Text/string_help.cpp
mv Sources/Core/Text/string_help.cpp Sources/Core/Text/string_help.cpp.bak
echo "#include <stdio.h>" > Sources/Core/Text/string_help.cpp
cat Sources/Core/Text/string_help.cpp.bak >> Sources/Core/Text/string_help.cpp
# fix invalid use of unix_socket.h, unix_socket.cpp
#cp Sources/Network/Socket/win32_socket.h Sources/Network/Socket/unix_socket.h
#cp Sources/Network/Socket/win32_socket.cpp Sources/Network/Socket/unix_socket.cpp
rm Sources/Network/Socket/unix_socket.h Sources/Network/Socket/unix_socket.cpp
touch Sources/Network/Socket/unix_socket.h Sources/Network/Socket/unix_socket.cpp
# fix missing dbghelp.h (version >= 2.2.8)
touch Sources/Core/dbghelp.h
# fix missing Mstcpip.h (version >= 2.2.8)
cat > Sources/Network/Mstcpip.h << EOF
#define SIO_KEEPALIVE_VALS _WSAIOW(IOC_VENDOR,4)
struct tcp_keepalive {
 u_long onoff;
 u_long keepalivetime;
 u_long keepaliveinterval;
};
EOF
# fix errors: ::swprintf/::vswprintf has not been declared (version >= 2.3.0)
mv Sources/App/Makefile Sources/App/Makefile.bak
sed -e "s/-std=c++0x//" Sources/App/Makefile.bak > Sources/App/Makefile
# fix missing size_t in Sources/Vorbis/setupvorbis.cpp (version >= 2.2.12)
mv Sources/Vorbis/setupvorbis.cpp Sources/Vorbis/setupvorbis.cpp.bak &&
echo "#include <stdlib.h>" > Sources/Vorbis/setupvorbis.cpp &&
cat Sources/Vorbis/setupvorbis.cpp.bak >> Sources/Vorbis/setupvorbis.cpp
# fix C++ issues
mv configure configure.bak
sed -e "s/-std=c++0x//" configure.bak > configure
## remove dependancy on dynamic libstdc++ (GCC 4)
#mv libtool libtool.bak &&
#sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
wl-showstatus configure &&
 #wl-showstatus preconfigure &&
 #mkdir -p m4 &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-DWIN32 -DUNICODE" CPPFLAGS="-DWIN32 -DUNICODE" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-DWIN32" CPPFLAGS="-DWIN32" LDFLAGS="-no-undefined -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-DWIN32" CPPFLAGS="-DWIN32" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-DWIN32" CPPFLAGS="-DWIN32 -D_POSIX_THREAD_SAFE_FUNCTIONS" &&
 # fix building DLLs on 64-bit
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 # fix detection of shared libraries
 sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 wl-showstatus build-install &&
 ( make all install-strip || (
  #make -j1 all install-strip extra_LIBS_clanApp="-Wl,--as-needed -gdi32 -luser32 -lkernel32 -lmsvcrt -L`pwd`/Sources/Core/.libs -lclan22Core" libclan22Database_la_LIBADD="-Wl,--as-needed -L`pwd`/Sources/Core/.libs -lclan22Core" libclan22Sqlite_la_LIBADD="-Wl,--as-needed -L`pwd`/Sources/Core/.libs -lclan22Core" libclan22Network_la_LIBADD="-Wl,--as-needed -lws2_32 -liphlpapi -L`pwd`/Sources/Core/.libs -lclan22Core" &&
  #make -j1 all install-strip extra_LIBS_clanApp="-Wl,--as-needed -gdi32 -luser32 -lkernel32 -lmsvcrt -L`pwd`/Sources/Core/.libs -lclan22Core" libclan22Database_la_LIBADD="-Wl,--as-needed -L`pwd`/Sources/Core/.libs -lclan22Core" libclan22Sqlite_la_LIBADD="-Wl,--as-needed -L`pwd`/Sources/Core/.libs -lclan22Core -L`pwd`/Sources/Database/.libs -lclan22Database" libclan22Network_la_LIBADD="-Wl,--as-needed -lws2_32 -liphlpapi -L`pwd`/Sources/Core/.libs -lclan22Core -L`pwd`/Sources/Network/.libs -Lclan22Network" libclan22RegExp_la_LIBADD="-Wl,--as-needed -lpcre -L`pwd`/Sources/Core/.libs -lclan22Core" &&
  #make all install-strip extra_LIBS_clanApp="-Wl,--as-needed -gdi32 -luser32 -lkernel32 -lmsvcrt -L`pwd`/Sources/Core/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Core" libclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Database_la_LIBADD="-Wl,--as-needed -L`pwd`/Sources/Core/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Core" libclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Sqlite_la_LIBADD="-Wl,--as-needed -L`pwd`/Sources/Core/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Core -L`pwd`/Sources/Database/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Database" libclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Network_la_LIBADD="-Wl,--as-needed -lws2_32 -liphlpapi -L`pwd`/Sources/Core/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Core -L`pwd`/Sources/Network/.libs -Lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Network" libclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`RegExp_la_LIBADD="-Wl,--as-needed -lpcre -L`pwd`/Sources/Core/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Core"
  make -j1 all install-strip extra_LIBS_clanApp="-Wl,--as-needed -gdi32 -luser32 -lkernel32 -lmsvcrt -L`pwd`/Sources/Core/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Core" libclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Database_la_LIBADD="-Wl,--as-needed -L`pwd`/Sources/Core/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Core" libclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Sqlite_la_LIBADD="-Wl,--as-needed -L`pwd`/Sources/Core/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Core -L`pwd`/Sources/Database/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Database" libclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Network_la_LIBADD="-Wl,--as-needed -lws2_32 -liphlpapi -L`pwd`/Sources/Core/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Core -L`pwd`/Sources/Network/.libs" libclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`RegExp_la_LIBADD="-Wl,--as-needed -lpcre -L`pwd`/Sources/Core/.libs -lclan`echo $VERSION|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/"`Core"
 ) ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ClanLib-`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/"`



