export NAME="zipp"
export STATUS=
#export URL=https://pypi.org/project/zzip/
export URL=https://github.com/jaraco/zipp
export BASENAME=zipp
export DESCRIPTION="Zipper tool for interacting with data"
export CATEGORY=compression
export TYPE=library
export VERSION=3.7.0
export VERSIONDATE=20220323
#export VERSION=3.8.0
#export VERSIONDATE=20220404
#export VERSION=3.8.1
#export VERSIONDATE=20220713
#export VERSION=3.9.0
#export VERSIONDATE=20221009
#export VERSION=3.9.1
#export VERSIONDATE=20221024
#export VERSION=3.10.0
#export VERSIONDATE=20221024
#export VERSION=3.11.0
#export VERSIONDATE=20221024
#export VERSION=3.12.0
#export VERSIONDATE=20230128
#export VERSION=3.12.1
#export VERSIONDATE=20230206
#export VERSION=3.13.0
#export VERSIONDATE=20230210
#export VERSION=3.14.0
#export VERSIONDATE=20230218
#export VERSION=3.15.0
#export VERSIONDATE=20230225
####can't open file 'setup.py': [Errno 2] No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/jaraco/zipp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/jaraco/zipp/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX/python/Lib/site-packages &&
 PYTHONPATH=$INSTALLPREFIX/python/Lib/site-packages:$MINGWPREFIX/python/Lib/site-packages:$PYDIR/Lib${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python setup.py install --force --compile --single-version-externally-managed --prefix=$(echo $INSTALLPREFIX/python|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\?") --root $(echo $INSTALLPREFIX|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\?; s?/?\\\\?") &&
 # delete any __pycache__ folder(s)
 find $INSTALLPREFIX -name __pycache__ -exec echo rm -rf {} \; | sh &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



