#export NAME="netpbm"
#export STATUS=
#export URL=http://netpbm.sourceforge.net/
#export BASENAME=netpbm
#export DESCRIPTION="Netpbm is a toolkit for manipulation of graphic images, including conversion of images between a variety of different formats. There are over 300 separate tools in the package including converters for about 100 graphics formats."
#export CATEGORY=graphics
#export TYPE=application
#export VERSION=10.26.60
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=doc/GPL_LICENSE.txt
#export LICENSETYPE=GPL2
#export DOWNLOADURL="http://sourceforge.net/project/showfiles.php?group_id=5128&package_id=64780"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/netpbm/$BASENAME-$VERSION.tgz
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tgz
#cd $BASENAME-$VERSION
#rm Makefile.config; ./configure << EOF
#
#win
#n
#n
#regular
#shared
#y
#<stdint.h>
#libjpeg.dll
#
#libtiff.dll
#
#libpng.dll
#
#libz.dll
#
#http://netpbm.sourceforge.net/doc/
#EOF
#mv Makefile.config Makefile.config.bak
#sed -e "s/^\(CC *= *\).*/\1gcc/" Makefile.config.bak > Makefile.config
#make
##../makeDevPak.sh && cd .. && rm -rf $BASENAME-$VERSION



#export NAME="netpbm for Windows"
export NAME="Netpbm"
export STATUS=
#export URL=http://gnuwin32.sourceforge.net/packages/netpbm.htm
export URL=http://netpbm.sourceforge.net/
export BASENAME=netpbm
export DESCRIPTION='Netpbm is a package of graphics programs and programming libraries. There are over 220 separate programs in the package, most of which have "pbm", "pgm", "ppm", or "pnm" in their names.'
export CATEGORY=graphics
export TYPE=library,application
#export VERSION=10.27
#export VERSION=10.35.80
#export VERSIONDATE=20110220
#export VERSION=10.35.81
#export VERSIONDATE=20110713
#export VERSION=10.35.82
#export VERSIONDATE=20110926
#export VERSION=10.35.83
#export VERSIONDATE=20111125
#export VERSION=10.35.84
#export VERSIONDATE=20120215
#export VERSION=10.35.85
#export VERSIONDATE=20120622
#export VERSION=10.35.86
#export VERSIONDATE=20120723
#export VERSION=10.35.87
#export VERSIONDATE=20121206
#export VERSION=10.35.88
#export VERSIONDATE=20130220
#export VERSION=10.35.89
#export VERSIONDATE=20130504
#export VERSION=10.35.90
#export VERSIONDATE=20130926
#export VERSION=10.35.91
#export VERSIONDATE=20131224
#export VERSION=10.35.92
#export VERSIONDATE=20140330
#export VERSION=10.35.93
#export VERSIONDATE=20140630
####converter/ppm/ppmtompeg/headers/jpeg.h:11: error: expected ')' before '*' token
#export VERSION=10.35.94
#export VERSIONDATE=20140926
#export VERSION=10.35.95
#export VERSIONDATE=20141226
#export VERSION=10.35.96
#export VERSIONDATE=20150629
#export VERSION=10.35.97
#export VERSIONDATE=20150927
#export VERSION=10.35.98
#export VERSIONDATE=20151026
#export VERSION=10.47.60
#export VERSIONDATE=20160405
#export VERSION=10.47.61
#export VERSIONDATE=20160509
#export VERSION=10.47.62
#export VERSIONDATE=20160627
#export VERSION=10.47.63
#export VERSIONDATE=20160927
#export VERSION=10.47.64
#export VERSIONDATE=20170328
#export VERSION=10.47.65
#export VERSIONDATE=20170629
#export VERSION=10.47.66
#export VERSIONDATE=20170928
####converter/ppm/ppmtompeg/headers/jpeg.h:11:10: error: unknown type name 'MpegFrame'
#export VERSION=10.47.67
#export VERSIONDATE=20171231
#export VERSION=10.47.68
#export VERSIONDATE=20180326
#export VERSION=10.47.69
#export VERSIONDATE=20180627
#export VERSION=10.47.70
#export VERSIONDATE=20180929
#export VERSION=10.47.71
#export VERSIONDATE=20181206
#export VERSION=10.47.72
#export VERSIONDATE=20190331
#export VERSION=10.47.73
#export VERSIONDATE=20190629
#export VERSION=10.73.28
#export VERSIONDATE=20190629
#export VERSION=10.73.29
#export VERSIONDATE=20190929
#export VERSION=10.73.30
#export VERSIONDATE=20191227
####lib/importinc/pm.h:16:10: fatal error: netpbm/pm_config.h: No such file or directory
#export VERSION=10.73.31
#export VERSIONDATE=20200326
#export VERSION=10.73.32
#export VERSIONDATE=20200628
#export VERSION=10.73.33
#export VERSIONDATE=20200927
#export VERSION=10.73.34
#export VERSIONDATE=20201228
#export VERSION=10.73.35
#export VERSIONDATE=20210328
#export VERSION=10.73.36
#export VERSIONDATE=20210701
#export VERSION=10.73.37
#export VERSIONDATE=20210926
#export VERSION=10.73.38
#export VERSIONDATE=20211226
#export VERSION=10.73.39
#export VERSIONDATE=20220327
#export VERSION=10.73.40
#export VERSIONDATE=20220624
#export VERSION=10.73.41
#export VERSIONDATE=20220925
#export VERSION=10.73.42
#export VERSIONDATE=20221231
#export VERSION=10.73.43
#export VERSIONDATE=20230325
#export VERSION=10.86.39
#export VERSIONDATE=20231202
#export VERSION=10.86.40
#export VERSIONDATE=20231229
export VERSION=10.86.41
export VERSIONDATE=20240331
wl-showstatus --package-version
export DEPENDENCIES=zlib,libjpeg,libpng,libtiff,jasper,jbigkit,libx11,libxml2
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
#export DOWNLOADURL="http://heanet.dl.sourceforge.net/sourceforge/gnuwin32/ netpbm- -bin.zip"
#export DOWNLOADURL="http://sourceforge.net/project/showfiles.php?group_id=23617&package_id=16357 netpbm- -bin.zip"
export DOWNLOADURL="http://sourceforge.net/projects/netpbm/files/super_stable/ netpbm- -bin.zip"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://heanet.dl.sourceforge.net/sourceforge/gnuwin32/netpbm-$VERSION-bin.zip
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/netpbm/super_stable/$VERSION/netpbm-$VERSION.tgz
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/netpbm/super_stable/$VERSION/netpbm-$VERSION.tgz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#unzip -oq $TARBALLDIR/$BASENAME/netpbm-10.27-bin.zip -d $INSTALLPREFIX
tar xz --force-local -f $TARBALLDIR/$BASENAME/netpbm-$VERSION.tgz
cd $BASENAME-$VERSION
# fix missing sys/wait.h in urt/rle_open_f.c
patch -ulbf urt/rle_open_f.c << EOF
--- urt/rle_open_f.c  2006-08-19 05:12:28 +0200
+++ urt/rle_open_f.c  2011-02-21 00:06:58 +0100
@@ -20,3 +20,5 @@
 #include <signal.h>
+#ifndef __MINGW32__
 #include <sys/wait.h>
+#endif
 #include <errno.h>
EOF
# fix missing sys/utsname.h in converter/ppm/ppmtompeg/ppmtompeg.c (version >= 10.35.81)
mkdir -p converter/ppm/ppmtompeg/sys
touch converter/ppm/ppmtompeg/sys/utsname.h
# fix missing netinet/in.h in converter/ppm/ppmtompeg/byteorder.h (version >= 10.35.81)
mkdir -p converter/ppm/ppmtompeg/netinet
echo "#include <winsock2.h>" > converter/ppm/ppmtompeg/netinet/in.h
## fix redefinition of boolean in converter/ppm/ppmtompeg/headers/general.h
#mv converter/ppm/ppmtompeg/headers/general.h converter/ppm/ppmtompeg/headers/general.h.bak
#echo "#include <jpeg.h>" > converter/ppm/ppmtompeg/headers/general.h
#cat converter/ppm/ppmtompeg/headers/general.h.bak >> converter/ppm/ppmtompeg/headers/general.h
# fix redefinition of boolean in converter/ppm/ppmtompeg/headers/general.h (version >= 10.73.43)
patch -ulbf converter/ppm/ppmtompeg/headers/general.h << EOF
@@ -113,2 +113,5 @@

+#include <jpeg.h>
+#undef boolean
+#define boolean NETPBM_boolean
 typedef int boolean;
EOF
# fix invalid type of specificsOn in converter/ppm/ppmtompeg/headers/frames.h
mv converter/ppm/ppmtompeg/headers/frames.h converter/ppm/ppmtompeg/headers/frames.h.bak
sed -e "s/int\( specificsOn;\)/boolean\1/" converter/ppm/ppmtompeg/headers/frames.h.bak > converter/ppm/ppmtompeg/headers/frames.h
# fix missing files
mkdir -p converter/ppm/ppmtompeg/sys
touch converter/ppm/ppmtompeg/sys/times.h
# fix converter/ppm/ppmtompeg/gethostname.c
patch -ulbf converter/ppm/ppmtompeg/gethostname.c << EOF
--- converter/ppm/ppmtompeg/gethostname.c  2011-11-25 08:07:04 +0100
+++ converter/ppm/ppmtompeg/gethostname.c  2011-11-25 08:07:10 +0100
@@ -15,2 +15,3 @@
 -----------------------------------------------------------------------------*/
+#ifndef __MINGW32__
     struct utsname utsname;
@@ -25,2 +26,8 @@
     return strdup(utsname.nodename);
+#else
+    char hostname[256];
+    if (gethostname(hostname, sizeof(hostname)) != 0)
+        pm_error("Unable to find out host name.");
+    return strdup(hostname);
+#endif
 }
EOF
# fix missing sleep in converter/ppm/ppmtompeg/combine.c
mv converter/ppm/ppmtompeg/combine.c converter/ppm/ppmtompeg/combine.c.bak
echo "#define sleep(t) _sleep((t) * 1000)" > converter/ppm/ppmtompeg/combine.c
cat converter/ppm/ppmtompeg/combine.c.bak >> converter/ppm/ppmtompeg/combine.c
# fix missing sleep in converter/ppm/ppmtompeg/mpeg.c
mv converter/ppm/ppmtompeg/mpeg.c converter/ppm/ppmtompeg/mpeg.c.bak
echo "#define sleep(t) _sleep((t) * 1000)" > converter/ppm/ppmtompeg/mpeg.c
cat converter/ppm/ppmtompeg/mpeg.c.bak >> converter/ppm/ppmtompeg/mpeg.c
## fix copying . (version >= 10.47.61)
#mv common.mk common.mk.bak &&
#sed -e "s/\((SYMLINK) \). /\1 * /" common.mk.bak > common.mk
## fix converter/other/pstopnm.c (version <= 10.73.43)
#patch -ulbf converter/other/pstopnm.c << EOF
#@@ -24,4 +24,10 @@
# #include <stdio.h>
#+#ifndef __MINGW32__
# #include <signal.h>
# #include <sys/wait.h>
#+#else
#+#include <fcntl.h>
#+#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
#+#define lstat stat
#+#endif
# #include <sys/stat.h>
#@@ -795,3 +801,5 @@
#         */
#+#ifndef __MINGW32__
#         signal(SIGPIPE, SIG_IGN);
#+#endif
#EOF
# fix converter/other/tifftopnm.c (version >= 10.86.39)
patch -ulbf converter/other/tifftopnm.c << EOF
@@ -846,2 +846,3 @@

+#ifdef WIFSIGNALED
                 if (WIFSIGNALED(terminationStatus))
@@ -850,3 +851,6 @@
                              WTERMSIG(terminationStatus));
-                else if (!WIFEXITED(terminationStatus))
+                else
+#endif
+#ifdef WIFEXITED
+                if (!WIFEXITED(terminationStatus))
                     pm_error("Shell process died, but its termination status "
@@ -854,3 +858,8 @@
                 else
+#endif
+#ifdef WEXITSTATUS
                     exit(WEXITSTATUS(terminationStatus));
+#else
+                    pm_error("Shell process died (termination status unknown on Windows)");
+#endif
             }
EOF
## fix missing pipe in pm_config.in.h (version >= 10.73.28 <= 10.73.42)
#patch -ulbf pm_config.in.h << EOF
#@@ -338,3 +338,8 @@
#
#-#if MSVCRT
#+#if __MINGW32__
#+  #include <fcntl.h>
#+  #define pm_pipe(fds) _pipe(fds, 4096, _O_BINARY)
#+  #define fork() -1
#+  #define waitpid(p,s,o) -1
#+#elif MSVCRT
#   #define pm_pipe _pipe
#EOF
# fix missing pipe in pm_config.in.h (version >= 10.73.43)
patch -ulbf pm_config.in.h << EOF
@@ -332,3 +332,4 @@

-#if MSVCRT
+#ifdef _WIN32
+  #include <direct.h>
   #define pm_mkdir(dir, perm) _mkdir(dir)
@@ -338,3 +339,8 @@

-#if MSVCRT
+#ifdef _WIN32
+  #include <fcntl.h>
+  #define pm_pipe(fds) _pipe(fds, 4096, _O_BINARY)
+  #define fork() -1
+  #define waitpid(p,s,o) -1
+#elif MSVCRT
   #define pm_pipe _pipe
EOF
## fix lib/libsystem.c (version >= 10.73.28 <= 10.73.43)
#patch -ulbf lib/libsystem.c << EOF
#@@ -133,2 +133,5 @@
# -----------------------------------------------------------------------------*/
#+#ifdef __MINGW32__
#+    pm_error("fork() not implemented in Windows");
#+#else
#     int pipeToFeed[2];
#@@ -153,2 +156,3 @@
#     }
#+#endif
# }
#@@ -184,2 +188,5 @@
# 
#+#ifdef __MINGW32__
#+    pm_error("fork() not implemented in Windows");
#+#else
#     rc = fork();
#@@ -216,2 +223,3 @@
#     }
#+#endif
# }
#@@ -238,44 +246,74 @@
#     switch (signalClass) {
#+#ifdef SIGHUP
#     case SIGHUP: /* POSIX.1 */
#         return "SIGHUP";
#+#endif
#     case SIGINT: /* POSIX.1 */
#         return "SIGINT";
#+#ifdef SIGQUIT
#     case SIGQUIT: /* POSIX.1 */
#         return "SIGQUIT";
#+#endif
#     case SIGILL: /* POSIX.1 */
#         return "SIGILL";
#+#ifdef SIGTRAP
#     case SIGTRAP:
#         return "SIGTRAP";
#+#endif
#     case SIGABRT: /* POSIX.1 */
#         return "SIGABRT";
#+#ifdef SIGBUS
#     case SIGBUS:
#         return "SIGBUS";
#+#endif
#     case SIGFPE: /* POSIX.1 */
#         return "SIGFPE";
#+#ifdef SIGKILL
#     case SIGKILL: /* POSIX.1 */
#         return "SIGKILL";
#+#endif
#+#ifdef SIGUSR1
#     case SIGUSR1: /* POSIX.1 */
#         return "SIGUSR1";
#+#endif
#     case SIGSEGV: /* POSIX.1 */
#         return "SIGSEGV";
#+#ifdef SIGUSR2
#     case SIGUSR2: /* POSIX.1 */
#         return "SIGUSR2";
#+#endif
#+#ifdef SIGPIPE
#     case SIGPIPE: /* POSIX.1 */
#         return "SIGPIPE";
#+#endif
#+#ifdef SIGALRM
#     case SIGALRM: /* POSIX.1 */
#         return "SIGALRM";
#+#endif
#     case SIGTERM: /* POSIX.1 */
#         return "SIGTERM";
#+#ifdef SIGCHLD
#     case SIGCHLD: /* POSIX.1 */
#         return "SIGCHLD";
#+#endif
#+#ifdef SIGCONT
#     case SIGCONT: /* POSIX.1 */
#         return "SIGCONT";
#+#endif
#+#ifdef SIGSTOP
#     case SIGSTOP: /* POSIX.1 */
#         return "SIGSTOP";
#+#endif
#+#ifdef SIGTSTP
#     case SIGTSTP: /* POSIX.1 */
#         return "SIGTSTP";
#+#endif
#+#ifdef SIGTTIN
#     case SIGTTIN: /* POSIX.1 */
#         return "SIGTTIN";
#+#endif
#+#ifdef SIGTTOU
#     case SIGTTOU: /* POSIX.1 */
#         return "SIGTTOU";
#+#endif
# #ifdef SIGURG
#@@ -285,10 +323,18 @@
# #endif
#+#ifdef SIGXCPU
#     case SIGXCPU:
#         return "SIGXCPU";
#+#endif
#+#ifdef SIGXFSZ
#     case SIGXFSZ:
#         return "SIGXFSZ";
#+#endif
#+#ifdef SIGVTALRM
#     case SIGVTALRM:
#         return "SIGVTALRM";
#+#endif
#+#ifdef SIGPROF
#     case SIGPROF:
#         return "SIGPROF";
#+#endif
# #ifdef SIGWINCH
#@@ -306,4 +352,6 @@
# #endif
#+#ifdef SIGSYS
#     case SIGSYS:
#         return "SIGSYS";
#+#endif
#     default:
#@@ -317,3 +365,3 @@
# cleanupProcessorProcess(pid_t const processorPid) {
#-
#+#ifndef __MINGW32__
#     int terminationStatus;
#@@ -335,2 +383,3 @@
#     }
#+#endif
# }
#@@ -343,2 +392,5 @@
# 
#+#ifdef __MINGW32__
#+    pm_error("waitpid() not implemented in Windows");
#+#else
#     waitpid(feederPid, &status, 0);
#@@ -346,2 +398,3 @@
#     if (WIFSIGNALED(status)) {
#+#ifdef SIGPIPE
#         if (WTERMSIG(status) == SIGPIPE)
#@@ -353,2 +406,3 @@
#         else
#+#endif
#             pm_message("WARNING: "
#@@ -366,2 +420,3 @@
#                    "Standard Input feeder: %d", status);
#+#endif
# }
#EOF
# fix lib/libsystem.c (version >= 10.86.39)
patch -ulbf lib/libsystem.c << EOF
@@ -146,2 +146,5 @@
 -----------------------------------------------------------------------------*/
+#ifdef __MINGW32__
+    pm_error("fork() not implemented in Windows");
+#else
     int pipeToFeed[2];
@@ -169,2 +172,3 @@
     }
+#endif
 }
@@ -200,2 +204,5 @@

+#ifdef __MINGW32__
+    pm_error("fork() not implemented in Windows");
+#else
     rc = fork();
@@ -232,2 +239,3 @@
     }
+#endif
 }
@@ -254,44 +262,74 @@
     switch (signalClass) {
+#ifdef SIGHUP
     case SIGHUP: /* POSIX.1 */
         return "SIGHUP";
+#endif
     case SIGINT: /* POSIX.1 */
         return "SIGINT";
+#ifdef SIGQUIT
     case SIGQUIT: /* POSIX.1 */
         return "SIGQUIT";
+#endif
     case SIGILL: /* POSIX.1 */
         return "SIGILL";
+#ifdef SIGTRAP
     case SIGTRAP:
         return "SIGTRAP";
+#endif
     case SIGABRT: /* POSIX.1 */
         return "SIGABRT";
+#ifdef SIGBUS
     case SIGBUS:
         return "SIGBUS";
+#endif
     case SIGFPE: /* POSIX.1 */
         return "SIGFPE";
+#ifdef SIGKILL
     case SIGKILL: /* POSIX.1 */
         return "SIGKILL";
+#endif
+#ifdef SIGUSR1
     case SIGUSR1: /* POSIX.1 */
         return "SIGUSR1";
+#endif
     case SIGSEGV: /* POSIX.1 */
         return "SIGSEGV";
+#ifdef SIGUSR2
     case SIGUSR2: /* POSIX.1 */
         return "SIGUSR2";
+#endif
+#ifdef SIGPIPE
     case SIGPIPE: /* POSIX.1 */
         return "SIGPIPE";
+#endif
+#ifdef SIGALRM
     case SIGALRM: /* POSIX.1 */
         return "SIGALRM";
+#endif
     case SIGTERM: /* POSIX.1 */
         return "SIGTERM";
+#ifdef SIGCHLD
     case SIGCHLD: /* POSIX.1 */
         return "SIGCHLD";
+#endif
+#ifdef SIGCONT
     case SIGCONT: /* POSIX.1 */
         return "SIGCONT";
+#endif
+#ifdef SIGSTOP
     case SIGSTOP: /* POSIX.1 */
         return "SIGSTOP";
+#endif
+#ifdef SIGTSTP
     case SIGTSTP: /* POSIX.1 */
         return "SIGTSTP";
+#endif
+#ifdef SIGTTIN
     case SIGTTIN: /* POSIX.1 */
         return "SIGTTIN";
+#endif
+#ifdef SIGTTOU
     case SIGTTOU: /* POSIX.1 */
         return "SIGTTOU";
+#endif
 #ifdef SIGURG
@@ -301,10 +339,18 @@
 #endif
+#ifdef SIGXCPU
     case SIGXCPU:
         return "SIGXCPU";
+#endif
+#ifdef SIGXFSZ
     case SIGXFSZ:
         return "SIGXFSZ";
+#endif
+#ifdef SIGVTALRM
     case SIGVTALRM:
         return "SIGVTALRM";
+#endif
+#ifdef SIGPROF
     case SIGPROF:
         return "SIGPROF";
+#endif
 #ifdef SIGWINCH
@@ -322,4 +368,6 @@
 #endif
+#ifdef SIGSYS
     case SIGSYS:
         return "SIGSYS";
+#endif
     default:
@@ -350,2 +398,3 @@

+#ifdef WIFEXITED
     if (WIFEXITED(termStatus)) {
@@ -359,3 +408,6 @@
                         exitStatus);
-    } else if (WIFSIGNALED(termStatus)) {
+    } else
+#endif
+#ifdef WIFSIGNALED
+    if (WIFSIGNALED(termStatus)) {
         pm_asprintf(&retval, "Process was killed by a Class %u (%s) signal.",
@@ -363,3 +415,5 @@
                     signalName(WTERMSIG(termStatus)));
-    } else {
+    } else
+#endif
+    {
         pm_asprintf(&retval, "Process died, but its termination status "
@@ -377,2 +431,5 @@

+#ifdef __MINGW32__
+    pm_error("waitpid() not implemented in Windows");
+#else
     waitpid(feederPid, &status, 0);
@@ -400,2 +457,3 @@
                    "Standard Input feeder: %d", status);
+#endif
 }
EOF
# fix converter/other/pnmtops.c (version >= 10.73.31)
patch -ulbf converter/other/pnmtops.c << EOF
@@ -69,2 +69,3 @@

+#ifndef _WIN32
     struct sigaction sigchldAction;
@@ -84,2 +85,3 @@
                  "errno = %d (%s)", errno, strerror(errno));
+#endif
 }
EOF
## fix converter/other/pstopnm.c (version >= 10.73.31)
#patch -ulbf converter/other/pstopnm.c << EOF
#@@ -995,2 +995,3 @@
#         if (gsTermStatus != 0) {
#+#if defined(WIFEXITED) && defined(WIFSIGNALED)
#             if (WIFEXITED(gsTermStatus))
#@@ -1002,2 +1003,3 @@
#             else
#+#endif
#                 pm_error("Ghostscript process died with exit code %d",
#EOF
# fix converter/other/pstopnm.c (version >= 10.86.39)
patch -ulbf converter/other/pstopnm.c << EOF
@@ -267,3 +267,7 @@

+#ifdef _WIN32
+    statRc = stat(origFileName, &statbuf);
+#else
     statRc = lstat(origFileName, &statbuf);
+#endif

@@ -276,3 +280,7 @@

+#ifdef _WIN32
+        statRc = stat(fileNamePlusPs, &statbuf);
+#else
         statRc = lstat(fileNamePlusPs, &statbuf);
+#endif
         if (statRc == 0)
@@ -958,3 +966,5 @@
     */
+#ifdef SIGPIPE
     signal(SIGPIPE, SIG_IGN);
+#endif

@@ -1065,2 +1075,3 @@
         if (gsTermStatus != 0) {
+#ifdef WIFEXITED
             if (WIFEXITED(gsTermStatus))
@@ -1068,3 +1079,6 @@
                          WEXITSTATUS(gsTermStatus));
-            else if (WIFSIGNALED(gsTermStatus))
+            else
+#endif
+#ifdef WIFSIGNALED
+            if (WIFSIGNALED(gsTermStatus))
                 pm_error("Ghostscript process died because of a signal %d.",
@@ -1072,2 +1086,3 @@
             else
+#endif
                 pm_error("Ghostscript process died with exit code %d",
EOF
# fix missing file
mkdir -p winfix/sys
touch winfix/sys/wait.h
#mkdir -p lib/importinc/netpbm
#cp -f lib/*.h lib/importinc/netpbm/
#echo '#include "../pm_config.h"' > lib/importinc/netpbm/pm_config.h
# fix converter/ppm/ppmtompeg/bitio.c (version >= 10.73.43)
patch -ulbf converter/ppm/ppmtompeg/bitio.c << EOF
@@ -42,2 +42,9 @@
 #include <time.h>
+#include <string.h>
+#include <io.h>
+#include <stdio.h>
+#ifdef _WIN32
+#include <winsock2.h>
+#define write(fd,buf,count) send(fd,buf,count,0)
+#endif
 #include <unistd.h>
EOF
# fix editor/specialty/pnmindex.c (version >= 10.73.43)
patch -ulbf editor/specialty/pnmindex.c << EOF
@@ -22,2 +22,3 @@
 #include <stdarg.h>
+#include <io.h>
 #include <errno.h>
EOF
# fix converter/other/pnmtopclxl.c (version >= 10.73.43)
patch -ulbf converter/other/pnmtopclxl.c << EOF
@@ -27,2 +27,6 @@
 #include <string.h>
+#ifdef _WIN32
+#include <winsock2.h>
+#define write(fd,buf,count) send(fd,buf,count,0)
+#endif
 #include <unistd.h>
EOF
# fix undefined strlen in converter/ppm/ppmtompeg/frametype.c (version >= 10.73.43)
mv converter/ppm/ppmtompeg/frametype.c converter/ppm/ppmtompeg/frametype.c.bak
echo "#include <string.h>" > converter/ppm/ppmtompeg/frametype.c
cat converter/ppm/ppmtompeg/frametype.c.bak >> converter/ppm/ppmtompeg/frametype.c
# fix undefined strcmp in converter/ppm/ppmtompeg/psearch.c (version >= 10.73.43)
mv converter/ppm/ppmtompeg/psearch.c converter/ppm/ppmtompeg/psearch.c.bak
echo "#include <string.h>" > converter/ppm/ppmtompeg/psearch.c
cat converter/ppm/ppmtompeg/psearch.c.bak >> converter/ppm/ppmtompeg/psearch.c
# fix undefined strcmp in converter/ppm/ppmtompeg/bsearch.c (version >= 10.73.43)
mv converter/ppm/ppmtompeg/bsearch.c converter/ppm/ppmtompeg/bsearch.c.bak
echo "#include <string.h>" > converter/ppm/ppmtompeg/bsearch.c
cat converter/ppm/ppmtompeg/bsearch.c.bak >> converter/ppm/ppmtompeg/bsearch.c
## fix undefined lseek in converter/ppm/ppmtompeg/jpeg.c (version >= 10.73.43)
#mv converter/ppm/ppmtompeg/jpeg.c converter/ppm/ppmtompeg/jpeg.c.bak
#echo "#include <io.h>" > converter/ppm/ppmtompeg/jpeg.c
#cat converter/ppm/ppmtompeg/jpeg.c.bak >> converter/ppm/ppmtompeg/jpeg.c
# fix undefined lseek (version >= 10.73.43)
echo "#include_next <io.h>" >> lib/util/io.h
# fix incorrect HAVE_FORK (version >= 10.73.28)
sed -i.bak -e "s/\(#define HAVE_FORK \)1/\10/" GNUmakefile
# fix install issues (version >= 10.73.31)
sed -i.bak -e "s/\(\$(SYMLINK) pnmtoplainpnm\)\$(EXE)\( pnmnoraw\)\$(EXE)/\1\2/" converter/other/Makefile
sed -i.bak -e "s/\(\$(SYMLINK) pnmquantall\)\$(EXE)\( ppmquantall\)\$(EXE)/\1\2/" editor/Makefile
# fix lib directory in lib/Makefile
sed -i.bak -e "s?/link?/lib?g" lib/Makefile
#OSNAME="win"
#cat > answers << EOF
#
#win
#n
#n
#regular
#shared
#y
#<stdint.h>
#
#
#
#
#
#
#
#
#
#
#EOF
## prepare configuration answers (version <= 10.73.30)
#cat > answers << EOF
#
#win
#n
#n$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "
#y"; fi)
#regular
#shared
#y
#<stdint.h>
#
#
#
#
#
#
#
#
#
#EOF
## prepare configuration answers (version >= 10.73.31 <= 10.73.43)
#cat > answers << EOF
#
#win
#n
#n$(if ( echo $RUNPLATFORM | grep -vq "^i.86" ); then echo "
#y"; fi)
#regular
#shared
#y
#<stdint.h>
#y
#y
#-ljpeg
#
#-ltiff
#
#-lz
#
#
#
#
#EOF
# prepare configuration answers (version >= 10.86.39)
cat > answers << EOF

win
n
n
y

EOF
if ( echo $RUNPLATFORM | grep -q x86_64 ); then
  echo "y" >> answers
fi
cat >> answers << EOF
regular
shared
y
<stdint.h>
y
y
-ljpeg

-ltiff

-lz


EOF
wl-showstatus configure &&
 rm -f config.mk &&
 buildtools/configure.pl < answers &&
 echo "DONT_HAVE_PROCESS_MGMT=N" >> config.mk &&
 # remove unsupported -soname linker flag
 sed -i.bak -e "s/-Wl,-soname,[^ ]*//; s/-soname [^ ]*//" lib/Makefile &&
 wl-showstatus build &&
 #cp lib/importinc/netpbm/importinc/pm_config.h lib/importinc/netpbm/
 #make -j1 CC="${CC:-gcc} -I$(pwd)/lib/importinc" LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" &&
 #make -j1 CC=${CC:-gcc} LDFLAGS="-Wl,--as-needed -lws2_32" < answers &&
 #make -j1 CC=${CC:-gcc} LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" < answers &&
 #( make CC=${CC:-gcc} CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" < answers || make lib/all lib/util/all CC=${CC:-gcc} CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" < answers ) &&
 #( make CC=${CC:-gcc} CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" || make -j1 CC=${CC:-gcc} CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" || make lib/all lib/util/all CC=${CC:-gcc} CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" ) &&
 # fix missing isatty in converter/pbm/thinkjettopbm.c (version >= 10.73.43)
 make -Cconverter/pbm thinkjettopbm.c &&
 sed -i.bak -e "s/isatty( fileno(file) )/0/" converter/pbm/thinkjettopbm.c &&
 #( make CC=${CC:-gcc} WINDRES=${WINDRES:-windres} LD=${CC:-gcc} CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" ZLIB=-lz JBIGLIB=-ljbig JBIGHDR_DIR=$MINGWPREFIX/include JASPERLIB=-ljasper JASPERHDR_DIR=$MINGWPREFIX/include/jasper || make -j1 CC=${CC:-gcc} WINDRES=${WINDRES:-windres} LD=${CC:-gcc} CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" ZLIB=-lz JBIGLIB=-ljbig JBIGHDR_DIR=$MINGWPREFIX/include JASPERLIB=-ljasper JASPERHDR_DIR=$MINGWPREFIX/include/jasper ) &&
 ( make CC=${CC:-gcc} WINDRES=${WINDRES:-windres} LD=${CC:-gcc} CFLAGS="-I$(pwd)/winfix -Wno-incompatible-pointer-types" LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" ZLIB=-lz JBIGLIB=-ljbig JBIGHDR_DIR=$MINGWPREFIX/include JASPERLIB=-ljasper JASPERHDR_DIR=$MINGWPREFIX/include/jasper || make -j1 CC=${CC:-gcc} WINDRES=${WINDRES:-windres} LD=${CC:-gcc} CFLAGS="-I$(pwd)/winfix -Wno-incompatible-pointer-types" LDFLAGS="-Wl,--as-needed -lws2_32" SYMLINK="cp -rf" ZLIB=-lz JBIGLIB=-ljbig JBIGHDR_DIR=$MINGWPREFIX/include JASPERLIB=-ljasper JASPERHDR_DIR=$MINGWPREFIX/include/jasper ) &&
 wl-showstatus build-install &&
 #make install.lib install.sharedlibstub install.staticlib install.hdr pkgdir=$INSTALLPREFIX &&
 ( rm -rf $INSTALLPREFIX && make -j1 package pkgdir=$INSTALLPREFIX SYMLINK="cp -f" || ( rm -rf $INSTALLPREFIX && make install.lib install.sharedlibstub install.staticlib install.hdr pkgdir=$INSTALLPREFIX )) &&
 rm -f $INSTALLPREFIX/README $INSTALLPREFIX/VERSION $INSTALLPREFIX/*_template $INSTALLPREFIX/pkginfo &&
 # additional check to make sure installation worked
 ls -1 $INSTALLPREFIX/bin/xpmtoppm.exe &> /dev/null &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



#Makefile.config
#DEFAULT_TARGET = nonmerge
#BUILD_FIASCO = Y
#CC = gcc
#LD = $(CC)
#LINKERISCOMPILER=Y
#LINKER_CAN_DO_EXPLICIT_LIBRARY=Y
#INTTYPES_H = <stdint.h>
#HAVE_INT64 = Y
#CC_FOR_BUILD = $(CC)
#LD_FOR_BUILD = $(LD)
#CFLAGS_FOR_BUILD = $(CFLAGS)
#INSTALL = $(SRCDIR)/buildtools/install.sh
#STRIPFLAG = -s
#SYMLINK = cp -f
#MANPAGE_FORMAT = nroff
##MANPAGE_FORMAT = cat
#AR = ar
#RANLIB = ranlib
#LEX = flex
##LEX =
#CFLAGS= -O3
#EXE=.exe
#LDFLAGS += 
##LDSHLIB = -shared -Wl,-soname,$(SONAME)
##LDSHLIB = -shared -Wl,--image-base=0x10000000 -Wl,--enable-auto-import
#LDSHLIB = -shared -Wl,--enable-auto-import
#LDRELOC = NONE
#CFLAGS_SHLIB = 
##SHLIB_CLIB = -lc
#SHLIB_CLIB =
#NEED_RUNTIME_PATH = N
##RPATHOPTNAME = -rpath
#NETPBMLIB_RUNTIME_PATH = 
##NETPBMLIB_RUNTIME_PATH = /usr/lib/netpbm
##TIFFLIB = NONE
##TIFFHDR_DIR =
##TIFFLIB = libtiff.so
##TIFFHDR_DIR = /usr/include/libtiff
##TIFFLIB = -ltiff
#TIFFLIB = libtiff.dll
#TIFFHDR_DIR = /custombuilt32/include
#TIFFLIB_NEEDS_JPEG = Y
#TIFFLIB_NEEDS_Z = Y
##JPEGLIB = NONE
##JPEGHDR_DIR =
##JPEGLIB = ${LOCALBASE}/lib/libjpeg.so
##JPEGHDR_DIR = ${LOCALBASE}/include
##JPEGLIB = -ljpeg
#JPEGLIB = libjpeg.dll
#JPEGHDR_DIR = /custombuilt32/include
##PNGLIB = NONE
##PNGHDR_DIR =
#PNGVER = 
##PNGLIB = libpng$(PNGVER).so
##PNGHDR_DIR = /usr/include/libpng$(PNGVER)
#PNGLIB = -lpng
#PNGHDR_DIR = /custombuilt32/include
##ZLIB = NONE
##ZHDR_DIR = 
##ZLIB = libz.so
##ZLIB = -lz
#ZLIB = libz.dll
##JBIGLIB = $(BUILDDIR)/converter/other/jbig/libjbig.a
##JBIGHDR_DIR = $(SRCDIR)/converter/other/jbig
#JBIGLIB = -ljbig
#JBIGHDR_DIR = /custombuilt32/include
## The Jasper JPEG-2000 image compression library (aka JasPer):
##JASPERLIB = $(INTERNAL_JASPERLIB)
##JASPERHDR_DIR = $(INTERNAL_JASPERHDR_DIR)
#JASPERLIB = -ljasper
#JASPERHDR_DIR = /custombuilt32/include
## JASPERDEPLIBS is the libraries (-l options or file names) on which
## The Jasper library depends -- i.e. what you have to link into any
## executable that links in the Jasper library.
#JASPERDEPLIBS =
##JASPERDEPLIBS = -ljpeg
#
## And the Utah Raster Toolkit (aka URT aka RLE) library:
#
#URTLIB = $(BUILDDIR)/urt/librle.a
#URTHDR_DIR = $(SRCDIR)/urt
#
#X11LIB = NONE
#X11HDR_DIR =
##X11LIB = libX11.dll
#LINUXSVGALIB = NONE
#LINUXSVGAHDR_DIR = 
##LINUXSVGALIB = /usr/lib/libvga.so
##LINUXSVGAHDR_DIR = /usr/include/vgalib
##OMIT_NETWORK =
#OMIT_NETWORK=y
#NETWORKLD = 
#VMS = 
#DONT_HAVE_PROCESS_MGMT = Y
#
## The following variables are used only by 'make install' (and the
## variants of it).  Paths here don't, for example, get built into any
## programs.
#
## This is where everything goes when you do 'make package', unless you
## override it by setting 'pkgdir' on the Make command line.
#PKGDIR_DEFAULT = /tmp/netpbm
#
#PKGMANDIR = man
#INSTALL_PERM_BIN = 755
#INSTALL_PERM_LIBD = 755
#INSTALL_PERM_LIBS = 644
#INSTALL_PERM_HDR =  644
#INSTALL_PERM_MAN =  644
#INSTALL_PERM_DATA = 644
#SUFFIXMANUALS1 = 1
#SUFFIXMANUALS3 = 3
#SUFFIXMANUALS5 = 5
#
#NETPBMLIBTYPE = dll
#NETPBMLIBSUFFIX = dll
#
#STATICLIB_TOO=y
#STATICLIBSUFFIX = a
#SHLIBPREFIXLIST = lib
#NETPBMSHLIBPREFIX = $(firstword $(SHLIBPREFIXLIST))
##DLLVER =
#DLLVER = $(NETPBM_MAJOR_RELEASE)
#NETPBM_DOCURL = http://netpbm.sourceforge.net/doc/
##NETPBM_DOCURL = file:/usr/doc/netpbm/



#cp -f config.mk.in config.mk
#mkdir -p importinc/netpbm
#cp -f *.h importinc/netpbm
#cp -f lib/importinc/*.h importinc/netpbm
##mkdir -p importinc/sys
##touch importinc/sys/wait.h
#make -j1 OSNAME=win CC="${CC:-gcc} -I$(pwd)/importinc -I$(pwd)/winfix" NETPBMLIBTYPE=dll NETPBMLIBSUFFIX=dll EXE=.exe TIFFLIB=-ltiff TIFFHDR_DIR=$MINGWPREFIX/include JPEGLIB=-ljpeg JPEGHDR_DIR=$MINGWPREFIX/include PNGLIB=-lpng PNGLIBHDR_DIR=$MINGWPREFIX/include ZLIB=-lz JBIGLIB=-ljbig JBIGHDR_DIR=$MINGWPREFIX/include JASPERLIB=-ljasper JASPERHDR_DIR=$MINGWPREFIX/include/jasper OMIT_NETWORK=y NETWORKLD=-lws2_32 LEX=flex SYMLINK="cp -rf" SRCDIR=$(pwd) &&
##URTLIB = $(BUILDDIR)/urt/librle.a
##URTHDR_DIR = $(SRCDIR)/urt
##make package pkgdir=$INSTALLPREFIX &&
#    echo OK



