#export NAME="WTF"
#export STATUS=
#export URL=https://opensource.apple.com/tarballs/WTF/
#export BASENAME=wtf
#export DESCRIPTION="Apple Web Template Framework"
#export CATEGORY=development
#export TYPE=library
##export VERSION=7604.5.6.0.1
##export VERSIONDATE=20200407
##export VERSION=7607.2.6.1.1
##export VERSIONDATE=20190924
##export VERSION=7607.3.9
##export VERSIONDATE=20200401
##export VERSION=7608.2.30.1.1
##export VERSIONDATE=20200218
##export VERSION=7608.3.10.1.4
##export VERSIONDATE=20200404
##export VERSION=7608.4.9.1.3
##export VERSIONDATE=20200512
##export VERSION=7608.5.11
##export VERSIONDATE=20200512
##export VERSION=7609.2.9.1.2
##export VERSIONDATE=20200805
##export VERSION=7609.3.5.1.3
##export VERSIONDATE=20200916
##export VERSION=7610.2.11.51.8
##export VERSIONDATE=20210104
##export VERSION=7610.3.7.1.9
##export VERSIONDATE=20210130
##export VERSION=7610.4.3.1.4
##export VERSIONDATE=20210202
##export VERSION=7611.1.21.161.3
##export VERSIONDATE=20210515
##export VERSION=7611.1.21.0.13
##export VERSIONDATE=20210701
##export VERSION=7611.2.7.1.4
##export VERSIONDATE=20210701
##export VERSION=7610.3.7.0.3
##export VERSIONDATE=20210707
##export VERSION=7610.4.3.0.3
##export VERSIONDATE=20210721
##export VERSION=7611.2.7.0.4
##export VERSIONDATE=20210721
##export VERSION=7611.2.7.1.4
##export VERSIONDATE=20210816
#export VERSION=7611.3.10.1.3
#export VERSIONDATE=20220321
#####CMake Error at CMakeLists.txt:2 (include): include could not find load file: WebKitCommon
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
#export DOWNLOADURL="https://opensource.apple.com/tarballs/WTF/ WTF-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://opensource.apple.com/tarballs/WTF/WTF-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/WTF-$VERSION.tar.gz
#cd WTF-$VERSION
#  ./configure --help 2> /dev/null
#  cat meson_options.txt 2> /dev/null
#  head COPYING* LICENSE* COPYRIGHT*
#  ls -ld COPYING* LICENSE* COPYRIGHT* configure* m4 CMakeLists.txt cmake Makefile GNUmakefile setup.py scons SConscript SConstruct meson.build meson_options.txt *.pro build 2> /dev/null
#
##mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -S. -Bbuild_test -LH && echo OK; rm -rf build_test
#
##export BUILDDEPENDENCIES=cmake
##export OPTIONALBUILDDEPENDENCIES=
##PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK
#
##export BUILDDEPENDENCIES=cmake
##export OPTIONALBUILDDEPENDENCIES=
##mkdir -p build_static build_shared &&
## wl-showstatus configure &&
## cd build_static &&
## cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF .. &&
## cd .. &&
## wl-showstatus configure &&
## cd build_shared &&
## cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON .. &&
## cd .. &&
## wl-showstatus build-install &&
## make -Cbuild_static install/strip &&
## wl-showstatus build-install &&
## make -Cbuild_shared install/strip &&
##    echo OK
#
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf WTF-$VERSION
#####See also: https://github.com/WebKit/WebKit/blob/main/Introduction.md
#####See also: https://github.com/djmott/wtf



#export NAME="WTF"
#export STATUS=
#export URL=https://opensource.apple.com/tarballs/WTF/
#export BASENAME=wtf
#export DESCRIPTION="Apple Web Template Framework"
#export CATEGORY=development
#export TYPE=library
##export VERSION=7616.1.27.211.1
##export VERSIONDATE=20230928
##export VERSION=7616.2.9.11.7
##export VERSIONDATE=20231110
##export VERSION=7617.1.17.11.9
##export VERSIONDATE=20231220
##export VERSION=7617.2.4.11.8
##export VERSIONDATE=20240207
##export VERSION=7618.1.15.11.12
##export VERSIONDATE=20240402
##export VERSION=7618.2.12.11.6
##export VERSIONDATE=20240601
##export VERSION=7618.3.11.11.5
##export VERSIONDATE=20240821
#export VERSION=7619.1.26.30.5
#export VERSIONDATE=20240924
#wl-showstatus --package-version
#export DEPENDENCIES=icu
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ruby
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=Source/WTF/LICENSE-LLVM.txt
#export LICENSETYPE=Apache
#export DOWNLOADURL="https://github.com/apple-oss-distributions/WebKit/tags WebKit-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/apple-oss-distributions/WebKit/archive/refs/tags/WebKit-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#mkdir -p $BASENAME-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/WebKit-$VERSION.tar.gz -C$BASENAME-$VERSION
#cd $BASENAME-$VERSION/WebKit-WebKit-$VERSION
## fix Source/WTF/CMakeLists.txt (version >= 7616.1.27.211.1)
#mv Source/WTF/CMakeLists.txt Source/WTF/CMakeLists.txt.bak
#cat > Source/WTF/CMakeLists.txt << EOF
#cmake_minimum_required(VERSION 3.3)
#include("WebKitCommon")
#EOF
#cat Source/WTF/CMakeLists.txt.bak >> Source/WTF/CMakeLists.txt
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPORT:STRING=WinCairo -DENABLE_LAYOUT_TESTS:BOOL=OFF -DENABLE_API_TESTS:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$PWD/Source/cmake -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPERL_EXECUTABLE:FILEPATH=$PERLDIR/bin/perl.exe -DCMAKE_CXX_FLAGS:STRING="-I$(cygpath -m $PWD/Source/WTF) -I$(cygpath -m $PWD/Source/WTF/wtf)" -SSource/WTF -Bbuild_win &&
# wl-showstatus build &&
# ninja -Cbuild_win &&
# #wl-showstatus build-install &&
# #ninja -Cbuild_win install/strip &&
# strip build_win/bin*/*.dll &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/include/WTF $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# for F in $(find Source/WTF -name '*.h*'); do
#  mkdir -p $INSTALLPREFIX/include/WTF/$(dirname $F|sed -e "s?^Source/WTF??")
#  cp -f $F $INSTALLPREFIX/include/WTF/$(dirname $F|sed -e "s?^Source/WTF??")/
# done &&
# cp -f build_win/lib*/*.a $INSTALLPREFIX/lib/ &&
# cp -f build_win/bin*/*.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="WTF"
#export STATUS=
#export URL=https://opensource.apple.com/tarballs/WTF/
#export BASENAME=wtf
#export DESCRIPTION="Apple Web Template Framework"
#export CATEGORY=development
#export TYPE=library
##export VERSION=7604.5.6.0.1
##export VERSIONDATE=20200407
##export VERSION=7607.2.6.1.1
##export VERSIONDATE=20190924
##export VERSION=7607.3.9
##export VERSIONDATE=20200401
##export VERSION=7608.2.30.1.1
##export VERSIONDATE=20200218
##export VERSION=7608.3.10.1.4
##export VERSIONDATE=20200404
##export VERSION=7608.4.9.1.3
##export VERSIONDATE=20200512
##export VERSION=7608.5.11
##export VERSIONDATE=20200512
##export VERSION=7609.2.9.1.2
##export VERSIONDATE=20200805
##export VERSION=7609.3.5.1.3
##export VERSIONDATE=20200916
##export VERSION=7610.2.11.51.8
##export VERSIONDATE=20210104
##export VERSION=7610.3.7.1.9
##export VERSIONDATE=20210130
##export VERSION=7610.4.3.1.4
##export VERSIONDATE=20210202
##export VERSION=7611.1.21.161.3
##export VERSIONDATE=20210515
##export VERSION=7611.1.21.0.13
##export VERSIONDATE=20210701
##export VERSION=7611.2.7.1.4
##export VERSIONDATE=20210701
##export VERSION=7610.3.7.0.3
##export VERSIONDATE=20210707
##export VERSION=7610.4.3.0.3
##export VERSIONDATE=20210721
##export VERSION=7611.2.7.0.4
##export VERSIONDATE=20210721
##export VERSION=7611.2.7.1.4
##export VERSIONDATE=20210816
#export VERSION=7611.3.10.1.3
#export VERSIONDATE=20220321
#####CMake Error at CMakeLists.txt:2 (include): include could not find load file: WebKitCommon
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
#export DOWNLOADURL="https://opensource.apple.com/tarballs/WTF/ WTF-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://opensource.apple.com/tarballs/WTF/WTF-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/WTF-$VERSION.tar.gz
#cd WTF-$VERSION
#  ./configure --help 2> /dev/null
#  cat meson_options.txt 2> /dev/null
#  head COPYING* LICENSE* COPYRIGHT*
#  ls -ld COPYING* LICENSE* COPYRIGHT* configure* m4 CMakeLists.txt cmake Makefile GNUmakefile setup.py scons SConscript SConstruct meson.build meson_options.txt *.pro build 2> /dev/null
#
##mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -S. -Bbuild_test -LH && echo OK; rm -rf build_test
#
##export BUILDDEPENDENCIES=cmake
##export OPTIONALBUILDDEPENDENCIES=
##PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
#    echo OK
#
##export BUILDDEPENDENCIES=cmake
##export OPTIONALBUILDDEPENDENCIES=
##mkdir -p build_static build_shared &&
## wl-showstatus configure &&
## cd build_static &&
## cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF .. &&
## cd .. &&
## wl-showstatus configure &&
## cd build_shared &&
## cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON .. &&
## cd .. &&
## wl-showstatus build-install &&
## make -Cbuild_static install/strip &&
## wl-showstatus build-install &&
## make -Cbuild_shared install/strip &&
##    echo OK
#
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf WTF-$VERSION
#####See also: https://github.com/WebKit/WebKit/blob/main/Introduction.md
#####See also: https://github.com/djmott/wtf



export NAME="WTF"
export STATUS=
export URL=https://opensource.apple.com/tarballs/WTF/
export BASENAME=wtf
export DESCRIPTION="Apple Web Template Framework"
export CATEGORY=development
export TYPE=library
#export VERSION=7619.1.26.30.5
#export VERSIONDATE=20240924
#export VERSION=7619.1.26.31.6
#export VERSIONDATE=20241001
#export VERSION=7619.2.8.10.7
#export VERSIONDATE=20241123
export VERSION=7619.2.8.11.9
export VERSIONDATE=20241123
#export VERSION=7620.1.16.11.8
#export VERSIONDATE=20250128
#export VERSION=7621.1.15.11.10
#export VERSIONDATE=20250508
wl-showstatus --package-version
export DEPENDENCIES=icu
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ruby
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=Source/WTF/LICENSE-LLVM.txt
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/apple-oss-distributions/WebKit/tags WebKit-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/apple-oss-distributions/WebKit/archive/refs/tags/WebKit-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
tar xz --force-local -f $TARBALLDIR/$BASENAME/WebKit-$VERSION.tar.gz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/WebKit-WebKit-$VERSION
# fix Source/WTF/wtf/FunctionTraits.h (version >= 7619.2.8.11.9)
patch -ulbf Source/WTF/wtf/FunctionTraits.h << EOF
@@ -82,3 +82,3 @@
 };
-#endif
+#else

@@ -87,2 +87,3 @@
 };
+#endif

@@ -92,3 +93,3 @@
 };
-#endif
+#else

@@ -97,2 +98,3 @@
 };
+#endif

EOF
# fix Source/WTF/wtf/CurrentTime.cpp (version >= 7619.2.8.11.9)
patch -ulbf Source/WTF/wtf/CurrentTime.cpp << EOF
@@ -115,3 +115,3 @@
         else {
-            __int64 tickCountLarge = tickCount + 0x100000000I64;
+            __int64 tickCountLarge = tickCount + 0x100000000LL;
             tickCountElapsed = tickCountLarge - tickCountLast;
EOF
# fix undeclared ConstChar16Ptr in Source/WTF/wtf/text/StringView.cpp (version >= 7619.2.8.11.9)
mv Source/WTF/wtf/text/StringView.cpp Source/WTF/wtf/text/StringView.cpp.bak &&
echo "#include <unicode/unistr.h>" > Source/WTF/wtf/text/StringView.cpp &&
cat Source/WTF/wtf/text/StringView.cpp.bak >> Source/WTF/wtf/text/StringView.cpp
# fix undeclared ConstChar16Ptr in Source/WTF/wtf/unicode/icu/CollatorICU.cpp (version >= 7619.2.8.11.9)
mv Source/WTF/wtf/unicode/icu/CollatorICU.cpp Source/WTF/wtf/unicode/icu/CollatorICU.cpp.bak &&
echo "#include <unicode/unistr.h>" > Source/WTF/wtf/unicode/icu/CollatorICU.cpp &&
cat Source/WTF/wtf/unicode/icu/CollatorICU.cpp.bak >> Source/WTF/wtf/unicode/icu/CollatorICU.cpp
# fix undefined __try/__except in Source/WTF/wtf/win/ThreadingWin.cpp (version >= 7619.2.8.11.9)
patch -ulbf Source/WTF/wtf/win/ThreadingWin.cpp << EOF
@@ -132,2 +132,3 @@

+#ifdef _MSC_VER
     __try {
@@ -135,2 +136,3 @@
     } __except(EXCEPTION_CONTINUE_EXECUTION) { }
+#endif

EOF
## fix ambiguity in Source/WTF/wtf/FileSystem.cpp (version >= 7620.1.16.11.8)
#patch -ulbf Source/WTF/wtf/FileSystem.cpp << EOF
#@@ -842,5 +842,5 @@
#     auto possibleAncestorLexicallyNormal = lexicallyNormal(possibleAncestor);
#-    if (possibleChildLexicallyNormal.endsWith(std::filesystem::path::preferred_separator))
#+    if (possibleChildLexicallyNormal.endsWith(static_cast<UChar>(std::filesystem::path::preferred_separator)))
#         possibleChildLexicallyNormal = possibleChildLexicallyNormal.left(possibleChildLexicallyNormal.length() - 1);
#-    if (possibleAncestorLexicallyNormal.endsWith(std::filesystem::path::preferred_separator))
#+    if (possibleAncestorLexicallyNormal.endsWith(static_cast<UChar>(std::filesystem::path::preferred_separator)))
#         possibleAncestorLexicallyNormal = possibleAncestorLexicallyNormal.left(possibleAncestorLexicallyNormal.length() - 1);
#EOF
# fix Source/WTF/CMakeLists.txt (version >= 7616.1.27.211.1)
mv Source/WTF/CMakeLists.txt Source/WTF/CMakeLists.txt.bak
cat > Source/WTF/CMakeLists.txt << EOF
cmake_minimum_required(VERSION 3.3)
include("WebKitCommon")
EOF
cat Source/WTF/CMakeLists.txt.bak >> Source/WTF/CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DPORT:STRING=Win -DENABLE_LAYOUT_TESTS:BOOL=OFF -DENABLE_API_TESTS:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$PWD/Source/cmake -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPERL_EXECUTABLE:FILEPATH=$PERLDIR/bin/perl.exe -DCMAKE_CXX_FLAGS:STRING="-I$(cygpath -m $PWD/Source/WTF) -I$(cygpath -m $PWD/Source/WTF/wtf)" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -SSource/WTF -Bbuild_win &&
 wl-showstatus build &&
 ninja -Cbuild_win &&
 strip build_win/bin*/*.dll &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include/WTF $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 for F in $(find Source/WTF -name '*.h*'); do
  mkdir -p $INSTALLPREFIX/include/WTF/$(dirname $F|sed -e "s?^Source/WTF??")
  cp -f $F $INSTALLPREFIX/include/WTF/$(dirname $F|sed -e "s?^Source/WTF??")/
 done &&
 cp -f build_win/lib*/*.a $INSTALLPREFIX/lib/ &&
 cp -f build_win/bin*/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



