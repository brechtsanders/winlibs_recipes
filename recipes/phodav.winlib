export NAME="phodav"
export STATUS=
export URL=https://wiki.gnome.org/phodav
export BASENAME=phodav
export DESCRIPTION="phodav is a WebDav server implementation using libsoup (RFC 4918)."
export CATEGORY=communication
export TYPE=library
#export VERSION=2.4
#export VERSIONDATE=20200316
export VERSION=2.5
export VERSIONDATE=20200828
#export VERSION=3.0
#export VERSIONDATE=20220701
####meson.build:1:0: ERROR: Unknown options: "systemd, udev"
wl-showstatus --package-version
export DEPENDENCIES=glib2,libsoup-2.4,gettext,libxml2
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja,gtk-doc
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/phodav/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/phodav/$VERSION/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# skip building doc
sed -i.bak -e "s/^subdir('doc')/#&/" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Davahi=disabled -Dsystemd=disabled -Dudev=disabled -Dgtk_doc=disabled . build_both &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Davahi=disabled -Dsystemd=disabled -Dudev=disabled -Dgtk_doc=disabled . build_both &&
 wl-showstatus build-install &&
 PATH=$PYDIR:$PATH PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



