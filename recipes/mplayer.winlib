export NAME="MPlayer"
export STATUS=
export URL=http://www.mplayerhq.hu/
export BASENAME=mplayer
export DESCRIPTION="MPlayer is a movie player which runs on many systems."
export CATEGORY=audio,video
export TYPE=application
#export VERSION=1.1
#export VERSIONDATE=20130421
#export VERSION=1.1.1
#export VERSIONDATE=20130506
#export VERSION=1.2
#export VERSIONDATE=20151004
#export VERSION=1.3.0
#export VERSIONDATE=20160405
#export VERSION=1.4
#export VERSIONDATE=20190419
export VERSION=1.5
export VERSIONDATE=20220228
####mplayer.o:mplayer.c:(.text.startup+0xb00): undefined reference to `_load_termcap'
wl-showstatus --package-version
export DEPENDENCIES=libass,libbluray,libbz2,libdl,libmad,faac,faad2,fontconfig,freetype2,fribidi,libgsm,libiconv,libjpeg,lzo,lame,opencore-amr,libpng,pulseaudio,librtmp,schroedinger,libspeex,libtheora,x264,pthreads,xvidcore,zlib
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=yasm
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
export DOWNLOADURL="http://www.mplayerhq.hu/MPlayer/releases/ MPlayer-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=ftp://ftp.mplayerhq.hu/MPlayer/releases/MPlayer-$VERSION.tar.xz
export DOWNLOADSOURCEURL=http://www.mplayerhq.hu/MPlayer/releases/MPlayer-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xJ --force-local -f $TARBALLDIR/$BASENAME/MPlayer-$VERSION.tar.xz
cd MPlayer-$VERSION
## fix error in osdep/getch2.c
#cp -f osdep/getch2-win.c osdep/getch2.c
## fix missing include files
#mkdir -p winfix/sys
#touch winfix/sys/wait.h
#echo "#include <winsock2.h>" > winfix/sys/socket.h
# fix redefinition of LPBITMAPINFO in libmpdemux/demux_mng.c (version >= 1.3.0)
mv libmpdemux/demux_mng.c libmpdemux/demux_mng.c.bak
cat > libmpdemux/demux_mng.c << EOF
#define LPBITMAPINFO winLPBITMAPINFO
#include <windows.h>
#undef LPBITMAPINFO
EOF
cat libmpdemux/demux_mng.c.bak >> libmpdemux/demux_mng.c
# fix deprecated x264_bit_depth in recent ffmpeg/libavcodec/libx264.c (version >= 1.3.0)
sed -i.bak -e "s/x264_bit_depth/X264_BIT_DEPTH/" ffmpeg/libavcodec/libx264.c
# fix error: operand type mismatch for `shr' in ffmpeg/libavcodec/x86/mathops.h (version >= 1.5)
#### see also: https://git.ffmpeg.org/gitweb/ffmpeg.git/commitdiff/effadce6c756247ea8bae32dc13bb3e6f464f0eb
patch -ulbf ffmpeg/libavcodec/x86/mathops.h << EOF
@@ -37,2 +37,3 @@
     int rt, dummy;
+  if (__builtin_constant_p(shift))
     __asm__ (
@@ -41,3 +42,10 @@
         :"=a"(rt), "=d"(dummy)
-        :"a"(a), "rm"(b), "ci"((uint8_t)shift)
+        :"a"(a), "rm"(b), "i"(shift & 0x1F)
+    );
+  else
+    __asm__ (
+        "imull %3               \\n\\t"
+        "shrdl %4, %%edx, %%eax \\n\\t"
+        :"=a"(rt), "=d"(dummy)
+        :"a"(a), "rm"(b), "c"((uint8_t)shift)
     );
@@ -115,5 +123,11 @@
 static inline  int32_t NEG_SSR32( int32_t a, int8_t s){
+  if (__builtin_constant_p(s))
     __asm__ ("sarl %1, %0\\n\\t"
          : "+r" (a)
-         : "ic" ((uint8_t)(-s))
+         : "i" (-s & 0x1F)
+    );
+  else
+    __asm__ ("sarl %1, %0\\n\\t"
+           : "+r" (a)
+           : "c" ((uint8_t)(-s))
     );
@@ -124,5 +138,11 @@
 static inline uint32_t NEG_USR32(uint32_t a, int8_t s){
+  if (__builtin_constant_p(s))
     __asm__ ("shrl %1, %0\\n\\t"
          : "+r" (a)
-         : "ic" ((uint8_t)(-s))
+         : "i" (-s & 0x1F)
+    );
+  else
+    __asm__ ("shrl %1, %0\\n\\t"
+           : "+r" (a)
+           : "c" ((uint8_t)(-s))
     );
EOF
# fix configure
mv configure configure.bak
sed -e "s/\(MINGW32\*\))/\1\|MSYS*)/; s/\(mingw32\*\))/\1\|msys*)/" configure.bak > configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --disable-x11 --disable-caca --extra-cflags="-I$(pwd)/winfix" &&
 #./configure --prefix=$INSTALLPREFIX --disable-x11 --disable-caca --disable-unrarexec --disable-shm &&
 ./configure --prefix=$INSTALLPREFIX --disable-x11 --disable-caca --disable-unrarexec --disable-shm --extra-cflags="-I$MINGWPREFIX/include/libdl-win32 $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wint-conversion" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=int-conversion"; fi) $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types -Wno-incompatible-function-pointer-types"; fi)" &&
 wl-showstatus build &&
 echo "#undef HAVE_TERMCAP" >> config.h &&
 make -j1 &&
 wl-showstatus build-install &&
 make install &&
 #strip cpuinfo.exe &&
 #cp -f cpuinfo.exe $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf MPlayer-$VERSION
# Note: contains cpuinfo.exe (output similar to "cat /proc/cpuinfo" on Linux)



