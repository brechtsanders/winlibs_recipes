#export NAME="srtp2"
#export STATUS=
#export URL=https://github.com/cisco/libsrtp
#export BASENAME=srtp2
#export DESCRIPTION="The libSRTP library is an open-source implementation of the Secure Real-time Transport Protocol (SRTP) originally authored by Cisco Systems, Inc."
#export CATEGORY=audio,communication
#export TYPE=library
##export VERSION=2.1.0
##export VERSIONDATE=20170715
##export VERSION=2.2.0
##export VERSIONDATE=20180516
##export VERSION=2.3.0
##export VERSIONDATE=20191223
##export VERSION=2.4.0
##export VERSIONDATE=20210814
##export VERSION=2.4.1
##export VERSIONDATE=20210910
##export VERSION=2.4.2
##export VERSIONDATE=20210921
#export VERSION=2.5.0
#export VERSIONDATE=20230201
#wl-showstatus --package-version
#export DEPENDENCIES=openssl
##export OPTIONALDEPENDENCIES=winpcap
#export OPTIONALDEPENDENCIES=libpcap
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=BSD-style
#export DOWNLOADURL="https://github.com/cisco/libsrtp/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/cisco/libsrtp/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd libsrtp-$VERSION
## fix missing timersub in test/rtp_decoder.c
#mv test/rtp_decoder.c test/rtp_decoder.c.bak
#cat > test/rtp_decoder.c << EOF
##include <time.h>
##ifndef timersub
#/* This is a copy from GNU C Library (GNU LGPL 2.1), sys/time.h. */
## define timersub(a, b, result)                                               \\
#  do {                                                                        \\
#    (result)->tv_sec = (a)->tv_sec - (b)->tv_sec;                             \\
#    (result)->tv_usec = (a)->tv_usec - (b)->tv_usec;                          \\
#    if ((result)->tv_usec < 0) {                                              \\
#      --(result)->tv_sec;                                                     \\
#      (result)->tv_usec += 1000000;                                           \\
#    }                                                                         \\
#  } while (0)
##endif
#EOF
#cat test/rtp_decoder.c.bak >> test/rtp_decoder.c
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-openssl CFLAGS="-I$MINGWPREFIX/include/pcap" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-openssl CFLAGS="-fcommon -I$MINGWPREFIX/include/pcap" &&
# wl-showstatus build &&
# make all libsrtp2.a &&
# wl-showstatus build-install &&
# make install &&
# # manually create and install DLL
# grep -v "No newline at end of file" srtp.def > libsrtp2.def &&
# ${CC:-gcc} -shared -s -mwindows -def libsrtp2.def -Wl,--out-implib,libsrtp2.dll.a -o libsrtp2.dll libsrtp2.a -lws2_32 -leay32 &&
# mkdir -p $INSTALLPREFIX/bin &&
# cp -f libsrtp2.dll $INSTALLPREFIX/bin/ &&
# cp -f libsrtp2.dll.a $INSTALLPREFIX/lib/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libsrtp-$VERSION



export NAME="srtp2"
export STATUS=
export URL=https://github.com/cisco/libsrtp
export BASENAME=srtp2
export DESCRIPTION="The libSRTP library is an open-source implementation of the Secure Real-time Transport Protocol (SRTP) originally authored by Cisco Systems, Inc."
export CATEGORY=audio,communication
export TYPE=library
#export VERSION=2.5.0
#export VERSIONDATE=20230201
#export VERSION=2.6.0
#export VERSIONDATE=20240224
export VERSION=2.7.0
export VERSIONDATE=20250317
wl-showstatus --package-version
export DEPENDENCIES=openssl
export OPTIONALDEPENDENCIES=libpcap
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD-style
export DOWNLOADURL="https://github.com/cisco/libsrtp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/cisco/libsrtp/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd libsrtp-$VERSION
# fix srtp/srtp.c (version >= 2.6.0)
patch -ulbf srtp/srtp.c << EOF
@@ -531,3 +531,3 @@

-    debug_print(mod_srtp, "cloning stream (SSRC: 0x%08x)", ntohl(ssrc));
+    debug_print(mod_srtp, "cloning stream (SSRC: 0x%08x)", (unsigned int)ntohl(ssrc));

@@ -2535,3 +2535,3 @@
             debug_print(mod_srtp, "using provisional stream (SSRC: 0x%08x)",
-                        ntohl(hdr->ssrc));
+                        (unsigned int)ntohl(hdr->ssrc));

@@ -4284,3 +4284,3 @@
                         "srtcp using provisional stream (SSRC: 0x%08x)",
-                        ntohl(hdr->ssrc));
+                        (unsigned int)ntohl(hdr->ssrc));
         } else {
EOF
# fix crypto/kernel/alloc.c (version >= 2.6.0)
patch -ulbf crypto/kernel/alloc.c << EOF
@@ -82,4 +82,4 @@
     } else {
-        debug_print(srtp_mod_alloc, "allocation failed (asked for %zu bytes)\\n",
-                    size);
+        debug_print(srtp_mod_alloc, "allocation failed (asked for %lu bytes)\\n",
+                    (unsigned long)size);
     }
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_OPENSSL:BOOL=ON -DTEST_APPS:BOOL=OFF -DBUILD_WITH_WARNINGS:BOOL=OFF -DPCAP_LIBRARY_TEMP:FILEPATH="-lpcap" -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_OPENSSL:BOOL=ON -DLIBSRTP_TEST_APPS:BOOL=OFF -DTEST_APPS:BOOL=OFF -DBUILD_WITH_WARNINGS:BOOL=OFF -DPCAP_LIBRARY_TEMP:FILEPATH="-lpcap" -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_OPENSSL:BOOL=ON -DTEST_APPS:BOOL=OFF -DBUILD_WITH_WARNINGS:BOOL=OFF -DPCAP_LIBRARY_TEMP:FILEPATH="-lpcap" -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_OPENSSL:BOOL=ON -DLIBSRTP_TEST_APPS:BOOL=OFF -DBUILD_WITH_WARNINGS:BOOL=OFF -DPCAP_LIBRARY_TEMP:FILEPATH="-lpcap" -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/lib/pkgconfig &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 sed -e "s?@prefix@?\${pcfiledir}/../..?; s???; s?@libdir@?\${exec_prefix}/lib?; s?@includedir@?\${prefix}/include?; s?@PACKAGE_NAME@?$BASENAME?; s?@PACKAGE_VERSION@?$VERSION?; s?@LIBS@?-lcrypto -lws2_32 -lgdi32 -lcrypt32?" libsrtp2.pc.in > $INSTALLPREFIX/lib/pkgconfig/libsrtp2.pc &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libsrtp-$VERSION



