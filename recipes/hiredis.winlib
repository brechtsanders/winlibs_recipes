#export NAME="hiredis-mingw"
#export STATUS=
#export URL=https://github.com/halybang/hiredis-mingw
#export BASENAME=hiredis-mingw
#export DESCRIPTION="Minimalistic C client for Redis >= 1.2, Update for MinGW compatible, support build on Windows"
#export CATEGORY=database
#export TYPE=library
#export VERSION=0.11.0
#export VERSIONDATE=20170727
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=BSD
#export DOWNLOADURL="https://github.com/halybang/hiredis-mingw/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/halybang/hiredis-mingw/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
#mkdir -p winfix/sys
#echo "#include <winsock2.h>" > winfix/sys/socket.h
#touch winfix/sys/select.h
#patch -ulbf net.c << EOF
#@@ -34,2 +34,7 @@
# #include <sys/types.h>
#+#ifdef _WIN32
#+#include <winsock2.h>
#+#include <ws2tcpip.h>
#+#define strerror_r(a,b,c) (strerror_s((b),(c),(a)))
#+#else
# #include <sys/socket.h>
#@@ -40,2 +45,3 @@
# #include <arpa/inet.h>
#+#endif
# #include <unistd.h>
#@@ -43,3 +49,5 @@
# #include <string.h>
#+#ifndef _WIN32
# #include <netdb.h>
#+#endif
# #include <errno.h>
#@@ -47,3 +55,5 @@
# #include <stdio.h>
#+#ifndef _WIN32
# #include <poll.h>
#+#endif
# #include <limits.h>
#@@ -67,3 +77,7 @@
# static int redisSetReuseAddr(redisContext *c, int fd) {
#+#ifdef _WIN32
#+    BOOL on = 1;
#+#else
#     int on = 1;
#+#endif
#     if (setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, &on, sizeof(on)) == -1) {
#EOF
#wl-showstatus build
#make DYLIBSUFFIX=dll CFLAGS="-I$(pwd)/winfix" &&
#    echo OK
#wl-showstatus configure &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="hiredis"
export STATUS=
export URL=https://github.com/redis/hiredis
export BASENAME=hiredis
export DESCRIPTION="Minimalistic C client for Redis"
export CATEGORY=database
export TYPE=library
#export VERSION=0.13.3
#export VERSIONDATE=20151214
#export VERSION=0.14.0
#export VERSIONDATE=20180926
####net.c:37:24: fatal error: sys/socket.h: No such file or directory
#export VERSION=0.14.1
#export VERSIONDATE=20200316
#export VERSION=1.0.0
#export VERSIONDATE=20200804
#export VERSION=1.0.1
#export VERSIONDATE=20211005
export VERSION=1.0.2
export VERSIONDATE=20211008
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="https://github.com/redis/hiredis/releases v"
export DOWNLOADURL="https://github.com/redis/hiredis/tags v"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/redis/hiredis/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/redis/hiredis/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix net.c (version <= 0.14.1)
#patch -ulbf net.c << EOF
#@@ -36,2 +36,7 @@
# #include <sys/types.h>
#+#ifdef _WIN32
#+#include <winsock2.h>
#+#include <ws2tcpip.h>
#+#define strerror_r(a,b,c) (strerror_s((b),(c),(a)))
#+#else
# #include <sys/socket.h>
#@@ -42,2 +47,3 @@
# #include <arpa/inet.h>
#+#endif
# #include <unistd.h>
#@@ -45,3 +51,5 @@
# #include <string.h>
#+#ifndef _WIN32
# #include <netdb.h>
#+#endif
# #include <errno.h>
#@@ -49,3 +57,5 @@
# #include <stdio.h>
#+#ifndef _WIN32
# #include <poll.h>
#+#endif
# #include <limits.h>
#EOF
## fix net.c (version <= 0.14.1)
#patch -ulbf net.c << EOF
#@@ -37,2 +37,6 @@
# #ifdef _WIN32
#+#if _WIN32_WINNT < 0x0600
#+#undef _WIN32_WINNT
#+#define _WIN32_WINNT 0x0600
#+#endif
# #include <winsock2.h>
#@@ -113,2 +117,6 @@
# static int redisSetBlocking(redisContext *c, int blocking) {
#+#ifdef _WIN32
#+    u_long blockingmode = (blocking ? 0 : 1);
#+    return (ioctlsocket(c->fd, FIONBIO, &blockingmode) == 0 ? REDIS_ERR : REDIS_ERR);
#+#else
#     int flags;
#@@ -135,2 +143,3 @@
#     return REDIS_OK;
#+#endif
# }
#@@ -175,3 +184,3 @@
#
#-    return REDIS_OK;
#+    return REDIS_ERR;
# }
#@@ -441,2 +450,5 @@
# int redisContextConnectUnix(redisContext *c, const char *path, const struct timeval *timeout) {
#+#ifdef _WIN32
#+    return REDIS_ERR;
#+#else
#     int blocking = (c->flags & REDIS_BLOCK);
#@@ -486,2 +498,3 @@
#     return REDIS_OK;
#+#endif
# }
#EOF
# fix net.c (version >= 1.0.2)
patch -ulbf net.c << EOF
@@ -1 +1,5 @@
+#if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600
+#undef _WIN32_WINNT
+#define _WIN32_WINNT 0x0600
+#endif
 /* Extracted from anet.c to work properly with Hiredis error reporting.
@@ -36,2 +40,7 @@
 #include <sys/types.h>
+#ifdef _WIN32
+#include <winsock2.h>
+#include <ws2tcpip.h>
+#define strerror_r(a,b,c) (strerror_s((b),(c),(a)))
+#else
 #include <fcntl.h>
@@ -42,2 +51,3 @@
 #include <limits.h>
+#endif
 #include <stdlib.h>
EOF
## fix test.c
#patch -ulbf test.c << EOF
#@@ -862,3 +862,5 @@
#     /* Ignore broken pipe signal (for I/O error tests). */
#+#ifdef SIGPIPE
#     signal(SIGPIPE, SIG_IGN);
#+#endif
#
#EOF
# fix missing strerror_r
mv hiredis.c hiredis.c.bak &&
if ! gcc --version | grep -q MinGW-W64; then
echo "#define strerror_r(a,b,c) (strerror_s((b),(c),(a)))" > hiredis.c
else
echo "#define strerror_r(a,b,c) (strncpy(b,strerror(a),c-1),b[c-1]=0,b)" > hiredis.c
fi &&
cat hiredis.c.bak >> hiredis.c
# fix Makefile
sed -i.bak -e "s/^\(DYLIBSUFFIX=\)so$/\1dll/; s/^\(DYLIB_MAKE_CMD=.*\)-Wl,-soname,\$(DYLIB_MINOR_NAME)/\1-s -Wl,--out-implib,\$(DYLIBNAME).a/; s/^\s\$(DYLIB_MAKE_CMD).*$/& -Wl,--as-needed -lws2_32/; s/^\s\$(CC).*\$(REAL_LDFLAGS).*$/& -Wl,--as-needed -lws2_32/; s/cd \$(INSTALL_LIBRARY_PATH) \&\& ln -sf .*/cp -f \$(DYLIBNAME).a \$(INSTALL_LIBRARY_PATH)\//" Makefile
# avoid -fPIC (useless on Windows and not supported by clang) in Makefile
sed -i.bak2 -e "s/-fPIC//" Makefile
wl-showstatus build &&
 make CC=gcc &&
 wl-showstatus install &&
 make install PREFIX=$INSTALLPREFIX INCLUDE_PATH=include/hiredis LIBRARY_PATH=lib PKGCONF_PATH=pkgconfig &&
 mkdir -p $INSTALLPREFIX/bin &&
 rm -f $INSTALLPREFIX/lib/libhiredis.dll.[0-9]* &&
 cp -f *.dll $INSTALLPREFIX/bin/ &&
 # fix references to /usr/local in hiredis.pc (version >= 2019.0.0)
 sed -i -e "s?^\(prefix=\).*?\1$INSTALLPREFIX?; s?^\(libdir=\).*?\1\${prefix}/lib?; s?^\(includedir=\).*?\1\${prefix}/include/hiredis?" $INSTALLPREFIX/lib/pkgconfig/hiredis.pc &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####See also: https://github.com/halybang/hiredis-mingw/releases



