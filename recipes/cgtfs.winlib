export NAME="CGTFS"
export STATUS=
#export URL=https://rakhack.github.io/cgtfs/
export URL=https://github.com/4rterius/cgtfs
export BASENAME=cgtfs
export DESCRIPTION="C library to read GTFS feeds"
export CATEGORY=fileformat,communication
export TYPE=library
export VERSION=0.5.0
export VERSIONDATE=20240729
wl-showstatus --package-version
export DEPENDENCIES=greatest
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/4rterius/cgtfs/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/4rterius/cgtfs/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# use already installed sqlite3
sed -i.bak -e "s?sqlite3/src/\(sqlite3\.h\)?\1?" includes/database/database.h includes/database/database_types.h includes/database/database_utils.h
# also allow building shared library
sed -i.bak -e "s/\(add_library([^ ]*\) STATIC/\1/" CMakeLists.txt
# don't rebuild sqlite3 and skip examples and tests
sed -i.bak2 -e "s/^.*\(sqlite3\|third_party\|example\|tests\)/#&/" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-DSTRSAFE_NO_DEPRECATE" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_static &&
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_C_FLAGS:STRING="-DSTRSAFE_NO_DEPRECATE" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lsqlite3/" build_shared/build.ninja &&
 wl-showstatus build-static &&
 ninja -Cbuild_static &&
 wl-showstatus build-shared &&
 ninja -Cbuild_shared &&
 #wl-showstatus build-install-static &&
 #ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install-shared &&
 #ninja -Cbuild_shared install/strip &&
 wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX/include/cgtfs $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f includes/*.h $INSTALLPREFIX/include/cgtfs/ &&
 cp -f build_static/*.a build_shared/*.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



