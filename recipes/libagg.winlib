export NAME="libagg"
export STATUS=
export URL=http://www.antigrain.com/
#export URL=http://agg.sourceforge.net/antigrain.com/
#export URL=https://sourceforge.net/projects/agg/
export BASENAME=libagg
export DESCRIPTION="Anti-Grain Geometry (AGG) is an Open Source, free of charge graphic library, written in industrially standard C++."
export CATEGORY=graphics
export TYPE=library
export VERSION=2.5
export VERSIONDATE=20091125
#export VERSION=svn-r134
#export VERSIONDATE=20200409
wl-showstatus --package-version
export DEPENDANCIES=sdl
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=copying
export LICENSETYPE=GPL2
#export DOWNLOADURL="http://www.antigrain.com/download/ agg-"
#export DOWNLOADURL="https://sourceforge.net/p/agg/svn/HEAD/tree/"
export DOWNLOADURL="http://svn.code.sf.net/p/agg/svn/agg-web/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.antigrain.com/agg-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://distro.ibiblio.org/rootlinux/rootlinux-ports/bopt/libagg/agg-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://sourceforge.net/code-snapshots/svn/a/ag/agg/svn/agg-$VERSION.zip
export DOWNLOADSOURCEURL=http://svn.code.sf.net/p/agg/svn/agg-web/agg-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/agg-$VERSION.tar.gz
#unzip -oq $TARBALLDIR/$BASENAME/agg-$VERSION.zip
cd agg-$VERSION
# fix missing GWL_USERDATA in src/platform/win32/agg_platform_support.cpp for 64-bit
mv src/platform/win32/agg_platform_support.cpp src/platform/win32/agg_platform_support.cpp.bak
#echo "#define GWL_USERDATA -21" > src/platform/win32/agg_platform_support.cpp
cat > src/platform/win32/agg_platform_support.cpp << EOF
#include <windows.h>
#include <winuser.h>
#ifndef GWL_USERDATA
#define GWL_USERDATA (-21)
#endif
EOF
cat src/platform/win32/agg_platform_support.cpp >> src/platform/win32/agg_platform_support.cpp.bak
# fix include/agg_renderer_outline_aa.h
####include/agg_renderer_outline_aa.h:1378:45: error: binding reference of type 'agg::line_profile_aa&' to 'const agg::line_profile_aa' discards qualifiers
patch -ulbf include/agg_renderer_outline_aa.h << EOF
@@ -1378 +1378 @@
-        line_profile_aa& profile() { return *m_profile; }
+        line_profile_aa& profile() { return (agg::line_profile_aa&)*m_profile; }
EOF
# skip making examples
#cat > examples/Makefile.in << EOF
#clean:
#all:
#install:
#install-strip:
#EOF

#AM_PROG_LIBTOOL=`which libtool`
#LIBTOOL=`which libtool`
#make check

#patch -ulbf configure.in << EOF
#--- configure.in  2006-10-09 06:06:36 +0200
#+++ configure.in  2010-06-09 14:59:18 +0200
#@@ -96,19 +96,4 @@
# dnl #########  Check for SDL: #####################
#-dnl the sdl script pollutes our global values:
#-temp_LIBS="\$LIBS"
#-temp_CFLAGS="\$CFLAGS"
#-temp_CXXFLAGS="\$CXXFLAGS"
#-sdl_enabled=""
#-SDL_VERSION=1.2.0
#-AM_PATH_SDL(\$SDL_VERSION,
#-    [sdl_enabled="yes"],
#-    AC_MSG_WARN([*** SDL version \$SDL_VERSION not found! Omitting sdl layer.])
#-    )
#-dnl ### Restore old values
#-CFLAGS=\$temp_CFLAGS
#-CXXFLAGS=\$temp_CXXFLAGS
#-LIBS=\$temp_LIBS
#-dnl ### the sdl script already does that:
#-dnl AC_SUBST(SDL_CFLAGS)
#-dnl AC_SUBST(SDL_LIBS)
#+AC_SUBST(SDL_CFLAGS)
#+AC_SUBST(SDL_LIBS)
# AM_CONDITIONAL(ENABLE_SDL,[test xyes = x\$sdl_enabled -a xno != x\$enable_platform -a x\$win32_host != xyes])
#EOF
patch -ulbf configure.in << EOF
--- configure.in  2006-10-09 06:06:36.000000000 +0200
+++ configure.in  2015-02-26 13:42:27.983686400 +0100
@@ -10,3 +10,2 @@
 AC_ISC_POSIX
-AM_C_PROTOTYPES
 if test "x\$U" != "x"; then
@@ -96,19 +95,4 @@
 dnl #########  Check for SDL: #####################
-dnl the sdl script pollutes our global values:
-temp_LIBS="\$LIBS"
-temp_CFLAGS="\$CFLAGS"
-temp_CXXFLAGS="\$CXXFLAGS"
-sdl_enabled=""
-SDL_VERSION=1.2.0
-AM_PATH_SDL(\$SDL_VERSION,
-    [sdl_enabled="yes"],
-    AC_MSG_WARN([*** SDL version \$SDL_VERSION not found! Omitting sdl layer.])
-    )
-dnl ### Restore old values
-CFLAGS=\$temp_CFLAGS
-CXXFLAGS=\$temp_CXXFLAGS
-LIBS=\$temp_LIBS
-dnl ### the sdl script already does that:
-dnl AC_SUBST(SDL_CFLAGS)
-dnl AC_SUBST(SDL_LIBS)
+AC_SUBST(SDL_CFLAGS)
+AC_SUBST(SDL_LIBS)
 AM_CONDITIONAL(ENABLE_SDL,[test xyes = x\$sdl_enabled -a xno != x\$enable_platform -a x\$win32_host != xyes])
EOF
echo "AC_CONFIG_MACRO_DIR([m4])" >> configure.in

#cp Makefile.in.MINGW32_NT-5.1 Makefile.in.$(uname -s)

wl-showstatus configure &&
## remove dependancy on dynamic libstdc++ (GCC 4)
#mv libtool libtool.bak
#sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool
#./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32tt --without-x LDFLAGS="-Wl,--enable-auto-import -static-libstdc++" &&
#./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32tt --without-x LDFLAGS="-Wl,--enable-auto-import -Wl,-no-undefined" &&
#./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-win32tt --without-x LDFLAGS="-Wl,--enable-auto-import" &&
mkdir -p m4 &&
 ( aclocal --force -I $MINGWPREFIX/share/aclocal -I $MINGWDIR/share/aclocal || aclocal --force -I $MINGWPREFIX/share/aclocal ) &&
 autoheader --force &&
 autoconf --force &&
 libtoolize --force -i &&
 automake --force-missing --add-missing --foreign --ignore-deps &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-x --enable-win32tt --enable-platform --enable-freetype --enable-gpc --disable-examples LDFLAGS="-Wl,--enable-auto-import" &&
 wl-showstatus build-install &&
 ( make install-strip || make install-strip CXX="g++ -fpermissive" ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf agg-$VERSION
####configure.in:15: warning: macro `AM_PROG_LIBTOOL' not found in library
####configure.in:103: warning: macro `AM_PATH_SDL' not found in library



