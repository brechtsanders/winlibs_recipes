#export NAME="log4cxx"
#export STATUS=
#export URL=http://logging.apache.org/log4cxx/
#export BASENAME=log4cxx
#export DESCRIPTION="Apache log4cxx is a logging framework for C++ patterned after Apache log4j. Apache log4cxx uses Apache Portable Runtime for most platform-specific code and should be usable on any platform supported by APR."
#export CATEGORY=system
#export TYPE=library
##export VERSION=0.10.0
##export VERSIONDATE=20110909
#export VERSION=0.11.0
#export VERSIONDATE=20200822
##export VERSION=0.12.0
##export VERSIONDATE=20210511
##export VERSION=0.12.1
##export VERSIONDATE=20211002
##export VERSION=0.13.0
##export VERSIONDATE=20220426
#####apr-1-config --includedir failed with result %1 is not a valid Win32 application
#wl-showstatus --package-version
#export DEPENDENCIES=apr,apr-util
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE="Apache License"
##export DOWNLOADURL="http://logging.apache.org/log4cxx/download.html apache-log4cxx-"
##export DOWNLOADURL="http://apache.mogo.be/logging/log4cxx/ apache-log4cxx-"
#export DOWNLOADURL="https://logging.apache.org/log4cxx/latest_stable/download.html apache-log4cxx-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://apache.mogo.be/logging/log4cxx/$VERSION/apache-log4cxx-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://mirrors.sorengard.com/apache/logging/log4cxx/$VERSION/apache-log4cxx-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://downloads.apache.org/logging/log4cxx/$VERSION/apache-log4cxx-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://www.apache.org/dyn/closer.cgi/logging/log4cxx/$VERSION/apache-log4cxx-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/apache-log4cxx-$VERSION.tar.gz
#cd apache-log4cxx-$VERSION
## fix missing memmove in src/main/cpp/inputstreamreader.cpp
#mv src/main/cpp/inputstreamreader.cpp src/main/cpp/inputstreamreader.cpp.bak
#echo "#include <string.h>" > src/main/cpp/inputstreamreader.cpp
#cat src/main/cpp/inputstreamreader.cpp.bak >> src/main/cpp/inputstreamreader.cpp
## fix missing functions in src/main/cpp/socketoutputstream.cpp
#mv src/main/cpp/socketoutputstream.cpp src/main/cpp/socketoutputstream.cpp.bak
#cat > src/main/cpp/socketoutputstream.cpp << EOF
##include <stdio.h>
##include <string.h>
#EOF
#cat src/main/cpp/socketoutputstream.cpp.bak >> src/main/cpp/socketoutputstream.cpp
## fix missing memcpy in src/examples/cpp/console.cpp
#mv src/examples/cpp/console.cpp src/examples/cpp/console.cpp.bak
#echo "#include <string.h>" > src/examples/cpp/console.cpp
#cat src/examples/cpp/console.cpp.bak >> src/examples/cpp/console.cpp
## fix src/main/cpp/exception.cpp for 64-bit
#patch -ulbf src/main/cpp/exception.cpp << EOF
#--- src/main/cpp/exception.cpp  2008-04-01 00:34:10 +0200
#+++ src/main/cpp/exception.cpp  2011-09-11 16:48:54 +0200
#@@ -35,3 +35,3 @@
#   }
#-#if defined(__STDC_LIB_EXT1__) || defined(__STDC_SECURE_LIB__)
#+#if (defined(__STDC_LIB_EXT1__) || defined(__STDC_SECURE_LIB__)) && !defined(__MINGW64__)
#   memcpy_s(msg, sizeof msg, m.data(), len);
#EOF
## skip making src/examples/cpp
#cat > src/examples/cpp/Makefile.in << EOF
#clean:
#all:
#install:
#install-strip:
#EOF
#cp src/examples/cpp/Makefile.in src/examples/cpp/Makefile.am
## skip making src/test/cpp
#cat > src/test/cpp/Makefile.in << EOF
#clean:
#all:
#install:
#install-strip:
#EOF
#cp src/test/cpp/Makefile.in src/test/cpp/Makefile.am
### remove dependancy on dynamic libstdc++ (GCC 4)
##mv libtool libtool.bak &&
##sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
#wl-showstatus configure &&
# mkdir -p m4 &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal -I $MINGWPREFIX/share/apr/build -I $MINGWPREFIX/share/apu/build &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-ODBC=Microsoft --disable-doxygen LDFLAGS="-Wl,--as-needed -lapr-1 -laprutil-1 -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-ODBC=Microsoft --disable-doxygen &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-ODBC=Microsoft --disable-doxygen --with-apr=$MINGWPREFIX/bin/apr-1-config --with-apr-util=$MINGWPREFIX/bin/apu-1-config &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build-install &&
# ( make install-strip || make install-strip CXX="${CXX:-g++} -Wno-narrowing -fpermissive" ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf apache-log4cxx-$VERSION



export NAME="log4cxx"
export STATUS=
export URL=http://logging.apache.org/log4cxx/
export BASENAME=log4cxx
export DESCRIPTION="Apache log4cxx is a logging framework for C++ patterned after Apache log4j. Apache log4cxx uses Apache Portable Runtime for most platform-specific code and should be usable on any platform supported by APR."
export CATEGORY=system
export TYPE=library
#export VERSION=0.13.0
#export VERSIONDATE=20220426
#export DEPENDENCIES=apr,apr-util
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
export VERSION=1.0.0
export VERSIONDATE=20230107
wl-showstatus --package-version
export DEPENDENCIES=apr,apr-util,fmt,pthreads
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE="Apache License"
export DOWNLOADURL="https://logging.apache.org/log4cxx/latest_stable/download.html apache-log4cxx-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://www.apache.org/dyn/closer.cgi/logging/log4cxx/$VERSION/apache-log4cxx-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://downloads.apache.org/logging/log4cxx/$VERSION/apache-log4cxx-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/apache-log4cxx-$VERSION.tar.gz
cd apache-log4cxx-$VERSION
# fix missing windows.h (version >= 0.13.0)
for F in src/main/cpp/nteventlogappender.cpp src/main/cpp/loggingevent.cpp src/main/cpp/charsetdecoder.cpp src/main/cpp/charsetencoder.cpp src/main/cpp/datagramsocket.cpp src/main/cpp/inetaddress.cpp src/main/cpp/serversocket.cpp src/main/cpp/socket.cpp; do
 mv $F $F.bak &&
 echo "#include <windows.h>" > $F &&
 cat $F.bak >> $F
done
# fix unrecognized INFO_FILE_VERSION_STRING in src/main/resources/log4cxx.rc (version >= 0.13.0)
sed -i.bak "s/INFO_FILE_VERSION_STRING/\"$VERSION\"/" src/main/resources/log4cxx.rc
# avoid error: log4cxx/private/log4cxx_private.h should only be used within log4cxx implementation or tests (version >= 0.13.0)
sed -i.bak -e "s?#error\( \"log4cxx/private/log4cxx_private.h should only be used\)?#warning \1?" src/main/include/log4cxx/private/log4cxx_private.h.in
# fix src/main/include/log4cxx/log4cxx.h.in (version >= 1.0.0)
patch -ulbf src/main/include/log4cxx/log4cxx.h.in << EOF
@@ -65,3 +65,3 @@

-#if _WIN32
+#if _MSC_VER
 #define LOG4CXX_DECLARE_PRIVATE_MEMBER_PTR(T, V) \\
EOF
# fix missing struct sockaddr_in (version >= 1.0.0)
for F in src/main/cpp/aprdatagramsocket.cpp src/main/cpp/aprserversocket.cpp src/main/cpp/aprsocket.cpp; do
 mv $F $F.bak &&
 echo "#include <winsock2.h>" > $F
 cat $F.bak >> $F
done
# fix src/cmake/FindAPR.cmake (version >= 0.12.1)
patch -ulbf src/cmake/FindAPR.cmake << EOF
@@ -10,3 +10,3 @@
     execute_process(
-        COMMAND \${APR_CONFIG_EXECUTABLE} \${ARGN}
+        COMMAND sh \${APR_CONFIG_EXECUTABLE} \${ARGN}
         OUTPUT_VARIABLE _apr_output
EOF
# fix src/cmake/FindAPR-Util.cmake (version >= 0.12.1)
patch -ulbf src/cmake/FindAPR-Util.cmake << EOF
@@ -11,3 +11,3 @@
     execute_process(
-        COMMAND \${APR_UTIL_CONFIG_EXECUTABLE} \${ARGN}
+        COMMAND sh \${APR_UTIL_CONFIG_EXECUTABLE} \${ARGN}
         OUTPUT_VARIABLE _apr_output
EOF
# avoid unsupported TARGET_PDB_FILE (version >= 0.13.0)
sed -i.bak -e "s/\$<TARGET_PDB_FILE:[^ ]*>//" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf apache-log4cxx-$VERSION



