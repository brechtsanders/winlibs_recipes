export NAME="libastman"
export STATUS=
export URL=http://sourceforge.net/projects/libastman/
export BASENAME=libastman
export DESCRIPTION="This library can allow you to connect to the Asterisk Manager Interface (AMI).The AMI allows a client program to connect to an Asterisk instance and issue commands or read PBX events over a TCP/IP stream."
export CATEGORY=communication
export TYPE=library
export VERSION=0.2
export VERSIONDATE=20110520
wl-showstatus --package-version
export DEPENDENCIES=openssl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://sourceforge.net/projects/libastman/files/libastman/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/libastman/libastman/$VERSION/libastman-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p sys netinet
echo "#include <winsock2.h>" > sys/socket.h
touch netinet/in.h netdb.h sys/select.h
# fix mkdir in test/chmx.c
patch -ulbf astman.h << EOF
--- astman.h  2007-08-01 02:25:56 +0200
+++ astman.h  2011-05-20 13:51:24 +0200
@@ -23,3 +23,7 @@
 #include <time.h>
+#ifndef _WIN32
 #include <netinet/in.h>  /* struct sockaddr_in */
+#else
+#include <winsock2.h>
+#endif

EOF
# support ARM64 in config.sub
sed -i.bak -e "s/| x86_64-\* /&| aarch64-\* /" config.sub
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,-no-undefined" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="$(if ${CC:-gcc} --help -v 2>/dev/null | grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,-no-undefined" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 # fix detection of shared libraries
 sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 wl-showstatus build-install &&
 #make install-strip &&
 ( make install-strip || ( make install && ${STRIP:-strip} $INSTALLPREFIX/bin/*.dll )) &&
 mkdir -p $INSTALLPREFIX/include &&
 cp astman.h $INSTALLPREFIX/include/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



