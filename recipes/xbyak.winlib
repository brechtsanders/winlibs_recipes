export NAME="xbyak"
export STATUS=
export URL=https://github.com/herumi/xbyak
export BASENAME=xbyak
export DESCRIPTION="a JIT assembler for x86(IA-32)/x64(AMD64, x86-64) MMX/SSE/SSE2/SSE3/SSSE3/SSE4/FPU/AVX/AVX2/AVX-512 by C++ header"
export CATEGORY=development
export TYPE=library
#export VERSION=6.03
#export VERSIONDATE=20220323
#export VERSION=6.04
#export VERSIONDATE=20220408
#export VERSION=6.041
#export VERSIONDATE=20220422
#export VERSION=6.05
#export VERSIONDATE=20220512
#export VERSION=6.051
#export VERSIONDATE=20220513
#export VERSION=6.052
#export VERSIONDATE=20220521
#export VERSION=6.06
#export VERSIONDATE=20220601
#export VERSION=6.60
#export VERSIONDATE=20220606
#export VERSION=6.60.1
#export VERSIONDATE=20220615
#export VERSION=6.60.2
#export VERSIONDATE=20220616
#export VERSION=6.61
#export VERSIONDATE=20220729
#export VERSION=6.61.1
#export VERSIONDATE=20220803
#export VERSION=6.61.2
#export VERSIONDATE=20220810
#export VERSION=6.62
#export VERSIONDATE=20220915
#export VERSION=6.63
#export VERSIONDATE=20221007
#export VERSION=6.64
#export VERSIONDATE=20221105
#export VERSION=6.65
#export VERSIONDATE=20221122
#export VERSION=6.66
#export VERSIONDATE=20221125
#export VERSION=6.67
#export VERSIONDATE=20221201
#export VERSION=6.68
#export VERSIONDATE=20221208
export VERSION=6.69
export VERSIONDATE=20230220
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYRIGHT
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/herumi/xbyak/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/herumi/xbyak/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_both &&
 wl-showstatus configure &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both . build_both &&
 wl-showstatus build-install &&
 ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



