export NAME="KNotifications"
export STATUS=
export URL=https://api.kde.org/frameworks/knotifications/html/index.html
export BASENAME=libkf5notifications
export DESCRIPTION="Abstraction for system notifications (KDE Frameworks 5 (KDF5) Tier 2 framework)"
export CATEGORY=framework
export TYPE=library
#export VERSION=5.63.0
#export VERSIONDATE=20191103
#export VERSION=5.64.0
#export VERSIONDATE=20191110
#export VERSION=5.65.0
#export VERSIONDATE=20191214
#export VERSION=5.66.0
#export VERSIONDATE=20200111
#export VERSION=5.67.0
#export VERSIONDATE=20200209
#export VERSION=5.68.0
#export VERSIONDATE=20200315
#export VERSION=5.69.0
#export VERSIONDATE=20200411
#export VERSION=5.70.0
#export VERSIONDATE=20200509
#export VERSION=5.71.0
#export VERSIONDATE=20200613
#export VERSION=5.72.0
#export VERSIONDATE=20200711
#export VERSION=5.73.0
#export VERSIONDATE=20200808
#export VERSION=5.74.0
#export VERSIONDATE=20200912
#export VERSION=5.75.0
#export VERSIONDATE=20201010
#export VERSION=5.76.0
#export VERSIONDATE=20201114
#export VERSION=5.77.0
#export VERSIONDATE=20201212
#export VERSION=5.78.0
#export VERSIONDATE=20210109
#export VERSION=5.79.0
#export VERSIONDATE=20210213
#export VERSION=5.80.0
#export VERSIONDATE=20210313
#export VERSION=5.81.0
#export VERSIONDATE=20210410
#export VERSION=5.82.0
#export VERSIONDATE=20210508
#export VERSION=5.83.0
#export VERSIONDATE=20210613
#export VERSION=5.84.0
#export VERSIONDATE=20210710
#export VERSION=5.85.0
#export VERSIONDATE=20210814
#export VERSION=5.86.0
#export VERSIONDATE=20210911
#export VERSION=5.87.0
#export VERSIONDATE=20211009
#export VERSION=5.88.0
#export VERSIONDATE=20211113
#export VERSION=5.89.0
#export VERSIONDATE=20211212
#export VERSION=5.90.0
#export VERSIONDATE=20220108
#export VERSION=5.91.0
#export VERSIONDATE=20220214
#export VERSION=5.92.0
#export VERSIONDATE=20220313
#export VERSION=5.93.0
#export VERSIONDATE=20220410
#export VERSION=5.94.0
#export VERSIONDATE=20220514
#export VERSION=5.95.0
#export VERSIONDATE=20220613
#export VERSION=5.96.0
#export VERSIONDATE=20220718
#export VERSION=5.97.0
#export VERSIONDATE=20220814
#export VERSION=5.98.0
#export VERSIONDATE=20220911
#export VERSION=5.99.0
#export VERSIONDATE=20221010
#export VERSION=5.100.0
#export VERSIONDATE=20221114
#export VERSION=5.101.0
#export VERSIONDATE=20221210
#export VERSION=5.102.0
#export VERSIONDATE=20230114
#export VERSION=5.103.0
#export VERSIONDATE=20230212
export VERSION=5.104.0
export VERSIONDATE=20230311
wl-showstatus --package-version
export DEPENDENCIES=qt,libkf5windowsystem,libkf5config,libkf5coreaddons,phonon
#export DEPENDENCIES=qt,snoretoast,libkf5windowsystem,libkf5config,libkf5coreaddons,phonon
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,extra-cmake-modules
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,extra-cmake-modules
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://cgit.kde.org/knotifications.git/refs/ ?h=v"
#export DOWNLOADURL="https://kde.org/announcements/ kde-frameworks- .php"
export DOWNLOADURL="https://download.kde.org/stable/frameworks/ knotifications-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://download.kde.org/stable/frameworks/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/knotifications-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/knotifications-$VERSION.tar.xz
cd knotifications-$VERSION
## fix src/knotificationmanager.cpp (version >= 5.69.0 <= 0.71.0)
#patch -ulbf src/knotificationmanager.cpp << EOF
#@@ -44,2 +44,4 @@
# #include "notifybymacosnotificationcenter.h"
#+#elif defined(__MINGW32__)
#+#include "notifybypopup.h"
# #elif defined(Q_OS_WIN)
#@@ -139,2 +141,4 @@
#             plugin = new NotifyByAndroid(this);
#+#elif defined(__MINGW32__)
#+            plugin = new NotifyByPopup(this);
# #elif defined(Q_OS_WIN)
#EOF
## fix org::freedesktop::Notifications in src/notifybypopup.cpp (version >= 5.71.0)
#patch -ulbf src/notifybypopup.cpp << EOF
#@@ -28,3 +28,2 @@
# #include "knotification.h"
#-#include "notifications_interface.h"
# #include "debug_p.h"
#@@ -38,2 +37,3 @@
# #include <QUrl>
#+#include <QtThemeSupport/5.13.2/QtThemeSupport/private/qxdgnotificationproxy_p.h>
#
#@@ -164,3 +164,3 @@
#
#-    d->dbusInterface.CloseNotification(id);
#+    d->dbusInterface.closeNotification(id);
#
#@@ -351,3 +351,3 @@
#
#-    const QDBusPendingReply<uint> reply = dbusInterface.Notify(appCaption, updateId, iconName, title, text, actionList, hintsMap, timeout);
#+    const QDBusPendingReply<uint> reply = dbusInterface.notify(appCaption, updateId, iconName, title, text, actionList, hintsMap, timeout);
#
#@@ -371,3 +371,3 @@
#
#-    QDBusPendingReply<QStringList> call = dbusInterface.GetCapabilities();
#+    QDBusPendingReply<QStringList> call = dbusInterface.getCapabilities();
#
#EOF
# don't use LibSnoreToast in src/CMakeLists.txt (version >= 5.69.0)
patch -ulbf src/CMakeLists.txt << EOF
@@ -45,3 +45,6 @@

-if (WIN32)
+if (MINGW)
+  list(APPEND knotifications_SRCS notifybypopup.cpp imageconverter.cpp)
+endif ()
+if (MSVC)
   list(APPEND knotifications_SRCS notifybysnore.cpp)
EOF
# don't require LibSnoreToast
sed -i.bak -e "s/\(LibSnoreToast.*\)REQUIRED/\1/" CMakeLists.txt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/qt/include/QtNetwork -I$MINGWPREFIX/qt/include/QtDBus" -S. -Bbuild_static &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/qt/include/QtNetwork -I$MINGWPREFIX/qt/include/QtDBus" -S. -Bbuild_shared &&
# echo "-Wl,--as-needed $(echo $MINGWPREFIX|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")/qt/bin/Qt5DBus.dll" >> build_shared/src/CMakeFiles/KF5Notifications.dir/linklibs.rsp &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf knotifications-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/qt/include/QtNetwork -I$MINGWPREFIX/qt/include/QtDBus" -S. -Bbuild_static &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/qt/include/QtNetwork -I$MINGWPREFIX/qt/include/QtDBus" -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf knotifications-$VERSION
####TO DO: build DLL (version >= 5.71.0)




