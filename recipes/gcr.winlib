#export NAME="gcr"
#export STATUS=
#export URL=http://developer.gnome.org/gcr/
#export BASENAME=gcr
#export DESCRIPTION="A library for bits of crypto UI and parsing etc."
#export CATEGORY=security
#export TYPE=library
##export VERSION=3.3.1.1
##export VERSIONDATE=20111026
#####gck/gck.h:1262: error: redefinition of typedef 'GckObjectAttributes'
#####gck/gck.h:290: note: previous declaration of 'GckObjectAttributes' was here
##export VERSION=3.3.2
##export VERSIONDATE=20111121
##export VERSION=3.3.2.1
##export VERSIONDATE=20111123
##export DEPENDENCIES=glib2,gettext,p11-kit,plibc,pthreads
##export VERSION=3.3.3
##export VERSIONDATE=20111219
##export VERSION=3.3.3.1
##export VERSIONDATE=20111221
##export VERSION=3.3.4
##export VERSIONDATE=20120116
##export VERSION=3.3.5
##export VERSIONDATE=20120210
##export VERSION=3.4.0
##export VERSIONDATE=20120326
##export VERSION=3.4.1
##export VERSIONDATE=20120416
##export VERSION=3.5.3
##export VERSIONDATE=20120625
##export VERSION=3.5.4
##export VERSIONDATE=20120716
##export VERSION=3.5.5
##export VERSIONDATE=20120806
##export VERSION=3.5.92
##export VERSIONDATE=20120918
##export VERSION=3.6.0
##export VERSIONDATE=20120927
##export VERSION=3.6.1
##export VERSIONDATE=20121016
##export VERSION=3.6.2
##export VERSIONDATE=20121112
##export VERSION=3.7.1
##export VERSIONDATE=20121023
##export VERSION=3.7.2
##export VERSIONDATE=20121122
##export VERSION=3.7.5
##export VERSIONDATE=20130204
##export VERSION=3.8.0
##export VERSIONDATE=20130325
##export VERSION=3.8.1
##export VERSIONDATE=20130416
##export VERSION=3.8.2
##export VERSIONDATE=20130505
##export DEPENDENCIES=glib2,gettext,p11-kit,plibc,pthreads,pango,cairo,libgcrypt,gtk3,gdk-pixbuf
##export VERSION=3.9.1
##export VERSIONDATE=20130501
#####gcr/gcr-gnupg-process.c:914:75: error: 'HANDLE_FLAG_INHERIT' undeclared (first use in this function)
##export VERSION=3.10.0
##export VERSIONDATE=20130924
##export VERSION=3.10.1
##export VERSIONDATE=20131017
#####Requested 'p11-kit-1 >= 0.19.0' but version of p11-kit is 0.18.5
#####/bin/sh: gdbus-codegen: command not found
##export VERSION=3.12.0
##export VERSIONDATE=20140323
#####.libs/libgck-testable.a(libgck_1_la-gck-attributes.o): bad reloc address 0x400 in section `.rdata'
##export VERSION=3.12.2
##export VERSIONDATE=20140514
#####.libs/libegg.a(libegg_la-egg-asn1x.o):egg-asn1x.c:(.text+0x29aa): undefined reference to `gmtime_r'
##export DEPENDENCIES=glib2,gettext,p11-kit,plibc,pthreads,pango,cairo,libgcrypt,gtk3,gdk-pixbuf,pygtk
##export VERSION=3.14.0
##export VERSIONDATE=20140924
##export VERSION=3.16.0
##export VERSIONDATE=20150513
##export VERSION=3.17.4
##export VERSIONDATE=20150811
#####No package 'gtk+-x11-3.0' found
##export VERSION=3.18.0
##export VERSIONDATE=20150929
##export VERSION=3.19.4
##export VERSIONDATE=20160121
##export VERSION=3.20.0
##export VERSIONDATE=20160325
##export VERSION=3.27.4
##export VERSIONDATE=20180108
##export VERSION=3.28.0
##export VERSIONDATE=20180312
#####gcr/test-secure-memory.c:34:26: fatal error: sys/resource.h: No such file or directory
##export VERSION=3.28.1
##export VERSIONDATE=20190119
##export VERSION=3.33.4
##export VERSIONDATE=20190726
#export VERSION=3.34.0
#export VERSIONDATE=20191015
#export DEPENDENCIES=glib2,gettext,p11-kit,pthreads,pango,cairo,libgcrypt,gtk3,gdk-pixbuf
#export OPTIONALDEPENDENCIES=pygtk
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
##export VERSION=3.35.1
##export VERSIONDATE=20200106
##export VERSION=3.36.0
##export VERSIONDATE=20200311
#wl-showstatus --package-version
##export DEPENDENCIES=glib2,gettext,p11-kit,pthreads,pango,cairo,libgcrypt,gtk3,gdk-pixbuf
##export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=meson,ninja,pygtk
##export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gcr/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/gcr/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/gcr/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix mman stuff in egg/egg-secure-memory.c
#patch -ulbf egg/egg-secure-memory.c << EOF
#--- egg/egg-secure-memory.c  2011-10-06 10:06:10 +0200
#+++ egg/egg-secure-memory.c  2011-10-26 22:58:02 +0200
#@@ -34,3 +34,7 @@
# #include <sys/types.h>
#+#ifndef __MINGW32__
# #include <sys/mman.h>
#+#else
#+#include <windows.h>
#+#endif
# #include <stddef.h>
#@@ -188,2 +192,3 @@
#        if (pool == NULL) {
#+#ifndef __MINGW32__
#                len = getpagesize () * 2;
#@@ -192,2 +197,8 @@
#                        return NULL;
#+#else
#+               SYSTEM_INFO sysinfo;
#+               GetSystemInfo(&sysinfo);
#+               len = sysinfo.dwPageSize * 2;
#+               pages = VirtualAlloc(NULL, len, 0, PAGE_READWRITE);
#+#endif
#
#@@ -219,3 +230,7 @@
#
#+#ifndef __MINGW32__
#        return memset (item, 0, sizeof (Item));
#+#else
#+       return item;
#+#endif
# }
#@@ -253,3 +268,7 @@
#
#+#ifndef __MINGW32__
#                munmap (pool, pool->length);
#+#else
#+               VirtualFree (pool, 0, MEM_RELEASE);
#+#endif
#                return;
#EOF
## fix missing gmtime_r in egg/egg-asn1x.c
#if ! gcc --version | grep -q posix; then
#mv egg/egg-asn1x.c egg/egg-asn1x.c.bak
#echo "#include <pthread.h>" > egg/egg-asn1x.c
#if ( gcc --version | grep -q "MinGW-W64" ); then
#cat > egg/egg-asn1x.c << EOF
##include <pthread.h>
##define gmtime_r( _clock, _result ) ( *(_result) = *gmtime( (_clock) ), (_result) )
#EOF
#fi
#cat egg/egg-asn1x.c.bak >> egg/egg-asn1x.c
#else
#mv egg/egg-asn1x.c egg/egg-asn1x.c.bak &&
#echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > egg/egg-asn1x.c &&
##echo "#include <time.h>" >> egg/egg-asn1x.c &&
#cat egg/egg-asn1x.c.bak >> egg/egg-asn1x.c
#fi
## fix missing memrchr in egg/egg-armor.c
#mv egg/egg-armor.c egg/egg-armor.c.bak
#cat > egg/egg-armor.c << EOF
##include <string.h>
#static inline void* memrchr (const void* buf, int c, size_t num)
#{
#  unsigned char* p;
#  if (num == 0)
#    return NULL;
#  for (p = (unsigned char*)buf + num - 1; p >= (unsigned char*)buf; p--) {
#    if (*p == (unsigned char)c)
#      break;
#  }
#  if (p >= (unsigned char*)buf)
#    return ((void*)p);
#  return NULL;
#}
#EOF
#cat egg/egg-armor.c.bak >> egg/egg-armor.c
## fix missing gmtime_r in gck/gck-slot.c
#mv gck/gck-slot.c gck/gck-slot.c.bak
#cat > gck/gck-slot.c << EOF
##include <stdlib.h>
##include <time.h>
#/**/
##include <string.h>
#//#include <plibc.h>
#static inline struct tm* gmtime_r (const time_t* timer, struct tm* result)
#{
#  struct tm* local_result;
#  if ((local_result = gmtime (timer)) == NULL || result == NULL)
#    return NULL;
#  memcpy (result, local_result, sizeof (result));
#  return result;
#}
#/*
##include <pthread.h>
##define gmtime_r( _clock, _result ) ( *(_result) = *gmtime( (_clock) ), (_result) )
#*/
##define strptime(s,dmt,tm) NULL
#static inline time_t timegm (struct tm* tm) {
#  time_t ret;
#  putenv("TZ=");
#  tzset();
#  ret = mktime(tm);
#  //to do: reset time zone to previous value
#  return ret;
#}
#EOF
#cat gck/gck-slot.c.bak >> gck/gck-slot.c
## fix missing strptime in gcr/gcr-record.c
#mv gcr/gcr-record.c gcr/gcr-record.c.bak
#echo "#define strptime(s,dmt,tm) NULL" > gcr/gcr-record.c
#cat gcr/gcr-record.c.bak >> gcr/gcr-record.c
## fix missing pwd.h
##touch egg/tests/pwd.h
#mkdir -p winfix
#touch winfix/pwd.h
### fix missing sys/wait.h
##mkdir -p gcr/sys
##cat > gcr/sys/wait.h << EOF
#mkdir -p winfix/sys
#cat > winfix/sys/wait.h << EOF
##define WEXITSTATUS(status) (((status)  & 0xFF00) >> 8)
##define WIFEXITED(status) (WTERMSIG(status) == 0)
##define WIFSTOPPED(status) (((status) & 0xFF) == 0x7F)
##define WIFSIGNALED(status) (!WIFSTOPPED(status) && !WIFEXITED(status))
#//#define WSTOPSIG(status) WEXITSTATUS(status)
##define WTERMSIG(status) ((status) & 0x7F)
#EOF
### fix missing F_GETFD/F_SETFD/FD_CLOEXEC in gcr/gcr-gnupg-process.c (version <= 3.6.2)
##patch -ulbf gcr/gcr-gnupg-process.c << EOF
##--- gcr/gcr-gnupg-process.c  2011-11-21 10:11:00 +0100
##+++ gcr/gcr-gnupg-process.c  2011-12-03 07:36:02 +0100
##@@ -35,6 +35,20 @@
## #include <fcntl.h>
## #include <errno.h>
## #include <string.h>
##+#ifdef __MINGW32__
##+#include <windows.h>
##+static int kill (DWORD pid, int sig)
##+{
##+ BOOL status;
##+ HANDLE hProcess;
##+ if ((hProcess = OpenProcess(PROCESS_TERMINATE, FALSE, pid)) == NULL || hProcess == INVALID_HANDLE_VALUE)
##+  return -1;
##+ status = TerminateProcess(hProcess, ~0);
##+ CloseHandle(hProcess);
##+ return (status ? 0 : -1);
##+}
##+#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
##+#endif
##
## /**
##  * GcrGnupgProcessFlags:
##@@ -906,8 +920,12 @@
##
##        for (i = 0; i < NUM_FDS; i++) {
##                if (child_fds[i] >= 0) {
##+#ifndef __MINGW32__
##                        val = fcntl (child_fds[i], F_GETFD);
##                        fcntl (child_fds[i], F_SETFD, val & ~FD_CLOEXEC);
##+#else
##+                       SetHandleInformation(_get_osfhandle(child_fds[i]), HANDLE_FLAG_INHERIT, 1);
##+#endif
##                }
##        }
## }
##@@ -1035,11 +1053,11 @@
##
##        if (_gcr_debugging) {
##                gchar *command = g_strjoinv (" ", (gchar**)args->pdata);
##-               gchar *environ = g_strjoinv (", ", (gchar**)envs->pdata);
##+               gchar *environment = g_strjoinv (", ", (gchar**)envs->pdata);
##                _gcr_debug ("running command: %s", command);
##-               _gcr_debug ("process environment: %s", environ);
##+               _gcr_debug ("process environment: %s", environment);
##                g_free (command);
##-               g_free (environ);
##+               g_free (environment);
##        }
##
##        g_spawn_async_with_pipes (self->pv->directory, (gchar**)args->pdata,
##EOF
## fix missing F_GETFD/F_SETFD/FD_CLOEXEC/HANDLE_FLAG_INHERIT/kill/pipe in gcr/gcr-gnupg-process.c (version >= 3.8.0)
#patch -ulbf gcr/gcr-gnupg-process.c << EOF
#--- gcr/gcr-gnupg-process.c  2013-03-25 11:18:02 +0100
#+++ gcr/gcr-gnupg-process.c  2013-03-25 23:53:36 +0100
#@@ -38,2 +38,17 @@
# #include <unistd.h>
#+#include <windows.h>
#+#ifdef __MINGW32__
#+#include <windows.h>
#+static int kill (DWORD pid, int sig)
#+{
#+ BOOL status;
#+ HANDLE hProcess;
#+ if ((hProcess = OpenProcess(PROCESS_TERMINATE, FALSE, pid)) == NULL || hProcess == INVALID_HANDLE_VALUE)
#+  return -1;
#+ status = TerminateProcess(hProcess, ~0);
#+ CloseHandle(hProcess);
#+ return (status ? 0 : -1);
#+}
#+#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
#+#endif
#
#@@ -909,4 +924,8 @@
#                if (child_fds[i] >= 0) {
#+#ifndef __MINGW32__
#                        val = fcntl (child_fds[i], F_GETFD);
#                        fcntl (child_fds[i], F_SETFD, val & ~FD_CLOEXEC);
#+#else
#+                       SetHandleInformation(_get_osfhandle(child_fds[i]), HANDLE_FLAG_INHERIT, 1);
#+#endif
#                }
#@@ -1038,7 +1057,7 @@
#                gchar *command = g_strjoinv (" ", (gchar**)args->pdata);
#-               gchar *environ = g_strjoinv (", ", (gchar**)envs->pdata);
#+               gchar *environment = g_strjoinv (", ", (gchar**)envs->pdata);
#                _gcr_debug ("running command: %s", command);
#-               _gcr_debug ("process environment: %s", environ);
#+               _gcr_debug ("process environment: %s", environment);
#                g_free (command);
#-               g_free (environ);
#+               g_free (environment);
#        }
#EOF
### fix missing F_GETFD/F_SETFD/FD_CLOEXEC/HANDLE_FLAG_INHERIT/kill/pipe in gcr/gcr-gnupg-process.c (version >= 3.18.0)
##patch -ulbf gcr/gcr-gnupg-process.c << EOF
##--- gcr/gcr-gnupg-process.c  2015-10-02 10:34:08 +0200
##+++ gcr/gcr-gnupg-process.c  2015-10-02 11:03:31 +0200
##@@ -35,2 +35,17 @@
## #include <unistd.h>
##+#include <windows.h>
##+#ifdef __MINGW32__
##+#include <windows.h>
##+static int kill (GPid pid, int sig)
##+{
##+ BOOL status;
##+ HANDLE hProcess;
##+ if ((hProcess = OpenProcess(PROCESS_TERMINATE, FALSE, (DWORD)pid)) == NULL || hProcess == INVALID_HANDLE_VALUE)
##+  return -1;
##+ status = TerminateProcess(hProcess, ~0);
##+ CloseHandle(hProcess);
##+ return (status ? 0 : -1);
##+}
##+#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
##+#endif
##
##@@ -906,4 +921,8 @@
##                if (child_fds[i] >= 0) {
##+#ifndef __MINGW32__
##                        val = fcntl (child_fds[i], F_GETFD);
##                        fcntl (child_fds[i], F_SETFD, val & ~FD_CLOEXEC);
##+#else
##+                       SetHandleInformation(_get_osfhandle(child_fds[i]), HANDLE_FLAG_INHERIT, 1);
##+#endif
##                }
##@@ -1034,7 +1053,7 @@
##        gchar *command = g_strjoinv (" ", (gchar**)args->pdata);
##-       gchar *environ = g_strjoinv (", ", (gchar**)envs->pdata);
##+       gchar *environment = g_strjoinv (", ", (gchar**)envs->pdata);
##        g_debug ("running command: %s", command);
##-       g_debug ("process environment: %s", environ);
##+       g_debug ("process environment: %s", environment);
##        g_free (command);
##-       g_free (environ);
##+       g_free (environment);
##
##EOF
## fix missing gdk/gdkx.h (version >= 3.3.3)
#mkdir -p gdk
#cat > gdk/gdkx.h << EOF
##include <gdk/gdkwin32.h>
##define Window HWND
##define gdk_x11_window_foreign_new_for_display gdk_win32_window_foreign_new_for_display
#EOF
## fix missing syslog.h (version >= 3.3.3)
#cat > syslog.h << EOF
##define LOG_CRIT    2
##define LOG_ERR     3
##define LOG_WARNING 4
##define LOG_NOTICE  5
##define LOG_INFO    6
##define LOG_DEBUG   7
##define LOG_AUTH    (4<<3)
##define LOG_PID     0x01
#static void openlog (const char *ident, int option, int facility) {}
#static void syslog (int priority, const char *format, ...) {}
#//static void closelog (void) {}
#EOF
## fix gck/gck-attributes.c for 64-bit (version >= 3.3.3)
#patch -ulbf gck/gck-attributes.c << EOF
#--- gck/gck-attributes.c  2011-12-19 10:17:14 +0100
#+++ gck/gck-attributes.c  2011-12-19 23:26:42 +0100
#@@ -53,3 +53,5 @@
#
#+#ifndef __MINGW64__
# G_STATIC_ASSERT (sizeof (GckAttribute) == sizeof (CK_ATTRIBUTE));
#+#endif
#
#EOF
## fix use of already defined name interface gck/gck.h (version >= 3.3.4)
#mv gck/gck.h gck/gck.h.bak
#sed -e "s/interface/iface/g" gck/gck.h.bak > gck/gck.h
### fix missing err.h in ui/tests/frob-prompt.c (version >= 3.8.0 <= 3.8.2)
##cat > ui/tests/err.h << EOF
###include <stdarg.h>
##inline void errx(int eval, const char *fmt, ...)
##{
## va_list args;
## va_start(args, fmt);
## vfprintf(stderr, fmt, args);
## va_end(args);
## exit(eval);
##}
###define GDK_WINDOW_XID(dw) (int)GDK_WINDOW_HWND(dw)
##EOF
### fix missing GDK_WINDOW_XID in ui/tests/frob-system-prompt.c (version >= 3.8.0 <= 3.8.2))
##mv ui/tests/frob-system-prompt.c ui/tests/frob-system-prompt.c.bak
##cat > ui/tests/frob-system-prompt.c << EOF
###define GDK_WINDOW_XID(dw) (int)GDK_WINDOW_HWND(dw)
##EOF
##cat ui/tests/frob-system-prompt.c.bak >> ui/tests/frob-system-prompt.c
## fix missing err.h and errx/GDK_WINDOW_XID in ui/frob-prompt.c (version >= 3.14.0)
#mv ui/frob-prompt.c ui/frob-prompt.c.bak
#cat > ui/frob-prompt.c << EOF
##include <stdlib.h>
##include <stdio.h>
##include <stdarg.h>
#static inline void errx(int eval, const char *fmt, ...)
#{
# va_list args;
# va_start(args, fmt);
# vfprintf(stderr, fmt, args);
# va_end(args);
# exit(eval);
#}
##define GDK_WINDOW_XID(dw) (int)GDK_WINDOW_HWND(dw)
#EOF
#grep -v "#include <err.h>" ui/frob-prompt.c.bak >> ui/frob-prompt.c
## fix missing GDK_WINDOW_XID in ui/frob-system-prompt.c (version >= 3.14.0)
#mv ui/frob-system-prompt.c ui/frob-system-prompt.c.bak
#echo "#define GDK_WINDOW_XID(dw) (int)GDK_WINDOW_HWND(dw)" > ui/frob-system-prompt.c
#cat ui/frob-system-prompt.c.bak >> ui/frob-system-prompt.c
## fix already defined environ in gcr/gcr-gnupg-process.c
#mv gcr/gcr-gnupg-process.c gcr/gcr-gnupg-process.c.bak &&
#sed -e "s/\benviron\b/environment/g" gcr/gcr-gnupg-process.c.bak > gcr/gcr-gnupg-process.c
## fix gcr/gcr-ssh-askpass.c (version >= 3.28.0)
#mv gcr/gcr-ssh-askpass.c gcr/gcr-ssh-askpass.c.bak
#cat > gcr/gcr-ssh-askpass.c << EOF
##include <stdlib.h>
##include <stdio.h>
#int main(int argc, char *argv[])
#{
#  fprintf(stderr, "gcr-ssh-askpass: this program is not supported on Windows");
#  return 1;
#}
#EOF
## fix missing getrlimit() in gcr/test-secure-memory.c (version >= 3.28.0)
#patch -ulbf gcr/test-secure-memory.c << EOF
#@@ -33,3 +33,5 @@
# #include <string.h>
#+#ifndef _WIN32
# #include <sys/resource.h>
#+#endif
#
#@@ -55,2 +57,5 @@
# {
#+#ifdef _WIN32
#+       g_error ("getrlimit() not implemented on Windows");
#+#else
#        struct rlimit memlock;
#@@ -74,2 +79,3 @@
#        return memlock.rlim_cur;
#+#endif
# }
#EOF
## use dummy gcr/test-ssh-askpass.c to avoid errors (version >= 3.28.0)
#mv gcr/test-ssh-askpass.c gcr/test-ssh-askpass.c.bak &&
#echo "int main (int argc, char **argv) { return 0; }" > gcr/test-ssh-askpass.c
##make check
## skip making gcr/tests, gck/tests and egg/tests
#cat > gcr/tests/Makefile.in << EOF
#clean:
#all:
#install:
#install-strip:
#EOF
#cp -f gcr/tests/Makefile.in gcr/tests/Makefile.am
#cp -f gcr/tests/Makefile.in gck/tests/Makefile.in
#cp -f gcr/tests/Makefile.in gck/tests/Makefile.am
#cp -f gcr/tests/Makefile.in egg/tests/Makefile.am
## fix invalid libgcr-3.so in ui/Makefile (version >= 3.8.0)
#mv ui/Makefile.in ui/Makefile.in.bak
#sed -e "s?\`readlink \$(DESTDIR)\$(libdir)/\([^\.]*\)\.so\`\(.*\)libdir\(.*\)\.so?.libs/\1*.dll\2bindir\3.dll?g" ui/Makefile.in.bak > ui/Makefile.in
#wl-showstatus configure &&
## fix problem detecting GNU gettext tools on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# mv configure configure.bak
# sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
#fi
## fix dependancy on gio-unix (version >= 3.3.3)
#mv configure configure.bak
#sed -e "s/gio-unix/gio-windows/g" configure.bak > configure
## fix dependancy on gtk+-x11-3.0 (version >= 3.20.0)
#mv configure configure.bak2
#sed -e "s/gtk+-x11-3\.0/gtk+-win32-3.0/g" configure.bak2 > configure
#wl-showstatus configure &&
### use strptime from plibc
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no --enable-debug=no LDFLAGS="-Wl,--as-needed -lplibc" &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection=no --enable-debug=no LDFLAGS="-Wl,--as-needed -lplibc" &&
##PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection=no --enable-debug=no LDFLAGS="-Wl,--as-needed -lplibc" &&
##PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection=no --enable-debug=no &&
##PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection=no --enable-debug=no CFLAGS="-I$(pwd)/winfix" &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection=no --enable-debug=no CFLAGS="-I$(pwd)/winfix" &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection=no --enable-debug=no --without-gtk CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--allow-multiple-definition" &&
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection=no --enable-debug=no CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--allow-multiple-definition" &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection=no --without-gtk --enable-debug=no --disable-update-mime --disable-update-icon-cache CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--allow-multiple-definition" &&
# # fix issue with .so file installation (version >= 3.14.0)
# mv Makefile Makefile.bak &&
# sed -e "s/\(\$(LN_S).*readlink.*\.so\)/#\1/" Makefile.bak > Makefile &&
# wl-showstatus build-install &&
# #make install-strip &&
# #( PATH=$PYDIR:$PATH PYTHONPATH=$MINGWPREFIX/share:$MINGWPREFIX/share/glib-2.0${PYTHONPATH:+:$PYTHONPATH} make install-strip || make -j1 all install-strip ) &&
# ( PATH=$PY2DIR:$PATH PYTHONPATH=$MINGWPREFIX/share:$MINGWPREFIX/share/glib-2.0${PYTHONPATH:+:$PYTHONPATH} make install-strip || make -j1 all install-strip ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="gcr"
export STATUS=
#export URL=http://developer.gnome.org/gcr/
export URL=https://gitlab.gnome.org/GNOME/gcr
export BASENAME=gcr
export DESCRIPTION="A library for bits of crypto UI and parsing etc."
export CATEGORY=security
export TYPE=library
#export VERSION=3.35.1
#export VERSIONDATE=20200106
#export VERSION=3.36.0
#export VERSIONDATE=20200311
#export VERSION=3.37.91
#export VERSIONDATE=20200920
#export VERSION=3.38.0
#export VERSIONDATE=20200929
#export VERSION=3.38.1
#export VERSIONDATE=20210113
#export VERSION=3.40.0
#export VERSIONDATE=20210327
#export VERSION=3.41.0
#export VERSIONDATE=20210930
#export VERSION=3.41.1
#export VERSIONDATE=20220714
#export DEPENDENCIES=glib2,gettext,p11-kit,pthreads,pango,cairo,libgcrypt,gtk3,gdk-pixbuf,mman-win32,sys_wait_h,gobject-introspection,vala
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=4.0.0
#export VERSIONDATE=20221013
#export VERSION=4.1.0
#export VERSIONDATE=20230306
#export VERSION=4.2.0
#export VERSIONDATE=20240106
#export VERSION=4.2.1
#export VERSIONDATE=20240302
#export VERSION=4.3.0
#export VERSIONDATE=20240412
export VERSION=4.3.1
export VERSIONDATE=20250205
#export VERSION=4.4.0
#export VERSIONDATE=20250319
####meson.build:26:38: ERROR: Index 2 out of bounds of array of size 2.
wl-showstatus --package-version
export DEPENDENCIES=glib2,gettext,p11-kit,pthreads,pango,cairo,libgcrypt,gtk4,gdk-pixbuf,mman-win32,sys_wait_h,gobject-introspection,vala
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gcr/"
export DOWNLOADURL="https://gitlab.gnome.org/GNOME/gcr/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/gcr/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://download.gnome.org/sources/gcr/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://gitlab.gnome.org/GNOME/gcr/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix missing gmtime_r
for F in $(grep -l gmtime_r $(find -name '*.c')); do
 mv $F $F.bak &&
 echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > $F &&
 echo "#include <time.h>" >> $F &&
 cat $F.bak >> $F
done
# fix missing strptime in gck/gck-slot.c (version >= 3.40.0)
mv gck/gck-slot.c gck/gck-slot.c.bak &&
echo "#define strptime(s,dmt,tm) NULL" > gck/gck-slot.c &&
cat gck/gck-slot.c.bak >> gck/gck-slot.c
# fix missing strptime in gcr/gcr-record.c (version >= 3.40.0)
mv gcr/gcr-record.c gcr/gcr-record.c.bak &&
echo "#define strptime(s,dmt,tm) NULL" > gcr/gcr-record.c &&
cat gcr/gcr-record.c.bak >> gcr/gcr-record.c
# fix invalid includes and undefine GCR_SSH_ASKPASS_TOOL in gcr/gcr-ssh-askpass.c
sed -i.bak -e "s?#include <\(glib-unix\.h\|sys/socket\.h\|sys/un\.h\)>?#undef GCR_SSH_ASKPASS_TOOL?"
# fix missing gdk/gdkx.h
sed -i.bak -e "s?gdk/gdkx\.h?gdk/gdk.h?" $(grep -l gdkx.h $(find -name '*.c'))
# fix egg/test-asn1x.c (version >= 3.40.0)
patch -ulbf egg/test-asn1x.c << EOF
@@ -28,3 +28,5 @@

+#ifndef _WIN32
 #include <pwd.h>
+#endif
 #include <stdlib.h>
EOF
# fix gcr/test-secure-memory.c (version >= 3.40.0)
patch -ulbf gcr/test-secure-memory.c << EOF
@@ -33,3 +33,5 @@
 #include <string.h>
+#ifndef _WIN32
 #include <sys/resource.h>
+#endif
 #include <unistd.h>
@@ -57,2 +59,6 @@
 {
+#ifdef _WIN32
+       g_test_skip ("getrlimit() not available on Windows");
+       return 0;
+#else
        struct rlimit memlock;
@@ -85,2 +91,3 @@
        return memlock.rlim_cur;
+#endif
 }
EOF
# fix gck/gck-attributes.c (version >= 3.40.0)
patch -ulbf gck/gck-attributes.c << EOF
@@ -46,3 +46,5 @@

+#ifndef _WIN32
 G_STATIC_ASSERT (sizeof (GckAttribute) == sizeof (CK_ATTRIBUTE));
+#endif

EOF
# fix gcr/gcr-gnupg-process.c (version >= 3.40.0)
patch -ulbf gcr/gcr-gnupg-process.c << EOF
@@ -35,2 +35,17 @@
 #include <unistd.h>
+#ifdef _WIN32
+#include <windows.h>
+static int kill (DWORD pid, int sig)
+{
+ BOOL status;
+ HANDLE hProcess;
+ if ((hProcess = OpenProcess(PROCESS_TERMINATE, FALSE, pid)) == NULL || hProcess == INVALID_HANDLE_VALUE)
+  return -1;
+ status = TerminateProcess(hProcess, ~0);
+ CloseHandle(hProcess);
+ return (status ? 0 : -1);
+}
+#include <fcntl.h>
+#define pipe(fds) _pipe((fds), 4096, _O_BINARY)
+#endif

@@ -909,4 +924,6 @@
                if (child_fds[i] >= 0) {
+#ifdef FD_CLOEXEC
                        val = fcntl (child_fds[i], F_GETFD);
                        fcntl (child_fds[i], F_SETFD, val & ~FD_CLOEXEC);
+#endif
                }
EOF
# fix gcr/gcr-ssh-askpass.c (version >= 3.40.0)
 fix gcr/gcr-ssh-askpass.c (version >= 3.40.0)
patch -ulbf gcr/gcr-ssh-askpass.c << EOF
@@ -23,3 +23,7 @@

+#ifdef _WIN32
+#include <glib.h>
+#else
 #include <glib-unix.h>
+#endif
 #include <glib/gi18n.h>
@@ -27,4 +31,8 @@

+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <sys/socket.h>
 #include <sys/un.h>
+#endif

@@ -240,2 +248,6 @@
 {
+#ifdef _WIN32
+       g_warning ("UNIX sockets not supported on Windows");
+       return TRUE;
+#else
        GcrSshAskpass *self = user_data;
@@ -266,2 +278,3 @@
        return TRUE;
+#endif
 }
@@ -271,2 +284,5 @@
 {
+#ifdef _WIN32
+       g_warning ("UNIX sockets not supported on Windows");
+#else
        GcrSshAskpass *self = GCR_SSH_ASKPASS (obj);
@@ -309,2 +325,3 @@
        self->source = g_unix_fd_add (self->fd, G_IO_IN, askpass_accept, self);
+#endif
 }
@@ -418,3 +435,5 @@
        /* Close the control terminal */
+#ifndef _WIN32
        setsid ();
+#endif
 }
@@ -455,3 +474,5 @@
        GString *message;
+#ifndef _WIN32
        struct sockaddr_un addr;
+#endif
        const gchar *path;
@@ -469,2 +490,6 @@

+#ifdef _WIN32
+       g_warning ("UNIX sockets not supported on Windows");
+       return -1;
+#else
        fd = socket (AF_UNIX, SOCK_STREAM, 0);
@@ -482,2 +507,3 @@
        }
+#endif

@@ -498,2 +524,3 @@

+#ifndef _WIN32
        if (shutdown (fd, SHUT_WR) < 0) {
@@ -502,2 +529,3 @@
        }
+#endif

EOF
# fix missing syslog stuff in ui/gcr-prompter-tool.c (version >= 3.40.0)
patch -ulbf ui/gcr-prompter-tool.c << EOF
@@ -33,3 +33,14 @@
 #include <string.h>
+#ifdef _WIN32
+#define LOG_CRIT    2
+#define LOG_ERR     3
+#define LOG_WARNING 4
+#define LOG_NOTICE  5
+#define LOG_INFO    6
+#define LOG_DEBUG   7
+#define openlog(...)
+#define syslog(...)
+#else
 #include <syslog.h>
+#endif

EOF
## fix gcr/gcr-ssh-agent-process.c (version >= 3.41.0)
#patch -ulbf gcr/gcr-ssh-agent-process.c << EOF
#@@ -29,4 +29,6 @@
#
#+#ifndef _WIN32
# #include <gio/gunixsocketaddress.h>
# #include <glib-unix.h>
#+#endif
# #include <glib/gstdio.h>
#@@ -180,2 +182,5 @@
# {
#+#ifdef _WIN32
#+       return FALSE;
#+#else
#        const gchar *argv[] = { SSH_AGENT_EXECUTABLE, "-D", "-a", self->path, NULL };
#@@ -196,2 +201,3 @@
#        return TRUE;
#+#endif
# }
#@@ -211,2 +217,5 @@
# {
#+#ifdef _WIN32
#+       return NULL;
#+#else
#        gboolean started = FALSE;
#@@ -255,2 +264,3 @@
#        return connection;
#+#endif
# }
#EOF
## fix gcr/test-ssh-agent-service.c (version >= 3.41.0)
#patch -ulbf gcr/test-ssh-agent-service.c << EOF
#@@ -33,3 +33,5 @@
# #include <glib/gstdio.h>
#+#ifndef _WIN32
# #include <gio/gunixsocketaddress.h>
#+#endif
#
#@@ -74,2 +76,3 @@
# {
#+#ifndef _WIN32
#        const gchar *envvar;
#@@ -95,2 +98,3 @@
#        g_object_unref (client);
#+#endif
# }
#EOF
## fix gcr/gcr-ssh-agent-service.c (version >= 3.41.0)
#patch -ulbf gcr/gcr-ssh-agent-service.c << EOF
#@@ -37,3 +37,5 @@
#
#+#ifndef _WIN32
# #include <gio/gunixsocketaddress.h>
#+#endif
# #include <glib/gstdio.h>
#@@ -408,2 +410,6 @@
#        {
#+#ifdef _WIN32
#+               g_warning ("UNIX sockets not supported on Windows");
#+               return FALSE;
#+#else
#                gchar *path;
#@@ -430,2 +436,3 @@
#                g_setenv ("SSH_AUTH_SOCK", g_unix_socket_address_get_path (G_UNIX_SOCKET_ADDRESS (self->address)), TRUE);
#+#endif
#        }
#EOF
# fix use of already defined name interface gck/gck.h (version >= 3.3.4)
sed -i.bak -e "s/interface/iface/g" gck/gck.h
# fix already defined environ in gcr/gcr-gnupg-process.c (version >= 3.41.0)
sed -i.bak -e "s/\benviron\b/environment/" gcr/gcr-gnupg-process.c
# fix undefined getpagesize in egg/egg-secure-memory.c (version >= 4.3.0)
patch -ulbf egg/egg-secure-memory.c << EOF
@@ -41,2 +41,11 @@
 #include <assert.h>
+#ifdef _WIN32
+#include <windows.h>
+DWORD getpagesize()
+{
+  SYSTEM_INFO sysinfo;
+  GetSystemInfo(&sysinfo);
+  return sysinfo.dwPageSize;
+}
+#endif

EOF
# fix missing gio-unix and gtk+-x11
sed -i.bak -e "s/gio-unix-/gio-windows-/; s/gtk+-x11/gtk+-win32/" meson.build
# fix issue updating MIME database (version >= 3.41.0)
sed -i.bak -e "s/^subprocess.call.*update-mime-database/#&/" meson_post_install.py
# fix unknown keyword packages (version >= 3.41.0)
patch -ulbf gck/meson.build << EOF
@@ -133,3 +133,3 @@
     nsversion: '@0@'.format(gck_major_version),
-    packages: gck_deps,
+    dependencies: gck_deps,
     export_packages: 'gck-@0@'.format(gck_major_version),
EOF
patch -ulbf gcr/meson.build << EOF
@@ -192,3 +192,3 @@
     nsversion: '@0@'.format(gcr_major_version),
-    packages: gcr_base_deps,
+    dependencies: gcr_base_deps,
     export_packages: 'gcr-base-@0@'.format(gcr_major_version),
EOF
patch -ulbf ui/meson.build << EOF
@@ -154,3 +154,3 @@
     symbol_prefix: 'gcr',
-    packages: gcr_ui_deps,
+    dependencies: gcr_ui_deps,
     includes: [
EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgtk=false -Dintrospection=false -Dgtk_doc=false -Dc_args="-I$(cygpath -w $(pwd)/winfix) -I$(cygpath -w $MINGWPREFIX/include/mman-win32) -I$(cygpath -w $MINGWPREFIX/win32ports/include)" -Dc_link_args="-Wl,--as-needed -lmman" . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgtk=true -Dintrospection=true -Dgtk_doc=false -Dc_args="-I$(cygpath -w $(pwd)/winfix) -I$(cygpath -w $MINGWPREFIX/include/mman-win32) -I$(cygpath -w $MINGWPREFIX/win32ports/include)" -Dc_link_args="-Wl,--as-needed -lmman" . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgtk=true -Dssh_agent=false -Dintrospection=true -Dgtk_doc=false -Dc_args="-I$(cygpath -w $(pwd)/winfix) -I$(cygpath -w $MINGWPREFIX/include/mman-win32) -I$(cygpath -w $MINGWPREFIX/win32ports/include)" -Dc_link_args="-Wl,--as-needed -lmman" . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgtk4=true -Dssh_agent=false -Dintrospection=true -Dgtk_doc=false -Dc_args="-I$(cygpath -w $(pwd)/winfix) -I$(cygpath -w $MINGWPREFIX/include/mman-win32) -I$(cygpath -w $MINGWPREFIX/win32ports/include)" -Dc_link_args="-Wl,--as-needed -lmman" . build_both &&
 #PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgtk4=true -Dssh_agent=false -Dintrospection=true -Dgtk_doc=false -Dc_args="-I$(cygpath -w $(pwd)/winfix) -I$(cygpath -w $MINGWPREFIX/include/mman-win32) -I$(cygpath -w $MINGWPREFIX/win32ports/include)" -Dc_link_args="-Wl,--as-needed -lmman" . build_both &&
 #PYTHONPATH=$PWD/winfix:$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgtk4=true -Dssh_agent=false -Dintrospection=true -Dgtk_doc=false -Dc_args="-I$(cygpath -w $(pwd)/winfix) -I$(cygpath -w $MINGWPREFIX/include/mman-win32) -I$(cygpath -w $MINGWPREFIX/win32ports/include)" -Dc_link_args="-Wl,--as-needed -lmman" . build_both &&
 PYTHONPATH=$PWD/winfix:$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgtk4=true -Dssh_agent=false -Dintrospection=true -Dgtk_doc=false -Dc_args="-I$(cygpath -w $(pwd)/winfix) -I$(cygpath -w $MINGWPREFIX/include/mman-win32) -I$(cygpath -w $MINGWPREFIX/win32ports/include) $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wincompatible-pointer-types" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-incompatible-pointer-types"; fi) $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wint-conversion" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=int-conversion"; fi)" -Dc_link_args="-Wl,--as-needed -lmman" . build_both &&
 ## fix slash/backslash path issue when calling Python from Ninja
 #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 ## fix missing strptime (version >= 3.340.0)
 #sed -i.bak -e "s/'-D_XOPEN_SOURCE',/& '-D__XSI_VISIBLE=1',/" gcr/meson.build gck/meson.build &&
 # avoid backslashes in definition of GPG_EXECUTABLE
 echo "#undef GPG_EXECUTABLE" >> build_both/config.h &&
 echo "#define GPG_EXECUTABLE \"gpg.exe\"" >> build_both/config.h &&
 wl-showstatus build-install &&
 #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 #PKG_CONFIG= PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 PATH=$PATH:$PYDIR PYTHONPATH=$PWD/winfix:$MINGWPREFIX/python/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



