export NAME="glbinding"
export STATUS=
export URL=http://www.glbinding.org/
#export URL=https://github.com/cginternals/glbinding
export BASENAME=glbinding
export DESCRIPTION="A C++ binding for the OpenGL API, generated using the gl.xml specification."
export CATEGORY=graphics
export TYPE=library
#export VERSION=2.1.1
#export VERSIONDATE=20160912
####source/glbinding/source/logging.cpp:24:1: error: 'condition_variable' in namespace 'std' does not name a type
#export VERSION=2.1.2
#export VERSIONDATE=20170425
#export VERSION=2.1.3
#export VERSIONDATE=20170505
#export VERSION=2.1.4
#export VERSIONDATE=20180223
#export VERSION=3.0.2
#export VERSIONDATE=20180711
#export VERSION=3.1.0
#export VERSIONDATE=20190427
export VERSION=3.3.0
export VERSIONDATE=20230212
####source/glbinding/source/Binding.cpp:16:1: error: 'recursive_mutex' in namespace 'std' does not name a type
wl-showstatus --package-version
export DEPENDENCIES=glfw3
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=MIT
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/cginternals/glbinding/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/cginternals/glbinding/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
tar mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix source/glbinding/source/getProcAddress.cpp (version >= 3.1.0)
patch -ulbf source/glbinding/source/getProcAddress.cpp << EOF
@@ -33 +33 @@
-       procAddress = ::GetProcAddress(module, name);
+       procAddress = (void*)::GetProcAddress(module, name);
EOF
# fix missing  C:\pthreads\Pre-built.2\lib\x64\pthreadVC2.lib (version >= 1.6.1)
sed -i.bak -e "s/[^ ]*pthreadVC2.lib//" CMakeLists.txt
mkdir -p build_shared build_static &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DOPTION_BUILD_GPU_TESTS:BOOL=OFF -DOPTION_BUILD_TESTS:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -DPYTHON:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DOPTION_BUILD_GPU_TESTS:BOOL=OFF -DOPTION_BUILD_TESTS:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -DPYTHON:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -pthread/" build_static/build.ninja &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPTION_BUILD_GPU_TESTS:BOOL=OFF -DOPTION_BUILD_TESTS:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -DPYTHON:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPTION_BUILD_GPU_TESTS:BOOL=OFF -DOPTION_BUILD_TESTS:BOOL=OFF -DOPTION_BUILD_EXAMPLES:BOOL=OFF -DPYTHON:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -pthread/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 #make -Cbuild_static install/strip &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 #make -Cbuild_shared install/strip &&
 ninja -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/bin &&
 mv -f $INSTALLPREFIX/*.exe $INSTALLPREFIX/*.dll $INSTALLPREFIX/bin/ &&
 #mv -f $INSTALLPREFIX/*.cmake $INSTALLPREFIX/cmake/ &&
 #sed -e "s?\(\${CMAKE_CURRENT_LIST_DIR}\)/\(\${PREFIX}\)?\1/../\2?" glbinding-config.cmake > $INSTALLPREFIX/cmake/glbinding-config.cmake &&
 sed -i -e "s?\(\${CMAKE_CURRENT_LIST_DIR}\)/\(\${PREFIX}\)?\1/\2?" $INSTALLPREFIX/glbinding-config.cmake &&
 sed -i -e "s?/./\([^ ]*.dll\)?/bin/\1?" $INSTALLPREFIX/cmake/glbinding/glbinding-export-release.cmake &&
 sed -i -e "s?/./\([^ ]*.dll\)?/bin/\1?" $INSTALLPREFIX/cmake/glbinding-aux/glbinding-aux-export-release.cmake &&
 rm -f $INSTALLPREFIX/VERSION $INSTALLPREFIX/LICENSE $INSTALLPREFIX/README.md $INSTALLPREFIX/AUTHORS &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



