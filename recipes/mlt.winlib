#export NAME="MLT Multimedia Framework"
#export STATUS=
##export URL=http://mlt.sourceforge.net/
#export URL=http://www.mltframework.org/
#export BASENAME=mlt
#export DESCRIPTION="MLT is an open source multimedia framework, designed and developed for television broadcasting. It provides a toolkit for broadcasters, video editors, media players, transcoders, web streamers and many more types of applications. The functionality of the system is provided via an assortment of ready to use tools, XML authoring components, and an extensible plug-in based API."
#export CATEGORY=framework
#export TYPE=library
##export VERSION=0.5.0
##export VERSIONDATE=20150922
#####MltFactory.cpp:63:26: error: 'mlt_getenv' was not declared in this scope
#####/lib/gcc/i686-w64-mingw32/4.9.3/crtbegin.o:cygming-crtbegin.c:(.text+0x7b): undefined reference to `_Jv_RegisterClasses'
##export VERSION=0.9.8
##export VERSIONDATE=20151114
##export VERSION=6.0.0
##export VERSIONDATE=20160405
##export VERSION=6.2.0
##export VERSIONDATE=20160421
##export VERSION=6.4.0
##export VERSIONDATE=20161113
##export VERSION=6.4.1
##export VERSIONDATE=20161116
##export VERSION=6.6.0
##export VERSIONDATE=20180502
#####src/framework/mlt_properties.c:191: undefined reference to `mlt_properties_from_utf8'
##export VERSION=6.8.0
##export VERSIONDATE=20180511
##export VERSION=6.10.0
##export VERSIONDATE=20180703
##export VERSION=6.12.0
##export VERSIONDATE=20181127
##export VERSION=6.14.0
##export VERSIONDATE=20190331
##export VERSION=6.16.0
##export VERSIONDATE=20190508
##export VERSION=6.20.0
##export VERSIONDATE=20200217
##export VERSION=6.22.0
##export VERSIONDATE=20200731
#####ld.exe: Dwarf Error: Could not find abbrev number 52.
##export VERSION=6.22.1
##export VERSIONDATE=20200802
##export VERSION=6.24.0
##export VERSIONDATE=20201207
##export VERSION=6.26.0
##export VERSIONDATE=20210411
#export VERSION=6.26.1
#export VERSIONDATE=20210414
##export VERSION=7.2.0
##export VERSIONDATE=20211102
##export VERSION=7.4.0
##export VERSIONDATE=20211220
#####undefined reference to `__deregister_frame_info'
#####undefined reference to `__register_frame_info'
#wl-showstatus --package-version
#export DEPENDENCIES=sdl,sdl2,cairo,libdl,libebur128,libexif,fftw,fontconfig,gdk-pixbuf,glib2,libiconv,gettext,jack,pango,rtaudio,rubberband,libsamplerate,sox,swfdec,libvorbis,libxml2
#export OPTIONALDEPENDENCIES=opencv,movit
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
##export BUILDDEPENDENCIES=cmake,ninja
##export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
##export LICENSETYPE=LGPL
#export LICENSETYPE=GPL
#export DOWNLOADURL="http://sourceforge.net/projects/mlt/files/mlt/"
##export DOWNLOADURL="https://github.com/mltframework/mlt/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/mlt/mlt/$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/mlt/mlt/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix missing mlt_setenv/mlt_getenv in src/mlt++/MltFactory.cpp
#sed -i.bak -e "s/mlt_\(.etenv\)/\1/" src/mlt++/MltFactory.cpp
## fix platform detection in configure
#sed -i.bak -e 's/\(grep -iq \)mingw/\1"mingw\\\|msys"/; s/\(MINGW.._NT-\)\(\*|\)/\1\2MSYS\2/' configure
## fix multiple definitions and missing __register_frame_info/__deregister_frame_info in in configure
#sed -i.bak2 -e "s/LDFLAGS\s*+*=.*-Wl,--as-needed/& -Wl,--allow-multiple-definition/" configure
##sed -i.bak2 -e "s/CX*FLAGS\s*+*=.*-Wall/& -fomit-frame-pointer/; s/LDFLAGS\s*+*=.*-Wl,--as-needed/& -Wl,--allow-multiple-definition/" configure
#wl-showstatus configure &&
# #CC=${CC:-gcc} CXX=${CXX:-g++} CFLAGS="" ./configure --prefix=$INSTALLPREFIX &&
# #CC=${CC:-gcc} CXX=${CXX:-g++} CFLAGS="" ./configure --prefix=$INSTALLPREFIX -enable-gpl -disable-decklink &&
# #./configure --prefix=$INSTALLPREFIX --target-os=MinGW --enable-gpl --enable-gpl3 -disable-decklink &&
# #./configure --prefix=$INSTALLPREFIX --target-os=MinGW --enable-gpl --enable-gpl3 &&
# ./configure --prefix=$INSTALLPREFIX --target-os=MinGW --disable-debug --enable-gpl --enable-gpl3 --disable-windeploy &&
# #--enable-opencv 
# #--disable-sse --disable-sse2 --disable-mmx 
# wl-showstatus build &&
# #sed -i.bak -e "s/LIBFLAGS *=.*$/& -Wl,--allow-multiple-definition -lstdc++/" src/mlt++/config.mak
# sed -i.bak -e "s/-Wl,enable-auto-import/-Wl,-enable-auto-import/" src/modules/swfdec/Makefile &&
# sed -i.bak -e "s/FLAGS += -Wl,--output-def.*$/& -Wl,--out-implib,\$(NAME).a/" src/framework/Makefile src/mlt++/Makefile &&
# #make CC=${CC:-gcc} CFLAGS="-DMLTPP_EXPORTS" LIBDL="-Wl,--as-needed -ldl" SHFLAGS="-mdll" &&
# #make CC="${CC:-gcc} -DWIN32 -DMLTPP_EXPORTS" LIBDL="-Wl,--as-needed -ldl" SHFLAGS="-mdll" &&
# #make CC=${CC:-gcc} RDYNAMIC="-DWIN32 -DMLTPP_EXPORTS" LIBDL="-Wl,--as-needed -ldl" SHFLAGS="-mdll" LIBSUF=".dll" &&
# #make CC=${CC:-gcc} RDYNAMIC="-DWIN32 -DMLTPP_EXPORTS" LIBDL="-Wl,--as-needed -ldl -Wl,--allow-multiple-definition" SHFLAGS="-mdll" LIBSUF=".dll" &&
# #make CC=${CC:-gcc} RDYNAMIC="-DWIN32 -DMLTPP_EXPORTS" LIBDL="-Wl,--as-needed -ldl" SHFLAGS="-mdll" LIBSUF=".dll" &&
# #make -C src/mlt++/ -j1 LIBSUF=.a CXXFLAGS="-DWIN32 -DMLTPP_EXPORTS -I.." &&
# #make CC=${CC:-gcc} &&
# make CC="${CC:-gcc} -I$MINGWPREFIX/include/libdl-win32" &&
# wl-showstatus build-install &&
# #make install-strip &&
# make install &&
# cp -f src/framework/*.a src/mlt++/*.a $INSTALLPREFIX/lib/ &&
# #mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# strip $INSTALLPREFIX/bin/*.dll $INSTALLPREFIX/lib/mlt/*.dll &&
# #strip $INSTALLPREFIX/*.{dll,exe} &&
# #mv -f $INSTALLPREFIX/*.{dll,exe} $INSTALLPREFIX/bin/ &&
# strip $INSTALLPREFIX/bin/*.{dll,exe} &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="MLT Multimedia Framework"
export STATUS=
export URL=http://www.mltframework.org/
export BASENAME=mlt
export DESCRIPTION="MLT is an open source multimedia framework, designed and developed for television broadcasting. It provides a toolkit for broadcasters, video editors, media players, transcoders, web streamers and many more types of applications. The functionality of the system is provided via an assortment of ready to use tools, XML authoring components, and an extensible plug-in based API."
export CATEGORY=framework
export TYPE=library
#export VERSION=7.2.0
#export VERSIONDATE=20211102
####undefined reference to `__deregister_frame_info'
####undefined reference to `__register_frame_info'
#export VERSION=7.4.0
#export VERSIONDATE=20211220
#export VERSION=7.6.0
#export VERSIONDATE=20220330
#export VERSION=7.8.0
#export VERSIONDATE=20220623
#export DEPENDENCIES=sdl,sdl2,cairo,libdl,libebur128,libexif,fftw,fontconfig,gdk-pixbuf,glib2,libiconv,gettext,jack,pango,rtaudio,rubberband,libsamplerate,sox,swfdec,libvorbis,libxml2
#export OPTIONALDEPENDENCIES=opencv,movit
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=7.10.0
#export VERSIONDATE=20221101
#export VERSION=7.12.0
#export VERSIONDATE=20221120
#export VERSION=7.14.0
#export VERSIONDATE=20230307
#export VERSION=7.16.0
#export VERSIONDATE=20230508
#export VERSION=7.18.0
#export VERSIONDATE=20230729
#export VERSION=7.20.0
#export VERSIONDATE=20231002
#export VERSION=7.22.0
#export VERSIONDATE=20231129
export VERSION=7.24.0
export VERSIONDATE=20240428
wl-showstatus --package-version
export DEPENDENCIES=sdl,sdl2,cairo,libdl,libebur128,libexif,fftw,fontconfig,gdk-pixbuf,glib2,libiconv,gettext,jack,pango,rubberband,libsamplerate,sox,swfdec,libvorbis,libxml2
export OPTIONALDEPENDENCIES=opencv
#movit
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/mltframework/mlt/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/mltframework/mlt/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix src/modules/rtaudio/RtAudio.cpp (version >= 7.10.0)
#patch -ulbf src/modules/rtaudio/RtAudio.cpp << EOF
#@@ -2686,3 +2686,3 @@
# #include "asiosys.h"
#-#include "asio.h"
#+#include "asio.hpp"
# #include "iasiothiscallresolver.h"
#EOF
# fix error: function '__xmlFree' is initialized like a variable (version >= 7.24.0)
patch -ulbf src/modules/jackrack/jack_rack.c << EOF
@@ -177,3 +177,3 @@
   unsigned long control = 0;
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
   xmlFreeFunc xmlFree = NULL;
@@ -274,3 +274,3 @@
   saved_plugin_t * saved_plugin;
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
   xmlFreeFunc xmlFree = NULL;
EOF
patch -ulbf src/modules/xml/consumer_xml.c << EOF
@@ -982,3 +982,3 @@
         mlt_properties_set(properties, resource, _s(buffer));
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
         xmlFreeFunc xmlFree = NULL;
EOF
patch -ulbf src/modules/xml/producer_xml.c << EOF
@@ -1484,3 +1484,3 @@
             mlt_properties_set_string(properties, context->property, _s(value));
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
             xmlFreeFunc xmlFree = NULL;
EOF
# fix detection of rtaudio (version >= 7.4.0)
echo "SET_TARGET_PROPERTIES(PkgConfig::rtaudio PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"$(cygpath -m $MINGWPREFIX/include/rtaudio)\")" >> src/modules/rtaudio/CMakeLists.txt
# fix detection of libdl in CMakeLists.txt (version >= 7.4.0)
patch -ulbf CMakeLists.txt << EOF
@@ -149,6 +149,3 @@
   find_package(Iconv REQUIRED)
-  if(NOT CMAKE_DL_LIBS)
-    find_package(dlfcn-win32 REQUIRED)
-    set(CMAKE_DL_LIBS dlfcn-win32::dl)
-  endif()
+  set(CMAKE_DL_LIBS "-ldl")
 endif()
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DMOD_RTAUDIO:BOOL=OFF -DMOD_MOVIT:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/share/rtaudio/asiosdk/common" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
 # add linker flag
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -liconv/" build_static/build.ninja &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DMOD_RTAUDIO:BOOL=OFF -DMOD_MOVIT:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32" -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/share/rtaudio/asiosdk/common" -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
 # add linker flag
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -liconv/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/bin &&
 mv -f $INSTALLPREFIX/*.dll $INSTALLPREFIX/bin/ &&
 # fix location of DLL
 sed -i -e "s?/\.\(/libmlt-7\.dll\)?/bin\1?" $INSTALLPREFIX/lib/cmake/Mlt7/Mlt7Targets-release.cmake &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



