#export NAME="LightGBM"
#export STATUS=
#export URL=https://github.com/microsoft/LightGBM
#export BASENAME=lightgbm
#export DESCRIPTION="A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks."
#export CATEGORY=math
#export TYPE=library
#export VERSION=3.1.1
#export VERSIONDATE=20201214
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/microsoft/LightGBM/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/microsoft/LightGBM/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
#wl-showstatus build-install &&
# $PYDIR/python.exe setup.py install --prefix=$(cygpath -w $INSTALLPREFIX) --force --mingw &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="LightGBM"
export STATUS=
export URL=https://github.com/microsoft/LightGBM
export BASENAME=lightgbm
export DESCRIPTION="A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks."
export CATEGORY=math
export TYPE=library
#export VERSION=3.1.2
#export VERSIONDATE=20201222
#export DEPENDANCIES=boost,fmt,fast_double_parser
##export DEPENDANCIES=boost,fmt,fast_double_parser,khronos-opencl-headers,khronos-opencl-icd-loader
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake,ninja
#export VERSION=3.2.0
#export VERSIONDATE=20210322
#export VERSION=3.2.1
#export VERSIONDATE=20210413
####CMakeFiles/lightgbm.dir/src/application/application.cpp.obj:application.cpp:(.text+0x2777): relocation truncated to fit: IMAGE_REL_AMD64_REL32 against undefined symbol `TLS init function for LightGBM::Network::num_machines_'
#export VERSION=3.3.0
#export VERSIONDATE=20211009
#export VERSION=3.3.1
#export VERSIONDATE=20211027
export VERSION=3.3.2
export VERSIONDATE=20220108
wl-showstatus --package-version
export DEPENDANCIES=boost,fmt,fast_double_parser,eigen
#export DEPENDANCIES=boost,fmt,fast_double_parser,eigen,khronos-opencl-headers,khronos-opencl-icd-loader
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/microsoft/LightGBM/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/microsoft/LightGBM/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd LightGBM-$VERSION
# fix missing dependancy includes in include/LightGBM/utils/common.h
sed -i.bak -e "s?../../../external_libs/fmt/include/??; s?../../../external_libs/fast_double_parser/include/??" include/LightGBM/utils/common.h
## support OpenCL in CMakeIntegratedOpenCL.cmake (version = 3.1.2)
#patch -ulbf CMakeIntegratedOpenCL.cmake << EOF
#@@ -33,3 +33,3 @@
# list(APPEND INTEGRATED_OPENCL_INCLUDES \${OPENCL_ICD_LOADER_HEADERS_DIR})
#-list(APPEND INTEGRATED_OPENCL_LIBRARIES \${opencl-icd-loader_BINARY_DIR}/Release/OpenCL.lib cfgmgr32.lib runtimeobject.lib)
#+list(APPEND INTEGRATED_OPENCL_LIBRARIES -lOpenCL -lcfgmgr32 -lruntimeobject)
# list(APPEND INTEGRATED_OPENCL_DEFINITIONS CL_TARGET_OPENCL_VERSION=120)
#@@ -81,3 +81,2 @@
# else()
#-  message(FATAL_ERROR "Integrated OpenCL build is not yet available for MinGW") endif()
#EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIB:BOOL=ON -DUSE_GPU:BOOL=ON -DUSE_OPENMP:BOOL=ON -D__INTEGRATE_OPENCL:BOOL=OFF -S. -Bbuild_win &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIB:BOOL=ON -DUSE_GPU:BOOL=ON -DUSE_OPENMP:BOOL=ON -D__INTEGRATE_OPENCL:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/eigen3" -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_STATIC_LIB:BOOL=ON -DUSE_GPU:BOOL=ON -DUSE_OPENMP:BOOL=ON -D__INTEGRATE_OPENCL:BOOL=ON -DOPENCL_ICD_LOADER_HEADERS_DIR:PATH=$MINGWPREFIX/include -DOpenCL_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/eigen3" -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf LightGBM-$VERSION



