export NAME="Manticore Columnar Library "
export STATUS=
export URL=https://github.com/manticoresoftware/columnar
export BASENAME=columnar
export DESCRIPTION="Manticore Columnar Library is a column-oriented storage library, aiming to provide decent performance with low memory footprint at big data volume."
export CATEGORY=database
#export TYPE=library
#export VERSION=master
#export VERSIONDATE=20210826
export VERSION=1.15.4
export VERSIONDATE=20220522
#export VERSION=16
#export VERSIONDATE=20220727
####CMake Error at CMakeLists.txt:50 (add_library): Cannot find source file: src/bitpacking.cpp
#export VERSION=1.16.1
#export VERSIONDATE=20221014
#export VERSION=2.0.0
#export VERSIONDATE=20230208
#export VERSION=2.0.2
#export VERSIONDATE=20230304
#export VERSION=2.0.4
#export VERSIONDATE=20230306
#export VERSION=2.2.0
#export VERSIONDATE=20230805
#export VERSION=2.2.4
#export VERSIONDATE=20230823
#export VERSION=2.3.0
#export VERSIONDATE=20240615
#export VERSION=4.0.0
#export VERSIONDATE=20250124
#export VERSION=4.2.0
#export VERSIONDATE=20250329
wl-showstatus --package-version
export DEPENDENCIES=re2,snowball,fastpfor,pgm-index,streamvbyte
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/manticoresoftware/columnar/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/manticoresoftware/columnar/archive/refs/heads/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/manticoresoftware/columnar/archive/refs/tags/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/manticoresoftware/columnar/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix for Windows
sed -i.bak -e "s/_MSC_VER/_WIN32/" util/reader.cpp util/util.h util/util.cpp
# fix missing InterlockedIncrement in util/delta.cpp
mv util/delta.cpp util/delta.cpp.bak2 &&
echo "#include <windows.h>" > util/delta.cpp &&
cat util/delta.cpp.bak2 >> util/delta.cpp
# fix undefined uint32_t in common/schema.h (version >= 2.2.4)
mv common/schema.h common/schema.h.bak &&
echo "#include <cstdint>" > common/schema.h &&
cat common/schema.h.bak >> common/schema.h
## missing FastPForLib::needPaddingTo128Bits in secondary/builder.cpp (version >= 2.2.4)
#sed -i.bak -e "s/FastPForLib::needPaddingTo128Bits( dRows.begin() )/false/" secondary/builder.cpp
# fix detection of installed library pgm-index (version >= 2.2.0)
mv cmake/GetPGM.cmake cmake/GetPGM.cmake.bak &&
cat > cmake/GetPGM.cmake << EOF
add_library(PGM INTERFACE)
add_library(PGM::pgmindexlib ALIAS PGM)
EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLIBS_BUNDLE:PATH=$MINGWPREFIX -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/fastpfor -fopenmp -fpermissive" -S. -Bbuild_win &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLIBS_BUNDLE:PATH=$MINGWPREFIX -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -Dstreamvbyte_DIR:PATH=$MINGWPREFIX/lib/cmake -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/fastpfor -fopenmp -fpermissive" -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



