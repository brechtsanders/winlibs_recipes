#export NAME="QuaZIP"
#export STATUS=
#export URL=http://quazip.sourceforge.net/
##export URL=https://github.com/stachenov/quazip
#export BASENAME=quazip
#export DESCRIPTION="QuaZIP - Qt/C++ wrapper for ZIP/UNZIP package"
#export CATEGORY=compression
#export TYPE=library
##export VERSION=0.7.6
##export VERSIONDATE=20180716
##export VERSION=0.8
##export VERSIONDATE=20190524
##export VERSION=0.8.1
##export VERSIONDATE=20190527
#####this code requires Qt 4.x
##export VERSION=0.9
##export VERSIONDATE=20200429
#export VERSION=0.9.1
#export VERSIONDATE=20200524
#export DEPENDENCIES=qt4
#export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=cmake
##export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/stachenov/quazip/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/stachenov/quazip/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/stachenov/quazip/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
##tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
##mkdir -p build_win &&
## wl-showstatus configure &&
## QMAKESPEC=$MINGWPREFIX/qt4/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe -DBUILD_WITH_QT4:BOOL=ON -S. -Bbuild_win &&
## #QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe -DQt5Core_DIR:PATH=$MINGWPREFIX/qt -DBUILD_WITH_QT4:BOOL=OFF -S. -Bbuild_win &&
## wl-showstatus build-install &&
## make -Cbuild_win install/strip &&
## mkdir -p $INSTALLPREFIX/bin &&
## mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
## cp -f $INSTALLPREFIX/lib/libquazip_static.a $INSTALLPREFIX/lib/libquazip.a &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#mkdir -p build_win &&
# wl-showstatus configure &&
# QMAKESPEC=$MINGWPREFIX/qt4/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe -DBUILD_WITH_QT4:BOOL=ON -S. -Bbuild_win &&
# #QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe -DQt5Core_DIR:PATH=$MINGWPREFIX/qt -DBUILD_WITH_QT4:BOOL=OFF -S. -Bbuild_win &&
# wl-showstatus build-install &&
# ninja -Cbuild_win install/strip &&
# mkdir -p $INSTALLPREFIX/bin &&
# mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# strip $INSTALLPREFIX/bin/*.dll &&
# cp -f $INSTALLPREFIX/lib/libquazip_static.a $INSTALLPREFIX/lib/libquazip.a &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="QuaZIP"
#export STATUS=
#export URL=http://quazip.sourceforge.net/
##export URL=https://github.com/stachenov/quazip
#export BASENAME=quazip
#export DESCRIPTION="QuaZIP - Qt/C++ wrapper for ZIP/UNZIP package"
#export CATEGORY=compression
#export TYPE=library
##export VERSION=1.0
##export VERSIONDATE=20201005
##export VERSION=1.1
##export VERSIONDATE=20201011
#export VERSION=1.2
#export VERSIONDATE=20211113
#wl-showstatus --package-version
#export DEPENDENCIES=qt
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/stachenov/quazip/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/stachenov/quazip/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_WITH_QT4:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_WITH_QT4:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="QuaZIP"
export STATUS=
export URL=http://quazip.sourceforge.net/
#export URL=https://github.com/stachenov/quazip
export BASENAME=quazip
export DESCRIPTION="QuaZIP - Qt/C++ wrapper for ZIP/UNZIP package"
export CATEGORY=compression
export TYPE=library
#export VERSION=1.3
#export VERSIONDATE=20220416
export VERSION=1.4
export VERSIONDATE=20230123
wl-showstatus --package-version
export DEPENDENCIES=qt6,zlib
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/stachenov/quazip/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/stachenov/quazip/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



