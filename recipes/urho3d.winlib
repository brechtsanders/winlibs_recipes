export NAME="Urho3D"
export STATUS=
export URL=https://urho3d.github.io/
#export URL=https://github.com/urho3d/Urho3D
export BASENAME=urho3d
export DESCRIPTION="Urho3D is a free lightweight, cross-platform 2D and 3D game engine implemented in C++ and released under the MIT license. Greatly inspired by OGRE and Horde3D."
export CATEGORY=games,framework
export TYPE=library
#export VERSION=1.7.1
#export VERSIONDATE=20201009
#export VERSION=1.8
#export VERSIONDATE=20220128
export VERSION=1.9.0
export VERSIONDATE=20221122
wl-showstatus --package-version
export DEPENDENCIES=sqlite3
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/urho3d/Urho3D/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/urho3d/Urho3D/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# skip SDL xaudio2 support
sed -i.bak -e "s/if(HAVE_XAUDIO2_H)/if(FALSE)/" Source/ThirdParty/SDL/CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/urho3d -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DURHO3D_DATABASE_SQLITE:BOOL=ON -DURHO3D_OPENGL:BOOL=ON -DURHO3D_DOCS:BOOL=OFF -DURHO3D_SAMPLES:BOOL=OFF -DURHO3D_TESTING:BOOL=OFF -DURHO3D_PCH:BOOL=OFF -DMINGW_SYSROOT:PATH=$MINGWPREFIX -S. -Bbuild_static &&
 #wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/share/urho3d -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DURHO3D_DATABASE_SQLITE:BOOL=ON -DURHO3D_OPENGL:BOOL=ON -DURHO3D_DOCS:BOOL=OFF -DURHO3D_SAMPLES:BOOL=OFF -DURHO3D_TESTING:BOOL=OFF -DURHO3D_PCH:BOOL=OFF -DMINGW_SYSROOT:PATH=$MINGWPREFIX -S. -Bbuild_shared &&
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/ & -Wl,--as-needed -llua/" build_shared/build.ninja &&
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/ & -Wl,--as-needed $(pkg-config --libs-only-l luajit)/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: build DLL



