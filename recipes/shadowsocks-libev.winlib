export NAME="shadowsocks-libev"
export STATUS=
export URL=https://github.com/shadowsocks/shadowsocks-libev
export BASENAME=shadowsocks-libev
export DESCRIPTION="libev port of shadowsocks"
export CATEGORY=communications
export TYPE=library
#export VERSION=3.1.0
#export VERSIONDATE=20171027
#export VERSION=3.1.1
#export VERSIONDATE=20171120
#export VERSION=3.1.2
#export VERSIONDATE=20171229
#export VERSION=3.1.3
#export VERSIONDATE=20180116
#export VERSION=3.2.0
#export VERSIONDATE=20180529
#export VERSION=3.2.1
#export VERSIONDATE=20181108
####src/libcork/posix/subprocess.c:504:2: error: #error "Unknown thread yield implementation"
#export VERSION=3.2.2
#export VERSIONDATE=20181127
#export VERSION=3.2.3
#export VERSIONDATE=20181128
#export VERSION=3.2.4
#export VERSIONDATE=20190226
#export VERSION=3.2.5
#export VERSIONDATE=20190309
#export VERSION=3.3.0
#export VERSIONDATE=20190608
#export VERSION=3.3.1
#export VERSIONDATE=20190809
#export VERSION=3.3.2
#export VERSIONDATE=20191012
#export VERSION=3.3.3
#export VERSIONDATE=20191031
#export VERSION=3.3.4
#export VERSIONDATE=20200111
export VERSION=3.3.5
export VERSIONDATE=20200915
wl-showstatus --package-version
export DEPENDENCIES=pcre,libev,libsodium,mbedtls,c-ares
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=xmlto
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/shadowsocks/shadowsocks-libev/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/shadowsocks/shadowsocks-libev/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix missing files (version <= 3.2.1)
#mkdir -p winfix/sys winfix/arpa
#echo "#define pipe(fds) _pipe(fds, 4096, _O_BINARY)" > winfix/sys/select.h
#touch winfix/sys/wait.h
#echo "#include <winsock2.h>" > winfix/sys/socket.h
#touch winfix/arpa/inet.h
# skip making doc
cat > doc/Makefile.in << EOF
clean:
all:
install:
install-strip:
EOF
# don't abort on warnings
sed -i.bak -e "s/-Wall -Werror//" src/Makefile.in
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-sodium=$MINGWPREFIX CFLAGS="-I$(pwd)/winfix" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --disable-ssp --disable-connmarktos --with-sodium=$MINGWPREFIX CFLAGS="-I$(pwd)/winfix" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --disable-ssp --disable-connmarktos --with-sodium=$MINGWPREFIX CFLAGS="-fcommon -I$(pwd)/winfix" &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 wl-showstatus build-install &&
 PATH=$PYDIR:$PATH make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



