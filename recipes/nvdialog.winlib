export NAME="nvdialog"
export STATUS=
export URL=https://tseli0s.github.io/nv.dialog/
#export URL=https://github.com/tseli0s/nvdialog
export BASENAME=nvdialog
export DESCRIPTION="A simple, cross-platform dialog box library"
export CATEGORY=gui
export TYPE=library
#export VERSION=0.8.1
#export VERSIONDATE=20240825
#export VERSION=0.9.0
#export VERSIONDATE=20250520
export VERSION=0.10.0
export VERSIONDATE=20251025
wl-showstatus --package-version
export DEPENDENCIES=libdl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/tseli0s/nvdialog/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/tseli0s/nvdialog/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix CMakeLists.txt (version >= 0.8.1)
patch -ulbf CMakeLists.txt << EOF
@@ -21,3 +21,3 @@
 # For that reason, we set the prefix to /usr.
-if (NOT DEFINED ENV{FLATPAK_ID})
+if (NOT DEFINED ENV{FLATPAK_ID} AND NOT MINGW)
         set(CMAKE_INSTALL_PREFIX /usr)
@@ -43,3 +43,2 @@
 if(WIN32_TARGET)
-        set(CMAKE_C_COMPILER /usr/bin/i686-w64-mingw32-gcc-win32)
         set(CMAKE_C_FLAGS "\${CMAKE_C_FLAGS} -fno-stack-protector -Wno-unused-parameter -Wconversion -Werror=format -Werror=format-security -Winline -Wall -Wextra")
@@ -191,3 +190,3 @@

-        set(NVDIALOG_PKG_CONFIG_FILE \${CMAKE_SOURCE_DIR}/build/nvdialog.pc)
+        set(NVDIALOG_PKG_CONFIG_FILE \${CMAKE_BINARY_DIR}/nvdialog.pc)
         install(FILES \${NVDIALOG_PKG_CONFIG_FILE} DESTINATION \${CMAKE_INSTALL_PREFIX}/share/pkgconfig)
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DNVD_BUILD_STATIC:BOOL=ON -DWIN32_TARGET:BOOL=ON -DCOCOA_TARGET:BOOL=OFF -S. -Bbuild_static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DNVD_BUILD_STATIC:BOOL=ON -DWIN32_TARGET:BOOL=ON -DCOCOA_TARGET:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32 $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wint-conversion" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=int-conversion"; fi) $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" -S. -Bbuild_static &&
 wl-showstatus configure-shared &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DNVD_BUILD_STATIC:BOOL=OFF -DWIN32_TARGET:BOOL=ON -DCOCOA_TARGET:BOOL=OFF -S. -Bbuild_shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DNVD_BUILD_STATIC:BOOL=OFF -DWIN32_TARGET:BOOL=ON -DCOCOA_TARGET:BOOL=OFF -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/include/libdl-win32 $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wint-conversion" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=int-conversion"; fi) $(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" -S. -Bbuild_shared &&
 wl-showstatus build-install-static &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install-shared &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



