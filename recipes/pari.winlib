export NAME="pari"
export STATUS=
export URL=http://pari.math.u-bordeaux.fr/
export BASENAME=pari
export DESCRIPTION="PARI/GP is a widely used computer algebra system designed for fast computations in number theory (factorizations, algebraic number theory, elliptic curves...), but also contains a large number of other useful functions to compute with mathematical entities such as matrices, polynomials, power series, algebraic numbers etc., and a lot of transcendental functions."
export CATEGORY=math
export TYPE=library
#export VERSION=2.3.4
#export VERSION=2.3.5
#export VERSIONDATE=20100205
#export VERSION=2.5.1
#export VERSIONDATE=20120207
#export VERSION=2.5.2
#export VERSIONDATE=20120804
####src/language/init.c:58:3: error: initializer element is not constant
#export VERSION=2.5.3
#export VERSIONDATE=20121003
#export VERSION=2.5.4
#export VERSIONDATE=20130513
#export VERSION=2.5.5
#export VERSIONDATE=20130921
#export VERSION=2.7.0
#export VERSIONDATE=20140324
#export VERSION=2.7.1
#export VERSIONDATE=20140517
#export VERSION=2.7.2
#export VERSIONDATE=20140919
#export VERSION=2.7.3
#export VERSIONDATE=20150219
#export VERSION=2.7.4
#export VERSIONDATE=20150620
#export VERSION=2.7.5
#export VERSIONDATE=20151111
#export VERSION=2.7.6
#export VERSIONDATE=20160621
#export VERSION=2.9.0
#export VERSIONDATE=20161102
#export VERSION=2.9.1
#export VERSIONDATE=20161201
#export VERSION=2.9.2
#export VERSIONDATE=20170406
#export VERSION=2.9.3
#export VERSIONDATE=20170714
####src/language/es.o:es.c:(.text+0x46a2): undefined reference to `win32_ansi_fputs'
#export VERSION=2.9.4
#export VERSIONDATE=20180108
#export VERSION=2.9.5
#export VERSIONDATE=20180518
#export VERSION=2.11.0
#export VERSIONDATE=20180719
#export VERSION=2.11.1
#export VERSIONDATE=20181202
#export VERSION=2.11.2
#export VERSIONDATE=20190513
#export VERSION=2.11.3
#export VERSIONDATE=20200303
#export VERSION=2.11.4
#export VERSIONDATE=20200417
#export VERSION=2.13.0
#export VERSIONDATE=20201020
#export VERSION=2.13.1
#export VERSIONDATE=20210125
#export VERSION=2.13.2
#export VERSIONDATE=20210624
#export VERSION=2.13.3
#export VERSIONDATE=20211025
#export VERSION=2.13.4
#export VERSIONDATE=20220407
#export VERSION=2.15.0
#export VERSIONDATE=20220919
#export VERSION=2.15.1
#export VERSIONDATE=20221105
export VERSION=2.15.2
export VERSIONDATE=20221231
wl-showstatus --package-version
export DEPENDENCIES=gmp,readline,termcap
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL2
#export DOWNLOADURL="http://pari.math.u-bordeaux.fr/download.html"
export DOWNLOADURL="http://pari.math.u-bordeaux.fr/pub/pari/unix/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://pari.math.u-bordeaux.fr/pub/pari/unstable/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://pari.math.u-bordeaux.fr/pub/pari/unix/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# remove UNIX define
mv config/paricfg.h.SH config/paricfg.h.SH.bak
sed -e "s?\(#define UNIX\)?//\1?" config/paricfg.h.SH.bak > config/paricfg.h.SH
# fix config/install to ignore chmod errors
patch -ulbf config/install << EOF
--- config/install  2008-03-31 13:43:59 +0200
+++ config/install  2011-01-31 11:17:40 +0100
@@ -19,2 +19,2 @@
 cp "\$1" "\$2";
-if test -f "\$file"; then chmod "\$mode" "\$file"; fi
+if test -f "\$file"; then chmod "\$mode" "\$file" || true; fi

EOF
# fix redefiniton of open in src/language/es.c
mv src/language/es.c src/language/es.c.bak
echo "#include <io.h>" > src/language/es.c
cat src/language/es.c.bak >> src/language/es.c
# fix redefiniton of open in src/gp/gp.c
mv src/gp/gp.c src/gp/gp.c.bak
echo "#include <windows.h>" > src/gp/gp.c
cat src/gp/gp.c.bak >> src/gp/gp.c
## fix src/headers/parigen.h for 64-bit (version <= 2.11.2)
#patch -ulbf src/headers/parigen.h << EOF
#--- src/headers/parigen.h       2012-01-26 17:26:14 +0100
#+++ src/headers/parigen.h       2012-05-29 21:10:34 +0200
#@@ -18 +18 @@
#-typedef long *GEN;
#+typedef intptr_t *GEN;
#EOF
# fix src/headers/parigen.h for 64-bit (version >= 2.11.3)
patch -ulbf src/headers/parigen.h << EOF
--- src/headers/parigen.h  2016-09-29 13:56:44.000000000 +0200
+++ src/headers/parigen.h  2016-11-02 09:38:20.746222300 +0100
@@ -17,3 +17,5 @@
 typedef unsigned long long pari_ulong;
+#ifndef __MINGW64__
 #define long long long
+#endif
 #define labs llabs
@@ -23,3 +25,3 @@
 #define ulong pari_ulong
-typedef long *GEN;
+typedef intptr_t *GEN;

EOF
## fix src/language/init.c for 64-bit (version <= 2.5.1)
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
#patch -ulbf src/language/init.c << EOF
#--- src/language/init.c  2012-01-26 17:26:14 +0100
#+++ src/language/init.c  2012-06-14 11:44:50 +0200
#@@ -57,4 +57,4 @@
#   evaltyp(t_FRAC) | _evallg(3), /* ghalf */
#-  (long)(readonly_constants+4),
#-  (long)(readonly_constants+7)
#+  evaltyp(t_INT) | _evallg(3),
#+  evaltyp(t_INT) | _evallg(3)
# };
#EOF
#fi
## fix src/language/init.c for 64-bit (version >= 2.5.2 <= 2.7.0)
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
#patch -ulbf src/language/init.c << EOF
#--- src/language/init.c  2012-01-26 17:26:14 +0100
#+++ src/language/init.c 2012-08-06 14:23:16 +0200
#@@ -57,4 +57,4 @@
#   evaltyp(t_FRAC) | _evallg(3), /* ghalf */
#-  (ulong)(readonly_constants+4),
#-  (ulong)(readonly_constants+7)
#+  evaltyp(t_INT) | _evallg(3),
#+  evaltyp(t_INT) | _evallg(3)
# };
#EOF
#fi
# fix src/language/init.c for 64-bit (version >= 2.7.1)
if ( echo $RUNPLATFORM | grep -q x86_64 ); then
patch -ulbf src/language/init.c << EOF
--- src/language/init.c  2014-05-10 19:59:30 +0200
+++ src/language/init.c  2014-05-20 10:01:40 +0200
@@ -55,4 +55,4 @@
   evaltyp(t_FRAC) | _evallg(3), /* ghalf */
-  (long)(readonly_constants+4),
-  (long)(readonly_constants+7)
+  evaltyp(t_INT) | _evallg(3),
+  evaltyp(t_INT) | _evallg(3)
 };
EOF
fi
# fix src/kernel/none/level1.h for 64-bit (version >= 2.7.1)
patch -ulbf src/kernel/none/level1.h << EOF
--- src/kernel/none/level1.h  2014-05-10 19:59:30 +0200
+++ src/kernel/none/level1.h  2014-05-17 00:14:14 +0200
@@ -55,3 +55,3 @@
 stackdummy(pari_sp av, pari_sp ltop) {
-  long l = ((GEN)av) - ((GEN)ltop);
+  intptr_t l = ((GEN)av) - ((GEN)ltop);
   if (l > 0) {
@@ -60,3 +60,3 @@
 #ifdef DEBUG
-    { long i; for (i = 1; i < l; i++) z[i] = 0; }
+    { intptr_t i; for (i = 1; i < l; i++) z[i] = 0; }
 #endif
EOF
wl-showstatus configure &&
# fix install problem with .exe extension and build
#./configure --prefix=$INSTALLPREFIX --with-fltk=none && 
#./configure --prefix=$INSTALLPREFIX --graphic=win32 --with-readline --with-fltk=none && 
#./configure --prefix=$INSTALLPREFIX --graphic=win32 --with-readline --with-fltk=none --graphic=win32 --with-readline --with-gmp &&
./configure --prefix=$INSTALLPREFIX --host=$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "x86_64"; else echo "i686"; fi)-mingw --graphic=win32 --with-readline --with-fltk=none --graphic=win32 --with-readline --with-gmp &&
 sed -i.bak -e "s/^\(arch *= *\).*$/\1$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo "x86_64"; else echo "i686"; fi)/; s/^\(osname *= *\).*/\1mingw/" config/objdir &&
 # avoid inline assembler on 64-bit (version >= 2.11.4)
 if ( echo $RUNPLATFORM | grep -q x86_64 ); then
  sed -i.bak -e "s/^\(ASMINLINE='\)yes/&no/" Omingw*/pari.cfg &&
  sed -i.bak -e "s/^#define ASMINLINE/\/\/&/" Omingw*/paricfg.h
 fi &&
 wl-showstatus build-install &&
 # fix configuration issues (version >= 2.7.0)
 (
cat >> $(ls -1d O*mingw* 2> /dev/null||ls -1d O*msys*)/paricfg.h << EOF
#undef HAS_TIOCGWINSZ
#undef HAS_SIGACTION
#undef USE_GETRUSAGE
#undef USE_CLOCK_GETTIME
#undef STACK_CHECK
#undef HAS_WAITPID
#undef HAS_SETSID
#undef SIGALRM
#undef HAS_ALARM
#undef HAS_DLOPEN
EOF
 ) &&
 mv $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile.bak && 
 sed -e "s?\(\$(INSTALL_PROGRAM) gp-sta\)?\1.exe?; s/-Wall//" $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile.bak > $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile &&
 #mv $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile.bak2 && 
 #sed -e "s?^\(OBJS *= *\)?\1../src/systems/mingw/mingw\$(_O) ?; s/-Wall//" $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile.bak2 > $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile &&
 mv $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile.bak3 && 
 sed -e "s/--export-dynamic/--export-all-symbols/" $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile.bak3 > $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/Makefile &&
 ( make -j1 all install DLLTOOL=dlltool || (
  mkdir -p $INSTALLPREFIX/bin/gp-`echo $VERSION|sed -e "s/\([0-9]*\)\.\([0-9]*\).*$/\1.\2/"` &&
  make -j1 all install DLLTOOL=dlltool
 )) &&
 cp -f $(ls -1d O*mingw* O*msys* 2>/dev/null | tail -n1)/*.a $INSTALLPREFIX/lib/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####To do: fix 64-bit, specifically #define long long long which causes errors when building cm



