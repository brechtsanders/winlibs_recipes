export NAME="speedyj"
export STATUS=
export URL=https://github.com/Klebert-Engineering/speedyj
export BASENAME=speedyj
export DESCRIPTION="Speedyj is a tiny C++ library for JSON serialization"
export CATEGORY=fileformat
export TYPE=library
export VERSION=master
export VERSIONDATE=20241219
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/Klebert-Engineering/speedyj/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/Klebert-Engineering/speedyj/archive/refs/heads/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix include/speedyj/speedyj.hpp (version >= master)
patch -ulbf include/speedyj/speedyj.hpp << EOF
@@ -3,3 +3,3 @@
 #if defined(SPEEDYJ_SHARED)
-    #if defined(_MSC_VER)
+    #if defined(_WIN32)
         #if defined(SPEEDYJ_BUILD)
EOF
sed -i.bak -e "s/add_subdirectory(test)/#&/" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSPEEDYJ_SHARED:BOOL=OFF -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DSPEEDYJ_SHARED:BOOL=ON -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-static &&
 ninja -Cbuild_static &&
 wl-showstatus build-shared &&
 ninja -Cbuild_shared &&
 #wl-showstatus build-install-static &&
 #ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install-shared &&
 #ninja -Cbuild_shared install/strip &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -rf include/* $INSTALLPREFIX/include/ &&
 cp -f build_{static,shared}/*.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



