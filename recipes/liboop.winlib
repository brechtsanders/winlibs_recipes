export NAME="Liboop"
export STATUS=
#export URL=http://directory.fsf.org/wiki/Liboop
export URL=https://www.lysator.liu.se/liboop/
export BASENAME=liboop
#export DESCRIPTION="'Liboop' provides a generic, callback-based event dispatch interface, and aims to ease the development of multiplexed, non-blocking, event-driven modular applications, components, and libraries under POSIX-based operating systems. It includes adapters for select(), poll(), the glib event loop, the TCL event loop, the W3C libwww, asynchronous DNS, and GNU readline."
export DESCRIPTION="Liboop is a low-level event loop management library for POSIX-based operating systems. It supports the development of modular, multiplexed applications which may respond to events from several sources. It replaces the \"select() loop\" and allows the registration of event handlers for file and network I/O, timers and signals. Since processes use these mechanisms for almost all external communication, liboop can be used as the basis for almost any application."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.0
#export VERSIONDATE=20130114
export VERSION=1.0.1
export VERSIONDATE=20170310
wl-showstatus --package-version
#export DEPENDANCIES=readline,glib2
export DEPENDANCIES=readline,glib2,libdl
export OPTIONALDEPENDANCIES=libadns
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://download.ofb.net/liboop/"
export DOWNLOADURL="http://ftp.lysator.liu.se/pub/liboop/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://download.ofb.net/liboop/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ftp.lysator.liu.se/pub/liboop/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# workaround issues in oop.h
mv oop.h oop.h.bak
echo "#include <winsock2.h>" > oop.h
cat oop.h.bak >> oop.h
# workaround issues in sys.c
mv sys.c sys.c.bak
cat > sys.c << EOF
struct sigaction {
  void* sa_handler;
  //void* sa_mask;
  int sa_flags;
};
#define sigjmp_buf jmp_buf
#define siglongjmp longjmp
#define sigaction(a,b,c) 0
//#ifdef __WIN64
//#ifdef __MINGW64_VERSION_MAJOR
#ifdef __MINGW32__
#define sigsetjmp(buf,n) _setjmp(buf,n)
#else
#define sigsetjmp(buf,n) _setjmp(buf)
#endif
EOF
cat sys.c.bak >> sys.c
# workaround issues in signal.c
mv signal.c signal.c.bak
cat > signal.c << EOF
#include <windows.h>
#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
struct sigaction {
  void* sa_handler;
  //void* sa_mask;
  int sa_flags;
};
#define sigaction(a,b,c) 0
#define SA_RESTART 0
#define fcntl(fd,op,val) -1
#define F_GETFD 1
#define F_SETFD 2
#define F_GETFL 3
#define F_SETFL 4
#define FD_CLOEXEC 1
#define O_NONBLOCK 04000
EOF
cat signal.c.bak >> signal.c
# workaround issues in read-fd.c
mv read-fd.c read-fd.c.bak
cat > read-fd.c << EOF
#define fcntl(fd,op,val) -1
#define F_GETFL 3
#define F_SETFL 4
#define O_NONBLOCK 04000
EOF
sed -e "s/\(fcntl(fd, F_GETFL\))/\1,0)/" read-fd.c.bak >> read-fd.c
# fix missing files
mkdir -p netinet arpa
touch netinet/in.h arpa/inet.h
# fix missing SIGQUIT in test-oop.c
mv test-oop.c test-oop.c.bak &&
echo "#define _POSIX" > test-oop.c &&
cat test-oop.c.bak >> test-oop.c
# fix DLL export
sed -i.bak -e "s/\(_la_LDFLAGS *= *\)\(-version-info\)/\1-export-symbols-regex \"\^_*oop_.*\" \2/; s/\(liboop_.*_la_LIBADD *= *\)/\1-L.libs -loop.dll /" Makefile.in
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,--enable-auto-import" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -ldl -lws2_32 -Wl,--enable-auto-import -L$(pwd)/.libs" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 # fix $(EXTRA_CFLAGS) issue in libtool
 sed -i.bak2 -e "s/\\\\\$(EXTRA_CFLAGS)//" libtool &&
 wl-showstatus build-install &&
 #make install-strip &&
 ( make install-strip || ( touch test-oop.exe && make install-strip )) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
####Probably not functional due to dummy functions used



