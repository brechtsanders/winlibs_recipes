export NAME="Sonnet"
export STATUS=
export URL=https://api.kde.org/frameworks/sonnet/html/index.html
export BASENAME=libkf5sonnet
export DESCRIPTION="Support for spellchecking (KDE Frameworks 5 (KDF5) Tier 1 framework)"
export CATEGORY=framework
export TYPE=library
#export VERSION=5.63.0
#export VERSIONDATE=20191103
#export VERSION=5.64.0
#export VERSIONDATE=20191110
#export VERSION=5.65.0
#export VERSIONDATE=20191214
#export VERSION=5.66.0
#export VERSIONDATE=20200111
#export VERSION=5.67.0
#export VERSIONDATE=20200209
#export VERSION=5.68.0
#export VERSIONDATE=20200315
#export VERSION=5.69.0
#export VERSIONDATE=20200411
#export VERSION=5.70.0
#export VERSIONDATE=20200509
#export VERSION=5.71.0
#export VERSIONDATE=20200613
#export VERSION=5.72.0
#export VERSIONDATE=20200711
#export VERSION=5.73.0
#export VERSIONDATE=20200808
#export VERSION=5.74.0
#export VERSIONDATE=20200912
#export VERSION=5.75.0
#export VERSIONDATE=20201010
#export VERSION=5.76.0
#export VERSIONDATE=20201114
#export VERSION=5.77.0
#export VERSIONDATE=20201212
#export VERSION=5.78.0
#export VERSIONDATE=20210109
#export VERSION=5.79.0
#export VERSIONDATE=20210213
#export VERSION=5.80.0
#export VERSIONDATE=20210313
#export VERSION=5.81.0
#export VERSIONDATE=20210410
#export VERSION=5.82.0
#export VERSIONDATE=20210508
#export VERSION=5.83.0
#export VERSIONDATE=20210613
#export VERSION=5.84.0
#export VERSIONDATE=20210710
#export VERSION=5.85.0
#export VERSIONDATE=20210814
#export VERSION=5.86.0
#export VERSIONDATE=20210911
#export VERSION=5.87.0
#export VERSIONDATE=20211009
#export VERSION=5.88.0
#export VERSIONDATE=20211113
#export VERSION=5.89.0
#export VERSIONDATE=20211212
#export VERSION=5.90.0
#export VERSIONDATE=20220108
#export VERSION=5.91.0
#export VERSIONDATE=20220214
#export VERSION=5.92.0
#export VERSIONDATE=20220313
#export VERSION=5.93.0
#export VERSIONDATE=20220410
#export VERSION=5.94.0
#export VERSIONDATE=20220514
export VERSION=5.95.0
export VERSIONDATE=20220613
wl-showstatus --package-version
export DEPENDANCIES=qt
export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake,extra-cmake-modules
export BUILDDEPENDANCIES=cmake,ninja,extra-cmake-modules
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://cgit.kde.org/sonnet.git/refs/ ?h=v"
#export DOWNLOADURL="https://kde.org/announcements/ kde-frameworks- .php"
export DOWNLOADURL="https://download.kde.org/stable/frameworks/ sonnet-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://download.kde.org/stable/frameworks/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/sonnet-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/sonnet-$VERSION.tar.xz
cd sonnet-$VERSION
# fix missing QSysInfo::windowsVersion()/QSysInfo::WV_XP/QSysInfo::WV_2003 in src/plugins/voikko/voikkodict.cpp
patch -ulbf src/plugins/voikko/voikkodict.cpp << EOF
@@ -64,9 +64,9 @@
     // Resolve the windows' Roaming directory manually
     directory = QStandardPaths::writableLocation(QStandardPaths::GenericDataLocation);
-    if (QSysInfo::windowsVersion() == QSysInfo::WV_XP || QSysInfo::windowsVersion() == QSysInfo::WV_2003) {
+    /*if (QSysInfo::windowsVersion() == QSysInfo::WV_XP || QSysInfo::windowsVersion() == QSysInfo::WV_2003) {
         // In Xp Roaming is "<user>/Application Data"
         // DataLocation: "<user>/Local Settings/Application Data"
         directory += QStringLiteral("/../../Application Data");
-    } else {
+    } else*/ {
         directory += QStringLiteral("/../Roaming");
     }
EOF
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# PATH=$PATH:$MINGWPREFIX/qt/bin make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# PATH=$PATH:$MINGWPREFIX/qt/bin make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf sonnet-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf sonnet-$VERSION



