#export NAME="libxml++ 2"
#export STATUS=
#export URL=http://libxmlplusplus.sourceforge.net/
#export BASENAME=libxmlpp2
#export DESCRIPTION="libxml++ is a C++ wrapper for the libxml XML parser library."
#export CATEGORY=dataprocessing
#export TYPE=library
##export VERSION=2.23.2
##export VERSION=2.26.0
##export VERSION=2.26.1
##export VERSION=2.30.0
##export VERSIONDATE=20100331
##export VERSION=2.30.1
##export VERSIONDATE=20100505
##export VERSION=2.32.0
##export VERSIONDATE=20101014
##export VERSION=2.33.1
##export VERSIONDATE=20101118
##export VERSION=2.33.2
##export VERSIONDATE=20110213
##export VERSION=2.34.0
##export VERSIONDATE=20110415
##export VERSION=2.34.1
##export VERSIONDATE=20110418
##export VERSION=2.34.2
##export VERSIONDATE=20110906
##export VERSION=2.35.1
##export VERSIONDATE=20120216
##export VERSION=2.35.2
##export VERSIONDATE=20120322
##export VERSION=2.35.3
##export VERSIONDATE=20120622
##export VERSION=2.35.4
##export VERSIONDATE=20121009
##export VERSION=2.36.0
##export VERSIONDATE=20121105
##export VERSION=2.37.1
##export VERSIONDATE=20130916
##export VERSION=2.37.2
##export VERSIONDATE=20141028
##export VERSION=2.38.0
##export VERSIONDATE=20150228
##export VERSION=2.38.1
##export VERSIONDATE=20150608
##export VERSION=2.39.1
##export VERSIONDATE=20150721
##export VERSION=2.39.2
##export VERSIONDATE=20150906
##export VERSION=2.40.0
##export VERSIONDATE=20150921
#export VERSION=2.40.1
#export VERSIONDATE=20151101
#wl-showstatus --package-version
#export DEPENDENCIES=libxml2,glib2,glibmm,zlib,libsigcplusplus2,gettext,libiconv
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL2
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/libxml++/ libxml++-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/libxml++/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/libxml++-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/libxml++/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/libxml++-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfj $TARBALLDIR/$BASENAME/libxml++-$VERSION.tar.bz2
#tar xfJ $TARBALLDIR/$BASENAME/libxml++-$VERSION.tar.xz
#cd libxml++-$VERSION
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## autoreconf -f -i -I $MINGWPREFIX/share/aclocal
##fi
### remove dependancy on dynamic libstdc++ (GCC 4)
##mv libtool libtool.bak &&
##sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
## fix detection of glibmm
#sed -i.bak -e "s/glibmm-2.4/$(ls -1 $C/lib/pkgconfig/glibmm-[0-9]*.pc|sed -e "s?^.*/\([^/]*\)\.pc\$?\1?"|sort -V|tail -n1)/" configure
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-no-undefined -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared CXXFLAGS="-static-libgcc -static-libstdc++" LDFLAGS="-Wl,-no-undefined" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,-no-undefined" &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libxml++-$VERSION



export NAME="libxml++ 2"
export STATUS=
export URL=http://libxmlplusplus.sourceforge.net/
export BASENAME=libxmlpp2
export DESCRIPTION="libxml++ is a C++ wrapper for the libxml XML parser library."
export CATEGORY=dataprocessing
export TYPE=library
export VERSION=2.42.0
export VERSIONDATE=20201002
####/include/glibmm-2.66/glibmm/ustring.h:1456:39: error: 'enable_if_t' in namespace 'std' does not name a template type
#export VERSION=2.91.3
#export VERSIONDATE=20160113
wl-showstatus --package-version
export DEPENDENCIES=libxml2,glib2,glibmm-2.4,zlib,libsigcplusplus2,gettext,libiconv
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL2
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/libxml++/ libxml++-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/libxml++/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/libxml++-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/libxml++/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/libxml++-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/libxml++-$VERSION.tar.bz2
tar xfJ $TARBALLDIR/$BASENAME/libxml++-$VERSION.tar.xz
cd libxml++-$VERSION
# fix detection of python3
sed -i.bak -e "s/'python3'/'python'/" meson.build
## fix detection of glibmm
#sed -i.bak2 -e "s/'glibmm-2\.@0@'\.format(glibmm_req_minor_ver)/'$(ls -1 $MINGWPREFIX/lib/pkgconfig/glibmm-*.pc|sort -V|tail -n1|sed -e "s/^.*\/\([^\/]*\)\.pc$/\1/")'/" meson.build
#sed -i.bak -e "s/glibmm-[.0-9]*/$(ls -1 $MINGWPREFIX/lib/pkgconfig/glibmm-*.pc|sort -V|tail -n1|sed -e "s/^.*\/\([^\/]*\)\.pc$/\1/")/" docs/reference/meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib PATH=$PYDIR:$PATH $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dbuild-deprecated-api=true -Dvalidation=true -Dbuild-pdf=false -Dbuild-documentation=false -Dbuild-examples=false -Dbuild-tests=false -Dcpp_args="-std=c++17" . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libxml++-$VERSION



