export NAME="libsoundio"
export STATUS=
export URL=http://libsound.io/
#export URL=https://github.com/andrewrk/libsoundio
export BASENAME=libsoundio
export DESCRIPTION="libsoundio is a lightweight abstraction over various sound drivers. It provides a well-documented API that operates consistently regardless of the sound driver it connects to. It performs no buffering or processing on your behalf; instead exposing the raw power of the underlying backend. libsoundio is appropriate for games, music players, digital audio workstations, and various utilities."
export CATEGORY=audio
export TYPE=library
#export VERSION=1.1.0
#export VERSIONDATE=20160203
export VERSION=2.0.0
export VERSIONDATE=20190220
####src/atomics.h:44:23: fatal error: stdatomic.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=pthreads,pulseaudio
export OPTIONALDEPENDENCIES=jack
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/andrewrk/libsoundio/releases"
export DOWNLOADURL="https://github.com/andrewrk/libsoundio/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/andrewrk/libsoundio/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/andrewrk/libsoundio/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing SoundIoListDevicePtr
mv src/soundio_private.h src/soundio_private.h.bak
echo "#include \"list.h\"" > src/soundio_private.h
cat src/soundio_private.h.bak >> src/soundio_private.h
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DBUILD_STATIC_LIBS:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_EXAMPLE_PROGRAMS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DENABLE_WASAPI:BOOL=ON -DENABLE_PULSEAUDIO:BOOL=OFF -DENABLE_ALSA:BOOL=OFF -DENABLE_COREAUDIO:BOOL=OFF -DENABLE_JACK:BOOL=OFF -S. -Bbuild_static &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DBUILD_STATIC_LIBS:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_EXAMPLE_PROGRAMS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DENABLE_WASAPI:BOOL=ON -DENABLE_JACK:BOOL=OFF -S. -Bbuild_static &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DBUILD_STATIC_LIBS:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_EXAMPLE_PROGRAMS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DENABLE_WASAPI:BOOL=ON -S. -Bbuild_static &&
 wl-showstatus configure &&                                                                                                                                                                  
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DBUILD_STATIC_LIBS:BOOL=OFF -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_EXAMPLE_PROGRAMS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DENABLE_WASAPI:BOOL=ON -DENABLE_PULSEAUDIO:BOOL=OFF -DENABLE_ALSA:BOOL=OFF -DENABLE_COREAUDIO:BOOL=OFF -DENABLE_JACK:BOOL=OFF -S. -Bbuild_shared &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DBUILD_STATIC_LIBS:BOOL=OFF -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_EXAMPLE_PROGRAMS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DENABLE_WASAPI:BOOL=OFF -DENABLE_JACK:BOOL=OFF -S. -Bbuild_shared &&
 cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DBUILD_STATIC_LIBS:BOOL=OFF -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_EXAMPLE_PROGRAMS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DENABLE_WASAPI:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 make -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 make -Cbuild_shared install/strip &&
 mkdir -p $INSTALLPREFIX/bin &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



