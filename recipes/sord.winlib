#export NAME="Sord"
#export STATUS=
#export URL=http://drobilla.net/software/sord/
#export BASENAME=sord
#export DESCRIPTION="Sord is a lightweight C library for storing RDF data in memory."
#export CATEGORY=dataprocessing
#export TYPE=library
##export VERSION=0.14.0
##export VERSIONDATE=20160605
##export VERSION=0.16.0
##export VERSIONDATE=20170313
##export VERSION=0.16.2
##export VERSIONDATE=20180723
##export VERSION=0.16.4
##export VERSIONDATE=20191111
##export VERSION=0.16.6
##export VERSIONDATE=20200927
##export VERSION=0.16.8
##export VERSIONDATE=20210108
#export VERSION=0.16.10
#export VERSIONDATE=20220527
#wl-showstatus --package-version
#export DEPENDENCIES=pcre,serd
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=waf
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
##export DOWNLOADURL="http://drobilla.net/software/sord/"
#export DOWNLOADURL="http://drobilla.net/category/sord/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://download.drobilla.net/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
#wl-showstatus configure &&
# $PYDIR/python.exe waf configure --prefix=$INSTALLPREFIX &&
# wl-showstatus build &&
# $PYDIR/python.exe waf build &&
# wl-showstatus install &&
# $PYDIR/python.exe waf install &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Sord"
export STATUS=
export URL=http://drobilla.net/software/sord/
export BASENAME=sord
export DESCRIPTION="Sord is a lightweight C library for storing RDF data in memory."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=0.16.12
#export VERSIONDATE=20220719
export VERSION=0.16.14
export VERSIONDATE=20220910
wl-showstatus --package-version
export DEPENDENCIES=pcre,serd
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="https://drobilla.net/category/sord/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://download.drobilla.net/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix meson/library/meson.build (version >= 0.16.12)
patch -ulbf meson/library/meson.build << EOF
@@ -19,3 +19,3 @@
 if host_system == 'windows' and default_library == 'both'
-  error('default_library=both is not supported on Windows')
+  warning('default_library=both is not supported on Windows')
 endif
EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dstrict=false -Ddocs=disabled -Dtests=disabled . build_both &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dstrict=false -Ddocs=disabled -Dtests=disabled . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



