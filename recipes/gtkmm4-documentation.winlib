export NAME="gtkmm4-documentation"
export STATUS=
export URL=http://www.gtkmm.org/en/
export BASENAME=gtkmm4-documentation
export DESCRIPTION="This is the documentation for gtkmm, a C++ API for GTK+."
export CATEGORY=documentation
export TYPE=library
#export VERSION=3.95.1
#export VERSIONDATE=20190509
#export VERSION=3.97.1
#export VERSIONDATE=20200217
#export VERSION=4.0.0
#export VERSIONDATE=20201221
#export VERSION=4.0.1
#export VERSIONDATE=20210223
#export VERSION=4.0.2
#export VERSIONDATE=20220324
####No package 'giomm-2.62' found
export VERSION=4.0.3
export VERSIONDATE=20221222
wl-showstatus --package-version
export DEPENDENCIES=gtkmm4
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gtkmm-documentation/ gtkmm-documentation-"
export INSTALLPREFIX=`pwd`/inst_gtkmm-documentation-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/gtkmm-documentation/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/gtkmm-documentation-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xJ --force-local -f $TARBALLDIR/$BASENAME/gtkmm-documentation-$VERSION.tar.xz
cd gtkmm-documentation-$VERSION
# fix tools/meson_aux/tutorial-custom-cmd.py (version >= 4.0.3)
patch -ulbf tools/meson_aux/tutorial-custom-cmd.py << EOF
@@ -319,3 +319,3 @@
 if subcommand == 'html':
-  sys.exit(html())
+  sys.exit(0)
 if subcommand == 'xmllint':
EOF
mkdir -p build_both/docs/tutorial/html
# fix detection of python
sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dvalidation=false -Dbuild-translations=false -Dbuild-pdf=false -Dbuild-examples=false . build_both &&
 wl-showstatus build-install &&
 PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gtkmm-documentation-$VERSION



