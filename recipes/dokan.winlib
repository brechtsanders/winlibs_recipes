#export NAME="dokany"
#export STATUS=
#export URL=https://github.com/dokan-dev/dokany
#export BASENAME=dokany
#export DESCRIPTION="When you want to create a new file system on Windows, other than FAT or NTFS, you need to develop a file system driver. Developing a device driver that works in kernel mode on windows is extremely technical. By using Dokan, you can create your own file systems very easily without writing device drivers. Dokan is similar to FUSE (Linux file system in user space<) but works on Windows. Moreover, dokany includes a FUSE wrapper that helps you to port your FUSE filesystems without changes."
#export CATEGORY=system
#export TYPE=library
#export VERSION=1.4.0.1000
#export VERSIONDATE=20200902
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmakeconverter,cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
##export LICENSEFILE=license.lgpl.txt
##export LICENSETYPE=LGPL
#export LICENSEFILE=license.mit.txt
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/dokan-dev/dokany/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/dokan-dev/dokany/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix dokan_fuse/include/utils.h (version >= 1.4.0.1000)
#patch -ulbf dokan_fuse/include/utils.h << EOF
#@@ -20,3 +20,2 @@
# #ifdef __cplusplus
#-}
#
#@@ -28,2 +27,3 @@
# std::string extract_dir_name(const std::string &str);
#+}
#
#EOF
#
## fix missing files
#touch Dokan.cmake
#mkdir -p fuse/include
#touch fuse/include/ScopeGuard.h
#mkdir -p dokan_fuse/include
#touch dokan_fuse/include/ScopeGuard.h
## fix backslash issue
#sed -i.bak -e "s/\(\$(DDK_LIB_PATH)\)\\\\/\1\//" sys/CMakeLists.txt
##mkdir -p build_test && cmake.exe -G"MSYS Makefiles" -S. -Bbuild_test -LH && echo OK; rm -rf build_test
##export BUILDDEPENDENCIES=cmake
##export OPTIONALBUILDDEPENDENCIES=
##PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#mkdir -p build_win &&
# wl-showstatus configure &&
# PATH=$PYDIR:$PATH PYTHONPATH=$MINGWPREFIX/python/Lib/site-packages:$PYDIR/Lib/site-packages${PYTHONPATH:+:$PYTHONPATH} $MINGWPREFIX/python/Scripts/cmake-converter.exe -s dokan.sln &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release FUSE_PKG_CONFIG:BOOL=ON -S. -Bbuild_win &&
# #wl-showstatus build &&
# #make -Cbuild_win &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
#    echo OK
#
# # build dokan_fuse
# for F in dokan_fuse/src/*.c; do
#  echo CC $F
#  ${CC:-gcc} -c -o $F.o $F -O3 -Idokan_fuse/include -D_FILE_OFFSET_BITS=64 || break
# done &&
# for F in dokan_fuse/src/*.cpp; do
#  echo CXX $F
#  ${CXX:-g++} -c -o $F.o $F -O3 -Idokan_fuse/include -Isys -D_FILE_OFFSET_BITS=64 || break
# done &&
# ${WINDRES:-windres} dokan_fuse/src/dokanfuse.rc -O coff -o dokan_fuse/src/dokanfuse.rc.o &&
# ${AR:-ar} cru libdokanfuse.a dokan_fuse/src/*.o &&
# ${CXX:-g++} -shared -s -mwindows -def dokan_fuse/src/dokanfuse.def -o dokanfuse1.dll -Wl,--out-implib,libdokanfuse.dll.a dokan_fuse/src/*.o &&
#    echo OK
# ####TO DO: use dokan_fuse/CMakeLists.txt
#
# # build dokan
# for F in dokan/*.c; do
#  echo CC $F
#  #gcc -c -o $F.o $F -O3 -Idokan_fuse/include -D_FILE_OFFSET_BITS=64 || break
#  ${CC:-gcc} -c -o $F.o $F -municode -O3 -Isys -D_EXPORTING || break
# done &&
# ${AR:-ar} cru libdokan.a dokan/*.o &&
# ( echo "EXPORTS" && ${NM:-nm} -f posix --defined-only -p libdokan.a | sed -n -e "s/^_*\([^ ]*\) T .*$/\1/p" && echo "g_DebugMode DATA" && echo "g_UseStdErr DATA" ) > dokan.def &&
# ${CC:-gcc} -shared -s -mwindows -def dokan.def -o dokan.dll libdokan.a -Wl,--add-stdcall-alias -Wl,--out-implib,libdokan.dll.a &&
#    echo OK
#
# ${CC:-gcc} -o dokanctl.exe dokan_control/dokanctl.c -Isys -L. -ldokan -municode -mconsole
#
##mkdir -p build_win &&
## wl-showstatus configure &&
## cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release FUSE_PKG_CONFIG:BOOL=ON -S. -Bbuild_win &&
## sed -i.bak -e "s/\$(DDK_LIB_PATH)\/\([^ ]*\)/-l\1/g" build_win/build.ninja &&
## #wl-showstatus build &&
## #ninja -Cbuild_win &&
## wl-showstatus build-install &&
## ninja -Cbuild_win install/strip &&
##    echo OK
### wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Dokan"
export STATUS=
export URL=https://dokan-dev.github.io/
export BASENAME=dokan
export DESCRIPTION="User mode file system library for windows"
export CATEGORY=system
export TYPE=library
#export VERSION=0.8.0
#export VERSIONDATE=20151222
#export VERSION=1.0.0-RC1
#export VERSIONDATE=20160221
#export VERSION=1.0.0-RC3
#export VERSIONDATE=20160524
#export VERSION=1.0.0
#export VERSIONDATE=20160921
#export VERSION=1.0.1
#export VERSIONDATE=20161104
#export VERSION=1.0.2
#export VERSIONDATE=20170123
#export VERSION=1.0.3
#export VERSIONDATE=20170325
#export VERSION=1.0.4
#export VERSIONDATE=20170901
#export VERSION=1.0.5
#export VERSIONDATE=20170919
#export VERSION=1.1.0
#export VERSIONDATE=20171128
#export VERSION=1.1.0.2000
#export VERSIONDATE=20180119
#export VERSION=1.2.0.1000
#export VERSIONDATE=20180810
#export VERSION=1.2.1.1000
#export VERSIONDATE=20181220
#export VERSION=1.2.1.2000
#export VERSIONDATE=20181221
#export VERSION=1.2.2.1000
#export VERSIONDATE=20190309
#export VERSION=1.3.0.1000
#export VERSIONDATE=20190726
#export VERSION=1.3.1.1000
#export VERSIONDATE=20191217
#export VERSION=1.4.0.1000
#export VERSIONDATE=20200602
#export VERSION=1.4.1.1000
#export VERSIONDATE=20210114
#export VERSION=1.5.0.1000
#export VERSIONDATE=20210526
#export VERSION=1.5.0.2000
#export VERSIONDATE=20210527
#export VERSION=1.5.0.3000
#export VERSIONDATE=20210601
#export VERSION=1.5.1.1000
#export VERSIONDATE=20211127
#export VERSION=2.0.0.1000
#export VERSIONDATE=20220101
#export VERSION=2.0.0.2000
#export VERSIONDATE=20220102
#export VERSION=2.0.1.1000
#export VERSIONDATE=20220124
#export VERSION=2.0.1.2000
#export VERSIONDATE=20220129
#export VERSION=2.0.2.1000
#export VERSIONDATE=20220207
#export VERSION=2.0.3.1000
#export VERSIONDATE=20220214
#export VERSION=2.0.3.2000
#export VERSIONDATE=20220227
#export VERSION=2.0.4.1000
#export VERSIONDATE=20220430
#export VERSION=2.0.5.1000
#export VERSIONDATE=20220704
export VERSION=2.0.6.1000
export VERSIONDATE=20221003
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=license.gpl.txt
export LICENSEFILE=license.lgpl.txt
#export LICENSEFILE=license.mit.txt
export LICENSETYPE="GPL/LGPL/MIT"
export DOWNLOADURL="https://github.com/dokan-dev/dokany/releases v"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/dokan-dev/dokany/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/dokan-dev/dokany/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd dokany-$VERSION
# fix missing FILE_ID_EXTD_DIR_INFO/PFILE_ID_EXTD_DIR_INFO in dokan/directory.c (version >= 1.4.1.1000)
####Bug reported at: https://github.com/dokan-dev/dokany/issues/960
#patch -ulbf dokan/directory.c << EOF
#@@ -172,3 +172,3 @@
#
#-VOID DokanFillIdExtdDirInfo(PFILE_ID_EXTD_DIR_INFO Buffer,
#+VOID DokanFillIdExtdDirInfo(PFILE_ID_EXTD_BOTH_DIR_INFORMATION Buffer,
#                             PWIN32_FIND_DATAW FindData, ULONG Index,
#@@ -316,3 +316,3 @@
#   case FileIdExtdDirectoryInformation:
#-    thisEntrySize += sizeof(FILE_ID_EXTD_DIR_INFO);
#+    thisEntrySize += sizeof(FILE_ID_EXTD_BOTH_DIR_INFORMATION);
#     break;
#EOF
mv dokan/directory.c dokan/directory.c.bak
cat > dokan/directory.c << EOF
#include <windows.h>
typedef struct DOKAN__FILE_ID_EXTD_DIR_INFO {
  ULONG         NextEntryOffset;
  ULONG         FileIndex;
  LARGE_INTEGER CreationTime;
  LARGE_INTEGER LastAccessTime;
  LARGE_INTEGER LastWriteTime;
  LARGE_INTEGER ChangeTime;
  LARGE_INTEGER EndOfFile;
  LARGE_INTEGER AllocationSize;
  ULONG         FileAttributes;
  ULONG         FileNameLength;
  ULONG         EaSize;
  ULONG         ReparsePointTag;
  FILE_ID_128   FileId;
  WCHAR         FileName[1];
} DOKAN_FILE_ID_EXTD_DIR_INFO, *DOKAN_PFILE_ID_EXTD_DIR_INFO;
EOF
sed -e "s/P*FILE_ID_EXTD_DIR_INFO/DOKAN_&/g" dokan/directory.c.bak >> dokan/directory.c
## fix missing fuse_common_compat.h
#mv dokan_fuse/include/fuse_common.h dokan_fuse/include/fuse_common.h.bak &&
#grep -v "fuse_common_compat.h" dokan_fuse/include/fuse_common.h.bak > dokan_fuse/include/fuse_common.h
# avoid invalid -mwin32 compiler flag
sed -i.bak -e "s/-mwin32/-mwindows/" dokan_fuse/CMakeLists.txt
mkdir -p build_win_dokan_fuse &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -Sdokan_fuse -Bbuild_win_dokan_fuse &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -Sdokan_fuse -Bbuild_win_dokan_fuse &&
 wl-showstatus build &&
 # build dokan_fuse
 #make -Cbuild_win_dokan_fuse &&
 ninja -Cbuild_win_dokan_fuse &&
 # build dokan
 touch SUCCESS &&
 for F in dokan/*.c; do
  echo CC $F
  #gcc -c -o $F.o $F -O3 -Idokan_fuse/include -D_FILE_OFFSET_BITS=64 || break
  ${CC:-gcc} -c -o $F.o $F -municode -O3 -Isys -D_EXPORTING || ( rm -f SUCCESS; break )
 done &&
 ls -1 SUCCESS &> /dev/null &&
 ${AR:-ar} cru libdokan.a dokan/*.o &&
 ( echo "EXPORTS" && ${NM:-nm} -f posix --defined-only -p libdokan.a | sed -n -e "s/^_*\([^ ]*\) T .*$/\1/p" && echo "g_DebugMode DATA" && echo "g_UseStdErr DATA" ) > dokan.def &&
 ${CC:-gcc} -shared -s -mwindows -def dokan.def -o dokan.dll libdokan.a -Wl,--add-stdcall-alias -Wl,--out-implib,libdokan.dll.a &&
 # build dokanctl
 ${CC:-gcc} -s -o dokanctl.exe dokan_control/dokanctl.c -Isys -L. -ldokan.dll -municode -mconsole &&
 ## build dokan.sys
 #for F in sys/*.c; do
 # ${CXX:-g++} -c -o $F.o $F -municode -O3 -D__in= -D__out= -I/d/Prog/winlibs64-9.2.0/mingw64/x86_64-w64-mingw32/include/ddk -fpermissive || break
 #done &&
 ## build samples/dokan_memfs
 #for F in samples/dokan_memfs/*.cpp; do
 # ${CXX:-g++} -c -o $F.o $F -municode -O3 -I. -Isys || break
 #done &&
 wl-showstatus build-install &&
 #make -Cbuild_win_dokan_fuse install/strip &&
 ninja -Cbuild_win_dokan_fuse install/strip &&
 cp -f *.exe *.dll $INSTALLPREFIX/bin/ &&
 cp -f *.a $INSTALLPREFIX/lib/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf dokany-$VERSION
####To do: build the rest other than just dokan_fuse (dokan.sys)



