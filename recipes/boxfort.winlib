#export NAME="BoxFort"
#export STATUS=
#export URL=https://github.com/diacritic/BoxFort
#export BASENAME=boxfort
#export DESCRIPTION="Convenient & cross-platform sandboxing C library"
#export CATEGORY=development
#export TYPE=library
#export VERSION=master
#export VERSIONDATE=20171009
#####src/asm/trampoline-x86_64.S:32: Error: bad register name `%rip)'
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/diacritic/BoxFort/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/diacritic/BoxFort/archive/master.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd BoxFort-$VERSION
## fix platform detection
#patch -ulbf CMakeLists.txt << EOF
#@@ -20,5 +20 @@
#-if (CMAKE_GENERATOR_PLATFORM)
#-    set (_ARCH "\${CMAKE_GENERATOR_PLATFORM}")
#-else ()
#-    set (_ARCH "\${CMAKE_SYSTEM_PROCESSOR}")
#-endif ()
#+set (_ARCH "$(if ( echo $RUNPLATFORM | grep -q x86_64 ); then echo x64; else echo x86; fi)")
#EOF
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBXF_STATIC_LIB:BOOL=ON -DBXF_TESTS:BOOL=OFF -DBXF_SAMPLES:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBXF_STATIC_LIB:BOOL=OFF -DBXF_TESTS:BOOL=OFF -DBXF_SAMPLES:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf BoxFort-$VERSION



export NAME="BoxFort"
export STATUS=
export URL=https://github.com/diacritic/BoxFort
export BASENAME=boxfort
export DESCRIPTION="Convenient & cross-platform sandboxing C library"
export CATEGORY=development
export TYPE=library
export VERSION=0.1.4
export VERSIONDATE=20230408
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/Snaipe/BoxFort/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/Snaipe/BoxFort/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd BoxFort-$VERSION
# fix src/meson.build (version >= 0.1.4)
patch -ulbf src/meson.build << EOF
@@ -67,6 +67,5 @@
 extra_cflags = cc.get_supported_arguments([
-       '-DBXF_STATIC_LIB=1',
 ])

-libboxfort = static_library('boxfort', sources,
+libboxfort = library('boxfort', sources,
        include_directories: [boxfort_includedir],
EOF
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dsamples=false -Dtests=false . build_both &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dsamples=false -Dtests=false . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf BoxFort-$VERSION



