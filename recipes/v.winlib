export NAME="V"
export STATUS=
export URL=https://vlang.io/
#export URL=https://github.com/vlang/v
export BASENAME=v
export DESCRIPTION="Simple, fast, safe, compiled language for developing maintainable software."
export CATEGORY=development
export TYPE=application
#export VERSION=0.1.27
#export VERSIONDATE=20200518
#export VERSION=0.1.28
#export VERSIONDATE=20200618
#export VERSION=0.1.28.1
#export VERSIONDATE=20200628
#export VERSION=0.1.29
#export VERSIONDATE=20200807
#export VERSION=0.1.30
#export VERSIONDATE=20201128
#export VERSION=0.2
#export VERSIONDATE=20201223
#export VERSION=0.2.1
#export VERSIONDATE=20201230
export VERSION=0.2.2
export VERSIONDATE=20210122
#export VERSION=0.2.4
#export VERSIONDATE=20210831
#export VERSION=weekly.2021.44
#export VERSIONDATE=20210831
####print_backtrace_skipping_top_frames_mingw is not implemented
#export VERSION=0.3
#export VERSIONDATE=20220630
#export VERSION=0.3.1
#export VERSIONDATE=20220901
#export VERSION=0.3.2
#export VERSIONDATE=20221101
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=v-c
#export BUILDDEPENDANCIES=v-c,git
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/vlang/v/releases"
export DOWNLOADURL="https://github.com/vlang/v/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/vlang/v/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/vlang/v/archive/refs/tags/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/vlang/v/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix vc/v_win.c (version >= 0.2.2)
#patch -ulbf vc/v_win.c << EOF
#@@ -1193,2 +1193,4 @@
# #include <atomic.h>
#+#elif defined(__MINGW32__)
#+#include "../thirdparty/stdatomic/win/atomic.h"
# #else
#EOF
## build for Windows
#sed -i.bak -e "s/nix/win/" Makefile GNUmakefile
# copy precompiled binary
cp -f $MINGWPREFIX/bin/v-c.exe .
wl-showstatus build &&
 make CC=${CC:-gcc} &&
 make CC=${CC:-gcc} modules &&
 strip *.exe &&
 wl-showstatus build &&
 mkdir -p $INSTALLPREFIX/share/v &&
 cp -rf v.exe v.mod vlib cmd doc examples thirdparty tutorials README.md LICENSE CHANGELOG.md $INSTALLPREFIX/share/v/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####echo "fn main() { println('Hello world') }" > hello.v && $MINGWPREFIX/share/v/v.exe hello.v && ./hello.exe && rm -f hello.exe hello.v



