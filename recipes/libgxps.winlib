export NAME="libgxps"
export STATUS=
export URL=http://live.gnome.org/libgxps
export BASENAME=libgxps
export DESCRIPTION="libgxps is a GObject based library for handling and rendering XPS documents."
export CATEGORY=fileformat
export TYPE=library
#export VERSION=0.2.1
#export VERSIONDATE=20120221
#export VERSION=0.2.2
#export VERSIONDATE=20120319
#export DEPENDENCIES=glib2,libarchive,freetype2,libjpeg,libtiff,lcms2,cairo
#export VERSION=0.2.3
#export VERSIONDATE=20150813
#export VERSION=0.2.3.1
#export VERSIONDATE=20150815
#export VERSION=0.2.3.2
#export VERSIONDATE=20150904
#export VERSION=0.2.4
#export VERSIONDATE=20160621
export VERSION=0.2.5
export VERSIONDATE=20170225
export DEPENDENCIES=glib2,libarchive,freetype2,libpng,libjpeg,libtiff,lcms2,cairo
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export VERSION=0.3.0
#export VERSIONDATE=20170815
#export VERSION=0.3.1
#export VERSIONDATE=20190105
#export VERSION=0.3.2
#export VERSIONDATE=20210226
wl-showstatus --package-version
#export DEPENDENCIES=glib2,libarchive,freetype2,libpng,libjpeg,libtiff,lcms2,cairo
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=meson
#export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://ftp.gnome.org/pub/gnome/sources/libgxps/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/libgxps/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no --disable-test &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no --disable-test LDFLAGS="-Wl,--as-needed -lpng" &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -D enable-test=false -D disable-introspection=true -D enable-man=false build_static &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -D enable-test=false -D disable-introspection=true -D enable-man=false build_shared &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_static install/strip &&
# wl-showstatus build-install &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####To do: fix building static libraries



