export NAME="Phonon"
export STATUS=
#export URL=https://projects.kde.org/projects/kdesupport/phonon
export URL=http://phonon.kde.org/
export BASENAME=phonon
export DESCRIPTION="The Phonon multimedia library and its backend plugins."
export CATEGORY=
export TYPE=library
#export VERSION=4.6.0
#export VERSIONDATE=20120412
####CMakeFiles/phonon.dir/objects.a(abstractaudiooutput.cpp.obj):abstractaudiooutput.cpp:(.rdata$_ZTIN6Phonon19AbstractAudioOutputE[typeinfo for Phonon::AbstractAudioOutput]+0x0): undefined reference to `vtable for __cxxabiv1::__vmi_class_type_info'
#export VERSION=4.7.0
#export VERSIONDATE=20131105
#export VERSION=4.7.1
#export VERSIONDATE=20131206
####phonon/pulsesupport.cpp:1235:74: error: 'unsetenv' was not declared in this scope
#export VERSION=4.7.2
#export VERSIONDATE=20140621
#export VERSION=4.8.0
#export VERSIONDATE=20140907
#export VERSION=4.8.1
#export VERSIONDATE=20141017
#export VERSION=4.8.2
#export VERSIONDATE=20141104
#export VERSION=4.8.3
#export VERSIONDATE=20141205
#export VERSION=4.9.0
#export VERSIONDATE=20160420
####phonon/phonondefs.h:26:27: fatal error: QtCore/QtGlobal: No such file or directory
#####include <QtCore/QtGlobal>
#export VERSION=4.9.1
#export VERSIONDATE=20170124
#export VERSION=4.10.0
#export VERSIONDATE=20180224
####-- The following REQUIRED packages could NOT be located on your system.
####-- Please install them before continuing this software installation.
####+ Qt4:  <>
#export VERSION=4.10.1
#export VERSIONDATE=20180427
#export VERSION=4.10.2
#export VERSIONDATE=20190110
####designer/videowidgetplugin.h:30: Error: Undefined interface
#export VERSION=4.10.3
#export VERSIONDATE=20190720
#export DEPENDANCIES=glib2,qt4
#export OPTIONALDEPENDANCIES=qzeitgeist
#export BUILDDEPENDANCIES=cmake
#export VERSION=4.11.0
#export VERSIONDATE=20190828
####Could not find a package configuration file provided by "Qt5LinguistTools" with any of the following names: Qt5LinguistToolsConfig.cmake qt5linguisttools-config.cmake
export VERSION=4.11.1
export VERSIONDATE=20190927
wl-showstatus --package-version
export DEPENDANCIES=glib2,qt
export OPTIONALDEPENDANCIES=qzeitgeist
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
export DOWNLOADURL="http://kde.mirrors.tds.net/pub/kde/stable/phonon/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://kde.mirrors.tds.net/pub/kde/stable/phonon/$VERSION/src/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://kde.mirrors.tds.net/pub/kde/stable/phonon/src/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://kde.mirrors.tds.net/pub/kde/stable/phonon/$VERSION/$BASENAME-$VERSION.tar.xz
export DOWNLOADSOURCEURL=http://kde.mirrors.tds.net/pub/kde/stable/phonon/$VERSION/src/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
## fix missing setenv in phonon/pulsesupport.cpp (version <= 4.10.3)
#mv phonon/pulsesupport.cpp phonon/pulsesupport.cpp.bak
#cat > phonon/pulsesupport.cpp << EOF
##undef __STRICT_ANSI__
##include <stdlib.h>
##include <string.h>
#static int setenv(const char *envname, const char *envval, int overwrite)
#{
# char* s = (char*)malloc(strlen(envname) + strlen(envval) + 2);
# strcpy(s, envname);
# strcat(s, "=");
# strcat(s, envval);
# return _putenv(s);
#}
#EOF
#cat phonon/pulsesupport.cpp.bak >> phonon/pulsesupport.cpp
# fix missing unsetenv in phonon/pulsesupport.cpp (version >= 4.11.1)
mv phonon/pulsesupport.cpp phonon/pulsesupport.cpp.bak
cat > phonon/pulsesupport.cpp << EOF
#include <windows.h>
#define unsetenv(v) SetEnvironmentVariableA((v), NULL)
EOF
cat phonon/pulsesupport.cpp.bak >> phonon/pulsesupport.cpp
wl-showstatus configure &&
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ C_INCLUDE_PATH=$C_INCLUDE_PATH:$MINGWPREFIX/qt/include CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MINGWPREFIX/qt/include cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/qt -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe -DQT_QT_INCLUDE_DIR:FILEPATH=$MINGWPREFIX/qt/include -DPHONON_QT_MKSPECS_INSTALL_DIR:FILEPATH=$MINGWPREFIX/qt/mkspecs . &&
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ C_INCLUDE_PATH=$C_INCLUDE_PATH:$MINGWPREFIX/qt/include CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MINGWPREFIX/qt/include cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/qt -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe -DQT_QT_INCLUDE_DIR:FILEPATH=$MINGWPREFIX/qt/include -DPHONON_QT_MKSPECS_INSTALL_DIR:FILEPATH=$MINGWPREFIX/qt/mkspecs -DWITH_PulseAudio:BOOL=OFF -DWITH_GLIB2:BOOL=ON . &&
#PATH=$PATH:$MINGWPREFIX/qt4/bin QTDIR=$MINGWPREFIX/qt4 QMAKESPEC=$MINGWPREFIX/qt4/mkspecs/win32-g++ C_INCLUDE_PATH=$C_INCLUDE_PATH:$MINGWPREFIX/qt4/include CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MINGWPREFIX/qt4/include cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/qt -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe -DQT_QT_INCLUDE_DIR:FILEPATH=$MINGWPREFIX/qt4/include -DPHONON_QT_MKSPECS_INSTALL_DIR:FILEPATH=$MINGWPREFIX/qt4/mkspecs -DWITH_PulseAudio:BOOL=OFF -DWITH_GLIB2:BOOL=ON . &&
PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ C_INCLUDE_PATH=$C_INCLUDE_PATH:$MINGWPREFIX/qt/include CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MINGWPREFIX/qt/include cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX/qt -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt/bin/qmake.exe -DQT_QT_INCLUDE_DIR:FILEPATH=$MINGWPREFIX/qt/include -DPHONON_QT_MKSPECS_INSTALL_DIR:FILEPATH=$MINGWPREFIX/qt/mkspecs -DWITH_PulseAudio:BOOL=OFF -DWITH_GLIB2:BOOL=ON . &&
 wl-showstatus build-install &&
 #( PATH=$MINGWPREFIX/qt/bin:$PATH make install/strip || PATH=$MINGWPREFIX/qt/bin:$PATH make install ) &&
 #( PATH=$MINGWPREFIX/qt4/bin:$PATH CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MINGWPREFIX/qt4/include make install/strip || PATH=$MINGWPREFIX/qt4/bin:$PATH CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MINGWPREFIX/qt4/include make install ) &&
 ( PATH=$MINGWPREFIX/qt/bin:$PATH CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MINGWPREFIX/qt/include make install/strip || PATH=$MINGWPREFIX/qt/bin:$PATH CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MINGWPREFIX/qt/include make install ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#See also: http://techbase.kde.org/Getting_Started/Build/KDE_Support#Phonon


# to do:  libzeitgeist https://launchpad.net/libzeitgeist
# to do:  libqzeitgeist http://kde.mirrors.tds.net/pub/kde/stable/libqzeitgeist/
# see also: http://zeitgeist-project.com/



