export NAME="Okteta"
export STATUS=
export URL=https://userbase.kde.org/Okteta
#export URL=https://invent.kde.org/utilities/okteta
export BASENAME=okteta
export DESCRIPTION="Hex editor for viewing and editing the raw data of files"
export CATEGORY=
export TYPE=application
#export VERSION=0.26.6
#export VERSIONDATE=20211227
#export VERSION=0.26.7
#export VERSIONDATE=20220223
#export VERSION=0.26.8
#export VERSIONDATE=20220518
#export VERSION=0.26.9
#export VERSIONDATE=20220610
#export VERSION=0.26.10
#export VERSIONDATE=20230109
#export VERSION=0.26.11
#export VERSIONDATE=20230606
#export VERSION=0.26.12
#export VERSIONDATE=20230707
#export VERSION=0.26.13
#export VERSIONDATE=20230808
#export VERSION=0.26.14
#export VERSIONDATE=20231212
export VERSION=0.26.15
export VERSIONDATE=20240101
wl-showstatus --package-version
export DEPENDENCIES=gettext,gtk3,qt,libkf5attica,libkf5auth,libkf5bookmarks,libkf5codecs,libkf5completion,libkf5configwidgets,libkf5config,libkf5coreaddons,libkf5crash,libkf5dbusaddons,libkf5doctools,libkf5i18n,libkf5iconthemes,libkf5itemviews,libkf5jobwidgets,libkf5kcmutils,libkf5kio,libkf5newstuff,libkf5newstuff,libkf5parts,libkf5service,libkf5solid,libkf5sonnet,libkf5textwidgets,libkf5widgetsaddons,libkf5windowsystem,libkf5xmlgui
export OPTIONALDEPENDENCIES=qca2
export BUILDDEPENDENCIES=extra-cmake-modules,cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSES/BSD-3-Clause.txt
#export LICENSEFILE=LICENSES/*
export LICENSETYPE=BSD/LGPL/GPL
export DOWNLOADURL="https://invent.kde.org/utilities/okteta/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://invent.kde.org/utilities/okteta/-/archive/v$VERSION/okteta-v$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xj --force-local -f $TARBALLDIR/$BASENAME/okteta-v$VERSION.tar.bz2
cd okteta-v$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DKI18N_PYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 #wl-showstatus build &&
 #ninja -Cbuild_win &&
 wl-showstatus build-install &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_win install/strip &&
 ( PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_win install/strip || PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_win -j1 install/strip ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf okteta-v$VERSION
####PATH=$PATH:$MINGWPREFIX/qt/bin okteta.exe



