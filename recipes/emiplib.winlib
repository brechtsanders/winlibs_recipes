export NAME="EMIPLIB"
export STATUS=
export URL=http://research.edm.uhasselt.be/emiplib/emiplib.html
export BASENAME=emiplib
export DESCRIPTION="The name EMIPLIB stands for 'EDM Media over IP library'. This library was developed at the Expertise Centre for Digital Media (EDM), a research institute of the Hasselt University. As the name suggests, the goal of the library is to make it easier to stream several kinds of media, including (but not limited to) audio and video."
export CATEGORY=audio,communication
export TYPE=library
#export VERSION=0.16.1
export VERSION=0.17.0
export VERSIONDATE=
wl-showstatus --package-version
export DEPENDENCIES=jthread,jrtplib,portaudio,openal,sdl,libspeex,audiofile,libsndfile,pthreads
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.LGPL
export LICENSETYPE="LGPL (or GPL if GPL components are used)"
export DOWNLOADURL="http://research.edm.uhasselt.be/emiplib/emiplib.html"
#export DOWNLOADURL="https://github.com/j0r1/EMIPLIB/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://research.edm.uhasselt.be/emiplib/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# remove (re)definition of int8_t
mv src/core/miptypes_win.h src/core/miptypes_win.h.bak
sed -e "s?^\(typedef char int8_t;\)?#include <inttypes.h> //\1?" src/core/miptypes_win.h.bak > src/core/miptypes_win.h
# fix for hash_map which is in ext/hash_map
#mv src/components/transmission/miprtpdecoder.h src/components/transmission/miprtpdecoder.h.bak
#sed -e "s/#if \(defined(WIN32) || defined(_WIN32_WCE)\)/#if (\1) \&\& \!defined(__MINGW32__)/" src/components/transmission/miprtpdecoder.h.bak > src/components/transmission/miprtpdecoder.h
#mv src/components/transmission/miprtpdecoder.cpp src/components/transmission/miprtpdecoder.cpp.bak
#sed -e "s/#if \(defined(WIN32) || defined(_WIN32_WCE)\)/#if (\1) \&\& \!defined(__MINGW32__)/" src/components/transmission/miprtpdecoder.cpp.bak > src/components/transmission/miprtpdecoder.cpp
#mv src/components/transform/mipaudio3dbase.h src/components/transform/mipaudio3dbase.h.bak
#sed -e "s/#if \(defined(WIN32) || defined(_WIN32_WCE)\)/#if (\1) \&\& \!defined(__MINGW32__)/" src/components/transform/mipaudio3dbase.h.bak > src/components/transform/mipaudio3dbase.h
#mv src/components/transform/mipaudio3dbase.cpp src/components/transform/mipaudio3dbase.cpp.bak
#sed -e "s/#if (*\(defined(WIN32) || defined(_WIN32_WCE)\))*/#if (\1) \&\& \!defined(__MINGW32__)/" src/components/transform/mipaudio3dbase.cpp.bak > src/components/transform/mipaudio3dbase.cpp
#mv src/components/codec/mipspeexdecoder.h src/components/codec/mipspeexdecoder.h.bak
#sed -e "s/#if \(defined(WIN32) || defined(_WIN32_WCE)\)/#if (\1) \&\& \!defined(__MINGW32__)/" src/components/codec/mipspeexdecoder.h.bak > src/components/codec/mipspeexdecoder.h
#mv src/components/codec/mipspeexdecoder.cpp src/components/codec/mipspeexdecoder.cpp.bak
#sed -e "s/#if \(defined(WIN32) || defined(_WIN32_WCE)\)/#if (\1) \&\& \!defined(__MINGW32__)/" src/components/codec/mipspeexdecoder.cpp.bak > src/components/codec/mipspeexdecoder.cpp
#mv src/components/codec/mipgsmdecoder.h src/components/codec/mipgsmdecoder.h.bak
#sed -e "s/#if \(defined(WIN32) || defined(_WIN32_WCE)\)/#if (\1) \&\& \!defined(__MINGW32__)/" src/components/codec/mipgsmdecoder.h.bak > src/components/codec/mipgsmdecoder.h
#mv src/components/codec/mipgsmdecoder.cpp src/components/codec/mipgsmdecoder.cpp.bak
#sed -e "s/#if \(defined(WIN32) || defined(_WIN32_WCE)\)/#if (\1) \&\& \!defined(__MINGW32__)/" src/components/codec/mipgsmdecoder.cpp.bak > src/components/codec/mipgsmdecoder.cpp
#mv src/components/codec/miplpcdecoder.h src/components/codec/miplpcdecoder.h.bak
#sed -e "s/#if \(defined(WIN32) || defined(_WIN32_WCE)\)/#if (\1) \&\& \!defined(__MINGW32__)/" src/components/codec/miplpcdecoder.h.bak > src/components/codec/miplpcdecoder.h
#mv src/components/codec/miplpcdecoder.cpp src/components/codec/miplpcdecoder.cpp.bak
#sed -e "s/#if \(defined(WIN32) || defined(_WIN32_WCE)\)/#if (\1) \&\& \!defined(__MINGW32__)/" src/components/codec/miplpcdecoder.cpp.bak > src/components/codec/miplpcdecoder.cpp
for F in $(grep -l -w "#if defined(WIN32) || defined(_WIN32_WCE)" src/components/*/*.h src/components/*/*.cpp); do
 mv $F $F.bak
 sed -e "s/#if \(defined(WIN32) || defined(_WIN32_WCE)\)/#if (\1) \&\& \!defined(__MINGW32__)/" $F.bak > $F
done
# fix missing _snprintf
mv src/core/mipversion.cpp src/core/mipversion.cpp.bak
echo "#include <stdio.h>" > src/core/mipversion.cpp
cat src/core/mipversion.cpp.bak >> src/core/mipversion.cpp
# fix missing memcpy
mv src/util/mipwavwriter.cpp src/util/mipwavwriter.cpp.bak
echo "#include <string.h>" > src/util/mipwavwriter.cpp
cat src/util/mipwavwriter.cpp.bak >> src/util/mipwavwriter.cpp
#mv src/Makefile src/Makefile.bak
#sed "s?\(components/output/\)\(mipwavoutput.cpp\)?\1\2 \1mipwinmmoutput.cpp?" src/Makefile.bak > src/Makefile
## add required libraries for building examples
#mv examples/Makefile examples/Makefile.bak
##sed -e "s?^\(LIBS *= *\)?\1-ljthread -lwsock32 -lws2_32 ?" examples/Makefile.bak > examples/Makefile
#sed -e "s?^\(LIBS *= *\)?\1-ljthread -lws2_32 ?" examples/Makefile.bak > examples/Makefile
## fix for building mipwinmmoutput and mipwinmmoutput
#mv src/Makefile src/Makefile.bak
#sed -e "s?\([^ ]*\)\(mipwavoutput\)\(\.[a-z]*\) \(\\\\\)?\1\2\3 \1mipwinmmoutput\3 \4?; s?\([^ ]*\)\(mipwavinput\)\(\.[a-z]*\) \(\\\\\)?\1\2\3 \1mipwinmminput\3 \4?" src/Makefile.bak > src/Makefile
#cat >> src/Makefile << EOF
#mipwinmmoutput.lo: components/output/mipwinmmoutput.cpp
#`printf "\\t"`if \$(LIBTOOL) --tag=CXX --mode=compile \$(CXX) \$(DEFS) \$(DEFAULT_INCLUDES) \$(INCLUDES) \$(AM_CPPFLAGS) \$(CPPFLAGS) \$(AM_CXXFLAGS) \$(CXXFLAGS) -MT mipwinmmoutput.lo -MD -MP -MF "\$(DEPDIR)/mipwinmmoutput.Tpo" -c -o mipwinmmoutput.lo \`test -f 'components/output/mipwinmmoutput.cpp components/output/mipwinmmoutput.cpp' || echo '\$(srcdir)/'\`components/output/mipwinmmoutput.cpp; \\
#`printf "\\t"`then mv -f "\$(DEPDIR)/mipwinmmoutput.Tpo" "\$(DEPDIR)/mipwinmmoutput.Plo"; else rm -f "\$(DEPDIR)/mipwinmmoutput.Tpo"; exit 1; fi
#mipwinmminput.lo: components/input/mipwinmminput.cpp
#`printf "\\t"`if \$(LIBTOOL) --tag=CXX --mode=compile \$(CXX) \$(DEFS) \$(DEFAULT_INCLUDES) \$(INCLUDES) \$(AM_CPPFLAGS) \$(CPPFLAGS) \$(AM_CXXFLAGS) \$(CXXFLAGS) -MT mipwinmminput.lo -MD -MP -MF "\$(DEPDIR)/mipwinmminput.Tpo" -c -o mipwinmminput.lo \`test -f 'components/input/mipwinmminput.cpp' || echo '\$(srcdir)/'\`components/input/mipwinmminput.cpp; \\
#`printf "\\t"`then mv -f "\$(DEPDIR)/mipwinmminput.Tpo" "\$(DEPDIR)/mipwinmminput.Plo"; else rm -f "\$(DEPDIR)/mipwinmminput.Tpo"; exit 1; fi
#EOF
#make -C src mipwinmmoutput.lo mipwinmminput.lo
#cat >> src/Makefile << EOF
#include ./\$(DEPDIR)/mipwinmmoutput.Plo
#include ./\$(DEPDIR)/mipwinmminput.Plo
#EOF
### remove dependancy on dynamic libstdc++ (GCC 4)
##mv libtool libtool.bak
##sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool
## skip making examples
#cat > examples/Makefile << EOF
#all:
#install:
#EOF
#make all install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION
# fix for building mipwinmmoutput and mipwinmmoutput
#mv src/Makefile.in src/Makefile.in.bak
#sed "s?\(components/output/\)\(mipwavoutput.cpp\)?\1\2 \1mipwinmmoutput.cpp?" src/Makefile.in.bak > src/Makefile.in
mv src/Makefile.in src/Makefile.in.bak
sed -e "s?\([^ ]*\)\(mipwavoutput\)\(\.[a-z]*\) \(.*\\\\\)?\1\2\3 \1mipwinmmoutput\3 \4?; s?\([^ ]*\)\(mipwavinput\)\(\.[a-z]*\) \(.*\\\\\)?\1\2\3 \1mipwinmminput\3 \4?" src/Makefile.in.bak > src/Makefile.in
cat >> src/Makefile.in << EOF
mipwinmmoutput.lo: components/output/mipwinmmoutput.cpp
`printf "\\t"`if \$(LIBTOOL) --tag=CXX --mode=compile \$(CXX) \$(DEFS) \$(DEFAULT_INCLUDES) \$(INCLUDES) \$(AM_CPPFLAGS) \$(CPPFLAGS) \$(AM_CXXFLAGS) \$(CXXFLAGS) -MT mipwinmmoutput.lo -MD -MP -MF "\$(DEPDIR)/mipwinmmoutput.Tpo" -c -o mipwinmmoutput.lo \`test -f 'components/output/mipwinmmoutput.cpp components/output/mipwinmmoutput.cpp' || echo '\$(srcdir)/'\`components/output/mipwinmmoutput.cpp; \\
`printf "\\t"`then mv -f "\$(DEPDIR)/mipwinmmoutput.Tpo" "\$(DEPDIR)/mipwinmmoutput.Plo"; else rm -f "\$(DEPDIR)/mipwinmmoutput.Tpo"; exit 1; fi
mipwinmminput.lo: components/input/mipwinmminput.cpp
`printf "\\t"`if \$(LIBTOOL) --tag=CXX --mode=compile \$(CXX) \$(DEFS) \$(DEFAULT_INCLUDES) \$(INCLUDES) \$(AM_CPPFLAGS) \$(CPPFLAGS) \$(AM_CXXFLAGS) \$(CXXFLAGS) -MT mipwinmminput.lo -MD -MP -MF "\$(DEPDIR)/mipwinmminput.Tpo" -c -o mipwinmminput.lo \`test -f 'components/input/mipwinmminput.cpp' || echo '\$(srcdir)/'\`components/input/mipwinmminput.cpp; \\
`printf "\\t"`then mv -f "\$(DEPDIR)/mipwinmminput.Tpo" "\$(DEPDIR)/mipwinmminput.Plo"; else rm -f "\$(DEPDIR)/mipwinmminput.Tpo"; exit 1; fi
include ./\$(DEPDIR)/mipwinmmoutput.Plo
include ./\$(DEPDIR)/mipwinmminput.Plo
EOF
# add required libraries for building examples
mv examples/Makefile.in examples/Makefile.in.bak
#sed -e "s?^\(LIBS *= *\)?\1-ljthread -lwsock32 -lws2_32 ?" examples/Makefile.in.bak > examples/Makefile.in
sed -e "s?^\(LIBS *= *\)?\1-ljthread -lws2_32 ?" examples/Makefile.in.bak > examples/Makefile.in
# fix missing JMutex in src/core/mipcomponent.h
patch -ulbf src/core/mipcomponent.h << EOF
--- src/core/mipcomponent.h  2009-08-11 12:15:06 +0200
+++ src/core/mipcomponent.h  2013-09-22 21:40:20 +0200
@@ -36,2 +36,3 @@
 #include <jmutex.h>
+using namespace jthread;
 #include <string>
EOF
# fix missing JMutex in src/core/mipcomponentchain.h
patch -ulbf src/core/mipcomponentchain.h << EOF
--- src/core/mipcomponentchain.h  2009-08-11 12:15:06 +0200
+++ src/core/mipcomponentchain.h  2013-09-22 21:40:20 +0200
@@ -36,2 +36,3 @@
 #include <jthread.h>
+using namespace jthread;
 #include <string>
EOF
# fix missing RTPTime in src/core/miptime.h
mv src/core/miptime.h src/core/miptime.h.bak
sed -e "s/\(RTPTime\)/jrtplib::\1/g" src/core/miptime.h.bak > src/core/miptime.h
## skip making examples
#cat > examples/Makefile.in << EOF
#all:
#install:
#EOF
## remove dependancy on dynamic libstdc++ (GCC 4)
#mv libtool libtool.bak
#sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool
# fix detection of jthread and jrtplib
mv configure configure.bak
#sed -e "s?\$withval/\(jthread.h\)?jthread/\1?; s?\$withval/\(rtplibraryversion.h\)?jrtplib3/\1?" configure.bak > configure
sed -e "s?\(test -e \"\)\(\$withval\"\)?\1$MINGWPREFIX/include/\2?g" configure.bak > configure
# fix detection of JThread in configure
patch -ulbf configure << EOF
--- configure  2013-09-22 21:19:36 +0200
+++ configure  2013-09-22 21:25:58 +0200
@@ -27158,11 +27158,13 @@
                cat >conftest.\$ac_ext <<_ACEOF

                        #include "\$withval/jthread.h"
+                       namespace jthread {
                        class MyThread : public JThread
                        {
                        public:
                                void *Thread() { JThread::ThreadStarted(); return 0; }
                        };
+                       }
 _ACEOF
 rm -f conftest.\$ac_objext
 if { (ac_try="\$ac_compile"
EOF
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-jthread-includes=jthread --with-jrtplib-includes=jrtplib3 CXXFLAGS="-I$MINGWPREFIX/include/jthread -I$MINGWPREFIX/include/jrtplib3" LDFLAGS="-Wl,--enable-auto-import -ljrtp -ljthread -lwinmm -lspeex -lspeexdsp -no-undefined -Wl,-no-undefined" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-jthread-includes=jthread --with-jrtplib-includes=jrtplib3 CXXFLAGS="-I$MINGWPREFIX/include/jthread -I$MINGWPREFIX/include/jrtplib3" LDFLAGS="-Wl,--enable-auto-import -Wl,--as-needed -ljrtp -ljthread -lwinmm -lspeex -lspeexdsp -Wl,-no-undefined" &&
 ( make all install-strip || ( rm src/*.lo && make -C src mipwinmmoutput.lo mipwinmminput.lo && make -j1 all install-strip ) ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="EMIPLIB"
#export STATUS=
#export URL=http://research.edm.uhasselt.be/emiplib/emiplib.html
#export BASENAME=emiplib
#export DESCRIPTION="The name EMIPLIB stands for 'EDM Media over IP library'. This library was developed at the Expertise Centre for Digital Media (EDM), a research institute of the Hasselt University. As the name suggests, the goal of the library is to make it easier to stream several kinds of media, including (but not limited to) audio and video."
#export CATEGORY=audio,communication
#export TYPE=library
##export VERSION=1.0.0
##export VERSIONDATE=20100719
##export VERSION=1.1.0
##export VERSIONDATE=20110731
##export VERSION=1.1.1
##export VERSIONDATE=20111108
##export VERSION=1.2.0
##export VERSIONDATE=20161225
#export VERSION=1.2.1
#export VERSIONDATE=20170125
#wl-showstatus --package-version
#export DEPENDENCIES=jthread,jrtplib,portaudio,openal,sdl,libspeex,audiofile,libsndfile,pthreads
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.LGPL
#export LICENSETYPE="LGPL (or GPL if GPL components are used)"
#export DOWNLOADURL="http://research.edm.uhasselt.be/emiplib/emiplib.html"
##export DOWNLOADURL="https://github.com/j0r1/EMIPLIB/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://research.edm.uhasselt.be/emiplib/$BASENAME-$VERSION.tar.bz2
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
#patch -ulbf src/components/transmission/miprtph263decoder.h << EOF
#--- src/components/transmission/miprtph263decoder.h  2011-08-29 16:08:54 +0200
#+++ src/components/transmission/miprtph263decoder.h  2013-03-04 15:15:14 +0100
#@@ -36,3 +36,5 @@
# #include "miptime.h"
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+       #include <unordered_map>
#+#elif defined(WIN32) || defined(_WIN32_WCE)
#        #include <hash_map>
#@@ -86,3 +88,5 @@
#
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+       std::unordered_map<uint32_t, PacketGrouper *> m_packetGroupers;
#+#elif defined(WIN32) || defined(_WIN32_WCE)
#        stdext::hash_map<uint32_t, PacketGrouper *> m_packetGroupers;
#EOF
#patch -ulbf src/components/transmission/miprtph263decoder.cpp << EOF
#--- src/components/transmission/miprtph263decoder.cpp  2011-07-27 21:16:12 +0200
#+++ src/components/transmission/miprtph263decoder.cpp  2013-03-04 15:44:00 +0100
#@@ -34,3 +34,6 @@
# using namespace jrtplib;
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+using namespace std;
#+#define hash_map unordered_map
#+#elif defined(WIN32) || defined(_WIN32_WCE)
# using namespace stdext;
#EOF
#patch -ulbf src/components/transmission/miprtpvideodecoder.h << EOF
#--- src/components/transmission/miprtpvideodecoder.h  2011-08-29 16:08:54 +0200
#+++ src/components/transmission/miprtpvideodecoder.h  2013-03-04 15:46:50 +0100
#@@ -36,3 +36,5 @@
# #include "miptime.h"
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+       #include <unordered_map>
#+#elif defined(WIN32) || defined(_WIN32_WCE)
#        #include <hash_map>
#@@ -87,3 +89,5 @@
#
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+       std::unordered_map<uint32_t, PacketGrouper *> m_packetGroupers;
#+#elif defined(WIN32) || defined(_WIN32_WCE)
#        stdext::hash_map<uint32_t, PacketGrouper *> m_packetGroupers;
#EOF
#patch -ulbf src/components/transmission/miprtpvideodecoder.cpp << EOF
#--- src/components/transmission/miprtpvideodecoder.cpp  2011-07-27 21:16:12 +0200
#+++ src/components/transmission/miprtpvideodecoder.cpp  2013-03-04 15:48:38 +0100
#@@ -34,3 +34,6 @@
# using namespace jrtplib;
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+using namespace std;
#+#define hash_map unordered_map
#+#elif defined(WIN32) || defined(_WIN32_WCE)
# using namespace stdext;
#EOF
#patch -ulbf src/components/transmission/miprtpdecoder.h << EOF
#--- src/components/transmission/miprtpdecoder.h  2011-08-29 16:08:54 +0200
#+++ src/components/transmission/miprtpdecoder.h  2013-03-04 16:31:48 +0100
#@@ -35,3 +35,5 @@
# #include "miptime.h"
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+       #include <unordered_map>
#+#elif defined(WIN32) || defined(_WIN32_WCE)
#        #include <hash_map>
#@@ -217,3 +219,5 @@
#
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+       std::unordered_map<uint32_t, SSRCInfo> m_sourceTable;
#+#elif defined(WIN32) || defined(_WIN32_WCE)
#        stdext::hash_map<uint32_t, SSRCInfo> m_sourceTable;
#EOF
#patch -ulbf src/components/transmission/miprtpdecoder.cpp << EOF
#--- src/components/transmission/miprtpdecoder.cpp  2011-07-28 11:14:54 +0200
#+++ src/components/transmission/miprtpdecoder.cpp  2013-03-04 16:31:14 +0100
#@@ -40,3 +40,6 @@
#
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+using namespace std;
#+#define hash_map unordered_map
#+#elif defined(WIN32) || defined(_WIN32_WCE)
# using namespace stdext;
#EOF
#patch -ulbf src/components/transform/mipaudio3dbase.h << EOF
#--- src/components/transform/mipaudio3dbase.h  2013-03-04 16:35:48 +0100
#+++ src/components/transform/mipaudio3dbase.h  2013-03-04 16:35:58 +0100
#@@ -36,3 +36,5 @@
# #include <string.h>
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+       #include <unordered_map>
#+#elif defined(WIN32) || defined(_WIN32_WCE)
#        #include <hash_map>
#@@ -136,3 +138,5 @@
#
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+       std::unordered_map<uint64_t, PositionalInfo> m_posInfo;
#+#elif defined(WIN32) || defined(_WIN32_WCE)
#        stdext::hash_map<uint64_t, PositionalInfo> m_posInfo;
#EOF
#patch -ulbf src/components/transform/mipaudio3dbase.cpp << EOF
#--- src/components/transform/mipaudio3dbase.cpp  2013-03-04 16:35:50 +0100
#+++ src/components/transform/mipaudio3dbase.cpp  2013-03-04 16:35:56 +0100
#@@ -30,3 +30,6 @@
#
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+using namespace std;
#+#define hash_map unordered_map
#+#elif defined(WIN32) || defined(_WIN32_WCE)
# using namespace stdext;
#EOF
#patch -ulbf src/components/transform/mipavcodecframeconverter.h << EOF
#--- src/components/transform/mipavcodecframeconverter.h  2011-08-29 16:08:54 +0200
#+++ src/components/transform/mipavcodecframeconverter.h  2013-03-04 16:38:26 +0100
#@@ -38,3 +38,5 @@
# #include "miptime.h"
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+       #include <unordered_map>
#+#elif defined(WIN32) || defined(_WIN32_WCE)
#        #include <hash_map>
#@@ -138,3 +140,5 @@
#        };
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+       std::unordered_map<uint64_t, ConvertCache *> m_convertCache;
#+#elif defined(WIN32) || defined(_WIN32_WCE)
#        stdext::hash_map<uint64_t, ConvertCache *> m_convertCache;
#EOF
#patch -ulbf src/components/transform/mipavcodecframeconverter.cpp << EOF
#--- src/components/transform/mipavcodecframeconverter.cpp  2011-07-27 21:16:12 +0200
#+++ src/components/transform/mipavcodecframeconverter.cpp   2013-03-04 16:38:40 +0100
#@@ -33,3 +33,6 @@
#
#-#if defined(WIN32) || defined(_WIN32_WCE)
#+#if defined(__MINGW32__)
#+using namespace std;
#+#define hash_map unordered_map
#+#elif defined(WIN32) || defined(_WIN32_WCE)
# using namespace stdext;
#EOF
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DEMIPLIB_COMPILE_STATIC:BOOL=ON -DCXX_FLAGS:String="-std=gnu++0x" . &&
# for F in $(grep -l CXX_FLAGS */CMakeFiles/*/flags.make); do
#  sed -i.orig -e "s/^\(CXX_FLAGS *= *\)/\1-std=gnu++0x /" $F
# done &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



