#export NAME="liblogging"
#export STATUS=
#export URL=http://www.liblogging.org/
#export BASENAME=liblogging
#export DESCRIPTION='Liblogging is an easy to use, portable, open source library for system logging.'
#export CATEGORY=system
#export TYPE=library
#export VERSION=0.6.0
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=BSD-style
#export DOWNLOADURL="http://www.liblogging.org/modules.php?op=modload&name=Downloads&file=index&req=viewdownload&cid=1&orderby=dateD"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.liblogging.org/Downloads-req-getit-lid-2.phtml
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#unzip -oq -d $BASENAME-$VERSION $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.zip
#cd $BASENAME-$VERSION/src
##sed -e "s/^\(CFLAGS.*\)/\1 -DWIN32 -I./; s/Unix/Win32/; s/^#EXTRA_LIBS.*$/EXTRA_LIBS = -lwsock32/" makefile > Makefile.mingw
#sed -e "s/^\(CFLAGS.*\)/\1 -DWIN32 -I./; s/Unix/Win32/; s/^#EXTRA_LIBS.*$/EXTRA_LIBS = -lws2_32/" makefile > Makefile.mingw
#cat > crtdbg.h << EOF
##define _CrtSetDbgFlag(x)
##define _CRTDBG_CHECK_ALWAYS_DF 0
##define _CRTDBG_ALLOC_MEM_DF 0
##define _CRTDBG_LEAK_CHECK_DF 0
#EOF
#make -f Makefile.mingw
#mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib
#cp liblogging.h srAPI.h $INSTALLPREFIX/include
#cp liblogging.a $INSTALLPREFIX/lib/
## to test:
##testsrvr.exe &
##testdrvr.exe 127.0.0.1; fg
#cd ..
#wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf $BASENAME-$VERSION



#export NAME="liblogging"
#export STATUS=
#export URL=http://www.liblogging.org/
#export BASENAME=liblogging
#export DESCRIPTION='Liblogging is an easy to use, portable, open source library for system logging.'
#export CATEGORY=system
#export TYPE=library
#export VERSION=0.7.1
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=BSD-style
#export DOWNLOADURL=""
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://www.liblogging.org/Downloads-req-getit-lid-2.phtml
#export DOWNLOADSOURCEURL=http://www.liblogging.org/Downloads-req-getit-lid-5.phtml
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##unzip -oq -d $BASENAME-$VERSION $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.zip
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
#cat > crtdbg.h << EOF
##define _CrtSetDbgFlag(x)
##define _CRTDBG_CHECK_ALWAYS_DF 0
##define _CRTDBG_ALLOC_MEM_DF 0
##define _CRTDBG_LEAK_CHECK_DF 0
#EOF
### to test:
##src/testsrvr.exe &
##src/testdrvr.exe 127.0.0.1; fg
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-lws2_32 -no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,-no-undefined" &&
# wl-showstatus build-install &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="liblogging"
export STATUS=
export URL=http://www.liblogging.org/
export BASENAME=liblogging
export DESCRIPTION='Liblogging is an easy to use, portable, open source library for system logging.'
export CATEGORY=system
export TYPE=library
#export VERSION=1.0.0
#export VERSIONDATE=20140124
#export VERSION=1.0.1
#export VERSIONDATE=20140210
####No package 'libsystemd-journal' found
#export VERSION=1.0.2
#export VERSIONDATE=20140303
#export VERSION=1.0.3
#export VERSIONDATE=20140318
#export VERSION=1.0.4
#export VERSIONDATE=20140403
#export VERSION=1.0.5
#export VERSIONDATE=20141209
export VERSION=1.0.6
export VERSIONDATE=20170306
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=docutils
export LICENSEFILE=COPYING
export LICENSETYPE=BSD-style
export DOWNLOADURL="http://download.rsyslog.com/liblogging/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://download.rsyslog.com/liblogging/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus configure &&
## fix stdlog/stdlog.c (version <= 1.0.1)
#patch -ulbf stdlog/stdlog.c << EOF
#--- stdlog/stdlog.c  2014-01-21 12:36:02 +0100
#+++ stdlog/stdlog.c  2014-01-24 23:09:58 +0100
#@@ -31,3 +31,5 @@
# #include <stdarg.h>
#+#ifndef __MINGW32__
# #include <syslog.h>
#+#endif
# #include "libstdlog.h"
#@@ -43,2 +45,5 @@
# {
#+#ifdef __MINGW32__
#+       return 0;
#+#else
#        char msg[4096];
#@@ -56,2 +61,3 @@
# done:  return r;
#+#endif
# }
#EOF
# fix stdlog/stdlog.c (version >= 1.0.2)
patch -ulbf stdlog/stdlog.c << EOF
--- stdlog/stdlog.c  2014-02-25 16:44:08 +0100
+++ stdlog/stdlog.c  2014-03-03 20:21:00 +0100
@@ -32,3 +32,5 @@
 #include <stdint.h>
+#ifndef __MINGW32__
 #include <syslog.h>
+#endif
 #include <errno.h>
@@ -122,2 +124,3 @@
 #      endif
+#       ifndef __MINGW32__
        else if (!strncmp(chanspec, "uxsock:", 7))
@@ -126,2 +129,3 @@
                __stdlog_set_uxs_drvr(ch);
+#      endif
        return 0;
EOF
# fix stdlog/stdlog-intern.h (version >= 1.0.2)
patch -ulbf stdlog/stdlog-intern.h << EOF
--- stdlog/stdlog-intern.h  2014-02-27 09:26:04 +0100
+++ stdlog/stdlog-intern.h  2014-03-03 20:22:46 +0100
@@ -45,11 +45,13 @@
                int (*log)(stdlog_channel_t ch, const int severity, const char *fmt, va_list ap, char *wrkbuf, const size_t buflen);
        } drvr;
        union {
+#ifndef __MINGW32__
                struct {
                        char *sockname;
                        int sock;
                        struct sockaddr_un addr;
                } uxs;  /* unix socket (including syslog) */
+#endif
                struct {
                        int fd;
                        char *name;
EOF
# fix stdlog/formatter.c(version >= 1.0.2)
patch -ulbf stdlog/formatter.c << EOF
--- stdlog/formatter.c  2014-02-25 16:19:12 +0100
+++ stdlog/formatter.c  2014-03-03 20:35:16 +0100
@@ -32,3 +32,5 @@
 #include <stdint.h>
+#ifndef __MINGW32__
 #include <syslog.h>
+#endif
 #include <errno.h>
EOF
## fix missing crtdbg.h (version <= 1.0.0)
#mv src/testdrvr.c src/testdrvr.c.bak
#sed -e "s/\(#[ \t]*if\)def\([ \t]*\)WIN32/\1\2defined(WIN32) \&\& !defined(__MINGW32__)/" src/testdrvr.c.bak > src/testdrvr.c
#mv src/testsrvr.c src/testsrvr.c.bak
#sed -e "s/\(#[ \t]*if\)def\([ \t]*\)WIN32/\1\2defined(WIN32) \&\& !defined(__MINGW32__)/" src/testsrvr.c.bak > src/testsrvr.c
# fix missing crtdbg.h (version >= 1.0.1)
mv rfc3195/src/testsrvr.c rfc3195/src/testsrvr.c.bak
sed -e "s/\(#[ \t]*if\)def\([ \t]*\)WIN32/\1\2defined(WIN32) \&\& \!defined(__MINGW32__)/" rfc3195/src/testsrvr.c.bak > rfc3195/src/testsrvr.c
mv rfc3195/src/testdrvr.c rfc3195/src/testdrvr.c.bak
sed -e "s/\(#[ \t]*if\)def\([ \t]*\)WIN32/\1\2defined(WIN32) \&\& \!defined(__MINGW32__)/" rfc3195/src/testdrvr.c.bak > rfc3195/src/testdrvr.c
# fix missing files (version >= 1.0.2)
mkdir -p winfix/sys
touch winfix/sys/un.h
#echo "#include <winsock2.h>" > winfix/sys/socket.h
#touch winfix/syslog.h
# fix missing va_list in stdlog/stdlog.h (version >= 1.0.2)
mv stdlog/stdlog.h stdlog/stdlog.h.bak
echo "#include <stdarg.h>" > stdlog/stdlog.h
cat stdlog/stdlog.h.bak >> stdlog/stdlog.h
# fix missing UNIX sockets in  stdlog/uxsock.c (version >= 1.0.2)
mv stdlog/uxsock.c stdlog/uxsock.c.bak
echo "#ifndef __MINGW32__" > stdlog/uxsock.c
cat stdlog/uxsock.c.bak >> stdlog/uxsock.c
echo "#endif" >> stdlog/uxsock.c
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-rfc3195 --enable-stdlog LDFLAGS="-Wl,--as-needed -lws2_32" &&
RST2MAN="$PYDIR/python.exe $MINGWPREFIX/python/Scripts/rst2man.py" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-rfc3195 --enable-stdlog --disable-journal CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 wl-showstatus build-install &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



