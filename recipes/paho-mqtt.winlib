export NAME="Paho C client library for MQTT"
export STATUS=
export URL=https://www.eclipse.org/paho/
#export URL=https://github.com/eclipse/paho.mqtt.c
export BASENAME=paho-mqtt
export DESCRIPTION="An Eclipse Paho C client library for MQTT for Windows, Linux and MacOS."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.3.1
#export VERSIONDATE=20200329
#export VERSION=1.3.2
#export VERSIONDATE=20200420
#export VERSION=1.3.4
#export VERSIONDATE=20200605
#export VERSION=1.3.5
#export VERSIONDATE=20200806
#export VERSION=1.3.6
#export VERSIONDATE=20201003
#export VERSION=1.3.7
#export VERSIONDATE=20201122
#export VERSION=1.3.8
#export VERSIONDATE=20201227
#export VERSION=1.3.9
#export VERSIONDATE=20210526
#export VERSION=1.3.10
#export VERSIONDATE=20220329
export VERSION=1.3.11
export VERSIONDATE=20220930
wl-showstatus --package-version
export DEPENDANCIES=openssl
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
#export LICENSEFILE=edl-v10
#export LICENSEFILE=epl-v10
export LICENSEFILE=LICENSE
export LICENSETYPE=Eclipse
export DOWNLOADURL="https://github.com/eclipse/paho.mqtt.c/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/eclipse/paho.mqtt.c/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd paho.mqtt.c-$VERSION
# fix missing ntohll/htonll in pdal/util/portable_endian.hpp
sed -i.bak -e "s/\bntohll\b/_byteswap_uint64/; s/\bhtonll\b/_byteswap_uint64/" src/WebSocket.c
#mkdir -p build &&
# wl-showstatus configure &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPAHO_BUILD_STATIC:BOOL=OFF -DPAHO_WITH_SSL:BOOL=ON -DPAHO_BUILD_DOCUMENTATION:BOOL=OFF -DPAHO_BUILD_SAMPLES:BOOL=OFF -DPAHO_ENABLE_TESTING:BOOL=OFF -DCMAKE_C_STANDARD_LIBRARIES:STRING="-Wl,--as-needed -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 -lcrypt32 -lrpcrt4 -lws2_32" -S. -Bbuild &&
# wl-showstatus build-install &&
# ninja -Cbuild install/strip &&
# rm -rf $INSTALLPREFIX/edl-v10 $INSTALLPREFIX/epl-v10 $INSTALLPREFIX/*.md $INSTALLPREFIX/notice.html $INSTALLPREFIX/samples &&
# for F in $INSTALLPREFIX/lib/*-static.a; do
#  cp -u $F $(echo $F|sed -e "s/-static\(\.a\)$/\1/")
# done &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf paho.mqtt.c-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DPAHO_BUILD_STATIC:BOOL=ON -DPAHO_WITH_SSL:BOOL=ON -DPAHO_BUILD_DOCUMENTATION:BOOL=OFF -DPAHO_BUILD_SAMPLES:BOOL=OFF -DPAHO_ENABLE_TESTING:BOOL=OFF -DCMAKE_C_STANDARD_LIBRARIES:STRING="-Wl,--as-needed -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 -lcrypt32 -lrpcrt4 -lws2_32" -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DPAHO_BUILD_STATIC:BOOL=OFF -DPAHO_WITH_SSL:BOOL=ON -DPAHO_BUILD_DOCUMENTATION:BOOL=OFF -DPAHO_BUILD_SAMPLES:BOOL=OFF -DPAHO_ENABLE_TESTING:BOOL=OFF -DCMAKE_C_STANDARD_LIBRARIES:STRING="-Wl,--as-needed -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 -lcrypt32 -lrpcrt4 -lws2_32" -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 for F in $INSTALLPREFIX/lib/*-static.a; do
  cp -u $F $(echo $F|sed -e "s/-static\(\.a\)$/\1/")
 done &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf paho.mqtt.c-$VERSION



