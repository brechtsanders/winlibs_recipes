#export NAME="OpenSSL-based signcode utility"
#export STATUS=
#export URL=http://osslsigncode.sourceforge.net/
##export URL=https://github.com/mtrojnar/osslsigncode
#export BASENAME=osslsigncode
#export DESCRIPTION="Platform-independent tool for Authenticode signing of PE(EXE/SYS/DLL/etc), CAB and MSI files - uses OpenSSL and libcurl. It also supports timestamping (Authenticode and RFC3161)."
#export CATEGORY=security
#export TYPE=application
##export VERSION=1.7.1
##export VERSIONDATE=20161109
##export VERSION=2.0
##export VERSIONDATE=20191006
##export VERSION=2.1
##export VERSIONDATE=20201012
##export VERSION=2.1.0
##export VERSIONDATE=20201014
##export VERSION=2.2.0
##export VERSIONDATE=20210816
#export VERSION=2.3
#export VERSIONDATE=20220307
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,openssl,libcurl
#export OPTIONALDEPENDENCIES=libgsf
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
##export LICENSEFILE=COPYING
#export LICENSEFILE=COPYING.txt
#export LICENSETYPE=GPL
##export DOWNLOADURL="https://sourceforge.net/projects/osslsigncode/files/osslsigncode/"
#export DOWNLOADURL="https://github.com/mtrojnar/osslsigncode/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://github.com/mtrojnar/osslsigncode/releases/download/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/")/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/mtrojnar/osslsigncode/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
#wl-showstatus configure &&
# mkdir -p m4 &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="OpenSSL-based signcode utility"
export STATUS=
export URL=https://github.com/mtrojnar/osslsigncode
export BASENAME=osslsigncode
export DESCRIPTION="Platform-independent tool for Authenticode signing of PE(EXE/SYS/DLL/etc), CAB and MSI files - uses OpenSSL and libcurl. It also supports timestamping (Authenticode and RFC3161)."
export CATEGORY=security
export TYPE=application
#export VERSION=2.4
#export VERSIONDATE=20220803
export VERSION=2.5
export VERSIONDATE=20220813
wl-showstatus --package-version
export DEPENDENCIES=glib2,openssl,libcurl
export OPTIONALDEPENDENCIES=libgsf
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.txt
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/mtrojnar/osslsigncode/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/mtrojnar/osslsigncode/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix OpenSSL issues
#### bug reported: https://github.com/mtrojnar/osslsigncode/issues/171
sed -i.bak -e "s?#include <curl/curl\.h>?&\n#undef PKCS7_SIGNER_INFO\n#define PKCS7_SIGNER_INFO struct pkcs7_signer_info_st\n#undef X509_NAME\n#define X509_NAME struct X509_name_st?" osslsigncode.c
# fix cmake/SetCompilerFlags.cmake (version >= 2.4)
patch -ulbf cmake/SetCompilerFlags.cmake << EOF
@@ -102,2 +102,3 @@
     target_link_options(\${target} PRIVATE \$<\$<NOT:\$<C_COMPILER_ID:AppleClang>>:-fPIE -pie>)
+    if(MSVC)
     target_link_options(\${target} PRIVATE \$<\$<NOT:\$<C_COMPILER_ID:AppleClang>>:-Wl,-z,relro>)
@@ -105,2 +106,3 @@
     target_link_options(\${target} PRIVATE \$<\$<NOT:\$<C_COMPILER_ID:AppleClang>>:-Wl,-z,noexecstack>)
+    endif()
     target_link_options(\${target} PRIVATE -fstack-check)
EOF
## skip bash-completion in cmake/SetBashCompletion.cmake (version >= 2.4)
#patch -ulbf cmake/SetBashCompletion.cmake << EOF
#@@ -1,2 +1,2 @@
#-if(NOT MSVC)
#+if(NOT WIN32)
#   find_package(bash-completion QUIET)
#EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 ## move executable to bin folder (version = 2.4)
 #mkdir -p $INSTALLPREFIX/bin &&
 #mv -f $INSTALLPREFIX/*.exe $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



