#export NAME="gtk-vnc"
#export STATUS=
#export URL=http://live.gnome.org/gtk-vnc
#export BASENAME=gtk-vnc
#export DESCRIPTION="gtk-vnc is a VNC viewer widget for GTK. It is built using coroutines allowing it to be completely asynchronous while remaining single threaded."
#export CATEGORY=
#export TYPE=library
##export VERSION=0.4.2
##export VERSIONDATE=20101106
##export VERSION=0.4.3
##export VERSIONDATE=20110220
##export VERSION=0.4.4
##export VERSIONDATE=20111110
##export VERSION=0.5.0
##export VERSIONDATE=20111222
##export VERSION=0.5.1
##export VERSIONDATE=20120713
##export VERSION=0.5.2
##export VERSIONDATE=20130222
##export VERSION=0.5.3
##export VERSIONDATE=20130918
##export VERSION=0.5.4
##export VERSIONDATE=20150210
##export VERSION=0.6.0
##export VERSIONDATE=20160819
##export VERSION=0.7.0
##export VERSIONDATE=20170209
##export VERSION=0.7.1
##export VERSIONDATE=20170520
##export VERSION=0.7.2
##export VERSIONDATE=20180324
##export VERSION=0.8.0
##export VERSIONDATE=20180802
#export VERSION=0.9.0
#export VERSIONDATE=20180818
#wl-showstatus --package-version
#export DEPENDANCIES=gtk3,cairo,gnutls,zlib,gdk-pixbuf,libgcrypt,gettext,cyrus-sasl
#export OPTIONALDEPENDANCIES=pulseaudio
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING.LIB
#export LICENSETYPE=LGPL
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gtk-vnc/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix problem detecting GNU gettext tools on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# mv configure configure.bak
# sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
#fi
## workaround for not detecting -lsasl2 in configure
#patch -ulbf configure << EOF
#--- configure  2011-02-18 17:29:20 +0100
#+++ configure  2011-06-13 21:12:46 +0200
#@@ -14090,3 +14090,3 @@
# else
#-  ac_cv_lib_sasl2_sasl_client_init=no
#+  ac_cv_lib_sasl2_sasl_client_init=yes
# fi
#EOF
#wl-showstatus configure &&
### fix missing name parameter
##mv tools/Makefile.in tools/Makefile.in.bak
##sed -e "s/--name 'gvnccapture'//" tools/Makefile.in.bak > tools/Makefile.in
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-no-undefined -Wl,-no-undefined" LIBS="-Wl,--as-needed -lkernel32 -ladvapi32 -lws2_32  -Wl,--enable-stdcall-fixup" &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gtk=3.0 --without-python --enable-introspection=no LDFLAGS="-Wl,-no-undefined" LIBS="-Wl,--as-needed -lkernel32 -ladvapi32 -lws2_32 -Wl,--enable-stdcall-fixup" &&
#####No package 'pygtk-2.0' found
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gtk=3.0 --without-sasl --without-python --enable-introspection=no LDFLAGS="-Wl,-no-undefined" LIBS="-Wl,--as-needed -lkernel32 -ladvapi32 -lws2_32 -Wl,--enable-stdcall-fixup" &&
##PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gtk=3.0 --without-sasl --without-python --enable-introspection=no LDFLAGS="-Wl,-no-undefined" LIBS="-Wl,--as-needed -lkernel32 -ladvapi32 -lws2_32 -Wl,--enable-stdcall-fixup" &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gtk=3.0 --without-sasl --without-python --enable-introspection=no LDFLAGS="-Wl,-no-undefined" LIBS="-Wl,--as-needed -lkernel32 -ladvapi32 -lws2_32 -Wl,--enable-stdcall-fixup" &&
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gtk=3.0 --without-sasl --without-python --enable-introspection=no LDFLAGS="-Wl,-no-undefined" LIBS="-Wl,--as-needed -lkernel32 -ladvapi32 -lws2_32 -Wl,--enable-stdcall-fixup" PYTHON=$PYDIR/python.exe &&
#INTLTOOL_PERL="$PERLDIR/bin/perl.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gtk=3.0 --without-sasl --without-python --enable-introspection=no LDFLAGS="-Wl,-no-undefined" LIBS="-Wl,--as-needed -lkernel32 -ladvapi32 -lws2_32 -Wl,--enable-stdcall-fixup" PYTHON=$PYDIR/python.exe LDFLAGS="-fstack-protector" &&
# wl-showstatus build-install &&
# #( make install-strip || make install-strip POD2MAN="$PERLDIR/bin/perl.exe -x $PERLDIR/bin/pod2man.bat" ) &&
# ( PATH=$PYDIR:$PATH make install-strip || PATH=$PYDIR:$PATH make install-strip POD2MAN="$PERLDIR/bin/perl.exe -x $PERLDIR/bin/pod2man.bat" ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="gtk-vnc"
export STATUS=
export URL=http://live.gnome.org/gtk-vnc
export BASENAME=gtk-vnc
export DESCRIPTION="gtk-vnc is a VNC viewer widget for GTK. It is built using coroutines allowing it to be completely asynchronous while remaining single threaded."
export CATEGORY=
export TYPE=library
#export VERSION=1.0.0
#export VERSIONDATE=20190808
#export DEPENDANCIES=gtk3,cairo,gnutls,zlib,gdk-pixbuf,libgcrypt,gettext,cyrus-sasl
#export OPTIONALDEPENDANCIES=pulseaudio
#export BUILDDEPENDANCIES=meson,ninja
#export VERSION=1.2.0
#export VERSIONDATE=20210414
export VERSION=1.3.0
export VERSIONDATE=20211117
#export VERSION=1.3.1
#export VERSIONDATE=20220714
####python.exe: can't open file 'python': [Errno 2] No such file or directory
wl-showstatus --package-version
export DEPENDANCIES=gtk3,cairo,gnutls,zlib,gdk-pixbuf,libgcrypt,gettext,cyrus-sasl,pulseaudio,gobject-introspection
export OPTIONALDEPENDANCIES=pulseaudio
export BUILDDEPENDANCIES=meson,ninja
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/gtk-vnc/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix MSVC issue
mkdir -p winfix
cp -rf $PYDIR/lib/distutils winfix/
patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
@@ -85,3 +85,3 @@
         else:
-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
+            return None

EOF
# fix detection of Python (version >= 1.3.0)
sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" src/meson.build
## fix missing gio-unix
#sed -i.bak -e "s/gio-unix-/gio-/" meson.build
# disable stack protector (version >= 1.2.0)
sed -i.bak -e "s/'-fstack-protector-[^']*',//g" meson.build
sed -i.bak -e "s?^\(#\s*define _FORTIFY_SOURCE\)?//&?" config.h.in
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PATH=$PATH:$PERLDIR/bin PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dwith-coroutine=gthread -Dwith-vala=true -Dc_link_args="-lssp" . build_both &&
 PKG_CONFIG= PATH=$PATH:$PERLDIR/bin PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dwith-coroutine=gthread -Dintrospection=enabled -Dwith-vala=enabled -Dc_link_args="-lssp" . build_both &&
 ## fix issue calling Python (version >= 1.3.1)
 #sed -i.bak -e "s/\(python\.exe\" \)\"python\" //" build_both/build.ninja &&
 wl-showstatus build-install &&
 #PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 PATH=$PYDIR:$PATH PKG_CONFIG= PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



