#export NAME="ayatana-ido"
#export STATUS=
#export URL=https://github.com/AyatanaIndicators/ayatana-ido
#export BASENAME=ayatana-ido
#export DESCRIPTION="Ayatana Indicator Display Objects"
#export CATEGORY=gui
#export TYPE=library
##export VERSION=0.4.4
##export VERSIONDATE=20181008
##export VERSION=0.4.90
##export VERSIONDATE=20191205
##export VERSION=0.5.0
##export VERSIONDATE=20200726
##export DEPENDENCIES=glib2,gtk3,gettext,pango,cairo
##export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=
##export OPTIONALBUILDDEPENDENCIES=
##export VERSION=0.8.0
##export VERSIONDATE=20200815
##export VERSION=0.8.1
##export VERSIONDATE=20201110
#export VERSION=0.8.2
#export VERSIONDATE=20210126
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,gtk3,gettext,pango,cairo,gobject-introspection
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
##export DOWNLOADURL="https://github.com/AyatanaIndicators/ayatana-ido/releases"
#export DOWNLOADURL="https://github.com/AyatanaIndicators/ayatana-ido/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/AyatanaIndicators/ayatana-ido/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/AyatanaIndicators/ayatana-ido/archive/refs/tags/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
### don't abort on warnings
##sed -i.bak -e "s/-Wall\|-Werror//g" configure.ac src/Makefile.am
### fix missing HAVE_INTROSPECTION
##echo 'AM_CONDITIONAL([HAVE_INTROSPECTION], [test "no" = "yes"])' >> configure.ac
###echo 'GOBJECT_INTROSPECTION_CHECK([0.6.7])' >> configure.ac
##wl-showstatus configure &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
## sed -i.bak -e "s/^GOBJECT_INTROSPECTION_CHECK/#&/" configure &&
## ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --disable-introspection &&
## wl-showstatus build-install &&
## ( PATH=$PYDIR:$PATH make install-strip || (
##  touch src/AyatanaIdo3-0.4.typelib &&
##  PATH=$PYDIR:$PATH make -i install-strip &&
##  ls -1 $INSTALLPREFIX/bin/*.dll &> /dev/null
## )) &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
## fix MSVC issue
#mkdir -p winfix
#cp -rf $PYDIR/lib/distutils winfix/
#patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
#@@ -85,3 +85,3 @@
#         else:
#-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
#+            return None
#
#EOF
#wl-showstatus configure &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# PKG_CONFIG=$(which pkg-config.exe) ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection &&
# wl-showstatus build-install &&
# PATH=$PYDIR:$PATH PYTHONPATH=$(pwd)/winfix make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="ayatana-ido"
export STATUS=
export URL=https://github.com/AyatanaIndicators/ayatana-ido
export BASENAME=ayatana-ido
export DESCRIPTION="Ayatana Indicator Display Objects"
export CATEGORY=gui
export TYPE=library
#export VERSION=0.4.4
#export VERSIONDATE=20181008
#export VERSION=0.4.90
#export VERSIONDATE=20191205
#export VERSION=0.5.0
#export VERSIONDATE=20200726
#export DEPENDENCIES=glib2,gtk3,gettext,pango,cairo
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=0.8.0
#export VERSIONDATE=20200815
#export VERSION=0.8.1
#export VERSIONDATE=20201110
#export VERSION=0.8.2
#export VERSIONDATE=20210126
#export VERSION=0.9.0
#export VERSIONDATE=20220122
#export VERSION=0.9.1
#export VERSIONDATE=20220218
#export VERSION=0.9.2
#export VERSIONDATE=20220604
#export VERSION=0.9.3
#export VERSIONDATE=20220227
#export VERSION=0.10.0
#export VERSIONDATE=20230609
export VERSION=0.10.1
export VERSIONDATE=20230825
#export VERSION=0.10.2
#export VERSIONDATE=20240408
wl-showstatus --package-version
export DEPENDENCIES=glib2,gtk3,gettext,gdk-pixbuf,pango,cairo,gobject-introspection
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/AyatanaIndicators/ayatana-ido/releases"
export DOWNLOADURL="https://github.com/AyatanaIndicators/ayatana-ido/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/AyatanaIndicators/ayatana-ido/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/AyatanaIndicators/ayatana-ido/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/CMakeLists.txt (version >= 0.9.0)
patch -ulbf src/CMakeLists.txt << EOF
@@ -105,2 +105,3 @@
 target_compile_definitions("ayatana-ido3-0.4" PUBLIC G_LOG_DOMAIN="IDO")
+if(NOT WIN32)
 install(FILES "\${CMAKE_CURRENT_BINARY_DIR}/libayatana-ido3-0.4.so" DESTINATION "\${CMAKE_INSTALL_FULL_LIBDIR}")
@@ -108,2 +109,3 @@
 install(FILES "\${CMAKE_CURRENT_BINARY_DIR}/libayatana-ido3-0.4.so.0.0.0" DESTINATION "\${CMAKE_INSTALL_FULL_LIBDIR}")
+endif()

EOF
# also allow building static library in src/CMakeLists.txt (version >= 0.9.0)
sed -i.bak -e "s/\(add_library(.* \)SHARED /\1/" src/CMakeLists.txt
mkdir -p build_static build_shared &&
 #wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 # fix execution of Python scripts
 sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(cygpath -m $PYDIR/python.exe) \3\4\5?" build_*/build.ninja &&
 #wl-showstatus build-install &&
 ##PKG_CONFIG= ninja -Cbuild_static install/strip &&
 #ninja -Cbuild_static install/strip &&
 #cp -f build_static/src/*.a $INSTALLPREFIX/lib/ &&
 wl-showstatus build-install &&
 #PKG_CONFIG= ninja -Cbuild_shared install/strip &&
 ninja -Cbuild_shared install/strip &&
 strip build_shared/src/*.dll &&
 mkdir -p $INSTALLPREFIX/bin &&
 cp -f build_shared/src/*.dll $INSTALLPREFIX/bin/ &&
 cp -f build_shared/src/*.a $INSTALLPREFIX/lib/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: also install static library



