export NAME="GNU Binutils (targeting Windows on ARM)"
export STATUS=
export URL=http://www.gnu.org/software/binutils/
export BASENAME=arm32win-binutils
export DESCRIPTION="The GNU Binutils are a collection of binary tools. This build targets the Windows on ARM platform."
export CATEGORY=development
export TYPE=application
#export VERSION=2.35.1
#export VERSIONDATE=20201123
#export VERSION=2.35.2
#export VERSIONDATE=20210130
#export VERSION=2.36
#export VERSIONDATE=20210124
#export VERSION=2.36.1
#export VERSIONDATE=20210206
#export VERSION=2.37
#export VERSIONDATE=20210719
#export VERSION=2.38
#export VERSIONDATE=20220209
#export VERSION=2.39
#export VERSIONDATE=20220805
#export VERSION=2.40
#export VERSIONDATE=20230115
#export VERSION=2.41
#export VERSIONDATE=20230731
#export VERSION=2.42
#export VERSIONDATE=20240130
#export VERSION=2.43
#export VERSIONDATE=20240805
#export VERSION=2.43.1
#export VERSIONDATE=20240818
export VERSION=2.44
export VERSIONDATE=20250202
wl-showstatus --package-version
export DEPENDENCIES=zlib,mpc,mpfr,gmp,cloog,isl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=texinfo
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE="GPL/LGPL"
#export DOWNLOADURL="http://ftp.gnu.org/gnu/binutils/ binutils-"
export DOWNLOADURL="https://ftp.gnu.org/gnu/binutils/ binutils-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.gnu.org/gnu/binutils/binutils-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://ftp.gnu.org/gnu/binutils/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
#wl-download -v -d $TARBALLDIR/binutils $DOWNLOADSOURCEURL
wl-wait4deps
mkdir -p $BASENAME-$VERSION
#tar xz --force-local -f $TARBALLDIR/binutils/binutils-$VERSION.tar.gz -C$BASENAME-$VERSION
tar xj --force-local -f $TARBALLDIR/binutils/binutils-$VERSION.tar.bz2 -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/binutils-$VERSION
## fix aarch64 support in bfd/config.bfd (version >= 2.37)
#patch -ulbf bfd/config.bfd << EOF
#@@ -368,2 +368,8 @@
#     ;;
#+  arm64-*-pe* | aarch64-*-pe*)
#+    targ_defvec=aarch64_pe_le_vec
#+    targ_selvecs="aarch64_pe_le_vec aarch64_pe_be_vec aarch64_pei_le_vec aarch64_pei_be_vec"
#+    targ_underscore=no
#+    want64=true
#+    ;;
#   arm-*-pe*)
#EOF
#sed -e "s/arm\([_\-]\)/aarch64\1/" bfd/pe-arm.c > bfd/pe-arm64.c
#sed -e "s/arm\([_\-]\)/aarch64\1/" bfd/pei-arm.c > bfd/pei-arm64.c
#patch -ulbf bfd/targets.c << EOF
#@@ -701,2 +701,4 @@
# extern const bfd_target arm_pe_le_vec;
#+extern const bfd_target aarch64_pe_be_vec;
#+extern const bfd_target aarch64_pe_le_vec;
# extern const bfd_target arm_pe_wince_be_vec;
#@@ -705,2 +707,4 @@
# extern const bfd_target arm_pei_le_vec;
#+extern const bfd_target aarch64_pei_be_vec;
#+extern const bfd_target aarch64_pei_le_vec;
# extern const bfd_target arm_pei_wince_be_vec;
#EOF
## fix aarch64 support in bfd/configure (version >= 2.37)
#patch -ulbf bfd/configure << EOF
#@@ -13280,2 +13280,4 @@
#     arm_pe_le_vec)              tb="\$tb pe-arm.lo peigen.lo \$coff" ;;
#+    aarch64_pe_le_vec)          tb="\$tb pe-arm64.lo peigen.lo \$coff" ;;
#+    aarch64_pe_be_vec)          tb="\$tb pe-arm64.lo peigen.lo \$coff" ;;
#     arm_pe_wince_be_vec)        tb="\$tb pe-arm-wince.lo pe-arm.lo peigen.lo \$coff" ;;
#@@ -13284,2 +13286,4 @@
#     arm_pei_le_vec)             tb="\$tb pei-arm.lo peigen.lo \$coff" ;;
#+    aarch64_pei_be_vec)         tb="\$tb pei-arm64.lo peigen.lo \$coff" ;;
#+    aarch64_pei_le_vec)         tb="\$tb pei-arm64.lo peigen.lo \$coff" ;;
#     arm_pei_wince_be_vec)       tb="\$tb pei-arm-wince.lo pei-arm.lo peigen.lo \$coff" ;;
#EOF
# fix error when --with-pkgversion value contains a comma
sed -i.bak -e 's/\(-e "s\),\([^,]*\),\([^,]*\),/\1?\2?\3?/' bfd/Makefile.in
mkdir -p build_winarm32 &&
 wl-showstatus configure &&
 cd build_winarm32 &&
 #../configure --prefix=$INSTALLPREFIX/share/arm32win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=arm-w64-pe --with-arch=armv7 --with-fpu=vfp --with-float=hard --program-prefix=arm- --with-pkgversion="Binutils targeting Windows on ARM, built by Brecht Sanders" --enable-shared --enable-host-shared --disable-bootstrap --enable-serial-configure --enable-{libada,libssp,gold,plugins} --disable-lto --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath} --with-system-zlib --disable-nls --enable-install-libiberty --enable-install-libbfd --without-mmap &&
 #../configure --prefix=$INSTALLPREFIX/share/arm32win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=arm-w64-pe --program-prefix=arm- --with-pkgversion="Binutils targeting Windows on ARM, built by Brecht Sanders" --enable-shared --enable-host-shared --disable-bootstrap --enable-serial-configure --enable-{libada,libssp,gold,plugins} --disable-lto --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath} --with-system-zlib --disable-nls --enable-install-libiberty --enable-install-libbfd --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 #../configure --prefix=$INSTALLPREFIX/share/arm32win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=arm-w64-pe --disable-lib32 --disable-lib64 --enable-libarm32 --program-prefix=arm- --with-pkgversion="Binutils targeting Windows on ARM, built by Brecht Sanders" --enable-shared --enable-host-shared --disable-bootstrap --enable-serial-configure --enable-{libada,libssp,gold,plugins} --disable-lto --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath} --with-system-zlib --disable-nls --enable-install-libiberty --enable-install-libbfd --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 ../configure --prefix=$INSTALLPREFIX/share/arm32win-binutils --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=arm-w64-pe --program-prefix=armv7-w64-mingw32- --with-pkgversion="Binutils for MinGW-W64 armv7, built by Brecht Sanders" --enable-shared --enable-host-shared --enable-serial-configure --disable-bootstrap --enable-{libada,libssp,gold,plugins,vtable-verify,64-bit-bfd,install-libbfd} --with-{mpc,mpfr,gmp,isl}=$MINGWPREFIX --disable-{multilib,rpath,lto} --enable-install-libiberty --with-system-zlib --with-mmap CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" AR=ar &&
 cd .. &&
 wl-showstatus build &&
 #make -Cbuild_winarm32 &&
 # fix missing uint (version >= 2.37)
 ( make -Cbuild_winarm32 || ( echo "#define uint unsigned int" >> build_winarm32/libiberty/config.h && make -Cbuild_winarm32 )) &&
 wl-showstatus build-install &&
 make -Cbuild_winarm32 install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && rm -rf $BASENAME-$VERSION



