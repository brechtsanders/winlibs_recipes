export NAME="MauiMan"
export STATUS=
export URL=https://invent.kde.org/maui/mauiman
export BASENAME=mauiman
export DESCRIPTION="Maui Manager Library. Server and public library API."
export CATEGORY=
export TYPE=library
#export VERSION=1.0.0
#export VERSIONDATE=20220830
export VERSION=1.0.1
export VERSIONDATE=20221126
wl-showstatus --package-version
export DEPENDANCIES=qt
#export DEPENDANCIES=qt6
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja,extra-cmake-modules
export LICENSEFILE=
export LICENSETYPE=
export DOWNLOADURL="https://download.kde.org/stable/maui/mauiman/"
#export DOWNLOADURL="https://invent.kde.org/maui/mauiman/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://download.kde.org/stable/maui/mauiman/$VERSION/$BASENAME-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://invent.kde.org/maui/mauiman/-/archive/v$VERSION/$BASENAME-v$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-v$VERSION.tar.bz2
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 #wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_WITH_QT6:BOOL=OFF -DKDE_L10N_BRANCH:STRING=stable -DKDE_SKIP_UNINSTALL_TARGET:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/qt/include/QtDBus -DQT_STATIC" -S. -Bbuild_static &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -L$(cygpath -w $MINGWPREFIX/qt/lib_static|sed -e 's/\\/&&/g') -L$(cygpath -w $MINGWPREFIX/qt/lib|sed -e 's/\\/&&/g') -lQt5DBus -lQt5Xml -lQt5Core -lzstd -lole32 -luuid -lnetapi32 -luserenv/" build_static/build.ninja &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_WITH_QT6:BOOL=OFF -DKDE_L10N_BRANCH:STRING=stable -DKDE_SKIP_UNINSTALL_TARGET:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/qt/include/QtDBus" -S. -Bbuild_shared &&
 # fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -L$(cygpath -w $MINGWPREFIX/qt/lib|sed -e 's/\\/&&/g') -lQt5DBus/" build_shared/build.ninja &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: also build shared library



