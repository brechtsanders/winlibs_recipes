#export NAME="libdeflate"
#export STATUS=
#export URL=https://github.com/ebiggers/libdeflate
#export BASENAME=libdeflate
#export DESCRIPTION="Heavily optimized library for DEFLATE/zlib/gzip compression and decompression"
#export CATEGORY=compression
#export TYPE=library
##export VERSION=1.7
##export VERSIONDATE=20201220
##export VERSION=1.8
##export VERSIONDATE=20210716
##export VERSION=1.9
##export VERSIONDATE=20220112
##export VERSION=1.10
##export VERSIONDATE=20220207
##export VERSION=1.11
##export VERSIONDATE=20220524
##export VERSION=1.12
##export VERSIONDATE=20220613
##export VERSION=1.13
##export VERSIONDATE=20220805
#export VERSION=1.14
#export VERSIONDATE=20220911
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=MIT
#export DOWNLOADURL="https://github.com/ebiggers/libdeflate/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/ebiggers/libdeflate/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix library names
#sed -e "s/static\.lib/.a/g; s/libdeflate\.lib/libdeflate.dll.a/" Makefile > Makefile.mingw
##sed -i.bak -e "s/-O2/-O0/" Makefile.mingw
## avoid -fPIC (useless on Windows and not supported by clang) in Makefile.mingw
#sed -i.bak -e "s/-fPIC//" Makefile.mingw
#wl-showstatus build-install &&
# make -fMakefile.mingw install CC=${CC:-gcc} AR=${AR:-ar} USE_SHARED_LIB=1 PREFIX=$INSTALLPREFIX &&
# cp -u libdeflate.dll.a $INSTALLPREFIX/lib/ &&
# mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# strip $INSTALLPREFIX/bin/*.{dll,exe} &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="libdeflate"
export STATUS=
export URL=https://github.com/ebiggers/libdeflate
export BASENAME=libdeflate
export DESCRIPTION="Heavily optimized library for DEFLATE/zlib/gzip compression and decompression"
export CATEGORY=compression
export TYPE=library
#export VERSION=1.15
#export VERSIONDATE=20221205
#export VERSION=1.16
#export VERSIONDATE=20230114
#export VERSION=1.17
#export VERSIONDATE=20230115
#export VERSION=1.18
#export VERSIONDATE=20230324
#export VERSION=1.19
#export VERSIONDATE=20230917
export VERSION=1.20
export VERSIONDATE=20240323
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/ebiggers/libdeflate/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/ebiggers/libdeflate/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/ebiggers/libdeflate/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix programs/CMakeLists.txt (version >= 1.15)
#### Bug reported: https://github.com/ebiggers/libdeflate/pull/273
#patch -ulbf programs/CMakeLists.txt << EOF
#@@ -49,4 +49,4 @@
#         install(CODE "message(\\"-- Installing: \\\$ENV{DESTDIR}\${GUNZIP}\\")")
#-        install(CODE "file(CREATE_LINK \\\$ENV{DESTDIR}\${GZIP}
#-                      \\\$ENV{DESTDIR}\${GUNZIP})" COPY_ON_ERROR)
#+        install(CODE "file(CREATE_LINK \\\$ENV{DESTDIR}\${GZIP}\${CMAKE_EXECUTABLE_SUFFIX}
#+                      \\\$ENV{DESTDIR}\${GUNZIP}\${CMAKE_EXECUTABLE_SUFFIX})" COPY_ON_ERROR)
#     else()
#EOF
## fix programs/CMakeLists.txt (version >= 1.15 <= 1.16)
#patch -ulbf programs/CMakeLists.txt << EOF
#@@ -46,4 +46,4 @@
#         # Fall back to a copy if hard links are unsupported.
#-        set(GZIP \${CMAKE_INSTALL_FULL_BINDIR}/libdeflate-gzip)
#-        set(GUNZIP \${CMAKE_INSTALL_FULL_BINDIR}/libdeflate-gunzip)
#+        set(GZIP \${CMAKE_INSTALL_FULL_BINDIR}/libdeflate-gzip\${CMAKE_EXECUTABLE_SUFFIX})
#+        set(GUNZIP \${CMAKE_INSTALL_FULL_BINDIR}/libdeflate-gunzip\${CMAKE_EXECUTABLE_SUFFIX})
#         install(CODE "message(\\"-- Installing: \\\$ENV{DESTDIR}\${GUNZIP}\\")")
#EOF
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DLIBDEFLATE_BUILD_STATIC_LIB:BOOL=ON -DLIBDEFLATE_BUILD_SHARED_LIB:BOOL=ON -DLIBDEFLATE_USE_SHARED_LIB:BOOL=ON -DLIBDEFLATE_BUILD_TESTS:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



