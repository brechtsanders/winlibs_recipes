export NAME="minizip"
export STATUS=
#export URL=http://www.gaia-gis.it/gaia-sins/mingw_how_to.html#minizip
export URL=http://www.winimage.com/zLibDll/minizip.html
#export URL=https://github.com/nmoinvaz/minizip
export BASENAME=minizip
export DESCRIPTION="minizip is an innovative library supporting direct creation of compressed ZipFile archives."
export CATEGORY=compression
export TYPE=library
#export VERSION=master
#export VERSIONDATE=20150202
#export VERSION=1.1
#export VERSIONDATE=20170327
#export VERSION=1.2.8
#export VERSIONDATE=20180310
export VERSION=1.2.11
export VERSIONDATE=20200425
wl-showstatus --package-version
export DEPENDENCIES=zlib
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
#export DOWNLOADURL="http://www.winimage.com/zLibDll/minizip.html"
#export DOWNLOADURL="https://github.com/nmoinvaz/minizip/releases"
export DOWNLOADURL="http://www.gaia-gis.it/gaia-sins/dataseltzer-sources/"
#export DOWNLOADURL="https://github.com/nmoinvaz/minizip/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/nmoinvaz/minizip/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://www.gaia-gis.it/gaia-sins/dataseltzer-sources/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# avoid using WinRT stuff in (CreateFile2) in iowin32.c
patch -ulbf iowin32.c << EOF
--- iowin32.c  2013-04-29 00:57:12 +0200
+++ iowin32.c  2014-08-09 23:11:20 +0200
@@ -28,3 +28,3 @@

-#if defined(WINAPI_FAMILY_PARTITION) && (!(defined(IOWIN32_USING_WINRT_API)))
+#if defined(WINAPI_FAMILY_PARTITION) && (!(defined(IOWIN32_USING_WINRT_API))) && !defined(__MINGW32__)
 #if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
EOF
wl-showstatus configure &&
 autoreconf -f -i -I $MINGWPREFIX/share/aclocal &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 # fix detection of shared libraries
 sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 sed -i -e "s?-L[./]* ??" $INSTALLPREFIX/lib/libminizip.la &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DUSE_AES:BOOL=ON -DBUILD_TEST:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



