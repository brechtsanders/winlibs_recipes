#export NAME="KUserFeedback"
#export STATUS=
#export URL=https://api.kde.org/frameworks/kuserfeedback/html/index.html
#export BASENAME=libkf5userfeedback
#export DESCRIPTION="User feedback framework (KDE Frameworks 5 (KDF5) Tier 1 framework)"
#export CATEGORY=framework
#export TYPE=library
##export VERSION=master
##export VERSIONDATE=20191104
##export VERSION=1.0.0
##export VERSIONDATE=20200418
##export VERSION=1.1.0
##export VERSIONDATE=20220204
#export VERSION=1.2.0
#export VERSIONDATE=20220205
#wl-showstatus --package-version
#export DEPENDENCIES=qt,libkf5i18n
#export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=cmake,extra-cmake-modules
##export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja,extra-cmake-modules
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING.LIB
#export LICENSETYPE=MIT
##export DOWNLOADURL="https://cgit.kde.org/kuserfeedback.git/refs/ ?h=v"
##export DOWNLOADURL="https://kde.org/announcements/ kde-frameworks- .php"
##export DOWNLOADURL="https://download.kde.org/stable/frameworks/ kuserfeedback-"
##export DOWNLOADURL="https://github.com/KDE/kuserfeedback/releases"
#export DOWNLOADURL="https://github.com/KDE/kuserfeedback/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://download.kde.org/stable/frameworks/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/kuserfeedback-$VERSION.tar.xz
##export DOWNLOADSOURCEURL=https://github.com/KDE/kuserfeedback/archive/$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://github.com/KDE/kuserfeedback/archive/v$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/KDE/kuserfeedback/archive/refs/tags/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
##tar xJ --force-local -f $TARBALLDIR/$BASENAME/kuserfeedback-$VERSION.tar.xz
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
#cd kuserfeedback-$VERSION
##mkdir -p build_static build_shared &&
## wl-showstatus configure &&
## PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
## wl-showstatus configure &&
## PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
## wl-showstatus build-install &&
## make -Cbuild_static install/strip &&
## wl-showstatus build-install &&
## make -Cbuild_shared install/strip &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf kuserfeedback-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# PATH=$PATH:$MINGWPREFIX/qt/bin ninja -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf kuserfeedback-$VERSION



export NAME="KUserFeedback"
export STATUS=
export URL=https://api.kde.org/frameworks/kuserfeedback/html/index.html
export BASENAME=libkf5userfeedback
export DESCRIPTION="User feedback framework (KDE Frameworks 5 (KDF5) Tier 1 framework)"
export CATEGORY=framework
export TYPE=library
export VERSION=1.3.0
export VERSIONDATE=20231103
wl-showstatus --package-version
export DEPENDENCIES=qt6,libkf5i18n
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja,extra-cmake-modules
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/KDE/kuserfeedback/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/KDE/kuserfeedback/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd kuserfeedback-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_WITH_QT6:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_WITH_QT6:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf kuserfeedback-$VERSION



