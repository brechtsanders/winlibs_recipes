#export NAME="libming"
#export STATUS=
#export URL=http://www.libming.org/
#export BASENAME=libming
#export DESCRIPTION="Ming is a library for generating Macromedia Flash files (.swf), written in C, and includes useful utilities for working with .swf files."
#export CATEGORY=graphics
#export TYPE=library
##export VERSION=0.3.0
##export VERSION=0.4.2
##export VERSION=0.4.3
##export VERSIONDATE=20100208
##export VERSION=0.4.4
##export VERSIONDATE=20111214
#export VERSION=0.4.5
#export VERSIONDATE=20130609
#wl-showstatus --package-version
#export DEPENDENCIES=freetype2,zlib,giflib,libpng
#export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=pexports
##export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://sourceforge.net/projects/ming/files/ ming-"
##export DOWNLOADURL="http://sourceforge.net/projects/ming/files/Releases/ ming-"
#export DOWNLOADURL="https://github.com/libming/libming/tags ming-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#wl-wait4deps
### (version 0.3.0)
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/ming/ming-$VERSION.tar.gz
##wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##tar xz --force-local -f $TARBALLDIR/$BASENAME/ming-$VERSION.tar.gz
##cd ming-$VERSION
##wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM
##mv src/Makefile src/Makefile.bak
##sed -e "s?\(\$(EXTRA_LIBS)\) \(blocks/\*\.o\)?\2 \1?" src/Makefile.bak > src/Makefile
##make -C src
##mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/bin $INSTALLPREFIX/lib
##cp src/ming.h src/ming_config.h mingpp.h $INSTALLPREFIX/include/
##cp libming.so.$VERSION $INSTALLPREFIX/bin/libming.dll
##pexports $INSTALLPREFIX/bin/libming.dll | sed -e "s/^\(LIBRARY *\).*/\1libming.dll/" > libming.def
##$RUNPLATFORM-dlltool -C -D $INSTALLPREFIX/bin/libming.dll -d libming.def -l $INSTALLPREFIX/lib/libming.dll.a
## (version >= 0.4.2)
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/ming/ming-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#tar xj --force-local -f $TARBALLDIR/$BASENAME/ming-$VERSION.tar.bz2
#cd ming-$VERSION
## fix missing file (version >= 0.4.5)
#mkdir -p winfix/sys
#echo "#include <winsock2.h>" > winfix/sys/socket.h
## fix missing/redefined GifErrorString in src/libming.h (version >= 0.4.5)
##mv src/libming.h src/libming.h.bak
##sed -e "s/#if GIFLIB_GIFERRORSTRING/#if 0/" src/libming.h.bak > src/libming.h
##patch -ulbf src/libming.h << EOF
##--- src/libming.h  2013-06-08 16:08:52 +0200
##+++ src/libming.h  2013-06-09 10:22:06 +0200
##@@ -48,2 +48,5 @@
##
##+#ifdef __MINGW32__
##+#include <windows.h>
##+#else
## typedef unsigned char BOOL;
##@@ -57,2 +60,3 @@
## #endif
##+#endif
##
##@@ -78,3 +82,4 @@
##
##-#if GIFLIB_GIFERRORSTRING
##+#include <gif_lib.h>
##+#if 0
## static void
##EOF
#patch -ulbf src/libming.h << EOF
#--- src/libming.h  2013-06-08 16:08:52 +0200
#+++ src/libming.h  2013-06-09 10:22:06 +0200
#@@ -48,2 +48,5 @@
#
#+#ifdef __MINGW32__
#+#include <windows.h>
#+#else
# typedef unsigned char BOOL;
#@@ -57,2 +60,3 @@
# #endif
#+#endif
#
#@@ -79,7 +83,3 @@
# #if GIFLIB_GIFERRORSTRING
#-static void
#-PrintGifError(void)
#-{
#-       fprintf(stderr, "\nGIF-LIB error: %s.\n", GifErrorString());
#-}
#+#define PrintGifError(void) fprintf(stderr, "\nGIF-LIB error: %s.\n", GifErrorString())
# #endif
#
#EOF
## fix src/blocks/block.c (version >= 0.4.5)
#patch -ulbf src/blocks/block.c << EOF
#--- src/blocks/block.c  2010-10-10 09:19:24 +0200
#+++ src/blocks/block.c  2013-06-09 10:25:10 +0200
#@@ -36,3 +36,3 @@
#
#-byte
#+BOOL
# SWFBlock_isDefined(SWFBlock block)
#EOF
## fix src/blocks/ttffont.c (version >= 0.4.5)
#####src/blocks/ttffont.c:102:34: error: expected ';', ',' or ')' before numeric constant
#mv src/blocks/ttffont.c src/blocks/ttffont.c.bak
#sed -e "s/ctl\([0-9]\)/ctl_\1/g" src/blocks/ttffont.c.bak > src/blocks/ttffont.c
## fix missing DGifOpen/DGifCloseFile parameter in src/blocks/gifdbl.c (version >= 0.4.5)
#if grep -q "DGifCloseFile(.*ErrorCode)" $MINGWPREFIX/include/gif_lib.h; then
# mv src/blocks/gifdbl.c src/blocks/gifdbl.c.bak &&
# sed -e "s/\(DGifOpen\|DGifOpenFileName\|DGifCloseFile\)\(([^)]*([^)]*)[^)]*\|[^)]*\))/\1\2, NULL)/g" src/blocks/gifdbl.c.bak > src/blocks/gifdbl.c
#fi
## fix missing DGifOpen/DGifCloseFile parameter in util/gif2mask.c (version >= 0.4.5)
#if grep -q "DGifCloseFile(.*ErrorCode)" $MINGWPREFIX/include/gif_lib.h; then
# mv util/gif2mask.c util/gif2mask.c.bak &&
# sed -e "s/\(DGifOpen\|DGifOpenFileName\|DGifCloseFile\)\(([^)]*\))/\1\2, NULL)/g; s/\(PrintGifError(\))/\1NULL)/g" util/gif2mask.c.bak > util/gif2mask.c
#fi
## fix missing GifErrorString parameter in src/libming.h (version >= 0.4.5)
#if grep -q "DGifCloseFile(.*ErrorCode)" $MINGWPREFIX/include/gif_lib.h; then
# mv src/libming.h src/libming.h.bak &&
# sed -e "s/\(GifErrorString(\))/\1GIF_ERROR)/g" src/libming.h.bak > src/libming.h
#fi
## fix missing DGifOpen/DGifCloseFile parameter in util/gif2dbl.c (version >= 0.4.5)
#if grep -q "DGifCloseFile(.*ErrorCode)" $MINGWPREFIX/include/gif_lib.h; then
# mv util/gif2dbl.c util/gif2dbl.c.bak &&
# sed -e "s/\(DGifOpen\|DGifOpenFileName\|DGifCloseFile\)\(([^)]*([^)]*)[^)]*\|[^)]*\))/\1\2, NULL)/g" util/gif2dbl.c.bak > util/gif2dbl.c
#fi
## support ARM64 in config.sub
#sed -i.bak -e "s/| x86_64-\* /&| aarch64-\* /" config/config.sub
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-gnu-ld LDFLAGS="-Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-gnu-ld CFLAGS="-I`pwd`/winfix -I$MINGWPREFIX/include/freetype2" LDFLAGS="-Wl,-no-undefined" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --with-gnu-ld CFLAGS="-I`pwd`/winfix -I$MINGWPREFIX/include/freetype2 -I$MINGWPREFIX/include/freetype2/freetype" LDFLAGS="-Wl,-no-undefined" &&
# wl-showstatus build-install &&
# ( make install-strip || make install-strip LIBS="-lpng.dll" ) && 
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ming-$VERSION



export NAME="libming"
export STATUS=
export URL=http://www.libming.org/
export BASENAME=libming
export DESCRIPTION="Ming is a library for generating Macromedia Flash files (.swf), written in C, and includes useful utilities for working with .swf files."
export CATEGORY=graphics
export TYPE=library
export VERSION=0.4.8
export VERSIONDATE=20250504
wl-showstatus --package-version
export DEPENDENCIES=freetype2,zlib,giflib,libpng
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/libming/libming/tags ming-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/libming/libming/archive/refs/tags/ming-$(echo $VERSION|tr . _).tar.gz
wl-wait4deps
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
tar xz --force-local -f $TARBALLDIR/$BASENAME/ming-$(echo $VERSION|tr . _).tar.gz
cd libming-ming-$(echo $VERSION|tr . _)
# fix missing file (version >= 0.4.5)
mkdir -p winfix/sys
echo "#include <winsock2.h>" > winfix/sys/socket.h
# fix src/libming.h (version >= 0.4.8)
patch -ulbf src/libming.h << EOF
@@ -47,3 +47,4 @@

-typedef unsigned char BOOL;
+#undef BOOL
+#define BOOL unsigned char

EOF
# fix undefined MAX in util/parser.c (version >= 0.4.8)
sed -i.bak -e "1i #include<minmax.h>\n#define MAX max" util/parser.c
wl-showstatus preconfigure &&
 mkdir -p m4 &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-cpp CFLAGS="-I$(pwd)/winfix" LDFLAGS="-Wl,--allow-multiple-definition" &&
 wl-showstatus build-install &&
 make install-strip && 
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ming-$VERSION



