export NAME="ruis-render-opengles"
export STATUS=
export URL=https://github.com/cppfw/ruis-render-opengles
export BASENAME=ruis-render-opengles
export DESCRIPTION="OpenGL ES 2 renderer for ruis"
export CATEGORY=gui
export TYPE=library
#export VERSION=0.1.52
#export VERSIONDATE=20240308
#export VERSION=0.1.54
#export VERSIONDATE=20240416
#export VERSION=0.1.55
#export VERSIONDATE=20240420
#export VERSION=0.1.57
#export VERSIONDATE=20240422
#export VERSION=0.1.58
#export VERSIONDATE=20240424
#export VERSION=0.1.59
#export VERSIONDATE=20240505
#export VERSION=0.1.60
#export VERSIONDATE=20240511
#export VERSION=0.1.61
#export VERSIONDATE=20240610
#export VERSION=0.1.62
#export VERSIONDATE=20240613
#export VERSION=0.1.63
#export VERSIONDATE=20240819
#export VERSION=0.1.64
#export VERSIONDATE=20240820
#export VERSION=0.1.65
#export VERSIONDATE=20240910
#export VERSION=0.1.66
#export VERSIONDATE=20250113
#export VERSION=0.1.67
#export VERSIONDATE=20250207
#export VERSION=0.1.68
#export VERSIONDATE=20250315
#export VERSION=0.1.69
#export VERSIONDATE=20250401
#export VERSION=0.1.70
#export VERSIONDATE=20250428
#export VERSION=0.1.72
#export VERSIONDATE=20250516
export VERSION=0.1.73
export VERSIONDATE=20250521
wl-showstatus --package-version
export DEPENDENCIES=ruis,khronos-opengl-registry,libglvnd
#export DEPENDENCIES=ruis,angle
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=prorab,prorab-extra
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/cppfw/ruis-render-opengles/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/cppfw/ruis-render-opengles/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix undefined utki::log() in src/ruis/render/opengles/shader_base.cpp (version >= 0.1.65)
patch -ulbf src/ruis/render/opengles/shader_base.cpp << EOF
@@ -67,2 +67,3 @@
                        assert_opengl_no_error();
+#ifdef DEBUG
                        utki::log([&](auto& o) {
@@ -74,2 +75,3 @@
                        });
+#endif
                }
@@ -97,2 +99,3 @@
                        assert_opengl_no_error();
+#ifdef DEBUG
                        utki::log([&](auto& o) {
@@ -100,2 +103,3 @@
                        });
+#endif
                }
EOF
#echo "#include <GL/gl.h>" >> src/ruis/render/opengles/util.hpp
#echo "#include <GL/glext.h>" >> src/ruis/render/opengles/util.hpp
wl-showstatus build &&
 #make -I$MINGWPREFIX/include install this_lint_cmd= CC=${CC:-gcc} CXX=${CXX:-g++} AR=${AR:-ar} CXXFLAGS="-I$MINGWPREFIX/include/khronos" LDFLAGS="-lopengl32" PREFIX=$INSTALLPREFIX &&
 #make -I$MINGWPREFIX/include install this_lint_cmd= CC=${CC:-gcc} CXX="${CXX:-g++} -I$MINGWPREFIX/include/khronos" AR=${AR:-ar} PREFIX=$INSTALLPREFIX &&
 PKG_CONFIG_PATH=$MINGWPREFIX/share/libglvnd/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} make -I$MINGWPREFIX/include install this_lint_cmd= CC=${CC:-gcc} CXX="${CXX:-g++} -I$MINGWPREFIX/include/khronos -Wno-attributes" AR=${AR:-ar} PREFIX=$INSTALLPREFIX &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



