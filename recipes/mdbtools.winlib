#export NAME="MDB Tools"
#export STATUS=
#export URL=http://mdbtools.sourceforge.net/
#export BASENAME=mdbtools
#export DESCRIPTION="The MDB Tools project is a effort to document the MDB file format used in Microsoft's Access database package, and to provide a set of tools and applications to make that data available on other platforms."
#export CATEGORY=db
#export TYPE=library
#export VERSION=0.6pre1
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING.LIB
#export LICENSETYPE=
##export DOWNLOADURL="http://sourceforge.net/projects/mdbtools/files/"
#export DOWNLOADURL="http://sourceforge.net/projects/mdbtools/files/mdbtools/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/mdbtools/mdbtools-$VERSION.tar.gz
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/mdbtools-$VERSION.tar.gz
#cd mdbtools-$VERSION
## remove non-Windows network includes
#mv src/extras/mdb-dump.c src/extras/mdb-dump.c.bak
#sed -e "s/^\(#include <\(netdb.h\|netinet\/in.h\|arpa\/inet.h\)>\)/\/\/\1/" src/extras/mdb-dump.c.bak > src/extras/mdb-dump.c
## fix static redeclaration of extern in src/libmdb/backend.c
#mv src/libmdb/backend.c src/libmdb/backend.c.bak
#sed -e "s/^static \(GHashTable\)/\1/" src/libmdb/backend.c.bak > src/libmdb/backend.c
### fix invalid use of -rdynamic
##mv src/gmdb2/Makefile.in src/gmdb2/Makefile.in.bak
##sed -e "s/-rdynamic/--export-dynamic/g" src/gmdb2/Makefile.in.bak > src/gmdb2/Makefile.in
##mv src/gmdb2/Makefile.am src/gmdb2/Makefile.am.bak
##sed -e "s/-rdynamic/--export-dynamic/g" src/gmdb2/Makefile.am.bak > src/gmdb2/Makefile.am
## fix for building .DLL files
##mv configure.in configure.in.bak
##echo "AC_LIBTOOL_WIN32_DLL" > configure.in
##cat configure.in.bak >> configure.in
##aclocal -I $MINGWPREFIX/share/aclocal -I $MINGWDIR/share/aclocal &&
## libtoolize --force -i &&
## autoconf --force &&
## automake --force-missing --add-missing
##wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/glib-2.0" LDFLAGS="-L$MINGWPREFIX/lib/glib-2.0" && make install
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/glib-2.0" LDFLAGS="-L$MINGWPREFIX/lib -lglib-2.0.dll" && make install
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/glib-2.0 -I$MINGWPREFIX/lib/glib-2.0/include -Dglib_major_version=GLIB_MAJOR_VERSION -Dglib_minor_version=GLIB_MINOR_VERSION -Dglib_micro_version=GLIB_MICRO_VERSION" && make install
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="`pkg-config --cflags glib-2.0`" LDFLAGS="`pkg-config --libs glib-2.0`-L$MINGWPREFIX/lib -lglib-2.0 -lgmodule-2.0 -lgobject-2.0 -lgthread-2.0 `pwd`/../glib-2.12.9/glib/.libs/gutils.o" && make install
##PKG_CONFIG=`which pkg-config` ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="`pkg-config --cflags glib-2.0`" LDFLAGS="`pkg-config --libs glib-2.0`" && make install
##PKG_CONFIG="$MINGWPREFIX/bin/pkg-config.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="`pkg-config --cflags glib-2.0`" LDFLAGS="`pkg-config --libs glib-2.0`"
##PKG_CONFIG="$MINGWPREFIX/bin/pkg-config.exe" ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static=no CFLAGS="`pkg-config --cflags glib-2.0`" LDFLAGS="-no-undefined `pkg-config --libs glib-2.0`"
#
## fix too many arguments in PKG_CONFIG
#mv configure configure.bak
#sed -e "s/x\$PKG_CONFIG != xno/\"x\$PKG_CONFIG\" != \"xno\"/g" configure.bak > configure
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static=no LDFLAGS="-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --disable-shared &&
# # fix building DLLs
# mv libtool libtool.bak && ln -sf `which libtool` libtool &&
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# make &&
#    echo OK
#
## build libmdb
#make -C src/libmdb &&
#    echo OK
### fix wrong name (.exe instead of .dll)
##mv src/libmdb/.libs/libmdb-0.exe src/libmdb/.libs/libmdb-0.dll
##mv src/libmdb/libmdb.la src/libmdb/libmdb.la.bak
##sed -e "s/dlname='libmdb-0'/dlname='libmdb-0.dll'/" src/libmdb/libmdb.la.bak > src/libmdb/libmdb.la
### build libmdbsql
##mv src/sql/Makefile src/sql/Makefile.bak
##sed -e "s/^\(LDFLAGS.*\)$/\1 -L..\/libmdb -lmdb/" src/sql/Makefile.bak > src/sql/Makefile
#make -C src/sql &&
#    echo OK
### fix wrong name (.exe instead of .dll)
###mv src/sql/.libs/libmdbsql-0.exe src/sql/.libs/libmdbsql-0.dll
##mv src/sql/libmdbsql.la src/sql/libmdbsql.la.bak
##sed -e "s/dlname='libmdbsql-0'/dlname='libmdbsql-0.dll'/" src/sql/libmdbsql.la.bak > src/sql/libmdbsql.la
## install required components only
#make -C src/libmdb install-strip &&
# make -C src/sql install-strip &&
# make -C include install-strip &&
# ## put .dll files in bin directory
# #mkdir $INSTALLPREFIX/bin
# #mv $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/
# ## fix wrong names (.exe instead of .dll)
# #mv $INSTALLPREFIX/lib/libmdb.la $INSTALLPREFIX/lib/libmdb.la.bak
# #sed -e "s/dlname='libmdb-0'/dlname='libmdb-0.dll'/" $INSTALLPREFIX/lib/libmdb.la.bak > $INSTALLPREFIX/lib/libmdb.la
# #rm $INSTALLPREFIX/lib/libmdb.la.bak
# #mv $INSTALLPREFIX/lib/libmdbsql.la $INSTALLPREFIX/lib/libmdbsql.la.bak
# #sed -e "s/dlname='libmdbsql-0'/dlname='libmdbsql-0.dll'/" $INSTALLPREFIX/lib/libmdbsql.la.bak > $INSTALLPREFIX/lib/libmdbsql.la
# #rm $INSTALLPREFIX/lib/libmdbsql.la.bak
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf mdbtools-$VERSION



#export NAME="MDB Tools (from CVS)"
#export STATUS=
#export URL=http://mdbtools.sourceforge.net/
#export BASENAME=mdbtools
#export DESCRIPTION="The MDB Tools project is a effort to document the MDB file format used in Microsoft's Access database package, and to provide a set of tools and applications to make that data available on other platforms."
#export CATEGORY=db
#export TYPE=library
#export VERSION=cvs$(date +'%Y%m%d')
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,readline,gettext
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cvs
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING.LIB
#export LICENSETYPE=
##export DOWNLOADURL="http://sourceforge.net/projects/mdbtools/files/mdbtools/"
#export DOWNLOADURL=""
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#wl-wait4deps
#mkdir -p $BASENAME-$VERSION
##tar xj --force-local -f $TARBALLDIR/$BASENAME/mdbtools-csv.tar.bz2
#cd $BASENAME-$VERSION
#echo "" | cvs -d:pserver:anonymous:@mdbtools.cvs.sourceforge.net:/cvsroot/mdbtools login
#cvs -z3 -d:pserver:anonymous@mdbtools.cvs.sourceforge.net:/cvsroot/mdbtools co mdbtools
#cd mdbtools
## fix invalid -rdynamic parameter
#mv src/gmdb2/Makefile.am src/gmdb2/Makefile.am.bak
#sed -e "s/-rdynamic//" src/gmdb2/Makefile.am.bak > src/gmdb2/Makefile.am
### fix missing files
##mkdir -p src/extras/netinet src/extras/arpa
##touch src/extras/netdb.h src/extras/netinet/in.h src/extras/arpa/inet.h
### fix for building .DLL files
##patch -ulbf configure.in << EOF
##--- configure.in        Mon Mar 31 14:11:36 2008
##+++ configure.in        Mon Mar 31 14:12:25 2008
##@@ -2,2 +2,3 @@
## AC_INIT(mdbtools, 0.6pre1, [mdbtools-dev@lists.sourceforge.net])
##+AC_LIBTOOL_WIN32_DLL
## AC_CONFIG_SRCDIR(src/extras/mdb-dump.c)
##EOF
#wl-showstatus configure &&
##aclocal-1.7
##autoconf
##touch install-sh mkinstalldirs missing depcomp include/config.h.in
##automake-1.7
##NOCONFIGURE=1 ./autogen.sh
##aclocal-1.10
##autoconf
##automake-1.10
##./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-gmdb2 LDFLAGS="-Wl,-no-undefined" &&
##./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-static CFLAGS="`pkg-config --cflags glib-2.0`" LDFLAGS="`pkg-config --libs glib-2.0` -no-undefined" &&
##./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-gmdb2 LDFLAGS="-no-undefined -Wl,-no-undefined" &&
##./autogen.sh --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-gmdb2 LDFLAGS="-no-undefined -Wl,-no-undefined" &&
#( aclocal -I $MINGWPREFIX/share/aclocal -I $MINGWDIR/share/aclocal || aclocal -I $MINGWPREFIX/share/aclocal ) &&
# libtoolize --force -i &&
# autoconf --force &&
# autoheader --force &&
# automake --force-missing --add-missing &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-gmdb2 LDFLAGS="-no-undefined -Wl,-no-undefined" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-gmdb2 LDFLAGS="-Wl,-no-undefined" &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# # remove non-Windows network includes
# mv src/extras/mdb-dump.c src/extras/mdb-dump.c.bak &&
# sed -e "s/^\(#include <\(netdb.h\|netinet\/in.h\|arpa\/inet.h\)>\)/\/\/\1/" src/extras/mdb-dump.c.bak > src/extras/mdb-dump.c &&
# # fix dependancy of libmdbsql on libmdb
# mv src/sql/Makefile src/sql/Makefile.bak &&
# #sed -e "s/^\(LDFLAGS.*\)$/\1 -L..\/libmdb -lmdb/" src/sql/Makefile.bak > src/sql/Makefile &&
# #sed -e "s?^\(LDFLAGS.*\)?\1 ../libmdb/.libs/libmdb.a?" src/sql/Makefile.bak > src/sql/Makefile &&
# #sed -e "s?^\(LDFLAGS.*\)?\1 ../libmdb/.libs/libmdb.dll.a?" src/sql/Makefile.bak > src/sql/Makefile &&
# sed -e "s?^\(LDFLAGS.*\)?\1 -L../libmdb -lmdb?" src/sql/Makefile.bak > src/sql/Makefile &&
# #sed -e 's?^\(LDFLAGS.*\)$?\1 ../libmdb/.libs/libmdb.a?' src/sql/Makefile.bak > src/sql/Makefile &&
# wl-showstatus build-install &&
# make -j1 && make install-strip &&
# #mv libtool libtool.bak &&
# #ln -s $MINGWPREFIX/bin/libtool libtool &&
# #make && make install &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
##cd src/sql
###/bin/sh ../../libtool --mode=install $MINGWDIR/bin/install -c  'libmdbsql.la' '/home/PBUBXS1/inst_mdbtools-cvs20083103/lib/libmdbsql.la'
##gcc -shared  .libs/mdbsql.o .libs/parser.o .libs/lexer.o  -L$MINGWDIR/lib -L/home/PBUBXS1/mdbtools-cvs20083103/src/libmdb -L/home/PBUBXS1/inst_mdbtools-cvs20083103/lib ../libmdb/.libs/libmdb.dll.a -lglib-2.0 -lintl  -o .libs/libmdbsql-1.dll -Wl,--image-base=0x10000000 -Wl,--out-implib,.libs/libmdbsql.dll.a
##cd ../..



#export NAME="mdbtools"
#export STATUS=
#export URL=http://mdbtools.sourceforge.net
#export BASENAME=mdbtools
#export DESCRIPTION="The MDB Tools project is a effort to document the MDB file format used in Microsoft's Access database package, and to provide a set of tools and applications to make that data available on other platforms."
#export CATEGORY=database
#export TYPE=library
#export VERSION=0.7.1
#export VERSIONDATE=20160205
#####configure: error: Could not find txt2man script. Install it or configure with --disable-man if you are not interrested in manuals.
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,readline,gettext
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING.LIB
#export LICENSETYPE=GPL/LGPL
#export DOWNLOADURL="https://github.com/brianb/mdbtools/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/brianb/mdbtools/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix src/extras/mdb-dump.c
#mv src/extras/mdb-dump.c src/extras/mdb-dump.c.bak &&
#sed -e "s/^#include <\(netdb\|netinet\/in\|arpa\/inet\)\.h>/\/\/&/" src/extras/mdb-dump.c.bak > src/extras/mdb-dump.c
## fix invalid use of -rdynamic
#mv src/gmdb2/Makefile.am src/gmdb2/Makefile.am.bak
#sed -e "s/-rdynamic//g" src/gmdb2/Makefile.am.bak > src/gmdb2/Makefile.am
#wl-showstatus configure &&
#( autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal || automake-1.11 -a -f -c ) &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-gmdb2 --disable-man &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####touch src/gmdb2/help/C/gmdb-C.omf.out



export NAME="mdbtools"
export STATUS=
#export URL=http://mdbtools.sourceforge.net
export URL=https://github.com/mdbtools/mdbtools
export BASENAME=mdbtools
export DESCRIPTION="The MDB Tools project is a effort to document the MDB file format used in Microsoft's Access database package, and to provide a set of tools and applications to make that data available on other platforms."
export CATEGORY=database
export TYPE=library
#export VERSION=0.9.0
#export VERSIONDATE=20201218
#export VERSION=0.9.1
#export VERSIONDATE=20210104
#export VERSION=0.9.2
#export VERSIONDATE=20210228
#export VERSION=0.9.3
#export VERSIONDATE=20210501
#export VERSION=0.9.4
#export VERSIONDATE=20210805
#export VERSION=1.0.0
#export VERSIONDATE=20211025
export VERSION=1.0.1
export VERSIONDATE=20241226
wl-showstatus --package-version
#export DEPENDENCIES=glib2,readline,gettext,libiconv
export DEPENDENCIES=glib2,readline,gettext,libiconv,iodbc
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export LICENSEFILE=COPYING.LIB
#export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/brianb/mdbtools/releases"
export DOWNLOADURL="https://github.com/mdbtools/mdbtools/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/mdbtools/mdbtools/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/odbc/odbc.c (version >= 0.9.0)
patch -ulbf src/odbc/odbc.c << EOF
@@ -101,3 +101,3 @@
        else
-               fprintf(stderr, "Unsupported SQLWCHAR width %zd\\n", sizeof(SQLWCHAR));
+               fprintf(stderr, "Unsupported SQLWCHAR width %d\\n", (int)sizeof(SQLWCHAR));

EOF
# fix include/mdbtools.h (version >= 1.0.1)
patch -ulbf include/mdbtools.h << EOF
@@ -70,3 +70,7 @@

+#ifdef __MINGW32__
+typedef _locale_t mdb_locale_t;
+#else
 typedef locale_t mdb_locale_t;
+#endif

EOF
# fix src/odbc/connectparams.c (version >= 1.0.1)
mv src/odbc/connectparams.c src/odbc/connectparams.c.bak
cat > src/odbc/connectparams.c << EOF
#define _GNU_SOURCE
#include <string.h>
char *strcasestr(const char *h, const char *n)
{
  size_t l = strlen(n);
  for (; *h; h++) if (!strncasecmp(h, n, l)) return (char *)h;
  return 0;
}
EOF
cat src/odbc/connectparams.c.bak >> src/odbc/connectparams.c
# fix invalid -no-undefined compiler flag (version >= 0.9.0)
sed -i.bak -e "s/ -no-undefined/ -Wl,-no-undefined/" configure
# don't use -Wall/-Werror compiler flags (version >= 0.9.3)
sed -i.bak2 -e "s/-Wall -Werror//" configure
# fix redefinition of _spawnv in configure (version >= 1.0.1)
patch -ulbf configure << EOF
@@ -19836,4 +19836,2 @@
 case \$host in #(
-  *mingw*) :
-    LDFLAGS="\$LDFLAGS -no-undefined" CFLAGS="\$CFLAGS -D_spawnv=spawnv" ;; #(
   *) :
EOF
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-iodbc=$MINGWPREFIX &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-iodbc=$MINGWPREFIX LDFLAGS="-Wl,--as-needed -lodbccp32" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



