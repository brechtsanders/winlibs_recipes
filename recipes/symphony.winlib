export NAME="SYMPHONY"
export STATUS=
export URL=http://www.coin-or.org/projects/SYMPHONY.xml
#export URL=https://projects.coin-or.org/SYMPHONY
export BASENAME=symphony
export DESCRIPTION="SYMPHONY is an open-source generic MILP solver, callable library, and extensible framework for implementing customized solvers for mixed-integer linear programs (MILPs). SYMPHONY can be built in various sequential and parallel configurations for either distributed or shared memory architectures and can be used \"out of the box\" as a solver for generic mixed-integer linear programs or customized through a wide variety of user callback functions and control parameters. SYMPHONY has a number of advanced capabilities stemming from the research projects discussed above, including the ability to solve multi-objective MILPs, the ability to warm start its solution procedure, and the ability to perform basic sensitivity analyses. SYMPHONY has has been deployed in a variety of application areas, including computational biology, wireless telecommunications, supply chain management, transportation services, and air transportation."
export CATEGORY=math
export TYPE=library
#export VERSION=5.6.13
#export VERSIONDATE=20151214
#export VERSION=5.6.14
#export VERSIONDATE=20160406
#export VERSION=5.6.15
#export VERSIONDATE=20170116
#export VERSION=5.6.16
#export VERSIONDATE=20170117
export VERSION=5.6.17
export VERSIONDATE=20180225
####g++.exe: error: /msys32/libOsiClp.a: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=zlib,libbz2,osi
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE="Eclipse Public License"
export DOWNLOADURL="http://www.coin-or.org/download/source/SYMPHONY/ SYMPHONY-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://www.coin-or.org/download/source/SYMPHONY/SYMPHONY-$VERSION.tgz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/SYMPHONY-$VERSION.tgz
cd SYMPHONY-$VERSION
patch -ulbf SYMPHONY/include/sym_win32_time.h << EOF
--- SYMPHONY/include/sym_win32_time.h  2012-08-10 00:39:21.000000000 +0200
+++ SYMPHONY/include/sym_win32_time.h  2015-12-14 11:22:53.202796100 +0100
@@ -6,3 +6,3 @@

-#ifndef __MINGW64__
+#ifndef __MINGW64_VERSION_MAJOR
 struct timeval {
EOF
# fix redfinition of ERROR in Osi/src/OsiCommonTest/OsiUnitTests.hpp
mv Osi/src/OsiCommonTest/OsiUnitTests.hpp Osi/src/OsiCommonTest/OsiUnitTests.hpp.bak
cat > Osi/src/OsiCommonTest/OsiUnitTests.hpp << EOF
#include <windows.h>
#undef ERROR
EOF
cat Osi/src/OsiCommonTest/OsiUnitTests.hpp.bak >> Osi/src/OsiCommonTest/OsiUnitTests.hpp
# fix redfinition of IN/OUT in Cgl/src/CglZeroHalf/Cgl012cut.cpp
mv Cgl/src/CglZeroHalf/Cgl012cut.cpp Cgl/src/CglZeroHalf/Cgl012cut.cpp.bak
cat > Cgl/src/CglZeroHalf/Cgl012cut.cpp << EOF
#include <windows.h>
#undef IN
#undef OUT
EOF
cat Cgl/src/CglZeroHalf/Cgl012cut.cpp.bak >> Cgl/src/CglZeroHalf/Cgl012cut.cpp
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-dependency-linking &&
 ## fix building DLLs for 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # mv libtool libtool.bak &&
 # sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool
 #fi &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 make install-strip PKG_CONFIG=$(which pkg-config.exe) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf SYMPHONY-$VERSION



