#export NAME="libxml++3"
#export STATUS=
#export URL=http://libxmlplusplus.sourceforge.net/
#export BASENAME=libxmlpp3
#export DESCRIPTION="libxml++ is a C++ wrapper for the libxml XML parser library."
#export CATEGORY=dataprocessing
#export TYPE=library
##export VERSION=3.0.0
##export VERSIONDATE=20160404
#####libxml++/exceptions/exception.cc:115:21: error: 'vsnprintf' is not a member of 'std'
##export VERSION=3.0.1
##export VERSIONDATE=20161113
##export VERSION=3.2.0
##export VERSIONDATE=20200112
#export VERSION=3.2.2
#export VERSIONDATE=20201003
##export VERSION=3.9.1
##export VERSIONDATE=20200112
#####configure: error: required headers not found
##export VERSION=4.9.1
##export VERSIONDATE=20200112
#wl-showstatus --package-version
#export DEPENDENCIES=libxml2,glib2,glibmm,zlib,libsigcplusplus2,gettext,libiconv
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL2
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/libxml++/ libxml++-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/libxml++/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/libxml++-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/libxml++/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/libxml++-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfj $TARBALLDIR/$BASENAME/libxml++-$VERSION.tar.bz2
#tar xfJ $TARBALLDIR/$BASENAME/libxml++-$VERSION.tar.xz
#cd libxml++-$VERSION
## fix invalid std::vsnprintf in libxml++/exceptions/exception.cc (version >= 3.0.0)
#mv libxml++/exceptions/exception.cc libxml++/exceptions/exception.cc.bak &&
#sed -e "s/std::\(vsnprintf\)/\1/g" libxml++/exceptions/exception.cc.bak > libxml++/exceptions/exception.cc
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## autoreconf -f -i -I $MINGWPREFIX/share/aclocal
##fi
### remove dependancy on dynamic libstdc++ (GCC 4)
##mv libtool libtool.bak &&
##sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
## fix detection of glibmm
#sed -i.bak -e "s/glibmm-2.4/$(ls -1 $C/lib/pkgconfig/glibmm-[0-9]*.pc|sed -e "s?^.*/\([^/]*\)\.pc\$?\1?"|sort -V|tail -n1)/" configure
#wl-showstatus configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-no-undefined -Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared CXXFLAGS="-static-libgcc -static-libstdc++" LDFLAGS="-Wl,-no-undefined" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,-no-undefined" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared CXXFLAGS="-std=c++17" LDFLAGS="-Wl,-no-undefined" &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libxml++-$VERSION



export NAME="libxml++ 3"
export STATUS=
export URL=http://libxmlplusplus.sourceforge.net/
export BASENAME=libxmlpp3
export DESCRIPTION="libxml++ is a C++ wrapper for the libxml XML parser library."
export CATEGORY=dataprocessing
export TYPE=library
export VERSION=3.2.2
export VERSIONDATE=20201003
wl-showstatus --package-version
export DEPENDENCIES=libxml2,glib2,glibmm-2.4,zlib,libsigcplusplus2,gettext,libiconv
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL2
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/libxml++/ libxml++-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/GNOME/sources/libxml++/$(echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/')/libxml++-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfJ $TARBALLDIR/$BASENAME/libxml++-$VERSION.tar.xz
cd libxml++-$VERSION
# fix detection of python3
#sed -i.bak -e "s/'python3'/'python'/" meson.build
## fix detection of glibmm
#sed -i.bak2 -e "s/'glibmm-2\.@0@'\.format(glibmm_req_minor_ver)/'$(ls -1 $MINGWPREFIX/lib/pkgconfig/glibmm-*.pc|sort -V|tail -n1|sed -e "s/^.*\/\([^\/]*\)\.pc$/\1/")'/" meson.build
#sed -i.bak -e "s/glibmm-[.0-9]*/$(ls -1 $MINGWPREFIX/lib/pkgconfig/glibmm-*.pc|sort -V|tail -n1|sed -e "s/^.*\/\([^\/]*\)\.pc$/\1/")/" docs/reference/meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib PATH=$PYDIR:$PATH $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dbuild-deprecated-api=true -Dvalidation=true -Dbuild-documentation=false -Dbuild-pdf=false -Dbuild-examples=false -Dbuild-tests=false -Dcpp_args="-std=c++17" . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libxml++-$VERSION



