export NAME="GNU Shishi"
export STATUS=
export URL=http://www.gnu.org/s/shishi/
export BASENAME=shishi
export DESCRIPTION="Shishi, a free implementation of the Kerberos 5 network security system."
export CATEGORY=security
export TYPE=library
#export VERSION=1.0.0
#export VERSIONDATE=20111129
#export VERSION=1.0.1
#export VERSIONDATE=20120313
export VERSION=1.0.2
export VERSIONDATE=20130403
wl-showstatus --package-version
export DEPENDANCIES=libtasn1,gnutls,libidn,libgcrypt
####make[3]: *** No rule to make target 'libshishi-0.def', needed by 'all-am'.  Stop.
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="http://ftp.gnu.org/gnu/shishi/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://ftp.gnu.org/gnu/shishi/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing MAX_ERROR_DESCRIPTION_SIZE in lib/asn1.c
mv lib/asn1.c lib/asn1.c.bak
echo "#define MAX_ERROR_DESCRIPTION_SIZE 128" > lib/asn1.c
cat lib/asn1.c.bak >> lib/asn1.c
# fix invalid cdecl in gl/msvc-inval.c
mv gl/msvc-inval.c gl/msvc-inval.c.bak
sed -e "s/\(cdecl\)/__\1/" gl/msvc-inval.c.bak > gl/msvc-inval.c
# fix invalid cdecl in src/gl/msvc-inval.c
mv src/gl/msvc-inval.c src/gl/msvc-inval.c.bak
sed -e "s/\(cdecl\)/__\1/" src/gl/msvc-inval.c.bak > src/gl/msvc-inval.c
## fix missing openlog/syslog/getpwnam in src/shishid.c (version >= 1.0.2)
#mv src/shishid.c src/shishid.c.bak
#cat > src/shishid.c << EOF
#inline void openlog (const char *ident, int option, int facility) {}
#inline void syslog (int facility_priority, const char *format, ...) {}
##define LOG_CONS 0
##define LOG_AUTH 0
##define LOG_NOTICE 0
##define LOG_ERR 0
##define getpwnam(name) NULL
#struct passwd {
# char* pw_name;
# int pw_uid;
#};
#EOF
#cat src/shishid.c.bak >> src/shishid.c
## fix missing syslog in src/server.c (version >= 1.0.2)
#mv src/server.c src/server.c.bak
#cat > src/server.c << EOF
#inline void syslog (int facility_priority, const char *format, ...) {}
##define LOG_INFO 0
##define LOG_ERR 0
##define LOG_DEBUG 0
#EOF
#cat src/server.c.bak >> src/server.c
## fix missing syslog in src/starttls.c (version >= 1.0.2)
#mv src/starttls.c src/starttls.c.bak
#cat > src/starttls.c << EOF
#inline void syslog (int facility_priority, const char *format, ...) {}
##define LOG_INFO 0
##define LOG_ERR 0
#EOF
#cat src/starttls.c.bak >> src/starttls.c
## fix missing syslog in src/kdc.c (version >= 1.0.2)
#mv src/kdc.c src/kdc.c.bak
#cat > src/kdc.c << EOF
#inline void syslog (int facility_priority, const char *format, ...) {}
##define LOG_INFO 0
##define LOG_NOTICE 0
##define LOG_ERR 0
##define LOG_DEBUG 0
#EOF
#cat src/kdc.c.bak >> src/kdc.c
# fix conflicting crc32 which is also defined in zlib in gl/crc.h (version >= 1.0.2)
patch -ulbf gl/crc.h << EOF
@@ -25,2 +25,3 @@
 /* Compute CRC-32 value of LEN bytes long BUF, and return it. */
+#define crc32 SHISHI_crc32
 extern uint32_t crc32 (const char *buf, size_t len);
EOF
# fix gl/parse-datetime.y
#if ( gcc --version | grep -q MinGW-W64 ); then
 mv gl/parse-datetime.y gl/parse-datetime.y.bak &&
 sed -e "s/^%{$/&\n#undef __STRICT_ANSI__/" gl/parse-datetime.y.bak > gl/parse-datetime.y
#fi
## fix building DLLs on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
#fi &&
# fix detection of libgcrypt in configure
sed -i.bak -e "s/^error\( too old libgcrypt\)/#warning\1/" configure &&
#make check
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM ac_cv_search_syslog=no &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-pam ac_cv_search_syslog=no &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 # don't use syslog
 echo "#undef HAVE_SYSLOG_H" >> config.h &&
 wl-showstatus build-install &&
 ( make install-strip || make -j1 install-strip LDFLAGS="-Wl,--as-needed -lintl" || make install-strip HELP2MAN="$PERLDIR/bin/perl.exe $MINGWPREFIX/bin/help2man --no-discard-stderr" ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



