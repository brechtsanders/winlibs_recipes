export NAME="SoftHSM"
export STATUS=
export URL=http://www.softhsm.org/
#export URL=https://www.opendnssec.org/softhsm/
#export URL=https://github.com/opendnssec/SoftHSMv2/
export BASENAME=softhsm
export DESCRIPTION="SoftHSM is an implementation of a cryptographic store accessible through a PKCS #11 interface. You can use it to explore PKCS #11 without having a Hardware Security Module. It is being developed as a part of the OpenDNSSEC project. SoftHSM uses Botan for its cryptographic operations."
export CATEGORY=security
export TYPE=library
export VERSION=2.6.1
export VERSIONDATE=20201006
wl-showstatus --package-version
export DEPENDANCIES=openssl,libdl,p11-kit,sqlite3
#export DEPENDANCIES=botan,libdl,p11-kit,sqlite3
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=
export LICENSETYPE=
export DOWNLOADURL="https://github.com/opendnssec/SoftHSMv2/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/opendnssec/SoftHSMv2/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd SoftHSMv2-$VERSION
#wl-showstatus configure &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
##./autogen.sh &&
##    echo OK
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
##fi
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --enable-shared --enable-static --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-crypto-backend=openssl --with-migrate --with-objectstore-backend-db CXXFLAGS="-I$(pwd)/src/lib/win32" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-crypto-backend=botan --with-migrate --with-objectstore-backend-db CXXFLAGS="-I$(pwd)/src/lib/win32" &&
# ## fix building DLLs
# #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK && ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
# fix missing gmtime_s in src/lib/object_store/DB.cpp (version >= 2.6.1)
mv src/lib/object_store/DB.cpp src/lib/object_store/DB.cpp.bak &&
echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > src/lib/object_store/DB.cpp &&
sed -e "s/\(struct tm .* = {0,0,0,0,0,0,0,0,0\)[,0]*/\1/" src/lib/object_store/DB.cpp.bak >> src/lib/object_store/DB.cpp
# fix mkdir parameters in src/lib/object_store/DBToken.cpp (version >= 2.6.1)
sed -i.bak -e "s/\(mkdir(.*\),[^)]*/\1/" src/lib/object_store/DBToken.cpp
# fix missing syslog in src/lib/common/log.cpp (version >= 2.6.1)
mv src/lib/common/log.cpp src/lib/common/log.cpp.bak &&
echo "#include \"../win32/syslog.cpp\"" > src/lib/common/log.cpp
cat src/lib/common/log.cpp.bak >> src/lib/common/log.cpp
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_STATIC:BOOL=ON -DDEFAULT_SOFTHSM2_CONF:STRING=$INSTALLPREFIX/etc/softhsm2.conf -DDEFAULT_TOKENDIR:STRING=$INSTALLPREFIX/var/lib/softhsm/tokens/ -DWITH_CRYPTO_BACKEND:STRING=openssl -DENABLE_GOST:BOOL=OFF -DWITH_MIGRATE:BOOL=ON -DWITH_OBJECTSTORE_BACKEND_DB:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DCMAKE_CXX_FLAGS:STRING="-I$(pwd)/src/lib/win32" -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_STATIC:BOOL=ON -DDEFAULT_SOFTHSM2_CONF:STRING=$INSTALLPREFIX/etc/softhsm2.conf -DDEFAULT_TOKENDIR:STRING=$INSTALLPREFIX/var/lib/softhsm/tokens/ -DWITH_CRYPTO_BACKEND:STRING=botan -DENABLE_GOST:BOOL=ON -DWITH_MIGRATE:BOOL=ON -DWITH_OBJECTSTORE_BACKEND_DB:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DCMAKE_CXX_FLAGS:STRING="-I$(pwd)/src/lib/win32" -S. -Bbuild_win &&
 sed -i.bak -e "s?#define \(snprintf\|strcasecmp\|strncasecmp\)?//&?" build_win/config.h &&
 # fix _snprintf issues
 mv build_win/config.h build_win/config.h.bak2 &&
 echo "#include <stdio.h>" > build_win/config.h &&
 cat build_win/config.h.bak2 >> build_win/config.h &&
 # fix missing library
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lsqlite3/" build_win/build.ninja &&
 wl-showstatus build-install &&
 #ninja -Cbuild_win install/strip &&
 CPLUS_INCLUDE_PATH=$MINGWPREFIX/include/libdl-win32:$CPLUS_INCLUDE_PATH ninja -Cbuild_win install/strip &&
 mv -f $INSTALLPREFIX/lib/softhsm/* $INSTALLPREFIX/lib/ &&
 rmdir $INSTALLPREFIX/lib/softhsm &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 mkdir -p $INSTALLPREFIX/include &&
 cp -f src/lib/pkcs11/pkcs11.h src/lib/pkcs11/cryptoki.h $INSTALLPREFIX/include/ &&
 sed -i -e "s?$(cygpath -m $INSTALLPREFIX)??" $INSTALLPREFIX/share/man/man5/softhsm2.conf.5 &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf SoftHSMv2-$VERSION



