export NAME="wxSQLite3"
export STATUS=
export URL=http://wxcode.sourceforge.net/docs/wxsqlite3/
export BASENAME=wxsqlite3
export DESCRIPTION="wxSQLite3 is a C++ wrapper around the public domain SQLite 3.x database and is specifically designed for use in programs based on the wxWidgets library."
export CATEGORY=database,gui
export TYPE=library
#export VERSION=3.0.3
#export VERSIONDATE=20130625
#export VERSION=3.0.4
#export VERSIONDATE=20130830
#export VERSION=3.0.5
#export VERSIONDATE=20130909
#export VERSION=3.0.6.1
#export VERSIONDATE=20131210
#export VERSION=3.1.0
#export VERSIONDATE=20140527
#export VERSION=3.1.1
#export VERSIONDATE=20140630
#export VERSION=3.2.0
#export VERSIONDATE=20141226
#export VERSION=3.2.1
#export VERSIONDATE=20150305
#export VERSION=3.3.0
#export VERSIONDATE=20151218
#export VERSION=3.3.1
#export VERSIONDATE=20160410
#export VERSION=4.0.4
#export VERSIONDATE=20180911
#export VERSION=4.1.0
#export VERSIONDATE=20180921
#export VERSION=4.1.1
#export VERSIONDATE=20181003
#export VERSION=4.2.0
#export VERSIONDATE=20181029
#export VERSION=4.3.0
#export VERSIONDATE=20181116
#export VERSION=4.4.0
#export VERSIONDATE=20181214
#export VERSION=4.4.1
#export VERSIONDATE=20190211
#export VERSION=4.4.3
#export VERSIONDATE=20190519
#export VERSION=4.4.4
#export VERSIONDATE=20190808
#export VERSION=4.4.5
#export VERSIONDATE=20190809
#export VERSION=4.4.6
#export VERSIONDATE=20190903
#export VERSION=4.4.7
#export VERSIONDATE=20191007
#export VERSION=4.4.8
#export VERSIONDATE=20191014
#export VERSION=4.5.0
#export VERSIONDATE=20200127
#export VERSION=4.5.1
#export VERSIONDATE=20200128
#export VERSION=4.6.0
#export VERSIONDATE=20200817
#export VERSION=4.6.1
#export VERSIONDATE=20201004
#export VERSION=4.6.2
#export VERSIONDATE=20201208
#export VERSION=4.6.3
#export VERSIONDATE=20201212
#export VERSION=4.6.4
#export VERSIONDATE=20201231
#export VERSION=4.6.5
#export VERSIONDATE=20210314
#export VERSION=4.6.6
#export VERSIONDATE=20210316
#export VERSION=4.6.7
#export VERSIONDATE=20210323
#export VERSION=4.6.8
#export VERSIONDATE=20210327
#export VERSION=4.6.9
#export VERSIONDATE=20210405
#export VERSION=4.6.10
#export VERSIONDATE=20210421
#export VERSION=4.7.0
#export VERSIONDATE=20210425
#export VERSION=4.7.1
#export VERSIONDATE=20210428
#export VERSION=4.7.2
#export VERSIONDATE=20210515
#export VERSION=4.7.3
#export VERSIONDATE=20210620
#export VERSION=4.7.4
#export VERSIONDATE=20210725
#export VERSION=4.7.5
#export VERSIONDATE=20211129
#export VERSION=4.7.6
#export VERSIONDATE=20220110
#export VERSION=4.7.7
#export VERSIONDATE=20220226
#export VERSION=4.7.8
#export VERSIONDATE=20220317
#export VERSION=4.7.9
#export VERSIONDATE=20220401
#export VERSION=4.8.0
#export VERSIONDATE=20220428
#export VERSION=4.8.1
#export VERSIONDATE=20220508
#export VERSION=4.8.2
#export VERSIONDATE=20220718
#export VERSION=4.9.0
#export VERSIONDATE=20220909
#export VERSION=4.9.1
#export VERSIONDATE=20221120
####/wx/include/wx/cmdline.h:228: undefined reference to `__imp__ZN15wxCmdLineParser10SetCmdLineEiRK18wxCmdLineArgsArray'
####e:/prog/winlibs64-11.1.0-9.0.0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/11.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: samples/minimal.o: in function `wxString::AsCharBuf(wxMBConv const&) const':
####E:/Prog/winlibs64-11.1.0-9.0.0/custombuilt/wx/include/wx/string.h:3656: undefined reference to `__imp__ZNK8wxString6AsCharERK8wxMBConv'
#export VERSION=4.9.2
#export VERSIONDATE=20230224
#export VERSION=4.9.3
#export VERSIONDATE=20230315
#export VERSION=4.9.4
#export VERSIONDATE=20230530
#export VERSION=4.9.5
#export VERSIONDATE=20230916
#export VERSION=4.9.6
#export VERSIONDATE=20231004
#export VERSION=4.9.7
#export VERSIONDATE=20231109
#export VERSION=4.9.8
#export VERSIONDATE=20231124
#export VERSION=4.9.9
#export VERSIONDATE=20240119
#export VERSION=4.9.10
#export VERSIONDATE=20240328
#export VERSION=4.9.11
#export VERSIONDATE=20240615
#export VERSION=4.9.12
#export VERSIONDATE=20241023
#export VERSION=4.10.0
#export VERSIONDATE=20250101
#export VERSION=4.10.1
#export VERSIONDATE=20250107
export VERSION=4.10.2
export VERSIONDATE=20250117
wl-showstatus --package-version
export DEPENDENCIES=sqlite3,wxwidgets
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=wx-config-win
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENCE.txt
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://sourceforge.net/projects/wxcode/files/Components/wxSQLite3"
export DOWNLOADURL="https://github.com/utelle/wxsqlite3/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/wxcode/Components/wxSQLite3/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/utelle/wxsqlite3/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/")
## fix src/wxsqlite3.cpp (version <= 4.5.1)
#patch -ulbf src/wxsqlite3.cpp << EOF
#@@ -4143,3 +4143,5 @@
# #if defined(__WXMSW__)
#+#ifndef SQLITE_WIN32_TEMP_DIRECTORY_TYPE
#   DWORD SQLITE_WIN32_TEMP_DIRECTORY_TYPE = 2;
#+#endif
# #if wxUSE_UNICODE
#EOF
# fix src/wxsqlite3.cpp (version >= 4.6.0)
patch -ulbf src/wxsqlite3.cpp << EOF
@@ -4390,3 +4390,3 @@
 #endif
-  int rc = sqlite3_win32_set_directory(SQLITE_WIN32_TEMP_DIRECTORY_TYPE, (void*) zValue);
+  int rc = sqlite3_win32_set_directory16(SQLITE_WIN32_TEMP_DIRECTORY_TYPE, (const void*) zValue);
   ok = (rc == SQLITE_OK);
EOF
# fix src/sqlite3mc_amalgamation.c (version >= 4.9.4)
patch -ulbf src/sqlite3mc_amalgamation.c << EOF
@@ -276165,3 +276165,3 @@
 #undef LONGDOUBLE_TYPE
-#if defined(__GNUC__) && defined(_WIN64)
+#if defined(__GNUC__) && defined(_WIN64) && !defined(__MINGW32__)
 #include <quadmath.h>
EOF
## create dummy wx-config which supports --version and uses UNIX-style paths
#cat > wx-config.sh << EOF
##!/bin/sh
#if echo " \$* "|grep -q " --version "; then
# shift
# wx-config.exe --release \$* | grep -v "wx-config Error:" | sed -e "s/^\\([0-9]*\\.[0-9]*\\)\$/\\1.0/"
#else
# wx-config.exe --static=\$WX_STATIC --unicode=\$WX_UNICODE --debug=\$WX_DEBUG --compiler=gcc \$* | grep -v "wx-config Error:" | sed -e "s?\\([A-Z]\\):\\\\\\\\?/\\1/?g; s?\\\\\\\\?/?g"
#fi
#EOF
# create dummy wx-config which supports --version and uses UNIX-style paths (version >= 4.6.0)
cat > wx-config.sh << EOF
#!/bin/sh
if echo " \$* "|grep -q " --version "; then
 wx-config.exe --version
else
 if echo " \$* "|grep -q " --selected[-_]config "; then
  echo msw\$(if [ "\$WX_STATIC" == "yes" ]; then echo "-static"; fi)\$(if [ "\$WX_UNICODE" == "yes" ]; then echo "-unicode"; fi)\$(if [ "\$WX_DEBUG" == "yes" ]; then echo "-debug"; fi)-$(wx-config.exe --version)
 else
  wx-config.exe --prefix=\$MINGWPREFIX/wx --wxcfg=gcc_\$(if [ "\$WX_STATIC" == "yes" ]; then echo "lib"; else echo "dll"; fi)/msw\$(if [ "\$WX_UNICODE" == "yes" ]; then echo "u"; fi)\$(if [ "\$WX_DEBUG" == "yes" ]; then echo "d"; fi) \$* | sed -e "s?\\([A-Z]\\):\\\\\\\\?/\\1/?g; s?\\\\\\\\?/?g"
 fi
fi
EOF
mkdir -p m4 &&
 wl-showstatus preconfigure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 # fix configure
 sed -i.bak -e "s/^\s*) to this variable as this would result in.*$//; s/\(lt_cv_deplibs_check_method.*x86 DLL\)/\1|PE32.\*DLL/" configure &&
 # iterate through all possible wxWidgets builds
 for WX_DEBUG in no ; do
  for WX_STATIC in yes ; do
  #for WX_STATIC in yes no ; do
   for WX_UNICODE in no yes ; do
    wl-showstatus configure &&
    mkdir -p build_debug_$WX_DEBUG\_static_$WX_STATIC\_unicode_$WX_UNICODE &&
    cd build_debug_$WX_DEBUG\_static_$WX_STATIC\_unicode_$WX_UNICODE &&
    ( ../configure --cache-file=../config.cache --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-metadata --enable-dynamic_load --enable-load_extension --$(if [ "$WX_STATIC" == "no" ]; then echo -n enable; else echo -n disable; fi)-shared --with$(if [ "$WX_STATIC" == "yes" ]; then echo -n out; fi)-wxshared --$(if [ "$WX_UNICODE" == "no" ]; then echo -n disable; else echo -n enable; fi)-unicode --$(if [ "$WX_DEBUG" == "no" ]; then echo -n disable; else echo -n enable; fi)-debug --with-wx-config="../wx-config.sh" --with-toolkit=msw && touch ../CONFIG_SUCCESS_debug_$WX_DEBUG\_static_$WX_STATIC\_unicode_$WX_UNICODE ) || break 3
    cd ..
   done
  done
 done &&
 for WX_DEBUG in no ; do
  for WX_STATIC in yes ; do
  #for WX_STATIC in yes no ; do
   for WX_UNICODE in no yes ; do
    wl-showstatus build-install &&
    #( PATH=$MINGWPREFIX/wx/lib/gcc_dll:$PATH make -Cbuild_debug_$WX_DEBUG\_static_$WX_STATIC\_unicode_$WX_UNICODE install-strip || PATH=$MINGWPREFIX/wx/lib/gcc_dll:$PATH make -Cbuild_debug_$WX_DEBUG\_static_$WX_STATIC\_unicode_$WX_UNICODE install-strip CXX="${CXX:-g++} -std=c++11" )
    #( PATH=$MINGWPREFIX/wx/lib/gcc_dll:$PATH LIBRARY_PATH=$MINGWPREFIX/wx/lib/gcc_$(if [ "$WX_STATIC" == "yes" ]; then echo "lib"; else echo "dll"; fi)${LIBRARY_PATH:+:$LIBRARY_PATH} make -Cbuild_debug_$WX_DEBUG\_static_$WX_STATIC\_unicode_$WX_UNICODE install-strip || PATH=$MINGWPREFIX/wx/lib/gcc_dll:$PATH LIBRARY_PATH=$MINGWPREFIX/wx/lib/gcc_$(if [ "$WX_STATIC" == "yes" ]; then echo "lib"; else echo "dll"; fi)${LIBRARY_PATH:+:$LIBRARY_PATH} make -Cbuild_debug_$WX_DEBUG\_static_$WX_STATIC\_unicode_$WX_UNICODE install-strip CXX="${CXX:-g++} -std=c++11" || break 3 )
    ( PATH=$MINGWPREFIX/wx/lib/gcc_dll:$PATH CPLUS_INCLUDE_PATH=$MINGWPREFIX/wx/include:$MINGWPREFIX/wx/lib/gcc_$(if [ "$WX_STATIC" == "yes" ]; then echo "lib"; else echo "dll"; fi)/msw$(if [ "$WX_UNICODE" == "yes" ]; then echo "u"; fi)$(if [ "$WX_DEBUG" == "yes" ]; then echo "d"; fi)${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} LIBRARY_PATH=$MINGWPREFIX/wx/lib/gcc_$(if [ "$WX_STATIC" == "yes" ]; then echo "lib"; else echo "dll"; fi)${LIBRARY_PATH:+:$LIBRARY_PATH} make -Cbuild_debug_$WX_DEBUG\_static_$WX_STATIC\_unicode_$WX_UNICODE install-strip || PATH=$MINGWPREFIX/wx/lib/gcc_dll:$PATH LIBRARY_PATH=$MINGWPREFIX/wx/lib/gcc_$(if [ "$WX_STATIC" == "yes" ]; then echo "lib"; else echo "dll"; fi)${LIBRARY_PATH:+:$LIBRARY_PATH} make -Cbuild_debug_$WX_DEBUG\_static_$WX_STATIC\_unicode_$WX_UNICODE install-strip CXX="${CXX:-g++} -std=c++11" && touch BUILD_SUCCESS_debug_$WX_DEBUG\_static_$WX_STATIC\_unicode_$WX_UNICODE ) || break 3
   done
  done
 done &&
 expr $(ls -1d BUILD_SUCCESS_*|wc -l) = 2 &&
 #expr $(ls -1d BUILD_SUCCESS_*|wc -l) = 4 &&
 mkdir -p $INSTALLPREFIX/bin &&
 ( mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ || true ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\.[0-9]*\)\..*$/\1/")
####TO DO: build DLL



