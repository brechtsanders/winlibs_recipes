export NAME="LS-HPACK"
export STATUS=
export URL=https://github.com/litespeedtech/ls-hpack
export BASENAME=ls-hpack
export DESCRIPTION="LS-HPACK: LiteSpeed HPACK Library - LS-HPACK provides functionality to encode and decode HTTP headers using HPACK compression mechanism specified in RFC 7541."
export CATEGORY=compression
export TYPE=library
#export VERSION=2.2.1
#export VERSIONDATE=20201228
#export VERSION=2.3.0
#export VERSIONDATE=20210421
#export VERSION=2.3.1
#export VERSIONDATE=20230105
#export VERSION=2.3.2
#export VERSIONDATE=20230513
#export VERSION=2.3.3
#export VERSIONDATE=20231220
export VERSION=2.3.4
export VERSIONDATE=20240925
wl-showstatus --package-version
export DEPENDENCIES=xxhash,sys_queue_h
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/litespeedtech/ls-hpack/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/litespeedtech/ls-hpack/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED:BOOL=0 -DNDEBUG:BOOL=1 -DXXH_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/win32ports/include" -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED:BOOL=1 -DNDEBUG:BOOL=1 -DXXH_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DCMAKE_C_FLAGS:STRING="-I$MINGWPREFIX/win32ports/include" -S. -Bbuild_shared &&
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lxxhash/" build_shared/build.ninja &&
 wl-showstatus build &&
 ninja -Cbuild_static &&
 wl-showstatus build &&
 ninja -Cbuild_shared &&
 strip build_shared/*.dll &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f ls*.h $INSTALLPREFIX/include/ &&
 cp -f build_static/*.a build_shared/*.dll.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



