export NAME="BLIS"
export STATUS=
export URL=https://github.com/flame/blis
export BASENAME=blis
export DESCRIPTION="BLAS-like Library Instantiation Software Framework"
export CATEGORY=math
export TYPE=library
#export VERSION=0.2.0
#export VERSIONDATE=20160610
#export VERSION=0.2.1
#export VERSIONDATE=20161006
#export VERSION=0.2.2
#export VERSIONDATE=20170719
#export VERSION=0.3.0
#export VERSIONDATE=20180224
#export VERSION=0.3.1
#export VERSIONDATE=20180405
####frame/include/blis.h:62:24: fatal error: bli_config.h: No such file or directory
#export VERSION=0.4.0
#export VERSIONDATE=20180728
#export VERSION=0.4.1
#export VERSIONDATE=20180831
#export VERSION=0.5.0
#export VERSIONDATE=20181026
#export VERSION=0.5.1
#export VERSIONDATE=2018121819
#export VERSION=0.5.2
#export VERSIONDATE=20190320
#export VERSION=0.6.0
#export VERSIONDATE=20190604
#export VERSION=0.6.1
#export VERSIONDATE=20200115
#export VERSION=0.7.0
#export VERSIONDATE=20200408
####configure: checking configuration against contents of 'config_registry'.
####configure: 'user-specified configuration '' is NOT registered!
####configure: *** Cannot continue with unregistered configuration ''. ***
#export VERSION=0.8.0
#export VERSIONDATE=20201120
#export VERSION=0.8.1
#export VERSIONDATE=20210323
####ar: Argument list too long
export VERSION=0.9.0
export VERSIONDATE=20220402
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
#export DOWNLOADURL="https://github.com/flame/blis/releases "
export DOWNLOADURL="https://github.com/flame/blis/tags "
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/flame/blis/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/flame/blis/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
wl-showstatus configure &&
 #PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --enable-static --enable-shared --enable-threading=pthreads reference &&
 #PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --enable-static --enable-shared --enable-threading=pthreads generic &&
 PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --enable-static --enable-shared --enable-threading=pthreads amd64 &&
 #PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --enable-static --enable-shared --enable-threading=pthreads auto &&
 #PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --enable-static --enable-shared --enable-threading=pthreads haswell &&
 #PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --enable-static --enable-shared --enable-threading=pthreads sandybridge &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 #wl-showstatus build &&
 #make &&
 #make CC="${CC:-gcc} -I$(pwd)" &&
 wl-showstatus build-install &&
 make install &&
 mkdir -p $INSTALLPREFIX/bin &&
 mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 strip $INSTALLPREFIX/bin/*.dll &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



