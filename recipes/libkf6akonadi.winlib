export NAME="Akonadi"
export STATUS=
export URL=https://invent.kde.org/pim/akonadi
export BASENAME=libkf6akonadi
export DESCRIPTION="Cross-desktop storage service for PIM data providing concurrent access"
export CATEGORY=database
export TYPE=library
#export VERSION=24.02.0
#export VERSIONDATE=20240228
#export VERSION=24.02.1
#export VERSIONDATE=20240321
export VERSION=24.02.2
export VERSIONDATE=20240412
#export VERSION=24.04.80
#export VERSIONDATE=20240427
wl-showstatus --package-version
export DEPENDENCIES=gettext,qt,libkf6i18n,libkf6iconthemes,libkf6itemmodels,libkf6service,libkf6bookmarks,libkf6completion,libkf6itemviews,libkf6jobwidgets,libkf6solid,libkf6kio,libkf6windowsystem,libkf6coreaddons,libkf6auth,libkf6codecs,libkf6config,libkf6widgetsaddons,libkf6configwidgets,libkf6xmlgui,libkf6crash,xz,shared-mime-info
export OPTIONALDEPENDENCIES=libkf6accounts-integration
export BUILDDEPENDENCIES=extra-cmake-modules,cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSES/LGPL-2.0-or-later.txt
#export LICENSETYPE=LGPL
export LICENSEFILE=LICENSES/MIT.txt
export LICENSETYPE=MIT
#export DOWNLOADURL="https://invent.kde.org/pim/akonadi/-/tags akonadi-v"
#export DOWNLOADURL="https://github.com/KDE/akonadi/releases"
export DOWNLOADURL="https://github.com/KDE/akonadi/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://invent.kde.org/pim/akonadi/-/archive/v$VERSION/akonadi-v$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://github.com/KDE/akonadi/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd akonadi-$VERSION
# fix src/xml/akonadi2xml.cpp (version >= 24.02.0)
patch -ulbf src/xml/akonadi2xml.cpp << EOF
@@ -53,4 +53,5 @@
         qCritical() << writer.exec();
         return -1;
     }
+    return 0;
 }
EOF
mkdir -p build_static build_shared &&
 #wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_WITH_QT6:BOOL=ON -DINSTALL_APPARMOR:BOOL=OFF -D_tar_executable:FILEPATH= -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_WITH_QT6:BOOL=ON -DINSTALL_APPARMOR:BOOL=OFF -D_tar_executable:FILEPATH= -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 #wl-showstatus build-install &&
 #PATH=$PATH:$MINGWPREFIX/qt6/bin ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf akonadi-$VERSION
####TO DO: also build static library



