export NAME="libntlm"
export STATUS=
#export URL=https://www.nongnu.org/libntlm/
export URL=https://gitlab.com/gsasl/libntlm/
export BASENAME=libntlm
export DESCRIPTION="libntlms implement the Microsoft NTLM authentication protocol"
export CATEGORY=security
export TYPE=library
#export VERSION=1.5
#export VERSIONDATE=20200120
export VERSION=1.6
export VERSIONDATE=20200419
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://www.nongnu.org/libntlm/releases/"
export DOWNLOADURL="https://gitlab.com/gsasl/libntlm/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://www.nongnu.org/libntlm/releases/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://gitlab.com/gsasl/libntlm/-/archive/v$VERSION/libntlm-v$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
tar xj --force-local -f $TARBALLDIR/$BASENAME/libntlm-v$VERSION.tar.bz2
cd libntlm-v$VERSION
## allow building shared libraries when using clang
#sed -i.bak -e "s/\$LD --help 2>&1 | \$GREP 'auto-import'/true/" configure
wl-showstatus preconfigure &&
 mkdir -p m4 &&
 autoreconf -f -i -I gl -I $MINGWPREFIX/share/aclocal &&
 wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
 wl-showstatus build-install &&
 make install-strip &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libntlm-v$VERSION



#export NAME="libntlm"
#export STATUS=
#export URL=https://gitlab.com/gsasl/libntlm/
#export BASENAME=libntlm
#export DESCRIPTION="libntlms implement the Microsoft NTLM authentication protocol"
#export CATEGORY=security
#export TYPE=library
##export VERSION=1.7
##export VERSIONDATE=20251007
#export VERSION=1.8
#export VERSIONDATE=20251007
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="https://gitlab.com/gsasl/libntlm/-/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://gitlab.com/gsasl/libntlm/-/archive/v$VERSION/libntlm-v$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/libntlm-v$VERSION.tar.bz2
#cd libntlm-v$VERSION
## fix missing byteswap.h (version >= 1.7)
#mkdir -p winfix
#touch winfix/byteswap.h
## fix missing lib/Makefile.in (version >= 1.7)
#mkdir -p lib
#ls -1 lib/Makefile.in &> /dev/null || echo -e "all:\ninstall:\ninstall-strip:" > lib/Makefile.in
## fix configure.ac (version >= 1.7)
#patch -ulbf configure.ac << EOF
#@@ -45,45 +45,5 @@
# # For gnulib.
#-gl_INIT
# AC_DEFINE([check_version], ntlm_check_version, [Rename to public API name.])
#
#-AC_ARG_ENABLE([gcc-warnings],
#-  [AS_HELP_STRING([[--enable-gcc-warnings[=TYPE]]],
#-    [control generation of GCC warnings.  The TYPE 'no' disables
#-     warnings; 'yes' (default) generates cheap warnings.])])
#
#-AS_IF([test "\$enable_gcc_warnings" != no], [
#-   # Set up the list of unwanted warning options.
#-   nw=
#-   nw="\$nw -fanalyzer"
#-   nw="\$nw -Wsystem-headers"    # Don't warn in system headers.
#-
#-   # Setup the list of meaningful warning options for the C compiler.
#-   # The list comes from manywarnings.m4. Warning options that are not
#-   # generally meaningful have already been filtered out (cf.
#-   # build-aux/gcc-warning.spec).
#-   gl_MANYWARN_ALL_GCC([possible_warning_options])
#-
#-   # Compute the list of warning options that are desired.
#-   gl_MANYWARN_COMPLEMENT([desired_warning_options],
#-                          [\$possible_warning_options], [\$nw])
#-   # Compute the list of remaining undesired warning options.
#-   # Namely those, that were not in manywarnings.m4 because they were
#-   # already listed in build-aux/gcc-warning.spec; this includes those
#-   # that are implied by -Wall.
#-   gl_MANYWARN_COMPLEMENT([remaining_undesired_warning_options],
#-                          [\$nw], [\$possible_warning_options])
#-
#-   # Add the desired warning options to WARN_CFLAGS.
#-   for w in \$desired_warning_options; do
#-     gl_WARN_ADD([\$w])
#-   done
#-
#-   # Add the opposites of the remaining undesired warning options to
#-   # WARN_CFLAGS.
#-   for w in \`echo "\$remaining_undesired_warning_options" | sed -e 's/-W/-Wno-/g'\`; do
#-     gl_WARN_ADD([\$w])
#-   done
#-  gl_WARN_ADD([-Wno-pointer-sign])     # Too many warnings for now
#-  gl_WARN_ADD([-fdiagnostics-show-option])
#-])
#
#EOF
##sed -i.bak -e "s/gl_MANYWARN_ALL_GCC(possible_warning_options)//" configure.ac
#wl-showstatus preconfigure &&
# mkdir -p m4 &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# wl-showstatus configure &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$MINGWPREFIX/include/openssl -I$PWD/winfix" &&
# #--disable-gcc-warnings 
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libntlm-v$VERSION



