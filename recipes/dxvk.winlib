export NAME="DXVK"
export STATUS=
export URL=https://github.com/doitsujin/dxvk
export BASENAME=dxvk
export DESCRIPTION="A Vulkan-based translation layer for Direct3D 9/10/11 which allows running 3D applications on Linux using Wine."
export CATEGORY=graphics,development
export TYPE=library
#export VERSION=1.10.1
#export VERSIONDATE=20220414
#export VERSION=1.10.2
#export VERSIONDATE=20220714
#export VERSION=1.10.3
#export VERSIONDATE=20220803
#export VERSION=2.0
#export VERSIONDATE=20221110
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export VERSION=2.1
#export VERSIONDATE=20230125
#export VERSION=2.2
#export VERSIONDATE=20230512
#export VERSION=2.3
#export VERSIONDATE=20230905
####meson.build:42:19: ERROR: Subproject exists but has no meson.build file
#export VERSION=2.3.1
#export VERSIONDATE=20240320
#export VERSION=2.4
#export VERSIONDATE=20240710
#export VERSION=2.4.1
#export VERSIONDATE=20240926
#export VERSION=2.5
#export VERSIONDATE=20241112
export VERSION=2.5.1
export VERSIONDATE=20241118
wl-showstatus --package-version
export DEPENDENCIES=libdisplay-info
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Zlib
export DOWNLOADURL="https://github.com/doitsujin/dxvk/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/doitsujin/dxvk/releases/download/v$VERSION/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/doitsujin/dxvk/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix missing folders (version >= 2.0)
#mkdir -p include/vulkan/include include/spirv/include
# also allow building static libraries
sed -i.bak -e "s/shared_\(library\)/\1/" $(grep -l shared_library src/*/meson.build)
# ignore libdisplay-info version in meson.build (version >= 2.4)
patch -ulbf meson.build << EOF
@@ -51,3 +51,2 @@
   'libdisplay-info',
-  version: ['>= 0.0.0', '< 0.2.0'],
   fallback: ['libdisplay-info', 'di_dep'],
EOF
#touch subprojects/libdisplay-info/meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX/share/dxvk --backend ninja --buildtype release --strip --default-library both -Denable_tests=false . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX/share/dxvk --backend ninja --buildtype release --strip --default-library both . build_both &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX/share/dxvk --backend ninja --buildtype release --strip --default-library both . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



