#export NAME="libvips"
#export STATUS=
##export URL=https://jcupitt.github.io/libvips/
##export URL=https://github.com/jcupitt/libvips
#export URL=https://libvips.github.io/libvips/
##export URL=https://github.com/libvips/libvips
#export BASENAME=libvips
#export DESCRIPTION="A fast image processing library with low memory needs."
#export CATEGORY=graphics,dataprocessing
#export TYPE=library
##export VERSION=8.6.3
##export VERSIONDATE=20180612
##export VERSION=8.6.4
##export VERSIONDATE=20180614
##export VERSION=8.6.5
##export VERSIONDATE=20180725
##export VERSION=8.7.0
##export VERSIONDATE=20180919
##export VERSION=8.8.4
##export VERSIONDATE=20191217
##export VERSION=8.9.0
##export VERSIONDATE=20200107
##export VERSION=8.9.1
##export VERSIONDATE=20200128
##export VERSION=8.9.2
##export VERSIONDATE=20200421
##export VERSION=8.10.0
##export VERSIONDATE=20200809
##export VERSION=8.10.1
##export VERSIONDATE=20200904
##export VERSION=8.10.2
##export VERSIONDATE=20201013
##export VERSION=8.10.3
##export VERSIONDATE=20201213
##export VERSION=8.10.4
##export VERSIONDATE=20201214
##export VERSION=8.10.5
##export VERSIONDATE=20201218
##export VERSION=8.10.6
##export VERSIONDATE=20210324
##export VERSION=8.11.0
##export VERSIONDATE=20210610
##export VERSION=8.11.1
##export VERSIONDATE=20210629
##export VERSION=8.11.2
##export VERSIONDATE=20210704
##export VERSION=8.11.3
##export VERSIONDATE=20210815
##export VERSION=8.11.4
##export VERSIONDATE=20210923
##export VERSION=8.12.0
##export VERSIONDATE=20211120
##export VERSION=8.12.1
##export VERSIONDATE=20211125
##export VERSION=8.12.2
##export VERSIONDATE=20220125
##export VERSION=8.13.0
##export VERSIONDATE=20220722
##export VERSION=8.13.1
##export VERSIONDATE=20220904
##export VERSION=8.13.2
##export VERSIONDATE=20220930
#export VERSION=8.13.3
#export VERSIONDATE=20221102
#wl-showstatus --package-version
##export DEPENDENCIES=glib2,libxml2,libtiff,libjpeg,libpng,libgsf,pango,fftw,zlib,imagemagick,liborc,librsvg,lcms2,matio,libwebp,giflib,libexif,ilmbase,openexr
##export DEPENDENCIES=glib2,libxml2,libtiff,libjpeg,libpng,libgsf,pango,fftw,zlib,imagemagick,liborc,librsvg,lcms2,matio,libwebp,giflib,libexif,ilmbase,openexr,mman-win32
#export DEPENDENCIES=glib2,libxml2,libtiff,libjpeg,libpng,libgsf,pango,fftw,zlib,imagemagick,liborc,librsvg,lcms2,matio,libwebp,giflib,libexif,openexr,mman-win32
##export DEPENDENCIES=glib2,libxml2,libtiff,libjpeg,libpng,libgsf,pango,fftw,zlib,imagemagick,liborc,librsvg,lcms2,matio,libwebp,giflib,libexif,openexr,mman-win32,gobject-introspection
#export OPTIONALDEPENDENCIES=pngquant,libspng,cgif,cfitsio,nifticlib,openslide,libheif,pdfium
#export BUILDDEPENDENCIES=graphviz
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
##export DOWNLOADURL="https://github.com/jcupitt/libvips/releases"
#export DOWNLOADURL="https://github.com/libvips/libvips/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/jcupitt/libvips/releases/download/v$VERSION/vips-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://fossies.org/linux/privat/vips-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://github.com/jcupitt/libvips/archive/v$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/libvips/libvips/releases/download/v$VERSION/vips-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://github.com/libvips/libvips/archive/refs/tags/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/vips-$VERSION.tar.gz
#cd vips-$VERSION
##tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
##cd libvips-$VERSION
### fix MSVC issue
##mkdir -p winfix
##cp -rf $PYDIR/lib/distutils winfix/
##patch -ulbf winfix/distutils/cygwinccompiler.py << EOF
##@@ -85,3 +85,3 @@
##         else:
##-            raise ValueError("Unknown MS Compiler version %s " % msc_ver)
##+            return None
##
##EOF
### fix missing file
##touch doc/gtk-doc.make
### fix EXTRA_DIST += error in doc/Makefile.am
##sed -i.bak -e "s/^\(EXTRA_DIST\s*\)+=/\1=/" doc/Makefile.am
### fix missing HAVE_INTROSPECTION in libvips/Makefile.am
##sed -i.bak -e "s/HAVE_INTROSPECTION/!OS_WIN32/" libvips/Makefile.am
### fix error: cannot find input file: `po/Makefile.in.in'
##sed -i.bak -e "s/^AM_GLIB_GNU_GETTEXT/IT_INIT_INTLTOOL\nIT_PROG_INTLTOOL/" configure.ac
#wl-showstatus configure &&
# #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# ### fix error: cannot find input file: `po/Makefile.in.in'
# ##intltoolize --automake -c -f &&
# #sed -i.bak -e "s?^GOBJECT_INTROSPECTION?#&?" configure &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-introspection &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-introspection --with-nifti-includes=$MINGWPREFIX/include/nifti --with-nifti-libraries=$MINGWPREFIX/lib IMAGEQUANT_CFLAGS=" " IMAGEQUANT_LIBS="-limagequant" CFITSIO_CFLAGS=" " CFITSIO_LIBS="-lcfitsio" CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" PKG_CONFIG=$(which pkg-config.exe) &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-introspection --with-poppler --with-magick --with-heif --with-openslide --with-nifti-includes=$MINGWPREFIX/include/nifti --with-nifti-libraries=$MINGWPREFIX/lib IMAGEQUANT_CFLAGS=" " IMAGEQUANT_LIBS="-limagequant" CFITSIO_CFLAGS=" " CFITSIO_LIBS="-lcfitsio" CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" PKG_CONFIG=$(which pkg-config.exe) &&
# wl-showstatus build-install &&
# make install-strip &&
# #PATH=$PATH:$PYDIR PYTHONPATH=$(pwd)/winfix:$MINGWPREFIX/lib${PYTHONPATH:+:$PYTHONPATH} make install-strip &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf vips-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libvips-$VERSION



export NAME="libvips"
export STATUS=
#export URL=https://github.com/jcupitt/libvips
#export URL=https://github.com/libvips/libvips
export URL=https://libvips.github.io/libvips/
export BASENAME=libvips
export DESCRIPTION="A fast image processing library with low memory needs."
export CATEGORY=graphics,dataprocessing
export TYPE=library
#export VERSION=8.14.0
#export VERSIONDATE=20221230
#export VERSION=8.14.1
#export VERSIONDATE=20230109
#export VERSION=8.14.2
#export VERSIONDATE=20230321
#export VERSION=8.14.3
#export VERSIONDATE=20230721
#export VERSION=8.14.4
#export VERSIONDATE=20230815
#export VERSION=8.14.5
#export VERSIONDATE=20230919
export VERSION=8.15.0
export VERSIONDATE=20231111
wl-showstatus --package-version
export DEPENDENCIES=zlib,gettext,glib2,expat,fftw,pango,cairo,fontconfig,imagemagick,lcms2,libexif,libgsf,libjpeg,libjxl,libopenjpeg,liborc,librsvg,libtiff,libwebp,matio,openexr
export OPTIONALDEPENDENCIES=pngquant,libspng,cgif,cfitsio,nifticlib,openslide,libheif,pdfium
export BUILDDEPENDENCIES=meson,ninja,graphviz
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/jcupitt/libvips/releases"
export DOWNLOADURL="https://github.com/libvips/libvips/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/libvips/libvips/releases/download/v$VERSION/vips-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/vips-$VERSION.tar.xz
cd vips-$VERSION
mkdir -p build_both &&
 wl-showstatus configure &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dgtk_doc=false -Dexamples=false . build_both &&
 #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dintrospection=false -Dvapi=false -Dgtk_doc=false -Dexamples=false . build_both &&
 #PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dintrospection=false -Dvapi=false -Dgtk_doc=false -Dexamples=false . build_both &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dintrospection=disabled -Dvapi=false -Dgtk_doc=false -Dexamples=false . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf vips-$VERSION



