export NAME="OpenAES"
export STATUS=
export URL=http://nalramli.com/OpenAES/
export BASENAME=openaes
export DESCRIPTION="OpenAES portable C cryptographic library"
export CATEGORY=security
export TYPE=library
export VERSION=0.10.0
export VERSIONDATE=20151204
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=
export DOWNLOADURL="http://nalramli.com/OpenAES/downloads.html OpenAES-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://nalramli.com/OpenAES/res/OpenAES-$VERSION.zip
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
unzip -oq $TARBALLDIR/$BASENAME/OpenAES-$VERSION.zip -d$BASENAME-$VERSION
cd $BASENAME-$VERSION
## fix missing src/oaes.c in src/oaes.c (version >= 0.10.0)
#patch -ulbf src/oaes.c << EOF
#--- src/oaes.c  2014-04-28 21:05:25 +0200
#+++ src/oaes.c  2015-12-07 07:45:00 +0100
#@@ -54,5 +54,5 @@
# #endif // __min
#
#-#if defined(_WIN32) && !defined(__SYMBIAN32__)
#+#if defined(_WIN32) && !defined(__SYMBIAN32__) && !defined(__MINGW32__)
# #else
#   #ifndef _fprintf_p
#EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS=0 -DCMAKE_C_FLAGS:STRING="$(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wint-conversion" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=int-conversion"; fi)" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS=1 -DCMAKE_C_FLAGS:STRING="$(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wint-conversion" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=int-conversion"; fi)" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_shared &&
 wl-showstatus build &&
 ninja -Cbuild_static &&
 wl-showstatus build &&
 ninja -Cbuild_shared &&
 rm -f build_shared/test_*.exe &&
 wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f inc/* $INSTALLPREFIX/include &&
 cp -f build_static/*.a $INSTALLPREFIX/lib &&
 cp -f build_shared/*.a $INSTALLPREFIX/lib &&
 cp -f build_shared/*.dll build_shared/*.exe $INSTALLPREFIX/bin &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



