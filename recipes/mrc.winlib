export NAME="mrc"
export STATUS=
export URL=https://github.com/mhekkel/mrc
export BASENAME=mrc
export DESCRIPTION="Maartens Resource Compiler"
export CATEGORY=
export TYPE=library
#export VERSION=1.3.8
#export VERSIONDATE=20230707
export VERSION=1.3.9
export VERSIONDATE=20230712
wl-showstatus --package-version
export DEPENDENCIES=libmcfp
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/mhekkel/mrc/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/mhekkel/mrc/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix assumption only _MSC_VER is defined on Windows and force little endian (version >= 1.3.8)
mv src/mrc.cpp src/mrc.cpp.bak &&
echo "#define LITTLE_ENDIAN 1" > src/mrc.cpp
sed -e "s/_MSC_VER/_WIN32/" src/mrc.cpp.bak >> src/mrc.cpp
# force building the correct architecture (needed when building 32-bit on 64-bit Windows)
sed -i.bak -e "s/\(set(COFF_SPEC \"--coff=\)\${COFF_TYPE}/\1$(if echo $RUNPLATFORM | grep -q "^i.86"; then echo "x86"; fi)$(if echo $RUNPLATFORM | grep -q "^x86_64"; then echo "x64"; fi)$(if echo $RUNPLATFORM | grep -q "^aarch64"; then echo "arm64"; fi)/" cmake/mrc-config.cmake CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF -DCMAKE_EXE_LINKER_FLAGS:STRING="-mconsole" -S. -Bbuild_win &&
 #-DCMAKE_SYSTEM_PROCESSOR=$(if echo $RUNPLATFORM | grep -q "^i.86"; then echo "x86"; fi)$(if echo $RUNPLATFORM | grep -q "^x86_64"; then echo "x64"; fi)$(if echo $RUNPLATFORM | grep -q "^aarch64"; then echo "arm64"; fi) 
 ## force building the correct architecture (needed when building 32-bit on 64-bit Windows)
 #sed -i.bak -e "s/\(mrc-bootstrap\.exe\) \(-o\)/\1 --coff=$(if echo $RUNPLATFORM | grep -q "^i.86"; then echo "x86"; fi)$(if echo $RUNPLATFORM | grep -q "^x86_64"; then echo "x64"; fi)$(if echo $RUNPLATFORM | grep -q "^aarch64"; then echo "arm64"; fi) \2/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



