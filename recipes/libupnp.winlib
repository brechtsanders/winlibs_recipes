#export NAME="libupnp"
#export STATUS=
#export URL=http://pupnp.sourceforge.net/
#export BASENAME=libupnp
#export DESCRIPTION="The portable SDK for UPnP(TM) Devices (libupnp) provides developers with an API and open source code for building control points, devices, and bridges that are compliant with Version 1.0 of the Universal Plug and Play Device Architecture Specification and support several operating systems like Linux, *BSD, Solaris and others."
#export CATEGORY=communication
#export TYPE=library
##export VERSION=1.6.6
##export VERSION=1.6.7
##export VERSIONDATE=20101004
##export VERSION=1.6.8
##export VERSIONDATE=20101020
##export VERSION=1.6.8-1
##export VERSIONDATE=20101021
##export VERSION=1.6.9
##export VERSIONDATE=20101107
##export VERSION=1.6.10
##export VERSIONDATE=20101212
##export VERSION=1.6.12
##export VERSIONDATE=20110209
##export VERSION=1.6.13
##export VERSIONDATE=20110317
#####src/api/upnpapi.c:422: warning: 'UpnpInit' redeclared without dllimport attribute: previous dllimport ignored
##export VERSION=1.6.14
##export VERSIONDATE=20111213
#####src/api/upnpapi.c:3029: error: 'PIP_ADAPTER_ADDRESSES' undeclared (first use in this function)
##export VERSION=1.6.15
##export VERSIONDATE=20120125
##export VERSION=1.6.16
##export VERSIONDATE=20120322
##export VERSION=1.6.17
##export VERSIONDATE=20120403
#####upnp/src/api/upnpapi.c:444: warning: 'UpnpInit' redeclared without dllimport attribute: previous dllimport ignored
##export VERSION=1.6.18
##export VERSIONDATE=20130129
##export VERSION=1.6.19
##export VERSIONDATE=20131116
##export VERSION=1.6.20
##export VERSIONDATE=20160708
##export VERSION=1.6.21
##export VERSIONDATE=20161222
##export VERSION=1.6.22
##export VERSIONDATE=20170529
##export VERSION=1.6.24
##export VERSIONDATE=20171120
#export VERSION=1.6.25
#export VERSIONDATE=20180211
#wl-showstatus --package-version
#export DEPENDANCIES=pthreads
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=LICENSE
#export LICENSETYPE=
##export DOWNLOADURL="http://sourceforge.net/projects/pupnp/files/"
#export DOWNLOADURL="http://sourceforge.net/projects/pupnp/files/pupnp/ libUPnP%20"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/pupnp/pupnp/LibUPnP%20`echo $VERSION|sed -e "s/-.*$//"`/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/pupnp/pupnp/libUPnP%20`echo $VERSION|sed -e "s/-.*$//"`/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-`echo $VERSION|sed -e "s/-.*$//"`
## fix missing files
#mkdir arpa netinet sys
#touch arpa/inet.h netdb.h netinet/in.h sys/ioctl.h syslog.h
#echo "#include <winsock2.h>" > sys/socket.h
## fix missing definition of UPNP_INLINE in upnp/inc/upnpdebug.h
#cp upnp/inc/upnpdebug.h upnp/inc/upnpdebug.h.bak
#echo "#include <ThreadPool.h>" > upnp/inc/upnpdebug.h
#cat upnp/inc/upnpdebug.h.bak >> upnp/inc/upnpdebug.h
### fix missing definition of PIP_ADAPTER_ADDRESSES and missing DeviceAf in upnp/src/api/upnpapi.c
##patch -ulbf upnp/src/api/upnpapi.c << EOF
##--- upnp/src/api/upnpapi.c      2010-10-03 00:01:50 +0200
##+++ upnp/src/api/upnpapi.c      2010-10-05 10:56:24 +0200
##@@ -50,2 +50,5 @@
## #ifdef WIN32
##+       #define _WIN32_WINNT 0x0501
##+       #include <winsock2.h>
##+       #include <iptypes.h>
##        /* Do not include these files */
##@@ -3465,3 +3468,6 @@
##                if (GetHandleInfo(*device_handle_out, HndInfo) == HND_DEVICE) {
##-                       if ((*HndInfo)->DeviceAf == AddressFamily) {
##+#ifdef INCLUDE_DEVICE_APIS
##+                       if ((*HndInfo)->DeviceAf == AddressFamily)
##+#endif
##+                       {
##                                return HND_DEVICE;
##EOF
#patch -ulbf upnp/src/api/upnpapi.c << EOF
#--- upnp/src/api/upnpapi.c  2012-01-25 13:48:10 +0100
#+++ upnp/src/api/upnpapi.c  2012-02-16 12:02:20 +0100
#@@ -41,2 +41,7 @@
# #include "config.h"
#+#ifdef WIN32
#+  #define _WIN32_WINNT 0x0501
#+  #include <winsock2.h>
#+  #include <iptypes.h>
#+#endif
#
#@@ -3542,3 +3547,6 @@
#                if (GetHandleInfo(*device_handle_out, HndInfo) == HND_DEVICE) {
#-                       if ((*HndInfo)->DeviceAf == AddressFamily) {
#+#ifdef INCLUDE_DEVICE_APIS
#+                       if ((*HndInfo)->DeviceAf == AddressFamily)
#+#endif
#+                       {
#                                return HND_DEVICE;
#EOF
##cp upnp/src/api/upnpapi.c upnp/src/api/upnpapi.c.bak
##cat > upnp/src/api/upnpapi.c << EOF
###define _WIN32_WINNT 0x0501
###include <winsock2.h>
###include <iptypes.h>
##EOF
##cat upnp/src/api/upnpapi.c.bak >> upnp/src/api/upnpapi.c
### fix upnp/src/ssdp/ssdp_server.c (version <= 1.6.18)
##patch -ulbf upnp/src/ssdp/ssdp_server.c << EOF
##--- upnp/src/ssdp/ssdp_server.c  2010-10-03 00:01:50 +0200
##+++ upnp/src/ssdp/ssdp_server.c  2010-10-05 10:40:30 +0200
##@@ -423,3 +423,3 @@
## int
##-Make_Socket_NoBlocking( SOCKET sock )
##+Make_Socket_NoBlocking( int sock )
## {
##EOF
### fix missing Windows definitions in threadutil/inc/ThreadPool.h (version >= 1.6.8 <= 1.6.10))
##mv threadutil/inc/ThreadPool.h threadutil/inc/ThreadPool.h.bak
##echo "#include <windows.h>" > threadutil/inc/ThreadPool.h
##cat threadutil/inc/ThreadPool.h.bak >> threadutil/inc/ThreadPool.h
## fix missing definition of UPNP_INLINE and redefinition of in threadutil/inc/ThreadPool.h (version >= 1.6.15)
#patch -ulbf threadutil/inc/ThreadPool.h << EOF
#--- threadutil/inc/ThreadPool.h  2012-01-25 19:31:40 +0100
#+++ threadutil/inc/ThreadPool.h  2012-01-25 22:00:04 +0100
#@@ -1,2 +1 @@
#-#include <windows.h>
# /*******************************************************************************
#@@ -46,2 +45,3 @@
# #include <errno.h>
#+#include <windows.h>
#
#@@ -49,2 +49,3 @@
#        #include <time.h>
#+       #if !defined(__MINGW64__) && !`if gcc --version|grep "MinGW-W64">/dev/null; then echo 1; else echo 0; fi`
#        struct timezone
#@@ -54,2 +55,3 @@
#        };
#+       #endif
#        int gettimeofday(struct timeval *tv, struct timezone *tz);
#EOF
## fix missing Windows definitions in upnp/src/inc/util.h (version >= 1.6.8)
#mv upnp/src/inc/util.h upnp/src/inc/util.h.bak
#echo "#include <windows.h>" > upnp/src/inc/util.h
#cat upnp/src/inc/util.h.bak >> upnp/src/inc/util.h
## fix missing Windows definitions in upnp/src/inc/service_table.h (version >= 1.6.8)
#mv upnp/src/inc/service_table.h upnp/src/inc/service_table.h.bak
#echo "#include <windows.h>" > upnp/src/inc/service_table.h
#cat upnp/src/inc/service_table.h.bak >> upnp/src/inc/service_table.h
## fix missing Windows definitions in upnp/inc/upnp.h (version >= 1.6.8)
#mv upnp/inc/upnp.h upnp/inc/upnp.h.bak
#echo "#include <windows.h>" > upnp/inc/upnp.h
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "#include <_mingw_off_t.h>" >> upnp/inc/upnp.h
##fi
#echo "#include <unistd.h>" >> upnp/inc/upnp.h
#cat upnp/inc/upnp.h.bak >> upnp/inc/upnp.h
## fix missing Windows definitions in upnp/src/inc/unixutil.h (version >= 1.6.8)
#mv upnp/src/inc/unixutil.h upnp/src/inc/unixutil.h.bak
#echo "#include <windows.h>" > upnp/src/inc/unixutil.h
#cat upnp/src/inc/unixutil.h.bak >> upnp/src/inc/unixutil.h
## fix upnp/inc/UpnpInet.h
#mv upnp/inc/UpnpInet.h upnp/inc/UpnpInet.h.bak
#echo "#include <winsock2.h>" > upnp/inc/UpnpInet.h
#cat upnp/inc/UpnpInet.h.bak >> upnp/inc/UpnpInet.h
## fix get_random_info in upnp/src/uuid/sysdep.c (version <= 1.6.9)
#patch -ulbf upnp/src/uuid/sysdep.c << EOF
#--- upnp/src/uuid/sysdep.c  2010-10-15 17:56:22 +0200
#+++ upnp/src/uuid/sysdep.c  2010-10-21 21:44:24 +0200
#@@ -86,3 +86,3 @@
# void
#-get_random_info(char seed[16])
#+get_random_info(unsigned char seed[16])
# {
#EOF
## fix get_random_info in upnp/src/uuid/sysdep.c (version >= 1.6.10)
#patch -ulbf upnp/src/uuid/sysdep.c << EOF
#--- upnp/src/uuid/sysdep.c  2010-10-15 17:56:22 +0200
#+++ upnp/src/uuid/sysdep.c  2010-12-12 13:31:32 +0100
#@@ -75,3 +75,3 @@
# /*-----------------------------------------------------------------------------*/
#-void get_random_info(char seed[16])
#+void get_random_info(unsigned char seed[16])
# {
#EOF
## fix inet_ntop4 and inet_pton4 in upnp/src/inc/inet_pton.h
#patch -ulbf upnp/src/inc/inet_pton.h << EOF
#--- upnp/src/inc/inet_pton.h  2010-10-02 23:32:18 +0200
#+++ upnp/src/inc/inet_pton.h  2010-10-21 21:47:28 +0200
#@@ -42,3 +42,3 @@
#  */
#-extern const char *inet_ntop4(const u_char src, char *dst, socklen_t size);
#+extern const char *inet_ntop4(const u_char* src, char *dst, socklen_t size);
#
#@@ -60,3 +60,3 @@
#  */
#-extern inet_pton4(const char *src,u_char *dst);
#+extern int inet_pton4(const char *src,u_char *dst);
#
#EOF
## fix upnp/src/inet_pton.c
#patch -ulbf upnp/src/inet_pton.c << EOF
#--- upnp/src/inet_pton.c        2010-10-21 21:54:56 +0200
#+++ upnp/src/inet_pton.c        2010-10-21 21:55:04 +0200
#@@ -25,3 +25,3 @@
#
#-static const char *inet_ntop4(const u_char *src, char *dst, socklen_t size)
#+const char *inet_ntop4(const u_char *src, char *dst, socklen_t size)
# {
#@@ -147,3 +147,3 @@
#
#-static int inet_pton4(const char *src,u_char *dst)
#+int inet_pton4(const char *src,u_char *dst)
# {
#EOF
## fix missing uint16_t type in upnp/src/inc/miniserver.h (version >= 1.6.10)
#mv upnp/src/inc/miniserver.h upnp/src/inc/miniserver.h.bak
#echo "#include <stdint.h>" > upnp/src/inc/miniserver.h
#cat upnp/src/inc/miniserver.h.bak >> upnp/src/inc/miniserver.h
## fix missing uint32_t type in upnp/src/uuid/uuid.c (version >= 1.6.10)
#mv upnp/src/uuid/uuid.c upnp/src/uuid/uuid.c.bak
#echo "#include <stdint.h>" > upnp/src/uuid/uuid.c
#cat upnp/src/uuid/uuid.c.bak >> upnp/src/uuid/uuid.c
## fix upnp/src/inc/httpreadwrite.h (version >= 1.6.10)
#patch -ulbf upnp/src/inc/httpreadwrite.h << EOF
#--- upnp/src/inc/httpreadwrite.h  2010-12-11 19:59:24 +0100
#+++ upnp/src/inc/httpreadwrite.h  2010-12-12 13:25:40 +0100
#@@ -95,3 +95,3 @@
#  ************************************************************************/
#-int http_Connect( IN uri_type* destination_url, OUT uri_type *url );
#+SOCKET http_Connect( IN uri_type* destination_url, OUT uri_type *url );
#
#EOF
#
## fix missing exports in threadutil/inc/ThreadPool.h
#mv threadutil/inc/ThreadPool.h threadutil/inc/ThreadPool.h.bak
#sed -e "s/^\(int \)\(ThreadPool\|TP\)/EXPORT_SPEC \1\2/" threadutil/inc/ThreadPool.h.bak > threadutil/inc/ThreadPool.h
## fix missing exports in threadutil/inc/TimerThread.h
#mv threadutil/inc/TimerThread.h threadutil/inc/TimerThread.h.bak
#sed -e "s/^\(int \)\(TimerThread\)/EXPORT_SPEC \1\2/" threadutil/inc/TimerThread.h.bak > threadutil/inc/TimerThread.h
## fix missing exports in threadutil/inc/LinkedList.h
#mv threadutil/inc/LinkedList.h threadutil/inc/LinkedList.h.bak
#sed -e "s/^\(int \|ListNode *\* *\|void *\* *\|long \)\(List\)/EXPORT_SPEC \1\2/" threadutil/inc/LinkedList.h.bak > threadutil/inc/LinkedList.h
#
## fix missing strerror_r in upnp/src/inc/upnputil.h (version >= 1.6.19)
#patch -ulbf upnp/src/inc/upnputil.h << EOF
#--- upnp/src/inc/upnputil.h  2012-04-29 00:32:06 +0200
#+++ upnp/src/inc/upnputil.h  2013-11-16 09:32:22 +0100
#@@ -132,3 +132,4 @@
#                #define usleep(a)               Sleep((a)/1000)
#-               #define strerror_r(a,b,c)       (strerror_s((b),(c),(a)))
#+               //#define strerror_r(a,b,c)     (strerror_s((b),(c),(a)))
#+               #define strerror_r(buf,buflen,errnum) {strncpy(buf,strerror(errnum),buflen-1);buf[buflen-1]=0;}
#        #else
#EOF
#
## fix missing getaddrinfo/freeaddrinfo in upnp/src/genlib/net/uri/uri.c (version >= 1.6.19)
#mv upnp/src/genlib/net/uri/uri.c upnp/src/genlib/net/uri/uri.c.bak
#cat > upnp/src/genlib/net/uri/uri.c << EOF
##define _WIN32_WINNT 0x0501
##include <ws2tcpip.h>
#EOF
#cat upnp/src/genlib/net/uri/uri.c.bak >> upnp/src/genlib/net/uri/uri.c
## fix invalid number of arguments to sched_setscheduler() in threadutil/src/ThreadPool.c
#####src/ThreadPool.c:267:11: error: too few arguments to function 'sched_setscheduler'
#if ( grep -q builtin $MINGWPREFIX/var/lib/packages/pthreads/version ); then
#patch -ulbf threadutil/src/ThreadPool.c << EOF
#--- threadutil/src/ThreadPool.c  2012-04-12 00:44:50.000000000 +0200
#+++ threadutil/src/ThreadPool.c  2016-12-22 09:42:10.255121100 +0100
#@@ -38,2 +38,4 @@
#        #include <sys/param.h>
#+#else
#+       #include <time.h>
# #endif
#@@ -265,4 +267,2 @@
#        retVal = 0;
#-#elif defined(WIN32)
#-       retVal = sched_setscheduler(0, in);
# #elif defined(_POSIX_PRIORITY_SCHEDULING) && _POSIX_PRIORITY_SCHEDULING > 0
#@@ -417,5 +417,3 @@
#        gettimeofday(&t, NULL);
#-#if defined(WIN32)
#-       srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id().p);
#-#elif defined(BSD) || defined(__OSX__) || defined(__APPLE__) || defined(__FreeBSD_kernel__)
#+#if defined(WIN32) || defined(BSD) || defined(__OSX__) || defined(__APPLE__) || defined(__FreeBSD_kernel__)
#        srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id());
#EOF
#fi
#
##autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
### fix functions not being exported in ixml/src/
##mv ixml/Makefile.in ixml/Makefile.in.bak
##sed -e "s/^\(DEFS = .*\)/\1 -DLIBUPNP_EXPORTS/" ixml/Makefile.in.bak > ixml/Makefile.in
##sed -i.bak "s/^\(\(const \|unsigned \)*[^ \t,]* \**ixml[^ ]*(\)/EXPORT_SPEC \1/" `find ixml/src -iname \*.c`
###sed -i.bak "s/^\(\(const \|unsigned \)*[^ \t,]* \**ixml[^ ]*(\)/EXPORT_SPEC \1/" `find upnp/src/genlib -iname \*.c`
###sed -i.bak "s/^\(\(const \|unsigned \)*[^ \t,]* \**ixml[^ ]*(\)/EXPORT_SPEC \1/" `find upnp/src/gena -iname \*.c`
###sed -i.bak "s/^\(\(const \|unsigned \)*[^ \t,]* \**ixml[^ ]*(\)/EXPORT_SPEC \1/" `find upnp/src/api -iname \*.c`
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --disable-device --disable-webserver --disable-samples CFLAGS="-I`pwd`" LDFLAGS="-Wl,--enable-auto-import -lws2_32 -no-undefined -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --disable-device --disable-webserver --disable-samples CFLAGS="-I`pwd`" LDFLAGS="-Wl,--compat-implib -Wl,--enable-auto-import -lws2_32 -no-undefined -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --disable-device --disable-webserver --disable-samples CFLAGS="-I`pwd`" LDFLAGS="-lws2_32" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --disable-device --disable-webserver --disable-samples CFLAGS="-I`pwd`" LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,-no-undefined -Wl,--enable-auto-import" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-ipv6 --disable-debug --disable-device --disable-webserver --disable-samples CFLAGS="-I`pwd`" LDFLAGS="-Wl,--as-needed -lws2_32 -Wl,-no-undefined -Wl,--enable-auto-import" &&
# wl-showstatus build-install &&
# # fix building DLLs
# mv libtool libtool.bak &&
# sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# # fix failure to include winsock2.h before windows.h
# echo "#include <winsock2.h>" >> upnp/src/inc/config.h &&
# ## fix missing off_t
# ##echo "#include <sys/types.h>" >> upnp/src/inc/config.h &&
# #echo "#include <unistd.h>" >> upnp/src/inc/config.h &&
# make CFLAGS="-DWIN32 -DLIBUPNP_EXPORTS" LIBS="-Wl,--as-needed -lws2_32 -liphlpapi -lpthread" &&
# ( make all install-strip || make -j1 all install-strip ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-`echo $VERSION|sed -e "s/-.*$//"`



export NAME="libupnp"
export STATUS=
export URL=http://pupnp.sourceforge.net/
#export URL=https://github.com/pupnp/pupnp
export BASENAME=libupnp
export DESCRIPTION="The portable SDK for UPnP(TM) Devices (libupnp) provides developers with an API and open source code for building control points, devices, and bridges that are compliant with Version 1.0 of the Universal Plug and Play Device Architecture Specification and support several operating systems like Linux, *BSD, Solaris and others."
export CATEGORY=communication
export TYPE=library
#export VERSION=1.6.25
#export VERSIONDATE=20191205
#export VERSION=1.8.2
#export VERSIONDATE=20171114
#export VERSION=1.8.3
#export VERSIONDATE=20171114
#export VERSION=1.8.6
#export VERSIONDATE=20191205
#export VERSION=1.8.7
#export VERSIONDATE=20200409
#export VERSION=1.10.1
#export VERSIONDATE=20191205
#export VERSION=1.12.0
#export VERSIONDATE=20200123
#export VERSION=1.12.1
#export VERSIONDATE=20200409
#export VERSION=1.14.0
#export VERSIONDATE=20200721
#export VERSION=1.14.1
#export VERSIONDATE=20210210
#export VERSION=1.14.2
#export VERSIONDATE=20210301
#export VERSION=1.14.4
#export VERSIONDATE=20210330
#export VERSION=1.14.5
#export VERSIONDATE=20210407
####upnp/src/genlib/net/http/httpreadwrite.c:58:10: fatal error: alloca.h: No such file or directory
#export VERSION=1.14.6
#export VERSIONDATE=20210421
#export VERSION=1.14.7
#export VERSIONDATE=20210509
#export VERSION=1.14.8
#export VERSIONDATE=20210808
#export VERSION=1.14.9
#export VERSIONDATE=20210809
#export VERSION=1.14.10
#export VERSIONDATE=20210818
export VERSION=1.14.12
export VERSIONDATE=20210928
wl-showstatus --package-version
export DEPENDANCIES=pthreads,openssl,xmlsec1
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
#export LICENSEFILE=LICENSE
export LICENSEFILE=COPYING
export LICENSETYPE=BSD
#export DOWNLOADURL="http://sourceforge.net/projects/pupnp/files/pupnp/ libUPnP%20"
#export DOWNLOADURL="https://github.com/mrjimenez/pupnp/releases"
export DOWNLOADURL="https://github.com/pupnp/pupnp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/pupnp/pupnp/libUPnP%20$(echo $VERSION|sed -e "s/-.*$//")/pupnp-release-$VERSION.zip
#export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/pupnp/pupnp/libUPnP%20$(echo $VERSION|sed -e "s/-.*$//")/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://github.com/mrjimenez/pupnp/archive/release-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/mrjimenez/pupnp/releases/download/release-$VERSION/$BASENAME-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://github.com/pupnp/pupnp/releases/download/release-$VERSION/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://github.com/pupnp/pupnp/archive/refs/tags/release-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#unzip -oq $TARBALLDIR/$BASENAME/pupnp-release-$VERSION.zip
#tar xfz $TARBALLDIR/$BASENAME/release-$VERSION.tar.gz
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
tar xfz $TARBALLDIR/$BASENAME/release-$VERSION.tar.gz
cd pupnp-release-$VERSION
# fix redefinition of struct timezone in upnp/src/threadutil/ThreadPool.h (version >= 1.8.2)
patch -ulbf upnp/src/threadutil/ThreadPool.h << EOF
@@ -47,3 +47,3 @@

-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW64_VERSION_MAJOR)
        #include <time.h>
EOF
## fix upnp/src/threadutil/ThreadPool.c (version = 1.8.2)
#patch -ulbf upnp/src/threadutil/ThreadPool.c << EOF
#@@ -259,3 +259,3 @@
#        int retVal = 0;
#-#ifdef __CYGWIN__
#+#if defined(__CYGWIN__) || defined(__MINGW32__)
#        /* TODO not currently working... */
#@@ -417,5 +417,5 @@
#        gettimeofday(&t, NULL);
#-#if defined(_WIN32)
#+#if defined(_WIN32) && $(if grep -q builtin /custombuilt/var/lib/packages/pthreads/version; then echo 0; else echo 1; fi)
#        srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id().p);
#-#elif defined(BSD) || defined(__OSX__) || defined(__APPLE__) || defined(__FreeBSD_kernel__)
#+#elif defined(BSD) || defined(__OSX__) || defined(__APPLE__) || defined(__FreeBSD_kernel__) || defined(__MINGW32__)
#        srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id());
#@@ -1235,3 +1235,3 @@
#
#-#ifdef _WIN32
#+#if defined(_WIN32) && !defined(__MINGW32__)
#        #if defined(_MSC_VER) || defined(_MSC_EXTENSIONS)
#EOF
## fix upnp/src/threadutil/ThreadPool.c (version >= 1.8.2 <= 1.10.1)
#patch -ulbf upnp/src/threadutil/ThreadPool.c << EOF
#@@ -259,3 +259,10 @@
#        int retVal = 0;
#-#ifdef __CYGWIN__
#+#ifdef __MINGW32__
#+       struct sched_param current;
#+       int sched_result;
#+       memset(&current, 0, sizeof(current));
#+       current.sched_priority = sched_get_priority_min(DEFAULT_POLICY);
#+       sched_result = sched_setscheduler(0, in, &current);
#+       retVal = (sched_result != -1 || errno == EPERM) ? 0 : errno;
#+#elif defined(__CYGWIN__) && !defined(__MINGW32__)
#        /* TODO not currently working... */
#@@ -417,5 +424,5 @@
#        gettimeofday(&t, NULL);
#-#if defined(_WIN32)
#+#if defined(_WIN32) && 0
#        srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id().p);
#-#elif defined(BSD) || defined(__OSX__) || defined(__APPLE__) || defined(__FreeBSD_kernel__)
#+#elif defined(BSD) || defined(__OSX__) || defined(__APPLE__) || defined(__FreeBSD_kernel__) || defined(__MINGW32__)
#        srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id());
#@@ -649,3 +656,5 @@
#        ithread_attr_setstacksize(&attr, tp->attr.stackSize);
#+#ifndef __MINGW32__
#        ithread_attr_setdetachstate(&attr, ITHREAD_CREATE_DETACHED);
#+#endif
#        rc = ithread_create(&temp, &attr, WorkerThread, tp);
#@@ -1235,3 +1244,3 @@
#
#-#ifdef _WIN32
#+#if defined(_WIN32) && !defined(__MINGW32__)
#        #if defined(_MSC_VER) || defined(_MSC_EXTENSIONS)
#EOF
# fix upnp/src/threadutil/ThreadPool.c (version >= 1.12.0)
patch -ulbf upnp/src/threadutil/ThreadPool.c << EOF
@@ -259,3 +259,10 @@
        int retVal = 0;
-#ifdef __CYGWIN__
+#if defined(__MINGW32__)
+        struct sched_param current;
+        int sched_result;
+        memset(&current, 0, sizeof(current));
+        current.sched_priority = sched_get_priority_min(DEFAULT_POLICY);
+        sched_result = sched_setscheduler(0, in, &current);
+        retVal = (sched_result != -1 || errno == EPERM) ? 0 : errno;
+#elif defined(__CYGWIN__)
        /* TODO not currently working... */
@@ -417,3 +424,3 @@
        gettimeofday(&t, NULL);
-#if defined(_WIN32)
+#if defined(_WIN32) && !defined(__MINGW32__)
        srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id().p);
@@ -421,3 +428,3 @@
        srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id());
-#elif defined(__linux__) || defined(__sun) || defined(__CYGWIN__) || defined(__GLIBC__)
+#elif defined(__linux__) || defined(__sun) || defined(__CYGWIN__) || defined(__GLIBC__) || defined(__MINGW32__)
        srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id());
@@ -1230,3 +1237,3 @@

-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
        #if defined(_MSC_VER) || defined(_MSC_EXTENSIONS)
EOF
# fix missing PIP_ADAPTER_ADDRESSES in upnp/src/api/upnpapi.c (version = 1.8.2)
mv upnp/src/api/upnpapi.c upnp/src/api/upnpapi.c.bak &&
echo "#define _WIN32_WINNT 0x0501" > upnp/src/api/upnpapi.c &&
cat upnp/src/api/upnpapi.c.bak >> upnp/src/api/upnpapi.c
# fix missing getaddrinfo/freeaddrinfo in upnp/src/genlib/net/uri/uri.c (version >= 1.8.2)
mv upnp/src/genlib/net/uri/uri.c upnp/src/genlib/net/uri/uri.c.bak &&
echo "#define _WIN32_WINNT 0x0501" > upnp/src/genlib/net/uri/uri.c &&
cat upnp/src/genlib/net/uri/uri.c.bak >> upnp/src/genlib/net/uri/uri.c
# fix missing strerror_s in upnp/src/inc/upnputil.h (version >= 1.8.3)
if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then
patch -ulbf upnp/src/inc/upnputil.h << EOF
@@ -133 +133 @@
-               #define strerror_r(a,b,c)       (strerror_s((b),(c),(a)))
+               #define strerror_r(a,b,c)       (strncpy(b,strerror(a),c-1),b[c-1]=0,b)
EOF
fi
# fix missing inet_aton in upnp/src/ssdp/ssdp_device.c (version >= 1.12.1)
mv upnp/src/ssdp/ssdp_device.c upnp/src/ssdp/ssdp_device.c.bak &&
echo "#define inet_aton(opt,bind) ((bind)->s_addr = inet_addr(opt))" > upnp/src/ssdp/ssdp_device.c &&
cat upnp/src/ssdp/ssdp_device.c.bak >> upnp/src/ssdp/ssdp_device.c
# fix missing inet_aton in upnp/src/ssdp/ssdp_ctrlpt.c (version >= 1.12.1)
mv upnp/src/ssdp/ssdp_ctrlpt.c upnp/src/ssdp/ssdp_ctrlpt.c.bak &&
echo "#define inet_aton(opt,bind) ((bind)->s_addr = inet_addr(opt))" > upnp/src/ssdp/ssdp_ctrlpt.c &&
cat upnp/src/ssdp/ssdp_ctrlpt.c.bak >> upnp/src/ssdp/ssdp_ctrlpt.c
# fix upnp/src/genlib/net/http/httpreadwrite.c (version >= 1.14.0)
patch -ulbf upnp/src/genlib/net/http/httpreadwrite.c << EOF
@@ -57,3 +57,5 @@

+#ifndef _WIN32
 #include <alloca.h>
+#endif
 #include <assert.h>
EOF
# fix upnp/src/genlib/miniserver/miniserver.c (version >= 1.14.6)
patch -ulbf upnp/src/genlib/miniserver/miniserver.c << EOF
@@ -66,3 +66,7 @@
        #include <sys/types.h>
+#ifdef _WIN32
+       #define in_port_t uint16_t
+#else
        #include <sys/socket.h>
+#endif

EOF
## skip building upnp/unittest (version >= 1.8.2)
#cat > upnp/unittest/Makefile.am << EOF
#clean:
#all:
#install:
##install-strip:
#EOF
## fix building DLLs (version >= 1.8.2)
#sed -i.bak "s/^AM_CPPFLAGS\s*=/& -DLIBUPNP_EXPORTS /" ixml/Makefile.am
#sed -i.bak "s/^AM_CPPFLAGS\s*=/& -DLIBUPNP_EXPORTS /" upnp/Makefile.am
# skip building upnp/unittest (version >= 1.8.3)
cat > upnp/unittest/Makefile.in << EOF
clean:
all:
install:
install-strip:
EOF
# fix building DLLs (version >= 1.8.3)
sed -i.bak "s/^AM_CPPFLAGS\s*=/& -DLIBUPNP_EXPORTS /" ixml/Makefile.in
sed -i.bak "s/^AM_CPPFLAGS\s*=/& -DLIBUPNP_EXPORTS /" upnp/Makefile.in
## fix building DLLs (version >= 1.8.3)
#sed -i.bak "s/^AM_CPPFLAGS\s*=/& -DLIBUPNP_EXPORTS /" ixml/Makefile.am
#sed -i.bak "s/^AM_CPPFLAGS\s*=/& -DLIBUPNP_EXPORTS /" upnp/Makefile.am
wl-showstatus configure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-open_ssl --disable-ipv6 --disable-debug --disable-device --disable-webserver --disable-samples CFLAGS="-I$(pwd)" LDFLAGS="-Wl,--as-needed -lws2_32 -liphlpapi -lssleay32 -lxmlsec1-openssl -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-open_ssl --enable-ipv6 --disable-debug --disable-device --disable-webserver --disable-samples CFLAGS="-I$(pwd)" LDFLAGS="-Wl,--as-needed -lws2_32 -liphlpapi -lssleay32 -lxmlsec1-openssl -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-open_ssl --enable-ipv6 --enable-webserver --enable-device --disable-debug --disable-samples CFLAGS="-I$(pwd)" LDFLAGS="-Wl,--as-needed -lws2_32 -liphlpapi -lssleay32 -lxmlsec1-openssl -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-open_ssl --disable-ipv6 --enable-webserver --enable-device --disable-debug --disable-samples --disable-largefile CFLAGS="-I$(pwd)" LDFLAGS="-Wl,--as-needed -lws2_32 -liphlpapi -lssleay32 -lxmlsec1-openssl -Wl,-no-undefined" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-open_ssl --enable-ipv6 --enable-reuseaddr --disable-blocking-tcp-connections --enable-webserver --enable-device --disable-debug --disable-samples --disable-largefile CFLAGS="-I$(pwd)" LDFLAGS="-Wl,--as-needed -lws2_32 -liphlpapi -lssleay32 -lxmlsec1-openssl -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-open_ssl --enable-ipv6 --enable-webserver --enable-device --disable-debug --disable-samples $(if ! echo -e "#include<_mingw.h>\nint v=__MINGW64_VERSION_MAJOR;" | ${CC:-gcc} -c -xc - -o /dev/null &> /dev/null; then echo "--disable-largefile"; fi) CFLAGS="-I$(pwd)" LDFLAGS="-Wl,--as-needed -lws2_32 -liphlpapi -lssleay32 -lxmlsec1-openssl -Wl,-no-undefined" &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 cp -u upnp/src/threadutil/*.h $INSTALLPREFIX/include/upnp/ &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf pupnp-release-$VERSION
####Note: IPv6 compiles but doesn't work (bind errors)



