export NAME="Shaderc"
export STATUS=
export URL=https://github.com/google/shaderc
export BASENAME=shaderc
export DESCRIPTION="A collection of tools, libraries and tests for shader compilation."
export CATEGORY=development
export TYPE=application
#export VERSION=2021.0
#export VERSIONDATE=20210507
#export VERSION=2021.1
#export VERSIONDATE=20210622
#export VERSION=2021.2
#export VERSIONDATE=20210826
#export VERSION=2021.3
#export VERSIONDATE=20220122
#export VERSION=2022.1
#export VERSIONDATE=20220203
#export VERSION=2022.2
#export VERSIONDATE=20220813
#export VERSION=2022.3
#export VERSIONDATE=20221014
#export VERSION=2022.4
#export VERSIONDATE=20221201
#export VERSION=2023.1
#export VERSIONDATE=20230117
#export VERSION=2023.2
#export VERSIONDATE=20230119
#export VERSION=2023.3
#export VERSIONDATE=20230318
#export VERSION=2023.4
#export VERSIONDATE=20230525
#export VERSION=2023.5
#export VERSIONDATE=20230720
#export VERSION=2023.6
#export VERSIONDATE=20230810
#export VERSION=2023.7
#export VERSIONDATE=20231014
#export VERSION=2023.8
#export VERSIONDATE=20240104
#export VERSION=2024.0
#export VERSIONDATE=20240309
#export VERSION=2024.1
#export VERSIONDATE=20240501
#export VERSION=2024.2
#export VERSIONDATE=20240912
export VERSION=2024.3
export VERSIONDATE=20240924
#export VERSION=2024.4
#export VERSIONDATE=20241210
#export VERSION=2025.1
#export VERSIONDATE=20250228
####libshaderc_util/src/spirv_tools_wrapper.cc:44:18: error: 'SPV_ENV_VULKAN_1_4' was not declared in this scope
wl-showstatus --package-version
export DEPENDENCIES=spirv-tools,glslang,effcee
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
#export DOWNLOADURL="https://github.com/google/shaderc/releases/"
export DOWNLOADURL="https://github.com/google/shaderc/tags/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/google/shaderc/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# manually create build-version.inc
mkdir -p build_win
cat > build_win/build-version.inc << EOF
"shaderc TODO\n"
"spirv-tools TODO\n"
"glslang TODO\n"
EOF
# ignore issue detecting spirv-tools in third_party/CMakeLists.txt
sed -i.bak -e "s/\(message(\)FATAL_ERROR\(.*SPIRV-Tools was not found - required for compilation\)/\1WARNING\2/" third_party/CMakeLists.txt
# ignore issue detecting glslang in third_party/CMakeLists.txt
sed -i.bak2 -e "s/\(message(\)FATAL_ERROR\(.*glslang was not found - required for compilation\)/\1WARNING\2/" third_party/CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHADERC_ENABLE_WERROR_COMPILE:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DSHADERC_SKIP_EXAMPLES:BOOL=ON -DSHADERC_SKIP_TESTS:BOOL=ON -DSPIRV_SKIP_TESTS:BOOL=ON -DASCIIDOCTOR_EXE:FILEPATH= -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/glslang" -DSHADERC_SPIRV_TOOLS_DIR:PATH=$PWD/fake_spirvtools -DSHADERC_GLSLANG_DIR:PATH=$PWD/fake_glslang -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHADERC_ENABLE_WERROR_COMPILE:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DSHADERC_SKIP_EXAMPLES:BOOL=ON -DSHADERC_SKIP_TESTS:BOOL=ON -DSPIRV_SKIP_TESTS:BOOL=ON -DASCIIDOCTOR_EXE:FILEPATH= -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/glslang" -DCMAKE_{SHARED,MODULE,EXE}_LINKER_FLAGS:STRING="-lglslang $(pkg-config --libs SPIRV-Tools) -lSPIRV" -S. -Bbuild_win &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHADERC_ENABLE_WERROR_COMPILE:BOOL=OFF -DPython_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DSHADERC_SKIP_EXAMPLES:BOOL=ON -DSHADERC_SKIP_TESTS:BOOL=ON -DSPIRV_SKIP_TESTS:BOOL=ON -DASCIIDOCTOR_EXE:FILEPATH= -DCMAKE_CXX_FLAGS:STRING="-I$MINGWPREFIX/include/glslang" -DCMAKE_{SHARED,MODULE,EXE}_LINKER_FLAGS:STRING="-lglslang $(pkg-config --libs SPIRV-Tools) -lSPIRV" -S. -Bbuild_win &&
 #-Dspirv-tools_SOURCE_DIR:PATH="$(cygpath -m $MINGWPREFIX)" -Dglslang_SOURCE_DIR:PATH="$(cygpath -m $MINGWPREFIX)" 
 ## avoid update_build_version.py (version <= 2023.7)
 #sed -i.bak -e "s/\(COMMAND\s*=\s*\).*update_build_version.py.*$/\1true/" build_win/build.ninja &&
 # avoid update_build_version.py (version >= 2023.7)
 sed -i.bak -e "s/\(COMMAND\s*=\s*\).*\([^ ]*\.py\).*$/\1echo Skipping \2/" build_win/build.ninja &&
 ## fix execution of Python scripts
 #sed -i.bak2 -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix execution of Python scripts (version >= 2023.7)
 #sed -i.bak2 -e "s?\(COMMAND *=.*\&\& *\)\([^ ]*\.py\)?\1$(cygpath -m $PYDIR/python.exe) \2?" build_win/build.ninja &&
 # fix missing link libraries
 sed -i.bak3 -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed $(pkg-config --libs-only-l SPIRV-Tools) -lSPIRV.dll -lglslang.dll /" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 cp -u $INSTALLPREFIX/lib/libshaderc_shared.dll.a $INSTALLPREFIX/lib/libshaderc.dll.a &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: properly run update_build_version.py to generate build-version.inc



