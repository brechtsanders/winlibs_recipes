#export NAME="geocode-glib"
#export STATUS=
#export URL=https://developer.gnome.org/geocode-glib/stable/
#export BASENAME=geocode-glib
#export DESCRIPTION="geocoding and reverse geocoding GLib library using Yahoo! Place Finder"
#export CATEGORY=
#export TYPE=library
##export VERSION=3.12.0
##export VERSIONDATE=20140430
##export VERSION=3.12.2
##export VERSIONDATE=20140625
##export VERSION=3.14.0
##export VERSIONDATE=20141014
##export VERSION=3.14.1
##export VERSIONDATE=20160131
##export VERSION=3.16.0
##export VERSIONDATE=20150325
##export VERSION=3.16.2
##export VERSIONDATE=20150513
##export VERSION=3.16.3
##export VERSIONDATE=20160131
##export VERSION=3.17.1
##export VERSIONDATE=20150417
##export VERSION=3.17.90
##export VERSIONDATE=20150816
##export VERSION=3.18.0
##export VERSIONDATE=20150920
##export VERSION=3.18.1
##export VERSIONDATE=20160131
##export VERSION=3.18.2
##export VERSIONDATE=20160221
##export VERSION=3.19.90
##export VERSIONDATE=20160215
##export VERSION=3.20.0
##export VERSIONDATE=20160322
##export VERSION=3.20.1
##export VERSIONDATE=20160412
##export VERSION=3.23.90
##export VERSIONDATE=20170207
#export VERSION=3.24.0
#export VERSIONDATE=20170815
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,libjson-glib,libsoup-2.4
#export OPTIONALDEPENDENCIES=gobject-introspection
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING.LIB
#export LICENSETYPE=LGPL
##export DOWNLOADURL="https://github.com/GNOME/geocode-glib/releases"
#export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/geocode-glib/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=https://github.com/GNOME/geocode-glib/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
#cd $BASENAME-$VERSION
## fix missing gtk-doc.make
##touch gtk-doc.make
## fix missing langinfo.h
#echo "#include <libintl.h>" > langinfo.h
## fix missing _geocode_parse_resolve_json
#mv geocode-glib/geocode-glib.symbols geocode-glib/geocode-glib.symbols.bak
#grep -v _geocode_parse_resolve_json geocode-glib/geocode-glib.symbols.bak > geocode-glib/geocode-glib.symbols
#wl-showstatus configure &&
##./autogen.sh &&
##autoreconf -f -i -I $MINGWPREFIX/share/aclocal &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-introspection=no &&
# wl-showstatus build-install &&
# make install-strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="geocode-glib"
export STATUS=
export URL=https://developer.gnome.org/geocode-glib/stable/
export BASENAME=geocode-glib
export DESCRIPTION="geocoding and reverse geocoding GLib library using Yahoo! Place Finder"
export CATEGORY=
export TYPE=library
#export VERSION=3.25.4.1
#export VERSIONDATE=20170720
#export VERSION=3.26.0
#export VERSIONDATE=20180605
#export VERSION=3.26.1
#export VERSIONDATE=20190315
#export VERSION=3.26.2
#export VERSIONDATE=20200309
#export VERSION=3.26.3
#export VERSIONDATE=20220701
export VERSION=3.26.4
export VERSIONDATE=20220808
####geocode-glib/geocode-glib.c:30:10: fatal error: langinfo.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=glib2,libjson-glib,libsoup-2.4
export OPTIONALDEPENDENCIES=gobject-introspection
export BUILDDEPENDENCIES=meson
export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=meson,gtk-doc
#export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/GNOME/geocode-glib/releases"
export DOWNLOADURL="http://ftp.gnome.org/pub/GNOME/sources/geocode-glib/"
#export DOWNLOADURL="https://gitlab.gnome.org/GNOME/geocode-glib/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/GNOME/geocode-glib/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://ftp.gnome.org/pub/gnome/sources/$BASENAME/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix missing langinfo.h in geocode-glib/geocode-glib.c (version >= 3.26.2)
patch -ulbf geocode-glib/geocode-glib.c << EOF
@@ -29,3 +29,7 @@
 #include <libsoup/soup.h>
+#ifdef _WIN32
+#include <locale.h>
+#else
 #include <langinfo.h>
+#endif
 #include <geocode-glib/geocode-glib-private.h>
@@ -222,3 +226,7 @@
 {
+#ifdef _WIN32
+       return geocode_object_get_lang_for_locale (setlocale (LC_ALL, NULL));
+#else
        return geocode_object_get_lang_for_locale (setlocale (LC_MESSAGES, NULL));
+#endif
 }
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library static -Denable-installed-tests=false -Denable-introspection=false -Denable-gtk-doc=false . build_static &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library shared -Denable-installed-tests=false -Denable-introspection=false -Denable-gtk-doc=false . build_shared &&
 # fix slash/backslash path issue when calling Python from Ninja
 sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_static install &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -C build_shared install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



