#export NAME="gnuplot"
#export STATUS=
#export URL=http://www.gnuplot.info/
#export BASENAME=gnuplot
#export DESCRIPTION="Gnuplot is a portable command-line driven interactive data and function plotting utility. It was originally intended as to allow scientists and students to visualize mathematical functions and data. It does this job pretty well, but has grown to support many non-interactive uses, including web scripting and integration as a plotting engine for third-party applications like Octave."
#export CATEGORY=graphics
#export TYPE=application
##export VERSION=4.2.3
##export VERSION=4.2.4
##export VERSION=4.2.5
##export VERSION=4.2.6
##export VERSION=4.4.0
#export VERSION=4.6.0
#export VERSIONDATE=20120312
#wl-showstatus --package-version
#export DEPENDENCIES=libgd
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=Copyright
#export LICENSETYPE=
##export DOWNLOADURL="http://sourceforge.net/projects/gnuplot/files/ gp win32.zip"
#export DOWNLOADURL="http://sourceforge.net/projects/gnuplot/files/gnuplot/ gp win32.zip"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/gnuplot/gnuplot/$VERSION/$BASENAME-$VERSION.tar.gz
##wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##cd $BASENAME-$VERSION
##WXCFG=$MINGWPREFIX/wx/lib/gcc_dll/mswu ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-x --with-linux-vga CFLAGS="-DWIN32" &&
## make install-strip &&
##    echo OK
#####Makefile:125: *** multiple target patterns.  Stop.
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/gnuplot/gp`echo $VERSION|sed 's/\.//g'`win32.zip
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mkdir -p $INSTALLPREFIX
#unzip -oq $TARBALLDIR/$BASENAME/gp`echo $VERSION|sed 's/\.//g'`win32.zip -d $INSTALLPREFIX gnuplot/Copyright gnuplot/bin/*
#mv $INSTALLPREFIX/gnuplot/* $INSTALLPREFIX/ && 
# rmdir $INSTALLPREFIX/gnuplot && 
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION
#####WARNING: binary (32-bit) package, comes with DLLs that may overwrite or conflict with existing DLLs



#export NAME="gnuplot"
#export STATUS=
#export URL=http://www.gnuplot.info/
#export BASENAME=gnuplot
#export DESCRIPTION="Gnuplot is a portable command-line driven interactive data and function plotting utility. It was originally intended as to allow scientists and students to visualize mathematical functions and data. It does this job pretty well, but has grown to support many non-interactive uses, including web scripting and integration as a plotting engine for third-party applications like Octave."
#export CATEGORY=graphics
#export TYPE=application
##export VERSION=4.2.3
#export VERSION=4.2.4
#export VERSIONDATE=
#wl-showstatus --package-version
#export DEPENDENCIES=libgd
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=Copyright
#export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/gnuplot/files/ gp win32.zip"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/gnuplot/gnuplot-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/gnuplot/gp`echo $VERSION|sed 's/\.//g'`win32.zip
##wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xz --force-local -f $TARBALLDIR/$BASENAME/gnuplot-$VERSION.tar.gz
#cd gnuplot-$VERSION
#wl-showstatus configure &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-D_Windows"
##cat >> config.h << EOF
###include <windows.h>
###define sleep(t) _sleep((t) * 1000)
###include "src/ansichek.h"
###include "src/syscfg.h"
###include "src/win/winmain.h"
##EOF
##make install
#ln -s config/config.mgw config.h
#touch src/wgnuplot.hlp
#make -C src -f ../config/makefile.mgw HCW="echo #hcw"
#make -C src -f ../config/makefile.mgw HCW="echo #hcw" DESTDIR=$INSTALLPREFIX/bin install
#rm $INSTALLPREFIX/bin/wgnuplot.hlp
#$INSTALLPREFIX/bin/pgnuplot
#####The procedure entry point _imp__gdFontGetGiant@0 could not be located in the dynamic link library bgd.dll.
##../makeDevPak.sh
#cd ..



export NAME="gnuplot"
export STATUS=
export URL=http://www.gnuplot.info/
export BASENAME=gnuplot
export DESCRIPTION="Gnuplot is a portable command-line driven interactive data and function plotting utility. It was originally intended as to allow scientists and students to visualize mathematical functions and data. It does this job pretty well, but has grown to support many non-interactive uses, including web scripting and integration as a plotting engine for third-party applications like Octave."
export CATEGORY=graphics
export TYPE=application
#export VERSION=4.4.3
#export VERSIONDATE=20110809
#export VERSION=4.4.4
#export VERSIONDATE=20111113
#export VERSION=4.6.0
#export VERSIONDATE=20120309
#export VERSION=4.6.1
#export VERSIONDATE=20121001
#export VERSION=4.6.2
#export VERSIONDATE=20130315
#export VERSION=4.6.3
#export VERSIONDATE=20130419
export VERSION=4.6.4
export VERSIONDATE=20131010
#export VERSION=4.6.5
#export VERSIONDATE=20140224
#export VERSION=4.6.6
#export VERSIONDATE=20140922
#export VERSION=4.6.7
#export VERSIONDATE=20150429
####wxt_gui.co:wxt_gui.cpp:(.text+0x5275): undefined reference to `wxOnAssert(char const*, int, char const*, char const*, wchar_t const*)'
export DEPENDENCIES=readline,zlib,libgd,lua,wxwidgets,cairo
#export VERSION=5.0.0
#export VERSIONDATE=20150329
#export VERSION=5.0.1
#export VERSIONDATE=20150608
#export VERSION=5.0.2
#export VERSIONDATE=20160107
#export VERSION=5.0.3
#export VERSIONDATE=20160222
#export VERSION=5.0.4
#export VERSIONDATE=20160721
#export VERSION=5.0.5
#export VERSIONDATE=20161010
#export VERSION=5.0.6
#export VERSIONDATE=20170318
#export VERSION=5.0.7
#export VERSIONDATE=20170816
#export VERSION=5.2.0
#export VERSIONDATE=20170904
#export VERSION=5.2.1
#export VERSIONDATE=20171029
#export VERSION=5.2.2
#export VERSIONDATE=20171116
#export VERSION=5.2.3
#export VERSIONDATE=20180505
#export VERSION=5.2.4
#export VERSIONDATE=20180604
#export VERSION=5.2.5
#export VERSIONDATE=20181007
#export VERSION=5.4.0
#export VERSIONDATE=20200717
#export VERSION=5.4.1
#export VERSIONDATE=20201201
#export VERSION=5.4.2
#export VERSIONDATE=20210606
#export VERSION=5.4.3
#export VERSIONDATE=20220107
#export VERSION=5.4.4
#export VERSIONDATE=20220718
#export VERSION=5.4.5
#export VERSIONDATE=20221002
#export VERSION=5.4.7
#export VERSIONDATE=20230522
#export VERSION=5.4.8
#export VERSIONDATE=20230608
####src/libcerf.c:15:47: fatal error: cerf.h: No such file or directory
wl-showstatus --package-version
#export DEPENDENCIES=readline,zlib,libgd,lua,wxwidgets,cairo,libcerf
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cabextract
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=Copyright
export LICENSETYPE=
export DOWNLOADURL="http://sourceforge.net/projects/gnuplot/files/gnuplot/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
wl-wait4deps
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/gnuplot/gnuplot/$VERSION/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL="http://downloads.sourceforge.net/project/gnuplot/gnuplot/$VERSION/$BASENAME-$VERSION.tar.gz http://download.microsoft.com/download/0/A/9/0A939EF6-E31C-430F-A3DF-DFAE7960D564/htmlhelp.exe"
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix src/wxterminal/wxt_gui.cpp
#mv src/wxterminal/wxt_gui.cpp src/wxterminal/wxt_gui.cpp.bak
#echo "#include <cairo-win32.h>" > src/wxterminal/wxt_gui.cpp
#cat src/wxterminal/wxt_gui.cpp.bak >> src/wxterminal/wxt_gui.cpp
## fix src/command.cpp
#mv src/command.cpp src/command.cpp.bak
#echo "#include \"help.h\"" > src/command.cpp
#cat src/command.cpp.bak >> src/command.cpp
## fix src/command.c
#mv src/command.c src/command.c.bak
##grep "#define.*H_" src/help.h > src/command.c
#echo "#include \"help.h\"" > src/command.c
#cat src/command.c.bak >> src/command.c
## fix src/internal.c
#patch -ulbf src/internal.c << EOF
#--- src/internal.c  2011-02-17 21:02:46 +0100
#+++ src/internal.c  2011-11-13 10:03:12 +0100
#@@ -47,2 +47,5 @@
# #include <math.h>
#+#ifdef __MINGW32__
#+#undef GP_MATHERR
#+#endif
#
#EOF
## fix term/win.trm
#mv term/win.trm term/win.trm.bak
#cat > term/win.trm << EOF
##ifdef __WIN64
##define GCL_HICON GCLP_HICON
##endif
#EOF
#cat term/win.trm.bak >> term/win.trm
## create dummy wx-config which supports --version and uses UNIX-style paths
#cat > wx-config << EOF
##!/bin/sh
#if [ "\$1" == "--version" ]; then
# shift
# wx-config.exe --release \$* | sed -e "s/^\\([0-9]*\\.[0-9]*\\)\$/\\1.0/"
#else
# wx-config.exe --debug=no --unicode=yes --static=no --compiler=gcc \$* | sed -e "s?\\([A-Z]\\):\\\\\\\\?/\\1/?g; s?\\\\\\\\?/?g"
#fi
#EOF
##PATH=.:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-x --without-linux-vga --with-wx-config="wx-config" &&
#PATH=.:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-x --without-linux-vga --disable-wxwidgets &&
##--with-lasergnu
# echo "#define _Windows 1" >> config.h &&
# echo "#define WGP_CONSOLE 1" >> config.h &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig

# prepare HTML Help (see http://www.microsoft.com/en-us/download/details.aspx?id=21138)
cabextract -q -d htmlhelp $TARBALLDIR/$BASENAME/htmlhelp.exe
cp -f htmlhelp/htmlhelp.h htmlhelp/htmlhelp.lib config/mingw
# fix src/internal.c for 64-bit (version <= 4.6.7)
patch -ulbf src/internal.c << EOF
--- src/internal.c  2012-05-07 07:25:48 +0200
+++ src/internal.c  2013-03-15 21:17:50 +0100
@@ -61,2 +61,3 @@

+#ifndef _CRT_MATHERR_DEFINED
 int
@@ -66,2 +67,3 @@
 }
+#endif

EOF
## fix missing GCL_HICON in src/win/wgraph.c on 64-bit
#sed -i.bak -e "s/GCL_HICON/-14/g" src/win/wgraph.c
## fix missing GCL_HICON in src/win/wtext.c on 64-bit
#sed -i.bak -e "s/GCL_HICON/-14/g" src/win/wtext.c
## fix missing GWL_WNDPROC in src/win/wpause.c on 64-bit
#sed -i.bak -e "s/GWL_WNDPROC/-4/g" src/win/wpause.c
# fix missing luaL_checkint in src/term.c (version >= 4.6.4)
mv src/term.c src/term.c.bak
echo "#define LUA_COMPAT_APIINTCASTS" > src/term.c
cat src/term.c.bak >> src/term.c
# fix cmplx in src/gp_types.h (version >= 5.2.5)
sed -i.bak -e "s/^struct cmplx/#undef cmplx\n&/" src/gp_types.h
## fix config/mingw/Makefile for HTML Help files
#patch -ulbf config/mingw/Makefile << EOF
#--- config/mingw/Makefile  2012-09-17 08:07:32 +0200
#+++ config/mingw/Makefile  2012-10-01 21:56:06 +0200
#@@ -451,4 +451,3 @@
# ifdef HTML_HELP
#-  LDLIBS += -lhtmlhelp
#-  LDFLAGS2 += -L\$(HHWPATH)lib
#+  LDLIBS += ../../htmlhelp/htmlhelp.lib
# endif
#EOF
# fix undefined GCL_HICON/GWL_WNDPROC (version >= 4.6.4)
sed -i.bak -e "s/GCL_HICON/GCLP_HICON/" src/win/winmain.c src/win/wgraph.c src/win/wtext.c
sed -i.bak -e "s/GCL_HICON/GCLP_HICON/; s/GWL_WNDPROC/GWLP_WNDPROC/" src/win/wpause.c
## fix HTML Help files and -lbgd in config/mingw/Makefile
#patch -ulbf config/mingw/Makefile << EOF
#@@ -298,3 +298,3 @@
#   else
#-    TERMLIBS += -lbgd
#+    TERMLIBS += -lgd
#   endif
#@@ -441,4 +441,3 @@
# ifdef HTML_HELP
#-  LDLIBS += -lhtmlhelp
#-  LDFLAGS2 += -L\$(HHWPATH)lib
#+  LDLIBS += ../../htmlhelp/htmlhelp.lib 
# endif
#EOF
# fix HTML Help files and -lbgd in config/mingw/Makefile
patch -ulbf config/mingw/Makefile << EOF
@@ -298,3 +298,3 @@
   else
-    TERMLIBS += -lbgd
+    TERMLIBS += -lgd
   endif
@@ -441,4 +441,3 @@
 ifdef HTML_HELP
-  LDLIBS += -lhtmlhelp
-  LDFLAGS2 += -L\$(HHWPATH)lib
+  LDLIBS += -lhtmlhelp 
 endif
EOF
wl-showstatus build-install &&
 #PATH=$WXWIN/lib/gcc_dll:$PATH make -j1 -Cconfig/mingw console windows pipes support CC=${CC:-gcc} DESTDIR=$INSTALLPREFIX/gnuplot NEWGD=1 JPEG=1 FREETYPE=1 GDAUTOCONFIGLIBS=1 BGD=1 CAIROTERMS=1 CAIROLIBS=1 WXT=1 ICONV=1 LUA=lua HTML_HELP=0 &&
 # PATH=$WXWIN/lib/gcc_dll:$PATH make -i -Cconfig/mingw install CC=${CC:-gcc} DESTDIR=$INSTALLPREFIX/gnuplot NEWGD=1 JPEG=1 FREETYPE=1 GDAUTOCONFIGLIBS=1 BGD=1 CAIROTERMS=1 CAIROLIBS=1 WXT=1 ICONV=1 LUA=lua HTML_HELP=0 &&
 PATH=$WXWIN/lib/gcc_dll:$PATH make -j1 -Cconfig/mingw console windows pipes support CC=${CC:-gcc} DESTDIR=$INSTALLPREFIX/gnuplot NEWGD=1 JPEG=1 FREETYPE=1 GDAUTOCONFIGLIBS=1 BGD=1 CAIROTERMS=1 CAIROLIBS=1 WXT=1 ICONV=1 LUA=lua HTML_HELP=1 HHWPATH=$(pwd)/htmlhelp/ &&
 PATH=$WXWIN/lib/gcc_dll:$PATH make -i -Cconfig/mingw install CC=${CC:-gcc} DESTDIR=$INSTALLPREFIX/gnuplot NEWGD=1 JPEG=1 FREETYPE=1 GDAUTOCONFIGLIBS=1 BGD=1 CAIROTERMS=1 CAIROLIBS=1 WXT=1 ICONV=1 LUA=lua HTML_HELP=1 HHWPATH=$(pwd)/htmlhelp/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####To do: fix 64-bit build
####src/internal.c:63:1: warning: '_matherr' redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]



#export NAME="gnuplot"
#export STATUS=
#export URL=http://www.gnuplot.info/
#export BASENAME=gnuplot
#export DESCRIPTION="Gnuplot is a portable command-line driven interactive data and function plotting utility. It was originally intended as to allow scientists and students to visualize mathematical functions and data. It does this job pretty well, but has grown to support many non-interactive uses, including web scripting and integration as a plotting engine for third-party applications like Octave."
#export CATEGORY=graphics
#export TYPE=application
##export VERSION=5.0.0
##export VERSIONDATE=20150102
##export VERSION=5.0.1
##export VERSIONDATE=20150608
##export VERSION=5.0.2
##export VERSIONDATE=20160107
##export VERSION=5.0.4
##export VERSIONDATE=20160721
##export VERSION=5.0.5
##export VERSIONDATE=20161010
##export VERSION=5.0.6
##export VERSIONDATE=20170318
##export VERSION=5.0.7
##export VERSIONDATE=20170816
##export VERSION=5.2.0
##export VERSIONDATE=20170904
##export VERSION=5.2.1
##export VERSIONDATE=20171029
##export VERSION=5.2.2
##export VERSIONDATE=20171116
##export VERSION=5.2.3
##export VERSIONDATE=20180505
##export VERSION=5.2.4
##export VERSIONDATE=20180604
##export VERSION=5.2.5
##export VERSIONDATE=20181007
##export VERSION=5.2.6
##export VERSIONDATE=20190102
##export VERSION=5.2.7
##export VERSIONDATE=20190529
#####src/command.c:2640:10: error: 'H_FOUND' undeclared (first use in this function)
##export VERSION=5.2.8
##export VERSIONDATE=20191202
##export VERSION=5.4.0
##export VERSIONDATE=20200717
##export VERSION=5.4.1
##export VERSIONDATE=20201201
##export VERSION=5.4.2
##export VERSIONDATE=20210606
##export VERSION=5.4.3
##export VERSIONDATE=20220107
##export VERSION=5.4.4
##export VERSIONDATE=20220718
##export VERSION=5.4.5
##export VERSIONDATE=20221002
##export VERSION=5.4.7
##export VERSIONDATE=20230522
#export VERSION=5.4.8
#export VERSIONDATE=20230608
#wl-showstatus --package-version
#export DEPENDENCIES=readline,zlib,libgd,lua,wxwidgets,cairo
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=Copyright
#export LICENSETYPE=
#export DOWNLOADURL="http://sourceforge.net/projects/gnuplot/files/gnuplot/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#wl-wait4deps
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/gnuplot/gnuplot/$VERSION/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix missing H_FOUND in src/command.c
#mv src/command.c src/command.c.bak &&
#echo '#include "help.h"' > src/command.c &&
#cat src/command.c.bak >> src/command.c
## fix src/syscfg.h
#mv src/syscfg.h src/syscfg.h.bak
#cat > src/syscfg.h << EOF
##ifndef HAVE_OFF_T
##include "config.h"
##endif
#EOF
#cat src/syscfg.h.bak >> src/syscfg.h
## fix _matherr issue in src/internal.c (version >= 5.0.2)
#patch -ulbf src/internal.c << EOF
#--- src/internal.c  2014-09-09 05:36:48.000000000 +0200
#+++ src/internal.c  2016-01-07 23:41:44.796958700 +0100
#@@ -49,3 +49,3 @@
#
#-#ifndef _WIN64
#+#if !defined(_WIN64) && !defined(__MINGW32__)
# /*
#EOF
## fix src/command.h
#patch -ulbf src/command.h << EOF
#@@ -131,2 +131,5 @@
# #ifdef WXWIDGETS
#+#ifdef __cplusplus
#+extern "C" {
#+#endif /*__cplusplus*/
# extern void wxt_raise_terminal_window __PROTO((int));
#@@ -135,2 +138,5 @@
# extern void wxt_lower_terminal_group __PROTO((void));
#+#ifdef __cplusplus
#+}
#+#endif /*__cplusplus*/
# #endif
#EOF
## fix function pointer type issue src/win/winmain.c (version >= 5.2.2)
#patch -ulbf src/win/winmain.c << EOF
#@@ -274 +274,2 @@
#-    FARPROC pSHGetSpecialFolderPath;
#+    typedef BOOL (*SHGetSpecialFolderPath_fn)(HWND hwndOwner, LPTSTR lpszPath, int csidl, BOOL fCreate);
#+    SHGetSpecialFolderPath_fn pSHGetSpecialFolderPath;
#@@ -286 +287 @@
#-           GetProcAddress(hShell32, "SHGetSpecialFolderPathA");
#+           (SHGetSpecialFolderPath_fn)GetProcAddress(hShell32, "SHGetSpecialFolderPathA");
#EOF
## fix src/wxterminal/wxt_gui.cpp (version >= 5.4.2)
#patch -ulbf src/wxterminal/wxt_gui.cpp << EOF
#@@ -640,5 +640,5 @@
#                rect.left = rect.top = 0;
#-               unsigned dpi = GetDPI();
#-               rect.right  = MulDiv(panel->plot.device_xmax, dpi, 10);
#-               rect.bottom = MulDiv(panel->plot.device_ymax, dpi, 10);
#+               wxSize dpi = GetDPI();
#+               rect.right  = MulDiv(panel->plot.device_xmax, dpi.GetWidth(), 10);
#+               rect.bottom = MulDiv(panel->plot.device_ymax, dpi.GetHeight(), 10);
#                HDC hmf = CreateEnhMetaFileW(NULL, fullpathFilename.wc_str(), &rect, NULL);
#@@ -708,3 +708,3 @@
#                wxSize ppi = wxdc->GetPPI();
#-               unsigned dpi = 96;
#+               wxSize dpi(96, 96);
# #ifdef _WIN32
#@@ -712,4 +712,4 @@
# #endif
#-               double scaleX = ppi.GetWidth() / (double) dpi;
#-               double scaleY = ppi.GetHeight() / (double) dpi;
#+               double scaleX = ppi.GetWidth() / (double) dpi.GetWidth();
#+               double scaleY = ppi.GetHeight() / (double) dpi.GetHeight();
#                cairo_surface_set_fallback_resolution(surface, ppi.GetWidth(), ppi.GetHeight());
#EOF
## fix src/command.h (version >= 5.4.2)
#patch -ulbf src/command.h << EOF
#@@ -122,2 +122,5 @@
# #ifdef WXWIDGETS
#+#ifdef __cplusplus
#+extern "C" {
#+#endif
# extern void wxt_raise_terminal_window(int);
#@@ -126,2 +129,5 @@
# extern void wxt_lower_terminal_group(void);
#+#ifdef __cplusplus
#+}
#+#endif
# #endif
#EOF
## fix missing config.h
#echo "#include \"../config.h\"" > src/config.h
## fix missing win_popen in src/win/winmain.c and src/win/wgnuplib.h (version >= 5.2.8)
#sed -i.bak -e "s/#ifndef USE_FAKEPIPES/#if !defined(USE_FAKEPIPES) || defined(__MINGW32__)/" src/win/winmain.c src/win/wgnuplib.h
## fix missing compilation of win/winmain.c
#mv src/Makefile.in src/Makefile.in.bak
#sed -e "s/\(am_gnuplot_OBJECTS *= *\)/\1win\/winmain.c /" src/Makefile.in.bak > src/Makefile.in
### fix config/mingw/Makefile
##sed -i.bak -e "s/-lhtmlhelp/-llua -lgd -lcairo/" config/mingw/Makefile
##WXWIN=$MINGWPREFIX/wx
#wl-showstatus build-install &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CXXFLAGS="-I$MINGWPREFIX/wx/include -I$MINGWPREFIX/wx/lib/gcc_dll/msw" &&
# #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-x --disable-wxwidgets --without-qt --with-cairo --with-readline=$MINGWPREFIX CXXFLAGS="-I$(pwd)/src" &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-x CXXFLAGS="$(wx-config --cxxflags|tr \\\\ /) -I$(pwd)/src -I$MINGWPREFIX/wx/include" &&
# #PKG_CONFIG_PATH=$MINGWPREFIX/qt/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-qt=qt5 --without-x --disable-wxwidgets --with-readline=gnu CXXFLAGS="$(wx-config --cxxflags|tr \\\\ /) -I$(pwd)/src -I$MINGWPREFIX/wx/include" &&
# echo "#define USE_FAKEPIPES 1" >> config.h &&
# sed -i.bak -e "s?^am_gnuplot_OBJECTS = ?&win/screenbuf.o win/wgnuplib.o win/wgraph.o win/wmenu.o win/wpause.o win/wprinter.o win/wtext.o win/wgdiplus.o win/wredirect.o gpexecute.o ?; s?^LIBS = ?&-lgdiplus -lshlwapi ?" src/Makefile &&
# wl-showstatus build &&
# for F in src/win/*.c; do
#  if [ ! -f $(echo $F|sed -e "s/\.c$/.o/") ]; then
#   echo CC $F
#   gcc -c -o $(echo $F|sed -e "s/\.c$/.o/") $F -Isrc -DHAVE_GDIPLUS || break
#  fi
# done &&
# for F in src/win/*.cpp; do
#  if [ ! -f $(echo $F|sed -e "s/\.cpp$/.o/") ] && [ "$F" != "src/win/wd2d.cpp" ]; then
#   echo CXX $F
#   g++ -c -o $(echo $F|sed -e "s/\.cpp$/.o/") $F -Isrc || break
#  fi
# done &&
# wl-showstatus build &&
# make &&
# #make -i && cp -u src/*.o config/mingw/ &&
# wl-showstatus build-install &&
# #make -C config/mingw -j1 &&
# #make install-strip &&
# make install-strip CXX="${CXX:-g++} -std=gnu++11 -Wno-write-strings" &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####PATH=$MINGWPREFIX/wx/lib/gcc_dll:$PATH src/gnuplot.exe



gcc -c -o src/win/wgraph.o src/win/wgraph.c -Isrc -DHAVE_GDIPLUS


make -j1 EXTRA_gnuplot_DEPENDENCIES="win/wgraph.o"
make -j1 EXTRA_gnuplot_DEPENDENCIES="$(ls -1 src/win/*.o|sed -e "s?^src/??")"
make -j1 EXTRA_gnuplot_DEPENDENCIES="win/screenbuf.o win/wgnuplib.o win/wgraph.o win/winmain.o win/wmenu.o win/wpause.o win/wprinter.o win/wtext.o"
