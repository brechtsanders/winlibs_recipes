export NAME="OpenDBX"
export STATUS=
export URL=http://www.linuxnetworks.de/doc/index.php/OpenDBX
export BASENAME=opendbx
export DESCRIPTION="OpenDBX is an extremely lightweight but extensible database access library written in C. It provides an abstraction layer to all supported databases with a single, clean and simple interface that leads to an elegant code design automatically."
export CATEGORY=database
export TYPE=library
export VERSION=1.4.6
export VERSIONDATE=20140822
####backends/mssql/.libs/libmssqlbackend_la-mssql_basic.o:mssql_basic.c:(.text+0x70a): undefined reference to `dbpoll'
wl-showstatus --package-version
#export DEPENDANCIES=gettext,readline,libdl,pdcurses,sqlite3,mysql,postgresql,firebird
#export DEPENDANCIES=gettext,readline,libdl,pdcurses,sqlite3,mariadb-client,postgresql,firebird
export DEPENDANCIES=gettext,readline,libdl,ncurses,sqlite3,mariadb-client,postgresql,firebird
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://www.linuxnetworks.de/doc/index.php/OpenDBX/Download"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://linuxnetworks.de/opendbx/download/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing strncasecmp in utils/completion.cpp
sed -i.bak -e "s/strncasecmp/strnicmp/g" utils/completion.cpp
# skip building doc
cat > doc/Makefile.in << EOF
all:
install:
install-strip:
clean:
EOF
cp -f doc/Makefile.in utils/doc/Makefile.in
## fix missing ncurses library
#sed -i.bak -e "s/-lncurses/-lcurses/g" configure utils/Makefile.in
# fix detection of mariadb-client
sed -i.bak2 -e "s/^char mysql_init *();$/#include <mariadb\/mysql.h>/; s/mysql_init ()/mysql_init (0)/" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-backends="sqlite3 mysql pgsql mssql" CFLAGS="-I$MINGWPREFIX/include/mysql" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-backends="sqlite3 mysql pgsql" CFLAGS="-I$MINGWPREFIX/include/mysql" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-backends="sqlite3 mysql pgsql" --disable-test CFLAGS="-I$MINGWPREFIX/include/mariadb" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-backends="sqlite3 mysql pgsql odbc" --disable-test CFLAGS="-I$MINGWPREFIX/include/mariadb" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-backends="sqlite3 mysql pgsql odbc" --disable-test CFLAGS="-I$MINGWPREFIX/include/libdl-win32 -I$MINGWPREFIX/include/mariadb" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-backends="sqlite3 mysql pgsql odbc" --disable-test CFLAGS="-I$MINGWPREFIX/include/libdl-win32 -I$MINGWPREFIX/include/mariadb" CXXFLAGS="-std=c++14" &&
 # fix detection of shared libraries
 sed -i.bak -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #echo "#define strncasecmp strnicmp" >> config.h &&
 wl-showstatus build-install &&
 ( make install-strip || make install-strip libpgsqlbackend_la_LIBADD="-Wl,--as-needed -lpq -lws2_32 -lintl" ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: load backend DLL from relative path



