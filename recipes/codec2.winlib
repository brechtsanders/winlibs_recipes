export NAME="Codec 2"
export STATUS=
export URL=http://rowetel.com/codec2.html
#export URL=https://github.com/drowe67/codec2
export BASENAME=codec2
export DESCRIPTION="Codec 2 is an open source (LGPL 2.1) low bit rate speech codec written in C99 standard C."
export CATEGORY=audio,compression
export TYPE=library
export VERSION=1.2.0
export VERSIONDATE=20241211
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/drowe67/codec2/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/drowe67/codec2/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix cmake/GetDependencies.cmake.in (version >= 1.2.0)
patch -ulbf cmake/GetDependencies.cmake.in << EOF
@@ -13,12 +13 @@

-include(\${CMAKE_SOURCE_DIR}/cmake/GetPrerequisites.cmake)
-get_prerequisites(\${CODEC2_DLL} _deps 1 0 "" "")
-foreach(_runtime \${_deps})
-    message("Looking for \${_runtime}")
-    find_library(RUNTIME_\${_runtime} \${_runtime})
-    message("\${RUNTIME_\${_runtime}}")
-    if(RUNTIME_\${_runtime})
-        file(INSTALL DESTINATION "\${CMAKE_INSTALL_PREFIX}/bin"
-        TYPE EXECUTABLE FILES "\${RUNTIME_\${_runtime}}")
-    endif()
-endforeach()
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure-static &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DUNITTEST:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure-shared &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DUNITTEST:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install-static &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install-shared &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



