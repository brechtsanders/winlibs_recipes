export NAME="libu2f-host"
export STATUS=
export URL=https://developers.yubico.com/libu2f-host/
#export URL=https://github.com/Yubico/libu2f-host
export BASENAME=libu2f-host
export DESCRIPTION="Libu2f-host provides a C library and command-line tool that implements the host-side of the U2F protocol. There are APIs to talk to a U2F device and perform the U2F Register and U2F Authenticate operations."
export CATEGORY=security
export TYPE=library
#export VERSION=1.1.3
#export VERSIONDATE=20170328
#export VERSION=1.1.4
#export VERSIONDATE=20170901
#export VERSION=1.1.5
#export VERSIONDATE=20180307
#export VERSION=1.1.6
#export VERSIONDATE=20180515
#export VERSION=1.1.7
#export VERSIONDATE=20190208
####No package 'hidapi-hidraw' found
#export VERSION=1.1.8
#export VERSIONDATE=20190305
#export VERSION=1.1.9
#export VERSIONDATE=20190307
export VERSION=1.1.10
export VERSIONDATE=20190516
wl-showstatus --package-version
export DEPENDANCIES=hidapi,json,openssl
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export LICENSEFILE=COPYING.LGPLv2
#export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/Yubico/libu2f-host/releases"
export DOWNLOADURL="https://github.com/Yubico/libu2f-host/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/Yubico/libu2f-host/archive/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/Yubico/libu2f-host/archive/refs/tags/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd libu2f-host-libu2f-host-$VERSION
wl-showstatus configure &&
 autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-openssl &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-openssl LDFLAGS="-Wl,--as-needed -lbcrypt" &&
 wl-showstatus build-install &&
 ( make install-strip || make install-strip dist_man_MANS= ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libu2f-host-libu2f-host-$VERSION



#mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
#rm -rf CMakeCache.txt CMakeFiles; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDANCIES=cmake
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DHIDAPI_DIR:PATH=$MINGWPREFIX -DJSON-C_DIR:PATH=$MINGWPREFIX . &&
# wl-showstatus build-install &&
# make install/strip &&
#    echo OK

#export BUILDDEPENDANCIES=cmake
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON .. &&
# cd .. &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
#    echo OK
