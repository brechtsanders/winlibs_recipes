export NAME="jsonrpc-glib"
export STATUS=
#export URL=https://github.com/GNOME/jsonrpc-glib
export URL=https://gitlab.gnome.org/GNOME/jsonrpc-glib
export BASENAME=jsonrpc-glib
export DESCRIPTION="Jsonrpc-GLib is a library to communicate with JSON-RPC based peers in either a synchronous or asynchronous fashion. It also allows communicating using the GVariant serialization format instead of JSON when both peers support it. You might want that when communicating on a single host to avoid parser overhead and memory-allocator fragmentation."
export CATEGORY=communication
export TYPE=library
#export VERSION=3.44.0
#export VERSIONDATE=20230805
#export VERSION=3.44.1
#export VERSIONDATE=20240805
export VERSION=3.44.2
export VERSIONDATE=20250629
wl-showstatus --package-version
export DEPENDENCIES=gobject-introspection,vala
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/GNOME/jsonrpc-glib/tags"
export DOWNLOADURL="https://gitlab.gnome.org/GNOME/jsonrpc-glib/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/GNOME/jsonrpc-glib/archive/refs/tags/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://gitlab.gnome.org/GNOME/jsonrpc-glib/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
mkdir -p build_both &&
 wl-showstatus configure &&
 #PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dwith_vapi=true -Dwith_introspection=true -Denable_gtk_doc=false -Denable_tests=false . build_both &&
 PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dwith_vapi=true -Dwith_introspection=true -Denable_gtk_doc=false -Denable_tests=false -Dc_args="-Wno-incompatible-pointer-types" . build_both &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



