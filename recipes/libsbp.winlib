export NAME="libsbp"
export STATUS=
export URL=https://github.com/swift-nav/libsbp
export BASENAME=libsbp
export DESCRIPTION="Swift Binary Protocol client libraries - The Swift Navigation Binary Protocol (SBP) is a fast, simple, and minimal binary protocol for communicating with Swift devices. It is the native binary protocol used by the Piksi GPS receiver to transmit solutions, observations, status and debugging messages, as well as receive messages from the host operating system, such as differential corrections and the almanac."
export CATEGORY=communication
export TYPE=library
#export VERSION=2.3.10
#export VERSIONDATE=20180703
#export VERSION=2.3.17
#export VERSIONDATE=20180704
#export VERSION=2.4.0
#export VERSIONDATE=20180809
#export VERSION=2.4.1
#export VERSIONDATE=20181003
#export VERSION=2.4.2
#export VERSIONDATE=20181027
#export VERSION=2.4.3
#export VERSIONDATE=20181115
#export VERSION=2.4.4
#export VERSIONDATE=20181120
#export VERSION=2.4.5
#export VERSIONDATE=20181129
#export VERSION=2.4.6
#export VERSIONDATE=20190103
#export VERSION=2.4.7
#export VERSIONDATE=20190115
#export VERSION=2.4.8
#export VERSIONDATE=20190119
#export VERSION=2.4.9
#export VERSIONDATE=20190208
#export VERSION=2.4.10
#export VERSIONDATE=20190209
#export VERSION=2.5.0
#export VERSIONDATE=20190301
#export VERSION=2.5.1
#export VERSIONDATE=20190330
#export VERSION=2.5.2
#export VERSIONDATE=20190405
#export VERSION=2.5.3
#export VERSIONDATE=20190412
#export VERSION=2.5.5
#export VERSIONDATE=20190517
#export VERSION=2.5.6
#export VERSIONDATE=20190604
#export VERSION=2.6.0
#export VERSIONDATE=20190606
#export VERSION=2.6.2
#export VERSIONDATE=20190607
#export VERSION=2.6.3
#export VERSIONDATE=20190611
#export VERSION=2.6.4
#export VERSIONDATE=20190627
#export VERSION=2.6.5
#export VERSIONDATE=20190703
#export VERSION=2.7.0
#export VERSIONDATE=20190920
#export VERSION=2.7.1
#export VERSIONDATE=20190920
#export VERSION=2.7.3
#export VERSIONDATE=20191114
#export VERSION=2.7.4
#export VERSIONDATE=20200225
#export VERSION=2.7.5
#export VERSIONDATE=20200312
#export VERSION=2.7.6
#export VERSIONDATE=20200313
#export VERSION=2.7.7
#export VERSIONDATE=20200314
#export VERSION=2.8.0
#export VERSIONDATE=20200401
#export VERSION=3.0.0
#export VERSIONDATE=20200522
#export VERSION=3.0.1
#export VERSIONDATE=20200523
#export VERSION=3.1.0
#export VERSIONDATE=20200530
#export VERSION=3.1.1
#export VERSIONDATE=20200609
#export VERSION=3.1.2
#export VERSIONDATE=20200713
#export VERSION=3.2.0
#export VERSIONDATE=20200724
#export VERSION=3.3.0
#export VERSIONDATE=20200828
#export VERSION=3.3.1
#export VERSIONDATE=20200829
#export VERSION=3.4.0
#export VERSIONDATE=20200912
#export VERSION=3.4.1
#export VERSIONDATE=20200915
#export VERSION=3.4.2
#export VERSIONDATE=20200923
#export VERSION=3.4.4
#export VERSIONDATE=20201013
#export VERSION=3.4.5
#export VERSIONDATE=20201212
#export VERSION=3.4.6
#export VERSIONDATE=20210402
#export VERSION=3.4.7
#export VERSIONDATE=20210501
#export VERSION=3.4.8
#export VERSIONDATE=20210618
#export VERSION=3.4.9
#export VERSIONDATE=20210715
#export VERSION=3.4.10
#export VERSIONDATE=20210723
#export VERSION=3.4.11
#export VERSIONDATE=20211211
#export VERSION=3.4.12
#export VERSIONDATE=20211211
#export VERSION=3.4.13
#export VERSIONDATE=20220110
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
##export BUILDDEPENDANCIES=cmake
#export BUILDDEPENDANCIES=cmake,ninja
#export VERSION=4.0.0
#export VERSIONDATE=20211008
#export VERSION=4.0.1
#export VERSIONDATE=20211009
#export VERSION=4.0.2
#export VERSIONDATE=20211013
#export VERSION=4.0.3
#export VERSIONDATE=20211023
#export VERSION=4.1.0
#export VERSIONDATE=20211211
#export VERSION=4.1.1
#export VERSIONDATE=20211211
####CMake Error at CMakeLists.txt:7 (include): include could not find load file: CCache
####CMake Error at CMakeLists.txt:8 (include): include could not find load file: SwiftCmakeOptions
#export VERSION=4.1.2
#export VERSIONDATE=20211222
#export VERSION=4.1.3
#export VERSIONDATE=20220204
#export VERSION=4.1.4
#export VERSIONDATE=20220301
#export VERSION=4.1.5
#export VERSIONDATE=20220330
export VERSION=4.1.6
export VERSIONDATE=20220413
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
BUILDDEPENDANCIES=cmake,swift-cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/swift-nav/libsbp/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/swift-nav/libsbp/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix for using Python
#sed -i.bak -e "s?python2.7?$PY2DIR/python.exe?; s?cmake?&.exe?g" Makefile
#wl-showstatus patch &&
# #make help &&
# make c &&
#    echo OK
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release c &&
# wl-showstatus build-install &&
# make install/strip &&
# mkdir -p $INSTALLPREFIX/bin &&
# mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# cp -f $INSTALLPREFIX/lib/libsbp-static.a $INSTALLPREFIX/lib/libsbp.a &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
## fix missing CCache
#sed -i.bak "s/include(CCache)/#&/" c/CMakeLists.txt
#sed -i.bak2 "s/include(SwiftCmakeOptions)/#&/" c/CMakeLists.txt
# fix missing Swift includes in c/CMakeLists.txt (version >= 2.8.0)
patch -ulbf c/CMakeLists.txt << EOF
@@ -4 +4 @@
-set(CMAKE_MODULE_PATH "\${CMAKE_CURRENT_LIST_DIR}/cmake" "\${CMAKE_CURRENT_LIST_DIR}/cmake/common")
+set(CMAKE_MODULE_PATH "\${CMAKE_CURRENT_LIST_DIR}/cmake" "\${CMAKE_CURRENT_LIST_DIR}/cmake/common" "$(cygpath -m $MINGWPREFIX/cmake/swift)")
EOF
## fix missing CompileOptions.cmake (version >= 3.4.6)
#touch c/cmake/CompileOptions.cmake
#git submodule update --init --recursive
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PKG_CONFIG= cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -Sc -Bbuild_static &&
# #PKG_CONFIG= cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/cmake/swift -Dx_gtest_IncludeDir:PATH=$MINGWPREFIX/include -Dlibsbp_ENABLE_DOCS:BOOL=OFF -DCODE_COVERAGE:BOOL=OFF -Dlibsbp_ENABLE_TESTS:BOOL=OFF -DCHECK_ENABLE_TESTS:BOOL=OFF -DAUTORUN_TESTS:BOOL=OFF -Sc -Bbuild_static &&
# wl-showstatus configure &&
# PKG_CONFIG= cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -Sc -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# #make -Cbuild_shared install/strip &&
# PATH=$(pwd)/build_shared/src:$PATH make -Cbuild_shared install/strip &&
# mkdir -p $INSTALLPREFIX/bin &&
# mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -Sc -Bbuild_static &&
 #PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/cmake/swift -Dx_gtest_IncludeDir:PATH=$MINGWPREFIX/include -Dlibsbp_ENABLE_DOCS:BOOL=OFF -DCODE_COVERAGE:BOOL=OFF -Dlibsbp_ENABLE_TESTS:BOOL=OFF -DCHECK_ENABLE_TESTS:BOOL=OFF -DAUTORUN_TESTS:BOOL=OFF -Sc -Bbuild_static &&
 wl-showstatus configure &&
 PKG_CONFIG= cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -Sc -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 PATH=$(pwd)/build_shared/src:$PATH ninja -Cbuild_shared install/strip &&
 ## manually copy .dll to bin folder (version <= 3.4.10)
 #mkdir -p $INSTALLPREFIX/bin &&
 #mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



