export NAME="Ninja"
export STATUS=
#export URL=https://martine.github.io/ninja/
#export URL=https://github.com/ninja-build/ninja/
export URL=https://ninja-build.org/
export BASENAME=ninja
export DESCRIPTION="Ninja is a small build system with a focus on speed. It differs from other build systems in two major respects: it is designed to have its input files generated by a higher-level build system, and it is designed to run builds as fast as possible."
export CATEGORY=build
export TYPE=application
#export VERSION=1.5.3
#export VERSIONDATE=20150506
#export VERSION=1.6.0
#export VERSIONDATE=20150630
#export VERSION=1.7.1
#export VERSIONDATE=20160429
#export VERSION=1.7.2
#export VERSIONDATE=20161108
#export VERSION=1.8.0
#export VERSIONDATE=20170904
#export VERSION=1.8.1
#export VERSIONDATE=20170907
#export VERSION=1.8.2
#export VERSIONDATE=20170911
#export VERSION=1.9.0
#export VERSIONDATE=20190131
#export VERSION=1.10.0
#export VERSIONDATE=20200127
#export VERSION=1.10.1
#export VERSIONDATE=20200819
#export VERSION=1.10.2
#export VERSIONDATE=20201128
#export VERSION=1.11.0
#export VERSIONDATE=20220516
export VERSION=1.11.1
export VERSIONDATE=20220831
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=re2c
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=Apache
#export DOWNLOADURL="https://github.com/martine/ninja/releases v"
export DOWNLOADURL="https://github.com/ninja-build/ninja/releases v"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/martine/ninja/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/ninja-build/ninja/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz || mv $TARBALLDIR/$BASENAME/v$VERSION $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix issue with dollar sign after drive letter when using GCC10 (version >= 1.10.0 <= 1.11.0)
#patch -ulbf src/subprocess-win32.cc << EOF
#@@ -109,3 +109,6 @@
#   // lines greater than 8,191 chars.
#-  if (!CreateProcessA(NULL, (char*)command.c_str(), NULL, NULL,
#+  string fixedcmd = command;
#+  if (fixedcmd[1] == '\$' && fixedcmd[2] == ':' && fixedcmd[3] == '\\\\')
#+    fixedcmd.erase(1, 1);
#+  if (!CreateProcessA(NULL, (char*)fixedcmd.c_str(), NULL, NULL,
#                       /* inherit handles */ TRUE, process_flags,
#EOF
## fix ninja issues (version >= 10.1.0 <= 1.10.0)
#####See also: https://github.com/m-ab-s/media-autobuild_suite/issues/1644
#patch -ulbf src/depfile_parser.in.cc << EOF
#@@ -103,6 +103,15 @@ bool DepfileParser::Parse(string* content, string* err) {
#         *out++ = '#';
#         continue;
#       }
#+      '\\\\'+ ':' {
#+        // De-escape colon sign, but preserve other leading backslashes.
#+        int len = (int)(in - start);
#+        if (len > 2 && out < start)
#+          memset(out, '\\\\', len - 2);
#+        out += len - 2;
#+        *out++ = ':';
#+        continue;
#+      }
#       '\$\$' {
#         // De-escape dollar character.
#         *out++ = '\$';
#EOF
#patch -ulbf src/depfile_parser.cc << EOF
#@@ -166,22 +166,23 @@ bool DepfileParser::Parse(string* content, string* err) {
#       goto yy5;
# yy13:
#       yych = *(yymarker = ++in);
#-      if (yych <= 0x1F) {
#+      if (yych <= ' ') {
#         if (yych <= '\\n') {
#           if (yych <= 0x00) goto yy5;
#           if (yych <= '\\t') goto yy16;
#           goto yy17;
#         } else {
#           if (yych == '\\r') goto yy19;
#-          goto yy16;
#+          if (yych <= 0x1F) goto yy16;
#+          goto yy21;
#         }
#       } else {
#-        if (yych <= '#') {
#-          if (yych <= ' ') goto yy21;
#-          if (yych <= '"') goto yy16;
#-          goto yy23;
#+        if (yych <= '9') {
#+          if (yych == '#') goto yy23;
#+          goto yy16;
#         } else {
#-          if (yych == '\\\\') goto yy25;
#+          if (yych <= ':') goto yy25;
#+          if (yych == '\\\\') goto yy27;
#           goto yy16;
#         }
#       }
#@@ -230,27 +231,37 @@ bool DepfileParser::Parse(string* content, string* err) {
#         continue;
#       }
# yy25:
#+      ++in;
#+      {
#+        // De-escape colon sign, but preserve other leading backslashes.
#+        int len = (int)(in - start);
#+        if (len > 2 && out < start)
#+          memset(out, '\\\\', len - 2);
#+        out += len - 2;
#+        *out++ = ':';
#+        continue;
#+      }
#+yy27:
#       yych = *++in;
#-      if (yych <= 0x1F) {
#+      if (yych <= ' ') {
#         if (yych <= '\\n') {
#           if (yych <= 0x00) goto yy11;
#           if (yych <= '\\t') goto yy16;
#           goto yy11;
#         } else {
#           if (yych == '\\r') goto yy11;
#-          goto yy16;
#+          if (yych <= 0x1F) goto yy16;
#         }
#       } else {
#-        if (yych <= '#') {
#-          if (yych <= ' ') goto yy26;
#-          if (yych <= '"') goto yy16;
#-          goto yy23;
#+        if (yych <= '9') {
#+          if (yych == '#') goto yy23;
#+          goto yy16;
#         } else {
#-          if (yych == '\\\\') goto yy28;
#+          if (yych <= ':') goto yy25;
#+          if (yych == '\\\\') goto yy30;
#           goto yy16;
#         }
#       }
#-yy26:
#       ++in;
#       {
#         // 2N backslashes plus space -> 2N backslashes, end of filename.
#@@ -260,24 +271,25 @@ bool DepfileParser::Parse(string* content, string* err) {
#         out += len - 1;
#         break;
#       }
#-yy28:
#+yy30:
#       yych = *++in;
#-      if (yych <= 0x1F) {
#+      if (yych <= ' ') {
#         if (yych <= '\\n') {
#           if (yych <= 0x00) goto yy11;
#           if (yych <= '\\t') goto yy16;
#           goto yy11;
#         } else {
#           if (yych == '\\r') goto yy11;
#-          goto yy16;
#+          if (yych <= 0x1F) goto yy16;
#+          goto yy21;
#         }
#       } else {
#-        if (yych <= '#') {
#-          if (yych <= ' ') goto yy21;
#-          if (yych <= '"') goto yy16;
#-          goto yy23;
#+        if (yych <= '9') {
#+          if (yych == '#') goto yy23;
#+          goto yy16;
#         } else {
#-          if (yych == '\\\\') goto yy25;
#+          if (yych <= ':') goto yy25;
#+          if (yych == '\\\\') goto yy27;
#           goto yy16;
#         }
#       }
#EOF
#patch -ulbf src/depfile_parser_test.cc << EOF
#@@ -132,13 +132,10 @@ TEST_F(DepfileParserTest, Escapes) {
#   // Put backslashes before a variety of characters, see which ones make
#   // it through.
#   string err;
#-  EXPECT_TRUE(Parse(
#-"\\\\!\\\\@\\\\#\$\$\\\\%\\\\^\\\\&\\\\[\\\\]\\\\\\\\:",
#-      &err));
#+  EXPECT_TRUE(Parse("\\\\!\\\\@\\\\#\$\$\\\\%\\\\^\\\\&\\\\[\\\\]\\\\\\\\::", &err));
#   ASSERT_EQ("", err);
#   ASSERT_EQ(1u, parser_.outs_.size());
#-  EXPECT_EQ("\\\\!\\\\@#\$\\\\%\\\\^\\\\&\\\\[\\\\]\\\\\\\\",
#-            parser_.outs_[0].AsString());
#+  EXPECT_EQ("\\\\!\\\\@#\$\\\\%\\\\^\\\\&\\\\[\\\\]\\\\:", parser_.outs_[0].AsString());
#   ASSERT_EQ(0u, parser_.ins_.size());
# }
#EOF
## also display the command if CreateProcess fails in src/subprocess-win32.cc (version = 1.10.0)
#patch -ulbf src/subprocess-win32.cc << EOF
#@@ -134,3 +134,3 @@
#     } else {
#-      Win32Fatal("CreateProcess");    // pass all other errors to Win32Fatal
#+      Win32Fatal("CreateProcess", (char*)fixedcmd.c_str());    // pass all other errors to Win32Fatal
#     }
#EOF
## fix already defined byte for GCC >= 11
##### Bug reported here: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=97484
##### Bug reported here: https://github.com/ninja-build/ninja/issues/1861
#for F in src/*.cc; do
# mv $F $F.bak &&
# echo "#include <windows.h>" > $F &&
# cat $F.bak >> $F
#done
## disable LTO
#sed -i.bak -e "s/^\(\s*\)\(set(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE)\)/\1#\2/" CMakeLists.txt
## fix configure.py (version >= 1.10.2 <= 1.11.0)
#patch -ulbf configure.py << EOF
#@@ -477,3 +477,3 @@
#         return int(proc.communicate()[0], 10) >= 1103
#-    except OSError:
#+    except:
#         return False
#EOF
wl-showstatus build &&
 #$PYDIR/python.exe configure.py --bootstrap --platform=mingw --host=mingw --with-python=$PYDIR/python.exe &&
 #LDFLAGS="-s" $PYDIR/python.exe configure.py --bootstrap --platform=mingw --host=mingw --with-python=$PYDIR/python.exe &&
 LDFLAGS="-s -pthread" $PYDIR/python.exe configure.py --bootstrap --platform=mingw --host=mingw --with-python=$PYDIR/python.exe &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin &&
 #strip ninja.exe &&
 cp -f ninja.exe $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



