export NAME="GLUS"
export STATUS=
export URL=https://www.opengl.org/sdk/libs/GLUS/
export BASENAME=glus
export DESCRIPTION="The cross platform and cross Graphic Library UtilitieS (GLUS) is an open-source C library, which provides a hardware (HW) and operating system (OS) abstraction plus many functions usually needed for graphics programming using OpenGL, OpenGL ES or OpenVG."
export CATEGORY=graphics
export TYPE=library
export VERSION=2.0
export VERSIONDATE=20151223
wl-showstatus --package-version
export DEPENDENCIES=khronos-opengl-registry,glew,glfw3
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.LESSER
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/McNopper/GLUS/releases v"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/McNopper/GLUS/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd GLUS-$VERSION/GLUS
#wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
# wl-showstatus build &&
# #make &&
# ninja &&
# #( echo "LIBRARY GLUS.dll"; echo "EXPORTS"; sed -n -e "s/^GLUSAPI .* \(glus[^\(]*\) *(.*/\1/p" src/G*/*.h | sort | uniq | grep -v "^\(glusEGL\|glusMatrix[0-9]x[0-9]Multiplyf\)" ) > GLUS.def &&
# ( echo EXPORTS; ${CC:-gcc} -E src/G*/*.h 2>/dev/null | sed -n -e "s/(.*//p" | sed -n -e "s/^.*\(glus[^ *]*\).*/\1/p" ) | sort | uniq | grep -v "^\(glusEGL\|glusMatrix[0-9]x[0-9]Multiplyf\)" > GLUS.def &&
# dlltool -D GLUS.dll -l libGLUS.dll.a -d GLUS.def libGLUS.a &&
# #${CC:-gcc} -shared -s -mwindows --enable-stdcall-fixup -def GLUS.def -o GLUS.dll libGLUS.a -lopengl32 -lglew32 -lglfw3 &&
# ${CC:-gcc} -shared -s -mwindows -Wl,--enable-stdcall-fixup -def GLUS.def -o GLUS.dll libGLUS.a -lopengl32 -lglew32 -lglfw3 &&
# wl-showstatus build-install &&
# #( make install/strip || make install/strip ) &&
# mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# for F in $(ls -1d src/G*); do
#  cp -rf $F $INSTALLPREFIX/include
# done &&
# cp -f *.a $INSTALLPREFIX/lib/ &&
# cp -f *.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf GLUS-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lopengl32 -lglew32 -lglfw3 -lgdi32/" build_shared/build.ninja &&
 wl-showstatus build &&
 ninja -Cbuild_static &&
 wl-showstatus build &&
 ninja -Cbuild_shared &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 for F in $(ls -1d src/G*); do
  cp -rf $F $INSTALLPREFIX/include
 done &&
 cp -f build_static/*.a build_shared/*.a $INSTALLPREFIX/lib/ &&
 cp -f build_shared/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf GLUS-$VERSION
####Conflicts with opengles
####Conflicts with openvg
####See also: https://www.opengl.org/sdk/libs/GLUS/
