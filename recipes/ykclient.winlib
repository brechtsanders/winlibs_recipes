export NAME="yubico-c-client"
export STATUS=
export URL=http://opensource.yubico.com/yubico-c-client/
#export URL=https://github.com/Yubico/yubico-c-client
export BASENAME=ykclient
export DESCRIPTION="Library written in C for validating YubiKey OTPs against YubiCloud"
export CATEGORY=communication
export TYPE=library
#export VERSION=2.11
#export VERSIONDATE=20131010
#export VERSION=2.12
#export VERSIONDATE=20131019
#export VERSION=2.13
#export VERSIONDATE=20140913
#export VERSION=2.14
#export VERSIONDATE=20150305
export VERSION=2.15
export VERSIONDATE=20151112
wl-showstatus --package-version
export DEPENDENCIES=libcurl,libidn,libssh2,libnettle,gnutls,librtmp
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=help2man
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://opensource.yubico.com/yubico-c-client/releases.html"
#export DOWNLOADURL="https://github.com/Yubico/yubico-c-client/releases"
export DOWNLOADURL="https://github.com/Yubico/yubico-c-client/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://opensource.yubico.com/yubico-c-client/releases/ykclient-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/ykclient-$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix missing random/srandom in ykclient.c (version <= 2.11)
#mv ykclient.c ykclient.c.bak
#cat > ykclient.c << EOF
##define random rand
##define srandom srand
##ifndef PACKAGE
##define PACKAGE "$BASENAME"
##endif
##ifndef PACKAGE_VERSION
##define PACKAGE_VERSION "$VERSION"
##endif
#EOF
#cat ykclient.c.bak >> ykclient.c
# fix missing random/srandom in ykclient.c (version >= 2.13)
mv ykclient.c ykclient.c.bak
cat > ykclient.c << EOF
#define random rand
#define srandom srand
EOF
cat ykclient.c.bak >> ykclient.c
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$PWD" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$PWD" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM CFLAGS="-I$PWD $(if ${CC:-gcc} --help -v 2>/dev/null | grep -q "\-Wimplicit-function-declaration" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=implicit-function-declaration"; fi)" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 wl-showstatus build &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 ( make -j1 || PATH=$(pwd)/.libs:$PATH make -j1 HELP2MAN="$PERLDIR/bin/perl.exe $(which help2man)" || ( touch ykclient.1 && make -j1 )) &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf ykclient-$VERSION



