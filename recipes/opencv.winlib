export NAME="OpenCV"
export STATUS=
#export URL=http://opencv.willowgarage.com/
export URL=http://opencv.org/
#export URL=https://github.com/opencv/opencv
export BASENAME=opencv
export DESCRIPTION="OpenCV (Open Source Computer Vision) is a library of programming functions for real time computer vision."
export CATEGORY=graphics
export TYPE=library
#export VERSION=2.0.0
#export VERSION=2.1.0
#export VERSION=2.2.0
#export VERSIONDATE=20101205
#export VERSION=2.3.0
#export VERSIONDATE=20111216
#export VERSION=2.3.1
#export VERSIONDATE=20110818
#export VERSION=2.3.1a
#export VERSIONDATE=20120414
#export VERSION=2.4.0
#export VERSIONDATE=20120501
#export VERSION=2.4.1
#export VERSIONDATE=20120602
#export VERSION=2.4.2
#export VERSIONDATE=20120704
####3rdparty/ffmpeg/ffopencv.c:(.text+0x175): undefined reference to `avformat_network_init'
####3rdparty/ffmpeg/ffopencv.c:(.text+0x416): undefined reference to `avformat_close_input'
####3rdparty/ffmpeg/ffopencv.c:(.text+0x173c): undefined reference to `avformat_new_stream'
#export VERSION=2.4.3
#export VERSIONDATE=20121102
#export VERSION=2.4.4
#export VERSIONDATE=20130301
####file INSTALL cannot find "E:/Prog/MinGW-mSys64/msys/home/win64/OpenCV-2.4.3/3rdparty/ffmpeg/opencv_ffmpeg_64.dll".
#export VERSION=2.4.4a
#export VERSIONDATE=20130309
#export VERSION=2.4.5
#export VERSIONDATE=20130405
#export VERSION=2.4.6
#export VERSIONDATE=20130701
#export VERSION=2.4.6.1
#export VERSIONDATE=20130710
#export VERSION=2.4.7
#export VERSIONDATE=20131108
#export VERSION=2.4.8
#export VERSIONDATE=20131231
#export VERSION=2.4.9
#export VERSIONDATE=20140418
#export VERSION=2.4.10
#export VERSIONDATE=20141008
#export VERSION=2.4.11
#export VERSIONDATE=20150227
#export VERSION=2.4.13
#export VERSIONDATE=20160520
####modules/highgui/src/window_w32.cpp:477:71: error: 'MonitorFromRect' was not declared in this scope
####cc1plus.exe: out of memory allocating 344612 bytes
#export VERSION=3.0.0
#export VERSIONDATE=20150604
####ffopencv.c:1:31: fatal error: cap_ffmpeg_impl.hpp: No such file or directory
#export VERSION=3.1.0
#export VERSIONDATE=20151221
#export VERSION=3.2.0
#export VERSIONDATE=20161224
####cc1plus.exe: out of memory allocating 342194 bytes
#export VERSION=3.3.0
#export VERSIONDATE=20170816
#export VERSION=3.3.1
#export VERSIONDATE=20171025
#export VERSION=3.4.0
#export VERSIONDATE=20171223
#export VERSION=3.4.1
#export VERSIONDATE=20180228
####CMake Error at cmake/OpenCVDownload.cmake:38
#export VERSION=3.4.2
#export VERSIONDATE=20180705
#export VERSION=3.4.3
#export VERSIONDATE=20180828
#export VERSION=3.4.10
#export VERSIONDATE=20200403
#export VERSION=3.4.11
#export VERSIONDATE=20200816
####/include/mfplay.h:77:50: error: 'MFP_MEDIAITEM_CHARACTERISTICS' has not been declared
#export VERSION=3.4.12
#export VERSIONDATE=20201012
#export VERSION=3.4.13
#export VERSIONDATE=20201222
#export VERSION=3.4.14
#export VERSIONDATE=20210402
#export VERSION=3.4.15
#export VERSIONDATE=20210705
#export VERSION=3.4.16
#export VERSIONDATE=20211009
#export VERSION=4.1.2
#export VERSIONDATE=20191117
#export VERSION=4.2.0
#export VERSIONDATE=20191221
#export VERSION=4.3.0
#export VERSIONDATE=20200404
#export VERSION=4.4.0
#export VERSIONDATE=20200719
#export VERSION=4.5.0
#export VERSIONDATE=20201012
#export VERSION=4.5.1
#export VERSIONDATE=20201222
#export VERSION=4.5.2
#export VERSIONDATE=20210403
#export VERSION=4.5.3
#export VERSIONDATE=20210706
#export VERSION=4.5.4
#export VERSIONDATE=20211010
#export VERSION=4.5.5
#export VERSIONDATE=20211225
#export VERSION=4.6.0
#export VERSIONDATE=20220608
#export VERSION=4.7.0
#export VERSIONDATE=20221229
#export VERSION=4.8.0
#export VERSIONDATE=20230629
#export VERSION=4.8.1
#export VERSIONDATE=20231219
####g++.exe: error: ffopencv.c: No such file or directory
#export VERSION=4.9.0
#export VERSIONDATE=20231229
#export VERSION=4.10.0
#export VERSIONDATE=20240603
export VERSION=4.11.0
export VERSIONDATE=20250109
wl-showstatus --package-version
#export DEPENDENCIES=libpng,libjpeg,libtiff,jasper,vtk,ffmpeg
#export DEPENDENCIES=libpng,libjpeg,libtiff,jasper,libwebp,libav,openblas
#export DEPENDENCIES=libpng,libjpeg,libtiff,jasper,libwebp,libav,openblas,gstreamer
export DEPENDENCIES=libpng,libjpeg,libopenjpeg,libtiff,jasper,libwebp,libav,openblas,gstreamer,gst-plugins-base
#export DEPENDENCIES=libpng,libjpeg,libopenjpeg,libtiff,jasper,libwebp,libav,openblas,gstreamer,gst-plugins-base,vtk
export OPTIONALDEPENDENCIES=openexr,eigen,clfft
#export BUILDDEPENDENCIES=cmake,pexports
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSEFILE=doc/license.txt
#export LICENSETYPE=BSD
export LICENSEFILE=LICENSE
export LICENSETYPE="3-clause BSD License"
#export DOWNLOADURL="http://sourceforge.net/projects/opencvlibrary/files/ OpenCV-"
#export DOWNLOADURL="http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/ OpenCV-"
#export DOWNLOADURL="http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/"
export DOWNLOADURL="https://github.com/opencv/opencv/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opencvlibrary/opencv-unix/$VERSION/OpenCV-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opencvlibrary/opencv-unix/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/OpenCV-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opencvlibrary/opencv-unix/`echo $VERSION|sed 's/[a-z]*$//'`/OpenCV-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://github.com/Itseez/opencv/archive/$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opencvlibrary/opencv-unix/$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/opencvlibrary/opencv-unix/$VERSION/$BASENAME-$VERSION.zip
export DOWNLOADSOURCEURL=https://github.com/opencv/opencv/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/OpenCV-`echo $VERSION|sed 's/[a-z]*$//'`.tar.bz2
#cd OpenCV-$(echo $VERSION|sed 's/[a-z]*$//')
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#unzip -oq $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.zip
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix modules/ffmpeg/CMakeLists.txt (version = 2.2.0)
##patch -ulbf 3rdparty/ffmpeg/CMakeLists.txt << EOF
#patch -ulbf modules/ffmpeg/CMakeLists.txt << EOF
#--- modules/ffmpeg/CMakeLists.txt  2010-12-05 04:35:24 +0100
#+++ modules/ffmpeg/CMakeLists.txt  2010-12-06 14:09:42 +0100
#@@ -26,13 +26,13 @@
#     if(WIN32 AND MINGW64)
#-        target_link_libraries(\${the_target} \${CMAKE_SOURCE_DIR}/3rdparty/lib/libavformat64.a
#-                              \${CMAKE_SOURCE_DIR}/3rdparty/lib/libavcodec64.a
#-                              \${CMAKE_SOURCE_DIR}/3rdparty/lib/libavutil64.a
#-                              \${CMAKE_SOURCE_DIR}/3rdparty/lib/libswscale64.a
#+        target_link_libraries(\${the_target} libavformat64.a
#+                              libavcodec64.a
#+                              libavutil64.a
#+                              libswscale64.a
#                               libws2_32.a)
#     else()
#-        target_link_libraries(\${the_target} \${CMAKE_SOURCE_DIR}/3rdparty/lib/libavformat.a
#-                              \${CMAKE_SOURCE_DIR}/3rdparty/lib/libavcodec.a
#-                              \${CMAKE_SOURCE_DIR}/3rdparty/lib/libavutil.a
#-                              \${CMAKE_SOURCE_DIR}/3rdparty/lib/libswscale.a
#-                              \${CMAKE_SOURCE_DIR}/3rdparty/lib/libwsock32_.a)
#+        target_link_libraries(\${the_target} libavformat.a
#+                              libavcodec.a
#+                              libavutil.a
#+                              libswscale.a
#+                              libws2_32.a libbz2.a)
#     endif()
#EOF
## fix redefinition of type boolean
#mv src/highgui/grfmt_jpeg.cpp src/highgui/grfmt_jpeg.cpp.bak
#echo "#define HAVE_BOOLEAN" > src/highgui/grfmt_jpeg.cpp
#cat src/highgui/grfmt_jpeg.cpp.bak >> src/highgui/grfmt_jpeg.cpp
### fix missing MonitorFromRect in modules/highgui/src/window_w32.cpp (version >= 2.4.8)
##mv modules/highgui/src/window_w32.cpp modules/highgui/src/window_w32.cpp.bak
###echo "WINUSERAPI HMONITOR WINAPI MonitorFromRect(LPCRECT,DWORD);" > modules/highgui/src/window_w32.cpp
##cat > modules/highgui/src/window_w32.cpp << EOF
###undef _WIN32_WINNT
###define _WIN32_WINNT 0x0500
###include <windows.h>
##EOF
##cat modules/highgui/src/window_w32.cpp.bak >> modules/highgui/src/window_w32.cpp
## fix missing MonitorFromRect (version >= 2.4.8)
#patch -ulbf modules/highgui/src/precomp.hpp << EOF
#--- modules/highgui/src/precomp.hpp  2013-12-27 18:09:18 +0100
#+++ modules/highgui/src/precomp.hpp  2014-02-04 16:21:00 +0100
#@@ -59,2 +59,9 @@
# #if defined WIN32 || defined WINCE
#+    #if !defined _WIN32_WINNT
#+        #ifdef HAVE_MSMF
#+            #define _WIN32_WINNT 0x0600 // Windows Vista
#+        #else
#+            #define _WIN32_WINNT 0x0500 // Windows 2000
#+        #endif
#+    #endif
#     #include <windows.h>
#EOF
#patch -ulbf modules/highgui/src/window_w32.cpp << EOF
#--- modules/highgui/src/window_w32.cpp  2013-12-27 18:09:18 +0100
#+++ modules/highgui/src/window_w32.cpp  2014-02-04 16:21:38 +0100
#@@ -45,17 +45,2 @@
#
#-#define COMPILE_MULTIMON_STUBS // Required for multi-monitor support
#-#ifndef _MULTIMON_USE_SECURE_CRT
#-#  define _MULTIMON_USE_SECURE_CRT 0 // some MinGW platforms have no strncpy_s
#-#endif
#-
#-#if defined SM_CMONITORS && !defined MONITOR_DEFAULTTONEAREST
#-#  define MONITOR_DEFAULTTONULL       0x00000000
#-#  define MONITOR_DEFAULTTOPRIMARY    0x00000001
#-#  define MONITOR_DEFAULTTONEAREST    0x00000002
#-#  define MONITORINFOF_PRIMARY        0x00000001
#-#endif
#-#ifndef __inout
#-#  define __inout
#-#endif
#-
# #ifdef __GNUC__
#@@ -65,3 +50,2 @@
# #include <commctrl.h>
#-#include <winuser.h>
# #include <stdlib.h>
#
#EOF
# fix missing realpath in modules/videoio/src/cap_gstreamer.cpp (version >= 3.1.0)
patch -ulbf modules/videoio/src/cap_gstreamer.cpp << EOF
--- modules/videoio/src/cap_gstreamer.cpp  2015-12-18 16:02:16.000000000 +0100
+++ modules/videoio/src/cap_gstreamer.cpp  2015-12-21 19:14:15.492048200 +0100
@@ -603,5 +603,5 @@
     if (!gst_uri_is_valid(filename))
     {
-#ifdef _MSC_VER
+#ifdef _WIN32
         uri = new char[2048];
         DWORD pathSize = GetFullPathName(filename, 2048, uri, NULL);
EOF
# fix missing SIZEOF_PID_T in modules/python/src2/cv2.cpp on 64-bit (version >= 3.1.0)
mv modules/python/src2/cv2.cpp modules/python/src2/cv2.cpp.bak &&
echo "#define SIZEOF_PID_T 4" > modules/python/src2/cv2.cpp
cat modules/python/src2/cv2.cpp.bak >> modules/python/src2/cv2.cpp
# fix undefined sprintf_instead_use_StringCbPrintfA_or_StringCchPrintfA in modules/videoio/src/cap_dshow.cpp (version >= 3.4.2)
mv modules/videoio/src/cap_dshow.cpp modules/videoio/src/cap_dshow.cpp.bak &&
echo "#define STRSAFE_NO_DEPRECATE" > modules/videoio/src/cap_dshow.cpp &&
cat modules/videoio/src/cap_dshow.cpp.bak >> modules/videoio/src/cap_dshow.cpp
# fix undefined MFP_MEDIAITEM_CHARACTERISTICS in modules/videoio/src/cap_msmf.cpp (version >= 3.4.2)
mv modules/videoio/src/cap_msmf.cpp modules/videoio/src/cap_msmf.cpp.bak &&
echo "#define WINVER 0x0601" > modules/videoio/src/cap_msmf.cpp &&
cat modules/videoio/src/cap_msmf.cpp.bak >> modules/videoio/src/cap_msmf.cpp
## fix missing Py_InitModule4 in modules/python/src2/cv2.cpp on 64-bit (version >= 3.1.0)
#pexports $PYDIR/python[0-9][0-9].dll|grep -q Py_InitModule4_64 && (
#mv modules/python/src2/cv2.cpp modules/python/src2/cv2.cpp.bak2 &&
#echo "#define SIZEOF_PID_T 4" > modules/python/src2/cv2.cpp
#sed -e "s/Py_InitModule/Py_InitModule4_64/" modules/python/src2/cv2.cpp.bak2 >> modules/python/src2/cv2.cpp
#)
# fix modules/dnn/misc/tflite/schema_generated.h (version >= 4.9.0)
patch -ulbf modules/dnn/misc/tflite/schema_generated.h << EOF
@@ -8,9 +8,2 @@

-// Ensure the included flatbuffers.h is the same version as when this file was
-// generated, otherwise it may not be compatible.
-static_assert(FLATBUFFERS_VERSION_MAJOR == 23 &&
-              FLATBUFFERS_VERSION_MINOR == 5 &&
-              FLATBUFFERS_VERSION_REVISION == 9,
-             "Non-compatible flatbuffers version included");
-
 namespace opencv_tflite {
EOF
## fix cmake/OpenCVConfig.cmake for 32-bit MinGW-w64 (version < 3.0.0)
#patch -ulbf cmake/OpenCVConfig.cmake << EOF
#--- cmake/OpenCVConfig.cmake  2013-12-27 18:09:18.000000000 +0100
#+++ cmake/OpenCVConfig.cmake  2015-12-20 11:25:16.371944200 +0100
#@@ -86,5 +86,5 @@
#   execute_process(COMMAND ${CMAKE_CXX_COMPILER} -dumpmachine
#-                  OUTPUT_VARIABLE OPENCV_GCC_TARGET_MACHINE
#+                  OUTPUT_VARIABLE CMAKE_OPENCV_GCC_TARGET_MACHINE
#                   OUTPUT_STRIP_TRAILING_WHITESPACE)
#-  if(CMAKE_OPENCV_GCC_TARGET_MACHINE MATCHES "64")
#+  if(CMAKE_OPENCV_GCC_TARGET_MACHINE MATCHES "amd64|x86_64|AMD64")
#     set(MINGW64 1)
#EOF
## avoid invalid windres parameter -Winvalid-pch (version >= 3.3.1)
#sed -i.orig -e "s/-Winvalid-pch//" cmake/OpenCVPCHSupport.cmake
## remove -O2 compiler option to avoid compiler failure on mingw gcc version 9.2.0 (version >= 3.2.0)
#sed -i.bak -e "s/-O2//" cmake/OpenCVCompilerOptions.cmake
# also generate .pc files (version >= 4.1.2)
sed -i.bak -e "s/UNIX AND NOT ANDROID/(&) OR MINGW/" cmake/OpenCVGenPkgconfig.cmake
# fix install location (version >= 4.5.2)
sed -i.bak -e "s/WIN32/MSVC/" cmake/OpenCVInstallLayout.cmake
# fix cmake/templates/OpenCVConfig.root-WIN32.cmake.in (version >= 4.5.2)
patch -ulbf cmake/templates/OpenCVConfig.root-WIN32.cmake.in << EOF
@@ -173,2 +173,3 @@
   endif()
+elseif(EXISTS "\${CMAKE_CURRENT_LIST_FILE}/../../../../lib/cmake/opencv4/OpenCVConfig.cmake")
 else()
EOF
mkdir -p build &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_BUILD_3RDPARTY_LIBS:BOOL=FALSE -DWITH_VIDEOINPUT:BOOL=OFF -S. -Bbuild &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_BUILD_3RDPARTY_LIBS:BOOL=FALSE -DWITH_VIDEOINPUT:BOOL=ON -DWITH_OPENEXR:BOOL=OFF -S. -Bbuild &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_BUILD_3RDPARTY_LIBS:BOOL=TRUE -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_VIDEOINPUT:BOOL=ON -DWITH_OPENEXR:BOOL=OFF -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_BUILD_3RDPARTY_LIBS:BOOL=TRUE -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_VIDEOINPUT:BOOL=ON -DWITH_OPENEXR:BOOL=OFF -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_BUILD_3RDPARTY_LIBS:BOOL=TRUE -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_VIDEOINPUT:BOOL=ON -DWITH_OPENEXR:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2" -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(ls -d1 $MINGWPREFIX/include/vtk-*|tail -n1) -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_GSTREAMER:BOOL=OFF -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=OFF -DWITH_GSTREAMER:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=OFF -DWITH_GSTREAMER:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=OFF -DWITH_GSTREAMER:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DLAPACK_IMPL:STRING=OpenBLAS -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=OFF -DWITH_GSTREAMER:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DLAPACK_IMPL:STRING=OpenBLAS -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=OFF -DBUILD_ZLIB:BOOL=ON -DBUILD_JPEG:BOOL=OFF -DBUILD_JASPER:BOOL=OFF -DBUILD_PNG:BOOL=OFF -DBUILD_TIFF:BOOL=OFF -DBUILD_WEBP:BOOL=OFF -DBUILD_PROTOBUF:BOOL=ON -DBUILD_TBB:BOOL=OFF -DBUILD_OPENEXR:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DWITH_GSTREAMER:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DLAPACK_IMPL:STRING=OpenBLAS -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(ls -d1 $MINGWPREFIX/include/vtk-*|sort -V|tail -n1) -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=ON -DVTK_DIR:PATH=$(ls -d1 $MINGWPREFIX/lib/cmake/vtk-*|sort -V|tail -n1) -DBUILD_ZLIB:BOOL=ON -DBUILD_JPEG:BOOL=OFF -DBUILD_JASPER:BOOL=OFF -DBUILD_PNG:BOOL=OFF -DBUILD_TIFF:BOOL=OFF -DBUILD_WEBP:BOOL=OFF -DBUILD_PROTOBUF:BOOL=ON -DBUILD_TBB:BOOL=OFF -DBUILD_OPENEXR:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DWITH_GSTREAMER:BOOL=ON -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DLAPACK_IMPL:STRING=OpenBLAS -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$PWD -I$MINGWPREFIX/include/eigen3 -I$PWD/3rdparty/include/opencl/1.2 -I$(ls -d1 $MINGWPREFIX/include/vtk-*|sort -V|tail -n1) -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=ON -DVTK_DIR:PATH=$(ls -d1 $MINGWPREFIX/lib/cmake/vtk-*|sort -V|tail -n1) -DBUILD_ZLIB:BOOL=ON -DBUILD_JPEG:BOOL=OFF -DBUILD_JASPER:BOOL=OFF -DBUILD_PNG:BOOL=OFF -DBUILD_TIFF:BOOL=OFF -DBUILD_WEBP:BOOL=OFF -DBUILD_PROTOBUF:BOOL=ON -DBUILD_TBB:BOOL=OFF -DBUILD_OPENEXR:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DWITH_GSTREAMER:BOOL=ON -DWITH_LAPACK:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild &&
 PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DLAPACK_IMPL:STRING=OpenBLAS -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-fpermissive -I$(cygpath -m $PWD) -I$(cygpath -m $MINGWPREFIX/include/eigen3) -I$(cygpath -m $PWD/3rdparty/include/opencl/1.2) -I$(cygpath -m $(ls -d1 $MINGWPREFIX/include/vtk-*|sort -V|tail -n1)) $(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=ON -DVTK_DIR:PATH=$(cygpath -m $(ls -d1 $MINGWPREFIX/lib/cmake/vtk-*|sort -V|tail -n1)) -DBUILD_ZLIB:BOOL=ON -DBUILD_JPEG:BOOL=OFF -DBUILD_JASPER:BOOL=OFF -DBUILD_PNG:BOOL=OFF -DBUILD_TIFF:BOOL=OFF -DBUILD_WEBP:BOOL=OFF -DWITH_ADE:BOOL=OFF -DWITH_PROTOBUF:BOOL=OFF -DBUILD_PROTOBUF:BOOL=OFF -DBUILD_TBB:BOOL=OFF -DBUILD_OPENEXR:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DWITH_GSTREAMER:BOOL=ON -DWITH_LAPACK:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DLAPACK_IMPL:STRING=OpenBLAS -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-fpermissive -I$(cygpath -m $PWD) -I$(cygpath -m $MINGWPREFIX/include/eigen3) -I$(cygpath -m $PWD/3rdparty/include/opencl/1.2) -I$(cygpath -m $(ls -d1 $MINGWPREFIX/include/vtk-*|sort -V|tail -n1)) $(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=ON -DVTK_DIR:PATH=$(cygpath -m $(ls -d1 $MINGWPREFIX/lib/cmake/vtk-*|sort -V|tail -n1)) -DBUILD_ZLIB:BOOL=ON -DBUILD_JPEG:BOOL=OFF -DBUILD_JASPER:BOOL=OFF -DBUILD_PNG:BOOL=OFF -DBUILD_TIFF:BOOL=OFF -DBUILD_WEBP:BOOL=OFF -DBUILD_PROTOBUF:BOOL=ON -DBUILD_TBB:BOOL=OFF -DBUILD_OPENEXR:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DWITH_GSTREAMER:BOOL=ON -DWITH_LAPACK:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DLAPACK_IMPL:STRING=OpenBLAS -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-fpermissive -I$PWD -I$MINGWPREFIX/include/eigen3 -I$PWD/3rdparty/include/opencl/1.2 -I$(ls -d1 $MINGWPREFIX/include/vtk-*|sort -V|tail -n1) -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=ON -DVTK_DIR:PATH=$(ls -d1 $MINGWPREFIX/lib/cmake/vtk-*|sort -V|tail -n1) -DBUILD_ZLIB:BOOL=ON -DBUILD_JPEG:BOOL=OFF -DBUILD_JASPER:BOOL=OFF -DBUILD_PNG:BOOL=OFF -DBUILD_TIFF:BOOL=OFF -DBUILD_WEBP:BOOL=OFF -DBUILD_PROTOBUF:BOOL=ON -DBUILD_TBB:BOOL=OFF -DBUILD_OPENEXR:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DWITH_GSTREAMER:BOOL=ON -DWITH_LAPACK:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild &&
 #-DINSTALL_CREATE_DISTRIB:BOOL=ON 
 ####-- VTK is not found. Please set -DVTK_DIR in CMake to VTK build directory, or to VTK install subdirectory with VTKConfig.cmake file
 ####-- Could NOT find PythonLibs (missing: PYTHON_LIBRARIES PYTHON_INCLUDE_DIRS) (Required is exact version "3.7.4")
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(ls -d1 $MINGWPREFIX/include/vtk-*|tail -n1) -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_GSTREAMER:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(ls -d1 $MINGWPREFIX/include/vtk-*|tail -n1) -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_GSTREAMER:BOOL=OFF -DWITH_PTHREADS_PF:BOOL=OFF -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(ls -d1 $MINGWPREFIX/include/vtk-*|tail -n1) -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_GSTREAMER:BOOL=ON -DPYTHON2_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=OFF -DWITH_GSTREAMER:BOOL=ON -DPYTHON2_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild &&
 #PATH=$PYDIR:$PATH cmake.exe -G"MSYS Makefiles" -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=OFF -DWITH_GSTREAMER:BOOL=ON -DHAVE_FFMPEG:BOOL=ON -DPYTHON2_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -S. -Bbuild &&
 # fix qoutes issue for 64-bit (version >= 4.3.0)
 ( sed -i.bak -e "s/-DOPENCV_ALLOCATOR_STATS_COUNTER_TYPE=\"long long\"//" build/modules/core/CMakeFiles/opencv_core.dir/flags.make build/modules/core/CMakeFiles/opencv_perf_core.dir/flags.make || true ) &&
 ## remove -std=c++11 flag
 #sed -i.bak -e "s/-std=c++11//g" $(grep -l "\-std=c++11" $(find -name '*.make')) &&
 wl-showstatus build-install &&
 ( make -Cbuild all install/strip || make -Cbuild -j1 all install/strip || (
  cd 3rdparty/ffmpeg &&
  g++ -Wall -shared -o opencv_ffmpeg.dll -O2 -I../include -I../include/ffmpeg_ -I../../modules/highgui/src ffopencv.c -L../lib -lavformat -lavcodec -lavdevice -lswscale -lavutil -lws2_32 &&
  if ( echo $RUNPLATFORM | grep -q x86_64 ); then
   mv opencv_ffmpeg.dll opencv_ffmpeg_64.dll
  fi &&
  cd ../.. &&
  make -Cbuild -j1 all install/strip CMAKE_INSTALL_PREFIX=$INSTALLPREFIX
 ) ) &&
 #if [ -d $INSTALLPREFIX/x64/mingw ]; then
 #  mv -f $INSTALLPREFIX/x64/mingw/* $INSTALLPREFIX/ &&
 #  rmdir $INSTALLPREFIX/x64/mingw $INSTALLPREFIX/x64
 #fi &&
 #if ( echo $RUNPLATFORM | grep -vq x86_64 ) && [ -d $INSTALLPREFIX/x64 ]; then
 # mv $INSTALLPREFIX/x64 $INSTALLPREFIX/x86
 #fi &&
 #mkdir -p $INSTALLPREFIX/lib/pkgconfig &&
 #cp -f build/unix-install/*.pc $INSTALLPREFIX/lib/pkgconfig/ &&
 #mkdir -p $INSTALLPREFIX/share/OpenCV &&
 #mv $INSTALLPREFIX/*.cmake $INSTALLPREFIX/share/OpenCV/ &&
 #mkdir -p $INSTALLPREFIX/lib/cmake/OpenCV &&
 #cp $INSTALLPREFIX/lib/cmake/opencv4/* $INSTALLPREFIX/lib/cmake/OpenCV/ &&
 rm -f $INSTALLPREFIX/LICENSE &&
 mv -f $INSTALLPREFIX/*.cmd $INSTALLPREFIX/bin/ &&
 cp -rf $INSTALLPREFIX/include/opencv4/opencv2 $INSTALLPREFIX/include/ &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf OpenCV-$(echo $VERSION|sed 's/[a-z]*$//')
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#mkdir -p build_win &&
# wl-showstatus configure &&
# PATH=$PYDIR:$MINGWPREFIX/qt/bin:$PATH QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_LTO:BOOL=ON -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DLAPACK_IMPL:STRING=OpenBLAS -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(ls -d1 $MINGWPREFIX/include/vtk-*|sort -V|tail -n1) -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=ON -DVTK_DIR:PATH=$(ls -d1 $MINGWPREFIX/lib/cmake/vtk-*|sort -V|tail -n1) -DBUILD_PROTOBUF:BOOL=ON -DBUILD_ZLIB:BOOL=OFF -DBUILD_JPEG:BOOL=OFF -DBUILD_JASPER:BOOL=OFF -DBUILD_PNG:BOOL=OFF -DBUILD_TIFF:BOOL=OFF -DBUILD_WEBP:BOOL=OFF -DBUILD_OPENJPEG:BOOL=OFF -DBUILD_TBB:BOOL=OFF -DBUILD_OPENEXR:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DWITH_GSTREAMER:BOOL=ON -DHAVE_FFMPEG:BOOL=OFF -DWITH_FREETYPE:BOOL=ON -DWITH_GDAL:BOOL=ON -DWITH_OPENGL:BOOL=ON -DWITH_QT:BOOL=ON -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DPYTHON3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -DBUILD_opencv_python_tests:BOOL=OFF -DBUILD_PERF_TESTS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
# #PATH=$PYDIR:$MINGWPREFIX/qt/bin:$PATH QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg4/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg4/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} cmake.exe -GNinja -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_LTO:BOOL=ON -DOPENCV_GENERATE_PKGCONFIG:BOOL=ON -DLAPACK_IMPL:STRING=OpenBLAS -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENEXR:BOOL=ON -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(ls -d1 $MINGWPREFIX/include/vtk-*|sort -V|tail -n1) -I$(pkg-config.exe --cflags gstreamer-1.0)" -DWITH_VTK:BOOL=ON -DVTK_DIR:PATH=$(ls -d1 $MINGWPREFIX/lib/cmake/vtk-*|sort -V|tail -n1) -DBUILD_ZLIB:BOOL=OFF -DBUILD_JPEG:BOOL=OFF -DBUILD_JASPER:BOOL=OFF -DBUILD_PNG:BOOL=OFF -DBUILD_TIFF:BOOL=OFF -DBUILD_WEBP:BOOL=OFF -DBUILD_OPENJPEG:BOOL=OFF -DBUILD_PROTOBUF:BOOL=OFF -DBUILD_TBB:BOOL=OFF -DBUILD_OPENEXR:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DWITH_GSTREAMER:BOOL=ON -DHAVE_FFMPEG:BOOL=ON -DOPENCV_FFMPEG_USE_FIND_PACKAGE:BOOL=ON -DWITH_FREETYPE:BOOL=ON -DWITH_GDAL:BOOL=ON -DWITH_OPENGL:BOOL=ON -DWITH_QT:BOOL=ON -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DPYTHON3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -DBUILD_opencv_python_tests:BOOL=OFF -DBUILD_PERF_TESTS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_win &&
# #-DWITH_LAPACK:BOOL=OFF 
# # fix qoutes issue for 64-bit (version >= 4.3.0)
# sed -i.bak -e "s/-DOPENCV_ALLOCATOR_STATS_COUNTER_TYPE=\"long long\"//g" build_win/build.ninja &&
# ## fix zlib linkage (version >= 4.5.3)
# #sed -i.bak -e "s/ zlib / -lz /" build_win/modules/imgcodecs/CMakeFiles/opencv_imgcodecs.dir/linklibs.rsp &&
# ## fix missing link libraries (version >= 4.7.0)
# #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lprotobuf/" build_win/build.ninja &&
# wl-showstatus build-install &&
# ( ninja -Cbuild_win all install/strip || ninja -Cbuild_win -j1 all install/strip || (
#  cd 3rdparty/ffmpeg &&
#  g++ -Wall -shared -o opencv_ffmpeg.dll -O2 -I../include -I../include/ffmpeg_ -I../../modules/highgui/src ffopencv.c -L../lib -lavformat -lavcodec -lavdevice -lswscale -lavutil -lws2_32 &&
#  if ( echo $RUNPLATFORM | grep -q x86_64 ); then
#   mv opencv_ffmpeg.dll opencv_ffmpeg_64.dll
#  fi &&
#  cd ../.. &&
#  ninja -Cbuild_win -j1 all install/strip CMAKE_INSTALL_PREFIX=$INSTALLPREFIX
# ) ) &&
# #if [ -d $INSTALLPREFIX/x64/mingw ]; then
# #  mv -f $INSTALLPREFIX/x64/mingw/* $INSTALLPREFIX/ &&
# #  rmdir $INSTALLPREFIX/x64/mingw $INSTALLPREFIX/x64
# #fi &&
# #if ( echo $RUNPLATFORM | grep -vq x86_64 ) && [ -d $INSTALLPREFIX/x64 ]; then
# # mv $INSTALLPREFIX/x64 $INSTALLPREFIX/x86
# #fi &&
# mkdir -p $INSTALLPREFIX/lib/pkgconfig &&
# cp -f build_win/unix-install/*.pc $INSTALLPREFIX/lib/pkgconfig/ &&
# mkdir -p $INSTALLPREFIX/share/OpenCV &&
# mv $INSTALLPREFIX/*.cmake $INSTALLPREFIX/share/OpenCV/ &&
# rm -f $INSTALLPREFIX/LICENSE &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf OpenCV-$(echo $VERSION|sed 's/[a-z]*$//')
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: use TBB or Concurrency support for parrallel processing
####echo '#include "cap_ffmpeg_impl.hpp"' >> ffopencv.c



## fix undefined uintptr_t in build_win/3rdparty/ade/ade-0.1.1f/sources/ade/include/ade/typed_graph.hpp (version >= 4.5.2)
#mv build_win/3rdparty/ade/ade-0.1.1f/sources/ade/include/ade/typed_graph.hpp build_win/3rdparty/ade/ade-0.1.1f/sources/ade/include/ade/typed_graph.hpp.bak &&
#echo "#include <cstdint>" > build_win/3rdparty/ade/ade-0.1.1f/sources/ade/include/ade/typed_graph.hpp &&
#cat build_win/3rdparty/ade/ade-0.1.1f/sources/ade/include/ade/typed_graph.hpp.bak >> build_win/3rdparty/ade/ade-0.1.1f/sources/ade/include/ade/typed_graph.hpp



#export DEPENDENCIES=protobuf
#sed -i.bak -e "s/UNIX AND NOT ANDROID/(&) OR MINGW/" cmake/OpenCVGenPkgconfig.cmake
#PATH=$PYDIR:$PATH cmake.exe -GNinja -Wno-dev -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:String=Release -DBUILD_SHARED_LIBS:BOOL=ON -DOPENCV_ENABLE_NONFREE:BOOL=OFF -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF -DBUILD_USE_SYMLINKS:BOOL=OFF -DBUILD_PACKAGE:BOOL=OFF -DBUILD_JAVA:BOOL=OFF -DWITH_VTK:BOOL=OFF -DWITH_GSTREAMER:BOOL=OFF -DWITH_EIGEN:BOOL=ON -DWITH_CUDA:BOOL=OFF -DWITH_IPP:BOOL=OFF -DWITH_TBB:BOOL=OFF -DWITH_OPENGL:BOOL=ON -DWITH_OPENEXR:BOOL=ON -DBUILD_JASPER:BOOL=OFF -DBUILD_JPEG:BOOL=OFF -DBUILD_OPENEXR:BOOL=OFF -DBUILD_PNG:BOOL=OFF -DBUILD_PROTOBUF:BOOL=OFF -DBUILD_TIFF:BOOL=OFF -DBUILD_WEBP:BOOL=OFF -DBUILD_ZLIB:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_PERF_TESTS:BOOL=OFF -DINSTALL_TESTS:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF -DINSTALL_C_EXAMPLES:BOOL=OFF -DINSTALL_PYTHON_EXAMPLES:BOOL=OFF -DPYTHON2_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DCMAKE_CXX_FLAGS:STRING="-I$(pwd) -I$MINGWPREFIX/include/eigen3 -I$(pwd)/3rdparty/include/opencl/1.2 -I$(pkg-config.exe --cflags gstreamer-1.0)" .. &&
####find -name '*.pc.in'



