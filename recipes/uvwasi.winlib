export NAME="uvwasi"
export STATUS=
export URL=https://github.com/cjihrig/uvwasi
export BASENAME=uvwasi
export DESCRIPTION="uvwasi implements the WASI system call API. Under the hood, uvwasi leverages libuv where possible for maximum portability."
export CATEGORY=
export TYPE=library
#export VERSION=0.0.11
#export VERSIONDATE=20201009
#export VERSION=0.0.12
#export VERSIONDATE=20211118
#export VERSION=0.0.13
#export VERSIONDATE=20220906
export VERSION=0.0.14
export VERSIONDATE=20221217
wl-showstatus --package-version
export DEPENDENCIES=libuv
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/cjihrig/uvwasi/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/cjihrig/uvwasi/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix also building shared library
#sed -i.bak -e "s/\(add_library([^)]*\) STATIC /\1 /" CMakeLists.txt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DUVWASI_BUILD_TESTS:BOOL=ON -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DUVWASI_BUILD_TESTS:BOOL=ON -S. -Bbuild_shared &&
# wl-showstatus build &&
# ninja -Cbuild_static &&
# wl-showstatus build &&
# ninja -Cbuild_shared &&
# strip build_shared/out/*.dll &&
# #wl-showstatus build-install &&
# #ninja -Cbuild_static install/strip &&
# #wl-showstatus build-install &&
# #ninja -Cbuild_shared install/strip &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# cp -f include/* $INSTALLPREFIX/include/ &&
# cp -f build_static/*.a build_shared/*.a $INSTALLPREFIX/lib/ &&
# cp -f build_shared/out/*.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON -DWITH_SYSTEM_LIBUV:BOOL=ON -DBUILD_TESTING:BOOL=OFF -DUVWASI_BUILD_TESTS:BOOL=OFF -S. -Bbuild_win &&
 wl-showstatus build &&
 ninja -Cbuild_win &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
 cp -f include/* $INSTALLPREFIX/include/ &&
 cp -f build_win/libuvwasi_a.a $INSTALLPREFIX/lib/libuvwasi.a &&
 cp -f build_win/*.a $INSTALLPREFIX/lib/ &&
 cp -f build_win/out/*.dll $INSTALLPREFIX/bin/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



