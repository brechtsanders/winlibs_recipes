export NAME="muparserx"
export STATUS=
export URL=http://muparserx.beltoforion.de/
export BASENAME=muparserx
export DESCRIPTION="The evaluation of a mathematical expression is a standard task required in many applications. It can be solved by either using a standard math expression parser such as muparser or by embedding a scripting language such as Lua. There are however some limitations: Although muparser is pretty fast it will only work with scalar values and although Lua is very flexible it does neither support binary operators for arrays nor complex numbers. So if you need a math expression parser with support for arrays, matrices and strings muparserx may be able to help you. It was originally based on the original muparser engine but has since evolved into a standalone project with a completely new parsing engine."
export CATEGORY=dataprocessing,math
export TYPE=library
#export VERSION=4.0.7
#export VERSIONDATE=20160606
#export VERSION=4.0.8
#export VERSIONDATE=20181219
#export VERSION=4.0.10
#export VERSIONDATE=20211123
export VERSION=4.0.11
export VERSIONDATE=20211124
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=License.txt
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/beltoforion/muparserx/releases v"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/beltoforion/muparserx/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix _hypot errors
#####error: '_hypot' was not declared in this scope
#for F in parser/*.cpp; do
# mv $F $F.bak &&
# echo "#undef __STRICT_ANSI__" > $F &&
# sed -e "s/^\xEF\xBB\xBF//" $F.bak >> $F
#done
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS=ON -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS=ON -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



