#export NAME="Qt"
#export STATUS=
##export URL=http://trolltech.com/
#export URL=http://qt.nokia.com/
#export BASENAME=qt
#export DESCRIPTION="Qt - A cross-platform application and UI framework"
#export CATEGORY=gui
#export TYPE=library,application
##export VERSION=4.3.4
##export VERSION=4.5.0
##export VERSIONDATE=20100803
#export VERSION=4.5.3
#export VERSIONDATE=20100803
#wl-showstatus --package-version
#export DEPENDENCIES=sqlite3,mysql,postgresql,freetds,firebird,plibc
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=ninja
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.LGPL
#export LICENSETYPE=LGPL
##export DOWNLOADURL="http://ftp.ntua.gr/pub/X11/Qt/qt/source/ qt-win-opensource-src- .zip"
#export DOWNLOADURL="http://get.qt.nokia.com/qt/source/ qt-win-opensource-src- .zip"
##export DOWNLOADURL="http://get.qt.nokia.com/qtsdk/ qt-sdk-win-opensource- .exe"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://ftp.ntua.gr/pub/X11/Qt/qt/source/qt-win-opensource-src-$VERSION.zip
##export DOWNLOADSOURCEURL=http://ftp.heanet.ie/mirrors/ftp.trolltech.com/pub/qt/source/qt-win-opensource-src-$VERSION.zip
#export DOWNLOADSOURCEURL=http://get.qt.nokia.com/qt/source/qt-win-opensource-src-$VERSION.zip
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#unzip -oq $TARBALLDIR/$BASENAME/qt-win-opensource-src-$VERSION.zip
#cd qt-win-opensource-src-$VERSION
### fix redefinition of Interlocked functions (version <= 4.3.4)
##patch -ulbf src/corelib/arch/qatomic_windows.h << EOF
##--- src/corelib/arch/qatomic_windows.h  2008-02-19 18:35:08 +0100
##+++ src/corelib/arch/qatomic_windows.h  2010-03-03 14:15:26 +0100
##@@ -191 +191 @@
##-#if !(defined Q_CC_BOR) || (__BORLANDC__ < 0x560)
##+#if (!(defined Q_CC_BOR) || (__BORLANDC__ < 0x560)) && !defined __MINGW32__
##EOF
### fix undefined qt_internal_proc (version <= 4.3.4)
##patch -ulbf src/corelib/kernel/qeventdispatcher_win.cpp << EOF
##--- src/corelib/kernel/qeventdispatcher_win.cpp  2008-02-19 18:35:08 +0100
##+++ src/corelib/kernel/qeventdispatcher_win.cpp  2010-03-03 14:26:42 +0100
##@@ -161,2 +161,3 @@
##
##+LRESULT CALLBACK qt_internal_proc(HWND hwnd, UINT message, WPARAM wp, LPARAM lp);
## QEventDispatcherWin32Private::~QEventDispatcherWin32Private()
##EOF
### fix undefined qt_sendSpontaneousEvent (version <= 4.3.4)
##patch -ulbf src/gui/inputmethod/qwininputcontext_win.cpp << EOF
##--- src/gui/inputmethod/qwininputcontext_win.cpp  2010-03-03 15:29:10 +0100
##+++ src/gui/inputmethod/qwininputcontext_win.cpp  2010-03-03 15:29:34 +0100
##@@ -57,2 +57,3 @@
## #include <initguid.h>
##+extern bool qt_sendSpontaneousEvent(QObject *receiver, QEvent *event);
##EOF
## determine installation path needed
#mkdir -p $INSTALLPREFIX
#pushd $INSTALLPREFIX
#INSTALLPREFIXEXTRA=`pwd -W|sed -e "s/^[a-zA-Z]://"`
#popd
#mkdir -p $INSTALLPREFIX`pwd -W|sed -e "s/^[a-zA-Z]://"`
#
##mkdir -p $INSTALLPREFIX
##pushd $INSTALLPREFIX/..
##INSTALLPREFIXEXTRA=`pwd -W|sed -e "s/^[a-zA-Z]://"`
##popd
##mkdir -p $INSTALLPREFIXEXTRA/inst_$BASENAME-$VERSION$INSTALLPREFIXEXTRA/qt-win-opensource-src-$VERSION
##mkdir -p d:/Prog/MinGW-mSys.newer/home/win32/inst_qt-$VERSION/Prog/MinGW-mSys.newer/home/win32/qt-win-opensource-src-$VERSION/
##mkdir -p `mount|sed -ne "s?^[c-zC-Z]:\(.*\) on / type.*?\1?p"|tr \\\ /`$INSTALLPREFIX`mount|sed -ne "s?^[c-zC-Z]:\(.*\) on / type.*?\1?p"|tr \\\ /`/home/bsanders/qt-win-opensource-src-$VERSION/include
##mkdir -p $INSTALLPREFIX`mount|sed -ne "s?^[c-zC-Z]:\(.*\) on / type.*?\1?p"|tr \\\ /`/home/bsanders/qt-win-opensource-src-$VERSION/include
##INSTALL_ROOT=`mount|sed -ne "s?^[c-zC-Z]:\(.*\) on / type.*?\1?p"|tr \\\ /`$INSTALLPREFIX make install
##INSTALL_ROOT=$INSTALLPREFIXEXTRA/inst_$BASENAME-$VERSION make install
#
##$COMSPEC /c "make install INSTALL_ROOT=$INSTALLPREFIX"
##LDFLAGS="-Wl,--enable-auto-import -static-libstdc++" 
## answer "y" to accept the license
##mingw32-make
##echo "y" | ./configure.exe -platform win32-g++ &&
##echo "y" | ./configure.exe -platform win32-g++ -release -shared &&
## make -j1 &&
#####kernel/qeventdispatcher_win.cpp:169: error: 'qt_internal_proc' was not declared in this scope
#
### fix undefined reference to IID_IPersistFile
##patch -ulbf qmake/Makefile.win32-g++-sh << EOF
##--- qmake/Makefile.win32-g++-sh  2009-09-29 13:04:10 +0200
##+++ qmake/Makefile.win32-g++-sh  2010-10-15 19:17:34 +0200
##@@ -26,4 +26,4 @@
## CXXFLAGS    =   \$(CFLAGS)
##-LFLAGS     =
##-LIBS       = -lole32 -luuid
##+LFLAGS     = -Wl,--enable-auto-import
##+LIBS       = -lole32 -luuid -lplibc
## LINKQMAKE   =  g++ \$(LFLAGS) -o qmake.exe \$(OBJS) \$(QTOBJS) \$(LIBS)
##EOF
#
##-plugin-sql-sqlite -plugin-sql-mysql -I $MINGWPREFIX/include/mysql -plugin-sql-psql -plugin-sql-tds -plugin-sql-ibase
#cat > answers.tmp << EOF
#y
#o
#y
#EOF
##make -j1 qmake_all sub-tools-bootstrap sub-moc sub-webkit-install_subtargets all install INSTALL_ROOT=$INSTALLPREFIXEXTRA COPY="cp -f" COPY_DIR="cp -rf" MKDIR="mkdir -p" &&
##alias mingw32-make
#wl-showstatus configure &&
#./configure.exe -platform win32-g++ -release -shared -plugin-sql-odbc < answers.tmp &&
# make -j1 qmake_all all &&
# make -j1 install INSTALL_ROOT=$INSTALLPREFIXEXTRA COPY="cp -f" COPY_DIR="cp -rf" MKDIR="mkdir -p" &&
# mkdir $INSTALLPREFIX/qt &&
# mv $INSTALLPREFIX`pwd -W|sed -e "s?^.:??"`/* $INSTALLPREFIX/qt/ &&
# ( rmdir -p $INSTALLPREFIX`pwd -W|sed -e "s?^.:??"` || true ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf qt-win-opensource-src-$VERSION
##export QTLIB_VER=$VERSION
##LIBS="-lplibc -lws2_32 -lole32"



#export NAME="Qt"
#export STATUS=
##export URL=http://qt.nokia.com/
##export URL=http://qt.digia.com/
#export URL=http://qt-project.org/
#export BASENAME=qt
#export DESCRIPTION="Qt - A cross-platform application and UI framework"
#export CATEGORY=gui,framework
#export TYPE=library,application
##export VERSION=4.6.4
##export VERSIONDATE=20110713
##export VERSION=4.7.2
##export VERSIONDATE=20110315
##export VERSION=4.7.3
##export VERSIONDATE=20110504
##export VERSION=4.7.4
##export VERSIONDATE=20110901
##export VERSION=4.8.0
##export VERSIONDATE=20111215
#####All the required DirectShow/Direct3D files couldn't be found.
##export VERSION=4.8.1
##export VERSIONDATE=20120328
##export VERSION=4.8.4
##export VERSIONDATE=20130122
##export VERSION=4.8.5
##export VERSIONDATE=20130704
##export VERSION=4.8.6
##export VERSIONDATE=20140424
##export VERSION=4.8.7
##export VERSIONDATE=20150721
##export VERSION=5.0.0
##export VERSIONDATE=20130122
##export VERSION=5.0.1
##export VERSIONDATE=20130131
##export VERSION=5.0.2
##export VERSIONDATE=20130410
##export VERSION=5.1.1
##export VERSIONDATE=20130828
##export VERSION=5.2.0
##export VERSIONDATE=20131212
##export VERSION=5.2.1
##export VERSIONDATE=20140205
##export VERSION=5.3.0
##export VERSIONDATE=20140520
##export VERSION=5.3.1
##export VERSIONDATE=20140625
##export VERSION=5.3.2
##export VERSIONDATE=20140916
##export VERSION=5.5.0
##export VERSIONDATE=20150721
#####qtbase/mkspecs/features/qt_module_headers.prf:61: Cannot create directory \E:\Prog\MinGW-mSys32-4.7.0\msys\home\win32\qt-everywhere-opensource-src-5.0.1\qtbase\include\QtCore.
##export VERSION=5.5.1
##export VERSIONDATE=20151015
#####.moc/release/moc_context3d_p.cpp:1935:16: error: 'WINBOOL' is not a member of 'QtCanvas3D::CanvasContext'
##export VERSION=5.6.0
##export VERSIONDATE=20160406
#####qtbase/src/corelib/io/qfilesystemengine_win.cpp:630:5: error: 'QT_FILE_ID_128' does not name a type
##export VERSION=5.6.1
##export VERSIONDATE=20160608
##export VERSION=5.6.3
##export VERSIONDATE=20170922
#####qtbase/qmake/generators/win32/msvc_vcproj.cpp:114:43: error: 'KEY_WOW64_32KEY' was not declared in this scope
##export VERSION=5.7.0
##export VERSIONDATE=20160616
##export VERSION=5.7.1
##export VERSIONDATE=20161014
##export VERSION=5.8.0
##export VERSIONDATE=20170123
##export VERSION=5.9.0
##export VERSIONDATE=20170531
##export VERSION=5.9.1
##export VERSIONDATE=20170630
##export VERSION=5.9.2
##export VERSIONDATE=20171006
##export VERSION=5.9.3
##export VERSIONDATE=20171122
##export VERSION=5.9.4
##export VERSIONDATE=20180123
##export VERSION=5.9.6
##export VERSIONDATE=20180605
##export VERSION=5.9.7
##export VERSIONDATE=20181022
##export VERSION=5.9.8
##export VERSIONDATE=20190415
##export VERSION=5.9.9
##export VERSIONDATE=20191216
##export VERSION=5.10.0
##export VERSIONDATE=20171207
##export VERSION=5.10.1
##export VERSIONDATE=20180214
#####../../../../include/QtPlatformSupport/5.7.0/QtPlatformSupport/private/qbasicfontdatabase_p.h:1:89: fatal error: ../../../../../src/platformsupport/fontdatabases/basic/qbasicfontdatabase_p.h: No such file or directory
##export VERSION=5.11.0
##export VERSIONDATE=20180522
#####./.obj/release/qwinthumbnailtoolbar.o:qwinthumbnailtoolbar.cpp:(.text+0x8e4): undefined reference to `DwmInvalidateIconicBitmaps'
##export VERSION=5.11.1
##export VERSIONDATE=20180618
##export VERSION=5.11.2
##export VERSIONDATE=20180918
#####.moc/release/moc_qwinthumbnailtoolbar.cpp:139:78: error: invalid use of incomplete type 'class QPixmap'
##export VERSION=5.11.3
##export VERSIONDATE=20181203
##export VERSION=5.12.0
##export VERSIONDATE=20181205
##export VERSION=5.12.1
##export VERSIONDATE=20190201
##export VERSION=5.12.2
##export VERSIONDATE=20190314
##export VERSION=5.12.3
##export VERSIONDATE=20190417
##export VERSION=5.12.4
##export VERSIONDATE=20190614
##export VERSION=5.12.5
##export VERSIONDATE=20190911
##export VERSION=5.12.6
##export VERSIONDATE=20191113
##export VERSION=5.12.7
##export VERSIONDATE=20200130
##export VERSION=5.12.8
##export VERSIONDATE=20200407
##export VERSION=5.12.9
##export VERSIONDATE=20200616
##export VERSION=5.12.10
##export VERSIONDATE=20201110
##export VERSION=5.13.0
##export VERSIONDATE=20190618
##export VERSION=5.13.1
##export VERSIONDATE=20190905
##export VERSION=5.13.2
##export VERSIONDATE=20191031
#####qtwinextras/src/winextras/qwinthumbnailtoolbar.cpp:(.text+0x8e4): undefined reference to `DwmInvalidateIconicBitmaps'
##export VERSION=5.14.0
##export VERSIONDATE=20191211
##export VERSION=5.14.1
##export VERSIONDATE=20200127
#####qtbase/src/gui/rhi/qrhid3d11_p_p.h:57:10: fatal error: dxgi1_3.h: No such file or directory
#####assimpimporter.cpp:(.text+0xd4f): undefined reference to `Assimp::Importer::SetPropertyInteger(char const*, int)'
##export VERSION=5.14.2
##export VERSIONDATE=20200331
#####Modules will not be built. Qt WebEngine on Windows requires MSVC or Clang (MSVC mode).
#export VERSION=5.15.0
#export VERSIONDATE=20200525
#wl-showstatus --package-version
##export DEPENDENCIES=sqlite3,mysql,postgresql,freetds,firebird,plibc,zlib,libpng,libjpeg,openssl,pcre,glib2,icu
##export DEPENDENCIES=sqlite3,mysql,postgresql,freetds,firebird,plibc,zlib,libpng,libjpeg,openssl,pcre,glib2,icu,dbus
##export DEPENDENCIES=sqlite3,mysql,postgresql,freetds,firebird,zlib,libpng,libjpeg,openssl,pcre,glib2,icu,dbus
##export DEPENDENCIES=sqlite3,mysql,postgresql,freetds,firebird,zlib,libpng,libjpeg,openssl,pcre,glib2,icu,dbus,jasper,libwebp
##export DEPENDENCIES=sqlite3,mariadb-client,postgresql,freetds,firebird,zlib,libpng,libjpeg,libtiff,libmng,openssl,pcre,glib2,icu,dbus,jasper,libwebp,freetype2,harfbuzz,assimp,doubleconversion
#export DEPENDENCIES=sqlite3,mariadb-client,postgresql,freetds,firebird,zlib,libpng,libjpeg,libtiff,libmng,openssl,pcre2,glib2,icu,dbus,jasper,libwebp,freetype2,harfbuzz,assimp,doubleconversion,libproxy
#export OPTIONALDEPENDENCIES=xcb
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
##export LICENSEFILE=LICENSE.LGPL
#export LICENSEFILE=LICENSE.LGPLv3
#export LICENSETYPE="GPL/LGPL"
##export DOWNLOADURL="http://get.qt.nokia.com/qt/source/ qt-everywhere-opensource-src-"
##export DOWNLOADURL="http://qt-project.org/downloads qt-everywhere-opensource-src-"
##export DOWNLOADURL="http://www.qt.io/download-open-source/ qt-everywhere-opensource-src-"
#export DOWNLOADURL="https://download.qt.io/official_releases/qt/ qt-everywhere-opensource-src-"
##export DOWNLOADURL="http://download.qt.io/archive/qt/"
##export DOWNLOADURL="https://github.com/qt/qt5/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://get.qt.nokia.com/qt/source/qt-everywhere-opensource-src-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://download.qt-project.org/official_releases/qt/`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/"`/$VERSION/qt-everywhere-opensource-src-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://download.qt-project.org/official_releases/qt/`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/"`/$VERSION/qt-everywhere-opensource-src-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://releases.qt-project.org/qt5/$VERSION/single/qt-everywhere-opensource-src-$VERSION.zip
##export DOWNLOADSOURCEURL=http://download.qt-project.org/official_releases/qt/`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/"`/$VERSION/single/qt-everywhere-opensource-src-$VERSION.zip
##export DOWNLOADSOURCEURL=http://download.qt.io/official_releases/qt/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$VERSION/single/qt-everywhere-opensource-src-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=http://download.qt.io/archive/qt/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$VERSION/single/qt-everywhere-opensource-src-$VERSION.tar.xz
##export DOWNLOADSOURCEURL=https://download.qt.io/official_releases/qt/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$VERSION/single/qt-everywhere-src-$VERSION.zip
##export DOWNLOADSOURCEURL=https://download.qt.io/official_releases/qt/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$VERSION/single/qt-everywhere-src-$VERSION.tar.xz
##export DOWNLOADSOURCEURL=https://download.qt.io/official_releases/qt/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$VERSION/single/qt-everywhere-opensource-src-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://download.qt.io/archive/qt/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$VERSION/single/qt-everywhere-src-$VERSION.tar.xz
##export DOWNLOADSOURCEURL=https://download.qt.io/official_releases/qt/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$VERSION/single/qt-everywhere-src-$VERSION.tar.xz
##export DOWNLOADSOURCEURL=https://github.com/qt/qt5/archive/v$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/qt5-$VERSION.tar.gz
#wl-wait4deps
##tar xz --force-local -f $TARBALLDIR/$BASENAME/qt-everywhere-opensource-src-$VERSION.tar.gz
##unzip -oq $TARBALLDIR/$BASENAME/qt-everywhere-opensource-src-$VERSION.zip
##tar xJ --force-local -f $TARBALLDIR/$BASENAME/qt-everywhere-opensource-src-$VERSION.tar.xz
##tar xJ --force-local -f $TARBALLDIR/$BASENAME/qt-everywhere-src-$VERSION.tar.xz
##cd qt-everywhere-opensource-src-$VERSION
#mkdir -p qt-$VERSION
##tar xJ --force-local -f $TARBALLDIR/$BASENAME/qt-everywhere-opensource-src-$VERSION.tar.xz --strip-components=1 -Cqt-$VERSION
##unzip -oq $TARBALLDIR/$BASENAME/qt-everywhere-src-$VERSION.zip
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/qt-everywhere-src-$VERSION.tar.xz --strip-components=1 -Cqt-$VERSION
##tar xJ --force-local -f $TARBALLDIR/$BASENAME/qt-everywhere-opensource-src-$VERSION.tar.xz --strip-components=1 -Cqt-$VERSION
##tar xJ --force-local -f $TARBALLDIR/$BASENAME/qt-everywhere-src-$VERSION.tar.xz --strip-components=1 -Cqt-$VERSION
##tar xz --force-local -f $TARBALLDIR/$BASENAME/qt5-$VERSION.tar.gz --strip-components=1 -Cqt-$VERSION
#cd qt-$VERSION
## fix missing DirectX (needed for phonon)
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME http://trent.gamblin.ca/dx/dx9mgw.zip
#unzip -oq $TARBALLDIR/$BASENAME/dx9mgw.zip
#mv -f dx9mgw/lib* . || cp -rf dx9mgw/lib* .
##cp -rf dx9mgw/include/* include/
### avoid std=c++0x
##mv qtbase/mkspecs/common/g++-base.conf qtbase/mkspecs/common/g++-base.conf.bak
##grep -v "std=c++0x" qtbase/mkspecs/common/g++-base.conf.bak > qtbase/mkspecs/common/g++-base.conf
##mv qtbase/mkspecs/win32-g++/qmake.conf qtbase/mkspecs/win32-g++/qmake.conf.bak
##grep -v "std=c++0x"  qtbase/mkspecs/win32-g++/qmake.conf.bak > qtbase/mkspecs/win32-g++/qmake.conf
##mv qtbase/mkspecs/linux-icc/qmake.conf qtbase/mkspecs/linux-icc/qmake.conf.bak
##grep -v "std=c++0x"  qtbase/mkspecs/linux-icc/qmake.conf.bak > qtbase/mkspecs/linux-icc/qmake.conf
### fix missing __cpuid in src/corelib/tools/qsimd.cpp (version >= 4.8.5 < 5.0.0)
##patch -ulbf src/corelib/tools/qsimd.cpp << EOF
##--- src/corelib/tools/qsimd.cpp
##+++ src/corelib/tools/qsimd.cpp
##@@ -47,7 +47,7 @@
## #include <windows.h>
## #endif
## 
##-#if defined(Q_OS_WIN64) && !defined(Q_CC_GNU)
##+#if defined(Q_OS_WIN64) || defined(Q_OS_WIN32)
## #include <intrin.h>
## #endif
##EOF
### fix include error (version >= 5.7.0)
###for F in qtbase/include/QtPlatformSupport/$VERSION/QtPlatformSupport/private/*_p.h qtbase/include/QtPrintSupport/$VERSION/QtPrintSupport/qpa/*.h qtbase/include/QtPrintSupport/$VERSION/QtPrintSupport/private/*_p.h qtxmlpatterns/include/QtXmlPatterns/$VERSION/QtXmlPatterns/private/*_p.h; do
##for F in */include/*/$VERSION/*/private/*_p.h qtbase/include/QtPrintSupport/$VERSION/QtPrintSupport/qpa/*.h; do
## mv $F $F.bak &&
## sed -e "s?../../../../\(../src\)?\1?" $F.bak > $F
##done
### fix object destination folder (version >= 5.7.0)
##for F in qtimageformats/src/plugins/imageformats/webp/Makefile* qtimageformats/src/plugins/imageformats/webp/object_script.qwebp*; do
## mv $F $F.bak &&
## sed -e "s?\(.obj/\)\(debug\|release\)/$(pwd -W | sed -e "s?^[a-z]:/??i")[^ ]*/\([^ /]*\.o\)?\1\2/\3?" $F.bak > $F
##done
## fix missing SHARE_INFO_1 in qtbase/src/corelib/io/qfilesystemengine_win.cpp (version >= 5.10.0)
#echo "#include <levmar.h>" | gcc -E -xc - &> /dev/null && sed -i.bak -e "s/\(#\s*include <\)lm\.h\(>\)/\1levmar.h\2\n\1lmshare.h\2\n\1lmapibuf.h\2/" qtbase/src/corelib/io/qfilesystemengine_win.cpp
## fix missing DwmSetIconicThumbnail in qtwinextras/src/winextras/qwinthumbnailtoolbar.cpp (version >= 5.11.0)
#mv qtwinextras/src/winextras/qwinthumbnailtoolbar.cpp qtwinextras/src/winextras/qwinthumbnailtoolbar.cpp.bak &&
#echo "#define _WIN32_WINNT 0x0601" > qtwinextras/src/winextras/qwinthumbnailtoolbar.cpp &&
#cat qtwinextras/src/winextras/qwinthumbnailtoolbar.cpp.bak >> qtwinextras/src/winextras/qwinthumbnailtoolbar.cpp
### determine installation path needed
### fix forward declaration of class QPixmap (version >= 5.11.2)
##mv qtbase/src/corelib/codecs/qlatincodec.cpp qtbase/src/corelib/codecs/qlatincodec.cpp.bak &&
##echo "#include <../../gui/image/qpixmap.h>" > qtbase/src/corelib/codecs/qlatincodec.cpp &&
##cat qtbase/src/corelib/codecs/qlatincodec.cpp.bak >> qtbase/src/corelib/codecs/qlatincodec.cpp
### fix forward declaration of class QPixmap (version >= 5.11.2)
##mv qtwinextras/src/winextras/.moc/release/moc_qwinthumbnailtoolbar.cpp qtwinextras/src/winextras/.moc/release/moc_qwinthumbnailtoolbar.cpp.bak &&
##echo "#include <../../../../../qtbase/src/gui/image/qpixmap.h>" > qtwinextras/src/winextras/.moc/release/moc_qwinthumbnailtoolbar.cpp &&
##echo "#include <../../qwinthumbnailtoolbar.h>" >> qtwinextras/src/winextras/.moc/release/moc_qwinthumbnailtoolbar.cpp &&
##cat qtwinextras/src/winextras/.moc/release/moc_qwinthumbnailtoolbar.cpp.bak >> qtwinextras/src/winextras/.moc/release/moc_qwinthumbnailtoolbar.cpp
### fix forward declaration of class QPixmap (version >= 5.11.2)
##mv qtbase/src/corelib/kernel/qmetatype.h qtbase/src/corelib/kernel/qmetatype.h.bak &&
##echo "#include <../../gui/image/qpixmap.h>" > qtbase/src/corelib/kernel/qmetatype.h &&
##cat qtbase/src/corelib/kernel/qmetatype.h.bak >> qtbase/src/corelib/kernel/qmetatype.h
### fix missing DwmInvalidateIconicBitmaps in qtwinextras/src/winextras/qwinthumbnailtoolbar.cpp (version >= 5.13.2)
##patch -ulbf qtwinextras/src/winextras/qwinthumbnailtoolbar.cpp << EOF
##@@ -241,7 +241,9 @@
##     q->setIconicPixmapNotificationsEnabled(enabled);
##     if (enabled && invalidate) {
##+/*
##         const HRESULT hr = DwmInvalidateIconicBitmaps(hwnd);
##         if (FAILED(hr))
##             qWarning() << QWinThumbnailToolBarPrivate::msgComFailed("DwmInvalidateIconicBitmaps", hr);
##+*/
##     }
## }
##@@ -391,7 +393,9 @@
##     const QSize maxSize(HIWORD(message->lParam), LOWORD(message->lParam));
##     if (const HBITMAP bitmap = iconicThumbnail.bitmap(maxSize)) {
##+/*
##         const HRESULT hr = DwmSetIconicThumbnail(message->hwnd, bitmap, dWM_SIT_DISPLAYFRAME);
##         if (FAILED(hr))
##             qWarning() << QWinThumbnailToolBarPrivate::msgComFailed("DwmSetIconicThumbnail", hr);
##+*/
##     }
## }
##@@ -406,7 +410,9 @@
##     POINT offset = {0, 0};
##     if (const HBITMAP bitmap = iconicLivePreview.bitmap(maxSize)) {
##+/*
##         const HRESULT hr = DwmSetIconicLivePreviewBitmap(message->hwnd, bitmap, &offset, dWM_SIT_DISPLAYFRAME);
##         if (FAILED(hr))
##             qWarning() << QWinThumbnailToolBarPrivate::msgComFailed("DwmSetIconicLivePreviewBitmap", hr);
##+*/
##     }
## }
##EOF
## fix missing std::runtime_error in qtlocation/src/3rdparty/mapbox-gl-native/platform/default/bidi.cpp (version >= 5.13.2)
#mv qtlocation/src/3rdparty/mapbox-gl-native/platform/default/bidi.cpp qtlocation/src/3rdparty/mapbox-gl-native/platform/default/bidi.cpp.bak &&
#echo "#include <stdexcept>" > qtlocation/src/3rdparty/mapbox-gl-native/platform/default/bidi.cpp &&
#cat qtlocation/src/3rdparty/mapbox-gl-native/platform/default/bidi.cpp.bak >> qtlocation/src/3rdparty/mapbox-gl-native/platform/default/bidi.cpp
## fix missing int32_t in qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/util/convert.cpp (version >= 5.13.2)
#mv qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/util/convert.cpp qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/util/convert.cpp.bak &&
#echo "#include <stdint.h>" > qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/util/convert.cpp &&
#cat qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/util/convert.cpp.bak >> qtlocation/src/3rdparty/mapbox-gl-native/src/mbgl/util/convert.cpp
## fix detection of newer Ninja versions in qtwebengine/configure.pri (version >= 5.13.2)
#patch -ulbf qtwebengine/configure.pri << EOF
#@@ -94,2 +94,3 @@
#         contains(version, "1.[7-9].*"): return(true)
#+        contains(version, "1.1[0-9].*"): return(true)
#         qtLog("Ninja version too old")
#EOF
##mkdir -p $INSTALLPREFIX
##pushd $INSTALLPREFIX
##INSTALLPREFIXEXTRA=`pwd -W|sed -e "s/^[a-zA-Z]://"`
###INSTALLPREFIXWIN=`pwd -W|sed -e "s?/?\\\\\\\\?g"`
##popd
##mkdir -p $INSTALLPREFIX`pwd -W|sed -e "s/^[a-zA-Z]://"`
##export C_INCLUDE_PATH=$MINGWDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH}
##export CPLUS_INCLUDE_PATH=$MINGWDIR/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH}
##cat > answers.tmp << EOF
##o
##y
##EOF
### avoid using missing debug ICU libraries in static builds
##sed -i.bak -e "s/\(lsicu..\)d/\1/g" qtbase/src/corelib/configure.json
#wl-showstatus configure &&
##./configure.exe -platform win32-g++ -release -shared -plugin-sql-odbc < answers.tmp &&
##echo yes|sh configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -release -shared -silent -optimized-qmake -plugin-sql-odbc -fast &&
##echo y|./configure.exe -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -release -shared -plugin-sql-odbc -plugin-sql-sqlite -plugin-sql-mysql -plugin-sql-psql -plugin-sql-tds &&
##echo y|./configure.exe -platform win32-g++ -prefix $INSTALLPREFIX/qt -I $MINGWPREFIX/include/mysql -opensource -release -shared -plugin-sql-odbc -plugin-sql-sqlite -plugin-sql-mysql -plugin-sql-psql -plugin-sql-tds &&
##echo y|./configure.exe -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -release -shared -plugin-sql-odbc &&
##echo y|./configure.exe -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -release -shared -plugin-sql-odbc -openssl -phonon -phonon-backend -dbus &&
##echo y|./configure.exe -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -release -shared -fast -no-exceptions -no-dsp -no-vcproj -plugin-sql-odbc -openssl -phonon -phonon-backend &&
## mkdir -p $INSTALLPREFIX/qt &&
## cp -rf mkspecs $INSTALLPREFIX/qt/ &&
## mingw32-make -j 1 &&
##echo yes|./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -release -shared -plugin-sql-odbc -openssl &&
##echo yes|./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -release -shared -strip -fully-process -optimized-qmake -plugin-sql-odbc -openssl -opengl -system-zlib -system-libpng -system-pcre -no-linuxfb &&
##echo y|./configure.exe -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -release -shared -plugin-sql-odbc -openssl -phonon -phonon-backend &&
##echo y|./configure.exe -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -release -shared -plugin-sql-odbc -openssl -phonon -phonon-backend -dbus -I $MINGWPREFIX/include/dbus-1.0 -I $MINGWPREFIX/lib/dbus-1.0/include &&
##echo y|$PERLDIR/bin/perl.exe configure -prefix $INSTALLPREFIX/qt -opensource -release -shared -strip -qmake -plugin-sql-odbc -opengl desktop -fontconfig -glib -system-zlib -system-pcre -icu -system-libpng -system-libjpeg -system-freetype -no-vcproj -no-incredibuild-xge -openssl -fully-process &&
##echo yes|./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -release -shared -strip -optimized-qmake -plugin-sql-odbc -plugin-sql-sqlite -opengl desktop -fontconfig -no-glib -system-zlib -system-pcre -icu -no-dbus -no-xcb -system-libpng -system-libjpeg -system-freetype -openssl -fully-process &&
##./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -strip -optimized-qmake -plugin-sql-odbc -plugin-sql-sqlite -opengl desktop -fontconfig -no-glib -system-zlib -system-pcre -icu -no-dbus -no-xcb -system-libpng -system-libjpeg -qt-freetype -openssl -fully-process &&
##./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -strip -optimized-qmake -plugin-sql-odbc -plugin-sql-sqlite -opengl desktop -fontconfig -no-glib -system-zlib -system-pcre -icu -no-dbus -no-xcb -system-libpng -system-libjpeg -qt-freetype -openssl &&
##./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -optimized-qmake -plugin-sql-odbc -plugin-sql-sqlite -opengl desktop -fontconfig -no-glib -system-zlib -icu -no-dbus -system-libpng -system-libjpeg -qt-freetype -openssl &&
##./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -optimized-qmake -plugin-sql-odbc -plugin-sql-sqlite -opengl desktop -fontconfig -no-glib -system-zlib -icu -no-dbus -system-libpng -system-libjpeg -qt-freetype -openssl -no-xcb -no-compile-examples &&
##./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -optimized-qmake -plugin-sql-odbc -plugin-sql-sqlite -opengl desktop -no-fontconfig -no-glib -system-zlib -icu -no-dbus -system-libpng -system-libjpeg -qt-freetype -openssl -no-xcb -no-compile-examples &&
##./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-rpath -skip qtserialbus -plugin-sql-odbc -plugin-sql-sqlite -opengl desktop -fontconfig -no-glib -icu -no-dbus -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-pcre -openssl -no-xcb -no-compile-examples -I $MINGWPREFIX/include/freetype2 &&
##./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-rpath -skip qtserialbus -plugin-sql-odbc -plugin-sql-sqlite -opengl desktop -no-glib -icu -no-dbus -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -openssl -no-xcb -no-compile-examples -I $MINGWPREFIX/include/freetype2 &&
##PATH=$PATH:$PY2DIR ./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-rpath -strip -skip qtserialbus -sql-odbc -sql-sqlite -opengl desktop -no-glib -icu -system-pcre -no-dbus -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -openssl -openssl-linked -no-xcb -no-compile-examples -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
##PATH=$PATH:$PY2DIR ./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -no-dbus -system-sqlite -system-zlib -system-libpng -system-libjpeg -qt-doubleconversion -system-freetype -system-harfbuzz -spellchecker -libproxy -system-proxies -openssl -openssl-linked -no-xcb -no-compile-examples -system-proxies -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
##PATH=$PATH:$PY2DIR ./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -no-dbus -system-sqlite -system-zlib -system-libpng -system-libjpeg -qt-doubleconversion -system-freetype -system-harfbuzz -spellchecker -libproxy -system-proxies -openssl -openssl-linked -no-xcb -no-compile-examples -system-proxies -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
##PATH=$PATH:$PY2DIR ./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -spellchecker -libproxy -system-proxies -openssl -openssl-linked -no-xcb -no-compile-examples -system-proxies -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
#PATH=$PATH:$PY2DIR ./configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -openssl -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -nomake examples -system-proxies -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
##-sql-tds -sql-mysql -sql-psql
# ## fix missing ft2build.h (version >= 5.7.0)
# #mv qtbase/src/plugins/platforms/windows/Makefile.Release qtbase/src/plugins/platforms/windows/Makefile.Release.bak &&
# #sed -e "s?^CX*FLAGS\s*=.*?& -I$MINGWPREFIX/include/freetype2?" qtbase/src/plugins/platforms/windows/Makefile.Release.bak > qtbase/src/plugins/platforms/windows/Makefile.Release &&
# # fix missing include files
# for F in $(grep -l "../../../../.." */include/*/$VERSION/*/*/*.h); do
#   mv $F $F.bak &&
#   sed -e "s?#include \"../../../../../\(.*\)\"?#include \"$(pwd -W)/$(echo $F|sed -e "s/\/.*$//")/\1\"?; s?</\([A-Z]\)/?<\1:/?" $F.bak > $F
# done &&
# #wl-showstatus build &&
# #make &&
# #mingw32-make -j 1 MAKEOPTS="-j1" &&
# #PATH=$PATH:$PY2DIR mingw32-make -j 1 MAKEOPTS="-j1" &&
# #PATH=$PATH:$PY2DIR CPLUS_INCLUDE_PATH=$MINGWPREFIX/include/freetype2${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} mingw32-make -j 1 MAKEOPTS="-j1" &&
# #( PATH=$PATH:$PY2DIR make || (
# # # fix undefined reference to IID_IMFTopologyServiceLookupClient (version >= 5.13.0)
# # ( echo "int main() { return 0; } " | gcc -xc - -lamstrmid -o test.out &> /dev/null && sed -i.bak -e "s/-lksuser/& -Wl,--as-needed -lamstrmid/" qtmultimedia/src/plugins/directshow/Makefile.Release ) &&
# # PATH=$PATH:$PY2DIR make
# #) || (
# # echo '#include "../../../../src/quicktemplates2/qtquicktemplates2-config_p.h"' > qtquickcontrols2/include/QtQuickTemplates2/5.9.3/QtQuickTemplates2/private/qtquicktemplates2-config_p.h &&
# # PATH=$PATH:$PY2DIR make
# #) || (
# # # fix missing ChangeWindowMessageFilterEx in qtbase/src/plugins/platforms/windows/qwindowssystemtrayicon.cpp
# # ( make -Cqtbase/src/plugins/platforms/windows || sed -i.bak -e "s?^\s*ChangeWindowMessageFilterEx?//&?" qtbase/src/plugins/platforms/windows/qwindowssystemtrayicon.cpp ) &&
# # PATH=$PATH:$PY2DIR make
# #)) &&
# #( PATH=$PATH:$PY2DIR make CXX="${CXX:-g++}" QMAKE_CXX="g++" QMAKE_LINK="g++" QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition" || ( make -Cqttools/src/qdoc -j1 && PATH=$PATH:$PY2DIR make -j1 CXX="${CXX:-g++}" QMAKE_CXX="g++" QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition" )) &&
# #make -C qttools/src/qdoc CXX="clang++" LINKER="clang++" QMAKE_CXX="clang++" QMAKE_LINK="clang++" CXXFLAGS="-O3 \$(DEFINES)" LFLAGS="-s -mconsole -Wl,--as-needed -lLLVM" &&
# #touch qttools/bin/qdoc.exe &&
# #( PATH=$PATH:$PY2DIR make QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition" || ( make -Cqttools/src/qdoc -j1 && PATH=$PATH:$PY2DIR make -j1 CXX="${CXX:-g++}" QMAKE_CXX="g++" QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition" )) &&
# ( PATH=$PATH:$PY2DIR make QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition" || ( touch qttools/bin/qdoc.exe && PATH=$PATH:$PY2DIR make QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition" )) &&
# wl-showstatus build-install &&
# #mingw32-make -j 1 install MAKEOPTS="-j1" COPY="cp -f" COPY_DIR="cp -rf" MKDIR="mkdir -p" &&
# #mingw32-make -C qtlocation -j 1 install MAKEOPTS="-j1" COPY="cp -f" COPY_DIR="cp -rf" MKDIR="mkdir -p" &&
# #make -j1 all install MAKEOPTS="-j1" COPY="cp -f" COPY_DIR="cp -rf" MKDIR="mkdir -p" &&
# make install &&
# echo "[Paths]" > $INSTALLPREFIX/qt/bin/qt.conf &&
# echo "Prefix=../../qt" >> $INSTALLPREFIX/qt/bin/qt.conf &&
# # build customwidgetplugin (version >= 5.13.0)
# mkdir -p build &&
# touch build/.qmake.conf &&
# # manually install designer (version <= 5.13.2)
# if [ -d $INSTALLPREFIX/qt/examples/designer ]; then
#  mkdir -p build/designer &&
#  cp -rf $INSTALLPREFIX/qt/examples/designer/* build/designer/ &&
#  cd build/designer &&
#  $INSTALLPREFIX/qt/bin/qmake.exe -makefile designer.pro &&
#  make release &&
#  cd ../.. &&
#  cp -f build/designer/*/release/*.a build/designer/*/release/*.dll $INSTALLPREFIX/qt/plugins/designer/
# fi &&
# # delete empty qdoc.exe which was created to skip failed build (version >= 5.13.2)
# if [ ! -s $INSTALLPREFIX/qt/bin/qdoc.exe ]; then rm -f $INSTALLPREFIX/qt/bin/qdoc.exe; fi &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf qt-everywhere-opensource-src-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf qt-$VERSION
#####e:/Prog/MinGW-mSys/home/win32/qt-everywhere-opensource-src-4.7.1/lib/libQtGui4.a: file not recognized: File truncated
#####rm lib/QtGui4.dll lib/libQtGui4.a
## see also: http://divided-mind.blogspot.com/2007/09/cross-compiling-qt4win-on-linux.html
#####make -j1 all install MAKEOPTS="-j1" COPY="cp -f" COPY_DIR="cp -rf" MKDIR="mkdir -p"
#####make -j1 all install COPY="cp -f" COPY_DIR="cp -rf" MKDIR="mkdir -p"
#####src/corelib/tools/qlocale.cpp:6626:14: error: '_clear87' was not declared in this scope
#####src/corelib/tools/qlocale.cpp:6627:43: error: '_control87' was not declared in this scope
##export CPLUS_INCLUDE_PATH=$MINGWDIR/include${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH}
#####e:\prog\mingw32_4.6.2\mingw32\bin\../lib/gcc/mingw32/4.6.2/../../../../include/amaudio.h:7:20: fatal error: dsound.h: No such file or directory
##pushd qtimageformats/src/plugins/imageformats/webp && gcc -c -pipe -fno-keep-inline-dllexport -O2 -Wall -Wextra -DUNICODE -DQT_NO_MTDEV -DQT_NO_LIBUDEV -DQT_NO_EVDEV -DQT_NO_TSLIB -DQT_NO_LIBINPUT -DQT_NO_EXCEPTIONS -DQT_NO_DEBUG -DQT_PLUGIN -DQT_GUI_LIB -DQT_CORE_LIB -I. -I../../../3rdparty/libwebp -I../../../3rdparty/libwebp/src -I../../../3rdparty/libwebp/src/dec -I../../../3rdparty/libwebp/src/enc -I../../../../../qtimageformats/src/3rdparty/libwebp/src/extra -I../../../3rdparty/libwebp/src/dsp -I../../../3rdparty/libwebp/src/mux -I../../../3rdparty/libwebp/src/utils -I../../../3rdparty/libwebp/src/webp -I../../../../../qtbase/include -I../../../../../qtbase/include/QtGui -I../../../../../qtbase/include/QtCore -I.moc/release -I../../../../../qtbase/src/plugins/platforms/windows/accessible -I../../../../../qtbase/mkspecs/win32-g++  -o .obj/release/alpha.o ../../../3rdparty/libwebp/src/dec/alpha.c && popd
#####mkdir -p src/qt3support/tmp/obj/release_shared/qt_compat_pch.h.gch
##CPLUS_INCLUDE_PATH=$(pwd)/qtscxml/include:$(pwd)/qtscxml/include/QtScxml:$(pwd)/qtbase/include:$(pwd)/qtbase/include/QtCore${CPLUS_INCLUDE_PATH:+:$CPLUS_INCLUDE_PATH} make -Cqtscxml



## fix already defines MemoryBarrier in qtbase/src/gui/opengl/qopenglversionfunctions.h (version >= 5.2.0)
#patch -ulbf qtbase/src/gui/opengl/qopenglversionfunctions.h << EOF
#--- qtbase/src/gui/opengl/qopenglversionfunctions.h  2013-12-08 18:09:52 +0100
#+++ qtbase/src/gui/opengl/qopenglversionfunctions.h  2013-12-12 21:25:06 +0100
#@@ -784,2 +784,3 @@
#     void (QOPENGLF_APIENTRYP TexStorage1D)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
#+#undef MemoryBarrier
#     void (QOPENGLF_APIENTRYP MemoryBarrier)(GLbitfield barriers);
#EOF
## fix already defines MemoryBarrier in qtbase/src/openglextensions/qopenglextensions.h (version >= 5.2.0)
#patch -ulbf qtbase/src/openglextensions/qopenglextensions.h << EOF
#--- qtbase/src/openglextensions/qopenglextensions.h  2013-12-08 18:09:48 +0100
#+++ qtbase/src/openglextensions/qopenglextensions.h  2013-12-12 21:35:12 +0100
#@@ -3546,2 +3546,3 @@
# public:
#+#undef MemoryBarrier
#     void (QOPENGLF_APIENTRYP MemoryBarrier)(GLbitfield barriers);
#EOF
## fix redefinition of FILE_ID_128 in qtbase/src/corelib/io/qfilesystemengine_win.cpp (version = 5.1.1)
#mv qtbase/src/corelib/io/qfilesystemengine_win.cpp qtbase/src/corelib/io/qfilesystemengine_win.cpp.bak
#sed -e "s/FILE_ID_128/QT_FILE_ID_128/g" qtbase/src/corelib/io/qfilesystemengine_win.cpp.bak > qtbase/src/corelib/io/qfilesystemengine_win.cpp
### fix missing include files
##for F in $(grep -l "../../../../.." qtbase/include/QtPlatformSupport/$VERSION/QtPlatformSupport/private/*.h); do
##  mv $F $F.bak &&
##  sed -e "s?#include \"../../../../../\(.*\)\"?#include \"$(pwd)/qtbase/\1\"?; s?</\([A-Z]\)/?<\1:/?" $F.bak > $F
##done
## fix missing include files
#for F in $(grep -l "../../../../.." qtbase/include/*/$VERSION/*/*/*.h); do
#  mv $F $F.bak &&
#  sed -e "s?#include \"../../../../../\(.*\)\"?#include \"$(pwd -W)/qtbase/\1\"?; s?</\([A-Z]\)/?<\1:/?" $F.bak > $F
#done
## fix missing ../../../../../src/quicktemplates2/qtquicktemplates2-config_p.h in qtquickcontrols2/include/QtQuickTemplates2/5.9.3/QtQuickTemplates2/private/qtquicktemplates2-config_p.h (version >= 5.9.3)
#echo '#include "../../../../src/quicktemplates2/qtquicktemplates2-config_p.h"' > qtquickcontrols2/include/QtQuickTemplates2/5.9.3/QtQuickTemplates2/private/qtquicktemplates2-config_p.h
#wl-showstatus configure &&
##echo yes|./configure -prefix $INSTALLPREFIX/qt -opensource -platform win32-g++ -release -strip -shared -no-rpath -nomake tests -no-qml-debug -no-compile-examples -opengl desktop -system-zlib -system-libjpeg -system-libpng -no-xcb -no-xkbcommon -system-pcre -system-sqlite -no-directfb -no-linuxfb -no-kms -plugin-sql-mysql -plugin-sql-oci -plugin-sql-odbc -plugin-sql-psql -plugin-sql-sqlite -plugin-sql-tds -continue &&
#echo yes|./configure -prefix $INSTALLPREFIX/qt -opensource -platform win32-g++ -release -strip -shared -no-rpath -nomake tests -no-qml-debug -no-compile-examples -opengl desktop -system-zlib -system-libjpeg -system-libpng -no-xcb -no-xkbcommon -system-pcre -system-sqlite -no-directfb -no-linuxfb -no-kms -plugin-sql-odbc -plugin-sql-sqlite -plugin-sql-tds -no-freetype -continue -I$(pwd)/qtbase/include/QtPlatformSupport/$VERSION/QtPlatformSupport/private &&
##-static 
# mingw32-make &&
#    echo OK



export NAME="Qt"
export STATUS=
#export URL=http://qt-project.org/
export URL=https://www.qt.io/
export BASENAME=qt
export DESCRIPTION="Qt - A cross-platform application and UI framework"
export CATEGORY=gui,framework
export TYPE=library,application
#export VERSION=5.12.12
#export VERSIONDATE=20211125
#export VERSION=5.15.0
#export VERSIONDATE=20200525
#export VERSION=5.15.1
#export VERSIONDATE=20200909
#export VERSION=5.15.2
#export VERSIONDATE=20201120
export VERSION=5.15.10
export VERSIONDATE=20230905
####process_begin: CreateProcess(NULL, fxc.exe /nologo /E VS_VertexColor /T vs_5_0 /Fh vs_vertexcolor.hlslh R:/winlibs64-10.2.0-8.0.0/qt-5.15.2/qtdeclarative/src/plugins/scenegraph/d3d12/shaders/vertexcolor.hlsl, ...) failed.
#export VERSION=5.15.11
#export VERSIONDATE=20231112
wl-showstatus --package-version
export DEPENDENCIES=sqlite3,mariadb-client,postgresql,freetds,firebird,zlib,libpng,libjpeg,libtiff,libmng,openssl,pcre2,glib2,icu,dbus,jasper,libwebp,freetype2,harfbuzz,assimp,doubleconversion,libproxy
export OPTIONALDEPENDENCIES=xcb
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=LICENSE.LGPL
export LICENSEFILE=LICENSE.LGPLv3
export LICENSETYPE="GPL/LGPL"
export DOWNLOADURL="https://download.qt.io/official_releases/qt/ qt-everywhere-opensource-src-"
#export DOWNLOADURL="http://download.qt.io/archive/qt/"
#export DOWNLOADURL="https://github.com/qt/qt5/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://download.qt.io/official_releases/qt/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$VERSION/single/qt-everywhere-src-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://download.qt.io/official_releases/qt/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$VERSION/single/qt-everywhere-opensource-src-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=http://download.qt.io/archive/qt/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$VERSION/single/qt-everywhere-src-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://github.com/qt/qt5/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
mkdir -p qt-$VERSION
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/qt-everywhere-src-$VERSION.tar.xz --strip-components=1 -Cqt-$VERSION
tar xJ --force-local -f $TARBALLDIR/$BASENAME/qt-everywhere-opensource-src-$VERSION.tar.xz --strip-components=1 -Cqt-$VERSION
cd qt-$VERSION
# fix missing SHARE_INFO_1 in qtbase/src/corelib/io/qfilesystemengine_win.cpp (version >= 5.10.0)
echo "#include <levmar.h>" | gcc -E -xc - &> test_levmar.o && sed -i.bak -e "s/\(#\s*include <\)lm\.h\(>\)/\1levmar.h\2\n\1lmshare.h\2\n\1lmapibuf.h\2/" qtbase/src/corelib/io/qfilesystemengine_win.cpp
# fix redefinition of FILE_ID_INFO in qtbase/src/corelib/io/qfilesystemengine_win.cpp (version >= 5.15.2)
#### bug reported: https://bugreports.qt.io/browse/QTBUG-94031
patch -ulbf qtbase/src/corelib/io/qfilesystemengine_win.cpp << EOF
@@ -666,3 +668,3 @@

-#if defined(Q_CC_MINGW) && WINVER < 0x0602 //  Windows 8 onwards
+#if defined(Q_CC_MINGW) && WINVER < 0x0602 && !(_WIN32_WINNT >= _WIN32_WINNT_WIN8) //  Windows 8 onwards

EOF
# fix missing std::numeric_limits for GCC 11 or higher (version >= 5.15.2)
#### bug reported: https://bugreports.qt.io/browse/QTBUG-93452
mv qtbase/src/corelib/global/qglobal.h qtbase/src/corelib/global/qglobal.h.bak &&
echo "#ifdef __cplusplus" > qtbase/src/corelib/global/qglobal.h &&
echo "#include <limits>" >> qtbase/src/corelib/global/qglobal.h &&
echo "#endif" >> qtbase/src/corelib/global/qglobal.h &&
cat qtbase/src/corelib/global/qglobal.h.bak >> qtbase/src/corelib/global/qglobal.h
# fix qtmultimedia/src/plugins/wmf/player/mfvideorenderercontrol.cpp (version >= 5.15.2)
####qtmultimedia/src/plugins/wmf/player/mfvideorenderercontrol.cpp error: 'virtual void {anonymous}::MediaStream::customEvent(QEvent*)' is protected within this context
patch -ulbf qtmultimedia/src/plugins/wmf/player/mfvideorenderercontrol.cpp << EOF
@@ -169,4 +169,6 @@
                 *ppv = static_cast<IUnknown*>(this);
+#ifndef __MINGW32__
             } else if (iid == __uuidof(IMarker)) {
                 *ppv = static_cast<IMarker*>(this);
+#endif
             } else {
@@ -1240,2 +1242,5 @@
                 // Figure out if this is a marker or a sample.
+#ifdef __MINGW32__
+                hr = E_NOINTERFACE;
+#else
                 if (SUCCEEDED(hr))    {
@@ -1245,2 +1250,3 @@
                 }
+#endif

EOF
# fix undefined AI_MATKEY_GLTF_PBRSPECULARGLOSSINESS in qtquick3d/src/plugins/assetimporters/assimp/assimpimporter.cpp (version >= 5.15.2)
patch -ulbf qtquick3d/src/plugins/assetimporters/assimp/assimpimporter.cpp << EOF
@@ -1080,2 +1080,3 @@
         // SpecularGlossiness Properties
+#ifdef AI_MATKEY_GLTF_PBRSPECULARGLOSSINESS
         bool hasSpecularGlossiness;
@@ -1134,2 +1135,3 @@
         }
+#endif
     }
EOF
## fix undefined AI_MATKEY_GLTF_PBRSPECULARGLOSSINESS qtquick3d/src/plugins/assetimporters/assimp/assimpimporter.cpp (version >= 5.15.2)
#patch -ulbf qtquick3d/src/plugins/assetimporters/assimp/assimpimporter.cpp << EOF
#@@ -1081,2 +1081,5 @@
#         bool hasSpecularGlossiness;
#+#if !defined(AI_MATKEY_GLTF_PBRSPECULARGLOSSINESS_GLOSSINESS_FACTOR)
#+#define AI_MATKEY_GLTF_PBRSPECULARGLOSSINESS_GLOSSINESS_FACTOR AI_MATKEY_GLOSSINESS_FACTOR
#+#endif
#         result = material->Get(AI_MATKEY_GLTF_PBRSPECULARGLOSSINESS, hasSpecularGlossiness);
#EOF
# fix protected customEvent in qtmultimedia/src/plugins/wmf/player/mfvideorenderercontrol.cpp (version >= 5.15.2)
patch -ulbf qtmultimedia/src/plugins/wmf/player/mfvideorenderercontrol.cpp << EOF
@@ -906,3 +906,2 @@

-    protected:
         void customEvent(QEvent *event)
EOF
# avoid using missing debug ICU libraries in static builds
sed -i.bak -e "s/\(lsicu..\)d/\1/g" qtbase/src/corelib/configure.json
## avoid missing fxc.exe in qtbase/src/gui/configure.pri (version >= 5.15.1)
#patch -ulbf qtbase/src/gui/configure.pri << EOF
#@@ -26,2 +26,3 @@
# defineTest(qtConfTest_fxc) {
#+    return(false)
#     !mingw {
#EOF
## don't use shader compiler to avoid missing fxc.exe in qtbase/src/gui/configure.json (version >= 5.15.1)
#sed -i.bak -e "s/-ld3dcompiler\|d3dcompiler\.h/&DONTUSE/g" qtbase/src/gui/configure.json
#echo "#error DISABLE D3D12" >> qtdeclarative/config.tests/d3d12/d3d12.cpp
# avoid missing shader compiler (fxc.exe) issue for mingw-w64 version 8.0.0 or higher
sed -i.bak -e "s/d3d12/DISABLE_&/g" qtdeclarative/config.tests/d3d12/d3d12.cpp qtdeclarative/config.tests/d3d12/d3d12.pro
#rm -f ../.qmake.stash ../.qmake.super
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cd build_static &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -static -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -static -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -skip qtmultimedia -skip qtlocation -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -static -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -skip qtlocation -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 PATH=$PATH:$PY2DIR ../configure -platform $(if ${CXX:-g++} --version | grep clang -q; then echo "win32-clang-g++"; else echo "win32-g++"; fi) -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -static -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -no-libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -skip qtlocation -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -static -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -no-evr -skip qtwebengine -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -static -no-pch -no-rpath -strip -skip qtserialbus -skip qtdeclarative -skip qtmultimedia -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -static -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -no-evr -no-feature-d3d12 -skip qtwebengine -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR DXSDK_DIR=DISABLED ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -static -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -egl -no-opengles3 -no-angle -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -no-evr -skip qtwebengine -nomake examples -nomake tests -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #TEST REMOVE: -skip "qtserialbus"
 #-no-xkbcommon 
 cd .. &&
 ## fix paths
 #sed -i.bak -e "s?$(cygpath -m $(pwd)/build_static|sed -e 's/\./\\&/g')?$(pwd)/build_static?g; s?$(cygpath -m $INSTALLPREFIX/qt|sed -e 's/\./\\&/g')?$INSTALLPREFIX/qt?g" $(grep -lF "$(echo -e "$(cygpath -m $(pwd)/build_static)\n$(cygpath -m $INSTALLPREFIX/qt)")" $(find build_static -name 'Makefile*')) &&
 ## fix undefined reference to IID_IMFVideoPresenter/IID_IMFVideoDeviceID
 #sed -i.bak -e "s/LIBS\s*=.*$/& -Wl,--as-needed -lamstrmid/" build_shared/qtmultimedia/src/plugins/wmf/Makefile.* &&
 wl-showstatus configure &&
 cd build_shared &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -skip qtmultimedia -skip qtlocation -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -skip qtlocation -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 PATH=$PATH:$PY2DIR ../configure -platform $(if ${CXX:-g++} --version | grep clang -q; then echo "win32-clang-g++"; else echo "win32-g++"; fi) -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -no-libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -skip qtlocation -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -no-evr -skip qtwebengine -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip qtserialbus -skip qtdeclarative -skip qtmultimedia -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -skip qtwebengine -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -no-evr -no-feature-d3d12 -skip qtwebengine -nomake examples -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 #PATH=$PATH:$PY2DIR DXSDK_DIR=DISABLED ../configure -platform win32-g++ -prefix $INSTALLPREFIX/qt -opensource -confirm-license -release -shared -no-pch -no-rpath -strip -skip "qtserialbus" -qpa windows -gif -sql-odbc -sql-sqlite -opengl desktop -egl -no-opengles3 -no-angle -icu -system-pcre -dbus-linked -system-sqlite -system-zlib -system-libpng -system-libjpeg -system-doubleconversion -system-freetype -system-harfbuzz -libproxy -system-proxies -no-libudev -openssl-linked -no-xcb -no-compile-examples -no-evr -skip qtwebengine -nomake examples -nomake tests -plugin-manifests -pkg-config -I $MINGWPREFIX/include/freetype2 -I $MINGWPREFIX/include/mariadb &&
 cd .. &&
 ## fix missing MFGetService or avoid with -no-evr (version >= 5.15.0)
 #sed -i.bak -e "s/-lamstrmid/& -Wl,--as-needed -lmf/" build_shared/qtmultimedia/src/plugins/directshow/Makefile.* &&
 #make -Cbuild_shared qmake_all &&
 #make -Cbuild_shared module-qtmultimedia-qmake_all &&
 ## fix undefined reference to IID_IMFVideoPresenter/IID_IMFVideoDeviceID
 #sed -i.bak -e "s/LIBS\s*=.*$/& -Wl,--as-needed -lamstrmid/" build_shared/qtmultimedia/src/plugins/wmf/Makefile.* &&
 # fix errors: Bad address
 export MSYS2_ARG_CONV_EXCL='*' &&
 wl-showstatus build &&
 #PATH=$PATH:$PY2DIR mingw32-make -Cbuild_static release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition" &&
 (
  PATH=$PATH:$PY2DIR make -Cbuild_static release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition" || 
  (
   PATH=$PATH:$PY2DIR make -i -Cbuild_static release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition"
   # fix issue calling executable file from wrapper script (version >= 5.15.2)
   ####See also: https://forum.qt.io/topic/117299/qt-5-15-0-cross-compile-from-source-fails/4
   sed -i.bak -e "s/^exec \('[^']*\.exe'\)/\1/" $(grep -l "^exec '[^']*\.exe'" $(find build_static -name '*_wrapper.sh')) &&
   PATH=$PATH:$PY2DIR make -Cbuild_static release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition"
  ) || (
   sed -i.bak -e "s/\(-lclang\)\(\.dll\)*\.a/\1 -lpthread/" build_static/qttools/src/qdoc/Makefile.* &&
   make -Cbuild_static/qttools/src/qdoc &&
   PATH=$PATH:$PY2DIR make -Cbuild_static release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition"
  ) ||
  PATH=$PATH:$PY2DIR make -j1 -Cbuild_static release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition"
 ) &&
 wl-showstatus build &&
 (
  #PATH=$(pwd)/build_shared/qtbase/bin/Qt5Core.dll:$PY2DIR:$PATH mingw32-make -Cbuild_shared release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition" ||
  PATH=$PATH:$PY2DIR make -Cbuild_shared release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition" || 
  (
   # fix missing MFGetService or avoid with -no-evr (version >= 5.15.0)
   sed -i.bak -e "s/LIBS\s*=.*$/& -Wl,--as-needed -lamstrmid/" build_shared/qtmultimedia/src/plugins/wmf/Makefile.* &&
   PATH=$PATH:$PY2DIR make -i -Cbuild_shared release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition"
   # fix issue calling executable file from wrapper script (version >= 5.15.2)
   sed -i.bak -e "s/^exec \('[^']*\.exe'\)/\1/" $(grep -l "^exec '[^']*\.exe'" $(find build_shared -name '*_wrapper.sh')) &&
   PATH=$PATH:$PY2DIR make -Cbuild_shared release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition"
  ) || (
   sed -i.bak -e "s/\(-lclang\)\(\.dll\)*\.a/\1 -lpthread/" build_shared/qttools/src/qdoc/Makefile.* &&
   make -Cbuild_shared/qttools/src/qdoc &&
   PATH=$PATH:$PY2DIR make -Cbuild_shared release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition"
  ) || (
   sed -i.bak -e "s/LIBS\s*=.*$/& -Wl,--as-needed -lamstrmid/" build_shared/qtmultimedia/src/plugins/wmf/Makefile.* &&
   make -Cbuild_shared/qtmultimedia/src/plugins/wmf &&
   PATH=$PATH:$PY2DIR make -Cbuild_static release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition"
  ) ||
  PATH=$PATH:$PY2DIR make -j1 -Cbuild_shared release QMAKE_CXXFLAGS="-fcommon" QMAKE_LFLAGS="-Wl,-allow-multiple-definition"
 ) &&
 wl-showstatus build-install &&
 # workaround for missing qmake.exe
 cp -u build_static/qtbase/bin/qmake.exe build_static/qtbase/qmake/ &&
 make -Cbuild_static install &&
 # move static libraries and mkspecs to separate folders
 mv -f $INSTALLPREFIX/qt/lib $INSTALLPREFIX/qt/lib_static &&
 mv -f $INSTALLPREFIX/qt/mkspecs $INSTALLPREFIX/qt/mkspecs_static &&
 wl-showstatus build-install &&
 # workaround for missing qmake.exe
 cp -u build_shared/qtbase/bin/qmake.exe build_shared/qtbase/qmake/ &&
 make -Cbuild_shared install &&
 ## change .a extension to .dll.a
 #for F in $INSTALLPREFIX/qt/lib/*.a; do
 # mv -f $F $(echo $F|sed -e "s/\.a$/.dll&/")
 #done &&
 # manually create qt.conf
 echo "[Paths]" > $INSTALLPREFIX/qt/bin/qt.conf &&
 echo "Prefix=../../qt" >> $INSTALLPREFIX/qt/bin/qt.conf &&
 # manually copy qmake.conf (needed to allow building projectm)
 cp -u qtbase/mkspecs/win32-g++/qmake.conf $INSTALLPREFIX/qt/mkspecs_static/ &&
 cp -u qtbase/mkspecs/win32-g++/qmake.conf $INSTALLPREFIX/qt/mkspecs/ &&
 cp -rf $INSTALLPREFIX/qt/mkspecs/common $INSTALLPREFIX/qt/ &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf qt-$VERSION
## fix missing TRUE/FALSE in gui/fox16/fox16_gui_dialog.cpp (version >= 5.4.0)
#mv gui/fox16/fox16_gui_dialog.cpp gui/fox16/fox16_gui_dialog.cpp.bak &&
#echo "#include <windows.h>" > gui/fox16/fox16_gui_dialog.cpp &&
#cat gui/fox16/fox16_gui_dialog.cpp.bak >> gui/fox16/fox16_gui_dialog.cpp
####make -C gui/fox16 CXXFLAGS="-I/d/Prog/winlibs64-9.2.0/custombuilt/include/fox-1.7"
## avoid error: qmltyperegistrar.exe: Bad address
#####see also: https://github.com/m-ab-s/media-autobuild_suite/issues/1584
#export MSYS2_ARG_CONV_EXCL='--resource-file-mapping='




