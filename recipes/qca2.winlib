export NAME="Qca2"
export STATUS=
#export URL=http://cblfs.cross-lfs.org/index.php/Qca2
export URL=https://github.com/KDE/qca
export BASENAME=qca2
export DESCRIPTION="Qt Cryptographic Architecture"
export CATEGORY=security
export TYPE=library
#export VERSION=2.0.2
#export VERSIONDATE=20110517
#export VERSION=2.0.3
#export VERSIONDATE=20111013
#export VERSION=2.1.0
#export VERSIONDATE=20141108
#export VERSION=2.1.3
#export VERSIONDATE=20170821
####Found unsuitable Qt version "5.6.1" from
#export VERSION=2.2.0
#export VERSIONDATE=20190412
#export VERSION=2.2.1
#export VERSIONDATE=20190425
#export DEPENDANCIES=qt4,libgcrypt,cyrus-sasl
#export OPTIONALDEPENDANCIES=
##export OPTIONALDEPENDANCIES=botan
#export BUILDDEPENDANCIES=cmake
#export VERSION=2.3.0
#export VERSIONDATE=20200227
#export VERSION=2.3.1
#export VERSIONDATE=20200706
#export VERSION=2.3.2
#export VERSIONDATE=20210204
#export VERSION=2.3.3
#export VERSIONDATE=20210602
export VERSION=2.3.4
export VERSIONDATE=20210914
wl-showstatus --package-version
export DEPENDANCIES=qt,libgcrypt,cyrus-sasl
export OPTIONALDEPENDANCIES=
#export OPTIONALDEPENDANCIES=botan
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://delta.affinix.com/download/qca/2.0/ qca-"
#export DOWNLOADURL="http://delta.affinix.com/download/qca/ qca-"
#export DOWNLOADURL="https://github.com/KDE/qca/releases"
export DOWNLOADURL="https://github.com/KDE/qca/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://delta.affinix.com/download/qca/`echo $VERSION|sed 's/^\([0-9]*\.[0-9]*\)\..*$/\1/'`/qca-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=http://delta.affinix.com/download/qca/2.0/qca-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/KDE/qca/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/KDE/qca/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/qca-$VERSION.tar.gz
wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/qca-$VERSION.tar.bz2
#tar xfz $TARBALLDIR/$BASENAME/qca-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd qca-$VERSION
## fix src/qca_core.cpp (version = 2.3.0)
#patch -ulbf src/qca_core.cpp << EOF
#@@ -225,2 +225,3 @@
#
#+#if !defined(Q_OS_WIN)
#        if ((geteuid() == 0)  && drop_root)
#@@ -231,2 +232,3 @@
#        }
#+#endif
#
#EOF
#wl-showstatus configure &&
#PATH=$PATH:$MINGWPREFIX/qt4/bin QMAKESPEC=$MINGWPREFIX/qt4/mkspecs/win32-g++ ./configure --prefix=$INSTALLPREFIX --qtdir=$MINGWPREFIX/qt4 &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#####Verifying Qt 4 build environment ... QMAKESPEC has not been set, so configuration cannot be deduced.
#    make install-pkgconfigDATA
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && rm -rf qca-$VERSION
#wl-showstatus configure &&
#cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe -DSASL2_LIBRARIES:FILEPATH="-Wl,--as-needed -lsasl2 -ldl" -DBUILD_TESTS:BOOL=OFF . &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe -DSASL2_LIBRARIES:FILEPATH="-Wl,--as-needed -lsasl2 -ldl" -DBOTANCONFIG_EXECUTABLE:FILEPATH="$(which sh) $MINGWPREFIX/bin/botan-config-1.10" -DBUILD_TESTS:BOOL=OFF . &&
# wl-showstatus build &&
# ( make install/strip || make install ) &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 #wl-showstatus configure &&
 ##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TOOLS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe -DWITH_botan_PLUGIN:STRING=OFF -DWITH_cyrus-sasl_PLUGIN:STRING=OFF -S. -Bbuild_static &&
 #PKG_CONFIG= PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DQT4_BUILD:BOOL=OFF -DBUILD_TOOLS:BOOL=ON DWITH_botan_PLUGIN:STRING=no -DWITH_nss_PLUGIN:STRING=no -DWITH_gnupg_PLUGIN:STRING=no -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
 #PKG_CONFIG= PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DQT4_BUILD:BOOL=OFF -DBUILD_TOOLS:BOOL=ON DWITH_botan_PLUGIN:STRING=no -DWITH_nss_PLUGIN:STRING=no -DWITH_gnupg_PLUGIN:STRING=no -DBUILD_TESTS:BOOL=OFF -DBUILD_TOOLS:BOOL=OFF -DCMAKE_CXX_FLAGS:STRING="-DQCA_STATIC" -S. -Bbuild_static &&
 wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe -DWITH_botan_PLUGIN:STRING=OFF -DCMAKE_STATIC_LINKER_FLAGS:STRING="-Wl,--as-needed -ldl" -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--as-needed -ldl" -DCMAKE_EXE_LINKER_FLAGS:STRING="-Wl,--as-needed -ldl" -S. -Bbuild_shared &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DQT_QMAKE_EXECUTABLE:FILEPATH=$MINGWPREFIX/qt4/bin/qmake.exe -DWITH_botan_PLUGIN:STRING=OFF -DWITH_cyrus-sasl_PLUGIN:STRING=OFF -S. -Bbuild_shared &&
 PKG_CONFIG= PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DQT4_BUILD:BOOL=OFF -DBUILD_TOOLS:BOOL=ON -DWITH_botan_PLUGIN:STRING=no -DWITH_nss_PLUGIN:STRING=no -DWITH_gnupg_PLUGIN:STRING=no -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 echo "-Wl,--as-needed -ldl" >> build_shared/plugins/qca-cyrus-sasl/CMakeFiles/qca-cyrus-sasl.dir/linklibs.rsp &&
 #wl-showstatus build-install &&
 #make -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 make -Cbuild_shared install/strip &&
 # fix absolute paths (version >= 2.3.4)
 sed -i -e "s?$(cygpath -m $INSTALLPREFIX)?\${CMAKE_CURRENT_LIST_DIR}/../../..?g" $INSTALLPREFIX/lib/cmake/Qca-qt5/Qca-qt5Targets*.cmake &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf qca-$VERSION
####PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins qcatool-qt5.exe



