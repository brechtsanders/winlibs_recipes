#export NAME="crypt"
#export STATUS=
#export URL=http://gd.tuwien.ac.at/gnu/cygwin/release/crypt/
#export BASENAME=libcrypt
#export DESCRIPTION="The passwords created by crypt(3) are 56 bit DES encrypted and are 100% identical to those created by the Linux crypt()."
#export CATEGORY=security
#export TYPE=library
##export VERSION=1.1-1
##export VERSION=1.2-1
##export VERSIONDATE=20120507
##export VERSION=1.3-1
##export VERSIONDATE=20160319
##export VERSION=1.4-1
##export VERSIONDATE=20160610
##export VERSION=2.0-1
##export VERSIONDATE=20170902
#export VERSION=2.1-1
#export VERSIONDATE=20170904
#####encrypt.o:encrypt.c:(.text+0x7b): undefined reference to `__des_setkey'
#####encrypt.o:encrypt.c:(.text+0x19e): undefined reference to `__do_des'
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
##export BUILDDEPENDENCIES=pexports
##export OPTIONALBUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=
#export LICENSETYPE=
##export DOWNLOADURL="http://gd.tuwien.ac.at/gnu/cygwin/release/crypt/ crypt-"
##export DOWNLOADURL="http://ftp.linux.ee/pub/gnu/gnu-win32/release/crypt/ crypt-"
##export DOWNLOADURL="http://cygwin.osuosl.org/x86/release/crypt/ crypt-"
##export DOWNLOADURL="http://mirrors.sohu.com/cygwin/x86/release/crypt/ crypt-"
#export DOWNLOADURL="https://sourceware.org/ftp/cygwin/x86_64/release/crypt/ crypt-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://gd.tuwien.ac.at/gnu/cygwin/release/crypt/crypt-$VERSION-src.tar.bz2
##export DOWNLOADSOURCEURL=http://ftp.linux.ee/pub/gnu/gnu-win32/release/crypt/crypt-$VERSION-src.tar.bz2
##export DOWNLOADSOURCEURL=http://cygwin.osuosl.org/x86/release/crypt/crypt-$VERSION-src.tar.xz
##export DOWNLOADSOURCEURL=http://mirrors.sohu.com/cygwin/x86/release/crypt/crypt-$VERSION-src.tar.xz
#export DOWNLOADSOURCEURL=https://sourceware.org/ftp/cygwin/x86_64/release/crypt/crypt-$VERSION-src.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xj --force-local -f $TARBALLDIR/$BASENAME/crypt-$VERSION-src.tar.bz2
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/crypt-$VERSION-src.tar.xz
#mkdir -p crypt-$VERSION
##tar xj --force-local -f $TARBALLDIR/$BASENAME/crypt-$VERSION-src.tar.bz2 -C crypt-$VERSION
##tar xj --force-local -f crypt-$VERSION/crypt-`echo $VERSION|sed -e "s/\-[0-9]*$//"`.tar.bz2 -C crypt-$VERSION
#tar xj --force-local -f crypt-$VERSION.src/crypt-$(echo $VERSION|sed -e "s/\-[0-9]*$//").tar.bz2 -C crypt-$VERSION
#rm -rf crypt-$VERSION.src
#mv crypt-$VERSION/crypt/* crypt-$VERSION/
#cd crypt-$VERSION
## don't use cygcrypt-0.dll as DLL name
#sed -i.bak -e "s/^LIBRARY.*$//" crypt.def
##wl-showstatus build &&
###gcc -c -O3 -o encrypt.c.o encrypt.c &&
##for F in *.c; do
## gcc -c -o $F.o $F -O3 -I. -D_GNU_SOURCE
##done &&
## ar rcs libcrypt.a *.c.o &&
## #gcc -shared -s -Wl,-soname,libcrypt.dll *.c.o -o libcrypt.dll &&
## gcc -shared -s libcrypt.a -o libcrypt.dll -Wl,--out-implib,libcrypt.dll.a -Wl,--output-def=libcrypt.def &&
## #pexports -o libcrypt.dll > libcrypt.def &&
## #grep -v "^LIBRARY" crypt.def > libcrypt.def &&
## ( echo EXPORTS; gcc -E crypt.h -D_GNU_SOURCE | sed -n -e "s/(.*//p" ) > libcrypt.def
## dlltool --def libcrypt.def --dllname libcrypt.dll --output-lib libcrypt.dll.a &&
## wl-showstatus install &&
## mkdir -p $INSTALLPREFIX/lib $INSTALLPREFIX/include $INSTALLPREFIX/bin &&
## cp libcrypt*.a $INSTALLPREFIX/lib/ &&
## cp libcrypt*.dll $INSTALLPREFIX/bin/ &&
## #sed -e "s?^\(#include <_ansi.h>\)?//\1?; s/_EXFUN(\([^,]*\)\,\(.*\));/\1\2;/g" encrypt.h > $INSTALLPREFIX/include/crypt.h &&
## cp -f crypt.h $INSTALLPREFIX/include/crypt.h &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf crypt-$VERSION
#wl-showstatus build-install &&
# make install CC=${CC:-gcc} SHAREDLIB=libcrypt.dll prefix=$INSTALLPREFIX &&
# strip $INSTALLPREFIX/bin/*.dll &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf crypt-$VERSION



export NAME="libxcrypt (libcrypt)"
export STATUS=
export URL=https://github.com/besser82/libxcrypt
export BASENAME=libcrypt
export DESCRIPTION="libxcrypt - Extended crypt library for descrypt, md5crypt, bcrypt, and others"
export CATEGORY=security
export TYPE=library
#export VERSION=4.4.33
#export VERSIONDATE=20230203
export VERSION=4.4.34
export VERSIONDATE=20230601
####error: symver is only supported on ELF platforms
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export BUILDDEPENDENCIES=meson,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING.LIB
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/besser82/libxcrypt/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/besser82/libxcrypt/releases/download/v$VERSION/libxcrypt-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xJ --force-local -f $TARBALLDIR/$BASENAME/libxcrypt-$VERSION.tar.xz
cd libxcrypt-$VERSION
# avoid .symver (only supported for ELF format) in lib/crypt-port.h (version >= 4.4.33)
#### Bug reported: https://github.com/besser82/libxcrypt/pull/167
patch -ulbf lib/crypt-port.h << EOF
@@ -203,2 +203,4 @@

+#elif defined _WIN32
+# define symver_set(extstr, intname, version, mode)
 #elif defined __GNUC__ && __GNUC__ >= 3
EOF
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-werror --disable-valgrind --enable-xcrypt-compat-files &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 wl-showstatus build-install &&
 make install-strip &&
 # fix DLL file without exported symbols
 if echo $RUNPLATFORM|grep -q "^i.86"; then
  ( echo "EXPORTS" && ${NM:-nm} -f posix --defined-only -p $INSTALLPREFIX/lib/libcrypt.a | sed -n -e "s/^_\([^ ]*\) T .*$/\1/p" ) > libcrypt.def
 else
  ( echo "EXPORTS" && ${NM:-nm} -f posix --defined-only -p $INSTALLPREFIX/lib/libcrypt.a | sed -n -e "s/^\([^ ]*\) T .*$/\1/p" ) > libcrypt.def
 fi &&
 ${CC:-gcc} -shared -s -mwindows -def libcrypt.def -o $INSTALLPREFIX/bin/libcrypt*.dll $INSTALLPREFIX/lib/libcrypt.a -Wl,--out-implib,$INSTALLPREFIX/lib/libcrypt.dll.a &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libxcrypt-$VERSION



