export NAME="nCine"
export STATUS=
export URL=https://ncine.github.io/
export BASENAME=ncine
export DESCRIPTION="nCine is a cross-platform 2D game engine that runs on PC (Linux, Windows, macOS), Android, Raspberry Pi, and the web (Emscripten)."
export CATEGORY=games
export TYPE=library
export VERSION=2020.05
export VERSIONDATE=20220316
wl-showstatus --package-version
#export DEPENDANCIES=glew,zlib,libpng,openal,libwebp,libvorbis,glfw
export DEPENDANCIES=glew,zlib,libpng,openal,libwebp,libvorbis,qt
#export DEPENDANCIES=glew,zlib,libpng,openal,libwebp,libvorbis,qt,lua,imgui
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/nCine/nCine/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/nCine/nCine/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix cmake/ncine_imported_targets.cmake (version >= 2020.05)
patch -ulbf cmake/ncine_imported_targets.cmake << EOF
@@ -380,3 +380,3 @@
        if(OPENAL_FOUND)
-               set_msys_dll(OPENAL libopenal-1)
+               set_msys_dll(OPENAL OpenAL32)
                add_library(OpenAL::AL SHARED IMPORTED)
EOF
# fix detecting correct libwebp version
sed -i.bak2 -e "s/\(libwebp\)-[0-9]/\1/" cmake/ncine_imported_targets.cmake
# fix detecting correct lua version
sed -i.bak3 -e "s/\(lua\)[0-9][0-9]/\1$(pkg-config --modversion lua|sed -e "s/^\([0-9]*\)\.\([0-9]*\)\..*$/\1\2/")/" cmake/ncine_imported_targets.cmake
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# MINGW_PREFIX=$MINGWPREFIX cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DNCINE_DYNAMIC_LIBRARY:BOOL=OFF -DNCINE_WITH_LUA:BOOL=OFF -DNCINE_WITH_IMGUI:BOOL=OFF -DNCINE_PREFERRED_BACKEND:STRING=GLFW -DNCINE_BUILD_DOCUMENTATION:BOOL=OFF -DNCINE_BUILD_BENCHMARKS:BOOL=OFF -DNCINE_BUILD_UNIT_TESTS:BOOL=OFF -DNCINE_BUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
# #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
# wl-showstatus configure &&
# MINGW_PREFIX=$MINGWPREFIX cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DNCINE_DYNAMIC_LIBRARY:BOOL=ON -DNCINE_WITH_LUA:BOOL=OFF -DNCINE_WITH_IMGUI:BOOL=OFF -DNCINE_PREFERRED_BACKEND:STRING=GLFW -DNCINE_BUILD_DOCUMENTATION:BOOL=OFF -DNCINE_BUILD_BENCHMARKS:BOOL=OFF -DNCINE_BUILD_UNIT_TESTS:BOOL=OFF -DNCINE_BUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
# ## add linker flag
# #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-lGLUS/& -Wl,--as-needed/" build_shared/build.ninja &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 MINGW_PREFIX=$MINGWPREFIX PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DNCINE_DYNAMIC_LIBRARY:BOOL=OFF -DNCINE_WITH_LUA:BOOL=OFF -DNCINE_WITH_IMGUI:BOOL=OFF -DNCINE_PREFERRED_BACKEND:STRING=QT5 -DNCINE_BUILD_DOCUMENTATION:BOOL=OFF -DNCINE_BUILD_BENCHMARKS:BOOL=OFF -DNCINE_BUILD_UNIT_TESTS:BOOL=OFF -DNCINE_BUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 MINGW_PREFIX=$MINGWPREFIX PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DNCINE_DYNAMIC_LIBRARY:BOOL=ON -DNCINE_WITH_LUA:BOOL=OFF -DNCINE_WITH_IMGUI:BOOL=OFF -DNCINE_PREFERRED_BACKEND:STRING=QT5 -DNCINE_BUILD_DOCUMENTATION:BOOL=OFF -DNCINE_BUILD_BENCHMARKS:BOOL=OFF -DNCINE_BUILD_UNIT_TESTS:BOOL=OFF -DNCINE_BUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



