#export NAME="libusb-win32"
#export STATUS=
#export URL=http://libusb-win32.sourceforge.net/
#export BASENAME=libusb
#export DESCRIPTION="Libusb-win32 is a port of the USB library libusb  to the Windows operating systems (Win98SE, WinME, Win2k, WinXP). The library allows user space applications to access any USB device on Windows in a generic way without writing any line of kernel driver code."
#export CATEGORY=hardware
#export TYPE=library
##export VERSION=0.1.12.1
##export VERSION=0.1.12.2
##export VERSION=1.1.14.0
##export VERSIONDATE=20100602
##export VERSION=1.1.14.3
##export VERSIONDATE=20100613
##export VERSION=1.2.1.0
##export VERSIONDATE=20100729
##export VERSION=1.2.2.0
##export VERSIONDATE=20101003
##export VERSION=1.2.3.0
##export VERSIONDATE=20110317
##export VERSION=1.2.4.0
##export VERSIONDATE=20110412
#####driver_registry.o:driver_registry.c:(.text+0x449): undefined reference to `ObQueryNameString'
##export VERSION=1.2.5.0
##export VERSIONDATE=20110724
#export VERSION=1.2.6.0
#export VERSIONDATE=20120121
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=installer_license.txt
#export LICENSETYPE=GPL2/LGPL2
##export DOWNLOADURL="http://sourceforge.net/projects/libusb-win32/files/ libusb-win32-src-"
#export DOWNLOADURL="http://sourceforge.net/projects/libusb-win32/files/libusb-win32-releases/ libusb-win32-src- .zip"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/libusb-win32/libusb-win32-src-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/libusb-win32/libusb-win32-releases/$VERSION/libusb-win32-src-$VERSION.zip
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
##tar xfz $TARBALLDIR/$BASENAME/libusb-win32-src-$VERSION.tar.gz
#unzip -oq $TARBALLDIR/$BASENAME/libusb-win32-src-$VERSION.zip
#cd libusb-win32-src-$VERSION
## fix conflicting definition of DllMain in src/windows.c
#patch -ulbf src/windows.c << EOF
#--- src/windows.c  2011-07-12 07:26:00 +0200
#+++ src/windows.c  2013-11-17 18:53:26 +0100
#@@ -85,3 +85,3 @@
# /* DLL main entry point */
#-BOOL WINAPI DllMain(HANDLE module, DWORD reason, LPVOID reserved)
#+BOOL WINAPI DllMain(HINSTANCE module, DWORD reason, LPVOID reserved)
# {
#EOF
### fix missing ddk/cfgmgr32.h
##mv src/install.c src/install.c.bak
##sed -e "s?\(#include <\)ddk/\(cfgmgr32.h>\)?\1\2?" src/install.c.bak > src/install.c
##mv src/registry.c src/registry.c.bak
##sed -e "s?\(#include <\)ddk/\(cfgmgr32.h>\)?\1\2?" src/registry.c.bak > src/registry.c
### fix missing config.h and embedded.h (version 1.2.1.0)
##touch config.h embedded.h
##cp install-filter.exe $INSTALLPREFIX/bin/
#wl-showstatus build &&
#( make -j1 || C_INCLUDE_PATH=$(ls -1d $MINGWDIR/*mingw32/include):$C_INCLUDE_PATH make -j1 ) &&
# wl-showstatus build-install &&
# mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# cp src/usb*.h $INSTALLPREFIX/include/ &&
# #cp libusb.a libusbd.a libusb0.def $INSTALLPREFIX/lib/ &&
# cp *.a *.def $INSTALLPREFIX/lib/ &&
# cp *.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf libusb-win32-src-$VERSION



export NAME="libusb"
export STATUS=
export URL=http://libusb.info/
export BASENAME=libusb
export DESCRIPTION="libusb is a C library that provides generic access to USB devices. It is intended to be used by developers to facilitate the production of applications that communicate with USB hardware. It is portable: Using a single cross-platform API, it provides access to USB devices on Linux, OS X, Windows, Android, OpenBSD, etc. It is user-mode: No special privilege or elevation is required for the application to communicate with a device. It is version-agnostic: All versions of the USB protocol, from 1.0 to 3.0 (latest), are supported."
export CATEGORY=hardware
export TYPE=library
#export VERSION=1.0.19
#export VERSIONDATE=20141124
#export VERSION=1.0.20
#export VERSIONDATE=20161121
#export VERSION=1.0.21
#export VERSIONDATE=20161231
#export VERSION=1.0.22
#export VERSIONDATE=20180325
#export VERSION=1.0.23
#export VERSIONDATE=20200325
#export VERSION=1.0.24
#export VERSIONDATE=20201211
#export VERSION=1.0.25
#export VERSIONDATE=20220201
export VERSION=1.0.26
export VERSIONDATE=20220411
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://sourceforge.net/projects/libusb/files/"
export DOWNLOADURL="https://sourceforge.net/projects/libusb/files/libusb-1.0/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/project/libusb/libusb-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/")/libusb-$VERSION/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://downloads.sourceforge.net/project/libusb/libusb-$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/")/libusb-$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
## fix missing VER_MAJORVERSION/VER_EQUAL/VER_MINORVERSION in libusb/os/windows_usb.c (version = 1.0.19)
#mv libusb/os/windows_usb.c libusb/os/windows_usb.c.bak
#echo "#define _WIN32_WINNT 0x0500" > libusb/os/windows_usb.c
#cat libusb/os/windows_usb.c.bak >> libusb/os/windows_usb.c
# use winsock2.h instead of winsock.h in libusb/libusb.h (version >= 1.0.24)
sed -i.bak -e "s/winsock\.h/winsock2.h/" libusb/libusb.h
# avoid options not supported by clang
if echo $CC; gcc --version 2> /dev/null |grep -q clang; then
 sed -i.bak -e "s/-mwin32/-mwindows/; s/-Wl,--add-stdcall-alias//" configure
fi
wl-showstatus configure &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-udev &&
 ## fix missing struct timespec
 #echo "#undef HAVE_STRUCT_TIMESPEC" >> config.h &&
 ## fix redefinition of struct timespec
 #echo "#define HAVE_STRUCT_TIMESPEC 1" >> config.h &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



