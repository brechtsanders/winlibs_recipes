export NAME="AppStream"
export STATUS=
export URL=https://www.freedesktop.org/wiki/Distributions/AppStream/
export BASENAME=appstream
export DESCRIPTION="Tools and libraries to work with AppStream metadata"
export CATEGORY=
export TYPE=library,application
#export VERSION=0.16.1
#export VERSIONDATE=20230304
#export VERSION=0.16.2
#export VERSIONDATE=20230427
#export VERSION=0.16.3
#export VERSIONDATE=20230823
#export VERSION=0.16.4
#export VERSIONDATE=20231111
#export VERSION=1.0.0
#export VERSIONDATE=20231112
####src/as-provided.c:27:10: fatal error: fnmatch.h: No such file or directory
#export VERSION=1.0.1
#export VERSIONDATE=20231217
#export VERSION=1.0.2
#export VERSIONDATE=20240225
#export VERSION=1.0.3
#export VERSIONDATE=20240425
#export VERSION=1.0.4
#export VERSIONDATE=20241209
#export VERSION=1.0.5
#export VERSIONDATE=20250425
#export VERSION=1.0.6
#export VERSIONDATE=20250815
#export VERSION=1.1.0
#export VERSIONDATE=20250917
export VERSION=1.1.1
export VERSIONDATE=20251003
wl-showstatus --package-version
export DEPENDENCIES=glib2,libxml2,libxmlb,libcurl,libyaml
#fnmatch-win32
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja,itstool
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://github.com/ximion/appstream/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/ximion/appstream/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix compose/asc-utils-screenshots.c (version >= 1.0.1)
patch -ulbf compose/asc-utils-screenshots.c << EOF
@@ -73,3 +73,7 @@
        struct stat st;
+#ifdef _WIN32
+       if (stat (filename, &st) == -1) {
+#else
        if (lstat (filename, &st) == -1) {
+#endif
                g_debug ("Unable to determine size of file '%s': %s", filename,
g_strerror (errno));
EOF
# fix undefined realpath in compose/asc-directory-unit.c (version >= 1.0.5)
sed -i.bak -e "1i #define realpath(N,R) _fullpath((R),(N),_MAX_PATH)" compose/asc-directory-unit.c
# fix subprojects/libxmlb/meson.build (version >= 0.16.1)
patch -ulbf subprojects/libxmlb/meson.build << EOF
@@ -105,2 +105,3 @@
 if host_machine.system() == 'windows'
+  prefix = get_option('prefix')
   bindir = get_option('bindir')
EOF
# fix missing gio-unix
sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
# fix invalid /usr/include search path
sed -i.bak2 -e "s?/usr/?$(cygpath -m $MINGWPREFIX)/?g" meson.build
# skip building docs and tests
sed -i.bak3 -e "s?subdir('\(docs\|tests\)/')?#&?g" meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/python/Lib/site-packages $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dcompose=true -Dsystemd=false -Dsvg-support=false -Dqt=false -Dgir=false -Dvapi=false -Ddocs=false -Dapidocs=false -Dinstall-docs=false . build_both &&
 #-Dc_args="$(if ${CC:-gcc} --help -v 2>/dev/null|grep -q "\-Wint-conversion" || ${CC:-gcc} --version|grep -q "^clang"; then echo "-Wno-error=int-conversion"; fi)" 
 # avoid absolute paths and backslashes
 sed -i.bak -e "s?$(cygpath -m $INSTALLPREFIX/)??g; s?\\\\?/?g" build_both/config.h &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/python/Lib/site-packages ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



