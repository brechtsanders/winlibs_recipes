export NAME="yajl"
export STATUS=
export URL=http://lloyd.github.com/yajl/
export BASENAME=libyajl
export DESCRIPTION="Yet Another JSON Library. YAJL is a small event-driven (SAX-style) JSON parser written in ANSI C, and a small validating JSON generator."
export CATEGORY=dataprocessing
export TYPE=library
#export VERSION=1.0.11
#export VERSIONDATE=20100927
#export VERSION=1.0.12
#export VERSIONDATE=20110426
#export VERSION=2.0.0
#export VERSIONDATE=20110426
#export VERSION=2.0.1
#export VERSIONDATE=20110428
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export VERSION=2.1.0
export VERSIONDATE=20140319
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=ISC
#export DOWNLOADURL="http://lloyd.github.com/yajl/ yajl-"
#export DOWNLOADURL="https://github.com/lloyd/yajl/releases"
export DOWNLOADURL="https://github.com/lloyd/yajl/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://github.com/lloyd/yajl/tarball/$VERSION
#export DOWNLOADSOURCEURL=https://github.com/lloyd/yajl/archive/$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/lloyd/yajl/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/lloyd-yajl-$VERSION-*.tar.gz $TARBALLDIR/$BASENAME/yajl-$VERSION.tar.gz
#mv $TARBALLDIR/$BASENAME/$VERSION $TARBALLDIR/$BASENAME/yajl-$VERSION.tar.gz
wl-wait4deps
#mkdir -p $BASENAME-$VERSION
#tar xz --force-local -f $TARBALLDIR/$BASENAME/yajl-$VERSION.tar.gz -C$BASENAME-$VERSION
#cd $BASENAME-$VERSION/lloyd-yajl-*
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd yajl-$VERSION
# fix missing sprintf_s in src/yajl_tree.c (version >= 2.1.0)
patch -ulbf src/yajl_tree.c << EOF
@@ -27,3 +27,3 @@

-#if defined(_WIN32) || defined(WIN32)
+#if (defined(_WIN32) || defined(WIN32)) && defined(_MSC_VER)
 #define snprintf sprintf_s
EOF
# fix to avoid invalid compiler/linker switches
sed -i.bak -e "s/(WIN32)/(WIN32NOMINGW)/" CMakeLists.txt
# fix static library name (version >= 2.1.0)
echo "set_target_properties(yajl_s PROPERTIES OUTPUT_NAME yajl)" >> src/CMakeLists.txt
#wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -S. -Bbuild_win &&
# wl-showstatus install &&
# make -Cbuild_win &&
# wl-showstatus build-install &&
# mkdir -p $INSTALLPREFIX &&
# cp -rf yajl-$VERSION/* $INSTALLPREFIX/ &&
# (( ls -1 $INSTALLPREFIX/lib/*.dll && mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ ) || true ) &&
# (( ls -1 $INSTALLPREFIX/lib/libyajl_s.a && cp -u -f $INSTALLPREFIX/lib/libyajl_s.a $INSTALLPREFIX/lib/libyajl.a ) || true ) &&
# #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf yajl-$VERSION
wl-showstatus configure &&
 #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -S. -Bbuild_win &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX=$INSTALLPREFIX -S. -Bbuild_win &&
 wl-showstatus install &&
 #make -Cbuild_win install &&
 ninja -Cbuild_win install/strip &&
 wl-showstatus build-install &&
 (( ls -1 $INSTALLPREFIX/lib/*.dll && mv -f $INSTALLPREFIX/lib/*.dll $INSTALLPREFIX/bin/ ) || true ) &&
 #wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf yajl-$VERSION



