export NAME="qemu"
export STATUS=
#export URL=http://bellard.org/qemu/
export URL=http://www.qemu.org/
export BASENAME=qemu
export DESCRIPTION="QEMU is a generic and open source machine emulator and virtualizer."
export CATEGORY=virtualization
export TYPE=library
#export VERSION=0.9.1
#export VERSION=0.10.1
#export VERSION=0.10.2
#export VERSION=0.10.3
#export VERSION=0.10.4
#export VERSION=0.10.5
#export VERSION=0.10.6
#export VERSION=0.12.2
#export VERSIONDATE=20100125
#export VERSION=0.12.5
#export VERSIONDATE=20101006
####pc-bios/optionrom/signrom.sh: line 31: * 512 - 1 : syntax error: operand expected (error token is "* 512 - 1 ")
#export VERSION=0.13.0
#export VERSIONDATE=20101018
#export VERSION=0.14.0
#export VERSIONDATE=20110218
#export VERSION=0.14.1
#export VERSIONDATE=20110508
#export VERSION=0.15.0
#export VERSIONDATE=20110809
#export VERSION=0.15.1
#export VERSIONDATE=20111013
#export VERSION=1.0
#export VERSIONDATE=20111202
#export VERSION=1.0.1
#export VERSIONDATE=20120218
####windres: version.rc:5: syntax error
#export VERSION=1.1.0
#export VERSIONDATE=20120603
#export VERSION=1.1.0-1
#export VERSIONDATE=20120605
#export VERSION=1.1.1
#export VERSIONDATE=20120713
####bzip2.exe: (stdin) is not a bzip2 file.
#export VERSION=1.1.1-1
#export VERSIONDATE=20120718
#export VERSION=1.1.2
#export VERSIONDATE=20120906
#export VERSION=1.2.0
#export VERSIONDATE=20120906
#export VERSION=1.2.1
#export VERSIONDATE=20121120
#export VERSION=1.2.2
#export VERSIONDATE=20121212
#export VERSION=1.3.0
#export VERSIONDATE=20121204
#export VERSION=1.3.1
#export VERSIONDATE=20130129
#export VERSION=1.4.0
#export VERSIONDATE=20130216
#export VERSION=1.4.1
#export VERSIONDATE=20130416
#export VERSION=1.4.2
#export VERSIONDATE=20130525
#export VERSION=1.5.0
#export VERSIONDATE=20130521
#export VERSION=1.5.1
#export VERSIONDATE=20130627
#export VERSION=1.5.2
#export VERSIONDATE=20130726
#export VERSION=1.5.3
#export VERSIONDATE=20130827
#export VERSION=1.6.0
#export VERSIONDATE=20130816
#export VERSION=1.6.1
#export VERSIONDATE=20131010
#export VERSION=1.6.2
#export VERSIONDATE=20131216
#export VERSION=1.7.0
#export VERSIONDATE=20131128
#export VERSION=1.7.1
#export VERSIONDATE=20140325
#export VERSION=1.7.2
#export VERSIONDATE=20140724
#export VERSION=2.0.0
#export VERSIONDATE=20140418
#export VERSION=2.0.2
#export VERSIONDATE=20140819
####ERROR: Cannot use '/E/Prog/MSYS2-64/WinPython-64bit-3.3.5.0/python.exe', Python 2.4 or later is required.
####       Note that Python 3 or later is not yet supported.
#export VERSION=2.1.0
#export VERSIONDATE=20140802
#export VERSION=2.1.1
#export VERSIONDATE=20140911
#export VERSION=2.1.2
#export VERSIONDATE=20140926
#export VERSION=2.1.3
#export VERSIONDATE=20150124
####hw/usb/host-libusb.c:36:18: fatal error: poll.h: No such file or directory
#export VERSION=2.2.0
#export VERSIONDATE=20141210
#export VERSION=2.2.1
#export VERSIONDATE=20150311
#export VERSION=2.3.0
#export VERSIONDATE=20150428
#export VERSION=2.3.1
#export VERSIONDATE=20150812
#export VERSION=2.4.0
#export VERSIONDATE=20150812
#export VERSION=2.4.0.1
#export VERSIONDATE=20150923
#export VERSION=2.4.1
#export VERSIONDATE=20151104
#export VERSION=2.5.0
#export VERSIONDATE=20151218
#export VERSION=2.5.1
#export VERSIONDATE=20160406
#export VERSION=2.5.1.1
#export VERSIONDATE=20170208
####libcacard/Makefile:25: recipe for target 'libcacard.la' failed
####'version.lo' is not a valid libtool object
#export VERSION=2.5.1.1
#export VERSIONDATE=20160510
#export VERSION=2.6.0
#export VERSIONDATE=20160511
#export VERSION=2.6.1
#export VERSIONDATE=20160818
#export VERSION=2.6.2
#export VERSIONDATE=20160930
#export VERSION=2.7.0
#export VERSIONDATE=20160903
#export VERSION=2.7.1
#export VERSIONDATE=20161224
#export DEPENDANCIES=libjpeg,libpng,gnutls,libcurl,glib2
#export VERSION=2.8.0
#export VERSIONDATE=20161222
####Couldn't find file /usr/i686-w64-mingw32/sys-root/mingw/bin/gspawn-win32-helper-console.exe
#export VERSION=2.8.1
#export VERSIONDATE=20170401
#export VERSION=2.8.1.1
#export VERSIONDATE=20170421
#export VERSION=2.9.0
#export VERSIONDATE=20170421
#export VERSION=2.9.1
#export VERSIONDATE=20170908
#export VERSION=2.10.0
#export VERSIONDATE=20170831
#export VERSION=2.10.1
#export VERSIONDATE=20171003
#export VERSION=2.10.2
#export VERSIONDATE=20171219
####WIXL    qemu-ga-x86_64.msi    make: *** [Makefile:460: qemu-ga-x86_64.msi] Error 127
#export VERSION=2.11.0
#export VERSIONDATE=20171214
#export VERSION=2.11.1
#export VERSIONDATE=20180215
#export VERSION=2.11.2
#export VERSIONDATE=20180628
#export VERSION=2.12.0
#export VERSIONDATE=20180425
#export VERSION=2.12.1
#export VERSIONDATE=20180803
####ERROR: Cannot use '/D/Python/WinPython-64bit-3.6.3.0Zero/python-3.6.3.amd64/python.exe', Python 2.6 or later is required.
####       Note that Python 3 or later is not yet supported.
####       Use --python=/path/to/python to specify a supported Python.
#export VERSION=3.0.0
#export VERSIONDATE=20180816
#export VERSION=3.0.1
#export VERSIONDATE=20190413
#export VERSION=3.1.0
#export VERSIONDATE=20181212
#export VERSION=3.1.1
#export VERSIONDATE=20190803
#export VERSION=3.1.1.1
#export VERSIONDATE=20191002
#export VERSION=4.0.0
#export VERSIONDATE=20190424
#export VERSION=4.0.1
#export VERSIONDATE=20191018
#export VERSION=4.1.0
#export VERSIONDATE=20190816
#export VERSION=4.1.1
#export VERSIONDATE=20191115
#export VERSION=4.2.0
#export VERSIONDATE=20191213
export VERSION=4.2.1
export VERSIONDATE=20200626
#export VERSION=5.0.0
#export VERSIONDATE=20200429
#export VERSION=5.0.1
#export VERSIONDATE=20200916
####qapi/qapi-types-crypto.h:176:33: error: field 'qcow' has incomplete type
#export VERSION=5.1.0
#export VERSIONDATE=20200812
#export VERSION=5.2.0
#export VERSIONDATE=20201209
#export VERSION=6.0.0
#export VERSIONDATE=20210430
#export VERSION=6.0.1
#export VERSIONDATE=20211029
#export VERSION=6.1.0
#export VERSIONDATE=20210825
#export VERSION=6.1.1
#export VERSIONDATE=20211224
#export VERSION=6.2.0
#export VERSIONDATE=20211215
####make: *** No rule to make target 'target/arm/trace-events', needed by 'target/arm/trace.h-timestamp'.  Stop.
wl-showstatus --package-version
export DEPENDANCIES=libjpeg,libpng,gnutls,libcurl,glib2,cairo,gtk2,gettext,zlib,lzo,libnettle,pixman,snappy,libssh2
export OPTIONALDEPENDANCIES=capstone
export BUILDDEPENDANCIES=dd,texinfo
#export BUILDDEPENDANCIES=dd,texinfo,msitools
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="http://www.nongnu.org/qemu/download.html"
#export DOWNLOADURL="http://www.qemu.org/download.html"
#export DOWNLOADURL="http://wiki.qemu.org/Download"
export DOWNLOADURL="https://gitlab.com/qemu-project/qemu/-/tags?sort=updated_desc"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://bellard.org/qemu/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://download.savannah.gnu.org/releases/qemu/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=http://wiki.qemu.org/download/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://wiki.qemu.org/download/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xfa $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$(echo $VERSION|sed -e "s/-[0-9]*$//")
## fix type errors (version <= 0.12.2)
#patch -ulbf dyngen-exec.h << EOF
#--- dyngen-exec.h  Tue Apr  7 04:05:04 2009
#+++ dyngen-exec.h  Wed Apr  8 11:48:43 2009
#@@ -34,2 +34,5 @@
# 
#+#ifdef __MINGW32__
#+#include <stdint.h>
#+#else
# #ifdef __OpenBSD__
#@@ -64,2 +67,3 @@
# typedef signed long long int64_t;
#+#endif
# #endif
#EOF
# fix qemu-options.hx (version >= 1.4.1)
patch -ulbf qemu-options.hx << EOF
--- qemu-options.hx  2013-04-15 22:25:18 +0200
+++ qemu-options.hx  2013-04-16 12:18:22 +0200
@@ -2094,14 +2094,9 @@
 Syntax for specifying a sheepdog device
-@table @list
-\`\`sheepdog:<vdiname>''
-
-\`\`sheepdog:<vdiname>:<snapid>''
-
-\`\`sheepdog:<vdiname>:<tag>''
-
-\`\`sheepdog:<host>:<port>:<vdiname>''
-
-\`\`sheepdog:<host>:<port>:<vdiname>:<snapid>''
-
-\`\`sheepdog:<host>:<port>:<vdiname>:<tag>''
+@table @code
+@item sheepdog:<vdiname>
+@item sheepdog:<vdiname>:<snapid>
+@item sheepdog:<vdiname>:<tag>
+@item sheepdog:<host>:<port>:<vdiname>
+@item sheepdog:<host>:<port>:<vdiname>:<snapid>
+@item sheepdog:<host>:<port>:<vdiname>:<tag>
 @end table
EOF
# fix redefinition of strtok_r (version >= 2.2.1)
grep -q strtok_r $MINGWDIR/*/include/string.h &> /dev/null && patch -ulbf include/sysemu/os-win32.h << EOF
--- include/sysemu/os-win32.h  2015-03-10 18:38:28.000000000 +0100
+++ include/sysemu/os-win32.h  2015-03-11 22:12:23.787623900 +0100
@@ -84 +84 @@
-char *strtok_r(char *str, const char *delim, char **saveptr);
+//char *strtok_r(char *str, const char *delim, char **saveptr);
EOF
#echo "#include <stdint.h>" >> config-host.h
##fix qga/installer/qemu-ga.wxs (version >= 2.7.0)
#patch -ulbf qga/installer/qemu-ga.wxs << EOF
#--- "qga/installer/qemu-ga - Copy.wxs"  2016-09-02 17:34:22.000000000 +0200
#+++ qga/installer/qemu-ga.wxs   2016-09-03 07:49:32.386975200 +0200
#@@ -20,6 +20,6 @@
#     <?if \$(var.Arch) = "64"?>
#-      <?define Mingw_bin=/usr/x86_64-w64-mingw32/sys-root/mingw/bin ?>
#+      <?define Mingw_bin=$MINGWPREFIX/bin ?>
#     <?endif?>
#     <?if \$(var.Arch) = "32"?>
#-      <?define Mingw_bin=/usr/i686-w64-mingw32/sys-root/mingw/bin ?>
#+      <?define Mingw_bin=$MINGWPREFIX/bin ?>
#     <?endif?>
#@@ -93,20 +93,4 @@
#           <?endif?>
#-          <?if \$(var.Arch) = "32"?>
#-          <Component Id="gspawn-helper-console" Guid="{446185B3-87BE-43D2-96B8-0FEFD9E8696D}">
#-            <File Id="gspawn-win32-helper-console.exe" Name="gspawn-win32-helper-console.exe" Source="\$(var.Mingw_bin)/gspawn-win32-helper-console.exe" KeyPath="yes" DiskId="1"/>
#-          </Component>
#-          <Component Id="gspawn-helper" Guid="{CD67A5A3-2DB1-4DA1-A67A-8D71E797B466}">
#-            <File Id="gspawn-win32-helper.exe" Name="gspawn-win32-helper.exe" Source="\$(var.Mingw_bin)/gspawn-win32-helper-console.exe" KeyPath="yes" DiskId="1"/>
#-          </Component>
#-          <?endif?>
#-          <?if \$(var.Arch) = "64"?>
#-          <Component Id="gspawn-helper-console" Guid="{9E615A9F-349A-4992-A5C2-C10BAD173660}">
#-            <File Id="gspawn-win64-helper-console.exe" Name="gspawn-win64-helper-console.exe" Source="\$(var.Mingw_bin)/gspawn-win64-helper-console.exe" KeyPath="yes" DiskId="1"/>
#-          </Component>
#-          <Component Id="gspawn-helper" Guid="{D201AD22-1846-4E4F-B6E1-C7A908ED2457}">
#-            <File Id="gspawn-win64-helper.exe" Name="gspawn-win64-helper.exe" Source="\$(var.Mingw_bin)/gspawn-win64-helper-console.exe" KeyPath="yes" DiskId="1"/>
#-          </Component>
#-          <?endif?>
#           <Component Id="iconv" Guid="{35EE3558-D34B-4F0A-B8BD-430FF0775246}">
#-            <File Id="iconv.dll" Name="iconv.dll" Source="\$(var.Mingw_bin)/iconv.dll" KeyPath="yes" DiskId="1"/>
#+            <File Id="iconv.dll" Name="iconv.dll" Source="\$(var.Mingw_bin)/libiconv-2.dll" KeyPath="yes" DiskId="1"/>
#           </Component>
#EOF
# replace lm.h with levmar.h in qga/commands-win32.c (version >= 2.8.1)
echo "#include <levmar.h>" | gcc -c -xc - -o /dev/null &> /dev/null && (
 mv qga/commands-win32.c qga/commands-win32.c.bak &&
 sed -e "s/\(#include <\)lm\.h\(>\)/\1levmar.h\2\n\1lmaccess.h\2\n\1lmerr.h\2/" qga/commands-win32.c.bak > qga/commands-win32.c
)
# fix redefinition of struct iovec (already defined in $MINGWPREFIX/include/sasl/sasl.h) in ui/vnc-auth-sasl.h (version >= 4.2.0)
patch -ulbf ui/vnc-auth-sasl.h << EOF
@@ -27,3 +27,5 @@

+#define iovec SASL_iovec
 #include <sasl/sasl.h>
+#undef iovec

EOF
## fix detection of ncurses in configure (version >= 4.2.0)
#patch -ulbf configure << EOF
#@@ -3591,3 +3591,3 @@
# if test "\$curses" != "no" ; then
#-  if test "\$mingw32" = "yes" ; then
#+  if test "\$mingw32" = "yes" && false ; then
#     curses_inc_list="\$(\$pkg_config --cflags ncurses 2>/dev/null):"
#EOF
# disable stack protection (version >= 4.2.1)
sed -i.bak -e "s/-fstack-protector-[a-z]*\|-U_FORTIFY_SOURCE\|-D_FORTIFY_SOURCE=2//g" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png &&
 #./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png --python=$PYDIR/python.exe --disable-opengl &&
 #PKG_CONFIG=`which pkg-config` ./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png --python=$PYDIR/python.exe --disable-opengl &&
 #PKG_CONFIG=`which pkg-config` ./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png --python=$PYDIR/python.exe --disable-opengl --disable-libiscsi --cc=gcc &&
 #PKG_CONFIG=`which pkg-config` ./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png --python=$PYDIR/python.exe --disable-libiscsi --cc=gcc &&
 #PKG_CONFIG=`which pkg-config` ./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png --python=$PYDIR/python.exe --disable-libiscsi --cc=gcc --disable-libusb --disable-smartcard-nss &&
 #PKG_CONFIG=`which pkg-config` ./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png --python=$PYDIR/python.exe --disable-libiscsi --cc=gcc --disable-libusb &&
 #PKG_CONFIG=`which pkg-config` ./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png --python=$PYDIR/python.exe --disable-libiscsi --cc=gcc --disable-libusb --disable-guest-agent-msi &&
 #PKG_CONFIG=$(which pkg-config) ./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png --python=$PY2DIR/python.exe --disable-libiscsi --cc=gcc --disable-libusb --disable-guest-agent-msi &&
 #PKG_CONFIG=$(which pkg-config) ./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png --python=$PYDIR/python.exe --disable-libiscsi --cc=gcc --disable-libusb --disable-guest-agent-msi &&
 PKG_CONFIG=$(which pkg-config) ./configure --prefix=$INSTALLPREFIX/qemu --enable-vnc-png --enable-libusb --disable-libiscsi --disable-guest-agent-msi --target-list-exclude=s390x-softmmu --python=$PYDIR/python.exe --cc=gcc &&
 #PATH=$MINGWPREFIX/share/msitools/bin:$PATH
 wl-showstatus build-install &&
 ## fix invalid version.lo (version >= 2.4.1)
 #make config-host.h && libtool --mode compile windres version.rc -o version.o &&
 # fix installation paths for icons and desktop files (version >= 4.0.0)
 sed -i.bak -e "s/\$(DESTDIR)\/\(\$(qemu_\)/\1/g" Makefile &&
 ( make install LD_FLAGS="-s" || make -j1 install LD_FLAGS="-s" || make -j1 install HOST_CC=gcc LD_FLAGS="-s" || make -j1 install LD_FLAGS="-s -Wl,--as-needed mingwex -lmingwex -lSDL" ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$(echo $VERSION|sed -e "s/-[0-9]*$//")
####TO DO: using libiscsi and libusb causes errors about missing poll.h
####TO DO: --enable-curses
####TO DO: --enable-spice



#export BUILDDEPENDANCIES=meson,ninja
#-Dc_args=$CFLAGS -Dcpp_args=$CXXFLAGS -Dc_link_args=$LDFLAGS
## fix missing file (version >= 6.0.1)
#mkdir -p build_both/
#cp -u build/config-host.mak build_both/
## fix missing file (version >= 6.2.0)
#touch include/exec/config-poison.h
## fix location of Perl
#sed -i.bak -e "s?'perl'?'$(cygpath -w $PERLDIR/bin/perl.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix detection of Python
#sed -i.bak -e "s?'python3'?'$(cygpath -w $PYDIR/python.exe|sed -e 's/\\/&&&&/g')'?" meson.build
## fix missing gio-unix
##sed -i.bak -e "s/gio-unix-/gio-/" meson.build
#sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
#mkdir -p build_both &&
# wl-showstatus configure &&
# PKG_CONFIG= PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dguest_agent_msi=disabled -Dmalloc=system -Ddocs=disabled . build_both &&
# ## fix slash/backslash path issue when calling Python from Ninja
# #sed -i.bak -e "s/join_paths/os.path.join/g; /COMMAND =.*python\.exe/ s?\"/\([a-zA-Z]\)/?\"\1:/?; /COMMAND =.*python\.exe/ s?/?\\\\?g" build_*/build.ninja &&
# ## fix Python path issues in meson_exe
# #sed -i.bak -e "s?$PYDIR?$(echo $PYDIR|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?" build_both/meson-private/meson_exe_python.exe_*.dat &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *= *\| *=.*\&\& *\)\(\"\{0,1\}[^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\|asciidoc\)\(\"\{0,1\} \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_both/build.ninja &&
# ## fix executing shell scripts
# #sed -i.bak -e "s?^\(\s*COMMAND\s*=\s*\)\(\"[^\"]*\.sh\"\)?\1\"$(cygpath -m $(which sh.exe))\" \2?" build_both/build.ninja &&
# wl-showstatus build-install &&
# #PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -Cbuild_both install/strip &&
# PATH=$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -Cbuild_both install &&
# #PATH=$PERLDIR/../c/bin:$PERLDIR/bin:$PATH:$PYDIR PYTHONPATH=$PYTHONPATH:$MINGWPREFIX/lib ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'



## make standalone package
#mkdir -p QEMU &&
#cp -rf $MINGWPREFIX/qemu/* QEMU/ &&
#copypedeps -r -n $MINGWPREFIX/qemu/*.{dll,exe} QEMU/
