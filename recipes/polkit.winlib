#export NAME="PolicyKit"
#export STATUS=
#export URL="http://www.freedesktop.org/wiki/Software/PolicyKit"
#export BASENAME=polkit
#export DESCRIPTION="PolicyKit is an application-level toolkit for defining and handling the policy that allows unprivileged processes to speak to privileged processes: It is a framework for centralizing the decision making process with respect to granting access to privileged operations for unprivileged applications. PolicyKit is specifically targeting applications in rich desktop environments on multi-user UNIX-like operating systems. It does not imply or rely on any exotic kernel features."
#export CATEGORY=security
#export TYPE=library
##export VERSION=0.99
##export VERSIONDATE=20101117
##export VERSION=0.100
##export VERSIONDATE=20110222
##export VERSION=0.101
##export VERSIONDATE=20110304
#####configure: error: Could not find pam/pam-devel, please install the needed packages.
##export VERSION=0.102
##export VERSIONDATE=20110801
##export VERSION=0.103
##export VERSIONDATE=20111206
#export VERSION=0.104
#export VERSIONDATE=20120104
#wl-showstatus --package-version
#export DEPENDENCIES=expat
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=intltool
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://hal.freedesktop.org/releases/"
#export DOWNLOADURL="https://gitlab.freedesktop.org/polkit/polkit/-/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://hal.freedesktop.org/releases/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://gitlab.freedesktop.org/polkit/polkit/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
##tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
## fix missing files
#cat > pwd.h << EOF
#typedef int uid_t;
##define getuid() 0
##define geteuid() 0
##define getpwuid(uid) NULL
##define getpwnam(username) NULL
#struct passwd {
# int pw_uid;
# int pw_gid;
# char *pw_name;
#};
#EOF
#cat > grp.h << EOF
#typedef int gid_t;
##define getgrgid(gid) NULL
##define getgrnam(groupname) NULL
##define getgrouplist(user,group,groups,ngroups) 0
#struct group {
# int gr_gid;
# char *gr_name;
# char **gr_mem;
#};
#EOF
#cat > syslog.h << EOF
##define LOG_NOTICE  5    //normal but significant condition
##define LOG_INFO    6    //informational
##define LOG_DAEMON   (3<<3)    //system daemons
##define LOG_AUTHPRIV (10<<3)   //security/authorization messages (private)
##define LOG_PID    0x01    //log the pid with each message
#static void openlog (const char *ident, int option, int facility) {}
#static void syslog (int priority, const char *format, ...) {}
#static void closelog (void) {}
##include <stdarg.h>
#static void vsyslog (int priority, const char *format, va_list ap) {}
#EOF
#mkdir -p sys
#touch sys/wait.h
## fix problem detecting GNU gettext tools on 64-bit
#if ( echo $RUNPLATFORM | grep -q x86_64 ); then
# mv configure configure.bak
# sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
#fi
## fix src/polkit/polkitunixprocess.c for 64-bit
#patch -ulbf src/polkit/polkitunixprocess.c << EOF
#--- src/polkit/polkitunixprocess.c  2011-08-01 15:42:02 +0200
#+++ src/polkit/polkitunixprocess.c  2011-12-07 17:57:42 +0100
#@@ -82,3 +82,3 @@
#
#-static guint64 get_start_time_for_pid (gint    pid,
#+static guint64 get_start_time_for_pid (pid_t    pid,
#                                        GError **error);
#EOF
#####You must have XML::Parser installed to run /bin/intltool-merge
##$PERLDIR/bin/perl.exe $PERLDIR/bin/cpan install XML::Parser
##wl-showstatus preconfigure &&
## mkdir -p m4 &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
#wl-showstatus configure &&
# #PERL="$PERLDIR/bin/perl.exe" PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-authdb=dummy --with-authfw=none --enable-introspection=no LDFLAGS="-Wl,-no-undefined" &&
# PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-authdb=dummy --with-authfw=none --enable-introspection=no LDFLAGS="-Wl,-no-undefined" &&
# wl-showstatus build-install &&
# sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
# ( PATH=$PYDIR:$PATH make install-strip || ( PATH=$PYDIR:$PATH make -Csrc/polkit install-strip && make -i install-strip; rm $INSTALLPREFIX/lib/pkgconfig/polkit-agent-1.pc ) ) &&
# ls -1 $INSTALLPREFIX/bin/libpolkit-gobject*.dll &> /dev/null &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="PolicyKit"
#export STATUS=
#export URL="https://gitlab.freedesktop.org/polkit/polkit/"
#export BASENAME=polkit
#export DESCRIPTION="PolicyKit is an application-level toolkit for defining and handling the policy that allows unprivileged processes to speak to privileged processes: It is a framework for centralizing the decision making process with respect to granting access to privileged operations for unprivileged applications. PolicyKit is specifically targeting applications in rich desktop environments on multi-user UNIX-like operating systems. It does not imply or rely on any exotic kernel features."
#export CATEGORY=security
#export TYPE=library
##export VERSION=0.119
##export VERSIONDATE=20210611
#export VERSION=0.120
#export VERSIONDATE=20211005
#wl-showstatus --package-version
#export DEPENDENCIES=glib2,expat
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=meson,ninja,intltool
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=LGPL
#export DOWNLOADURL="https://gitlab.freedesktop.org/polkit/polkit/-/tags"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://gitlab.freedesktop.org/polkit/polkit/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
#cd $BASENAME-$VERSION
## fix missing file
#echo "CLEANFILES =" > gtk-doc.make
## fix missing gio-unix
#sed -i.bak -e "s/gio-unix-/gio-windows-/" configure.ac
#wl-showstatus configure &&
# mkdir -p m4 &&
# autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
# ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-libsystemd-login --disable-libelogind --with-authfw=none --disable-introspection --disable-examples --disable-test &&
# wl-showstatus build-install &&
# make install-strip &&
#    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="PolicyKit"
export STATUS=
export URL="https://gitlab.freedesktop.org/polkit/polkit/"
export BASENAME=polkit
export DESCRIPTION="PolicyKit is an application-level toolkit for defining and handling the policy that allows unprivileged processes to speak to privileged processes: It is a framework for centralizing the decision making process with respect to granting access to privileged operations for unprivileged applications. PolicyKit is specifically targeting applications in rich desktop environments on multi-user UNIX-like operating systems. It does not imply or rely on any exotic kernel features."
export CATEGORY=security
export TYPE=library
#export VERSION=121
#export VERSIONDATE=20220711
####Run-time dependency mozjs-78 found: NO (tried pkgconfig and cmake)
export VERSION=122
export VERSIONDATE=20221026
wl-showstatus --package-version
export DEPENDENCIES=glib2,expat,gobject-introspection
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=meson,ninja,intltool
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="https://gitlab.freedesktop.org/polkit/polkit/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://gitlab.freedesktop.org/polkit/polkit/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix src/polkit/polkitauthority.c (version >= 122)
patch -ulbf src/polkit/polkitauthority.c << EOF
@@ -35,2 +35,6 @@
 #include "polkitprivate.h"
+#ifdef _WIN32
+#define uid_t int
+#define getuid() 0
+#endif

EOF
# fix src/polkit/polkitunixgroup.c (version >= 122)
patch -ulbf src/polkit/polkitunixgroup.c << EOF
@@ -26,3 +26,12 @@
 #include <string.h>
+#ifdef _WIN32
+#define getgrnam(name) NULL
+#define getgrgid(gid) NULL
+struct group {
+  int gr_gid;
+  char* gr_name;
+};
+#else
 #include <grp.h>
+#endif
 #include <errno.h>
EOF
# fix src/polkit/polkitunixprocess.c (version >= 122)
patch -ulbf src/polkit/polkitunixprocess.c << EOF
@@ -681,3 +681,3 @@
 static guint64
-get_start_time_for_pid (pid_t    pid,
+get_start_time_for_pid (gint    pid,
                         GError **error)
EOF
# fix src/polkit/polkitunixuser.c (version >= 122)
patch -ulbf src/polkit/polkitunixuser.c << EOF
@@ -26,3 +26,12 @@
 #include <string.h>
+#ifdef _WIN32
+#define getpwnam(name) NULL
+#define getpwuid(uid) NULL
+struct passwd {
+  int pw_uid;
+  char* pw_name;
+};
+#else
 #include <pwd.h>
+#endif
 #include <errno.h>
EOF
# fix src/polkit/polkitpermission.c (version >= 122)
patch -ulbf src/polkit/polkitpermission.c << EOF
@@ -25,2 +25,5 @@
 #endif
+#ifdef _WIN32
+#define getuid() 0
+#endif

EOF
# fix missing gio-unix
sed -i.bak -e "s/gio-unix-/gio-windows-/" meson.build
# allow building both static and shared libraries
sed -i.bak -e "s/\(static\|shared\)_\(library\)/\2/" src/polkit/meson.build src/polkitagent/meson.build src/polkitbackend/meson.build test/meson.build
mkdir -p build_both &&
 wl-showstatus configure &&
 PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dlibs-only=true -Dsession_tracking=ConsoleKit -Dauthfw=shadow -Dintrospection=true -Dman=false -Dgtk_doc=false -Dexamples=false -Dtests=false . build_both &&
 # avoid UNIX stuff in meson_post_install.py
 mv meson_post_install.py meson_post_install.py.bak &&
 touch meson_post_install.py &&
 wl-showstatus build-install &&
 PATH=$PATH:$PYDIR:$PERLDIR/bin PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



