export NAME="Gmsh"
export STATUS=
export URL=https://gmsh.info/
export BASENAME=gmsh
export DESCRIPTION="A three-dimensional finite element mesh generator with built-in pre- and post-processing facilities"
export CATEGORY=graphics
export TYPE=application
#export VERSION=4.10.4
#export VERSIONDATE=20220625
#export VERSION=4.10.5
#export VERSIONDATE=20220702
#export VERSION=4.11.0
#export VERSIONDATE=20221107
#export VERSION=4.11.1
#export VERSIONDATE=20221221
#export VERSION=4.12.0
#export VERSIONDATE=20231222
#export VERSION=4.12.1
#export VERSIONDATE=20240111
#export VERSION=4.12.2
#export VERSIONDATE=20240122
#export VERSION=4.13.0
#export VERSIONDATE=20240507
#export VERSION=4.13.1
#export VERSIONDATE=20240525
#export VERSION=4.14.0
#export VERSIONDATE=20240704
export VERSION=4.14.1
export VERSIONDATE=20240902
wl-showstatus --package-version
export DEPENDENCIES=fltk,cairo,gmp,zlib,libjpeg,libpng
export OPTIONALDEPENDENCIES=libmed
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=GPL
export DOWNLOADURL="https://gmsh.info/ gmsh- -source.tgz"
#export DOWNLOADURL="https://gitlab.onelab.info/gmsh/gmsh/-/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://gmsh.info/src/gmsh-$VERSION-source.tgz
#export DOWNLOADSOURCEURL=https://gitlab.onelab.info/gmsh/gmsh/-/archive/gmsh_$(echo $BASENAME|tr . _)/gmsh-gmsh_$(echo $BASENAME|tr . _).tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/gmsh-$VERSION-source.tgz
cd gmsh-$VERSION-source
# fix undefined uint32_t in src/mesh/meshGFacePack.cpp (version >= 4.11.1)
mv src/mesh/meshGFacePack.cpp src/mesh/meshGFacePack.cpp.bak &&
echo "#include <cstdint>" > src/mesh/meshGFacePack.cpp &&
cat src/mesh/meshGFacePack.cpp.bak >> src/mesh/meshGFacePack.cpp
# fix undefined uint32_t in contrib/QuadMeshingTools/qmtMeshGeometryOptimization.h (version >= 4.11.1)
mv contrib/QuadMeshingTools/qmtMeshGeometryOptimization.h contrib/QuadMeshingTools/qmtMeshGeometryOptimization.h.bak &&
echo "#include <cstdint>" > contrib/QuadMeshingTools/qmtMeshGeometryOptimization.h &&
cat contrib/QuadMeshingTools/qmtMeshGeometryOptimization.h.bak >> contrib/QuadMeshingTools/qmtMeshGeometryOptimization.h
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_NCURSES:BOOL=ON -DENABLE_WRAP_JAVA:BOOL=OFF -DENABLE_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_win &&
 # fix missing link libraries (version >= 4.14.0)
 sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lfltk_png -lfltk_z -lgdiplus/" build_win/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf gmsh-$VERSION-source



