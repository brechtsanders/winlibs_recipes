export NAME="GCC, the GNU Compiler Collection (targetting Atmel AVR)"
export STATUS=
export URL=https://gcc.gnu.org/
export BASENAME=avr-gcc
export DESCRIPTION="The GNU Compiler Collection includes front ends for C, C++, Objective-C, Fortran, Ada, and Go, as well as libraries for these languages (libstdc++,...). GCC was originally written as the compiler for the GNU operating system. The GNU system was developed to be 100% free software, free in the sense that it respects the user's freedom. This build targets the Atmel AVR (Arduino) platform."
export CATEGORY=development
export TYPE=application
#export VERSION=10.2.0
#export VERSIONDATE=20200723
#export VERSION=10.3.0
#export VERSIONDATE=20210408
#export VERSION=11.1.0
#export VERSIONDATE=20210427
#export VERSION=11.2.0
#export VERSIONDATE=20210728
export VERSION=11.3.0
export VERSIONDATE=20220421
wl-showstatus --package-version
#export DEPENDANCIES=zlib,zstd,pthreads,libiconv,mpfr,gmp,mpc,isl,mman-win32
export DEPENDANCIES=zlib,zstd,pthreads,libiconv,mpfr,gmp,mpc,isl
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=avr-binutils
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://gcc.gnu.org/releases.html gcc-"
#export DOWNLOADURL="https://ftp.gnu.org/gnu/gcc/ gcc-"
export DOWNLOADURL="https://gcc.gnu.org/pub/gcc/releases/ gcc-"
#export DOWNLOADURL="https://gcc.gnu.org/pub/gcc/snapshots/ gcc-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://ftp.mpi-sb.mpg.de/pub/gnu/mirror/gcc.gnu.org/pub/gcc/releases/gcc-$VERSION/gcc-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://ftp.gnu.org/gnu/gcc/gcc-$VERSION/gcc-$VERSION.tar.xz
export DOWNLOADSOURCEURL=https://gcc.gnu.org/pub/gcc/releases/gcc-$VERSION/gcc-$VERSION.tar.xz
#export DOWNLOADSOURCEURL=https://gcc.gnu.org/pub/gcc/snapshots/$VERSION/gcc-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
tar xfJlh $TARBALLDIR/$BASENAME/gcc-$VERSION.tar.xz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/gcc-$VERSION
# fix missing sys/wait.h fixincludes/fixincl.c (version >= 9.3.0)
patch -ulbf fixincludes/fixincl.c << EOF
@@ -28,4 +28,12 @@
 #ifndef SEPARATE_FIX_PROC
+#ifdef _WIN32
+#include <Windows.h>
+#define wait(p) Sleep(0)
+#include <fcntl.h>
+#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
+#define fork() -1
+#else
 #include <sys/wait.h>
 #endif
+#endif

EOF
# fix missing pipe in fixincludes/procopen.c (version >= 9.3.0)
patch -ulbf fixincludes/procopen.c << EOF
@@ -50,2 +50,7 @@
 #include "server.h"
+#ifdef _WIN32
+#include <fcntl.h>
+#define pipe(fds) _pipe(fds, 4096, _O_BINARY)
+#define fork() -1
+#endif

EOF
# fix missing kill/alarm in fixincludes/server.c (version >= 9.3.0)
patch -ulbf fixincludes/server.c << EOF
@@ -50,2 +50,6 @@
 #include "server.h"
+#ifdef _WIN32
+#define kill(pid,sig) -1
+#define alarm(n) 0
+#endif

EOF
mkdir -p build_avr &&
 wl-showstatus configure &&
 cd build_avr &&
 #PATH=$MINGWPREFIX/share/avr-binutils/bin:$PATH ../configure --prefix=$INSTALLPREFIX/share/avr-gcc --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=avr --with-pkgversion="GCC targetting AVR/Arduino, built by Brecht Sanders" --disable-bootstrap --enable-languages=c,c++ --disable-nls --disable-libssp --with-dwarf2 --disable-version-specific-runtime-libs --without-included-gettext --with-diagnostics-color=auto --with-libiconv --with-system-zlib --disable-twoprocess CFLAGS="-I$MINGWPREFIX/include/mman-win32" LDFLAGS="-Wl,--as-needed -lmman" &&
 PATH=$MINGWPREFIX/share/avr-binutils/bin:$PATH ../configure --prefix=$INSTALLPREFIX/share/avr-gcc --build=$BUILDPLATFORM --host=$RUNPLATFORM --target=avr --with-pkgversion="GCC targetting AVR/Arduino, built by Brecht Sanders" --disable-bootstrap --enable-languages=c,c++ --disable-nls --disable-libssp --with-dwarf2 --disable-version-specific-runtime-libs --without-included-gettext --with-diagnostics-color=auto --with-libiconv --with-system-zlib --disable-twoprocess &&
 #--with-newlib 
 cd .. &&
 wl-showstatus build &&
 PATH=$(pwd)/build_avr/gcc:$(pwd)/build_avr/gcc/build:$MINGWPREFIX/share/avr-binutils/bin:$PATH make -Cbuild_avr &&
 wl-showstatus build-install &&
 PATH=$(pwd)/build_avr/gcc:$(pwd)/build_avr/gcc/build:$MINGWPREFIX/share/avr-binutils/bin:$PATH make -Cbuild_avr install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



