export NAME="Wt"
export STATUS=
export URL=https://www.webtoolkit.eu/wt/
export BASENAME=wt
export DESCRIPTION="Wt (pronounced as witty) is a C++ library for developing web applications."
export CATEGORY=communication
export TYPE=library
#export VERSION=3.3.5
#export VERSIONDATE=20160410
#export VERSION=3.3.6
#export VERSIONDATE=20161129
#export VERSION=3.3.7
#export VERSIONDATE=20170331
#export VERSION=3.3.8
#export VERSIONDATE=20170817
#export VERSION=3.3.9
#export VERSIONDATE=20171121
#export VERSION=3.3.10
#export VERSIONDATE=20180412
#export VERSION=3.3.11
#export VERSIONDATE=20180822
#export VERSION=3.3.12
#export VERSIONDATE=20181214
#export VERSION=3.4.0
#export VERSIONDATE=20190801
#export VERSION=3.4.1
#export VERSIONDATE=20190909
#export VERSION=3.4.2
#export VERSIONDATE=20191031
#export VERSION=3.5.0
#export VERSIONDATE=20191203
#export VERSION=3.5.1
#export VERSIONDATE=20200206
#export VERSION=3.5.2
#export VERSIONDATE=20200316
#export VERSION=3.6.0
#export VERSIONDATE=20200326
#export VERSION=3.6.1
#export VERSIONDATE=20200421
#export VERSION=3.7.0
#export VERSIONDATE=20200803
#export VERSION=3.7.1
#export VERSIONDATE=20201216
#export VERSION=4.0.0
#export VERSIONDATE=20170917
#export VERSION=4.0.1
#export VERSIONDATE=20171121
#export VERSION=4.0.2
#export VERSIONDATE=20171124
#export VERSION=4.0.3
#export VERSIONDATE=20180412
#export VERSION=4.0.4
#export VERSIONDATE=20180822
####cc1plus.exe: internal compiler error: Segmentation fault
#export VERSION=4.0.5
#export VERSIONDATE=20181214
#export VERSION=4.1.0
#export VERSIONDATE=20190801
#export VERSION=4.1.1
#export VERSIONDATE=20190909
#export VERSION=4.1.2
#export VERSIONDATE=20191031
#export VERSION=4.2.0
#export VERSIONDATE=20191203
#export VERSION=4.2.1
#export VERSIONDATE=20200206
#export VERSION=4.2.1
#export VERSIONDATE=20200316
#export VERSION=4.3.0
#export VERSIONDATE=20200326
#export VERSION=4.3.1
#export VERSIONDATE=20200421
#export VERSION=4.4.0
#export VERSIONDATE=20200803
#export VERSION=4.5.0
#export VERSIONDATE=20201216
#export VERSION=4.5.1
#export VERSIONDATE=20211008
#export VERSION=4.5.2
#export VERSIONDATE=20211215
#export VERSION=4.6.0
#export VERSIONDATE=20211215
#export VERSION=4.6.1
#export VERSIONDATE=20211224
#export VERSION=4.6.2
#export VERSIONDATE=20220216
#export VERSION=4.6.3
#export VERSIONDATE=20220310
#export VERSION=4.7.0
#export VERSIONDATE=20220312
####/include/boost/asio/detail/socket_types.hpp:24:4: error: #error WinSock.h has already been included
#export VERSION=4.7.1
#export VERSIONDATE=20220416
#export VERSION=4.7.2
#export VERSIONDATE=20220513
#export VERSION=4.7.3
#export VERSIONDATE=20220709
####cc1plus.exe: out of memory allocating 65536 bytes
#export VERSION=4.8.0
#export VERSIONDATE=20220709
#export VERSION=4.8.1
#export VERSIONDATE=20220923
#export VERSION=4.8.2
#export VERSIONDATE=20221105
#export VERSION=4.8.3
#export VERSIONDATE=20221223
export VERSION=4.9.0
export VERSIONDATE=20221223
wl-showstatus --package-version
#export DEPENDENCIES=zlib,libpng,pthreads,openssl,sqlite3,postgresql,mariadb-client,libharu,boost
export DEPENDENCIES=zlib,libpng,pthreads,openssl,sqlite3,postgresql,mariadb-client,ibpp,libharu,boost
#export DEPENDENCIES=zlib,libpng,pthreads,openssl,sqlite3,postgresql,mariadb-client,ibpp,libharu,boost,graphicsmagick
#export DEPENDENCIES=zlib,libpng,pthreads,openssl,sqlite3,postgresql,mariadb-client,ibpp,libharu,boost,skia
export OPTIONALDEPENDENCIES=qt
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=GPL
#export DOWNLOADURL="https://www.webtoolkit.eu/wt/download"
export DOWNLOADURL="https://github.com/emweb/wt/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/kdeforche/wt/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix redefinition of gmtime_r in src/http/Reply.C (version >= wt-3.3.6)
#patch -ulbf src/http/Reply.C << EOF
#--- src/http/Reply.C  2016-07-13 14:27:26.000000000 +0200
#+++ src/http/Reply.C  2016-11-30 17:15:24.426665100 +0100
#@@ -25,18 +25,2 @@
#
#-#ifdef WT_WIN32
#-// gmtime_r can be defined by mingw
#-#ifndef gmtime_r
#-static struct tm* gmtime_r(const time_t* t, struct tm* r)
#-{
#-  // gmtime is threadsafe in windows because it uses TLS
#-  struct tm *theTm = gmtime(t);
#-  if (theTm) {
#-    *r = *theTm;
#-    return r;
#-  } else {
#-    return 0;
#-  }
#-}
#-#endif // gmtime_r
#-#endif
#EOF
# fix redefinition of gmtime_r in src/http/Reply.C (version >= wt-3.3.7)
patch -ulbf src/http/Reply.C << EOF
--- src/http/Reply.C  2017-03-31 12:01:28.000000000 +0200
+++ src/http/Reply.C  2017-04-11 11:25:11.489910100 +0200
@@ -25,3 +25,3 @@

-#ifdef WT_WIN32
+#if defined(WT_WIN32) && !defined(__MINGW64_VERSION_MAJOR)
 // gmtime_r can be defined by mingw
EOF
# fix missing braces in src/Wt/Dbo/backend/MSSQLServer.C (version >= 4.0.0)
patch -ulbf src/Wt/Dbo/backend/MSSQLServer.C << EOF
@@ -186 +186 @@
-      SQLWCHAR wstr[] = L"";
+      SQLWCHAR wstr[] = {0};
@@ -935 +935 @@
-    SQLWCHAR wstr[] = L"";
+    SQLWCHAR wstr[] = {0};
EOF
# fix missing gmtime_r in src/http/Reply.C (version >= 4.2.1)
mv src/http/Reply.C src/http/Reply.C.bak &&
echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > src/http/Reply.C &&
cat src/http/Reply.C.bak >> src/http/Reply.C
# fix error WinSock.h has already been included in src/Wt/WEnvironment.C (version >= 4.3.0)
mv src/Wt/WEnvironment.C src/Wt/WEnvironment.C.bak &&
echo "#include <boost/asio.hpp>" > src/Wt/WEnvironment.C &&
cat src/Wt/WEnvironment.C.bak >> src/Wt/WEnvironment.C
# fix error WinSock.h has already been included in src/http/Request.C (version >= 4.3.0)
mv src/http/Request.C src/http/Request.C.bak &&
echo "#include <boost/asio.hpp>" > src/http/Request.C &&
cat src/http/Request.C.bak >> src/http/Request.C
# fix for GCC 11 in src/Wt/Render/WTextRenderer.C (version >= 4.5.0)
mv src/Wt/Render/WTextRenderer.C src/Wt/Render/WTextRenderer.C.bak &&
echo "#include <limits>" > src/Wt/Render/WTextRenderer.C &&
cat src/Wt/Render/WTextRenderer.C.bak >> src/Wt/Render/WTextRenderer.C
# fix missing BOOST_FOREACH in src/Wt/Render/CssParser.C (version >= 4.5.0)
mv src/Wt/Render/CssParser.C src/Wt/Render/CssParser.C.bak &&
echo "#include <boost/foreach.hpp>" > src/Wt/Render/CssParser.C &&
cat src/Wt/Render/CssParser.C.bak >> src/Wt/Render/CssParser.C
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED_LIBS:BOOL=OFF -DBUILD_EXAMPLES:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive" -S. -Bbuild_static &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED_LIBS:BOOL=OFF -DUSE_SYSTEM_IBPP:BOOL=ON -DUSE_SYSTEM_SQLITE3:BOOL=ON -DZLIB_PREFIX:PATH=$MINGWPREFIX -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive" -S. -Bbuild_static &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED_LIBS:BOOL=OFF -DHARU_DYNAMIC:BOOL=OFF -DBOOST_DYNAMIC:BOOL=OFF -DBoost_USE_STATIC_RUNTIME:BOOL=ON -DBoost_USE_STATIC_LIBS:BOOL=ON -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=ON -DUSE_SYSTEM_IBPP:BOOL=ON -DUSE_SYSTEM_SQLITE3:BOOL=ON -DMYSQL_PREFIX:PATH=$MINGWPREFIX -DMYSQL_LIBRARY:STRING=mariadbclient -DZLIB_PREFIX:PATH=$MINGWPREFIX -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive" -S. -Bbuild_static &&
# wl-showstatus configure &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED_LIBS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive" -S. -Bbuild_shared &&
# #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED_LIBS:BOOL=ON -DUSE_SYSTEM_IBPP:BOOL=ON -DUSE_SYSTEM_SQLITE3:BOOL=ON -DZLIB_PREFIX:PATH=$MINGWPREFIX -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive" -S. -Bbuild_shared &&
# PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED_LIBS:BOOL=ON -DHARU_DYNAMIC:BOOL=ON -DBOOST_DYNAMIC:BOOL=ON -DBoost_USE_STATIC_RUNTIME:BOOL=OFF -DBoost_USE_STATIC_LIBS:BOOL=OFF -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=ON -DUSE_SYSTEM_IBPP:BOOL=ON -DUSE_SYSTEM_SQLITE3:BOOL=ON -DMYSQL_PREFIX:PATH=$MINGWPREFIX -DMYSQL_LIBRARY:STRING=mariadbclient -DZLIB_PREFIX:PATH=$MINGWPREFIX -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive" -S. -Bbuild_shared &&
# #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED_LIBS:BOOL=ON -DHARU_DYNAMIC:BOOL=ON -DBOOST_DYNAMIC:BOOL=ON -DBoost_USE_STATIC_RUNTIME:BOOL=OFF -DBoost_USE_STATIC_LIBS:BOOL=OFF -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=ON -DUSE_SYSTEM_IBPP:BOOL=ON -DUSE_SYSTEM_SQLITE3:BOOL=ON -DMYSQL_PREFIX:PATH=$MINGWPREFIX -DMYSQL_LIBRARY:STRING=mariadbclient -DZLIB_PREFIX:PATH=$MINGWPREFIX -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive -DHPDF_DLL" -S. -Bbuild_shared &&
# echo "-Wl,--as-needed -lws2_32 -lz -lssleay32 -leay32" >> build_shared/src/Wt/Dbo/backend/CMakeFiles/wtdbomysql.dir/linklibs.rsp &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 #PKG_CONFIG= PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DHARU_DYNAMIC:BOOL=OFF -DBOOST_DYNAMIC:BOOL=OFF -DBoost_USE_STATIC_RUNTIME:BOOL=ON -DBoost_USE_STATIC_LIBS:BOOL=ON -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=ON -DUSE_SYSTEM_IBPP:BOOL=ON -DUSE_SYSTEM_SQLITE3:BOOL=ON -DMYSQL_PREFIX:PATH=$MINGWPREFIX -DMYSQL_LIBRARY:STRING=mariadbclient -DZLIB_PREFIX:PATH=$MINGWPREFIX -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive" -S. -Bbuild_static &&
 ##-DWT_WRASTERIMAGE_IMPLEMENTATION:STRING=GraphicsMagick -DGM_PREFIX:PATH=$MINGWPREFIX
 PATH=$PATH:$MINGWPREFIX/qt/bin PKG_CONFIG= QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED_LIBS:BOOL=OFF -DHARU_DYNAMIC:BOOL=OFF -DBOOST_DYNAMIC:BOOL=OFF -DBoost_USE_STATIC_RUNTIME:BOOL=ON -DBoost_USE_STATIC_LIBS:BOOL=ON -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=ON -DUSE_SYSTEM_IBPP:BOOL=ON -DUSE_SYSTEM_SQLITE3:BOOL=ON -DMYSQL_PREFIX:PATH=$MINGWPREFIX -DMYSQL_LIBRARY:STRING=mariadbclient -DZLIB_PREFIX:PATH=$MINGWPREFIX -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive" -S. -Bbuild_static &&
 #-DSKIA_PREFIX:PATH=$MINGWPREFIX -DSKIA_BASE_INCLUDE_DIR:PATH=$MINGWPREFIX/include/skia 
 wl-showstatus configure &&
 #PKG_CONFIG= PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DHARU_DYNAMIC:BOOL=ON -DBOOST_DYNAMIC:BOOL=ON -DBoost_USE_STATIC_RUNTIME:BOOL=OFF -DBoost_USE_STATIC_LIBS:BOOL=OFF -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=ON -DUSE_SYSTEM_IBPP:BOOL=ON -DUSE_SYSTEM_SQLITE3:BOOL=ON -DMYSQL_PREFIX:PATH=$MINGWPREFIX -DMYSQL_LIBRARY:STRING=mariadbclient -DZLIB_PREFIX:PATH=$MINGWPREFIX -DGM_PREFIX:PATH=$MINGWPREFIX -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive" -S. -Bbuild_shared &&
 PATH=$PATH:$MINGWPREFIX/qt/bin PKG_CONFIG= QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSHARED_LIBS:BOOL=ON -DHARU_DYNAMIC:BOOL=ON -DBOOST_DYNAMIC:BOOL=ON -DBoost_USE_STATIC_RUNTIME:BOOL=OFF -DBoost_USE_STATIC_LIBS:BOOL=OFF -DENABLE_QT4:BOOL=OFF -DENABLE_QT5:BOOL=ON -DUSE_SYSTEM_IBPP:BOOL=ON -DUSE_SYSTEM_SQLITE3:BOOL=ON -DMYSQL_PREFIX:PATH=$MINGWPREFIX -DMYSQL_LIBRARY:STRING=mariadbclient -DZLIB_PREFIX:PATH=$MINGWPREFIX -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DCMAKE_CXX_FLAGS="-fpermissive" -S. -Bbuild_shared &&
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*-ladvapi32/& -Wl,--as-needed -lws2_32 -lz -lssleay32 -leay32/" build_shared/build.ninja &&
 wl-showstatus build &&
 ( ninja -Cbuild_static || ninja -Cbuild_static -j1 ) &&
 wl-showstatus build &&
 ( ninja -Cbuild_shared || ninja -Cbuild_shared -j1 ) &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####TO DO: Make shared MySQL use DLLs



