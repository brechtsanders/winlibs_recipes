#export NAME="unrar"
#export STATUS=
#export URL=http://home.gna.org/unrar/
#export BASENAME=unrar
#export DESCRIPTION="unrar is a free software version of the non-free unrar utility that exists on many GNU/Linux systems today."
#export CATEGORY=compression
#export TYPE=application
#export VERSION=0.0.1
#export VERSIONDATE=20161219
#####src/unrar.c:132: undefined reference to `localtime_r'
#wl-showstatus --package-version
#export DEPENDANCIES=unrarlib
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
##export DOWNLOADURL="http://download.gna.org/unrar/"
#export DOWNLOADURL=
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://download.gna.org/unrar/$BASENAME-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#cd $BASENAME-$VERSION
#mv src/unrar.c src/unrar.c.bak &&
#sed -e "s/\(mkdir([^,]*\),[^)]*)/\1)/g" src/unrar.c.bak > src/unrar.c
#wl-showstatus configure &&
##./autogen.sh &&
##    echo OK
### fix building DLLs on 64-bit
##if ( echo $RUNPLATFORM | grep -q x86_64 ); then
## echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
## autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
##fi
##INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
##PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
##PYTHON=$PYDIR/python.exe 
##PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
# ## fix building DLLs
# #mv libtool libtool.bak &&
# #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
# #wl-showstatus build &&
# #make &&
# wl-showstatus build-install &&
# make install-strip &&
#    ls -l $INSTALLPREFIX/lib/pkgconfig $INSTALLPREFIX/share/pkgconfig
#    make install-pkgconfigDATA
##mkdir -p build_test; cd build_test; cmake.exe -G"MSYS Makefiles" . -LH && echo OK; cd ..; rm -rf build_test
##rm -f CMakeCache.txt; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
##export BUILDDEPENDANCIES=cmake
##wl-showstatus configure &&
##cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . &&
## wl-showstatus build-install &&
## make install/strip &&
##    echo OK
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#export NAME="unrarsrc"
#export STATUS=
#export URL=http://www.rarlabs.com/
#export BASENAME=unrarsrc
#export DESCRIPTION="original unrar source code"
#export CATEGORY=
#export TYPE=library
##export VERSION=5.4.5
##export VERSIONDATE=20161219
#####log.cpp:30:40: error: cannot convert 'wchar* {aka wchar_t*}' to 'char*' for argument '3' to 'int vswprintf(wchar_t*, const wchar_t*, char*)'
##export VERSION=5.5.1
##export VERSIONDATE=20170413
##export VERSION=5.5.2
##export VERSIONDATE=20170419
##export VERSION=5.5.3
##export VERSIONDATE=20170429
##export VERSION=5.5.4
##export VERSIONDATE=20170610
##export VERSION=5.5.5
##export VERSIONDATE=20170616
##export VERSION=5.5.6
##export VERSIONDATE=20170702
#####cmddata.cpp:1298:19: error: variable 'CmdAdd Add' has initializer but incomplete type
#####log.cpp:30:40: error: cannot convert 'wchar* {aka wchar_t*}' to 'char*' for argument '3' to 'int vswprintf(wchar_t*, const wchar_t*, char*)'
##export VERSION=5.5.7
##export VERSIONDATE=20170725
##export VERSION=5.5.8
##export VERSIONDATE=20170815
##export VERSION=5.6.1
##export VERSIONDATE=20180311
##export VERSION=5.6.2
##export VERSIONDATE=20180331
##export VERSION=5.6.3
##export VERSIONDATE=20180421
##export VERSION=5.6.4
##export VERSIONDATE=20180514
##export VERSION=5.6.5
##export VERSIONDATE=20180626
##export VERSION=5.6.6
##export VERSIONDATE=20180904
##export VERSION=5.6.7
##export VERSIONDATE=20181001
##export VERSION=5.6.8
##export VERSIONDATE=20181004
##export VERSION=5.7.1
##export VERSIONDATE=20190128
##export VERSION=5.7.2
##export VERSIONDATE=20190221
##export VERSION=5.7.3
##export VERSIONDATE=20190226
##export VERSION=5.7.4
##export VERSIONDATE=20190402
##export VERSION=5.7.5
##export VERSIONDATE=20190429
##export VERSION=5.8.1
##export VERSIONDATE=20190830
##export VERSION=5.8.2
##export VERSIONDATE=20190927
##export VERSION=5.8.3
##export VERSIONDATE=20191020
##export VERSION=5.8.4
##export VERSIONDATE=20191117
##export VERSION=5.8.5
##export VERSIONDATE=20191211
##export VERSION=5.9.1
##export VERSIONDATE=20200129
##export VERSION=5.9.2
##export VERSIONDATE=20200330
#####system.o:system.cpp:(.text+0x28f): undefined reference to `SetSuspendState'
#####system.o:system.cpp:(.text+0x2aa): undefined reference to `SetSuspendState'
##export VERSION=5.9.3
##export VERSIONDATE=20200604
#export VERSION=5.9.4
#export VERSIONDATE=20200629
#wl-showstatus --package-version
#export DEPENDANCIES=
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=
#export LICENSEFILE=
#export LICENSETYPE=Commercial
#export DOWNLOADURL="ftp://ftp.rarlabs.com/rar/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=ftp://ftp.rarlabs.com/rar/unrarsrc-$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#mkdir -p $BASENAME-$VERSION
#tar xfz $TARBALLDIR/$BASENAME/unrarsrc-$VERSION.tar.gz -C$BASENAME-$VERSION
#cd $BASENAME-$VERSION/unrar
### define missing strnlen in strfn.cpp (32-bit only) (version <= 5.4.5)
##if ( echo $RUNPLATFORM | grep -qv x86_64 ) && ( ! gcc --version | grep -q "MinGW-W64" ); then
##mv strfn.cpp strfn.cpp.bak
##cat > strfn.cpp << EOF
###include <stdlib.h>
##inline int strnlen (const char *str, size_t maxlen)
##{
## int l = 0;
## if (str)
##  while (l < maxlen && str[l])
##   l++;
## return l;
##}
##EOF
##cat strfn.cpp.bak >> strfn.cpp
##fi
## fix missing tabs in makefile (version >= 5.5.4)
#mv makefile makefile.bak &&
#sed -e "s/^  */\t/" makefile.bak > makefile
### fix makefile for building DLL (version <= 5.5.8)
##sed -e "s/\$(LINK) -shared -o libunrar.so \$(LDFLAGS)\(.*\)$/ar cru libunrar.a \1 \&\& g++ -shared -s -mwindows -def dll.def -o unrar.dll \1 -Wl,--out-implib,libunrar.dll.a/" makefile > makefile.mingw
### fix makefile for building DLL (version >= 5.6.1 <= 5.6.5)
##sed -e "s/\$(LINK) -shared -o libunrar.so \$(LDFLAGS)\(.*\)$/ar cru libunrar.a \1 \&\& g++ -shared -s -mwindows -def dll.def -o unrar.dll \1 -Wl,--out-implib,libunrar.dll.a -Wl,--as-needed -lpowrprof/" makefile > makefile.mingw
## fix makefile for building DLL (version >= 5.6.6)
#sed -e "s/\$(LINK) -shared -o libunrar.so \$(LDFLAGS)\(.*\)$/ar cru libunrar.a \1 \&\& g++ -shared -s -mwindows -def dll.def -o unrar.dll \1 -Wl,--out-implib,libunrar.dll.a -Wl,--as-needed -lpowrprof -Wl,--allow-multiple-definition/" makefile > makefile.mingw
#wl-showstatus build &&
# #make -j1 STRIP= &&
# make -j1 STRIP= LIBS="-Wl,--as-needed -lpowrprof" &&
# #make -j1 STRIP= CXXFLAGS="-O3 -fpermissive" &&
# strip unrar.exe &&
# #make -j1 -fmakefile.mingw lib &&
# make -j1 -fmakefile.mingw lib CXXFLAGS="-DUNRAR" &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/include $INSTALLPREFIX/lib $INSTALLPREFIX/bin &&
# cp -f dll.hpp $INSTALLPREFIX/include/unrar.h &&
# cp -f *.a $INSTALLPREFIX/lib/ &&
# cp -f *.dll $INSTALLPREFIX/bin/ &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="unrar"
export STATUS=
export URL=https://www.rarlab.com/
export BASENAME=unrar
export DESCRIPTION="WinRAR is a powerful archive manager. It can backup your data and reduce the size of email attachments, open and unpack RAR, ZIP and other files downloaded from Internet, create new archives in RAR and ZIP file format."
export CATEGORY=compression
export TYPE=application,library
#export VERSION=5.9.4
#export VERSIONDATE=20200904
#export VERSION=6.0.1
#export VERSIONDATE=20201022
#export VERSION=6.0.2
#export VERSIONDATE=20201113
#export VERSION=6.0.3
#export VERSIONDATE=20201207
#export VERSION=6.0.4
#export VERSIONDATE=20210306
#export VERSION=6.0.5
#export VERSIONDATE=20210412
#export VERSION=6.0.6
#export VERSIONDATE=20210517
#export VERSION=6.0.7
#export VERSIONDATE=20210614
#export VERSION=6.1.2
#export VERSIONDATE=20211115
#export VERSION=6.1.3
#export VERSIONDATE=20211210
#export VERSION=6.1.4
#export VERSIONDATE=20220124
#export VERSION=6.1.5
#export VERSIONDATE=20220222
#export VERSION=6.1.6
#export VERSIONDATE=20220304
#export VERSION=6.1.7
#export VERSIONDATE=20220506
#export VERSION=6.2.1
#export VERSIONDATE=20221026
export VERSION=6.2.2
export VERSIONDATE=20221112
wl-showstatus --package-version
export DEPENDANCIES=
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=license.txt
export LICENSETYPE=Freeware
export DOWNLOADURL="https://www.rarlab.com/rar_add.htm unrarsrc-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://www.rarlab.com/rar/unrarsrc-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
mkdir -p $BASENAME-$VERSION
tar xfz $TARBALLDIR/$BASENAME/unrarsrc-$VERSION.tar.gz -C$BASENAME-$VERSION
cd $BASENAME-$VERSION/unrar
# fix missing ConvertStringToBSTR in isnt.cpp (version >= 6.1.5)
#patch -ulbf isnt.cpp << EOF
#@@ -61,4 +61,13 @@
#   IEnumWbemClassObject *pEnumerator = NULL;
#-  hres = pSvc->ExecQuery(_bstr_t(L"WQL"), _bstr_t(L"SELECT * FROM Win32_OperatingSystem"),
#+#ifdef __MINGW32__
#+  BSTR bstr_wql = SysAllocString(L"WQL");
#+  BSTR bstr_sql = SysAllocString(L"SELECT * FROM Win32_OperatingSystem");
#+  hres = pSvc->ExecQuery(bstr_wql, bstr_sql,
#          WBEM_FLAG_FORWARD_ONLY | WBEM_FLAG_RETURN_IMMEDIATELY, NULL, &pEnumerator);
#+  SysFreeString(bstr_wql);
#+  SysFreeString(bstr_sql);
#+#else
#+  hres = pSvc->ExecQuery(bstr_t("WQL"), bstr_t("SELECT * FROM Win32_OperatingSystem"),
#+         WBEM_FLAG_FORWARD_ONLY | WBEM_FLAG_RETURN_IMMEDIATELY, NULL, &pEnumerator);
#+#endif
#
#EOF
patch -ulbf isnt.cpp << EOF
@@ -61,3 +61,3 @@
   IEnumWbemClassObject *pEnumerator = NULL;
-  hres = pSvc->ExecQuery(bstr_t("WQL"), bstr_t("SELECT * FROM Win32_OperatingSystem"),
+  hres = pSvc->ExecQuery(_bstr_t(L"WQL"), _bstr_t(L"SELECT * FROM Win32_OperatingSystem"),
          WBEM_FLAG_FORWARD_ONLY | WBEM_FLAG_RETURN_IMMEDIATELY, NULL, &pEnumerator);
EOF
sed -e "s/\(\$(LINK).*-shared\b.*\) -o lib\([^ ]*\)\.so\b\(.*\)$/\1 -s -mwindows -o \2.dll -def dll.def -Wl,--out-implib,lib\2.dll.a\3 -lpowrprof/; s/\(\$(LINK).*-o unrar\)\( .*\)/\1.exe\2 -s -Wl,--as-needed -lpowrprof/; s/\$(STRIP) unrar$/&.exe/; s/\.so/.dll/; s/^\(\s*install libunrar\)\(\.a\s.*\)$/&\n\1.dll\2/; s/^\(\s*install \)lib\([^ ]*\.dll .*\)\/lib$/\1\2\/bin/" makefile > Makefile.mingw
# fix missing WinNT() and missing dependencies (version >= 6.1.5)
sed -i.bak -e "s/ pathfn\.o/& isnt.o/; s/-lpowrprof/& -Wl,--as-needed -lwbemuuid -lole32 -loleaut32/" Makefile.mingw
wl-showstatus build-install &&
 mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/include $INSTALLPREFIX/lib &&
 #( make -fMakefile.mingw sfx || make -fMakefile.mingw sfx ) &&
 #make -fMakefile.mingw clean &&
 ( make -fMakefile.mingw || make -fMakefile.mingw ) &&
 make -fMakefile.mingw install DESTDIR=$INSTALLPREFIX &&
 #( make -fMakefile.mingw LIBS="-lwbemuuid -lole32 -loleaut32" || make -j1 -fMakefile.mingw LIBS="-lwbemuuid -lole32 -loleaut32" ) &&
 #make -fMakefile.mingw install DESTDIR=$INSTALLPREFIX LIBS="-lwbemuuid -lole32 -loleaut32" &&
 make -fMakefile.mingw clean &&
 ( make -fMakefile.mingw lib || make -fMakefile.mingw lib ) &&
 make -fMakefile.mingw install-lib DESTDIR=$INSTALLPREFIX &&
 #( make -fMakefile.mingw lib LIBS="-lwbemuuid -lole32 -loleaut32" || make -j1 -fMakefile.mingw lib LIBS="-lwbemuuid -lole32 -loleaut32" ) &&
 #make -fMakefile.mingw install-lib DESTDIR=$INSTALLPREFIX LIBS="-lwbemuuid -lole32 -loleaut32" &&
 #make -fMakefile.mingw clean &&
 cp -f dll.hpp $INSTALLPREFIX/include/unrar.hpp &&
 cp -f dll.def $INSTALLPREFIX/lib/unrar.def &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd ../.. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



