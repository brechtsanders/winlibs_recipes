export NAME="PCSC-Lite"
export STATUS=
#export URL=http://pcsclite.alioth.debian.org/
#export URL=http://alioth.debian.org/projects/pcsclite/
export URL=https://pcsclite.apdu.fr/
export BASENAME=pcsclite
export DESCRIPTION="Middleware to access a smart card using SCard API (PC/SC)."
export CATEGORY=security,hardware
export TYPE=library
#export VERSION=1.6.6
#export VERSIONDATE=20110221
#export VERSION=1.6.7
#export VERSIONDATE=20110504
#export VERSION=1.8.1
#export VERSIONDATE=20111214
#export VERSION=1.8.2
#export VERSIONDATE=20120118
#export VERSION=1.8.3
#export VERSIONDATE=20120330
#export VERSION=1.8.4
#export VERSIONDATE=20120627
#export VERSION=1.8.5
#export VERSIONDATE=20120805
#export VERSION=1.8.6
#export VERSIONDATE=20120831
####winscard_clnt.c:85:20: error: sys/un.h: No such file or directory
####winscard_clnt.c:90:22: error: sys/wait.h: No such file or directory
####sys_generic.h:21:22: error: sys/mman.h: No such file or directory
####winscard_clnt.c:415: warning: implicit declaration of function 'fork'
####winscard_clnt.c:432: warning: implicit declaration of function 'sysconf'
####utils.h:26:45: warning: 'struct timeval' declared inside parameter list [enabled by default]
#export VERSION=1.8.7
#export VERSIONDATE=20121129
####src/utils.c:69: error: 'SIGUSR1' undeclared (first use in this function)
#export VERSION=1.8.8
#export VERSIONDATE=20130116
#export VERSION=1.8.9
#export VERSIONDATE=20131016
#export VERSION=1.8.10
#export VERSIONDATE=20131020
#export VERSION=1.8.11
#export VERSIONDATE=20140215
#export VERSION=1.8.12
#export VERSIONDATE=20140924
#export VERSION=1.8.13
#export VERSIONDATE=20141108
#export VERSION=1.8.14
#export VERSIONDATE=20150811
#export VERSION=1.8.15
#export VERSIONDATE=20151226
#export VERSION=1.8.16
#export VERSIONDATE=20160405
#export VERSION=1.8.17
#export VERSIONDATE=20160530
#export VERSION=1.8.18
#export VERSIONDATE=20160811
#export VERSION=1.8.19
#export VERSIONDATE=20161209
#export VERSION=1.8.20
#export VERSIONDATE=20161231
#export VERSION=1.8.21
#export VERSIONDATE=20170521
#export VERSION=1.8.22
#export VERSIONDATE=20170617
#export VERSION=1.8.23
#export VERSIONDATE=20171219
####src/readerfactory.h:38:3: error: expected specifier-qualifier-list before 'RESPONSECODE'
#export VERSION=1.8.25
#export VERSIONDATE=20200407
#export VERSION=1.8.26
#export VERSIONDATE=20200409
#export VERSION=1.9.0
#export VERSIONDATE=20200614
#export VERSION=1.9.1
#export VERSIONDATE=20210217
#export VERSION=1.9.2
#export VERSIONDATE=20210804
#export VERSION=1.9.3
#export VERSIONDATE=20210807
#export VERSION=1.9.4
#export VERSIONDATE=20211002
#export VERSION=1.9.5
#export VERSIONDATE=20211204
#export VERSION=1.9.6
#export VERSIONDATE=20220512
#export VERSION=1.9.8
#export VERSIONDATE=20220611
#export VERSION=1.9.9
#export VERSIONDATE=20220912
#export VERSION=2.0.0
#export VERSIONDATE=20230610
#export VERSION=2.0.1
#export VERSIONDATE=20231125
#export VERSION=2.0.2
#export VERSIONDATE=20240303
#export VERSION=2.0.3
#export VERSIONDATE=20240304
export VERSION=2.1.0
export VERSIONDATE=20240412
wl-showstatus --package-version
export DEPENDENCIES=libdl,pthreads
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=
#export DOWNLOADURL="http://alioth.debian.org/frs/?group_id=30105 pcsc-lite-"
export DOWNLOADURL="https://pcsclite.apdu.fr/files/ pcsc-lite-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
wl-wait4deps
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/3479/pcsc-lite-1.6.6.tar.bz2
#export DOWNLOADSOURCEURL=http://alioth.debian.org/frs/download.php/3687/pcsc-lite-1.8.1.tar.bz2
#export DOWNLOADSOURCEURL=http://alioth.debian.org/frs/download.php/3695/pcsc-lite-1.8.2.tar.bz2
#export DOWNLOADSOURCEURL=http://alioth.debian.org/frs/download.php/3706/pcsc-lite-1.8.3.tar.bz2
#export DOWNLOADSOURCEURL=http://alioth.debian.org/frs/download.php/3734/pcsc-lite-1.8.4.tar.bz2
#export DOWNLOADSOURCEURL=http://alioth.debian.org/frs/download.php/3741/pcsc-lite-1.8.5.tar.bz2
#export DOWNLOADSOURCEURL=http://alioth.debian.org/frs/download.php/3757/pcsc-lite-1.8.6.tar.bz2
#export DOWNLOADSOURCEURL=http://alioth.debian.org/frs/download.php/3842/pcsc-lite-1.8.7.tar.bz2
#export DOWNLOADSOURCEURL=http://alioth.debian.org/frs/download.php/3862/pcsc-lite-1.8.8.tar.bz2
#export DOWNLOADSOURCEURL=http://alioth.debian.org/frs/download.php/file/3961/pcsc-lite-1.8.9.tar.bz2
#export DOWNLOADSOURCEURL=http://alioth.debian.org/frs/download.php/file/3963/pcsc-lite-1.8.10.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/3991/pcsc-lite-1.8.11.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4115/pcsc-lite-1.8.12.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4126/pcsc-lite-1.8.13.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4138/pcsc-lite-1.8.14.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4157/pcsc-lite-1.8.15.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4164/pcsc-lite-1.8.16.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4173/pcsc-lite-1.8.17.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4179/pcsc-lite-1.8.18.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4198/pcsc-lite-1.8.19.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4203/pcsc-lite-1.8.20.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4216/pcsc-lite-1.8.21.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4225/pcsc-lite-1.8.22.tar.bz2
#export DOWNLOADSOURCEURL=https://alioth.debian.org/frs/download.php/file/4235/pcsc-lite-1.8.23.tar.bz2
export DOWNLOADSOURCEURL=https://pcsclite.apdu.fr/files/pcsc-lite-$VERSION.tar.bz2
#export DOWNLOADSOURCEURL=https://pcsclite.apdu.fr/files/pcsc-lite-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
tar xj --force-local -f $TARBALLDIR/$BASENAME/pcsc-lite-$VERSION.tar.bz2
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/pcsc-lite-$VERSION.tar.xz
cd pcsc-lite-$VERSION
## fix missing files
#mkdir -p sys
#cat > sys/socket.h << EOF
##include <winsock2.h>
#struct sockaddr_un
#{
#  short          sun_family;
#  unsigned short sun_port;
#  struct         in_addr sun_addr;
#  char           sun_path[108-2-4]; 
#};
#EOF
#touch sys/mman.h sys/un.h sys/wait.h sys/ioctl.h
# fix missing files
mkdir -p winfix/sys winfix/netinet winfix/arpa
cat > winfix/sys/socket.h << EOF
#include <winsock2.h>
struct sockaddr_un
{
  short          sun_family;
  unsigned short sun_port;
  struct         in_addr sun_addr;
  char           sun_path[108-2-4]; 
};
EOF
touch winfix/sys/mman.h winfix/sys/un.h winfix/sys/wait.h winfix/sys/ioctl.h winfix/ifdhandler.h winfix/netinet/in.h winfix/arpa/inet.h winfix/poll.h
#ls src/ifdhandler.h &> /dev/null || echo '#include "PCSC/ifdhandler.h"' > src/ifdhandler.h
#ls src/PCSC/pcsclite.h &> /dev/null || echo '#include "../ifdhandler.h"' > src/PCSC/pcsclite.h
# fix src/simclist.c (version >= 1.8.5)
patch -ulbf src/simclist.c << EOF
--- src/simclist.c  2011-10-22 10:30:38 +0200
+++ src/simclist.c  2012-08-05 09:45:14 +0200
@@ -27,3 +27,6 @@
 #include <sys/types.h>
-#ifndef _WIN32
+#ifdef _WIN32
+#   include <windows.h>
+#   include <winsock2.h>
+#else
     /* not in Windows! */
EOF
# fix missing struct timeval in src/simclist.h (version >= 1.8.8)
mv src/simclist.h src/simclist.h.bak
echo "#include <winsock2.h>" > src/simclist.h
cat src/simclist.h.bak >> src/simclist.h
# fix src/utils.c (version >= 1.8.8)
mv src/utils.c src/utils.c.bak
cat > src/utils.c << EOF
#include <winsock2.h>
#if defined(__MINGW64_VERSION_MAJOR)
#define sleep(t) _sleep((t) * 1000)
#endif
#define kill(pid,sig) 0
#define SIGUSR1 30
EOF
cat src/utils.c.bak >> src/utils.c
# fix src/PCSC/wintypes.h (version >= 1.8.8)
mv src/PCSC/wintypes.h src/PCSC/wintypes.h.bak
sed -e "s?\(typedef short BOOL;\)?//\1?" src/PCSC/wintypes.h.bak > src/PCSC/wintypes.h
# fix missing sleep in src/sys_unix.c (version >= 1.8.8)
mv src/sys_unix.c src/sys_unix.c.bak
cat > src/sys_unix.c << EOF
#include <winsock2.h>
#if defined(__MINGW64_VERSION_MAJOR)
#define sleep(t) (_sleep((t) * 1000), 0)
#endif
EOF
cat src/sys_unix.c.bak >> src/sys_unix.c
# fix missing srand48/lrand48 in src/sys_unix.c (version >= 1.9.8)
mv src/sys_unix.c src/sys_unix.c.bak2
cat > src/sys_unix.c << EOF
#define srand48(x) srand(x)
#define lrand48 rand
EOF
cat src/sys_unix.c.bak2 >> src/sys_unix.c
# fix src/winscard_msg.c (version >= 1.8.8)
patch -ulbf src/winscard_msg.c << EOF
--- src/winscard_msg.c  2012-08-25 16:29:44 +0200
+++ src/winscard_msg.c  2013-01-16 22:18:48 +0100
@@ -116,4 +116,8 @@
        }

+#ifdef _WIN32
+       unsigned long flags = 1;
+       if (ioctlsocket(*pdwClientID, FIONBIO, &flags) != 0)
+#else
        ret = fcntl(*pdwClientID, F_GETFL, 0);
        if (ret < 0)
@@ -126,4 +130,5 @@

        if (fcntl(*pdwClientID, F_SETFL, ret | O_NONBLOCK) < 0)
+#endif
        {
                Log3(PCSC_LOG_CRITICAL, "Error: cannot set socket %s nonblocking: %s",
EOF
# fix src/winscard_msg.c (version >= 1.8.26)
mv src/winscard_msg.c src/winscard_msg.c.bak
cat > src/winscard_msg.c << EOF
#if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600
#undef _WIN32_WINNT
#define _WIN32_WINNT 0x0600
#endif
#include <winsock2.h>
#define poll WSAPoll
EOF
cat src/winscard_msg.c.bak >> src/winscard_msg.c
# fix src/winscard_clnt.c (version >= 1.8.8)
mv src/winscard_clnt.c src/winscard_clnt.c.bak
echo "#define pthread_atfork(a,b,c)" > src/winscard_clnt.c
cat src/winscard_clnt.c.bak >> src/winscard_clnt.c
# fix src/PCSC/pcsclite.h.in (version >= 1.8.8)
mv src/PCSC/pcsclite.h.in src/PCSC/pcsclite.h.in.bak
sed -e 's/\(#include \)<\(wintypes.h\)>/\1"\2"/' src/PCSC/pcsclite.h.in.bak > src/PCSC/pcsclite.h.in
# fix missing RESPONSECODE in src/pcsc-wirecheck-gen.c (version >= 1.8.10)
mv src/pcsc-wirecheck-gen.c src/pcsc-wirecheck-gen.c.bak
cat > src/pcsc-wirecheck-gen.c << EOF
#ifndef RESPONSECODE_DEFINED_IN_WINTYPES_H
typedef long RESPONSECODE;
#endif
EOF
cat src/pcsc-wirecheck-gen.c.bak >> src/pcsc-wirecheck-gen.c
# fix missing DT_REG in src/configfile.c
patch -ulbf src/configfile.c << EOF
--- src/configfile.c  2013-10-16 16:28:20 +0200
+++ src/configfile.c  2013-11-19 11:21:40 +0100
@@ -1986,4 +1986,5 @@
                        int r;

+#ifdef DT_REG
                        /* skip non regular files */
                        if (direntry->d_type != DT_REG)
@@ -1993,4 +1994,5 @@
                                continue;
                        }
+#endif

                        /* skip files starting with . like ., .., .svn, etc */
EOF
# fix undefined reference to pcsc_stringify_error (version >= 2.1.0)
sed -i.bak -e "s?^am_libpcscspy_la_OBJECTS *=.*?& ../error.lo?" src/spy/Makefile.in
## fix missing files
#mkdir libusb-1.0; cp $MINGWPREFIX/include/usb.h libusb-1.0/libusb.h
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-libhal --disable-libusb CFLAGS="-I`pwd`/winfix -I`pwd`/src -I`pwd`/src/PCSC" LDFLAGS="-Wl,--as-needed -lws2_32 -lwinmm -lpthread" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-embedded --disable-libusb CFLAGS="-I`pwd`/winfix -I`pwd`/src -I`pwd`/src/PCSC" LDFLAGS="-Wl,--as-needed -lws2_32 -lwinmm -lpthread" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-embedded --disable-libusb CFLAGS="-I`pwd`/winfix -I`pwd`/src -I`pwd`/src/PCSC" LDFLAGS="-Wl,--as-needed -lws2_32 -lwinmm -lpthread -Wl,--enable-stdcall-fixup" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-embedded --disable-libusb --disable-libsystemd CFLAGS="-I`pwd`/winfix -I`pwd`/src -I`pwd`/src/PCSC" LDFLAGS="-Wl,--as-needed -lws2_32 -lwinmm -lpthread -Wl,--enable-stdcall-fixup" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-embedded --disable-libusb --disable-libsystemd CFLAGS="-I$PWD/winfix -I$PWD/src -I$PWD/src/PCSC -I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -lws2_32 -lwinmm -lpthread -Wl,--enable-stdcall-fixup" &&
 wl-showstatus build-install &&
 # fix building DLLs
 sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ( make install-strip || (
  make -Csrc libpcsclite.la &&
  make -Csrc/spy libpcscspy.la &&
  make -i install-strip
 )) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf pcsc-lite-$VERSION



##export DEPENDENCIES=mman-win32
##export BUILDDEPENDENCIES=meson,ninja
## remove extra file: meson.options (version >= 2.2.1)
#####meson.build:12:0: ERROR: meson.options and meson_options.txt both exist, but are not the same file.
#mv -f meson.options meson.options.bak
#mkdir -p build_both &&
# wl-showstatus configure &&
# PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dpolkit=true -Dlibusb=true -Dlibudev=false -Dlibsystemd=false -Dc_args="-I$(cygpath -m $PWD/winfix) -I$(cygpath -m $PWD/src) -I$(cygpath -m $PWD/src/PCSC) -I$(cygpath -m $MINGWPREFIX/include/libdl-win32) -I$(cygpath -m $MINGWPREFIX/include/mman-win32)" . build_both &&
# wl-showstatus build-install &&
# ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf pcsc-lite-$VERSION



#export NAME="PCSC-Lite"
#export STATUS=
#export URL=https://pcsclite.apdu.fr/
#export BASENAME=pcsclite
#export DESCRIPTION="Middleware to access a smart card using SCard API (PC/SC)."
#export CATEGORY=security,hardware
#export TYPE=library
##export VERSION=2.2.0
##export VERSIONDATE=20240503
##export VERSION=2.2.1
##export VERSIONDATE=20240508
#export VERSION=2.2.2
#export VERSIONDATE=20240521
#wl-showstatus --package-version
#export DEPENDENCIES=libdl,mman-win32,pthreads
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
#export DOWNLOADURL="https://pcsclite.apdu.fr/files/ pcsc-lite-"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#wl-wait4deps
#export DOWNLOADSOURCEURL=https://pcsclite.apdu.fr/files/pcsc-lite-$VERSION.tar.xz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#tar xJ --force-local -f $TARBALLDIR/$BASENAME/pcsc-lite-$VERSION.tar.xz
#cd pcsc-lite-$VERSION
## fix missing files
#mkdir -p winfix/sys winfix/netinet winfix/arpa
#cat > winfix/sys/socket.h << EOF
##include <winsock2.h>
#struct sockaddr_un
#{
#  short          sun_family;
#  unsigned short sun_port;
#  struct         in_addr sun_addr;
#  char           sun_path[108-2-4]; 
#};
#EOF
#touch winfix/sys/mman.h winfix/sys/un.h winfix/sys/wait.h winfix/sys/ioctl.h winfix/ifdhandler.h winfix/netinet/in.h winfix/arpa/inet.h winfix/poll.h
##ls src/ifdhandler.h &> /dev/null || echo '#include "PCSC/ifdhandler.h"' > src/ifdhandler.h
##ls src/PCSC/pcsclite.h &> /dev/null || echo '#include "../ifdhandler.h"' > src/PCSC/pcsclite.h
## fix src/simclist.c (version >= 1.8.5)
#patch -ulbf src/simclist.c << EOF
#--- src/simclist.c  2011-10-22 10:30:38 +0200
#+++ src/simclist.c  2012-08-05 09:45:14 +0200
#@@ -27,3 +27,6 @@
# #include <sys/types.h>
#-#ifndef _WIN32
#+#ifdef _WIN32
#+#   include <windows.h>
#+#   include <winsock2.h>
#+#else
#     /* not in Windows! */
#EOF
## fix missing struct timeval in src/simclist.h (version >= 1.8.8)
#mv src/simclist.h src/simclist.h.bak
#echo "#include <winsock2.h>" > src/simclist.h
#cat src/simclist.h.bak >> src/simclist.h
## fix src/utils.c (version >= 1.8.8)
#mv src/utils.c src/utils.c.bak
#cat > src/utils.c << EOF
##include <winsock2.h>
##if defined(__MINGW64_VERSION_MAJOR)
##define sleep(t) _sleep((t) * 1000)
##endif
##define kill(pid,sig) 0
##define SIGUSR1 30
#EOF
#cat src/utils.c.bak >> src/utils.c
## fix src/PCSC/wintypes.h (version >= 1.8.8)
#mv src/PCSC/wintypes.h src/PCSC/wintypes.h.bak
#sed -e "s?\(typedef short BOOL;\)?//\1?" src/PCSC/wintypes.h.bak > src/PCSC/wintypes.h
## fix missing sleep in src/sys_unix.c (version >= 1.8.8)
#mv src/sys_unix.c src/sys_unix.c.bak
#cat > src/sys_unix.c << EOF
##include <winsock2.h>
##if defined(__MINGW64_VERSION_MAJOR)
##define sleep(t) (_sleep((t) * 1000), 0)
##endif
#EOF
#cat src/sys_unix.c.bak >> src/sys_unix.c
## fix missing srand48/lrand48 in src/sys_unix.c (version >= 1.9.8)
#mv src/sys_unix.c src/sys_unix.c.bak2
#cat > src/sys_unix.c << EOF
##define srand48(x) srand(x)
##define lrand48 rand
#EOF
#cat src/sys_unix.c.bak2 >> src/sys_unix.c
## fix src/winscard_msg.c (version >= 1.8.8)
#patch -ulbf src/winscard_msg.c << EOF
#--- src/winscard_msg.c  2012-08-25 16:29:44 +0200
#+++ src/winscard_msg.c  2013-01-16 22:18:48 +0100
#@@ -116,4 +116,8 @@
#        }
#
#+#ifdef _WIN32
#+       unsigned long flags = 1;
#+       if (ioctlsocket(*pdwClientID, FIONBIO, &flags) != 0)
#+#else
#        ret = fcntl(*pdwClientID, F_GETFL, 0);
#        if (ret < 0)
#@@ -126,4 +130,5 @@
#
#        if (fcntl(*pdwClientID, F_SETFL, ret | O_NONBLOCK) < 0)
#+#endif
#        {
#                Log3(PCSC_LOG_CRITICAL, "Error: cannot set socket %s nonblocking: %s",
#EOF
## fix src/winscard_msg.c (version >= 1.8.26)
#mv src/winscard_msg.c src/winscard_msg.c.bak
#cat > src/winscard_msg.c << EOF
##if !defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600
##undef _WIN32_WINNT
##define _WIN32_WINNT 0x0600
##endif
##include <winsock2.h>
##define poll WSAPoll
#EOF
#cat src/winscard_msg.c.bak >> src/winscard_msg.c
## fix src/winscard_clnt.c (version >= 1.8.8)
#mv src/winscard_clnt.c src/winscard_clnt.c.bak
#echo "#define pthread_atfork(a,b,c)" > src/winscard_clnt.c
#cat src/winscard_clnt.c.bak >> src/winscard_clnt.c
## fix src/PCSC/pcsclite.h.in (version >= 1.8.8)
#mv src/PCSC/pcsclite.h.in src/PCSC/pcsclite.h.in.bak
#sed -e 's/\(#include \)<\(wintypes.h\)>/\1"\2"/' src/PCSC/pcsclite.h.in.bak > src/PCSC/pcsclite.h.in
## fix missing RESPONSECODE in src/pcsc-wirecheck-gen.c (version >= 1.8.10)
#mv src/pcsc-wirecheck-gen.c src/pcsc-wirecheck-gen.c.bak
#cat > src/pcsc-wirecheck-gen.c << EOF
##ifndef RESPONSECODE_DEFINED_IN_WINTYPES_H
#typedef long RESPONSECODE;
##endif
#EOF
#cat src/pcsc-wirecheck-gen.c.bak >> src/pcsc-wirecheck-gen.c
## fix missing DT_REG in src/configfile.c
#patch -ulbf src/configfile.c << EOF
#--- src/configfile.c  2013-10-16 16:28:20 +0200
#+++ src/configfile.c  2013-11-19 11:21:40 +0100
#@@ -1986,4 +1986,5 @@
#                        int r;
#
#+#ifdef DT_REG
#                        /* skip non regular files */
#                        if (direntry->d_type != DT_REG)
#@@ -1993,4 +1994,5 @@
#                                continue;
#                        }
#+#endif
#
#                        /* skip files starting with . like ., .., .svn, etc */
#EOF
## remove extra file (version >= 2.2.0)
#rm -f meson.options
##rm -f meson_options.txt
## fix meson.build (version >= 2.2.0)
#patch -ulbf meson.build << EOF
#@@ -127,2 +127,4 @@
#   conf_data.set_quoted('PCSC_ARCH', 'NetBSD')
#+elif true
#+  conf_data.set_quoted('PCSC_ARCH', 'Windows')
# endif
#EOF
#mkdir -p build_both &&
# wl-showstatus configure &&
# PYTHONPATH=${PYTHONPATH:+:$PYTHONPATH}:$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dlibsystemd=false -Dlibudev=false -Dc_args="-I$PWD/winfix -I$(cygpath -m $MINGWPREFIX/include/libdl-win32) -I$(cygpath -m $MINGWPREFIX/include/mman-win32)" -Dc_link_args="-Wl,--as-needed -ldl -lmman" . build_both &&
# #-Dlibusb=true 
# wl-showstatus build-install &&
# ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf pcsc-lite-$VERSION



