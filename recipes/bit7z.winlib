export NAME="bit7z"
export STATUS=
export URL=https://rikyoz.dev/bit7z/
export BASENAME=bit7z
export DESCRIPTION="bit7z is a cross-platform C++ static library that allows the compression/extraction of archive files through a clean and simple wrapper interface to the dynamic libraries from the 7-zip project."
export CATEGORY=compression
export TYPE=library
#export VERSION=3.2.0
#export VERSIONDATE=20230225
#export VERSION=4.0.0
#export VERSIONDATE=20231002
#export VERSION=4.0.1
#export VERSIONDATE=20231003
#export VERSION=4.0.2
#export VERSIONDATE=20231009
export VERSION=4.0.3
export VERSIONDATE=20231013
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=MPL
export DOWNLOADURL="https://github.com/rikyoz/bit7z/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/rikyoz/bit7z/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
sed -i.bak -e "s/\(add_library( *[^ ]*\) STATIC /\1 /" CMakeLists.txt
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DFETCHCONTENT_UPDATES_DISCONNECTED:BOOL=ON -DBIT7Z_AUTO_FORMAT:BOOL=ON -DBIT7Z_REGEX_MATCHING:BOOL=ON -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DFETCHCONTENT_UPDATES_DISCONNECTED:BOOL=ON -DBIT7Z_AUTO_FORMAT:BOOL=ON -DBIT7Z_REGEX_MATCHING:BOOL=ON -S. -Bbuild_shared &&
 ## fix execution of Python scripts
 #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|glib-genmarshal\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -Wl,--as-needed -lws2_32/" build_shared/build.ninja &&
 wl-showstatus build &&
 ninja -Cbuild_static &&
 wl-showstatus build &&
 ninja -Cbuild_shared &&
 strip bin/*/*.dll &&
 wl-showstatus install &&
 mkdir -p $INSTALLPREFIX/bin $INSTALLPREFIX/lib $INSTALLPREFIX/include &&
 cp -f bin/*/*.dll $INSTALLPREFIX/bin/ &&
 cp -f lib/*/*.a $INSTALLPREFIX/lib/ &&
 cp -rf include/* $INSTALLPREFIX/include/ &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_static install/strip &&
 #wl-showstatus build-install &&
 #ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



