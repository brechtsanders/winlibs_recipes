#export NAME="Snappy"
#export STATUS=
##export URL=http://code.google.com/p/snappy/
#export URL=http://google.github.io/snappy/
#export BASENAME=snappy
#export DESCRIPTION="Snappy is a compression/decompression library. It does not aim for maximum compression, or compatibility with any other compression library; instead, it aims for very high speeds and reasonable compression."
#export CATEGORY=compression
#export TYPE=library
##export VERSION=1.1.0
##export VERSIONDATE=20130509
##export VERSION=1.1.1
##export VERSIONDATE=20131014
##export VERSION=1.1.3
##export VERSIONDATE=20150824
##export VERSION=1.1.4
##export VERSIONDATE=20170315
##export DEPENDENCIES=lzo,zlib
##export OPTIONALDEPENDENCIES=liblzf
##export BUILDDEPENDENCIES=
##export OPTIONALBUILDDEPENDENCIES=
##export VERSION=1.1.5
##export VERSIONDATE=20170629
##export VERSION=1.1.6
##export VERSIONDATE=20170713
##export VERSION=1.1.7
##export VERSIONDATE=20170827
#export VERSION=1.1.8
#export VERSIONDATE=20200115
#wl-showstatus --package-version
#export DEPENDENCIES=lzo,zlib
#export OPTIONALDEPENDENCIES=liblzf,gtest,gflags
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=BSD
##export DOWNLOADURL="http://code.google.com/p/snappy/downloads/list"
#export DOWNLOADURL="https://github.com/google/snappy/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
##export DOWNLOADSOURCEURL=http://snappy.googlecode.com/files/$BASENAME-$VERSION.tar.gz
##export DOWNLOADSOURCEURL=https://github.com/google/snappy/releases/download/$VERSION/$BASENAME-$VERSION.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/google/snappy/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
##tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
##wl-showstatus configure &&
###./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,-no-undefined" &&
##./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM &&
## wl-showstatus build-install &&
## # fix building DLLs
## mv libtool libtool.bak &&
## sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
## make install-strip &&
##    echo OK
### wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
##mv CMakeLists.txt CMakeLists.txt.bak &&
##sed -e "s/\(ADD_LIBRARY(.*\)\sSHARED/\1/" CMakeLists.txt.bak > CMakeLists.txt
##mkdir -p build_static build_shared &&
## wl-showstatus configure &&
## cd build_static &&
## cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release .. &&
## #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSNAPPY_BUILD_TESTS:BOOL=OFF .. &&
## (( ls -1 $MINGWPREFIX/lib/libgtest.a &> /dev/null && echo "-Wl,--as-needed -lgtest" >> CMakeFiles/snappy-unittest.dir/linklibs.rsp ) || true ) &&
## ## skip building tests (version = 1.1.6)
## #mv CTestTestfile.cmake CTestTestfile.cmake.bak && touch CTestTestfile.cmake &&
## cd .. &&
## wl-showstatus build-install &&
## make -Cbuild_static install/strip &&
## wl-showstatus configure &&
## mv -f CMakeLists.txt.bak CMakeLists.txt &&
## cd build_shared &&
## cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release .. &&
## #cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DSNAPPY_BUILD_TESTS:BOOL=OFF .. &&
## (( ls -1 $MINGWPREFIX/lib/libgtest.a &> /dev/null && echo "-Wl,--as-needed -lgtest" >> CMakeFiles/snappy-unittest.dir/linklibs.rsp ) || true ) &&
## cd .. &&
## wl-showstatus build-install &&
## make -Cbuild_shared install/strip &&
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cd build_static &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSNAPPY_BUILD_TESTS:BOOL=OFF .. &&
# cd .. &&
# wl-showstatus configure &&
# cd build_shared &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DSNAPPY_BUILD_TESTS:BOOL=OFF .. &&
# cd .. &&
# #wl-showstatus build &&
# #make -Cbuild_static &&
# #wl-showstatus build &&
# #make -Cbuild_shared &&
# wl-showstatus build-install &&
# make -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# make -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



export NAME="Snappy"
export STATUS=
#export URL=http://code.google.com/p/snappy/
export URL=http://google.github.io/snappy/
export BASENAME=snappy
export DESCRIPTION="Snappy is a compression/decompression library. It does not aim for maximum compression, or compatibility with any other compression library; instead, it aims for very high speeds and reasonable compression."
export CATEGORY=compression
export TYPE=library
export VERSION=1.1.9
export VERSIONDATE=20210505
wl-showstatus --package-version
export DEPENDENCIES=lzo,zlib
export OPTIONALDEPENDENCIES=liblzf,gtest,gflags
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=BSD
#export DOWNLOADURL="http://code.google.com/p/snappy/downloads/list"
export DOWNLOADURL="https://github.com/google/snappy/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/google/snappy/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSNAPPY_BUILD_BENCHMARKS:BOOL=OFF -DSNAPPY_BUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DSNAPPY_BUILD_BENCHMARKS:BOOL=OFF -DSNAPPY_BUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



