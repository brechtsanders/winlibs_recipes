#export NAME="Webcamoid"
#export STATUS=
#export URL=https://webcamoid.github.io/
#export BASENAME=webcamoid
#export DESCRIPTION="The ultimate webcam suite!"
#export CATEGORY=
#export TYPE=application
##export VERSION=8.7.1
##export VERSIONDATE=20200829
#export VERSION=8.8.0
#export VERSIONDATE=20210216
#wl-showstatus --package-version
#export DEPENDENCIES=qt,glib2,gstreamer,gst-plugins-base,jack,pulseaudio,libusb
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
#export DOWNLOADURL="https://github.com/webcamoid/webcamoid/releases/"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/webcamoid/webcamoid/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#wl-wait4deps
#wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
## fix missing std::numeric_limits when using GCC 11 in libAvKys/Plugins/VirtualCamera/src/VCamUtils/src/image/videoformat.cpp (version >= 8.8.0)
#mv libAvKys/Plugins/VirtualCamera/src/VCamUtils/src/image/videoformat.cpp libAvKys/Plugins/VirtualCamera/src/VCamUtils/src/image/videoformat.cpp.bak &&
#echo "#include <limits>" > libAvKys/Plugins/VirtualCamera/src/VCamUtils/src/image/videoformat.cpp &&
#cat libAvKys/Plugins/VirtualCamera/src/VCamUtils/src/image/videoformat.cpp.bak >> libAvKys/Plugins/VirtualCamera/src/VCamUtils/src/image/videoformat.cpp
#wl-showstatus configure &&
# $MINGWPREFIX/qt/bin/qmake -makefile Webcamoid.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# wl-showstatus build &&
# mingw32-make &&
# wl-showstatus build-install &&
# # fix install paths
# sed -i.bak2 -e "s/\(\$(INSTALL_ROOT[^ ]*)\)[^ ]*\(\/qml\/AkQml\)/\1\/webcamoid\2/g" libAvKys/AkQml/Makefile.* &&
# sed -i.bak -e "s/\b[A-Z]:\\(\$(INSTALL_ROOT\)/\1/g" $(grep -l "\b[A-Z]:\$(INSTALL_ROOT" *$(find -name 'Makefile*' -type f)) &&
# mingw32-make install INSTALL_ROOT=$INSTALLPREFIX/share &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####To do: hang at launch
#####PATH=$MINGWPREFIX/qt/bin:$PATH QML2_IMPORT_PATH=$INSTALLPREFIX/share/webcamoid/qml/AkQml $INSTALLPREFIX/share/webcamoid/bin/webcamoid.exe
#####PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins QML2_IMPORT_PATH=$INSTALLPREFIX/share/webcamoid/qml/AkQml $INSTALLPREFIX/share/webcamoid/bin/webcamoid.exe
#####PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins QML2_IMPORT_PATH=$MINGWPREFIX/share/webcamoid/qml/AkQml $MINGWPREFIX/share/webcamoid/bin/webcamoid.exe




export NAME="Webcamoid"
export STATUS=
export URL=https://webcamoid.github.io/
export BASENAME=webcamoid
export DESCRIPTION="The ultimate webcam suite!"
export CATEGORY=
export TYPE=application
#export VERSION=9.0.0
#export VERSIONDATE=20220215
#export VERSION=9.1.0
#export VERSIONDATE=20230611
#export VERSION=9.1.1
#export VERSIONDATE=20230615
#export DEPENDENCIES=qt,glib2,gstreamer,gst-plugins-base,jack,pulseaudio,libusb
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
export VERSION=9.2.0
export VERSIONDATE=20241001
wl-showstatus --package-version
export DEPENDENCIES=qt6,glib2,gstreamer,gst-plugins-base,jack,pulseaudio,libusb
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/webcamoid/webcamoid/releases/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/webcamoid/webcamoid/archive/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 mv -f $INSTALLPREFIX/*.ico $INSTALLPREFIX/share &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####PATH=$MINGWPREFIX/qt/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt/plugins QML2_IMPORT_PATH=$MINGWPREFIX/share/webcamoid/qml/AkQml $INSTALLPREFIX/bin/webcamoid.exe
####PATH=$MINGWPREFIX/qt6/bin:$PATH QT_PLUGIN_PATH=$MINGWPREFIX/qt6/plugins QML2_IMPORT_PATH=$MINGWPREFIX/share/webcamoid/qml/AkQml $MINGWPREFIX/bin/webcamoid.exe



