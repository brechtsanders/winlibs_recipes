export NAME="libstreams"
export STATUS=
export URL=https://github.com/KDE/libstreams
export BASENAME=libstreams
export DESCRIPTION="Strigi libstreams"
export CATEGORY=dataprocessing
export TYPE=library
export VERSION=0.7.8
export VERSIONDATE=20200416
wl-showstatus --package-version
export DEPENDENCIES=zlib,libbz2,libiconv,pthreads
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=
export LICENSETYPE=
#export DOWNLOADURL="https://github.com/KDE/libstreams/releases"
export DOWNLOADURL="https://github.com/KDE/libstreams/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/KDE/libstreams/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/KDE/libstreams/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix version detection issue for recent GCC versions
mv cmake/MacroEnsureVersion.cmake cmake/MacroEnsureVersion.cmake.bak
cat > cmake/MacroEnsureVersion.cmake << EOF
MACRO(MACRO_ENSURE_VERSION requested_version found_version var_too_old)
SET(\${var_too_old} TRUE)
ENDMACRO(MACRO_ENSURE_VERSION)
MACRO(MACRO_ENSURE_VERSION2 requested_version found_version var_too_old)
SET(\${var_too_old} TRUE)
ENDMACRO(MACRO_ENSURE_VERSION2)
EOF
# fix redefinition of ftell
mv lib/config.h.cmake lib/config.h.cmake.bak &&
echo "#include <stdio.h>" > lib/config.h.cmake &&
cat lib/config.h.cmake.bak >> lib/config.h.cmake
#mkdir -p build_win &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -S. -Bbuild_win &&
# wl-showstatus build-install &&
# make -Cbuild_win install/strip &&
# cp -f build_win/lib/libstreamsstatic.a $INSTALLPREFIX/lib/libstreams.a &&
# # fix absolute link in .cmake file(s)
# sed -i -e "s?$(echo $INSTALLPREFIX|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?\${CMAKE_CURRENT_LIST_FILE}/../../../..?g" $INSTALLPREFIX/lib/cmake/LibStreams/LibStreamsTargets-release.cmake $INSTALLPREFIX/lib/cmake/LibStreams/LibStreamsTargets.cmake &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
mkdir -p build_win &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--allow-multiple-definition" -DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5 -S. -Bbuild_win &&
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 cp -f build_win/lib/libstreamsstatic.a $INSTALLPREFIX/lib/libstreams.a &&
 # fix absolute link in .cmake file(s)
 sed -i -e "s?$(echo $INSTALLPREFIX|sed -e "s?^/\([a-zA-Z]\)/?\1:/?")?\${CMAKE_CURRENT_LIST_FILE}/../../../..?g" $INSTALLPREFIX/lib/cmake/LibStreams/LibStreamsTargets-release.cmake $INSTALLPREFIX/lib/cmake/LibStreams/LibStreamsTargets.cmake &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



