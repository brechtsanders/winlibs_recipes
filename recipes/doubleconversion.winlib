#export NAME="libdouble-conversion"
#export STATUS=
##export URL=http://code.google.com/p/double-conversion/
#export URL=https://github.com/waitman/libdouble-conversion
#export BASENAME=libdouble-conversion
#export DESCRIPTION="This library consists of efficient conversion routines that have been extracted from the V8 JavaScript engine. The code has been refactored and improved so that it can be used more easily in other projects."
#export CATEGORY=
#export TYPE=library
#export VERSION=master
#export VERSIONDATE=20160101
#wl-showstatus --package-version
#export DEPENDENCIES=
#export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=
#export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=
#export DOWNLOADURL="https://github.com/waitman/libdouble-conversion/releases"
#export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/waitman/libdouble-conversion/archive/$VERSION.tar.gz
#wl-showstatus download
#wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
##mv $TARBALLDIR/$BASENAME/$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#wl-wait4deps
#wl-showstatus extract
##tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
#cd $BASENAME-$VERSION
#wl-showstatus configure &&
##autoconf -f -I $MINGWPREFIX/share/aclocal &&
##libtoolize -f -c -i &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-shared &&
# wl-showstatus build &&
# make -j1 CC=${CC:-gcc} &&
# wl-showstatus install &&
# mkdir -p $INSTALLPREFIX/include/double-conversion $INSTALLPREFIX/lib &&
# cp -f src/*.h $INSTALLPREFIX/include/double-conversion/ &&
# cp -f src/.libs/*.a src/.libs/*.la $INSTALLPREFIX/lib &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
#####To do: build DLL



export NAME="double-conversion"
export STATUS=
export URL=https://github.com/google/double-conversion/
export BASENAME=doubleconversion
export DESCRIPTION="Efficient binary-decimal and decimal-binary conversion routines for IEEE doubles."
export CATEGORY=development
export TYPE=library
#export VERSION=1.1.5
#export VERSIONDATE=20160902
#export VERSION=1.1.6
#export VERSIONDATE=20170814
#export VERSION=3.0.0
#export VERSIONDATE=20170814
#export VERSION=3.0.1
#export VERSIONDATE=20180910
#export VERSION=3.1.1
#export VERSIONDATE=20180916
#export VERSION=3.1.2
#export VERSIONDATE=20190304
#export VERSION=3.1.3
#export VERSIONDATE=20190307
#export VERSION=3.1.4
#export VERSIONDATE=20190312
#export VERSION=3.1.5
#export VERSIONDATE=20190526
#export VERSION=3.1.6
#export VERSIONDATE=20211205
#export VERSION=3.1.7
#export VERSIONDATE=20211223
#export VERSION=3.2.0
#export VERSIONDATE=20220110
export VERSION=3.2.1
export VERSIONDATE=20220805
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=cmake
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/google/double-conversion/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/google/double-conversion/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
wl-wait4deps
wl-showstatus extract
#tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd double-conversion-$VERSION
## fix cmake installation folder (version <= 3.0.1)
#mv CMakeLists.txt CMakeLists.txt.bak &&
#sed -e "s/WIN32 AND NOT CYGWIN/FALSE/" CMakeLists.txt.bak > CMakeLists.txt
## fix building DLL (version <= 1.1.6)
#mv src/CMakeLists.txt src/CMakeLists.txt.bak &&
#sed -e "s/add_library(double-conversion/& SHARED/" src/CMakeLists.txt.bak > src/CMakeLists.txt
## fix building DLL (version >= 3.0.0 <= 3.0.1)
#sed -i.bak -e "s/add_library(double-conversion/& SHARED/" double-conversion/CMakeLists.txt
## fix building DLL (version >= 3.1.1)
#sed -i.bak -e "s/add_library(double-conversion/& SHARED/" CMakeLists.txt
#wl-showstatus configure &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
# ## move DLL to bin directory (version <= 1.1.6)
# #mkdir -p $INSTALLPREFIX/bin &&
# #mv $INSTALLPREFIX/*.dll $INSTALLPREFIX/bin &&
# wl-showstatus configure &&
# ## fix building static library (version <= 1.1.6)
# #sed -e "s/add_library(double-conversion/& STATIC/" src/CMakeLists.txt.bak > src/CMakeLists.txt &&
# ## fix building static library (version >= 3.0.0 <= 3.0.1)
# #sed -e "s/add_library(double-conversion/& STATIC/" double-conversion/CMakeLists.txt.bak > double-conversion/CMakeLists.txt &&
# # fix building static library (version >= 3.1.1)
# sed -e "s/add_library(double-conversion/& STATIC/" CMakeLists.txt.bak > CMakeLists.txt &&
# cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TESTING:BOOL=OFF . &&
# wl-showstatus build-install &&
# make install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf double-conversion-$VERSION
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_static &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus configure &&
 cmake.exe -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTING:BOOL=OFF -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf double-conversion-$VERSION



