export NAME="Telepathy Logger"
export STATUS=
export URL=http://telepathy.freedesktop.org/wiki/Logger
export BASENAME=telepathy-logger
export DESCRIPTION="Telepathy Logger is a session daemon that should be activated whenever telepathy is being used (similar to mission control lifetime). For performance reason, the database is accessible directly through an API instead of D-Bus channel."
export CATEGORY=communication
export TYPE=library
#export VERSION=0.2.5
#export VERSIONDATE=20110316
#export VERSION=0.2.7
#export VERSIONDATE=20110326
#export VERSION=0.2.8
#export VERSIONDATE=20110401
#export VERSION=0.2.9
#export VERSIONDATE=20110507
#export VERSION=0.2.10
#export VERSIONDATE=20110527
#export VERSION=0.2.11
#export VERSIONDATE=20111101
#export VERSION=0.2.12
#export VERSIONDATE=20111102
#export VERSION=0.2.13
#export VERSIONDATE=20120403
#export VERSION=0.4.0
#export VERSIONDATE=20120409
#export VERSION=0.6.0
#export VERSIONDATE=20121030
#export VERSION=0.8.0
#export VERSIONDATE=20130121
#export VERSION=0.8.1
#export VERSIONDATE=20140825
export VERSION=0.8.2
export VERSIONDATE=20150501
wl-showstatus --package-version
export DEPENDANCIES=telepathy-glib,sqlite3,libxml2,libice
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
export DOWNLOADURL="http://telepathy.freedesktop.org/releases/telepathy-logger/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://telepathy.freedesktop.org/releases/telepathy-logger/$BASENAME-$VERSION.tar.bz2
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfj $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
cd $BASENAME-$VERSION
# fix missing localtime_r in src/telepathy-logger.c
mv src/telepathy-logger.c src/telepathy-logger.c.bak
cat > src/telepathy-logger.c << EOF
#define localtime_r(clock,result) (*(result) = *localtime(clock),result)
EOF
cat src/telepathy-logger.c.bak >> src/telepathy-logger.c
# fix missing localtime_r in tests/dbus/test-log-manager.c
mv tests/dbus/test-log-manager.c tests/dbus/test-log-manager.c.bak
cat > tests/dbus/test-log-manager.c << EOF
#define localtime_r(clock,result) (*(result) = *localtime(clock),result)
EOF
cat tests/dbus/test-log-manager.c.bak >> tests/dbus/test-log-manager.c
# fix missing localtime_r in tests/dbus/test-tpl-log-store-pidgin.c
mv tests/dbus/test-tpl-log-store-pidgin.c tests/dbus/test-tpl-log-store-pidgin.c.bak
cat > tests/dbus/test-tpl-log-store-pidgin.c << EOF
#define localtime_r(clock,result) (*(result) = *localtime(clock),result)
EOF
cat tests/dbus/test-tpl-log-store-pidgin.c.bak >> tests/dbus/test-tpl-log-store-pidgin.c
wl-showstatus configure &&
 # fix building DLLs on 64-bit
 if ( echo $RUNPLATFORM | grep -q x86_64 ); then
  autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 fi &&
 ## fix problem detecting GNU gettext tools on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # mv configure configure.bak
 # sed -e "s/as_fn_error\(.*GNU gettext tools not found; required for intltool\)/as_echo\1/" configure.bak > configure
 #fi &&
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-no-undefined -Wl,-no-undefined" &&
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-Wl,-no-undefined" &&
 #PERL="$PERLDIR/bin/perl.exe" PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no --disable-schemas-compile LDFLAGS="-Wl,-no-undefined" &&
 #PERL="$PERLDIR/bin/perl.exe" PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-Wl,-no-undefined" &&
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin PYTHON=$PYDIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-Wl,-no-undefined" &&
 PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" PATH=$PATH:$PERLDIR/../c/bin PYTHON=$PY2DIR/python.exe ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-introspection=no LDFLAGS="-Wl,-no-undefined" &&
 wl-showstatus build-install &&
 # fix building DLLs on 64-bit
 if ( echo $RUNPLATFORM | grep -q x86_64 ); then
  mv libtool libtool.bak &&
  sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool
 fi &&
 #PATH=$PATH:$PERLDIR/../c/bin make -j1 all install-strip INTLTOOL_MERGE="$PERLDIR/bin/perl.exe $MINGWPREFIX/bin/intltool-merge" &&
 PATH=$PYDIR:$PATH:$PERLDIR/../c/bin make -j1 all install-strip INTLTOOL_MERGE="$PERLDIR/bin/perl.exe $MINGWPREFIX/bin/intltool-merge" &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



