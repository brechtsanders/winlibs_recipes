export NAME="AWS Crt Cpp"
export STATUS=
export URL=https://github.com/awslabs/aws-crt-cpp
export BASENAME=aws-crt-cpp
export DESCRIPTION="C++ wrapper around the aws-c-* libraries. Provides Cross-Platform Transport Protocols and SSL/TLS implementations for C++."
export CATEGORY=communication
export TYPE=library
#export VERSION=0.19.1
#export VERSIONDATE=20221209
#export VERSION=0.19.2
#export VERSIONDATE=20230114
#export VERSION=0.19.3
#export VERSIONDATE=20230125
#export VERSION=0.19.4
#export VERSIONDATE=20230126
#export VERSION=0.19.5
#export VERSIONDATE=20230127
#export VERSION=0.19.6
#export VERSIONDATE=20230201
#export VERSION=0.19.7
#export VERSIONDATE=20230202
#export VERSION=0.19.8
#export VERSIONDATE=20230302
#export VERSION=0.19.9
#export VERSIONDATE=20230413
#export VERSION=0.20.0
#export VERSIONDATE=20230420
#export VERSION=0.20.1
#export VERSIONDATE=20230502
#export VERSION=0.20.2
#export VERSIONDATE=20230527
#export VERSION=0.20.3
#export VERSIONDATE=20230706
#export VERSION=0.20.6
#export VERSIONDATE=20230718
#export VERSION=0.20.7
#export VERSIONDATE=20230720
#export VERSION=0.21.0
#export VERSIONDATE=20230728
#export VERSION=0.22.0
#export VERSIONDATE=20230805
#export VERSION=0.24.0
#export VERSIONDATE=20231004
#export VERSION=0.24.1
#export VERSIONDATE=20231005
####CMake Error at CMakeLists.txt:317 (aws_add_sanitizers): Unknown CMake command "aws_add_sanitizers".
#export VERSION=0.24.2
#export VERSIONDATE=20231006
#export VERSION=0.24.3
#export VERSIONDATE=20231017
#export VERSION=0.24.4
#export VERSIONDATE=20231026
#export VERSION=0.24.5
#export VERSIONDATE=20231108
#export VERSION=0.24.6
#export VERSIONDATE=20231113
#export VERSION=0.24.7
#export VERSIONDATE=20231114
#export VERSION=0.24.8
#export VERSIONDATE=20231129
#export VERSION=0.24.9
#export VERSIONDATE=20231130
#export VERSION=0.24.11
#export VERSIONDATE=20231208
#export VERSION=0.25.0
#export VERSIONDATE=20231214
#export VERSION=0.25.1
#export VERSIONDATE=20231228
#export VERSION=0.26.0
#export VERSIONDATE=20231230
#export VERSION=0.26.1
#export VERSIONDATE=20240112
#export VERSION=0.26.2
#export VERSIONDATE=20240215
#export VERSION=0.26.3
#export VERSIONDATE=20240301
#export VERSION=0.26.4
#export VERSIONDATE=20240319
#export VERSION=0.26.6
#export VERSIONDATE=20240404
#export VERSION=0.26.7
#export VERSIONDATE=20240411
#export VERSION=0.26.8
#export VERSIONDATE=20240413
export VERSION=0.26.9
export VERSIONDATE=20240521
wl-showstatus --package-version
export DEPENDENCIES=aws-c-auth,aws-c-sdkutils,aws-c-io,openssl
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=Apache
export DOWNLOADURL="https://github.com/awslabs/aws-crt-cpp/releases"
#export DOWNLOADURL="https://github.com/awslabs/aws-crt-cpp/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/awslabs/aws-crt-cpp/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix already defined IGNORE in include/aws/crt/mqtt/Mqtt5ClientCore.h (version >= 0.20.2 <= 0.22.0)
#patch -ulbf include/aws/crt/mqtt/Mqtt5ClientCore.h << EOF
#@@ -182,2 +182,3 @@
#                     INVOKE,
#+#undef IGNORE
#                     IGNORE
#EOF
# fix include/aws/crt/mqtt/private/Mqtt5ClientCore.h (version >= 0.24.2)
####include/aws/crt/mqtt/private/Mqtt5ClientCore.h:204:21: error: expected identifier before numeric constant
patch -ulbf include/aws/crt/mqtt/private/Mqtt5ClientCore.h << EOF
@@ -203,2 +203,3 @@
                     INVOKE,
+#define IGNORE AWS_IGNORE
                     IGNORE
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_DEPS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -S. -Bbuild_static &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_DEPS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DCMAKE_MODULE_PATH:PATH=$MINGWPREFIX/lib/cmake -S. -Bbuild_shared &&
 ## fix missing link libraries
 #sed -i.bak -e "s/^\s*LINK_LIBRARIES\s*=.*$/& -pthread/" build_shared/build.ninja &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



