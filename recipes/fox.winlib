export NAME="FOX"
export STATUS=
export URL=http://www.fox-toolkit.org/
export BASENAME=fox
export DESCRIPTION="FOX stands for Free Objects for X. It is a C++ based class library for building Graphical User Interfaces. Initially, it was developed for LINUX, but the scope of this project has in the course of time become somewhat more ambitious. Current aims are to make FOX completely platform independent, and thus programs written against the FOX library will be only a compile away from running on a variety of platforms."
export CATEGORY=gui,portability
export TYPE=library
#export VERSION=1.6.37
#export VERSIONDATE=20091112
#export VERSION=1.6.38
#export VERSIONDATE=20100825
#export VERSION=1.6.39
#export VERSIONDATE=20100826
#export VERSION=1.6.40
#export VERSIONDATE=20100901
#export VERSION=1.6.41
#export VERSIONDATE=20110128
#export VERSION=1.6.42
#export VERSIONDATE=20110202
#export VERSION=1.6.43
#export VERSIONDATE=20110205
#export VERSION=1.6.44
#export VERSIONDATE=20110210
#export VERSION=1.6.45
#export VERSIONDATE=20120428
#export VERSION=1.6.46
#export VERSIONDATE=20120712
#export VERSION=1.6.47
#export VERSIONDATE=20121114
#export VERSION=1.6.48
#export VERSIONDATE=20130407
#export VERSION=1.6.49
#export VERSIONDATE=20130408
#export VERSION=1.6.50
#export VERSIONDATE=20140514
#export VERSION=1.6.51
#export VERSIONDATE=20160315
#export VERSION=1.6.52
#export VERSIONDATE=20160616
#export VERSION=1.6.53
#export VERSIONDATE=20161204
#export VERSION=1.6.54
#export VERSIONDATE=20170421
#export VERSION=1.6.55
#export VERSIONDATE=20170720
#export VERSION=1.6.57
#export VERSIONDATE=20200309
#export VERSION=1.7.22
#export VERSIONDATE=20100926
#export VERSION=1.7.23
#export VERSIONDATE=20101006
####lib/FXAtomic.cpp:199:11: error: 'p' was not declared in this scope
#export VERSION=1.7.24
#export VERSIONDATE=20101119
#export VERSION=1.7.25
#export VERSIONDATE=20101124
#export VERSION=1.7.26
#export VERSIONDATE=20110517
#export VERSION=1.7.32
#export VERSIONDATE=20111214
#export VERSION=1.7.33
#export VERSIONDATE=20120222
#export VERSION=1.7.34
#export VERSIONDATE=20120713
#export DEPENDENCIES=zlib,libbz2,libjpeg,libpng,libtiff,pthreads
#export VERSION=1.7.35
#export VERSIONDATE=20120726
####include/xincs.h:99:22: fatal error: GL/glext.h: No such file or directory
#export VERSION=1.7.36
#export VERSIONDATE=20120824
#export VERSION=1.7.37
#export VERSIONDATE=20121115
#export VERSION=1.7.38
#export VERSIONDATE=20130324
#export VERSION=1.7.39
#export VERSIONDATE=20130513
#export VERSION=1.7.40
#export VERSIONDATE=20130719
#export VERSION=1.7.41
#export VERSIONDATE=20130828
#export VERSION=1.7.42
#export VERSIONDATE=20130916
#export VERSION=1.7.43
#export VERSIONDATE=20131025
#export VERSION=1.7.44
#export VERSIONDATE=20131206
#export VERSION=1.7.45
#export VERSIONDATE=20131218
#export VERSION=1.7.46
#export VERSIONDATE=20140130
#export VERSION=1.7.47
#export VERSIONDATE=20140520
#export VERSION=1.7.48
#export VERSIONDATE=20140707
#export VERSION=1.7.49
#export VERSIONDATE=20140730
#export VERSION=1.7.50
#export VERSIONDATE=20141111
#export VERSION=1.7.51
#export VERSIONDATE=20150316
####include/xincs.h:109:17: error: 'GL_BGRA_EXT' was not declared in this scope
#export VERSION=1.7.52
#export VERSIONDATE=20150702
#export VERSION=1.7.53
#export VERSIONDATE=20151128
####lib/FXDispatcher.cpp:140:17: error: 'watched' was not declared in this scope
#export VERSION=1.7.54
#export VERSIONDATE=20160107
####include/fxmath.h:545:50: error: '::exp10' has not been declared
#export VERSION=1.7.55
#export VERSIONDATE=20160521
#export VERSION=1.7.56
#export VERSIONDATE=20160524
#export VERSION=1.7.57
#export VERSIONDATE=20161204
#export VERSION=1.7.58
#export VERSIONDATE=20170314
#export VERSION=1.7.59
#export VERSIONDATE=20170415
####lib/FXDispatcher.cpp:94:3: error: 'TUInt' does not name a type
#export VERSION=1.7.60
#export VERSIONDATE=20170518
#export VERSION=1.7.61
#export VERSIONDATE=20170923
####pathfinder/Preferences.o:Preferences.cpp:(.text+0x571c): undefined reference to `FX::FXPath::relativize(FX::FXString const&, FX::FXString const&)'
#export VERSION=1.7.62
#export VERSIONDATE=20171214
####lib/FXDispatcher.cpp:98:3: error: 'FX' does not name a type
#export VERSION=1.7.67
#export VERSIONDATE=20200309
#export VERSION=1.7.68
#export VERSIONDATE=20200430
#export VERSION=1.7.69
#export VERSIONDATE=20200625
#export VERSION=1.7.70
#export VERSIONDATE=20200629
#export VERSION=1.7.71
#export VERSIONDATE=20200707
#export VERSION=1.7.72
#export VERSIONDATE=20200715
#export VERSION=1.7.73
#export VERSIONDATE=20200825
#export VERSION=1.7.74
#export VERSIONDATE=20201204
#export VERSION=1.7.75
#export VERSIONDATE=20210303
#export VERSION=1.7.76
#export VERSIONDATE=20210402
#export VERSION=1.7.77
#export VERSIONDATE=20210421
#export VERSION=1.7.78
#export VERSIONDATE=20220216
#export VERSION=1.7.79
#export VERSIONDATE=20220312
#export VERSION=1.7.80
#export VERSIONDATE=20221011
#export VERSION=1.7.81
#export VERSIONDATE=20221114
export VERSION=1.7.82
export VERSIONDATE=20230328
wl-showstatus --package-version
#export DEPENDENCIES=zlib,libbz2,libjpeg,libpng,libtiff,pthreads,mesalib
export DEPENDENCIES=zlib,libbz2,libjpeg,libpng,libtiff,pthreads,glew
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE_ADDENDUM
export LICENSETYPE=LGPL+Addendum
#export DOWNLOADURL="http://www.fox-toolkit.org/ftp/ fox-"
#export DOWNLOADURL="http://ftp.fox-toolkit.org/pub/ fox-"
#export DOWNLOADURL="http://www.fox-toolkit.org/download.html fox-"
export DOWNLOADURL="http://fox-toolkit.org/ftp/ fox-"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://www.fox-toolkit.org/ftp/$BASENAME-$VERSION.tar.gz
export DOWNLOADSOURCEURL=http://fox-toolkit.org/ftp/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing includes (version >= 1.7.20)
#mkdir -p lib/sys
#touch lib/sys/ipc.h lib/sys/shm.h
mkdir -p include/sys
touch include/sys/ipc.h include/sys/shm.h
## fix missing definition of LONG (version >= 1.7.20)
#mv include/FXAtomic.h include/FXAtomic.h.bak
#echo "#include <windows.h>" > include/FXAtomic.h
#cat include/FXAtomic.h.bak >> include/FXAtomic.h
# fix lib/FXAtomic.cpp (version >= 1.7.22)
#patch -ulbf lib/FXAtomic.cpp << EOF
#--- lib/FXAtomic.cpp  2010-09-18 02:09:38 +0200
#+++ lib/FXAtomic.cpp  2010-10-06 17:18:22 +0200
#@@ -198,3 +198,3 @@
# #if defined(WIN32)
#-   return InterlockedExchangePointer(ptr,p);
#+   return InterlockedExchangePointer(ptr,v);
# #elif (defined(HAVE_INLINE_ASSEMBLY) && defined(__i386__))
#EOF
## fix include/xincs.h (version >= 1.7.35)
#patch -ulbf include/xincs.h << EOF
#--- include/xincs.h  2012-07-12 02:55:16 +0200
#+++ include/xincs.h  2012-07-26 08:12:06 +0200
#@@ -97,3 +97,3 @@
# #endif
#-#ifdef _WIN32
#+#if defined(_WIN32) && !defined(__MINGW32__)
# #include <GL/glext.h>
#EOF
## fix undefined spaceNavHandle in lib/FXApp.cpp on 64-bit (version >= 1.7.37)
#mv lib/FXApp.cpp lib/FXApp.cpp.bak
#sed -e "s?\(spaceNavHandle=\)?//\1?" lib/FXApp.cpp.bak > lib/FXApp.cpp
## fix missing GL_BGRA_EXT in lib/FXGLViewer.cpp (version >= 1.7.37)
#mv lib/FXGLViewer.cpp lib/FXGLViewer.cpp.bak
#echo "#include <GL/glew.h>" > lib/FXGLViewer.cpp
#cat lib/FXGLViewer.cpp.bak >> lib/FXGLViewer.cpp
## fix missing GL_BGRA_EXT in include/xincs.h (version >= 1.7.48)
#mv include/xincs.h include/xincs.h.bak
#echo "#include <GL/glew.h>" > include/xincs.h
#cat include/xincs.h.bak >> include/xincs.h
# fix undefined a in src/FXString.cpp (version >= 1.6.52)
patch -ulbf src/FXString.cpp << EOF
--- src/FXString.cpp  2016-06-16 06:16:00.000000000 +0200
+++ src/FXString.cpp  2016-06-16 20:01:27.874060400 +0200
@@ -2367,3 +2367,3 @@
 x:  va_copy(ag,args);
-    result=vsnprintf(str,length()+1,fmt,a);
+    result=vsnprintf(str,length()+1,fmt,ag);
     va_end(ag);
EOF
# fix relativize in include/FXPath.h (version >= 1.7.60)
patch -ulbf include/FXPath.h << EOF
@@ -208 +208 @@
-  FXString relativize(const FXString& pathlist,const FXString& file);
+  extern FXAPI FXString relativize(const FXString& pathlist,const FXString& file);
EOF
# fix type issue calling atomicBoolCas in lib/FXWSQueue.cpp (version >= 1.7.61)
mv lib/FXWSQueue.cpp lib/FXWSQueue.cpp.bak &&
sed -e "s/\(atomicBoolCas(\)\(\&top\)/\1(FXlong*)\2/" lib/FXWSQueue.cpp.bak > lib/FXWSQueue.cpp
# fix missing _InterlockedExchangePointer in lib/FXSpinLock.cpp (version >= 1.7.61)
mv lib/FXSpinLock.cpp lib/FXSpinLock.cpp.bak &&
sed -e "s/^#if defined(WIN32)$/& \&\& defined(__MINGW64_VERSION_MAJOR)/" lib/FXSpinLock.cpp.bak > lib/FXSpinLock.cpp
# fix missing fxrexdbg.h in lib/FXRex.cpp (version >= 1.7.79)
sed -i.bak -e "s?^#define TOPIC_REXDUMP?//&?" lib/FXRex.cpp
# skip making tests (version >= 1.7.60)
cat > tests/Makefile.in << EOF
clean:
all:
install:
install-strip:
EOF
# fix invalid -rdynamic
mv configure configure.bak &&
sed -e "s/-rdynamic//" configure.bak > configure
# fix missing GLU stuff
export CPLUS_INCLUDE_PATH=$MINGWDIR/include:$CPLUS_INCLUDE_PATH
export C_INCLUDE_PATH=$MINGWDIR/include:$C_INCLUDE_PATH
export LD_RUN_PATH=$MINGWDIR/lib:$LD_RUN_PATH
export LIBRARY_PATH=$MINGWDIR/lib:$LIBRARY_PATH
## remove dependancy on dynamic libstdc++ (GCC 4)
#mv libtool libtool.bak &&
#sed -e "s/-lstdc++/-lstdc++_s -lsupc++/" libtool.bak > libtool &&
wl-showstatus configure &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM && 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-release --without-x --without-xft --without-xshm --without-shape --without-xcursor --without-xrender --without-xrandr --without-xfixes --without-xinput --without-xim LDFLAGS="-Wl,--enable-auto-import" &&
# ( make install-strip || make install-strip LIBS="-lpng.dll" ) && 
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-release --without-x --without-xft --without-xshm --without-shape --without-xcursor --without-xrender --without-xrandr --without-xfixes --without-xinput --without-xim LDFLAGS="-Wl,--enable-auto-import -lbz2 -lz -ljpeg -ltiff -no-undefined -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-release --without-x --without-xft --without-xshm --without-shape --without-xcursor --without-xrender --without-xrandr --without-xfixes --without-xinput --without-xim LDFLAGS="-Wl,--enable-auto-import -Wl,--as-needed -lbz2 -lz -ljpeg -ltiff -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-release --without-x --without-xft --without-xshm --without-shape --without-xcursor --without-xrender --without-xrandr --without-xfixes --without-xinput --without-xim --without-opengl LDFLAGS="-Wl,--enable-auto-import -Wl,--as-needed -lbz2 -lz -ljpeg -ltiff -Wl,-no-undefined" &&
./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-release --without-x --without-xft --without-xshm --without-shape --without-xcursor --without-xrender --without-xrandr --without-xfixes --without-xinput --without-xim LDFLAGS="-Wl,--enable-auto-import -Wl,--as-needed -lbz2 -lz -ljpeg -ltiff -lglu32 -Wl,-no-undefined" &&
#./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-release --without-x --without-xft --without-xshm --without-shape --without-xcursor --without-xrender --without-xrandr --without-xfixes --without-xinput --without-xim LDFLAGS="-Wl,--enable-auto-import -Wl,--as-needed -lbz2 -lz -ljpeg -ltiff -lglu32 -lglut32 -Wl,-no-undefined" &&
 wl-showstatus build-install &&
 # fix building DLLs
 mv libtool libtool.bak &&
 sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 wl-showstatus build &&
 # 64-bit needs compiler option -fpermissive"
 if ( echo $RUNPLATFORM | grep -q x86_64 ); then
  make || make CXX="${CXX:-g++} -fpermissive" || ( make -j1 -Cchart CXX="${CXX:-g++} -fpermissive" libCHART-`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/"`.la LIBS="-L`pwd`/src/.libs -lFOX-`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/"`" && make CXX="${CXX:-g++} -fpermissive" )
 fi &&
 ( make install-strip || ( make -j1 -Cchart libCHART-`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/"`.la LIBS="-L`pwd`/src/.libs -lFOX-`echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\).*$/\1/"`" && make install-strip ) || ( make LIBS="-Wl,--as-needed -lpng -lbz2 -lz -ljpeg -ltiff -lglu32 -lglut32 -lGLU" && make install-strip ) ) &&
 # fix absolute paths in fox-config
 sed -i.bak -e "s?$INSTALLPREFIX?\$(dirname \$0)/..?g" $INSTALLPREFIX/bin/fox-config &&
 rm -f $INSTALLPREFIX/bin/fox-config.bak &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



