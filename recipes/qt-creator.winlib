export NAME="Qt Creator"
export STATUS=
export URL=https://github.com/qt-creator/qt-creator
export BASENAME=qt-creator
export DESCRIPTION="Qt Creator is a cross-platform, integrated development environment (IDE) for application developers to create applications for multiple desktop, embedded, and mobile device platforms."
export CATEGORY=development
export TYPE=application
#export VERSION=6.0.1
#export VERSIONDATE=20211218
#export VERSION=6.0.2
#export VERSIONDATE=20220119
#export DEPENDANCIES=qt
#export OPTIONALDEPENDANCIES=
#export BUILDDEPENDANCIES=cmake,ninja
#export VERSION=7.0.0
#export VERSIONDATE=20220324
#export VERSION=7.0.1
#export VERSIONDATE=20220427
export VERSION=7.0.2
export VERSIONDATE=20220524
wl-showstatus --package-version
export DEPENDANCIES=qt
#export DEPENDANCIES=qt6
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake,ninja
export LICENSEFILE=LICENSE.GPL3-EXCEPT
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/qt-creator/qt-creator/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/qt-creator/qt-creator/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# make sure to search for KF5SyntaxHighlighting in CMakeLists.txt (version >= 7.0.0)
patch -ulbf CMakeLists.txt << EOF
@@ -84,5 +84,3 @@
 find_package(Clang QUIET)
-if (Qt5_VERSION VERSION_LESS 6.0.0)
   find_package(KF5SyntaxHighlighting QUIET)
-endif()

EOF
#wl-showstatus configure &&
# $MINGWPREFIX/qt/bin/qmake -makefile qtcreator.pro -spec $MINGWPREFIX/qt/mkspecs/win32-g++ &&
# wl-showstatus build &&
# ( mingw32-make || mingw32-make -j1 ) &&
#    echo OK
## don't abort when not using clang
#sed -i.bak -e "s/^find_package(Clang/#&/" CMakeLists.txt
mkdir -p build_win &&
 wl-showstatus configure &&
 #PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_WITH_PCH:BOOL=OFF -DBUILD_CPLUSPLUS_TOOLS:BOOL=ON -DWITH_DOCS:BOOL=OFF -DWITH_ONLINE_DOCS:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DBUILD_TESTS_BY_DEFAULT:BOOL=OFF -S. -Bbuild_win &&
 PATH=$PATH:$MINGWPREFIX/qt6/bin QTDIR=$MINGWPREFIX/qt6 QMAKESPEC=$MINGWPREFIX/qt6/mkspecs/win32-g++ cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_WITH_PCH:BOOL=OFF -DBUILD_CPLUSPLUS_TOOLS:BOOL=ON -DWITH_DOCS:BOOL=OFF -DWITH_ONLINE_DOCS:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DBUILD_TESTS_BY_DEFAULT:BOOL=OFF -DPython3_EXECUTABLE=$PYDIR/python.exe -S. -Bbuild_win &&
 #-DCLANGTOOLING_LINK_CLANG_DYLIB:BOOL=ON 
 wl-showstatus build-install &&
 ninja -Cbuild_win install/strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####PATH=$MINGWPREFIX/qt/bin:$PATH qtcreator
####PATH=$MINGWPREFIX/qt6/bin:$MINGWPREFIX/qt/bin:$PATH qtcreator



