export NAME="TPM2-TSS"
export STATUS=
export URL=https://tpm2-software.github.io/
#export URL=https://github.com/tpm2-software/tpm2-tss
export BASENAME=tpm2-tss
export DESCRIPTION="OSS implementation of the TCG TPM2 Software Stack (TSS2)"
export CATEGORY=security,hardware
export TYPE=library
#export VERSION=3.1.0
#export VERSIONDATE=20220116
#export VERSION=3.2.0
#export VERSIONDATE=20220219
#export VERSION=3.2.1
#export VERSIONDATE=20221213
#export VERSION=4.0.0
#export VERSIONDATE=20230103
export VERSION=4.0.1
export VERSIONDATE=20230124
#### Bug reported here: https://github.com/tpm2-software/tpm2-tss/issues/2528
wl-showstatus --package-version
export DEPENDENCIES=openssl,libdl,json,libcurl
#libuuid
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/tpm2-software/tpm2-tss/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/tpm2-software/tpm2-tss/releases/download/$VERSION/tpm2-tss-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/tpm2-tss-$VERSION.tar.gz
cd tpm2-tss-$VERSION
# fix missing strndup in src/tss2-tcti/tctildr.c
mv src/tss2-tcti/tctildr.c src/tss2-tcti/tctildr.c.bak
cat > src/tss2-tcti/tctildr.c << EOF
#include <stdlib.h>
#include <string.h>
char* strndup (const char *str, size_t maxlen)
{
  int l = strnlen(str, maxlen);
  char* s = (char*)malloc(l + 1);
  memcpy(s, str, l);
  s[l] = 0;
  return s;
}
EOF
cat src/tss2-tcti/tctildr.c.bak >> src/tss2-tcti/tctildr.c
# fix redefinition of SSIZE_T in src/util/io.h (version >= 3.1.0)
patch -ulbf src/util/io.h << EOF
@@ -12,3 +12,5 @@
 #include <ws2tcpip.h>
+#ifndef __MINGW32__
 typedef SSIZE_T ssize_t;
+#endif
 #define _HOST_NAME_MAX MAX_COMPUTERNAME_LENGTH
EOF
## fix missing poll.h in src/tss2-fapi/fapi_int.h (version >= 4.0.0)
#patch -ulbf src/tss2-fapi/fapi_int.h << EOF
#@@ -31,3 +31,5 @@
# #include <json-c/json.h>
#+#ifndef _WIN32
# #include <poll.h>
#+#endif
#
#EOF
## fix missing poll.h in src/tss2-fapi/ifapi_io.c (version >= 4.0.0)
#patch -ulbf src/tss2-fapi/ifapi_io.c << EOF
#@@ -15,3 +15,5 @@
# #include <fcntl.h>
#+#ifndef _WIN32
# #include <poll.h>
#+#endif
# #include <errno.h>
#EOF
## fix undefined uint in src/tss2-fapi/ifapi_eventlog_system.c (version >= 4.0.0)
#sed -i.bak -e "s/\buint\b/unsigned int/g" src/tss2-fapi/ifapi_eventlog_system.c
## fix Makefile.in (version >= 4.0.0)
#patch -ulbf Makefile.in << EOF
#@@ -1173,2 +1173,3 @@
#        src/tss2-fapi/tpm_json_serialize.c
#+@FAPI_FALSE@am__src_tss2_fapi_libtss2_fapi_la_SOURCES_DIST =
# am__objects_9 =  \\
#EOF
# fix missing inet_ntop in src/util/io.c (version >= 4.0.0)
mv src/util/io.c src/util/io.c.bak
cat > src/util/io.c << EOF
#include <stdio.h>
#include <winsock2.h>
#if !defined(_WIN32_WINNT) || _WIN32_WINNT <  0x0600
const char* inet_ntop (int af, void const *src, char *dst, size_t size)
{
  switch (af) {
    case AF_INET:
    {
      char tmp[16];
      sprintf(tmp, "%u.%u.%u.%u", ((unsigned char*)src)[0], ((unsigned char*)src)[1], ((unsigned char*)src)[2], ((unsigned char*)src)[3]);
      return strcpy(dst, tmp);
    }
    default:
      return NULL;//to do: implement AF_INET6
  }
}
#endif
EOF
cat src/util/io.c.bak >> src/util/io.c
# skip installing man pages
sed -i.bak -e "s/\(@install-man:\).*$/\1/" Makefile.in
# don't on certain errors in configure
sed -i.bak -e "s/as_fn_error\(.*\)\(strndup function not found\|Missing required program 'groupadd'\|Missing required program 'useradd'\)/echo\1\2/" configure
# disable stack protection
sed -i.bak2 -e "s/\(_FORTIFY_SOURCE=\)2/\10/; s/-fstack-protector/&-DISABLE/" configure
# don't fail if addgroup/groupadd and adduser/useradd are not found (version >= 3.2.0)
sed -i.bak3 -e "s/as_fn_error\(.*add.* are needed\)/echo\1/" configure
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-esys --disable-fapi --disable-tcti-device --disable-tcti-mssim --enable-tcti-swtpm --disable-tcti-pcap --disable-tcti-cmd --with-crypto=ossl --without-udevrulesdir --disable-doxygen-doc CFLAGS="-I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -ldl -lws2_32" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-esys --disable-fapi --disable-policy --disable-tcti-device --disable-tcti-mssim --enable-tcti-swtpm --disable-tcti-pcap --disable-tcti-cmd --with-crypto=ossl --without-udevrulesdir --disable-doxygen-doc CFLAGS="-I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -ldl -lws2_32" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-esys --disable-fapi --disable-policy --disable-tcti-device --disable-tcti-mssim --enable-tcti-swtpm --disable-tcti-pcap --disable-tcti-cmd --with-crypto=ossl --without-udevrulesdir --disable-doxygen-doc CFLAGS="-I$MINGWPREFIX/include/libdl-win32 -Wno-int-conversion" LDFLAGS="-Wl,--as-needed -ldl -lws2_32" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-esys --disable-fapi --disable-fapi-async-tests --without-default-test-fapi-profile --disable-tcti-device --disable-tcti-mssim --enable-tcti-swtpm --disable-tcti-pcap --disable-tcti-cmd --with-crypto=ossl --without-udevrulesdir --disable-doxygen-doc CFLAGS="-I$MINGWPREFIX/include/libdl-win32 -I$MINGWPREFIX/include/portable-uuid" LDFLAGS="-Wl,--as-needed -ldl -lportable-uuid -lws2_32" &&
 #--with-devicetests=
 # fix building DLLs
 sed -i.bak1 -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 # fix detection of shared libraries
 sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 wl-showstatus build-install &&
 #make install-strip &&
 ( make install-strip || ( cp -u man/man3/Tss2_TctiLdr_Initialize.3 . && mkdir -p $INSTALLPREFIX/share/man/man3 && make install-strip )) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf tpm2-tss-$VERSION
####TO DO: build tcti-tbs (Windows support)
#gcc -c -o src/tss2-tcti/tcti-tbs.o src/tss2-tcti/tcti-tbs.c -I. -Iinclude/tss2 -Isrc



