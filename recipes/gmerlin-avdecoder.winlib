export NAME="gmerlin-avdecoder"
export STATUS=
export URL=http://gmerlin.sourceforge.net/
export BASENAME=gmerlin-avdecoder
export DESCRIPTION="Gmerlin_avdecoder is a general purpose media decoding library. It was written as a support library for gmerlin, but it can also be used by other applications."
export CATEGORY=audio,video
export TYPE=library
#export VERSION=1.0.0
export VERSION=1.0.1
export VERSIONDATE=
#export VERSION=1.0.2
#export VERSIONDATE=20100225
#export VERSION=1.0.3
#export VERSIONDATE=20100228
#export VERSION=1.1.0
#export VERSIONDATE=20110220
####configure: error: "gavl not found"
#export VERSION=1.2.0
#export VERSIONDATE=20120610
####lib/demux_ffmpeg.c:777: error: 'bgav_metadata_t' has no member named 'title'
wl-showstatus --package-version
#export DEPENDANCIES=gavl,libmpeg2
export DEPENDANCIES=gavl,libmpeg2,libtiff,libpng,libogg,libvorbis,libtheora,libspeex,libdvdread,flac,libmad,liba52,libdca,libcdio,libdl
export OPTIONALDEPENDANCIES=gmerlin,musepack
export BUILDDEPENDANCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL2
#export DOWNLOADURL="http://sourceforge.net/projects/gmerlin/files/"
export DOWNLOADURL="http://sourceforge.net/projects/gmerlin/files/gmerlin-avdecoder/"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=http://downloads.sourceforge.net/gmerlin/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
tar xfz $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd $BASENAME-$VERSION
## fix redefinition of wcsnicmp (version 1.0.0)
#mv lib/libw32dll/wine/ext.h lib/libw32dll/wine/ext.h.bak
#sed -e "s?^\(.*wcsnicmp.*\)?//\1?" lib/libw32dll/wine/ext.h.bak > lib/libw32dll/wine/ext.h
# fix missing png_set_gray_1_2_4_to_8 in lib/pngreader.c (version >= 1.0.1)
sed -i.bak -e "s/png_set_gray_1_2_4_to_8/png_set_expand_gray_1_2_4_to_8/" lib/pngreader.c
# avoid glob.h in lib/subread.c (breaks subtitle detection) (version >= 1.2.0)
patch -ulbf lib/subread.c << EOF
@@ -28,3 +28,5 @@
 #include <limits.h>
+#ifndef _WIN32
 #include <glob.h>
+#endif

@@ -748,3 +750,5 @@
   bgav_subtitle_reader_context_t *new;
+#ifndef _WIN32
   glob_t glob_buf;
+#endif
   int i;
@@ -771,2 +775,5 @@

+#ifdef _WIN32
+  return NULL;
+#else
   if(glob(pattern, 0, NULL, &glob_buf))
@@ -818,2 +825,3 @@
   return ret;
+#endif
   }
EOF
# fix missing localtime_r in lib/demux_quicktime.c (version >= 1.2.0)
mv lib/demux_quicktime.c lib/demux_quicktime.c.bak &&
echo "#define _POSIX_THREAD_SAFE_FUNCTIONS" > lib/demux_quicktime.c &&
cat lib/demux_quicktime.c.bak >> lib/demux_quicktime.c
# fix missing poll.h in (version >= 1.0.1)
sed -i.bak -e "s?^#include <poll\.h>?#ifdef _WIN32\n#define poll WSAPoll\n#else\n&\n#endif?" lib/rtp.c
# skip making tests
cat > tests/Makefile.in << EOF
all:
install:
clean:
EOF
## fix missing glibtoolize
#ln -s `which libtoolize` glibtoolize
#./autogen.sh
autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
# fix invalid parameter -no-undefined
sed -i.bak -e "s/-no-undefined/-Wl,-no-undefined/" configure
# fix detection of pthread library
sed -i.bak2 -e "s/-lpthreadGC2/-lpthread/" configure
# fix detection of musepack
sed -i.bak3 -e "s?mpcdec/mpcdec\.h?mpc/mpcdec.h?" configure lib/demux_musepack.c
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-doxygen --with-w32-path=$W32APILIBDIR LDFLAGS="-no-undefined -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-doxygen --with-w32-path=$W32APILIBDIR &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-win32 --without-x --without-doxygen --with-w32-path=$W32APILIBDIR CFLAGS="-I$MINGWPREFIX/include/libdl-win32 $(pkg-config --define-prefix --cflags-only-I libopenjp2)" &&
 #C_INCLUDE_PATH=$MINGWPREFIX/ffmpeg1/include:$C_INCLUDE_PATH CPLUS_INCLUDE_PATH=$MINGWPREFIX/ffmpeg1/include:$CPLUS_INCLUDE_PATH LIBRARY_PATH=$MINGWPREFIX/ffmpeg1/lib:$LIBRARY_PATH LD_RUN_PATH=$MINGWPREFIX/ffmpeg1/lib:$LD_RUN_PATH PKG_CONFIG_PATH=$MINGWPREFIX/ffmpeg1/lib/pkgconfig:$PKG_CONFIG_PATH PATH=$MINGWPREFIX/ffmpeg1/bin:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-win32 --without-x --without-doxygen --with-w32-path=$W32APILIBDIR CFLAGS="-I$MINGWPREFIX/include/libdl-win32" &&
 #C_INCLUDE_PATH=$MINGWPREFIX/libav/include:$C_INCLUDE_PATH CPLUS_INCLUDE_PATH=$MINGWPREFIX/libav/include:$CPLUS_INCLUDE_PATH LIBRARY_PATH=$MINGWPREFIX/libav/lib:$LIBRARY_PATH LD_RUN_PATH=$MINGWPREFIX/libav/lib:$LD_RUN_PATH PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig:$PKG_CONFIG_PATH PATH=$MINGWPREFIX/libav/bin:$PATH ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared --enable-win32 --without-x --without-doxygen CFLAGS="-I$MINGWPREFIX/include/libdl-win32" &&
 # fix redefinition of struct pollfd (version >= 1.0.1)
 echo "#define HAVE_POLL 1" >> include/config.h &&
 #sed -i.bak -e "s?/lib/pkgconfig\(/lib[^ ]*\.a\)?/lib\1?g" lib/Makefile &&
 wl-showstatus build-install &&
 make install &&
 #( make -j1 all install || make -j1 all install LIBS="-lpng.dll" ) &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



