export NAME="libstrophe"
export STATUS=
export URL=http://strophe.im/libstrophe/
#export URL=https://github.com/strophe/libstrophe
export BASENAME=libstrophe
#export DESCRIPTION="libstrophe is a minimal XMPP library written in C."
export DESCRIPTION="A simple, lightweight C library for writing XMPP clients"
export CATEGORY=communication
export TYPE=library
#export VERSION=0.9.1
#export VERSIONDATE=20180122
#export VERSION=0.9.2
#export VERSIONDATE=20180223
#export VERSION=0.9.3
#export VERSIONDATE=20191011
####configure: error: res_query() not found with LIBS="-lresolv"
#export VERSION=0.10.0
#export VERSIONDATE=20200916
#export VERSION=0.10.1
#export VERSIONDATE=20201224
#export VERSION=0.11.0
#export VERSIONDATE=20211029
#export VERSION=0.12.0
#export VERSIONDATE=20220510
#export VERSION=0.12.1
#export VERSIONDATE=20220705
#export VERSION=0.12.2
#export VERSIONDATE=20220808
#export VERSION=0.12.3
#export VERSIONDATE=20230803
export VERSION=0.13.0
export VERSIONDATE=20240201
wl-showstatus --package-version
#export DEPENDENCIES=expat,c-ares,openssl
export DEPENDENCIES=expat,c-ares,gnutls
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export LICENSEFILE=COPYING
#export LICENSETYPE=GPL
export LICENSEFILE=LICENSE.txt
export LICENSETYPE=MIT
export DOWNLOADURL="https://github.com/strophe/libstrophe/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/strophe/libstrophe/releases/download/$VERSION/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://github.com/strophe/libstrophe/releases/download/$VERSION/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xJ --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix missing getpass in examples/bot.c (version >= 0.12.0)
mv examples/bot.c examples/bot.c.bak
cat > examples/bot.c << EOF
#include <io.h>
#include <stdio.h>
#include <conio.h>
static char *getpass (const char *prompt)
{
  static char buf[128];
  size_t i;
  fputs(prompt, stderr);
  fflush(stderr);
  for (i = 0; i < sizeof(buf) - 1; i++) {
    buf[i] = _getch();
    if (buf[i] == '\r' || buf[i] == '\r')
      break;
  }
  buf[i] = 0;
  fputs("\n", stderr);
  return buf;
}
EOF
cat examples/bot.c.bak >> examples/bot.c
# fix missing getpass in examples/complex.c (version >= 0.12.0)
mv examples/complex.c examples/complex.c.bak
cat > examples/complex.c << EOF
#include <io.h>
#include <stdio.h>
#include <conio.h>
static char *getpass (const char *prompt)
{
  static char buf[128];
  size_t i;
  fputs(prompt, stderr);
  fflush(stderr);
  for (i = 0; i < sizeof(buf) - 1; i++) {
    buf[i] = _getch();
    if (buf[i] == '\r' || buf[i] == '\r')
      break;
  }
  buf[i] = 0;
  fputs("\n", stderr);
  return buf;
}
EOF
cat examples/complex.c.bak >> examples/complex.c
# fix undefined EBADFD in src/compression.c (version >= 0.13.0)
patch -ulbf src/compression.c << EOF
@@ -65,2 +65,5 @@
         strophe_error(comp->conn->ctx, "zlib", "inflate error %d", ret);
+#ifndef EBADFD
+#define EBADFD EBADF
+#endif
         comp->conn->error = EBADFD;
EOF
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --without-libxml2 --enable-cares LDFLAGS="-Wl,--as-needed -lws2_32" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --with-gnutls --without-libxml2 --enable-cares libcares_CFLAGS= libcares_LIBS="-lcares" LDFLAGS="-Wl,--as-needed -lws2_32" &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



