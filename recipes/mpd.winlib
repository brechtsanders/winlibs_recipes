export NAME="Music Player Daemon (MPD)"
export STATUS=
export URL=https://www.musicpd.org/
export BASENAME=mpd
export DESCRIPTION="Music Player Daemon (MPD) is a flexible, powerful, server-side application for playing music. Through plugins and libraries it can play a variety of sound files while being controlled by its network protocol."
export CATEGORY=audio
export TYPE=application
#export VERSION=0.20.10
#export VERSIONDATE=20170829
#export VERSION=0.20.11
#export VERSIONDATE=20171019
#export VERSION=0.20.12
#export VERSIONDATE=20171126
#export VERSION=0.20.13
#export VERSIONDATE=20171219
#export VERSION=0.20.14
#export VERSIONDATE=20180102
#export VERSION=0.20.15
#export VERSIONDATE=20180106
#export VERSION=0.20.16
#export VERSIONDATE=20180204
#export VERSION=0.20.17
#export VERSIONDATE=20180211
#export VERSION=0.20.18
#export VERSIONDATE=20180225
#export VERSION=0.20.19
#export VERSIONDATE=20180427
#export VERSION=0.20.20
#export VERSIONDATE=20180522
#export VERSION=0.20.21
#export VERSIONDATE=20180818
#export VERSION=0.20.22
#export VERSIONDATE=20181024
export VERSION=0.20.23
export VERSIONDATE=20181030
#####src/decoder/plugins/FluidsynthDecoderPlugin.cxx:139:48: error: cannot convert 'StringPointer<wchar_t>::const_pointer_type {aka const wchar_t*}' to 'const char*' for argument '2' to 'int fluid_player_add(fluid_player_t*, const char*)'
export DEPENDENCIES=icu,libao,audiofile,flac,libcurl,expat,faad2,libid3tag,jack,libmad,libmodplug,lame,libogg,libvorbis,libopus,libsamplerate,libshout,libsndfile,sqlite3,twolame,libupnp,libyajl,zlib
export OPTIONALDEPENDENCIES=
#export OPTIONALDEPENDENCIES=fluidsynth,libgme
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
#export VERSION=0.21
#export VERSIONDATE=20181101
####Dependency boost found: NO found '1.57' but need: '>= 1.58'
#export VERSION=0.21.1
#export VERSIONDATE=20181104
#export VERSION=0.21.2
#export VERSIONDATE=20181112
#export VERSION=0.21.3
#export VERSIONDATE=20181116
#export VERSION=0.21.4
#export VERSIONDATE=20190105
#export VERSION=0.21.5
#export VERSIONDATE=20190222
#export VERSION=0.21.6
#export VERSIONDATE=20190318
#export VERSION=0.21.7
#export VERSIONDATE=20190403
#export VERSION=0.21.8
#export VERSIONDATE=20190423
#export VERSION=0.21.9
#export VERSIONDATE=20190521
#export VERSION=0.21.10
#export VERSIONDATE=20190606
#export VERSION=0.21.11
#export VERSIONDATE=20190703
#export VERSION=0.21.12
#export VERSIONDATE=20190804
#export VERSION=0.21.13
#export VERSIONDATE=20190806
#export VERSION=0.21.14
#export VERSIONDATE=20190821
#export VERSION=0.21.15
#export VERSIONDATE=20190926
#export VERSION=0.21.16
#export VERSIONDATE=20191016
####doc\meson.build:3:0: ERROR:  Program(s) ['sphinx-build'] not found or not executable
#export VERSION=0.21.17
#export VERSIONDATE=20191217
#export VERSION=0.21.18
#export VERSIONDATE=20191225
#export VERSION=0.21.19
#export VERSIONDATE=20200118
#export VERSION=0.21.20
#export VERSIONDATE=20200217
#export VERSION=0.21.21
#export VERSIONDATE=20200320
#export VERSION=0.21.22
#export VERSIONDATE=20200403
#export VERSION=0.21.23
#export VERSIONDATE=20200423
#export VERSION=0.21.24
#export VERSIONDATE=20200611
#export VERSION=0.21.25
#export VERSIONDATE=20200707
#export VERSION=0.21.26
#export VERSIONDATE=20200921
#export VERSION=0.22.1
#export VERSIONDATE=20201017
#export VERSION=0.22.2
#export VERSIONDATE=20201029
#export VERSION=0.22.3
#export VERSIONDATE=20201106
#export VERSION=0.22.4
#export VERSIONDATE=20210122
#export VERSION=0.22.5
#export VERSIONDATE=20210216
#export VERSION=0.22.6
#export VERSIONDATE=20210216
#export VERSION=0.22.7
#export VERSIONDATE=20210520
#export VERSION=0.22.8
#export VERSIONDATE=20210523
#export VERSION=0.22.9
#export VERSIONDATE=20210624
#export VERSION=0.22.10
#export VERSIONDATE=20210807
#export VERSION=0.22.11
#export VERSIONDATE=20210825
#export VERSION=0.23
#export VERSIONDATE=20211015
#export VERSION=0.23.1
#export VERSIONDATE=20211019
#export VERSION=0.23.2
#export VERSIONDATE=20211022
#export VERSION=0.23.3
#export VERSIONDATE=20211101
#export VERSION=0.23.4
#export VERSIONDATE=20211111
#export VERSION=0.23.5
#export VERSIONDATE=20211202
#export VERSION=0.23.6
#export VERSIONDATE=20220315
#export VERSION=0.23.7
#export VERSIONDATE=20220510
#export VERSION=0.23.8
#export VERSIONDATE=20220709
#export VERSION=0.23.9
#export VERSIONDATE=20220819
#export VERSION=0.23.10
#export VERSIONDATE=20221015
#export VERSION=0.23.11
#export VERSIONDATE=20221129
#export VERSION=0.23.12
#export VERSIONDATE=20230118
####src/input/plugins/ArchiveInputPlugin.cxx:62:55: error: no matching function for call to 'Path::FromFS(const char*&)'
wl-showstatus --package-version
#export DEPENDENCIES=boost,icu,libao,audiofile,flac,libcurl,expat,faad2,libid3tag,jack,libmad,libmodplug,lame,libogg,libvorbis,libopus,libsamplerate,libshout,libsndfile,sqlite3,twolame,libupnp,libyajl,zlib
#export OPTIONALDEPENDENCIES=
##export OPTIONALDEPENDENCIES=fluidsynth,libgme
#export BUILDDEPENDENCIES=meson,ninja
#export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
#export DOWNLOADURL="https://www.musicpd.org/download.html"
export DOWNLOADURL="https://www.musicpd.org/download/mpd/"
#export DOWNLOADURL="https://github.com/MusicPlayerDaemon/MPD/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://www.musicpd.org/download/mpd/$(echo $VERSION|sed -e "s/^\([0-9]*\.[0-9]*\)\..*$/\1/")/$BASENAME-$VERSION.tar.xz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfJ $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.xz
cd $BASENAME-$VERSION
# fix type mismatch in src/sticker/StickerDatabase.cxx
patch -ulbf src/sticker/StickerDatabase.cxx << EOF
@@ -111,3 +111,3 @@

-       ret = sqlite3_open(path.c_str(), &sticker_db);
+       ret = sqlite3_open16(path.c_str(), &sticker_db);
        if (ret != SQLITE_OK) {
EOF
# fix undefined fs_converter in src/fs/Charset.cxx
patch -ulbf src/fs/Charset.cxx << EOF
@@ -61,3 +61,3 @@
 {
-#ifdef HAVE_ICU_CONVERTER
+#ifdef HAVE_FS_CHARSET
        delete fs_converter;
EOF
wl-showstatus configure &&
 # mkdir -p m4 &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 #INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$PYDIR/include${C_INCLUDE_PATH:+:$C_INCLUDE_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed -Wl,-no-undefined" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM LDFLAGS="-Wl,--as-needed" &&
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-pulse --disable-mpg123 --disable-wavpack --disable-iso9660 --disable-bzip2 &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-pulse --disable-mpg123 --disable-wavpack --disable-iso9660 --disable-bzip2 --disable-fluidsynth --disable-gme --disable-wildmidi &&
 ## fix building DLLs
 #mv libtool libtool.bak &&
 #sed -e "s/\(allow_undefined=\)yes/\1no/" libtool.bak > libtool &&
 wl-showstatus build &&
 make &&
 wl-showstatus build-install &&
 make install-strip &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



## fix missing fs_converter in src/fs/Charset.cxx (version >= 0.21.4)
#patch -ulbf src/fs/Charset.cxx << EOF
#@@ -61,3 +61,3 @@
# {
#-#ifdef HAVE_ICU_CONVERTER
#+#ifdef HAVE_FS_CHARSET
#        delete fs_converter;
#EOF
## fix missing setenv in src/output/plugins/PulseOutputPlugin.cxx (version >= 0.21.18)
#patch -ulbf src/output/plugins/PulseOutputPlugin.cxx << EOF
#@@ -183,4 +183,9 @@
# {
#+#ifdef _WIN32
#+       putenv("PULSE_PROP_media.role=music");
#+       putenv("PULSE_PROP_application.icon_name=mpd");
#+#else
#        setenv("PULSE_PROP_media.role", "music", true);
#        setenv("PULSE_PROP_application.icon_name", "mpd", true);
#+#endif
# }
#EOF
### avoid unicode strings
###for F in src/input/plugins/ArchiveInputPlugin.cxx; do
###for F in src/util/StringAPI.hxx src/archive/ArchivePlugin.hxx src/fs/FileSystem.hxx; do
##for F in $(find -name '*.cxx'); do
## mv $F $F.bak &&
## echo "#undef UNICODE" > $F &&
## echo "#undef _UNICODE" >> $F &&
## cat $F.bak >> $F
##done
## fix src/sticker/StickerDatabase.cxx (version >= 0.21.26)
#patch -ulbf src/sticker/StickerDatabase.cxx << EOF
#@@ -110,3 +110,7 @@
#
#+#ifdef _WIN32
#+       ret = sqlite3_open16(path.c_str(), &sticker_db);
#+#else
#        ret = sqlite3_open(path.c_str(), &sticker_db);
#+#endif
#        if (ret != SQLITE_OK) {
#EOF
## fix src/sticker/Database.cxx (version >= 0.22.1)
#patch -ulbf src/sticker/Database.cxx << EOF
#@@ -84,3 +84,3 @@
# StickerDatabase::StickerDatabase(Path path)
#-       :db(path.c_str())
#+       :db(path.ToUTF8().c_str())
# {
#EOF
## fix src/decoder/plugins/FluidsynthDecoderPlugin.cxx (version >= 0.22.1)
#patch -ulbf src/decoder/plugins/FluidsynthDecoderPlugin.cxx << EOF
#@@ -141,3 +141,3 @@
#
#-       ret = fluid_player_add(player, path_fs.c_str());
#+       ret = fluid_player_add(player, path_fs.ToUTF8().c_str());
#        if (ret != 0) {
#@@ -200,3 +200,3 @@
# {
#-       return fluid_is_midifile(path_fs.c_str());
#+       return fluid_is_midifile(path_fs.ToUTF8().c_str());
# }
#EOF
## fix src/decoder/plugins/Mpg123DecoderPlugin.cxx (version >= 0.22.1)
#patch -ulbf src/decoder/plugins/Mpg123DecoderPlugin.cxx << EOF
#@@ -198,3 +198,3 @@
#        AudioFormat audio_format;
#-       if (!mpd_mpg123_open(handle, path_fs.c_str(), audio_format))
#+       if (!mpd_mpg123_open(handle, path_fs.ToUTF8().c_str(), audio_format))
#                return;
#@@ -289,3 +289,3 @@
#        try {
#-               if (!mpd_mpg123_open(handle, path_fs.c_str(), audio_format)) {
#+               if (!mpd_mpg123_open(handle, path_fs.ToUTF8().c_str(), audio_format)) {
#                        return false;
#EOF
## fix src/db/plugins/upnp/UpnpDatabasePlugin.cxx (version >= 0.23.11)
#patch -ulbf src/db/plugins/upnp/UpnpDatabasePlugin.cxx << EOF
#@@ -79,3 +79,3 @@
#
#-       const char* interface;
#+       const char* iface;
#
#@@ -85,3 +85,3 @@
#                 event_loop(_event_loop),
#-                interface(block.GetBlockValue("interface", nullptr)) {}
#+                iface(block.GetBlockValue("interface", nullptr)) {}
#
#@@ -161,3 +161,3 @@
# {
#-       handle = UpnpClientGlobalInit(interface);
#+       handle = UpnpClientGlobalInit(iface);
#
#EOF
### don't use Unicode
##sed -i.bak -e "s?^.*-D_*UNICODE?#&?" meson.build
#mkdir -p build_both &&
# wl-showstatus configure &&
# #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -D documentation=false . build_both &&
# #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -D documentation=false -Dcpp_args="-DUNICODE -D_UNICODE" -Dc_link_args="-municode" . build_both &&
# #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dzzip=disabled -Diso9660=disabled -Dwavpack=disabled -Dmikmod=disabled -Dwildmidi=disabled -Dgme=disabled -Dudisks=disabled -Dsyslog=disabled -Dsystemd=disabled -Dtest=false -Diconv=disabled -Dicu=disabled . build_both &&
# PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dzzip=disabled -Diso9660=disabled -Dwavpack=disabled -Dmikmod=disabled -Dwildmidi=disabled -Dgme=disabled -Dudisks=disabled -Dsyslog=disabled -Dsystemd=disabled -Dtest=false -Diconv=disabled -Dicu=disabled -Dc_args="-DUNICODE -D_UNICODE" -Dcpp_args="-DUNICODE -D_UNICODE" . build_both &&
# #PKG_CONFIG= PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib $PYDIR/python.exe $(which meson.py) --prefix $INSTALLPREFIX --backend ninja --buildtype release --strip --default-library both -Dtcp=true -Dipv6=enabled -Dlocal_socket=true -Ddatabase=true -Dupnp=enabled -Dlibmpdclient=enabled -Dneighbor=true -Dudisks=disabled -Dwebdav=enabled -Ddaemon=true -Dsyslog=disabled -Depoll=false -Deventfd=false -Dsignalfd=false -Dinotify=false -Dio_uring=disabled -Dsystemd=disabled -Ddocumentation=disabled -Dhtml_manual=false -Dmanpages=false -Dtest=false -Dfuzzer=false . build_both &&
# #sed -i.bak -e "s?\(MPD_ICON ICON \"\).*/\([^/]*\"\)?\1$(pwd)/win32/res/\2?" build_both/win32/res/mpd.rc &&
# #sed -i.bak -e "s?\(MPD_ICON ICON \".*\)/?\1\\\\?" build_both/win32/res/mpd.rc &&
# #sed -i.bak -e "s?\(MPD_ICON ICON \"\).*/\([^/]*\"\)?\1$(pwd)/win32/res/\2?" build_both/win32/res/mpd.rc &&
# sed -i.bak -e '/^MPD_ICON/ s/\\/\//g' build_both/win32/res/mpd.rc &&
# PATH=$PATH:$PYDIR PYTHONPATH=${PYTHONPATH:+$PYTHONPATH:}$MINGWPREFIX/lib ninja -Cbuild_both install &&
#    echo OK && find . -name '*.a'
## wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



#cat >> src/fs/Path.hxx << EOF
##include <wchar.h>
##include <winnls.h>
#std::wstring stringToWstring(const std::string& str)
#{
#    int size_needed = MultiByteToWideChar(CP_UTF8, 0, &str[0], (int)str.size(), NULL, 0);
#    std::wstring wstrTo(size_needed, 0);
#    MultiByteToWideChar(CP_UTF8, 0, &str[0], (int)str.size(), &wstrTo[0], size_needed);
#    return wstrTo;
#}



