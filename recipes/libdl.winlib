export NAME="libdl (dlfcn-win32)"
export STATUS=
#export URL=http://code.google.com/p/dlfcn-win32/
export URL=https://github.com/dlfcn-win32/dlfcn-win32
export BASENAME=libdl
export DESCRIPTION="This library implements a wrapper for dlfcn, as specified in POSIX and SUS, around the dynamic link library functions found in the Windows API."
export CATEGORY=system,portability
export TYPE=library
#export VERSION=8
#export VERSION=11
#export VERSION=19
#export VERSIONDATE=20100505
#export VERSION=1.0.0
#export VERSIONDATE=20141110
#export VERSION=1.1.0
#export VERSIONDATE=20170313
#export VERSION=1.1.1
#export VERSIONDATE=20170504
#export VERSION=1.1.2
#export VERSIONDATE=20180713
#export VERSION=1.2.0
#export VERSIONDATE=20190521
#export VERSION=1.3.0
#export VERSIONDATE=20210227
export VERSION=1.3.1
export VERSIONDATE=20220420
wl-showstatus --package-version
export DEPENDENCIES=
export OPTIONALDEPENDENCIES=
#export BUILDDEPENDENCIES=pexports
#export OPTIONALBUILDDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="http://code.google.com/p/dlfcn-win32/downloads/list dlfcn-win32-r"
export DOWNLOADURL="https://github.com/dlfcn-win32/dlfcn-win32/releases v"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=http://dlfcn-win32.googlecode.com/files/dlfcn-win32-r$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://github.com/dlfcn-win32/dlfcn-win32/releases/download/v1.0.0/dlfcn-win32-static-1.0.0.tar.gz
#export DOWNLOADSOURCEURL=https://github.com/dlfcn-win32/dlfcn-win32/archive/v$VERSION.zip
export DOWNLOADSOURCEURL=https://github.com/dlfcn-win32/dlfcn-win32/archive/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
#mv $TARBALLDIR/$BASENAME/v1.0.0 $TARBALLDIR/$BASENAME/dlfcn-win32-$VERSION.zip || mv $TARBALLDIR/$BASENAME/v1.0.0.zip $TARBALLDIR/$BASENAME/dlfcn-win32-$VERSION.zip
#mv $TARBALLDIR/$BASENAME/v$VERSION.tar.gz $TARBALLDIR/$BASENAME/dlfcn-win32-$VERSION.tar.gz
wl-wait4deps
#tar xj --force-local -f $TARBALLDIR/$BASENAME/dlfcn-win32-r$VERSION.tar.bz2
#cd dlfcn-win32-r$VERSION
#unzip -oq $TARBALLDIR/$BASENAME/dlfcn-win32-$VERSION.zip
#tar xz --force-local -f $TARBALLDIR/$BASENAME/dlfcn-win32-$VERSION.tar.gz
tar xz --force-local -f $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd dlfcn-win32-$VERSION
## fix for C++ (version <= 19)
#patch -ulbf dlfcn.h << EOF
#--- dlfcn.h  2007-06-28 07:50:08.000000000 +0200
#+++ dlfcn.h  2014-08-30 21:31:42.000000000 +0200
#@@ -38,4 +38,8 @@
# #define RTLD_NEXT       0
#
#+#ifdef __cplusplus
#+extern "C" {
#+#endif
#+
# void *dlopen ( const char *file, int mode );
# int   dlclose( void *handle );
#@@ -43,3 +47,7 @@
# char *dlerror( void );
#
#+#ifdef __cplusplus
#+}
#+#endif
#+
# #endif /* DLFCN_H */
#
#EOF
# create libdl.la manually
mkdir -p $INSTALLPREFIX/lib
cat > $INSTALLPREFIX/lib/libdl.la << EOF
# -ldl - a libtool library file
# Generated by hand - GNU libtool 0.0.0
dlname='libdl.dll'
library_names='libdl.dll.a'
old_library='libdl.a'
dependency_libs=''
current=0
age=0
revision=1
installed=yes
shouldnotlink=no
dlopen=''
dlpreopen=''
libdir='$INSTALLPREFIX/lib'
EOF
wl-showstatus configure &&
 #./configure --prefix=$INSTALLPREFIX --libdir=$INSTALLPREFIX/lib --incdir=$INSTALLPREFIX/include --enable-shared --enable-static && 
 #./configure --prefix=$INSTALLPREFIX --libdir=$INSTALLPREFIX/lib --incdir=$INSTALLPREFIX/include --enable-shared --enable-static --enable-stripping --disable-msvc --disable-wine && 
 ./configure --prefix=$INSTALLPREFIX --cc=${CC:-gcc} --libdir=$INSTALLPREFIX/lib --incdir=$INSTALLPREFIX/include/libdl-win32 --enable-shared --enable-static --enable-stripping --disable-wine && 
 wl-showstatus build &&
 make all &&
 wl-showstatus build-install &&
 make -j1 install && 
 ## fix libdl.dll.a (version <= 1.0.0)
 #pexports libdl.dll > libdl.def &&
 #dlltool -D libdl.dll -l $INSTALLPREFIX/lib/libdl.dll.a -d libdl.def &&
 ## manually install dlfcn-win32-config.cmake
 #mkdir -p $INSTALLPREFIX/cmake &&
 #sed -e "s?@PACKAGE_INIT@??; s?set_and_check?set?; s?@PACKAGE_INCLUDE_INSTALL_DIR@?\${CMAKE_CURRENT_LIST_DIR}/../include?" dlfcn-win32-config.cmake.in > $INSTALLPREFIX/cmake/dlfcn-win32-config.cmake &&
 #touch $INSTALLPREFIX/cmake/dlfcn-win32-targets.cmake &&
 wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf dlfcn-win32-$VERSION
####CFLAGS="-I$MINGWPREFIX/include/libdl-win32" LDFLAGS="-Wl,--as-needed -ldl" 
####TO DO: use separate (include) folder so software that does not need libdl will default to using Windows methods



#export BUILDDEPENDENCIES=cmake,ninja
#export OPTIONALBUILDDEPENDENCIES=
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_static &&
# wl-showstatus configure &&
# cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTS:BOOL=OFF -S. -Bbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf dlfcn-win32-$VERSION
