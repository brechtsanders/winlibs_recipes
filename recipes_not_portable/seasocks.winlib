export NAME="Seasocks"
export STATUS=
export URL=https://github.com/mattgodbolt/seasocks
export BASENAME=seasocks
export DESCRIPTION="Simple, small, C++ embeddable webserver with WebSockets support"
export CATEGORY=communication
export TYPE=library
#export VERSION=1.4.4
#export VERSIONDATE=20210825
export VERSION=1.4.5
export VERSIONDATE=20220829
####src/main/c/HybiPacketDecoder.cpp:34:10: fatal error: byteswap.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=pthreads,zlib
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=cmake,ninja
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=LICENSE
export LICENSETYPE=BSD
export DOWNLOADURL="https://github.com/mattgodbolt/seasocks/releases"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/mattgodbolt/seasocks/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix src/main/c/seasocks/request.h (version >= 1.4.4)
patch -ulbf src/main/c/seasocks/request.h << EOF
@@ -29,3 +29,7 @@

+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <netinet/in.h>
+#endif

EOF
# fix src/main/c/seasocks/StringUtil.h (version >= 1.4.4)
patch -ulbf src/main/c/seasocks/StringUtil.h << EOF
@@ -27,3 +27,7 @@

+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <netinet/in.h>
+#endif

EOF
# fix src/main/c/seasocks/Connection.h (version >= 1.4.4)
patch -ulbf src/main/c/seasocks/Connection.h << EOF
@@ -33,5 +33,8 @@

+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <netinet/in.h>
-
 #include <sys/socket.h>
+#endif

EOF
# fix src/main/c/Server.cpp (version >= 1.4.4)
patch -ulbf src/main/c/Server.cpp << EOF
@@ -35,4 +35,8 @@

+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <netinet/in.h>
 #include <netinet/tcp.h>
+#endif

EOF
# fix CMakeLists.txt (version >= 1.4.4)
patch -ulbf CMakeLists.txt << EOF
@@ -3,3 +3,3 @@

-if(WIN32)
+if(MSVC)
     message(FATAL_ERROR "\${PROJECT_NAME} does not support Windows")
EOF
# fix src/main/c/Connection.cpp (version >= 1.4.4)
patch -ulbf src/main/c/Connection.cpp << EOF
@@ -46,3 +46,7 @@

+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <sys/socket.h>
+#endif
 #include <sys/stat.h>
EOF
# fix src/main/c/HybiAccept.cpp (version >= 1.4.4)
patch -ulbf src/main/c/HybiAccept.cpp << EOF
@@ -30,3 +30,7 @@

+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <arpa/inet.h>
+#endif

EOF
# fix src/main/c/HybiPacketDecoder.cpp (version >= 1.4.4)
patch -ulbf src/main/c/HybiPacketDecoder.cpp << EOF
@@ -28,3 +28,7 @@

+#ifdef _WIN32
+#include <winsock2.h>
+#else
 #include <arpa/inet.h>
+#endif
 #include <byteswap.h>
EOF
mkdir -p build_static build_shared &&
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DSEASOCKS_SHARED:BOOL=OFF -DDEFLATE_SUPPORT:BOOL=ON -DSEASOCKS_EXAMPLE_APP:BOOL=OFF -DCOVERAGE:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DUNITTESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_static &&
 #-DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) 
 wl-showstatus configure &&
 cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DSEASOCKS_SHARED:BOOL=ON -DDEFLATE_SUPPORT:BOOL=ON -DSEASOCKS_EXAMPLE_APP:BOOL=OFF -DCOVERAGE:BOOL=OFF -DBUILD_TESTING:BOOL=OFF -DUNITTESTS:BOOL=OFF -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_shared &&
 wl-showstatus build-install &&
 ninja -Cbuild_static install/strip &&
 wl-showstatus build-install &&
 ninja -Cbuild_shared install/strip &&
    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####Linux/Unix only



