export NAME="Slurm"
export STATUS=
export URL=https://slurm.schedmd.com/
export BASENAME=slurm
export DESCRIPTION="Slurm Workload Manager. Slurm is an open-source cluster resource management and job scheduling system that strives to be simple, scalable, portable, fault-tolerant, and interconnect agnostic. Slurm currently has been tested only under Linux."
export CATEGORY=
export TYPE=library
#export VERSION=23-02-2-1
#export VERSIONDATE=20230507
#export VERSION=23-02-3-1
#export VERSIONDATE=20230616
#export VERSION=23-02-4-1
#export VERSIONDATE=20230728
#export VERSION=23-02-5-1
#export VERSIONDATE=20230908
#export VERSION=23-02-6-1
#export VERSIONDATE=20231012
#export VERSION=23-11-0-1
#export VERSIONDATE=20231122
#export VERSION=23-11-1-1
#export VERSIONDATE=20231214
####checking for uid_t and gid_t data sizes)... configure: error: unexpected size for uid_t or gid_t
#export VERSION=23-11-2-1
#export VERSIONDATE=20240124
#export VERSION=23-11-3-1
#export VERSIONDATE=20240125
#export VERSION=23-11-4-1
#export VERSIONDATE=20240223
#export VERSION=23-11-5-1
#export VERSIONDATE=20240322
#export VERSION=23-11-6-1
#export VERSIONDATE=20240417
#export VERSION=23-11-7-1
#export VERSIONDATE=20240522
#export VERSION=24-05-0-1
#export VERSIONDATE=20240531
#export VERSION=23-11-8-1
#export VERSIONDATE=20240614
#export VERSION=23-11-10-1
#export VERSIONDATE=20240828
#export VERSION=24-01-1-1
#export VERSIONDATE=20240628
#export VERSION=24-05-2-1
#export VERSIONDATE=20240801
#export VERSION=24-05-3-1
#export VERSIONDATE=20240828
#export VERSION=24-05-4-1
#export VERSIONDATE=20241024
export VERSION=24-11-0-1
export VERSIONDATE=20241130
####configure: error: unable to locate munge installation
wl-showstatus --package-version
export DEPENDENCIES=mman-win32,sys_wait_h,libcurl,lua,glib2,gtk2,munge
export OPTIONALDEPENDENCIES=libcxi
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=GPL
export DOWNLOADURL="https://github.com/SchedMD/slurm/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
export DOWNLOADSOURCEURL=https://github.com/SchedMD/slurm/archive/refs/tags/$BASENAME-$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xz --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.gz
cd slurm-slurm-$VERSION
# fix missing files
mkdir -p winfix/sys winfix/netinet winfix/arpa
echo "#include <winsock2.h>" > winfix/sys/socket.h
echo "#include <winsock2.h>" > winfix/netinet/in.h
echo "#include <winsock2.h>" > winfix/arpa/inet.h
echo "#include <winsock2.h>" > winfix/netdb.h
cat > winfix/syslog.h << EOF
EOF
# don't abort on uid_t/gid_t size issues
sed -i.bak -e "s/as_fn_error\(.*unexpected size for uid_t or gid_t\)/echo\1/" configure
wl-showstatus configure &&
 #wl-showstatus preconfigure &&
 #mkdir -p m4 &&
 ##libtoolize -i -c &&
 ##intltoolize -f -c &&
 #autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal &&
 #./autogen.sh &&
 #    echo OK
 ## fix building DLLs on 64-bit
 #if ( echo $RUNPLATFORM | grep -q x86_64 ); then
 # echo "AM_GNU_GETTEXT_VERSION([$(gettext --version|head -n1|sed -e "s/^.* \([0-9\.]*\) *$/\1/")])" >> configure.ac &&
 # autoreconf -f -i -I m4 -I $MINGWPREFIX/share/aclocal
 #fi
 ## allow building shared libraries when using clang
 #if ${CC:-gcc} --version|grep -q "^clang" && ! ${CC:-gcc} --help|grep auto-import; then
 # sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" configure
 # #sed -i.bak -e "s/\$LD --help 2>&1 | \(\$GREP\|grep\) 'auto-import'/true/" $(find -name configure)
 #fi &&
 ## fix confusion between MSVC and clang
 #if ${CC:-gcc} --version|grep -q "^clang"; then
 # sed -i.bak2 -e "s/\b\(cl\)\(\*\)/\1.exe\2/g; s/\(ld_shlibs\)=no/\1yes/" configure
 #fi &&
 #PATH=$PATH:$PERLDIR/../c/bin INTLTOOL_PERL="$PERLDIR/bin/perl.exe" 
 #PERL="$PERLDIR/bin/perl.exe -I$PERLDIR/lib" 
 #PYTHON=$PYDIR/python.exe 
 #PYTHON=$PYDIR/python.exe C_INCLUDE_PATH=$C_INCLUDE_PATH:$PYDIR/include 
 #PKG_CONFIG_PATH=$MINGWPREFIX/libav/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH} 
 #./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --enable-static --enable-shared LDFLAGS="-Wl,-no-undefined -Wl,--as-needed" &&
 ./configure --prefix=$INSTALLPREFIX --build=$BUILDPLATFORM --host=$RUNPLATFORM --disable-debug --disable-dependency-tracking --disable-pam --disable-x11 --disable-selinux CFLAGS="-I$PWD/winfix -I$MINGWPREFIX/include/mman-win32 -I$MINGWPREFIX/win32ports/include" LDFLAGS="-Wl,--as-needed -lmman -lws2_32" &&
 ## fix building DLLs
 #sed -i.bak -e "s/\(allow_undefined=\)yes/\1no/" libtool &&
 ## fix detection of shared libraries
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1file_magic ^x86 archive import|^x86 DLL|PE32+* executable (DLL)|pe-i386|pe-x86-64/; s/'file format pe-i386[^']*'/\"\$deplibs_check_method\"/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1none/" libtool &&
 #sed -i.bak2 -e "s/\(deplibs_check_method=\"\)[^\"]*/\1pass_all/" libtool &&
 #wl-showstatus build &&
 #make &&
 wl-showstatus build-install &&
 make install-strip &&
 #( make install-strip || ( make install && strip $INSTALLPREFIX/bin/*.{dll,exe} )) &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf slurm-slurm-$VERSION



