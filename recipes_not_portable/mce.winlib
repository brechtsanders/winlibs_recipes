export NAME="MCE"
export STATUS=
export URL=https://git.sailfishos.org/mer-core/mce
export BASENAME=mce
export DESCRIPTION="D-Bus Interface to the Mode Control Entity"
export CATEGORY=hardware
export TYPE=library
#export VERSION=1.106.3
#export VERSIONDATE=20200901
#export VERSION=1.106.4
#export VERSIONDATE=20200915
#export VERSION=1.106.5
#export VERSIONDATE=20200923
#export VERSION=1.106.6
#export VERSIONDATE=20210122
#export VERSION=1.106.7
#export VERSIONDATE=20210519
#export VERSION=1.108.0
#export VERSIONDATE=20211009
#export VERSION=1.108.1
#export VERSIONDATE=20211013
#export VERSION=1.109.2
#export VERSIONDATE=20220122
#export VERSION=1.110.0
#export VERSIONDATE=20220222
#export VERSION=1.111.0
#export VERSIONDATE=20220311
#export VERSION=1.111.1
#export VERSIONDATE=20221012
#export VERSION=1.112.0
#export VERSIONDATE=20221018
#export VERSION=1.113.0
#export VERSIONDATE=20221122
#export VERSION=1.114.0
#export VERSIONDATE=20221202
#export VERSION=1.114.1
#export VERSIONDATE=20230117
#export VERSION=1.115.0
#export VERSIONDATE=20230129
#export VERSION=1.115.1
#export VERSIONDATE=20230223
#export VERSION=1.115.2
#export VERSIONDATE=20230307
#export VERSION=1.115.3
#export VERSIONDATE=20231223
#export VERSION=1.115.4
#export VERSIONDATE=20240110
#export VERSION=1.115.5
#export VERSIONDATE=20240406
#export VERSION=1.115.6
#export VERSIONDATE=20240731
#export VERSION=1.115.7
#export VERSIONDATE=20240809
#export VERSION=1.115.8
#export VERSIONDATE=20240812
#export VERSION=1.115.9
#export VERSIONDATE=20241030
#export VERSION=1.115.10
#export VERSIONDATE=20241101
#export VERSION=1.115.11
#export VERSIONDATE=20241104
export VERSION=1.116.0
export VERSIONDATE=20250115
####datapipe.c:33:10: fatal error: linux/input.h: No such file or directory
wl-showstatus --package-version
export DEPENDENCIES=mce-dev
export OPTIONALDEPENDENCIES=
export BUILDDEPENDENCIES=
export OPTIONALBUILDDEPENDENCIES=
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://git.sailfishos.org/mer-core/mce/-/tags"
#export DOWNLOADURL="https://github.com/sailfishos/mce/releases"
export DOWNLOADURL="https://github.com/sailfishos/mce/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://git.sailfishos.org/mer-core/mce/-/archive/$VERSION/$BASENAME-$VERSION.tar.bz2
export DOWNLOADSOURCEURL=https://github.com/sailfishos/mce/archive/refs/tags/$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
#tar xj --force-local -f $TARBALLDIR/$BASENAME/$BASENAME-$VERSION.tar.bz2
tar xz --force-local -f $TARBALLDIR/$BASENAME/$VERSION.tar.gz
cd $BASENAME-$VERSION
# fix missing files
mkdir -p winfix
cat > winfix/syslog.h << EOF
#define LOG_EMERG   0
#define LOG_ALERT   1
#define LOG_CRIT    2
#define LOG_ERR     3
#define LOG_WARNING 4
#define LOG_NOTICE  5
#define LOG_INFO    6
#define LOG_DEBUG   7

////#define LOG_PRIMASK 0x07 //mask to extract priority part (internal)
////#define LOG_PRI(p) ((p) & LOG_PRIMASK)    //extract priority
////#define LOG_MAKEPRI(fac, pri) (((fac) << 3) | (pri))
///* facility codes */
//#define LOG_KERN     (0<<3)    //kernel messages
//#define LOG_USER     (1<<3)    //random user-level messages
//#define LOG_MAIL     (2<<3)    //mail system
//#define LOG_DAEMON   (3<<3)    //system daemons
//#define LOG_AUTH     (4<<3)    //security/authorization messages
//#define LOG_SYSLOG   (5<<3)    //messages generated internally by syslogd
//#define LOG_LPR      (6<<3)    //line printer subsystem
//#define LOG_NEWS     (7<<3)    //network news subsystem
//#define LOG_UUCP     (8<<3)    //UUCP subsystem
//#define LOG_CRON     (9<<3)    //clock daemon
//#define LOG_AUTHPRIV (10<<3)   //security/authorization messages (private)
//#define LOG_FTP      (11<<3)   //ftp daemon
///* option flags for openlog */
//#define LOG_PID    0x01    //log the pid with each message
//#define LOG_CONS   0x02    //log on the console if errors in sending
//#define LOG_ODELAY 0x04    //delay open until first syslog() (default)
//#define LOG_NDELAY 0x08    //don't delay open
//#define LOG_NOWAIT 0x10    //don't wait for console forks: DEPRECATED
//#define LOG_PERROR 0x20    //log to stderr as well
///* functions */
//static void openlog (const char *ident, int option, int facility) {}
//static void syslog (int priority, const char *format, ...) {}
//static void closelog (void) {}
EOF
wl-showstatus build &&
 #make CC="${CC:-gcc} $(pkg-config --cflags glib-2.0)" &&
 make CC="${CC:-gcc} -I$(pwd)/winfix $(pkg-config --cflags glib-2.0 dbus-1)" &&
    echo OK
# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION



