export NAME="Ceph"
export STATUS=
export URL=https://ceph.io/
#export URL=https://github.com/ceph/ceph
export BASENAME=ceph
export DESCRIPTION="Ceph is a distributed object, block, and file storage platform"
export CATEGORY=database
export TYPE=application
#export VERSION=12.2.13
#export VERSIONDATE=20200201
#export VERSION=12.2.14
#export VERSIONDATE=20220122
#export VERSION=13.2.9
#export VERSIONDATE=20200417
#export VERSION=13.2.10
#export VERSIONDATE=20200424
#export VERSION=14.2.6
#export VERSIONDATE=20200119
#export VERSION=14.2.7
#export VERSIONDATE=20200201
#export VERSION=14.2.8
#export VERSIONDATE=20200303
#export VERSION=14.2.9
#export VERSIONDATE=20200415
#export VERSION=14.2.10
#export VERSIONDATE=20200627
#export VERSION=14.2.11
#export VERSIONDATE=20200812
#export VERSION=14.2.12
#export VERSIONDATE=20201021
#export VERSION=14.2.13
#export VERSIONDATE=20201103
#export VERSION=14.2.14
#export VERSIONDATE=20201119
#export VERSION=14.2.15
#export VERSIONDATE=20201124
#export VERSION=14.2.16
#export VERSIONDATE=20201217
#export VERSION=14.2.17
#export VERSIONDATE=20210312
#export VERSION=14.2.18
#export VERSIONDATE=20210316
#export VERSION=14.2.19
#export VERSIONDATE=20210331
#export VERSION=14.2.20
#export VERSIONDATE=20210420
#export VERSION=14.2.21
#export VERSIONDATE=20210514
#export VERSION=14.2.22
#export VERSIONDATE=20210701
#export VERSION=15.1.0
#export VERSIONDATE=20200201
#export VERSION=15.1.1
#export VERSIONDATE=20200314
#export VERSION=15.2.0
#export VERSIONDATE=20200324
#export VERSION=15.2.1
#export VERSIONDATE=20200410
#export VERSION=15.2.2
#export VERSIONDATE=20200519
#export VERSION=15.2.3
#export VERSIONDATE=20200530
#export VERSION=15.2.4
#export VERSIONDATE=20200701
#export VERSION=15.2.5
#export VERSIONDATE=20200917
#export VERSION=15.2.6
#export VERSIONDATE=20201119
#export VERSION=15.2.8
#export VERSIONDATE=20201217
#export VERSION=15.2.9
#export VERSIONDATE=20210224
#export VERSION=15.2.10
#export VERSIONDATE=20210318
#export VERSION=15.2.11
#export VERSIONDATE=20210420
#export VERSION=15.2.11
#export VERSIONDATE=20210514
#export VERSION=15.2.14
#export VERSIONDATE=20210806
#export VERSION=15.2.15
#export VERSIONDATE=20211021
#export VERSION=15.2.16
#export VERSIONDATE=20220301
#export VERSION=16.0.0
#export VERSIONDATE=20200330
#export VERSION=16.1.0
#export VERSIONDATE=20210123
#export VERSION=16.2.0
#export VERSIONDATE=20210304
#export VERSION=16.2.1
#export VERSIONDATE=20210420
#export VERSION=16.2.2
#export VERSIONDATE=20210506
#export VERSION=16.2.3
#export VERSIONDATE=20210507
#export VERSION=16.2.4
#export VERSIONDATE=20210514
#export VERSION=16.2.5
#export VERSIONDATE=20210709
#export VERSION=16.2.6
#export VERSIONDATE=20210917
#export VERSION=16.2.7
#export VERSIONDATE=20220122
#export VERSION=16.2.8
#export VERSIONDATE=20220517
#export VERSION=16.2.9
#export VERSIONDATE=20220519
#export VERSION=16.2.13
#export VERSIONDATE=20210514
#export VERSION=17.0.0
#export VERSIONDATE=20210123
#export VERSION=17.1.0
#export VERSIONDATE=20220226
#export VERSION=17.2.0
#export VERSIONDATE=20220420
#export VERSION=17.2.1
#export VERSIONDATE=20220624
export VERSION=17.2.2
export VERSIONDATE=20220722
wl-showstatus --package-version
#export DEPENDANCIES=boost,rocksdb
export DEPENDANCIES=boost,rocksdb,keyutils
####Could not find a package configuration file provided by "boost_python"
export OPTIONALDEPENDANCIES=
export BUILDDEPENDANCIES=cmake
export LICENSEFILE=COPYING
export LICENSETYPE=LGPL
#export DOWNLOADURL="https://github.com/ceph/ceph/releases"
export DOWNLOADURL="https://github.com/ceph/ceph/tags"
export INSTALLPREFIX=`pwd`/inst_$BASENAME-$VERSION
#export DOWNLOADSOURCEURL=https://github.com/ceph/ceph/archive/v$VERSION.tar.gz
export DOWNLOADSOURCEURL=https://github.com/ceph/ceph/archive/refs/tags/v$VERSION.tar.gz
wl-showstatus download
wl-download -v -d $TARBALLDIR/$BASENAME $DOWNLOADSOURCEURL
wl-wait4deps
wl-showstatus extract
tar xfz $TARBALLDIR/$BASENAME/v$VERSION.tar.gz
cd $BASENAME-$VERSION
sed -i.bak -e "s/message.*Unaligned access is required/#&/" cmake/modules/CephChecks.cmake
#mkdir -p build_test && cd build_test && cmake.exe -G"MSYS Makefiles" .. -LH && echo OK; cd ..; rm -rf build_test
#rm -rf CMakeCache.txt CMakeFiles; cmake.exe -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release . -LH && echo OK
#export BUILDDEPENDANCIES=cmake
#PATH=$PATH:$MINGWPREFIX/qt/bin QTDIR=$MINGWPREFIX/qt QMAKESPEC=$MINGWPREFIX/qt/mkspecs/win32-g++ 
mkdir -p build_win &&
 wl-showstatus configure &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOATH_LIBRARY:PATH=$MINGWPREFIX/lib -DOATH_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DWITH_RDMA:BOOL=OFF -DWITH_LTTNG:BOOL=OFF -DWITH_BABELTRACE:BOOL=OFF -DWITH_SYSTEM_BOOST:BOOL=ON -DWITH_SYSTEM_ROCKSDB:BOOL=ON -DWITH_MANPAGE:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DWITH_PYTHON2:BOOL=OFF -DWITH_PYTHON3:BOOL=ON -DPYTHON_EXECUTABLE:FILEPATH=$PY2DIR/python.exe -DPYTHON3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOATH_LIBRARY:PATH=$MINGWPREFIX/lib -DOATH_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DWITH_RDMA:BOOL=OFF -DWITH_LTTNG:BOOL=OFF -DWITH_BABELTRACE:BOOL=OFF -DWITH_SYSTEM_BOOST:BOOL=ON -DWITH_SYSTEM_ROCKSDB:BOOL=ON -DWITH_MANPAGE:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DWITH_PYTHON2:BOOL=OFF -DWITH_PYTHON3:BOOL=ON -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPython3_INCLUDE_DIR:PATH=$PYDIR/include -DPython3_LIBRARY:PATH=$PYDIR/lib -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOATH_LIBRARY:PATH=$MINGWPREFIX/lib -DOATH_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DWITH_RDMA:BOOL=OFF -DWITH_LTTNG:BOOL=OFF -DWITH_BLUESTORE:BOOL=OFF -DWITH_BABELTRACE:BOOL=OFF -DWITH_SYSTEM_BOOST:BOOL=ON -DWITH_SYSTEM_ROCKSDB:BOOL=ON -DWITH_MANPAGE:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DWITH_PYTHON2:BOOL=OFF -DWITH_PYTHON3:BOOL=OFF -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOATH_LIBRARY:PATH=$MINGWPREFIX/lib -DOATH_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DWITH_RDMA:BOOL=OFF -DWITH_LTTNG:BOOL=OFF -DWITH_BLUESTORE:BOOL=OFF -DWITH_BABELTRACE:BOOL=OFF -DWITH_SYSTEM_BOOST:BOOL=ON -DWITH_SYSTEM_ROCKSDB:BOOL=ON -DWITH_MANPAGE:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DWITH_PYTHON2:BOOL=OFF -DWITH_PYTHON3:STRING=$($PYDIR/python --version|sed -e "s/^.*\s\([0-9.]*\)$/\1/") -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DPython3_INCLUDE_DIR:PATH=$PYDIR/include -DPython3_LIBRARY:PATH=$PYDIR/lib -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOATH_LIBRARY:PATH=$MINGWPREFIX/lib -DOATH_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DWITH_RDMA:BOOL=OFF -DWITH_LTTNG:BOOL=OFF -DWITH_BLUESTORE:BOOL=OFF -DWITH_BABELTRACE:BOOL=OFF -DWITH_SYSTEM_BOOST:BOOL=ON -DWITH_SYSTEM_ROCKSDB:BOOL=ON -DWITH_MANPAGE:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DWITH_PYTHON2:BOOL=OFF -DWITH_PYTHON3:STRING=$($PYDIR/python --version|sed -e "s/^.*\s\([0-9.]*\)$/\1/") -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOATH_LIBRARY:PATH=$MINGWPREFIX/lib -DOATH_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DWITH_RDMA:BOOL=OFF -DWITH_LTTNG:BOOL=OFF -DWITH_BLUESTORE:BOOL=OFF -DWITH_BABELTRACE:BOOL=OFF -DWITH_SYSTEM_BOOST:BOOL=ON -DWITH_SYSTEM_ROCKSDB:BOOL=ON -DWITH_MANPAGE:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DWITH_PYTHON2:BOOL=OFF -DWITH_PYTHON3:STRING=$($PYDIR/python --version|sed -e "s/^.*\s\([0-9.]*\)$/\1/") -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DPYTHON_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #cmake.exe -Wno-dev -G"MSYS Makefiles" -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DOATH_LIBRARY:PATH=$MINGWPREFIX/lib -DOATH_INCLUDE_DIR:PATH=$MINGWPREFIX/include -DWITH_RDMA:BOOL=OFF -DWITH_LTTNG:BOOL=OFF -DWITH_BLUESTORE:BOOL=OFF -DWITH_BABELTRACE:BOOL=OFF -DWITH_SYSTEM_BOOST:BOOL=ON -DWITH_SYSTEM_ROCKSDB:BOOL=ON -DWITH_MANPAGE:BOOL=OFF -DWITH_TESTS:BOOL=OFF -DWITH_PYTHON2:BOOL=OFF -DWITH_PYTHON3:STRING=$($PYDIR/python --version|sed -e "s/^.*\s\([0-9.]*\)$/\1/") -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -S. -Bbuild_win &&
 #wl-showstatus build &&
 #make -Cbuild_win &&
 wl-showstatus build-install &&
 make -Cbuild_win install/strip &&
    echo OK

#export DEPENDANCIES=boost,rocksdb,keyutils,arrow,parquet
#export BUILDDEPENDANCIES=cmake,ninja,sphinx
#touch src/lua/CMakeLists.txt
#mkdir -p build_static build_shared &&
# wl-showstatus configure &&
# PATH=$PYDIR:$PATH cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=OFF -DENABLE_SHARED:BOOL=OFF -DWITH_RDMA:BOOL=OFF -DWITH_BLUESTORE:BOOL=OFF -DWITH_LTTNG:BOOL=OFF -DWITH_SYSTEM_ARROW:BOOL=ON -DWITH_SYSTEM_BOOST:BOOL=ON -DWITH_SYSTEM_NPM:BOOL=OFF -DWITH_SYSTEM_ROCKSDB:BOOL=ON -DWITH_SYSTEM_UTF8PROC:BOOL=ON -DWITH_SYSTEM_ZSTD:BOOL=ON -DWITH_SYSTEMD:BOOL=OFF -DSPHINX_BUILD:FILEPATH=$MINGWPREFIX/python/Scripts/sphinx-build.exe -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DWITH_PYTHON2:BOOL=OFF -DPython3_INCLUDE_DIR:PATH=$PYDIR/include -DBABELTRACE_INCLUDE_DIR:PATH=$MINGWPREFIX/include/babeltrace2 -DBABELTRACE_LIBRARY:STRING=-lbabeltrace2 -DWITH_TESTS:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_static &&
# wl-showstatus configure &&
# PATH=$PYDIR:$PATH cmake.exe -Wno-dev -GNinja -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLPREFIX -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DENABLE_SHARED:BOOL=ON -DWITH_RDMA:BOOL=OFF -DWITH_BLUESTORE:BOOL=OFF -DWITH_LTTNG:BOOL=OFF -DWITH_SYSTEM_ARROW:BOOL=ON -DWITH_SYSTEM_BOOST:BOOL=ON -DWITH_SYSTEM_NPM:BOOL=OFF -DWITH_SYSTEM_ROCKSDB:BOOL=ON -DWITH_SYSTEM_UTF8PROC:BOOL=ON -DWITH_SYSTEM_ZSTD:BOOL=ON -DWITH_SYSTEMD:BOOL=OFF -DSPHINX_BUILD:FILEPATH=$MINGWPREFIX/python/Scripts/sphinx-build.exe -DPython3_EXECUTABLE:FILEPATH=$PYDIR/python.exe -DWITH_PYTHON2:BOOL=OFF -DPython3_INCLUDE_DIR:PATH=$PYDIR/include -DBABELTRACE_INCLUDE_DIR:PATH=$MINGWPREFIX/include/babeltrace2 -DBABELTRACE_LIBRARY:STRING=-lbabeltrace2 -DWITH_TESTS:BOOL=OFF -DPKG_CONFIG_EXECUTABLE:FILEPATH=$(which pkg-config.exe) -S. -Bbuild_shared &&
# ## fix execution of Python scripts
# #sed -i.bak -e "s?\(COMMAND\|POST_BUILD\)\( *=.*\&\& *\)\([^ ]*\)\(\.py\|glib-mkenums\|g-ir-scanner\)\( \)?\1\2$(echo $PYDIR/python.exe|sed -e "s?^/\([a-zA-Z]\)/?\1:\\\\\\\\?; s?/?\\\\\\\\?g") \3\4\5?" build_*/build.ninja &&
# #wl-showstatus build &&
# #ninja -Cbuild_static &&
# #wl-showstatus build &&
# #ninja -Cbuild_shared &&
# wl-showstatus build-install &&
# ninja -Cbuild_static install/strip &&
# wl-showstatus build-install &&
# ninja -Cbuild_shared install/strip &&
#    echo OK

# wl-makepackage -c -d && wl-install -d $BASENAME-$VERSION && cd .. && wl-showstatus cleanup && rm -rf $BASENAME-$VERSION
####Note: Depends on keyutils which is for Linux only



